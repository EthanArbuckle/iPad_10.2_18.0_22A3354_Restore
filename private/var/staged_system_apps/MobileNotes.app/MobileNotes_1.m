uint64_t sub_100158484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  uint64_t v16;
  void *v17;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(void **)(v0 + 32);
  v16 = *(_QWORD *)(v0 + 16);
  v17 = *(void **)(v0 + 24);
  v8 = *(int *)(*(_QWORD *)(v0 + 40) + 24);
  *(_DWORD *)(v0 + 128) = v8;
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v9 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v1, 0, 0, v3, v4, "Parameter title for Find Tables intent", 38, 2);
  *(_QWORD *)(v16 + v8) = EntityProperty<>.init(title:)(v2);
  v10 = swift_allocObject(&unk_10055A298, 32, 7);
  *(_QWORD *)(v0 + 104) = v10;
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v17;
  v11 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v12 = v7;
  v13 = v17;
  v14 = (_QWORD *)swift_task_alloc(v11);
  *(_QWORD *)(v0 + 112) = v14;
  *v14 = v0;
  v14[1] = sub_1001585E0;
  return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 48), sub_10013B0E8, v10, *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001585E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001586EC;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 104));
    v4 = sub_10015864C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10015864C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v1 = *(int *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(void **)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 16);

  swift_release(*(_QWORD *)(v8 + v1));
  sub_100158794(v6, v8);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001586EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(int *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(void **)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);

  swift_release(v2);
  swift_release(*(_QWORD *)(v9 + v3));
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100158794(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TableEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001587D8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  __objc2_prot *v11;

  v10 = 0;
  v4 = objc_msgSend(a1, "existingObjectWithID:error:", a2, &v10);
  v5 = v10;
  if (v4)
  {
    v11 = &OBJC_PROTOCOL___ICTableObject;
    v6 = (void *)swift_dynamicCastObjCProtocolUnconditional(v4, 1, &v11, 0, 0, 0);
    v7 = v5;
    sub_10015739C(v6, a3);
  }
  else
  {
    v8 = v10;
    _convertNSErrorToError(_:)(v5);

    swift_willThrow(v9);
  }
}

uint64_t sub_1001588BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t TableEntity.init(for:in:includeContents:noteContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v5 + 136) = a4;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = type metadata accessor for TableEntity(0);
  *(_QWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 56) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  *(_QWORD *)(v5 + 64) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 72) = v8;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  *(_QWORD *)(v5 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  *(_QWORD *)(v5 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v5 + 104) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001589D4, 0, 0);
}

uint64_t sub_1001589D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;
  void *v16;
  void *v17;

  v1 = v0[12];
  v2 = v0[13];
  v4 = v0[10];
  v3 = v0[11];
  v5 = v0[8];
  v6 = v0[9];
  v7 = v0[2];
  v16 = (void *)v0[3];
  v17 = (void *)v0[4];
  v8 = *(int *)(v0[6] + 24);
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v9 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v1, 0, 0, v3, v4, "Parameter title for Find Tables intent", 38, 2);
  v10 = EntityProperty<>.init(title:)(v2);
  v0[14] = v10;
  *(_QWORD *)(v7 + v8) = v10;
  v11 = dword_1005D1094;
  v12 = v16;
  v13 = v17;
  v14 = (_QWORD *)swift_task_alloc(v11);
  v0[15] = v14;
  *v14 = v0;
  v14[1] = sub_100158B04;
  return TableEntity.init(for:in:includeContents:)(v0[7], v0[3], v0[4]);
}

uint64_t sub_100158B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100158C14;
  else
    v3 = sub_100158B68;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100158B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(void **)(v0 + 24);

  swift_release(v2);
  sub_100158794(v6, v8);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100158C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v8 = *(void **)(v0 + 24);

  swift_release(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static TableEntity.managedObjectID(for:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D10A8 + dword_1005D10A8);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D10AC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100158D18;
  return v7(a1, a2);
}

uint64_t sub_100158D18(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_100158D68(void *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;

  TableID.managedIdentifier.getter();
  v5 = v4;
  v6 = a1;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v8 = objc_msgSend((id)objc_opt_self(ICAttachment), "attachmentWithIdentifier:context:", v7, v6);

  if (v8)
  {
    v9 = objc_msgSend(v8, "objectID");

  }
  else
  {
    v9 = 0;
  }
  *a2 = v9;
}

uint64_t sub_100158E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_100158E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1005D108C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100145358;
  return TableEntity.init(for:in:)(a1, a2, a3);
}

uint64_t sub_100158EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1005D1094);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100145358;
  return TableEntity.init(for:in:includeContents:)(a1, a2, a3);
}

uint64_t sub_100158F48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(dword_1005D109C);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_100130768;
  return TableEntity.init(for:in:includeContents:noteContext:)(a1, a2, a3, a4, a5);
}

uint64_t sub_100158FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D10A8 + dword_1005D10A8);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D10AC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100159034;
  return v7(a1, a2);
}

uint64_t sub_100159034(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_100159088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v6 = sub_100012E18(&qword_1005D1080);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v21 - v10;
  sub_10015A264(a1, (uint64_t)&v21 - v10);
  v12 = type metadata accessor for ManagedEntityContextType(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1
    || (sub_10015A264((uint64_t)v11, (uint64_t)v9),
        v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v9, v12),
        v14 == enum case for ManagedEntityContextType.modern(_:)))
  {
    sub_100012DDC((uint64_t)v11, &qword_1005D1080);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    v17 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v16);
    v19 = v18;
    v15 = swift_release(v16);
    if (v19)
      return v17;
    __break(1u);
  }
  if (v14 != enum case for ManagedEntityContextType.html(_:))
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v9, v12, v15);
  sub_100012DDC((uint64_t)v11, &qword_1005D1080);
  return 0;
}

void sub_10015920C(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_100012E18(&qword_1005D1218);
  v3 = EntityQuerySort.by.getter();
  v4 = EntityQuerySort.order.getter(v2) & 1;
  v5 = type metadata accessor for TableEntity(0);
  v6 = sub_100019C6C(&qword_1005DCC40, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
  LOBYTE(v5) = static EntityQuerySort.Ordering.== infix(_:_:)(v4, 0, v5, v6);
  KeyPath = swift_getKeyPath(&unk_1004558C8, v7);
  v11 = v3;
  v12 = KeyPath;
  v9 = sub_100012E18((uint64_t *)&unk_1005D1220);
  LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(&v12, &v11, v9, &protocol witness table for AnyKeyPath);
  swift_release(v3);
  swift_release(KeyPath);
  v10 = (v5 & 1) == 0;
  if ((v4 & 1) == 0)
    v10 = 2;
  *a1 = v10;
}

uint64_t sub_100159310(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2[4] = a1;
  v2[5] = a2;
  v3 = type metadata accessor for Logger(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TableID(0);
  v2[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[10] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v2[11] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[12] = swift_task_alloc(v8);
  v2[13] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D1080) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v9);
  v2[15] = swift_task_alloc(v9);
  return swift_task_switch(sub_1001593E0, 0, 0);
}

uint64_t sub_1001593E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 120);
  TableID.contextType.getter();
  v2 = type metadata accessor for ManagedEntityContextType(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    v4 = *(_QWORD *)(v0 + 112);
    sub_10015A264(*(_QWORD *)(v0 + 120), v4);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v4, v2);
    if (v5 == enum case for ManagedEntityContextType.modern(_:))
    {
      v6 = *(_QWORD *)(v0 + 104);
      v8 = *(_QWORD *)(v0 + 80);
      v7 = *(_QWORD *)(v0 + 88);
      v9 = *(_QWORD *)(v0 + 72);
      v10 = *(_QWORD *)(v0 + 32);
      v11 = objc_msgSend(*(id *)(v0 + 40), "modernManagedObjectContext");
      *(_QWORD *)(v0 + 128) = v11;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v10, v9);
      v12 = *(unsigned __int8 *)(v8 + 80);
      v13 = (v12 + 16) & ~v12;
      v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
      v15 = swift_allocObject(&unk_10055A350, v14 + 8, v12 | 7);
      *(_QWORD *)(v0 + 136) = v15;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v15 + v13, v6, v9);
      *(_QWORD *)(v15 + v14) = v11;
      v16 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
      v11;
      v17 = (_QWORD *)swift_task_alloc(v16);
      *(_QWORD *)(v0 + 144) = v17;
      v18 = sub_100012E18(&qword_1005D1230);
      *v17 = v0;
      v17[1] = sub_100159808;
      return NSManagedObjectContext.perform<A>(_:)(v0 + 24, sub_10015A320, v15, v18);
    }
    if (v5 == enum case for ManagedEntityContextType.html(_:))
    {
      sub_100012DDC(*(_QWORD *)(v0 + 120), &qword_1005D1080);
LABEL_11:
      v25 = 0;
      goto LABEL_12;
    }
    (*(void (**)(_QWORD, uint64_t))(v3 + 8))(*(_QWORD *)(v0 + 112), v2);
  }
  v20 = *(void **)(v0 + 40);
  v21 = sub_100012DDC(*(_QWORD *)(v0 + 120), &qword_1005D1080);
  TableID.managedIdentifier.getter(v21);
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v20, "managedObjectIDForURIString:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);

  if (!v25)
  {
    v27 = *(_QWORD *)(v0 + 96);
    v28 = *(_QWORD *)(v0 + 72);
    v29 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 32);
    static Logger.link.getter(v26);
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v30, v28);
    v32 = Logger.logObject.getter(v31);
    v34 = static os_log_type_t.error.getter(v32, v33);
    v35 = os_log_type_enabled(v32, v34);
    v36 = *(_QWORD *)(v0 + 96);
    v38 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 80);
    v40 = *(_QWORD *)(v0 + 56);
    v39 = *(_QWORD *)(v0 + 64);
    v41 = *(_QWORD *)(v0 + 48);
    if (v35)
    {
      v54 = *(_QWORD *)(v0 + 64);
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = v40;
      v43 = swift_slowAlloc(32, -1);
      v55 = v43;
      *(_DWORD *)v42 = 136315138;
      v44 = sub_100019C6C(&qword_1005D0B00, (uint64_t (*)(uint64_t))&type metadata accessor for TableID, (uint64_t)&protocol conformance descriptor for TableID);
      v45 = dispatch thunk of CustomStringConvertible.description.getter(v38, v44);
      v47 = v46;
      *(_QWORD *)(v0 + 16) = sub_1003A4190(v45, v46, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v42 + 4);
      v48 = swift_bridgeObjectRelease(v47);
      (*(void (**)(uint64_t, uint64_t, __n128))(v37 + 8))(v36, v38, v48);
      _os_log_impl((void *)&_mh_execute_header, v32, v34, "TableEntity: Unable to resolve managed object ID for entity ID: %s", v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v41);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v37 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    }
    goto LABEL_11;
  }
LABEL_12:
  v49 = *(_QWORD *)(v0 + 112);
  v51 = *(_QWORD *)(v0 + 96);
  v50 = *(_QWORD *)(v0 + 104);
  v52 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(id))(v0 + 8))(v25);
}

uint64_t sub_100159808()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  swift_release(v1);
  return swift_task_switch(sub_100159864, 0, 0);
}

uint64_t sub_100159864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 120);

  v2 = *(_QWORD *)(v0 + 24);
  sub_100012DDC(v1, &qword_1005D1080);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1001598EC()
{
  return sub_100019C6C(&qword_1005D10B0, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

uint64_t sub_100159918()
{
  return sub_100019C6C(&qword_1005D10B8, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

uint64_t sub_100159944()
{
  return sub_100019C6C((unint64_t *)&unk_1005D10C0, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

unint64_t sub_100159974()
{
  unint64_t result;

  result = qword_1005DA250[0];
  if (!qword_1005DA250[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VisibleTablesQuery, &type metadata for VisibleTablesQuery);
    atomic_store(result, qword_1005DA250);
  }
  return result;
}

uint64_t sub_1001599B8()
{
  return sub_100019C6C(&qword_1005D10D0, (uint64_t (*)(uint64_t))&type metadata accessor for TableID, (uint64_t)&protocol conformance descriptor for TableID);
}

uint64_t sub_1001599E4()
{
  return sub_100019C6C(&qword_1005D10D8, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

uint64_t sub_100159A10()
{
  return sub_100019C6C(&qword_1005D10E0, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

uint64_t sub_100159A3C()
{
  return sub_100019C6C(&qword_1005D10E8, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

uint64_t sub_100159A68()
{
  return sub_100019C6C(&qword_1005D10F0, (uint64_t (*)(uint64_t))&type metadata accessor for TableID, (uint64_t)&protocol conformance descriptor for TableID);
}

unint64_t sub_100159A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D10F8;
  if (!qword_1005D10F8)
  {
    v1 = sub_10001537C(&qword_1005D1100);
    result = swift_getWitnessTable(&protocol conformance descriptor for EmptyResolverSpecification<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D10F8);
  }
  return result;
}

uint64_t sub_100159AE4()
{
  return sub_100019C6C(&qword_1005D1108, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

uint64_t sub_100159B10()
{
  return sub_100019C6C(&qword_1005D1110, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
}

uint64_t sub_100159B3C(uint64_t a1)
{
  uint64_t result;

  result = sub_100019C6C(&qword_1005DCC40, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TableEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for TableID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = v14;
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_retain(v14);
    swift_bridgeObjectRetain(v17);
  }
  return a1;
}

uint64_t destroy for TableEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for TableID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release(*(_QWORD *)(a1 + a2[6]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
}

uint64_t initializeWithCopy for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = type metadata accessor for TableID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain(v13);
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t assignWithCopy for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for TableID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(_QWORD *)(a2 + v11);
  v13 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v17 = v16[1];
  v18 = v15[1];
  v15[1] = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t initializeWithTake for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for TableID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for TableEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for TableID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_release(v12);
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100159FA0);
}

uint64_t sub_100159FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for TableID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TableEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015A054);
}

uint64_t sub_10015A054(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for TableID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_10015A0F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[4];

  result = type metadata accessor for TableID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for URL(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
      v5[3] = &unk_100455888;
      swift_initStructMetadata(a1, 256, 4, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TableEntity.SortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10015A1E0 + 4 * byte_100455645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10015A214 + 4 * byte_100455640[v4]))();
}

uint64_t sub_10015A214(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10015A21C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10015A224);
  return result;
}

uint64_t sub_10015A230(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10015A238);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10015A23C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10015A244(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TableEntity.SortType()
{
  return &type metadata for TableEntity.SortType;
}

uint64_t sub_10015A264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D1080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015A2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for TableID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10015A320(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TableID(0);
  sub_100158D68(*(void **)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a1);
}

void sub_10015A37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100145220(v0, (uint64_t)v3, v4);
  v5 = (char *)sub_10015A414 + 4 * byte_1004558F0[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_10015A414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v3 = sub_100012E18(&qword_1005D1448);
  v4 = v2 + *(int *)(v3 + 48);
  v5 = type metadata accessor for URL(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
  v6(v1, v2, v5);
  v6(v1 + *(int *)(v3 + 48), v4, v5);
  return swift_storeEnumTagMultiPayload(v1, v0, 0);
}

id sub_10015A6E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  objc_class *ObjectType;
  void *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  _BYTE *v11;
  id v12;
  id result;
  objc_super v14;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = *(void **)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState);
  v5 = *(_BYTE *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing);
  v6 = *(_BYTE *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker);
  v7 = *(_BYTE *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent);
  v8 = *(_BYTE *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable);
  v9 = *(_BYTE *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated);
  v10 = *(_BYTE *)(v1 + OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented);
  v11 = objc_allocWithZone(ObjectType);
  *(_QWORD *)&v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = v4;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = v5;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = v6;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = v7;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = v8;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = v9;
  v11[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = v10;
  v14.receiver = v11;
  v14.super_class = ObjectType;
  v12 = v4;
  result = objc_msgSendSuper2(&v14, "init");
  a1[3] = ObjectType;
  *a1 = result;
  return result;
}

void sub_10015A858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100145220(v0, (uint64_t)v3, v4);
  v5 = (char *)sub_10015A8EC + 4 * byte_1004558F6[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_10015A8EC()
{
  uint64_t v0;
  _OWORD *v1;
  _OWORD *v2;

  *v1 = *v2;
  return swift_storeEnumTagMultiPayload(v1, v0, 0);
}

uint64_t sub_10015AC08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2, v6);
}

id sub_10015AC6C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v10[5];
  uint64_t v11;

  v5 = (_QWORD *)(a1 + *a3);
  if (!*v5)
    return 0;
  v6 = v5[1];
  v10[4] = *v5;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = a4;
  v10[3] = a5;
  v7 = _Block_copy(v10);
  v8 = v11;
  swift_retain(v6);
  swift_release(v8);
  return v7;
}

id sub_10015AEB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ICSelectionStateModel.ContainerSelectionCompletionBlocks();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10015AFEC(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *ObjectType;
  void *Strong;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  _BYTE *v22;
  uint64_t v23;
  id v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  objc_super v29;
  _QWORD v30[4];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v27 = *(_BYTE *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController);
  v25 = *(_BYTE *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented);
  v26 = *(_BYTE *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController);
  v6 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote);
  v7 = *(_BYTE *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded);
  v8 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent);
  v9 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing);
  v10 = *(_BYTE *)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated);
  v11 = *(void **)(v2 + OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks);
  if (v11)
  {
    v12 = v9;
    v13 = v6;
    v14 = v8;
    v15 = objc_msgSend(v11, "copy");
    _bridgeAnyObjectToAny(_:)(v30, v15);
    swift_unknownObjectRelease(v15, v16);
    v17 = type metadata accessor for ICSelectionStateModel.ContainerSelectionCompletionBlocks();
    if (swift_dynamicCast(&v28, v30, (char *)&type metadata for Any + 8, v17, 6))
      v18 = v28;
    else
      v18 = 0;
  }
  else
  {
    v19 = v9;
    v20 = v6;
    v21 = v8;
    v18 = 0;
  }
  v22 = objc_allocWithZone(ObjectType);
  v23 = swift_unknownObjectWeakInit(&v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController], 0);
  v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = v27;
  swift_unknownObjectWeakAssign(v23, Strong);
  v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = v26;
  v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = v25;
  *(_QWORD *)&v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = v6;
  v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = v7;
  *(_QWORD *)&v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = v8;
  *(_QWORD *)&v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = v9;
  v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = v10;
  *(_QWORD *)&v22[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = v18;
  v29.receiver = v22;
  v29.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v29, "init");

  a1[3] = ObjectType;
  *a1 = v24;
}

uint64_t sub_10015B214(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr))
{
  id v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;

  v5 = a1;
  a4(v10);

  v6 = v11;
  v7 = sub_10012D19C(v10, v11);
  v8 = _bridgeAnythingToObjectiveC<A>(_:)(v7, v6);
  sub_1000153C0(v10);
  return v8;
}

BOOL sub_10015B280(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  BOOL v11;
  _OWORD v13[2];

  if (a3)
  {
    v7 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v13, v8);
    swift_unknownObjectRelease(a3, v9);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v10 = a1;
  }
  v11 = sub_100166514((uint64_t)v13, a4);

  sub_100012DDC((uint64_t)v13, &qword_1005CF190);
  return v11;
}

uint64_t sub_10015B3A0(_QWORD *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  char v24;

  v22 = a2;
  v3 = sub_100012E18(&qword_1005D16A0);
  v20 = *(_QWORD *)(v3 - 8);
  v21 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100012E18(&qword_1005D16A8);
  v6 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D16B0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_10012D19C(a1, v13);
  v15 = sub_1001669C8();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.SelectionReason.CodingKeys, &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys, v15, v13, v14);
  if ((v22 & 1) != 0)
  {
    v24 = 1;
    v17 = sub_100166A0C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys, &v24, v9, &type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys, v17);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v21);
  }
  else
  {
    v23 = 0;
    v16 = sub_100166A50();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys, &v23, v9, &type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys, v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10015B570()
{
  _BYTE *v0;

  if (*v0)
    return 1802398060;
  else
    return 0x6669636570736E75;
}

uint64_t sub_10015B5AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001665A4(a1, a2);
  *a3 = result;
  return result;
}

void sub_10015B5D0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10015B5DC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001669C8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015B604(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001669C8();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10015B62C()
{
  return 0;
}

uint64_t sub_10015B638@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

void sub_10015B664(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10015B670(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100166A0C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015B698(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100166A0C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10015B6C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100166A50();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015B6E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100166A50();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10015B710@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_10016669C(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_10015B73C(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_10015B3A0(a1, *v1);
}

uint64_t sub_10015B9A8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  _BYTE v18[24];

  v3 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v3);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v10, v18, 0, 0);
  sub_100012CE8(v10, (uint64_t)v5, &qword_1005D1508);
  v11 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v12 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11) != 1)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v11);
    if ((EnumCaseMultiPayload - 2) >= 4)
    {
      if (EnumCaseMultiPayload)
      {
        v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v15(v9, v5, v6);
      }
      else
      {
        v14 = sub_100012E18(&qword_1005D1448);
        v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v15(v9, &v5[*(int *)(v14 + 48)], v6);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
      }
      v15(a1, v9, v6);
      v12 = 0;
    }
    else
    {
      sub_100145264((uint64_t)v5, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v12, 1, v6);
}

id sub_10015BBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;
  objc_super v18;
  _BYTE v19[24];

  v1 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v17 - v9;
  v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess(v11, v19, 0, 0);
  sub_100012CE8(v11, (uint64_t)v3, &qword_1005D1500);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    sub_10013B170((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_100145220((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    v16 = (char *)&loc_10015BDDC + 4 * byte_100455914[swift_getEnumCaseMultiPayload(v8, v4)];
    __asm { BR              X10 }
  }
  sub_100012DDC((uint64_t)v3, &qword_1005D1500);
  v12 = (objc_class *)type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions();
  v13 = objc_allocWithZone(v12);
  v14 = swift_unknownObjectWeakInit(&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_noteBrowseViewController], 0);
  v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_forceApply] = 0;
  swift_unknownObjectWeakAssign(v14, 0);
  v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_usingRootViewController] = 1;
  v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensurePresented] = 1;
  *(_QWORD *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_ensureSelectedNote] = 0;
  v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_deferUntilDataLoaded] = 1;
  *(_QWORD *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_dismissOverlayContent] = 0;
  *(_QWORD *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_keepEditorShowing] = 0;
  v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_animated] = 1;
  *(_QWORD *)&v13[OBJC_IVAR___ICSelectionStateModelContainerSelectionOptions_completionBlocks] = 0;
  v18.receiver = v13;
  v18.super_class = v12;
  return objc_msgSendSuper2(&v18, "init");
}

id sub_10015BF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  char *v15;
  uint64_t v16;
  objc_super v17;
  _BYTE v18[24];

  v1 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v11 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v11, v18, 0, 0);
  sub_100012CE8(v11, (uint64_t)v3, &qword_1005D1508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    sub_10013B170((uint64_t)v3, (uint64_t)v10, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_100145220((uint64_t)v10, (uint64_t)v8, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    v15 = (char *)&loc_10015C0F0 + 4 * byte_10045591A[swift_getEnumCaseMultiPayload(v8, v4)];
    __asm { BR              X10 }
  }
  sub_100012DDC((uint64_t)v3, &qword_1005D1508);
  v12 = (objc_class *)type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions();
  v13 = objc_allocWithZone(v12);
  *(_QWORD *)&v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_scrollState] = 0;
  v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_startEditing] = 0;
  v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showInkPicker] = 0;
  v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_dismissOverlayContent] = 1;
  v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_showLatestUpdatesIfAvailable] = 1;
  v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_animated] = 1;
  v13[OBJC_IVAR___ICSelectionStateModelObjectSelectionOptions_ensurePresented] = 1;
  v17.receiver = v13;
  v17.super_class = v12;
  return objc_msgSendSuper2(&v17, "init");
}

double sub_10015C218(void *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  _BYTE v17[24];

  v7 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v7);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (objc_msgSend(a1, "ic_isBaseAttachmentType"))
  {
    if (objc_msgSend(a2, "ic_isNoteType"))
    {
      *v9 = a1;
      v9[1] = a2;
      v9[2] = a3;
      v11 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
      swift_storeEnumTagMultiPayload(v9, v11, 3);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
      v12 = v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
      swift_beginAccess(v12, v17, 33, 0);
      v13 = a3;
      v14 = a1;
      v15 = a2;
      sub_100164108((uint64_t)v9, v12, &qword_1005D1508);
      *(_QWORD *)&result = swift_endAccess(v17).n128_u64[0];
    }
  }
  return result;
}

double sub_10015C474(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  _BYTE v17[24];

  v5 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (objc_msgSend(a1, "ic_isNoteType"))
  {
    if (!objc_msgSend(a1, "ic_isNoteType"))
      return result;
    *v7 = a1;
    v7[1] = a2;
    v9 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    v10 = v7;
    v11 = v9;
    v12 = 4;
    goto LABEL_7;
  }
  if (objc_msgSend(a1, "ic_isInvitationType") && objc_msgSend(a1, "ic_isInvitationType"))
  {
    *v7 = a1;
    v7[1] = a2;
    v9 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    v10 = v7;
    v11 = v9;
    v12 = 5;
LABEL_7:
    swift_storeEnumTagMultiPayload(v10, v11, v12);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
    v13 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
    swift_beginAccess(v13, v17, 33, 0);
    v14 = a2;
    v15 = a1;
    sub_100164108((uint64_t)v7, v13, &qword_1005D1508);
    *(_QWORD *)&result = swift_endAccess(v17).n128_u64[0];
  }
  return result;
}

double sub_10015C5CC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v5 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = objc_msgSend(a1, "copy");
  _bridgeAnyObjectToAny(_:)(v17, v8);
  swift_unknownObjectRelease(v8, v9);
  v10 = sub_1000163BC(0, &qword_1005D67D0, ICTagSelection_ptr);
  if (swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v10, 6))
  {
    *v7 = v16;
    v7[1] = a2;
    v12 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    swift_storeEnumTagMultiPayload(v7, v12, 3);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
    v13 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
    swift_beginAccess(v13, v17, 33, 0);
    v14 = a2;
    sub_100164108((uint64_t)v7, v13, &qword_1005D1500);
    *(_QWORD *)&result = swift_endAccess(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_10015C714(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _BYTE v26[24];

  v5 = sub_100012E18(&qword_1005D1500);
  result = __chkstk_darwin(v5);
  v8 = (uint64_t *)&v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    swift_unknownObjectRetain(a1);
    v9 = objc_opt_self(NSManagedObjectID);
    v10 = (void *)swift_dynamicCastObjCClass(a1, v9);
    if (v10)
    {
      v11 = (uint64_t)v10;
      if (objc_msgSend(v10, "ic_isContainerType"))
      {
        *v8 = v11;
        v8[1] = (uint64_t)a2;
        v13 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        v14 = v8;
        v15 = v13;
        v16 = 5;
LABEL_7:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
        v20 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
        swift_beginAccess(v20, v26, 33, 0);
        v21 = a2;
        swift_unknownObjectRetain(a1);
        sub_100164108((uint64_t)v8, v20, &qword_1005D1500);
        swift_endAccess(v26);
        return swift_unknownObjectRelease(a1, v22);
      }
    }
    else
    {
      v17 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
      v18 = swift_dynamicCastObjCClass(a1, v17);
      if (v18)
      {
        *v8 = v18;
        v8[1] = (uint64_t)a2;
        v13 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        v14 = v8;
        v15 = v13;
        v16 = 4;
        goto LABEL_7;
      }
      swift_unknownObjectRelease(a1, v19);
      swift_unknownObjectRetain(a1);
      v23 = objc_opt_self(ICTagSelection);
      v24 = (void *)swift_dynamicCastObjCClass(a1, v23);
      if (v24)
        sub_10015C5CC(v24, a2);
    }
    return swift_unknownObjectRelease(a1, v12);
  }
  return result;
}

uint64_t sub_10015C8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char *v7;
  _BYTE v9[24];

  v1 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v1);
  v3 = v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  v4 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v9, 0, 0);
  sub_100012CE8(v4, (uint64_t)v3, &qword_1005D1508);
  v5 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5);
  if ((_DWORD)result != 1)
  {
    v7 = (char *)&loc_10015C9B8 + 4 * byte_100455920[swift_getEnumCaseMultiPayload(v3, v5)];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_10015CCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  __chkstk_darwin(v6);
  v7 = type metadata accessor for JSONDecoder(0);
  swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v8 = JSONDecoder.init()();
  v9 = sub_100019C6C(&qword_1005D16D8, type metadata accessor for ICSelectionStateModel, (uint64_t)&unk_100455CB8);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v11, v3, a1, a2, v3, v9);
  swift_release(v8);
  return v11;
}

char *sub_10015D178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  objc_class *v8;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  _BYTE v25[24];

  v8 = v7;
  v16 = (char *)objc_msgSend(objc_allocWithZone(v8), "init");
  v17 = (uint64_t)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v25, 33, 0);
  sub_100164108(a1, v17, &qword_1005D1508);
  swift_endAccess(v25);
  v18 = (uint64_t)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
  swift_beginAccess(&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v25, 33, 0);
  sub_100164108(a2, v18, &qword_1005D1500);
  swift_endAccess(v25);
  v19 = &v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID];
  swift_beginAccess(&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID], v25, 1, 0);
  v20 = *(_QWORD *)v19;
  *(_QWORD *)v19 = a3;
  swift_bridgeObjectRelease(v20);
  v21 = *(void **)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection];
  *(_QWORD *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection] = a4;

  *(_QWORD *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode] = a5;
  v22 = *(void **)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult];
  *(_QWORD *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult] = a6;

  v23 = *(void **)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
  *(_QWORD *)&v16[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID] = a7;

  return v16;
}

void sub_10015D2E0(void *a1, id a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  id v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;
  NSURL *v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  id v38;
  NSURL *v39;
  void *v40;
  void *v41;
  unsigned int v42;
  NSURL *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  id v52;
  NSURL *v53;
  void *v54;
  void *v55;
  unsigned int v56;
  NSURL *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  NSURL *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  void (**v79)(void *, uint64_t);
  void *v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  NSURL *v87;
  void *v88;
  void *v89;
  unsigned int v90;
  NSURL *v91;
  id v92;
  uint64_t v93;
  NSURL *v94;
  void *v95;
  void *v96;
  id v97;
  NSURL *v98;
  char *v99;
  void *v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  NSURL *v112;
  void *v113;
  void *v114;
  unsigned int v115;
  NSURL *v116;
  void *v117;
  void *v118;
  id v119;
  uint64_t v120;
  void *v121;
  id v122;
  id v123;
  uint64_t v124;
  id v125;
  void *v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  NSURL *v133;
  void *v134;
  void *v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  NSURL *v140;
  void *v141;
  void *v142;
  unsigned int v143;
  uint64_t v144;
  id v145;
  id v146;
  id v147;
  id v148;
  NSURL *v149;
  void *v150;
  void *v151;
  id v152;
  uint64_t v153;
  void (*v154)(char *, char *, uint64_t);
  void (*v155)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v156;
  id v157;
  uint64_t v158;
  id v159;
  void (*v160)(void *, uint64_t);
  id v161;
  double v162;
  void *v163;
  id v164;
  uint64_t v165;
  id v166;
  uint64_t v167;
  id v168;
  void *v169;
  void *v170;
  void *v171;
  int IsValidURL;
  uint64_t v173;
  uint64_t v174;
  id v175;
  uint64_t v176;
  id v177;
  id v178;
  id v179;
  void (*v180)(void *, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t *v184;
  void (*v185)(void *, uint64_t);
  uint64_t v186;
  unsigned int v187;
  void (*v188)(void *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  void *v193;
  id v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  id v198;
  NSString v199;
  id v200;
  id v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  id v205;
  NSURL *v206;
  void *v207;
  void *v208;
  id v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  _QWORD *v217;
  uint64_t v218;
  id v219;
  id v220;
  _QWORD *v221;
  uint64_t v222;
  id v223;
  _BYTE v224[24];
  _QWORD v225[6];
  __int128 v226;
  __int128 v227;

  v5 = sub_100012E18(&qword_1005CEFD0);
  v6 = __chkstk_darwin(v5);
  v215 = (char *)&v214 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v214 - v8;
  v10 = type metadata accessor for URL(0);
  v222 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v214 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v216 = (char *)&v214 - v14;
  v15 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v15);
  v217 = (uint64_t *)((char *)&v214 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v17);
  v221 = (uint64_t *)((char *)&v214 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = objc_msgSend(objc_allocWithZone(v2), "init");
  v20 = (void *)objc_opt_self(ICNoteContext);
  v21 = (char *)v19;
  v22 = objc_msgSend(v20, "sharedContext");
  v223 = sub_1000A011C();
  if (!v22)
    goto LABEL_21;
  v218 = v10;
  v219 = a2;
  v23 = v21;
  v24 = (void *)objc_opt_self(ICAppURLUtilities);
  v25 = v22;
  v26 = v22;
  URL._bridgeToObjectiveC()(v27);
  v29 = v28;
  v30 = objc_msgSend(v24, "objectIDForModernFolderMentionedInURL:noteContext:", v28, v26);

  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v222 + 8))(a1, v218);
    swift_unknownObjectRelease(v223, v31);

    v32 = v221;
    v33 = v219;
    *v221 = v30;
    v32[1] = v33;
    v34 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    swift_storeEnumTagMultiPayload(v32, v34, 5);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 0, 1, v34);
    v35 = (uint64_t)&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
LABEL_4:
    swift_beginAccess(v35, v225, 33, 0);
    v36 = &qword_1005D1500;
LABEL_5:
    v37 = (uint64_t)v32;
LABEL_6:
    sub_100164108(v37, v35, v36);
    swift_endAccess(v225);
    return;
  }
  v220 = v25;
  v38 = v26;
  URL._bridgeToObjectiveC()(v39);
  v41 = v40;
  v42 = objc_msgSend(v24, "isShowVirtualSmartFolderURL:", v40);

  if (!v42)
  {

    v52 = v38;
    URL._bridgeToObjectiveC()(v53);
    v55 = v54;
    v56 = objc_msgSend(v24, "isShowNoteInVirtualSmartFolderURL:", v54);

    if (v56)
    {
      v58 = a1;
      URL._bridgeToObjectiveC()(v57);
      v60 = v59;
      v61 = objc_msgSend(v52, "managedObjectContext");
      v62 = objc_msgSend(v24, "virtualSmartFolderMentionedInURL:context:", v60, v61);

      v21 = v23;
      if (v62)
      {
        v64 = (uint64_t)v221;
        v65 = v219;
        *v221 = v62;
        *(_QWORD *)(v64 + 8) = v65;
        v66 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        swift_storeEnumTagMultiPayload(v64, v66, 4);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v64, 0, 1, v66);
        v67 = (uint64_t)&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
        swift_beginAccess(&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v225, 33, 0);
        v68 = v65;
        sub_100164108(v64, v67, &qword_1005D1500);
        swift_endAccess(v225);
      }
      URL._bridgeToObjectiveC()(v63);
      v70 = v69;
      v71 = objc_msgSend(v24, "notePredicateFromNoteInVirtualSmartFolderInURL:", v69);

      a1 = (void *)v218;
      if (!v71)
      {
        swift_unknownObjectRelease(v223, v72);

        (*(void (**)(id, void *))(v222 + 8))(v58, a1);
        return;
      }
      v73 = (void *)objc_opt_self(ICNote);
      v74 = v71;
      v75 = objc_msgSend(v52, "managedObjectContext");
      v76 = objc_msgSend(v73, "notesMatchingPredicate:context:", v74, v75);

      v77 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
      v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v76, v77);

      v79 = (void (**)(void *, uint64_t))v219;
      v80 = v52;
      if ((unint64_t)v78 >> 62)
      {
        if (v78 < 0)
          v211 = v78;
        else
          v211 = v78 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v78);
        v212 = _CocoaArrayWrapper.endIndex.getter(v211);
        swift_bridgeObjectRelease(v78);
        v81 = v223;
        if (v212)
        {
LABEL_16:
          if ((v78 & 0xC000000000000001) == 0)
          {
            if (!*(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              return;
            }
            v82 = *(id *)(v78 + 32);
LABEL_19:
            v83 = v82;
            swift_bridgeObjectRelease(v78);
            v84 = objc_msgSend(v83, "objectID");
            swift_unknownObjectRelease(v81, v85);

            (*(void (**)(id, void *))(v222 + 8))(v58, a1);
            v32 = v217;
            *v217 = v84;
            v32[1] = 0;
            v86 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
            swift_storeEnumTagMultiPayload(v32, v86, 4);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v32, 0, 1, v86);
            v35 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
            swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v225, 33, 0);
            v36 = &qword_1005D1508;
            goto LABEL_5;
          }
LABEL_109:
          v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v78);
          goto LABEL_19;
        }
      }
      else
      {
        v81 = v223;
        if (*(_QWORD *)((v78 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_16;
      }

      swift_unknownObjectRelease(v81, v213);
      swift_bridgeObjectRelease(v78);

      (*(void (**)(id, void *))(v222 + 8))(v58, a1);
      return;
    }

    v21 = v23;
    v10 = v218;
    a2 = v219;
    v22 = v220;
LABEL_21:
    v220 = v22;
    v74 = (id)objc_opt_self(ICAppURLUtilities);
    URL._bridgeToObjectiveC()(v87);
    v89 = v88;
    v90 = objc_msgSend(v74, "isShowNoteURL:", v88);

    if (v90)
    {
      v80 = v223;
      v92 = v220;
      if (!v220)
        goto LABEL_89;
      v93 = (uint64_t)v220;
      URL._bridgeToObjectiveC()(v94);
      v96 = v95;
      v97 = objc_msgSend(v74, "predicateForNotesMentionedInURL:", v95);

      if (!v97)
      {
LABEL_83:
        URL._bridgeToObjectiveC()(v98);
        v193 = v192;
        v194 = objc_msgSend(v74, "folderIdentifierForShowNoteURL:", v192);

        if (v194)
        {
          v195 = a2;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v194);
          v197 = v196;

          v198 = objc_msgSend((id)v93, "managedObjectContext");
          v199 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v197);
          v200 = objc_msgSend((id)objc_opt_self(ICFolder), "folderWithIdentifier:context:", v199, v198);

          if (v200)
          {
            v201 = objc_msgSend(v200, "objectID");

            v202 = (uint64_t)v221;
            *v221 = v201;
            *(_QWORD *)(v202 + 8) = v195;
            a2 = v195;
            v203 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
            swift_storeEnumTagMultiPayload(v202, v203, 5);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 56))(v202, 0, 1, v203);
            v204 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
            swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v225, 33, 0);
            v205 = v195;
            sub_100164108(v202, v204, &qword_1005D1500);
            swift_endAccess(v225);
          }
          else
          {

            a2 = v195;
          }
        }
        else
        {

        }
        v92 = v220;
LABEL_89:
        v174 = v222;
        if (!v80)
          goto LABEL_93;
LABEL_90:
        swift_unknownObjectRetain(v80);
        URL._bridgeToObjectiveC()(v206);
        v208 = v207;
        v209 = (id)NotesAppPredicateForNoteMentionedInURL(v207);

        if (v209)
        {
          sub_10015E810((uint64_t)v209, (uint64_t)v80);

          swift_unknownObjectRelease_n(v80, 2);
LABEL_94:

          v160 = *(void (**)(void *, uint64_t))(v174 + 8);
          goto LABEL_95;
        }
        swift_unknownObjectRelease_n(v80, 2);
LABEL_93:

        goto LABEL_94;
      }
      v219 = a2;
      v99 = v21;
      v100 = (void *)objc_opt_self(ICNote);
      v101 = v97;
      v58 = objc_msgSend((id)v93, "managedObjectContext");
      v102 = objc_msgSend(v100, "notesMatchingPredicate:context:", v101, v58);

      v103 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
      v104 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v102, v103);

      if ((unint64_t)v104 >> 62)
      {
        if (v104 < 0)
          v190 = v104;
        else
          v190 = v104 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v104);
        v191 = _CocoaArrayWrapper.endIndex.getter(v190);
        swift_bridgeObjectRelease(v104);
        v21 = v99;
        if (v191)
          goto LABEL_26;
      }
      else
      {
        v21 = v99;
        if (*(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_26:
          v80 = v223;
          if ((v104 & 0xC000000000000001) != 0)
          {
            v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v104);
            goto LABEL_29;
          }
          if (*(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v105 = *(id *)(v104 + 32);
LABEL_29:
            v106 = v105;
            swift_bridgeObjectRelease(v104);
            v107 = objc_msgSend(v106, "objectID");

            v108 = (uint64_t)v217;
            *v217 = v107;
            *(_QWORD *)(v108 + 8) = 0;
            v109 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
            swift_storeEnumTagMultiPayload(v108, v109, 4);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v108, 0, 1, v109);
            v110 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
            swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v225, 33, 0);
            sub_100164108(v108, v110, &qword_1005D1508);
            swift_endAccess(v225);
            a2 = v219;
            goto LABEL_83;
          }
          __break(1u);
          goto LABEL_98;
        }
      }

      swift_bridgeObjectRelease(v104);
      a2 = v219;
      v80 = v223;
      goto LABEL_83;
    }
    v80 = v223;
    v92 = v220;
    if (v220)
    {
      v111 = v220;
      URL._bridgeToObjectiveC()(v112);
      v114 = v113;
      v115 = objc_msgSend(v74, "isShowNoteFocusedInFolderURL:", v113);

      if (v115)
      {
        v220 = v111;
        URL._bridgeToObjectiveC()(v116);
        v118 = v117;
        v119 = objc_msgSend(v74, "predicateForFolderWithNoteFocusedInURL:", v117);

        if (v119)
        {
          v58 = a2;
          v121 = (void *)objc_opt_self(ICNote);
          v74 = v119;
          v122 = objc_msgSend(v220, "managedObjectContext");
          v123 = objc_msgSend(v121, "notesMatchingPredicate:context:", v74, v122);

          v124 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
          v93 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v123, v124);

          v80 = v223;
          if (!((unint64_t)v93 >> 62))
          {
            v78 = *(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_35:
            v81 = v58;
            v79 = (void (**)(void *, uint64_t))v222;
            if (v78)
            {
              if ((v93 & 0xC000000000000001) != 0)
              {
                v125 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v93);
              }
              else
              {
                if (!*(_QWORD *)((v93 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_109;
                }
                v125 = *(id *)(v93 + 32);
              }
              v126 = v125;
              swift_bridgeObjectRelease(v93);
              if (objc_msgSend(v126, "isSystemPaper"))
              {
                v127 = objc_msgSend((id)objc_opt_self(ICAccount), "globalVirtualSystemPaperFolder");
                v128 = (uint64_t)v221;
                *v221 = v127;
                *(_QWORD *)(v128 + 8) = v81;
                v129 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
                v130 = v128;
                v131 = v129;
                v132 = 4;
              }
              else
              {
                v161 = objc_msgSend(v126, "folder");
                if (!v161)
                {
LABEL_60:
                  v166 = objc_msgSend(v126, "objectID", v162);
                  swift_unknownObjectRelease(v80, v167);

                  v168 = v220;
                  v79[1](a1, v10);
                  v169 = *(void **)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
                  *(_QWORD *)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID] = v166;

                  return;
                }
                v163 = v161;
                v164 = objc_msgSend(v161, "objectID");

                v128 = (uint64_t)v221;
                *v221 = v164;
                *(_QWORD *)(v128 + 8) = v81;
                v79 = (void (**)(void *, uint64_t))v222;
                v129 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
                v130 = v128;
                v131 = v129;
                v132 = 5;
              }
              swift_storeEnumTagMultiPayload(v130, v131, v132);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v128, 0, 1, v129);
              v165 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
              swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v225, 33, 0);
              v81 = v81;
              sub_100164108(v128, v165, &qword_1005D1500);
              *(_QWORD *)&v162 = swift_endAccess(v225).n128_u64[0];
              goto LABEL_60;
            }

            swift_unknownObjectRelease(v80, v158);
            v159 = v220;

            swift_bridgeObjectRelease(v93);
            v160 = v79[1];
LABEL_95:
            v160(a1, v10);
            return;
          }
LABEL_98:
          if (v93 < 0)
            v210 = v93;
          else
            v210 = v93 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v93);
          v78 = _CocoaArrayWrapper.endIndex.getter(v210);
          swift_bridgeObjectRelease(v93);
          goto LABEL_35;
        }
        swift_unknownObjectRelease(v223, v120);

        v148 = v220;
LABEL_68:

        v160 = *(void (**)(void *, uint64_t))(v222 + 8);
        goto LABEL_95;
      }

      v92 = v220;
      v80 = v223;
    }
    if (v80)
    {
      swift_unknownObjectRetain(v80);
      URL._bridgeToObjectiveC()(v133);
      v135 = v134;
      v136 = objc_msgSend(v74, "objectIDForHTMLFolderMentionedInURL:context:", v134, v80);

      swift_unknownObjectRelease(v80, v137);
      if (v136)
      {
        swift_unknownObjectRelease(v80, v138);

        (*(void (**)(void *, uint64_t))(v222 + 8))(a1, v10);
        v32 = v221;
        *v221 = v136;
        v32[1] = 0;
        goto LABEL_45;
      }
      swift_unknownObjectRetain(v80);
      URL._bridgeToObjectiveC()(v140);
      v142 = v141;
      v143 = objc_msgSend(v74, "isShowDefaultFolderURL:", v141);

      if (v143)
      {
        v145 = objc_msgSend((id)objc_opt_self(ICDefaultAccountUtilities), "defaultFolderWithHTMLNoteContext:", v80);
        if (!v145)
        {
          swift_unknownObjectRelease_n(v80, 2);

          goto LABEL_68;
        }
        v146 = v145;
        v147 = objc_msgSend(v146, "objectID");

        swift_unknownObjectRelease_n(v80, 2);
        (*(void (**)(void *, uint64_t))(v222 + 8))(a1, v10);
        v32 = v221;
        *v221 = v147;
        v32[1] = a2;
LABEL_45:
        v139 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
        swift_storeEnumTagMultiPayload(v32, v139, 5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v32, 0, 1, v139);
        v35 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
        goto LABEL_4;
      }
      swift_unknownObjectRelease(v80, v144);
      swift_unknownObjectRetain(v80);
      URL._bridgeToObjectiveC()(v149);
      v151 = v150;
      v152 = objc_msgSend(v74, "objectIDURIRepresentationForHTMLNoteMentionedInURL:", v150);

      if (v152)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v152);

        v153 = v222;
        v154 = *(void (**)(char *, char *, uint64_t))(v222 + 32);
        v154(v9, v13, v10);
        v155 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56);
        v155(v9, 0, 1, v10);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v9, 1, v10) != 1)
        {
          v154(v216, v9, v10);
          if (v220)
            v157 = objc_msgSend(v220, "managedObjectContext");
          else
            v157 = 0;
          v175 = objc_msgSend(v80, "managedObjectContext");
          v176 = (uint64_t)v215;
          (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v215, v216, v10);
          v155((char *)v176, 0, 1, v10);
          v225[0] = variable initialization expression of AsyncChannel.Iterator.active;
          v225[1] = 0;
          v225[2] = variable initialization expression of AsyncChannel.Iterator.active;
          v225[3] = 0;
          v225[4] = v157;
          v225[5] = v175;
          v226 = 0u;
          v227 = 0u;
          v177 = v157;
          v178 = v175;
          v179 = sub_100192D2C(v176, (uint64_t)v225);

          sub_100012DDC(v176, &qword_1005CEFD0);
          if (!v179)
          {

            swift_unknownObjectRelease_n(v80, 2);
            v185 = *(void (**)(void *, uint64_t))(v153 + 8);
            v185(a1, v10);
            v185(v216, v10);
            return;
          }
          if ((objc_msgSend(v179, "ic_isContainerType") & 1) != 0)
          {

            swift_unknownObjectRelease_n(v80, 2);
            v180 = *(void (**)(void *, uint64_t))(v153 + 8);
            v180(a1, v10);
            v180(v216, v10);
            v181 = (uint64_t)v221;
            *v221 = v179;
            *(_QWORD *)(v181 + 8) = a2;
            v182 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
            swift_storeEnumTagMultiPayload(v181, v182, 5);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 56))(v181, 0, 1, v182);
            v183 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
            swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v224, 33, 0);
            v184 = &qword_1005D1500;
          }
          else
          {
            v186 = v153;
            v187 = objc_msgSend(v179, "ic_isNoteType");

            swift_unknownObjectRelease_n(v80, 2);
            v188 = *(void (**)(void *, uint64_t))(v186 + 8);
            v188(a1, v10);
            v188(v216, v10);
            if (!v187)
            {

              return;
            }
            v181 = (uint64_t)v217;
            *v217 = v179;
            *(_QWORD *)(v181 + 8) = 0;
            v189 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
            swift_storeEnumTagMultiPayload(v181, v189, 4);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v189 - 8) + 56))(v181, 0, 1, v189);
            v183 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
            swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v224, 33, 0);
            v184 = &qword_1005D1508;
          }
          sub_100164108(v181, v183, v184);
          swift_endAccess(v224);
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v222 + 56))(v9, 1, 1, v10);
      }
      swift_unknownObjectRelease(v80, v156);
      sub_100012DDC((uint64_t)v9, &qword_1005CEFD0);
      v92 = v220;
    }
    URL._bridgeToObjectiveC()(v91);
    v171 = v170;
    IsValidURL = NotesAppIsValidURL(v170);

    if (IsValidURL)
    {
      v174 = v222;
      if (!v80)
        goto LABEL_93;
      goto LABEL_90;
    }
    swift_unknownObjectRelease(v80, v173);

    goto LABEL_68;
  }
  URL._bridgeToObjectiveC()(v43);
  v45 = v44;
  v46 = objc_msgSend(v38, "managedObjectContext");
  v47 = objc_msgSend(v24, "virtualSmartFolderMentionedInURL:context:", v45, v46);
  swift_unknownObjectRelease(v223, v48);

  (*(void (**)(void *, uint64_t))(v222 + 8))(a1, v218);
  if (v47)
  {
    v49 = v221;
    v50 = v219;
    *v221 = v47;
    v49[1] = v50;
    v51 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    swift_storeEnumTagMultiPayload(v49, v51, 4);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v49, 0, 1, v51);
    v35 = (uint64_t)&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
    swift_beginAccess(&v23[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v225, 33, 0);
    v36 = &qword_1005D1500;
    v37 = (uint64_t)v49;
    goto LABEL_6;
  }

}

void sub_10015E810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  __int128 v20;
  __int128 v21;

  v5 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = objc_opt_self(NoteContext);
  v9 = (void *)swift_dynamicCastObjCClass(a2, v8);
  if (!v9
    || (v10 = objc_msgSend(v9, "allVisibleNotesMatchingPredicate:sorted:", a1, 1)) == 0
    || (v11 = v10,
        v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, (char *)&type metadata for Any + 8),
        v11,
        !v12))
  {
    v20 = 0u;
    v21 = 0u;
    goto LABEL_9;
  }
  if (!*(_QWORD *)(v12 + 16))
  {
    v20 = 0u;
    v21 = 0u;
    swift_bridgeObjectRelease(v12);
    goto LABEL_9;
  }
  sub_100128424(v12 + 32, (uint64_t)&v20);
  swift_bridgeObjectRelease(v12);
  if (!*((_QWORD *)&v21 + 1))
  {
LABEL_9:
    sub_100012DDC((uint64_t)&v20, &qword_1005CF190);
    return;
  }
  v13 = sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
  if ((swift_dynamicCast(&v19, &v20, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
  {
    v14 = v19;
    v15 = objc_msgSend(v19, "objectID");

    *v7 = v15;
    v7[1] = 0;
    v16 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    swift_storeEnumTagMultiPayload(v7, v16, 4);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 0, 1, v16);
    v17 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
    swift_beginAccess(v17, &v20, 33, 0);
    sub_100164108((uint64_t)v7, v17, &qword_1005D1508);
    swift_endAccess(&v20);
  }
}

uint64_t sub_10015EA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::String v8;
  uint64_t v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  void *v15;
  Swift::String v16;
  id v17;
  uint64_t v18;
  Swift::String v19;
  void *v20;
  uint64_t v22;
  id v23;
  _BYTE v24[24];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v1 = v0;
  v2 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(78);
  v27 = v25;
  v28 = v26;
  v8._object = (void *)0x800000010047BF30;
  v8._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v8);
  v9 = v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess(v9, &v25, 0, 0);
  sub_100012CE8(v9, (uint64_t)v7, &qword_1005D1500);
  v10._countAndFlagsBits = String.init<A>(describing:)(v7, v5);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12._object = (void *)0x800000010047BF50;
  v12._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v12);
  v13 = v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v24, 0, 0);
  sub_100012CE8(v13, (uint64_t)v4, &qword_1005D1508);
  v14._countAndFlagsBits = String.init<A>(describing:)(v4, v2);
  v15 = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0xD000000000000020;
  v16._object = (void *)0x800000010047BF70;
  String.append(_:)(v16);
  v23 = *(id *)(v1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  v17 = v23;
  v18 = sub_100012E18(&qword_1005D16C0);
  v19._countAndFlagsBits = String.init<A>(describing:)(&v23, v18);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  return v27;
}

char *sub_10015ED64(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void *v37;
  id v38;
  char *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD v52[3];
  int v53;
  char *v54;
  uint64_t ObjectType;
  uint64_t v56;
  _QWORD v57[4];
  _BYTE v58[24];
  _BYTE v59[24];
  _BYTE v60[24];

  v3 = v2;
  v52[2] = a2;
  v53 = a1;
  ObjectType = swift_getObjectType(v2);
  v4 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v8);
  v54 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v14);
  v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v60, 0, 0);
  v18 = 1;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10))
  {
    sub_100145220(v17, (uint64_t)v13, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_10015A37C();
    sub_100145264((uint64_t)v13, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    v18 = 0;
  }
  v19 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v16, v18, 1, v10);
  v20 = v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, v59, 0, 0);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v20, 1, v4);
  v22 = (uint64_t)v54;
  if (!v21)
  {
    sub_100145220(v20, (uint64_t)v7, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_10015A858();
    sub_100145264((uint64_t)v7, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    v19 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v22, v19, 1, v4);
  v23 = (uint64_t *)(v3
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID, v58, 0, 0);
  v24 = *v23;
  v25 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamSelection);
  if (v25)
  {
    v26 = objc_msgSend(v25, "copy", swift_bridgeObjectRetain(v24).n128_f64[0]);
    _bridgeAnyObjectToAny(_:)(v57, v26);
    swift_unknownObjectRelease(v26, v27);
    v28 = sub_1000163BC(0, &qword_1005D1658, ICActivityStreamSelection_ptr);
    if (swift_dynamicCast(&v56, v57, (char *)&type metadata for Any + 8, v28, 6))
      v29 = v56;
    else
      v29 = 0;
  }
  else
  {
    swift_bridgeObjectRetain(v24);
    v29 = 0;
  }
  v30 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentActivityStreamViewMode);
  v31 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  if (v31)
  {
    v32 = objc_msgSend(v31, "copy");
    _bridgeAnyObjectToAny(_:)(v57, v32);
    swift_unknownObjectRelease(v32, v33);
    v34 = sub_1000163BC(0, &qword_1005D1660, ICSearchResult_ptr);
    if (swift_dynamicCast(&v56, v57, (char *)&type metadata for Any + 8, v34, 6))
      v35 = v56;
    else
      v35 = 0;
  }
  else
  {
    v35 = 0;
  }
  v36 = v53;
  v37 = *(void **)(v3 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  v38 = v37;
  v39 = sub_10015D178((uint64_t)v16, v22, v24, v29, v30, v35, (uint64_t)v37);
  if ((v36 & 1) != 0)
  {
    v40 = (void *)sub_100018D60();
    if (v40)
    {
      v41 = v40;
      sub_10015C5CC(v40, 0);
LABEL_26:

      sub_10015C8D8();
      return v39;
    }
    v42 = sub_100018628();
    if (v42)
    {
      v43 = v42;
      v44 = objc_opt_self(NSManagedObjectID);
      v45 = swift_dynamicCastObjCClass(v43, v44);
      if (v45)
        goto LABEL_25;
      swift_unknownObjectRelease(v43, v46);
    }
    v47 = sub_100018628();
    if (!v47)
    {
LABEL_24:
      v45 = sub_100018D60();
      goto LABEL_25;
    }
    v48 = v47;
    v49 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
    v45 = swift_dynamicCastObjCClass(v48, v49);
    if (!v45)
    {
      swift_unknownObjectRelease(v48, v50);
      goto LABEL_24;
    }
LABEL_25:
    v41 = (void *)v45;
    sub_10015C714(v45, 0);
    goto LABEL_26;
  }
  return v39;
}

uint64_t sub_10015F1B8()
{
  return type metadata accessor for ICSelectionStateModel(0);
}

uint64_t type metadata accessor for ICSelectionStateModel.ObjectSelectionOptions()
{
  return objc_opt_self(ICSelectionStateModelObjectSelectionOptions);
}

uint64_t type metadata accessor for ICSelectionStateModel.ContainerSelectionCompletionBlocks()
{
  return objc_opt_self(ICSelectionStateModelContainerSelectionOptionsCompletionBlocks);
}

uint64_t type metadata accessor for ICSelectionStateModel.ContainerSelectionOptions()
{
  return objc_opt_self(ICSelectionStateModelContainerSelectionOptions);
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason()
{
  return &type metadata for ICSelectionStateModel.SelectionReason;
}

uint64_t sub_10015F234(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_10015F288 + 4 * byte_100455926[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

void sub_10015F420(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      sub_10013DD30(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      break;
    case 1u:
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
      v3 = a1 + *(int *)(sub_100012E18(&qword_1005D1398) + 48);
      v4 = type metadata accessor for URL(0);
      v5 = *(_QWORD *)(v4 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      {
        v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
        v8 = v3;
        v6 = v4;
        goto LABEL_8;
      }
      break;
    case 2u:
      v6 = type metadata accessor for URL(0);
      v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v8 = a1;
LABEL_8:
      v7(v8, v6);
      break;
    case 3u:
    case 4u:
    case 5u:

      break;
    default:
      return;
  }
}

void sub_10015F518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_10015F560 + 4 * byte_100455932[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t *sub_10015F560()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *v2;
  v4 = v2[1];
  sub_10013DCA0(v3, v4);
  *v0 = v3;
  v0[1] = v4;
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_10015F6D8(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_100145264(result, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    v5 = (char *)&loc_10015F738 + 4 * byte_100455938[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *sub_10015F8D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v13 = type metadata accessor for URL(0);
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    v14 = a1;
    v15 = a3;
    v16 = 2;
LABEL_9:
    swift_storeEnumTagMultiPayload(v14, v15, v16);
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(sub_100012E18(&qword_1005D1398) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100012E18(&qword_1005CEFD0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a1;
    v15 = a3;
    v16 = 1;
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_10015FA14(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v13 = type metadata accessor for URL(0);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = a1;
      v15 = a3;
      v16 = 2;
LABEL_10:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(sub_100012E18(&qword_1005D1398) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for URL(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100012E18(&qword_1005CEFD0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10015FB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_10015FB84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_10015FBD8 + 4 * byte_10045593E[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

void sub_10015FD30(id *a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(id *, uint64_t);
  id *v5;
  uint64_t v6;
  void (*v7)(id *, uint64_t);

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v6 = type metadata accessor for URL(0);
      v7 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v7(a1, v6);
      v5 = (id *)((char *)a1 + *(int *)(sub_100012E18(&qword_1005D1448) + 48));
      v3 = v6;
      v4 = v7;
      goto LABEL_5;
    case 1u:
    case 2u:
      v3 = type metadata accessor for URL(0);
      v4 = *(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v5 = a1;
LABEL_5:
      v4(v5, v3);
      break;
    case 3u:

      break;
    case 4u:
    case 5u:

      break;
    default:
      return;
  }
}

void sub_10015FE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_10015FE68 + 4 * byte_10045594A[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

uint64_t sub_10015FE68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v3 = type metadata accessor for URL(0);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16);
  v4(v0, v2, v3);
  v5 = sub_100012E18(&qword_1005D1448);
  v4(v0 + *(int *)(v5 + 48), v2 + *(int *)(v5 + 48), v3);
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t sub_10015FFA0(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_100145264(result, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    v5 = (char *)&loc_100160000 + 4 * byte_100455950[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

char *sub_100160150(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 2)
  {
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = sub_100012E18(&qword_1005D1448);
    v8(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_10016027C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for URL(0);
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = sub_100012E18(&qword_1005D1448);
      v8(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibleNotesQuery.Comparator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for VisibleNotesQuery.Comparator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

unint64_t sub_1001603DC()
{
  unint64_t result;

  result = qword_1005D14F8;
  if (!qword_1005D14F8)
  {
    result = swift_getWitnessTable(&unk_100455B78, &type metadata for ICSelectionStateModel.SelectionReason);
    atomic_store(result, (unint64_t *)&qword_1005D14F8);
  }
  return result;
}

uint64_t sub_100160420(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100160460 + 4 * byte_100455956[a1]))(0x65537463656A626FLL, 0xEF6E6F697463656CLL);
}

unint64_t sub_100160460()
{
  return 0xD000000000000012;
}

uint64_t sub_10016047C()
{
  return 0x6F697463656C6573;
}

unint64_t sub_1001604A0()
{
  return 0xD000000000000035;
}

uint64_t sub_1001604D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100160518 + 4 * byte_10045595B[a1]))(0x65537463656A626FLL, 0xEF6E6F697463656CLL);
}

unint64_t sub_100160518()
{
  return 0xD000000000000012;
}

uint64_t sub_100160534()
{
  return 0x6F697463656C6573;
}

unint64_t sub_100160558()
{
  return 0xD000000000000035;
}

void sub_100160590(char *a1)
{
  sub_10021581C(*a1);
}

void sub_10016059C()
{
  char *v0;

  sub_1001FAC94(*v0);
}

void sub_1001605A4(uint64_t a1)
{
  char *v1;

  sub_1001FB02C(a1, *v1);
}

void sub_1001605AC(uint64_t a1)
{
  char *v1;

  sub_1001FB6B8(a1, *v1);
}

unint64_t sub_1001605B4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100167FB8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001605E0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100160420(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100160608()
{
  unsigned __int8 *v0;

  return sub_1001604D8(*v0);
}

unint64_t sub_100160610@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100167FB8(a1);
  *a2 = result;
  return result;
}

void sub_100160634(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100160640(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100164080();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100160668(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100164080();
  return CodingKey.debugDescription.getter(a1, v2);
}

_BYTE *sub_100160690(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  _QWORD v50[3];
  char v51;

  v4 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v4);
  v46 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v6);
  v45 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v8);
  v47 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D1510);
  __chkstk_darwin(v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D1518);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v48 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone(v1), "init");
  v18 = a1[3];
  v17 = a1[4];
  v49 = a1;
  sub_10012D19C(a1, v18);
  v19 = sub_100164080();
  v20 = v16;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.SelectionItem, &type metadata for ICSelectionStateModel.SelectionItem, v19, v18, v17);
  if (v2)
  {
    swift_errorRelease(v2);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);

    sub_100012DDC((uint64_t)v12, &qword_1005D1510);
    v21 = v20;
  }
  else
  {
    v23 = (uint64_t)v45;
    v22 = (uint64_t)v46;
    v24 = v20;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
    v44 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v48, v12, v13);
    v25 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
    LOBYTE(v50[0]) = 0;
    v26 = sub_100019C6C(&qword_1005D1528, type metadata accessor for ICSelectionStateModel.ObjectSelection, (uint64_t)&unk_100455C68);
    v27 = (uint64_t)v47;
    v43 = v13;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v25, v50, v13, v25, v26);
    v21 = v24;
    v28 = (uint64_t)&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
    swift_beginAccess(&v24[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v50, 33, 0);
    sub_100164108(v27, v28, &qword_1005D1508);
    swift_endAccess(v50);
    v29 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
    LOBYTE(v50[0]) = 1;
    v30 = sub_100019C6C(&qword_1005D1530, type metadata accessor for ICSelectionStateModel.ContainerSelection, (uint64_t)&unk_100455BF0);
    v31 = v43;
    v32 = v48;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v29, v50, v43, v29, v30);
    v33 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
    swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], v50, 33, 0);
    sub_100164108(v23, v33, &qword_1005D1500);
    swift_endAccess(v50);
    v51 = 2;
    v34 = sub_1001640C4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&type metadata for ICSelectionStateModel.SelectionReason, &v51, v31, &type metadata for ICSelectionStateModel.SelectionReason, v34);
    v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason] = v50[0] & 1;
    v35 = sub_100012E18(&qword_1005D1540);
    v51 = 3;
    v36 = sub_10016430C(&qword_1005D1548, &qword_1005D1550, (uint64_t)&protocol conformance descriptor for URL, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v35, &v51, v31, v35, v36);
    v37 = v44;
    v38 = *(_QWORD *)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL];
    *(_QWORD *)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL] = v50[0];
    swift_bridgeObjectRelease(v38);
    v39 = type metadata accessor for URL(0);
    LOBYTE(v50[0]) = 4;
    v40 = sub_100019C6C(&qword_1005D1550, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v39, v50, v31, v39, v40);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v31);

    v41 = (uint64_t)&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL];
    swift_beginAccess(&v21[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL], v50, 33, 0);
    sub_100164108(v22, v41, &qword_1005CEFD0);
    swift_endAccess(v50);
  }
  sub_1000153C0(v49);
  return v21;
}

uint64_t sub_100160C60(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  id v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  _BYTE v49[24];
  char v50[24];
  char v51;

  v2 = v1;
  v40 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v40);
  v41 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v44 = v6;
  __chkstk_darwin(v5);
  v42 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v46);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D1558);
  v47 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  sub_10012D19C(a1, v16);
  v18 = sub_100164080();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.SelectionItem, &type metadata for ICSelectionStateModel.SelectionItem, v18, v16, v17);
  v19 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v50, 0, 0);
  sub_100012CE8(v19, (uint64_t)v12, &qword_1005D1508);
  v49[0] = 0;
  v20 = sub_10016414C();
  v21 = v45;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v12, v49, v13, v10, v20);
  v22 = v21;
  if (v21)
  {
    swift_errorRelease(v21);
    v22 = 0;
  }
  sub_100012DDC((uint64_t)v12, &qword_1005D1508);
  v23 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess(v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, v49, 0, 0);
  sub_100012CE8(v23, (uint64_t)v9, &qword_1005D1500);
  LOBYTE(v48[0]) = 1;
  v24 = sub_1001641C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v9, v48, v13, v46, v24);
  if (v22)
    swift_errorRelease(v22);
  sub_100012DDC((uint64_t)v9, &qword_1005D1500);
  LOBYTE(v48[0]) = *(_BYTE *)(v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason);
  v51 = 2;
  v25 = sub_100164244();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v48, &v51, v13, &type metadata for ICSelectionStateModel.SelectionReason, v25);
  v26 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL);
  v48[0] = v26;
  v51 = 3;
  swift_bridgeObjectRetain(v26);
  v27 = sub_100012E18((uint64_t *)&unk_1005D67A0);
  v28 = sub_100164288();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v48, &v51, v13, v27, v28);
  swift_bridgeObjectRelease(v26);
  v29 = *(void **)(v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v30, "URIRepresentation");
    v32 = v42;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);

    LOBYTE(v48[0]) = 4;
    v33 = sub_100019C6C(&qword_1005D1598, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v34 = v43;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v32, v48, v13, v43, v33);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v34);
  }
  else
  {
    v35 = v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL;
    swift_beginAccess(v2 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL, v48, 0, 0);
    v36 = v41;
    sub_100012CE8(v35, v41, &qword_1005CEFD0);
    v51 = 4;
    v37 = sub_100164390();
    KeyedEncodingContainer.encode<A>(_:forKey:)(v36, &v51, v13, v40, v37);
    sub_100012DDC(v36, &qword_1005CEFD0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v15, v13);
}

_BYTE *sub_100161178@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _BYTE *result;

  result = sub_100160690(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1001611A0(_QWORD *a1)
{
  return sub_100160C60(a1);
}

uint64_t sub_1001611C0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65646F4365746F6ELL;
  if (*v0 != 1)
    v1 = 0x6974617469766E69;
  if (*v0)
    return v1;
  else
    return 0x656D686361747461;
}

uint64_t sub_10016122C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100168000(a1, a2);
  *a3 = result;
  return result;
}

void sub_100161250(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10016125C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10016440C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100161284(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10016440C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001612AC()
{
  _BYTE *v0;

  if (*v0)
    return 0x4C525565746F6ELL;
  else
    return 0x656D686361747461;
}

uint64_t sub_1001612F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_10016818C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100161318(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100164494();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100161340(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100164494();
  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100161368()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_1001613A8()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_1001613CC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

uint64_t sub_100161408()
{
  return 0x52557463656A626FLL;
}

uint64_t sub_100161424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x52557463656A626FLL && a2 == 0xE90000000000004CLL)
  {
    result = swift_bridgeObjectRelease(0xE90000000000004CLL);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x52557463656A626FLL, 0xE90000000000004CLL, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1001614C4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100164450();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001614EC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100164450();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100161514@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  char *v54;
  unint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  void (**v61)(char *, _QWORD, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  void (**v72)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  void (**v88)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v102)(char *, _QWORD *, uint64_t);
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  uint64_t v109;
  char *v110;
  void (*v111)(char *, _QWORD *, uint64_t);
  char *v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  int v115;
  char *v116;
  char *v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  _QWORD *v134;
  _QWORD *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (**v144)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;

  v130 = a2;
  v3 = sub_100012E18(&qword_1005D15A8);
  v4 = __chkstk_darwin(v3);
  v139 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v138 = (char *)&v121 - v6;
  v7 = sub_100012E18(&qword_1005D15B0);
  v144 = *(void (***)(char *, _QWORD, uint64_t, uint64_t))(v7 - 8);
  v145 = v7;
  v8 = __chkstk_darwin(v7);
  v133 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v131 = (char *)&v121 - v10;
  v11 = sub_100012E18(&qword_1005CEFD0);
  v12 = __chkstk_darwin(v11);
  v135 = (uint64_t *)((char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __chkstk_darwin(v12);
  v134 = (uint64_t *)((char *)&v121 - v15);
  v16 = __chkstk_darwin(v14);
  v128 = (char *)&v121 - v17;
  __chkstk_darwin(v16);
  v132 = (uint64_t *)((char *)&v121 - v18);
  v19 = type metadata accessor for URL(0);
  v20 = *(_QWORD *)(v19 - 8);
  v141 = v19;
  v142 = v20;
  v21 = __chkstk_darwin(v19);
  v127 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v126 = (char *)&v121 - v24;
  v25 = __chkstk_darwin(v23);
  v125 = (char *)&v121 - v26;
  __chkstk_darwin(v25);
  v129 = (char *)&v121 - v27;
  v28 = sub_100012E18(&qword_1005D15B8);
  __chkstk_darwin(v28);
  v137 = (char *)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_100012E18(&qword_1005D15C0);
  v140 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v136 = (char *)&v121 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100012E18(&qword_1005D15C8);
  __chkstk_darwin(v31);
  v33 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100012E18(&qword_1005D15D0);
  v35 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v37 = (char *)&v121 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  __chkstk_darwin(v38);
  v40 = (char *)&v121 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1[3];
  v41 = a1[4];
  v146 = a1;
  sub_10012D19C(a1, v42);
  v43 = sub_10016440C();
  v44 = v147;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys, &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys, v43, v42, v41);
  if (!v44)
  {
    v123 = v40;
    v147 = v38;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v34);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v33, v34);
    v50 = KeyedDecodingContainer.allKeys.getter(v34);
    v51 = v34;
    if (!*(_QWORD *)(v50 + 16))
    {
      swift_bridgeObjectRelease(v50);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
      goto LABEL_3;
    }
    v52 = *(unsigned __int8 *)(v50 + 32);
    swift_bridgeObjectRelease(v50);
    v124 = v35;
    if (v52)
    {
      v122 = v37;
      if (v52 == 1)
      {
        v151 = 1;
        v53 = sub_100164450();
        v54 = v138;
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys, &v151, v51, &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys, v53);
        v61 = v144;
        v60 = v145;
        v144[7](v54, 0, 1, v145);
        v62 = v131;
        ((void (*)(char *, char *, uint64_t))v61[4])(v131, v54, v60);
        v63 = sub_100019C6C(&qword_1005D1550, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v64 = v134;
        v65 = v141;
        KeyedDecodingContainer.decode<A>(_:forKey:)(v134, v141, v66, v60, v141, v63);
        v49 = v146;
        ((void (*)(char *, uint64_t))v61[1])(v62, v60);
        v79 = v142;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v64, 0, 1, v65);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v79 + 48))(v64, 1, v65) == 1)
        {
          sub_100012DDC((uint64_t)v64, &qword_1005CEFD0);
          v80 = type metadata accessor for DecodingError(0);
          swift_allocError(v80, &protocol witness table for DecodingError, 0, 0);
          v82 = v81;
          v83 = v122;
          v84 = KeyedDecodingContainer.codingPath.getter(v51);
          v85 = 0xD000000000000036;
          v86 = 0x800000010047BCD0;
LABEL_18:
          DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v84, v85, v86, 0);
          v100 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v80 - 8) + 104))(v82, enum case for DecodingError.dataCorrupted(_:), v80);
          swift_willThrow(v100);
          (*(void (**)(char *, uint64_t))(v124 + 8))(v83, v51);
          return sub_1000153C0(v49);
        }
        (*(void (**)(char *, uint64_t))(v124 + 8))(v122, v51);
        v102 = *(void (**)(char *, _QWORD *, uint64_t))(v79 + 32);
        v103 = v126;
        v102(v126, v64, v65);
        v104 = (uint64_t)v123;
        v102(v123, v103, v65);
        v105 = 1;
      }
      else
      {
        v152 = 2;
        v58 = sub_100164450();
        v59 = v139;
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys, &v152, v34, &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys, v58);
        v72 = v144;
        v73 = v145;
        v144[7](v59, 0, 1, v145);
        v74 = v133;
        ((void (*)(char *, char *, uint64_t))v72[4])(v133, v59, v73);
        v75 = sub_100019C6C(&qword_1005D1550, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        v76 = v135;
        v77 = v141;
        KeyedDecodingContainer.decode<A>(_:forKey:)(v135, v141, v78, v73, v141, v75);
        v49 = v146;
        ((void (*)(char *, uint64_t))v72[1])(v74, v73);
        v98 = v142;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v76, 0, 1, v77);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v98 + 48))(v76, 1, v77) == 1)
        {
          sub_100012DDC((uint64_t)v76, &qword_1005CEFD0);
          v80 = type metadata accessor for DecodingError(0);
          swift_allocError(v80, &protocol witness table for DecodingError, 0, 0);
          v82 = v99;
          v83 = v122;
          v84 = KeyedDecodingContainer.codingPath.getter(v51);
          v86 = 0x800000010047BC90;
          v85 = 0xD00000000000003CLL;
          goto LABEL_18;
        }
        (*(void (**)(char *, uint64_t))(v124 + 8))(v122, v51);
        v111 = *(void (**)(char *, _QWORD *, uint64_t))(v98 + 32);
        v112 = v127;
        v111(v127, v76, v77);
        v104 = (uint64_t)v123;
        v111(v123, v112, v77);
        v105 = 2;
      }
LABEL_23:
      v113 = v130;
      swift_storeEnumTagMultiPayload(v104, v147, v105);
      sub_10013B170(v104, v113, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      return sub_1000153C0(v49);
    }
    v150 = 0;
    v55 = sub_100164494();
    v56 = v137;
    v57 = v37;
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys, &v150, v34, &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys, v55);
    v145 = v34;
    v67 = v140;
    v68 = v143;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v56, 0, 1, v143);
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v136, v56, v68);
    v149 = 0;
    v69 = sub_100019C6C(&qword_1005D1550, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v70 = (char *)v132;
    v71 = v141;
    KeyedDecodingContainer.decode<A>(_:forKey:)((char *)v132, v141, &v149, v68, v141, v69);
    v87 = v142;
    v88 = *(void (***)(char *, _QWORD, uint64_t, uint64_t))(v142 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v88)(v70, 0, 1, v71);
    v89 = v71;
    v90 = *(char **)(v87 + 48);
    v91 = v89;
    if (((unsigned int (*)(char *, uint64_t))v90)(v70, 1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v67 + 8))(v136, v143);
      sub_100012DDC((uint64_t)v70, &qword_1005CEFD0);
      v92 = v145;
      v49 = v146;
    }
    else
    {
      v139 = v90;
      v144 = v88;
      v106 = v91;
      v107 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
      v107(v129, v70, v106);
      v148 = 1;
      v108 = v128;
      v109 = v143;
      v110 = v136;
      KeyedDecodingContainer.decode<A>(_:forKey:)(v128, v106, &v148, v143, v106, v69);
      v114 = v107;
      (*(void (**)(char *, uint64_t))(v140 + 8))(v110, v109);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v144)(v108, 0, 1, v106);
      v115 = ((uint64_t (*)(char *, uint64_t, uint64_t))v139)(v108, 1, v106);
      v92 = v145;
      v49 = v146;
      v116 = v129;
      if (v115 != 1)
      {
        (*(void (**)(char *, uint64_t))(v124 + 8))(v57, v145);
        v117 = v125;
        v118 = v114;
        v114(v125, v108, v106);
        v119 = sub_100012E18(&qword_1005D1448);
        v104 = (uint64_t)v123;
        v120 = &v123[*(int *)(v119 + 48)];
        v118(v123, v116, v106);
        v118(v120, v117, v106);
        v105 = 0;
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v142 + 8))(v129, v106);
      sub_100012DDC((uint64_t)v108, &qword_1005CEFD0);
    }
    v93 = type metadata accessor for DecodingError(0);
    swift_allocError(v93, &protocol witness table for DecodingError, 0, 0);
    v95 = v94;
    v96 = KeyedDecodingContainer.codingPath.getter(v92);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v96, 0xD00000000000003CLL, 0x800000010047BD10, 0);
    v97 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v93 - 8) + 104))(v95, enum case for DecodingError.dataCorrupted(_:), v93);
    swift_willThrow(v97);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v57, v92);
    return sub_1000153C0(v49);
  }
  swift_errorRelease(v44);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v33, 1, 1, v34);
  sub_100012DDC((uint64_t)v33, &qword_1005D15C8);
LABEL_3:
  v45 = type metadata accessor for DecodingError(0);
  swift_allocError(v45, &protocol witness table for DecodingError, 0, 0);
  v47 = v46;
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(_swiftEmptyArrayStorage, 0xD00000000000003BLL, 0x800000010047BC50, 0);
  v48 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v47, enum case for DecodingError.dataCorrupted(_:), v45);
  swift_willThrow(v48);
  v49 = v146;
  return sub_1000153C0(v49);
}

void sub_1001622B8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  _QWORD v37[23];
  uint64_t v38;

  v2 = sub_100012E18(&qword_1005D15F0);
  v37[15] = *(_QWORD *)(v2 - 8);
  v37[16] = v2;
  v3 = __chkstk_darwin(v2);
  v37[6] = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v37[5] = (char *)v37 - v6;
  v7 = __chkstk_darwin(v5);
  v37[10] = (char *)v37 - v8;
  __chkstk_darwin(v7);
  v37[9] = (char *)v37 - v9;
  v10 = sub_100012E18(&qword_1005D15F8);
  v37[12] = *(_QWORD *)(v10 - 8);
  v37[13] = v10;
  v11 = __chkstk_darwin(v10);
  v37[2] = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v37[11] = (char *)v37 - v13;
  v14 = type metadata accessor for URL(0);
  v37[17] = *(_QWORD *)(v14 - 8);
  v37[18] = v14;
  v15 = __chkstk_darwin(v14);
  v37[4] = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v37[3] = (char *)v37 - v18;
  v19 = __chkstk_darwin(v17);
  v37[7] = (char *)v37 - v20;
  v21 = __chkstk_darwin(v19);
  v37[1] = (char *)v37 - v22;
  v23 = __chkstk_darwin(v21);
  v24 = __chkstk_darwin(v23);
  v25 = __chkstk_darwin(v24);
  v37[8] = (char *)v37 - v26;
  __chkstk_darwin(v25);
  v37[14] = (char *)v37 - v27;
  v28 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  __chkstk_darwin(v28);
  v30 = (char *)v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100012E18(&qword_1005D1600);
  v37[19] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v32 = (char *)v37 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1[3];
  v34 = a1[4];
  sub_10012D19C(a1, v33);
  v35 = sub_10016440C();
  v37[22] = v32;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys, &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys, v35, v33, v34);
  sub_100145220(v37[21], (uint64_t)v30, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  v36 = (char *)&loc_1001625E4 + *((int *)qword_100162CB0 + swift_getEnumCaseMultiPayload(v30, v28));
  __asm { BR              X10 }
}

uint64_t sub_1001625F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);

  v2 = v0 + *(int *)(sub_100012E18(&qword_1005D1448) + 48);
  v4 = *(_QWORD *)(v1 - 152);
  v3 = *(_QWORD *)(v1 - 144);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v6 = *(_QWORD *)(v1 - 176);
  v5(v6, v0, v3);
  v7 = *(_QWORD *)(v1 - 224);
  v5(v7, v2, v3);
  *(_BYTE *)(v1 - 72) = 0;
  v8 = sub_100164494();
  v9 = *(_QWORD *)(v1 - 200);
  v11 = *(_QWORD *)(v1 - 112);
  v10 = *(_QWORD *)(v1 - 104);
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys, v1 - 72, v10, &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys, v8);
  *(_BYTE *)(v1 - 89) = 0;
  v12 = sub_100019C6C(&qword_1005D1598, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v13 = v6;
  v14 = *(_QWORD *)(v1 - 184);
  v15 = *(_QWORD *)(v1 - 128);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v13, v1 - 89, v14, v3, v12);
  if (v15)
    swift_errorRelease(v15);
  *(_BYTE *)(v1 - 90) = 1;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v7, v1 - 90, v14, v3, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 192) + 8))(v9, v14);
  v16 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v16(v7, v3);
  v16(*(_QWORD *)(v1 - 176), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v11, v10);
}

uint64_t sub_100162CC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100161514(a1, a2);
}

void sub_100162CDC(_QWORD *a1)
{
  sub_1001622B8(a1);
}

uint64_t sub_100162CF4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x65646F4373676174;
}

uint64_t sub_100162D64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001682A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100162D88(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001657A0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100162DB0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001657A0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100162DD8()
{
  _BYTE *v0;

  if (*v0)
    return 0x55746E756F636361;
  else
    return 1701869940;
}

uint64_t sub_100162E10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001683F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100162E34(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001657E4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100162E5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001657E4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100162E84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  char *v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD v84[2];
  char v85;

  v75 = a2;
  v3 = type metadata accessor for URL(0);
  v79 = *(_QWORD *)(v3 - 8);
  v80 = v3;
  __chkstk_darwin(v3);
  v72 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005CEFD0);
  v6 = __chkstk_darwin(v5);
  v77 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v73 = (uint64_t *)((char *)&v70 - v8);
  v9 = sub_100012E18(&qword_1005D1608);
  __chkstk_darwin(v9);
  v81 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_100012E18(&qword_1005D1610);
  v78 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v74 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100012E18(&qword_1005D1618);
  __chkstk_darwin(v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E18(&qword_1005D1620);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v23 = a1[4];
  v82 = a1;
  sub_10012D19C(a1, v22);
  v24 = sub_1001657A0();
  v25 = v83;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys, &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys, v24, v22, v23);
  if (!v25)
  {
    v32 = v81;
    v71 = (uint64_t *)v21;
    v83 = v19;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    v33 = v18;
    v34 = KeyedDecodingContainer.allKeys.getter(v15);
    v35 = v15;
    if (!*(_QWORD *)(v34 + 16))
    {
      swift_bridgeObjectRelease(v34);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      goto LABEL_3;
    }
    v36 = *(unsigned __int8 *)(v34 + 32);
    swift_bridgeObjectRelease(v34);
    if (v36)
    {
      if (v36 == 1)
      {
        LOBYTE(v84[0]) = 1;
        v37 = sub_1001657E4();
        KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys, v84, v15, &type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys, v37);
        v43 = v16;
        v44 = v35;
        v45 = v33;
        v46 = v78;
        v47 = v76;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v32, 0, 1, v76);
        v48 = v74;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v74, v32, v47);
        LOBYTE(v84[0]) = 0;
        v49 = KeyedDecodingContainer.decode(_:forKey:)(v84, v47);
        v62 = v61;
        v63 = v49;
        LOBYTE(v84[0]) = 1;
        v64 = sub_100019C6C(&qword_1005D1550, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
        KeyedDecodingContainer.decode<A>(_:forKey:)(v73, v80, v84, v47, v80, v64);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v48, v47);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
        v65 = v75;
        v66 = v71;
        v67 = 1;
        v68 = v73;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v73, 0, 1, v80);
        v69 = (uint64_t)v66 + *(int *)(sub_100012E18(&qword_1005D1398) + 48);
        *v66 = v63;
        v66[1] = v62;
        sub_100157FAC((uint64_t)v68, v69);
        v30 = v82;
LABEL_15:
        swift_storeEnumTagMultiPayload(v66, v83, v67);
        sub_10013B170((uint64_t)v66, v65, type metadata accessor for ICSelectionStateModel.ContainerSelection);
        return sub_1000153C0(v30);
      }
      LOBYTE(v84[0]) = 2;
      v39 = sub_100019C6C(&qword_1005D1550, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v40 = v77;
      v41 = v80;
      KeyedDecodingContainer.decode<A>(_:forKey:)(v77, v80, v84, v15, v80, v39);
      v42 = v15;
      v52 = v79;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v40, 0, 1, v41);
      v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48))(v40, 1, v41);
      v30 = v82;
      if (v53 == 1)
      {
        sub_100012DDC((uint64_t)v40, &qword_1005CEFD0);
        v54 = type metadata accessor for DecodingError(0);
        swift_allocError(v54, &protocol witness table for DecodingError, 0, 0);
        v56 = v55;
        v57 = KeyedDecodingContainer.codingPath.getter(v42);
        DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v57, 0xD000000000000042, 0x800000010047BD90, 0);
        v58 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v56, enum case for DecodingError.dataCorrupted(_:), v54);
        swift_willThrow(v58);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v42);
        return sub_1000153C0(v30);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v42);
      v59 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      v60 = v72;
      v59(v72, v40, v41);
      v66 = v71;
      v59((char *)v71, v60, v41);
      v67 = 2;
    }
    else
    {
      v85 = 0;
      v38 = sub_10013E95C();
      KeyedDecodingContainer.decode<A>(_:forKey:)(v84, &type metadata for Data, &v85, v15, &type metadata for Data, v38);
      v50 = v84[0];
      v51 = v84[1];
      (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v15);
      v67 = 0;
      v66 = v71;
      *v71 = v50;
      v66[1] = v51;
      v30 = v82;
    }
    v65 = v75;
    goto LABEL_15;
  }
  swift_errorRelease(v25);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  sub_100012DDC((uint64_t)v14, &qword_1005D1618);
LABEL_3:
  v26 = type metadata accessor for DecodingError(0);
  swift_allocError(v26, &protocol witness table for DecodingError, 0, 0);
  v28 = v27;
  DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(_swiftEmptyArrayStorage, 0xD00000000000003ELL, 0x800000010047BD50, 0);
  v29 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, enum case for DecodingError.dataCorrupted(_:), v26);
  swift_willThrow(v29);
  v30 = v82;
  return sub_1000153C0(v30);
}

void sub_10016376C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v2 = type metadata accessor for URL(0);
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  v3 = __chkstk_darwin(v2);
  v24[1] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v24[0] = (char *)v24 - v6;
  __chkstk_darwin(v5);
  v24[4] = (char *)v24 - v7;
  v8 = sub_100012E18(&qword_1005D1638);
  v26 = *(_QWORD *)(v8 - 8);
  v27 = v8;
  v9 = __chkstk_darwin(v8);
  v24[3] = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v24[5] = (char *)v24 - v11;
  v25 = sub_100012E18(&qword_1005CEFD0);
  v12 = __chkstk_darwin(v25);
  v13 = __chkstk_darwin(v12);
  v24[2] = (char *)v24 - v14;
  __chkstk_darwin(v13);
  v15 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  __chkstk_darwin(v15);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_100012E18(&qword_1005D1640);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v20 = a1[4];
  sub_10012D19C(a1, v21);
  v22 = sub_1001657A0();
  v31 = v19;
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys, &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys, v22, v21, v20);
  sub_100145220(v33, (uint64_t)v17, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  v23 = (char *)&loc_1001639D0 + dword_10016403C[swift_getEnumCaseMultiPayload(v17, v15)];
  __asm { BR              X10 }
}

uint64_t sub_1001639E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *v0;
  v3 = v0[1];
  *(_QWORD *)(v1 - 96) = v2;
  *(_QWORD *)(v1 - 88) = v3;
  *(_BYTE *)(v1 - 65) = 0;
  v4 = sub_10013E9A0();
  v6 = *(_QWORD *)(v1 - 120);
  v5 = *(_QWORD *)(v1 - 112);
  v7 = *(_QWORD *)(v1 - 128);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v1 - 96, v1 - 65, v5, &type metadata for Data, v4);
  if (v7)
    swift_errorRelease(v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v6, v5);
  return sub_10013DD30(v2, v3);
}

uint64_t sub_100164054@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100162E84(a1, a2);
}

void sub_100164068(_QWORD *a1)
{
  sub_10016376C(a1);
}

unint64_t sub_100164080()
{
  unint64_t result;

  result = qword_1005D1520;
  if (!qword_1005D1520)
  {
    result = swift_getWitnessTable(&unk_1004565E8, &type metadata for ICSelectionStateModel.SelectionItem);
    atomic_store(result, (unint64_t *)&qword_1005D1520);
  }
  return result;
}

unint64_t sub_1001640C4()
{
  unint64_t result;

  result = qword_1005D1538;
  if (!qword_1005D1538)
  {
    result = swift_getWitnessTable(&unk_100455B10, &type metadata for ICSelectionStateModel.SelectionReason);
    atomic_store(result, (unint64_t *)&qword_1005D1538);
  }
  return result;
}

uint64_t sub_100164108(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100012E18(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_10016414C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1560;
  if (!qword_1005D1560)
  {
    v1 = sub_10001537C(&qword_1005D1508);
    sub_100019C6C(&qword_1005D1568, type metadata accessor for ICSelectionStateModel.ObjectSelection, (uint64_t)&unk_100455C40);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1560);
  }
  return result;
}

unint64_t sub_1001641C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1570;
  if (!qword_1005D1570)
  {
    v1 = sub_10001537C(&qword_1005D1500);
    sub_100019C6C(&qword_1005D1578, type metadata accessor for ICSelectionStateModel.ContainerSelection, (uint64_t)&unk_100455BC8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1570);
  }
  return result;
}

unint64_t sub_100164244()
{
  unint64_t result;

  result = qword_1005D1580;
  if (!qword_1005D1580)
  {
    result = swift_getWitnessTable(&unk_100455AE8, &type metadata for ICSelectionStateModel.SelectionReason);
    atomic_store(result, (unint64_t *)&qword_1005D1580);
  }
  return result;
}

unint64_t sub_100164288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1588;
  if (!qword_1005D1588)
  {
    v1 = sub_10001537C((uint64_t *)&unk_1005D67A0);
    sub_10016430C(&qword_1005D1590, &qword_1005D1598, (uint64_t)&protocol conformance descriptor for URL, (uint64_t)&protocol conformance descriptor for <> [A : B]);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1588);
  }
  return result;
}

uint64_t sub_10016430C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v9 = sub_10001537C(&qword_1005D1540);
    sub_100019C6C(a2, (uint64_t (*)(uint64_t))&type metadata accessor for URL, a3);
    result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100164390()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D15A0;
  if (!qword_1005D15A0)
  {
    v1 = sub_10001537C(&qword_1005CEFD0);
    sub_100019C6C(&qword_1005D1598, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D15A0);
  }
  return result;
}

unint64_t sub_10016440C()
{
  unint64_t result;

  result = qword_1005D15D8;
  if (!qword_1005D15D8)
  {
    result = swift_getWitnessTable(&unk_100456598, &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D15D8);
  }
  return result;
}

unint64_t sub_100164450()
{
  unint64_t result;

  result = qword_1005D15E0;
  if (!qword_1005D15E0)
  {
    result = swift_getWitnessTable(&unk_100456548, &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D15E0);
  }
  return result;
}

unint64_t sub_100164494()
{
  unint64_t result;

  result = qword_1005D15E8;
  if (!qword_1005D15E8)
  {
    result = swift_getWitnessTable(&unk_1004564F8, &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D15E8);
  }
  return result;
}

id sub_1001644D8@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v1;
  id result;

  result = objc_msgSend(objc_allocWithZone(v1), "init");
  *a1 = result;
  return result;
}

void sub_10016450C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  unint64_t v24;
  char v25;
  char v26;
  id v27;
  char v28;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      if (a2 < 0)
        v6 = a2;
      else
        v6 = a2 & 0xFFFFFFFFFFFFFF8;
      __CocoaDictionary.isEqual(to:)(v6, v5);
      return;
    }
    v7 = v5;
    v8 = a2;
LABEL_16:
    sub_100164778(v7, v8);
    return;
  }
  if (v4)
  {
    if (a2 < 0)
      v7 = a2;
    else
      v7 = a2 & 0xFFFFFFFFFFFFFF8;
    v8 = a1;
    goto LABEL_16;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v9 = 0;
  v10 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v9 << 6);
      goto LABEL_40;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_47;
    }
    if (v17 >= v14)
      return;
    v18 = *(_QWORD *)(v10 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        return;
      v18 = *(_QWORD *)(v10 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          return;
        v18 = *(_QWORD *)(v10 + 8 * v9);
        if (!v18)
        {
          v9 = v17 + 3;
          if (v17 + 3 >= v14)
            return;
          v18 = *(_QWORD *)(v10 + 8 * v9);
          if (!v18)
            break;
        }
      }
    }
LABEL_39:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_40:
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(a1 + 56) + v20);
    v22 = *(id *)(*(_QWORD *)(a1 + 48) + v20);
    v23 = v21;
    v24 = sub_100248C44((uint64_t)v22);
    v26 = v25;

    if ((v26 & 1) == 0)
    {

      return;
    }
    sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v27 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v24);
    v28 = static NSObject.== infix(_:_:)(v27);

    if ((v28 & 1) == 0)
      return;
  }
  v19 = v17 + 4;
  if (v19 >= v14)
    return;
  v18 = *(_QWORD *)(v10 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_39;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      return;
    v18 = *(_QWORD *)(v10 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_39;
  }
LABEL_47:
  __break(1u);
}

void sub_100164778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  id v24;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4 != __CocoaDictionary.count.getter())
    return;
  v5 = 0;
  v6 = a2 + 64;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_19;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
        break;
    }
LABEL_18:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_19:
    v16 = 8 * v12;
    v17 = *(void **)(*(_QWORD *)(a2 + 56) + v16);
    v18 = *(id *)(*(_QWORD *)(a2 + 48) + v16);
    v19 = v17;
    v20 = __CocoaDictionary.lookup(_:)(v18, a1);

    if (!v20)
    {

      return;
    }
    v21 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v23 = v20;
    swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
    v22 = static NSObject.== infix(_:_:)(v19);

    if ((v22 & 1) == 0)
      return;
  }
  v15 = v13 + 2;
  if (v15 >= v10)
    return;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_26:
  __break(1u);
}

void sub_100164958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1001649B8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x100164B9CLL);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_100164BC0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_100164C1C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_100164958((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_10013DD30(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_100164DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  int EnumCaseMultiPayload;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t, uint64_t);
  char *v72;
  char *v73;
  char v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  id v89;
  id v90;
  char v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  char *v98;
  void *v99;
  void *v100;
  id v101;
  id v102;
  uint64_t v103;
  void **v104;
  void **v105;
  uint64_t v106;
  char *v107;
  id v108;
  id v109;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  void **v118;
  void **v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v132 = a2;
  v133 = a1;
  v2 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v3 = __chkstk_darwin(v2);
  v118 = (void **)((char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __chkstk_darwin(v3);
  v119 = (void **)((char *)&v111 - v6);
  v7 = __chkstk_darwin(v5);
  v124 = (char *)&v111 - v8;
  v9 = __chkstk_darwin(v7);
  v123 = (char *)&v111 - v10;
  v11 = __chkstk_darwin(v9);
  v122 = (char *)&v111 - v12;
  v13 = __chkstk_darwin(v11);
  v125 = (uint64_t)&v111 - v14;
  v15 = __chkstk_darwin(v13);
  v129 = (char *)&v111 - v16;
  v17 = __chkstk_darwin(v15);
  v126 = (uint64_t)&v111 - v18;
  v19 = __chkstk_darwin(v17);
  v121 = (uint64_t)&v111 - v20;
  v21 = __chkstk_darwin(v19);
  v128 = (char *)&v111 - v22;
  v23 = __chkstk_darwin(v21);
  v127 = (uint64_t)&v111 - v24;
  __chkstk_darwin(v23);
  v26 = (char *)&v111 - v25;
  v27 = type metadata accessor for URL(0);
  v131 = *(_QWORD *)(v27 - 8);
  v28 = __chkstk_darwin(v27);
  v30 = (char *)&v111 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v28);
  v130 = (char *)&v111 - v32;
  v33 = __chkstk_darwin(v31);
  v117 = (char *)&v111 - v34;
  v35 = __chkstk_darwin(v33);
  v120 = (char *)&v111 - v36;
  v37 = __chkstk_darwin(v35);
  v39 = (char *)&v111 - v38;
  v40 = __chkstk_darwin(v37);
  v42 = (char *)&v111 - v41;
  v43 = __chkstk_darwin(v40);
  v45 = (char *)&v111 - v44;
  v46 = __chkstk_darwin(v43);
  v48 = (char *)&v111 - v47;
  v49 = __chkstk_darwin(v46);
  v51 = (char *)&v111 - v50;
  __chkstk_darwin(v49);
  v53 = (char *)&v111 - v52;
  sub_100145220(v133, (uint64_t)v26, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v26, v2);
  v116 = v30;
  if (EnumCaseMultiPayload)
  {
    v55 = (uint64_t)v129;
    v56 = v130;
    v57 = (uint64_t)v26;
    v58 = v2;
    v59 = v131;
    v60 = v132;
    v61 = v133;
    v62 = (uint64_t)v128;
  }
  else
  {
    v115 = v48;
    v112 = v45;
    v113 = v42;
    v114 = v39;
    v63 = sub_100012E18(&qword_1005D1448);
    v64 = &v26[*(int *)(v63 + 48)];
    v65 = v131;
    v66 = *(void (**)(char *, char *, uint64_t))(v131 + 32);
    v66(v53, v26, v27);
    v66(v51, v64, v27);
    v67 = v127;
    sub_100145220(v132, v127, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    v68 = v67;
    v58 = v2;
    v69 = v51;
    if (!swift_getEnumCaseMultiPayload(v68, v2))
    {
      v92 = (char *)(v127 + *(int *)(v63 + 48));
      v93 = v115;
      ((void (*)(char *))v66)(v115);
      v94 = v112;
      v66(v112, v92, v27);
      LOBYTE(v92) = static URL.== infix(_:_:)(v53, v93);
      v95 = v65;
      v96 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
      v97 = v113;
      v96(v113, v69, v27);
      v98 = v114;
      v96(v114, v94, v27);
      if ((v92 & 1) != 0)
        v74 = static URL.== infix(_:_:)(v97, v98);
      else
        v74 = 0;
      v107 = v115;
      v75 = *(void (**)(char *, uint64_t))(v95 + 8);
      v75(v98, v27);
      v75(v97, v27);
      v75(v94, v27);
      v75(v107, v27);
      v75(v69, v27);
      v76 = v53;
      goto LABEL_39;
    }
    v55 = (uint64_t)v129;
    v59 = v65;
    v70 = *(void (**)(char *, uint64_t))(v65 + 8);
    v70(v51, v27);
    v70(v53, v27);
    v60 = v132;
    v61 = v133;
    v56 = v130;
    v57 = v127;
    v62 = (uint64_t)v128;
  }
  sub_100145264(v57, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  sub_100145220(v61, v62, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (swift_getEnumCaseMultiPayload(v62, v58) == 1)
  {
    v71 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
    v72 = v120;
    v71(v120, v62, v27);
    v62 = v121;
    sub_100145220(v60, v121, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload(v62, v58) == 1)
    {
      v73 = v117;
      v71(v117, v62, v27);
      v74 = static URL.== infix(_:_:)(v72, v73);
      v75 = *(void (**)(char *, uint64_t))(v59 + 8);
      v75(v73, v27);
      v76 = v72;
LABEL_39:
      v75(v76, v27);
      return v74 & 1;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v72, v27);
  }
  sub_100145264(v62, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  v77 = v126;
  sub_100145220(v61, v126, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (swift_getEnumCaseMultiPayload(v77, v58) == 2)
  {
    v78 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
    v78(v56, v77, v27);
    sub_100145220(v60, v55, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload(v55, v58) == 2)
    {
      v79 = v116;
      v78(v116, v55, v27);
      v74 = static URL.== infix(_:_:)(v56, v79);
      v75 = *(void (**)(char *, uint64_t))(v59 + 8);
      v75(v79, v27);
      v76 = v56;
      goto LABEL_39;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v27);
    v82 = (uint64_t)v123;
    v81 = (uint64_t)v124;
    v83 = (uint64_t)v122;
    v80 = v55;
  }
  else
  {
    v80 = v77;
    v82 = (uint64_t)v123;
    v81 = (uint64_t)v124;
    v83 = (uint64_t)v122;
  }
  sub_100145264(v80, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  v84 = v125;
  sub_100145220(v61, v125, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (swift_getEnumCaseMultiPayload(v84, v58) == 3)
  {
    v85 = *(void **)v84;
    v86 = *(void **)(v84 + 8);

    sub_100145220(v60, v83, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload(v83, v58) == 3)
    {
      v87 = *(void **)v83;
      v88 = *(void **)(v83 + 8);

      if (v85)
      {
        if (!v87)
        {

          goto LABEL_49;
        }
        sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
        v89 = v87;
        v90 = v85;
        v91 = static NSObject.== infix(_:_:)(v90);

        if ((v91 & 1) == 0)
        {

LABEL_49:
          goto LABEL_50;
        }
      }
      else if (v87)
      {

        goto LABEL_49;
      }
      if (v86)
      {
        if (v88)
        {
          sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
          v108 = v88;
          v109 = v86;
          v74 = static NSObject.== infix(_:_:)(v109);

          return v74 & 1;
        }

LABEL_50:
        v74 = 0;
        return v74 & 1;
      }

      if (v88)
      {

        goto LABEL_50;
      }
LABEL_54:
      v74 = 1;
      return v74 & 1;
    }

  }
  else
  {
    v83 = v84;
  }
  sub_100145264(v83, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  sub_100145220(v61, v82, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (swift_getEnumCaseMultiPayload(v82, v58) != 4)
  {
    v81 = v82;
    goto LABEL_31;
  }
  v99 = *(void **)v82;

  sub_100145220(v60, v81, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  if (swift_getEnumCaseMultiPayload(v81, v58) != 4)
  {

    v61 = v133;
LABEL_31:
    sub_100145264(v81, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    v103 = v61;
    v104 = v119;
    sub_100145220(v103, (uint64_t)v119, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload(v104, v58) != 5)
    {
      sub_100145264((uint64_t)v104, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      goto LABEL_50;
    }
    v105 = v104;
    v99 = *v104;

    v106 = (uint64_t)v118;
    sub_100145220(v60, (uint64_t)v118, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    if (swift_getEnumCaseMultiPayload(v106, v58) != 5)
    {

      sub_100145264((uint64_t)v118, type metadata accessor for ICSelectionStateModel.ObjectSelection);
      goto LABEL_50;
    }
    v100 = *v118;

    if (v99)
    {
      if (v100)
        goto LABEL_28;
LABEL_35:

      goto LABEL_50;
    }
LABEL_41:
    if (v100)
    {

      goto LABEL_50;
    }
    goto LABEL_54;
  }
  v100 = *(void **)v81;

  if (!v99)
    goto LABEL_41;
  if (!v100)
    goto LABEL_35;
LABEL_28:
  sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v101 = v100;
  v102 = v99;
  v74 = static NSObject.== infix(_:_:)(v102);

  return v74 & 1;
}

unint64_t sub_1001657A0()
{
  unint64_t result;

  result = qword_1005D1628;
  if (!qword_1005D1628)
  {
    result = swift_getWitnessTable(&unk_1004564A8, &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1628);
  }
  return result;
}

unint64_t sub_1001657E4()
{
  unint64_t result;

  result = qword_1005D1630;
  if (!qword_1005D1630)
  {
    result = swift_getWitnessTable(&unk_100456458, &type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1630);
  }
  return result;
}

uint64_t sub_100165828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = __DataStorage._bytes.getter();
  v11 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = __DataStorage._length.getter();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_100164958(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1001658DC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_100165920()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_100165954 + dword_100165A14[v0 >> 62]))();
}

uint64_t sub_100165964@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_10013DCA0(v2, v1);
      sub_100164BC0(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_100165A24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  char *v69;
  char v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  unint64_t *v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v116 = a2;
  v3 = type metadata accessor for URL(0);
  v115 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v102 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v109 = (char *)&v98 - v7;
  __chkstk_darwin(v6);
  v98 = (char *)&v98 - v8;
  v101 = sub_100012E18(&qword_1005D1648);
  __chkstk_darwin(v101);
  v103 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005CEFD0);
  v11 = __chkstk_darwin(v10);
  v99 = (uint64_t)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v107 = (uint64_t)&v98 - v14;
  v15 = __chkstk_darwin(v13);
  v104 = (uint64_t)&v98 - v16;
  v17 = __chkstk_darwin(v15);
  v105 = (uint64_t)&v98 - v18;
  __chkstk_darwin(v17);
  v114 = (uint64_t)&v98 - v19;
  v20 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  v21 = __chkstk_darwin(v20);
  v100 = (uint64_t)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v108 = (uint64_t)&v98 - v24;
  v25 = __chkstk_darwin(v23);
  v113 = (char *)&v98 - v26;
  v27 = __chkstk_darwin(v25);
  v112 = (char *)&v98 - v28;
  v29 = __chkstk_darwin(v27);
  v106 = (uint64_t)&v98 - v30;
  v31 = __chkstk_darwin(v29);
  v111 = (char *)&v98 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v98 - v34;
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v98 - v37;
  v39 = __chkstk_darwin(v36);
  v41 = (uint64_t *)((char *)&v98 - v40);
  v42 = __chkstk_darwin(v39);
  v44 = (uint64_t *)((char *)&v98 - v43);
  v45 = __chkstk_darwin(v42);
  v47 = (uint64_t *)((char *)&v98 - v46);
  __chkstk_darwin(v45);
  v49 = (uint64_t *)((char *)&v98 - v48);
  v50 = a1;
  sub_100145220(a1, (uint64_t)&v98 - v48, v51);
  if (swift_getEnumCaseMultiPayload(v49, v20))
  {
    v52 = v116;
    v47 = v49;
  }
  else
  {
    v110 = v3;
    v54 = *v49;
    v53 = v49[1];
    v52 = v116;
    sub_100145220(v116, (uint64_t)v47, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (!swift_getEnumCaseMultiPayload(v47, v20))
    {
      v79 = *v47;
      v80 = v47[1];
      sub_1001658DC(v54, v53);
      v70 = v81;
      sub_10013DD30(v79, v80);
      sub_10013DD30(v54, v53);
      return v70 & 1;
    }
    sub_10013DD30(v54, v53);
    v3 = v110;
  }
  sub_100145264((uint64_t)v47, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  v55 = v50;
  sub_100145220(v50, (uint64_t)v44, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  if (swift_getEnumCaseMultiPayload(v44, v20) == 1)
  {
    v110 = v3;
    v56 = *v44;
    v116 = v44[1];
    v57 = sub_100012E18(&qword_1005D1398);
    v58 = v114;
    sub_100157FAC((uint64_t)v44 + *(int *)(v57 + 48), v114);
    sub_100145220(v52, (uint64_t)v41, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload(v41, v20) == 1)
    {
      v60 = *v41;
      v59 = v41[1];
      v61 = v105;
      sub_100157FAC((uint64_t)v41 + *(int *)(v57 + 48), v105);
      v62 = v116;
      if (v56 == v60 && v116 == v59)
      {
        swift_bridgeObjectRelease_n(v116, 2);
        v63 = v114;
        v64 = v104;
        sub_100012CE8(v114, v104, &qword_1005CEFD0);
        v65 = v107;
        sub_100012CE8(v61, v107, &qword_1005CEFD0);
      }
      else
      {
        v82 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v116, v60, v59, 0);
        swift_bridgeObjectRelease(v59);
        swift_bridgeObjectRelease(v62);
        v63 = v114;
        v64 = v104;
        sub_100012CE8(v114, v104, &qword_1005CEFD0);
        v65 = v107;
        sub_100012CE8(v61, v107, &qword_1005CEFD0);
        if ((v82 & 1) == 0)
        {
          sub_100012DDC(v65, &qword_1005CEFD0);
          sub_100012DDC(v64, &qword_1005CEFD0);
          sub_100012DDC(v61, &qword_1005CEFD0);
          sub_100012DDC(v63, &qword_1005CEFD0);
          goto LABEL_50;
        }
      }
      v83 = v103;
      v84 = v103 + *(int *)(v101 + 48);
      sub_100012CE8(v64, v103, &qword_1005CEFD0);
      sub_100012CE8(v65, v84, &qword_1005CEFD0);
      v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
      v86 = v110;
      if (v85(v83, 1, v110) == 1)
      {
        sub_100012DDC(v65, &qword_1005CEFD0);
        sub_100012DDC(v64, &qword_1005CEFD0);
        sub_100012DDC(v61, &qword_1005CEFD0);
        sub_100012DDC(v63, &qword_1005CEFD0);
        if (v85(v84, 1, v86) == 1)
        {
          sub_100012DDC(v83, &qword_1005CEFD0);
          v70 = 1;
          return v70 & 1;
        }
      }
      else
      {
        v92 = v99;
        sub_100012CE8(v83, v99, &qword_1005CEFD0);
        if (v85(v84, 1, v86) != 1)
        {
          v94 = v115;
          v95 = v98;
          (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v98, v84, v86);
          v96 = sub_100019C6C((unint64_t *)&qword_1005D8A60, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
          v70 = dispatch thunk of static Equatable.== infix(_:_:)(v92, v95, v86, v96);
          v97 = *(void (**)(char *, uint64_t))(v94 + 8);
          v97(v95, v86);
          sub_100012DDC(v107, &qword_1005CEFD0);
          sub_100012DDC(v64, &qword_1005CEFD0);
          sub_100012DDC(v61, &qword_1005CEFD0);
          sub_100012DDC(v63, &qword_1005CEFD0);
          v97((char *)v92, v86);
          sub_100012DDC(v83, &qword_1005CEFD0);
          return v70 & 1;
        }
        sub_100012DDC(v65, &qword_1005CEFD0);
        sub_100012DDC(v64, &qword_1005CEFD0);
        sub_100012DDC(v61, &qword_1005CEFD0);
        sub_100012DDC(v63, &qword_1005CEFD0);
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v92, v86);
      }
      sub_100012DDC(v83, &qword_1005D1648);
LABEL_50:
      v70 = 0;
      return v70 & 1;
    }
    sub_100012DDC(v58, &qword_1005CEFD0);
    swift_bridgeObjectRelease(v116);
    v3 = v110;
    v55 = v50;
  }
  else
  {
    v41 = v44;
  }
  sub_100145264((uint64_t)v41, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  sub_100145220(v55, (uint64_t)v38, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  if (swift_getEnumCaseMultiPayload(v38, v20) != 2)
  {
    v35 = v38;
    v68 = v52;
    goto LABEL_17;
  }
  v66 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
  v67 = v109;
  v66(v109, v38, v3);
  v68 = v52;
  sub_100145220(v52, (uint64_t)v35, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  if (swift_getEnumCaseMultiPayload(v35, v20) != 2)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v67, v3);
LABEL_17:
    v72 = (uint64_t)v112;
    v73 = (uint64_t)v113;
    v74 = (uint64_t)v111;
    sub_100145264((uint64_t)v35, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_100145220(v55, v74, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload(v74, v20) == 3)
    {
      v75 = *(void **)v74;

      v74 = v106;
      sub_100145220(v68, v106, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      if (swift_getEnumCaseMultiPayload(v74, v20) == 3)
      {
        v76 = *(void **)v74;

        if (v75)
        {
          if (v76)
          {
            v77 = &qword_1005D67D0;
            v78 = ICTagSelection_ptr;
LABEL_40:
            sub_1000163BC(0, v77, v78);
            v90 = v76;
            v91 = v75;
            v70 = static NSObject.== infix(_:_:)(v91);

            return v70 & 1;
          }
          goto LABEL_48;
        }
        goto LABEL_42;
      }

    }
    sub_100145264(v74, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    sub_100145220(v55, v72, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload(v72, v20) == 4)
    {
      v75 = *(void **)v72;

      sub_100145220(v68, v73, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      if (swift_getEnumCaseMultiPayload(v73, v20) == 4)
      {
        v76 = *(void **)v73;

        if (v75)
        {
          if (v76)
          {
            v77 = (unint64_t *)&unk_1005D1650;
            v78 = ICVirtualSmartFolderItemIdentifier_ptr;
            goto LABEL_40;
          }
LABEL_48:

          goto LABEL_50;
        }
LABEL_42:
        if (!v76)
        {
          v70 = 1;
          return v70 & 1;
        }

        goto LABEL_50;
      }

    }
    else
    {
      v73 = v72;
    }
    sub_100145264(v73, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    v87 = v108;
    sub_100145220(v55, v108, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload(v87, v20) != 5)
    {
      sub_100145264(v87, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      goto LABEL_50;
    }
    v75 = *(void **)v87;

    v88 = v68;
    v89 = v100;
    sub_100145220(v88, v100, type metadata accessor for ICSelectionStateModel.ContainerSelection);
    if (swift_getEnumCaseMultiPayload(v89, v20) != 5)
    {

      sub_100145264(v89, type metadata accessor for ICSelectionStateModel.ContainerSelection);
      goto LABEL_50;
    }
    v76 = *(void **)v89;

    if (v75)
    {
      if (v76)
      {
        v77 = (unint64_t *)&qword_1005D2500;
        v78 = NSManagedObjectID_ptr;
        goto LABEL_40;
      }
      goto LABEL_48;
    }
    goto LABEL_42;
  }
  v69 = v102;
  v66(v102, v35, v3);
  v70 = static URL.== infix(_:_:)(v67, v69);
  v71 = *(void (**)(char *, uint64_t))(v115 + 8);
  v71(v69, v3);
  v71(v67, v3);
  return v70 & 1;
}

BOOL sub_100166514(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _BOOL8 v6;
  void *v8;
  _BYTE v9[24];
  uint64_t v10;

  v3 = sub_100012CE8(a1, (uint64_t)v9, &qword_1005CF190);
  if (!v10)
  {
    sub_100012DDC((uint64_t)v9, &qword_1005CF190);
    goto LABEL_5;
  }
  v4 = a2(v3);
  if (!swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, v4, 6))
  {
LABEL_5:
    v5 = 0;
    goto LABEL_6;
  }
  v5 = v8;
LABEL_6:
  v6 = v5 != 0;

  return v6;
}

uint64_t sub_1001665A4(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x6669636570736E75 && a2 == 0xEB00000000646569)
  {
    v5 = 0xEB00000000646569;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6669636570736E75, 0xEB00000000646569, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1802398060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(1802398060, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_10016669C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  char v36;

  v32 = sub_100012E18(&qword_1005D1668);
  v30 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v33 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100012E18(&qword_1005D1670);
  v3 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005D1678);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_10012D19C(a1, v10);
  v12 = sub_1001669C8();
  v13 = v34;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for ICSelectionStateModel.SelectionReason.CodingKeys, &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys, v12, v10, v11);
  if (v13)
    goto LABEL_7;
  v14 = v5;
  v15 = v33;
  v29 = a1;
  v34 = v7;
  v16 = KeyedDecodingContainer.allKeys.getter(v6);
  v17 = v16;
  v18 = v6;
  if (*(_QWORD *)(v16 + 16) != 1)
  {
    v21 = type metadata accessor for DecodingError(0);
    swift_allocError(v21, &protocol witness table for DecodingError, 0, 0);
    v22 = v9;
    v24 = v23;
    sub_100012E18(&qword_1005D1688);
    *v24 = &type metadata for ICSelectionStateModel.SelectionReason;
    v25 = KeyedDecodingContainer.codingPath.getter(v6);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)(v25, 0xD00000000000002BLL, 0x800000010047BE70, 0);
    v26 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v24, enum case for DecodingError.typeMismatch(_:), v21);
    swift_willThrow(v26);
    swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v6);
    a1 = v29;
LABEL_7:
    sub_1000153C0(a1);
    return v6;
  }
  v6 = *(unsigned __int8 *)(v16 + 32);
  if ((v6 & 1) != 0)
  {
    v36 = 1;
    v19 = sub_100166A0C();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys, &v36, v18, &type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys, v19);
    v20 = v34;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v32);
  }
  else
  {
    v35 = 0;
    v27 = sub_100166A50();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)(&type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys, &v35, v18, &type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys, v27);
    v20 = v34;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v31);
  }
  swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v18);
  sub_1000153C0(v29);
  return v6;
}

unint64_t sub_1001669C8()
{
  unint64_t result;

  result = qword_1005D1680;
  if (!qword_1005D1680)
  {
    result = swift_getWitnessTable(&unk_100456408, &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1680);
  }
  return result;
}

unint64_t sub_100166A0C()
{
  unint64_t result;

  result = qword_1005D1690;
  if (!qword_1005D1690)
  {
    result = swift_getWitnessTable(&unk_1004563B8, &type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1690);
  }
  return result;
}

unint64_t sub_100166A50()
{
  unint64_t result;

  result = qword_1005D1698;
  if (!qword_1005D1698)
  {
    result = swift_getWitnessTable(&unk_100456368, &type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1698);
  }
  return result;
}

uint64_t sub_100166A94(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  result = 0;
  if (a2 >> 60 != 15)
  {
    v5 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
    v6 = sub_10013DCA0(a1, a2);
    v7 = JSONDecoder.init()(v6);
    v8 = sub_100012E18((uint64_t *)&unk_1005D6780);
    v9 = sub_1001672EC();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v10, v8, a1, a2, v8, v9);
    sub_1001672D8(a1, a2);
    swift_release(v7);
    return v10;
  }
  return result;
}

uint64_t sub_100166B74(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_100166B84()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100166BA8()
{
  uint64_t v0;

  return sub_1002FA804(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100166BB0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100166BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  void *v50;
  id v51;
  id v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE v67[24];
  _BYTE v68[24];
  _BYTE v69[24];
  _BYTE v70[24];
  _BYTE v71[24];
  _BYTE v72[32];

  v66 = a2;
  v63 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v58 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100012E18(&qword_1005D16B8);
  __chkstk_darwin(v60);
  v64 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D1500);
  v6 = __chkstk_darwin(v5);
  v59 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v62 = (uint64_t)&v58 - v8;
  v9 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18((uint64_t *)&unk_1005D2520);
  __chkstk_darwin(v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E18(&qword_1005D1508);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v58 - v20;
  v65 = a1;
  v22 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v22, v72, 0, 0);
  sub_100012CE8(v22, (uint64_t)v21, &qword_1005D1508);
  v23 = v66;
  v24 = v66 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v66 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, v71, 0, 0);
  v25 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_100012CE8((uint64_t)v21, (uint64_t)v15, &qword_1005D1508);
  sub_100012CE8(v24, v25, &qword_1005D1508);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v26((uint64_t)v15, 1, v9) == 1)
  {
    sub_100012DDC((uint64_t)v21, &qword_1005D1508);
    if (v26(v25, 1, v9) == 1)
    {
      sub_100012DDC((uint64_t)v15, &qword_1005D1508);
      goto LABEL_8;
    }
LABEL_6:
    v27 = (uint64_t *)&unk_1005D2520;
    v28 = (uint64_t)v15;
LABEL_14:
    sub_100012DDC(v28, v27);
    goto LABEL_15;
  }
  sub_100012CE8((uint64_t)v15, (uint64_t)v19, &qword_1005D1508);
  if (v26(v25, 1, v9) == 1)
  {
    sub_100012DDC((uint64_t)v21, &qword_1005D1508);
    sub_100145264((uint64_t)v19, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    goto LABEL_6;
  }
  sub_10013B170(v25, (uint64_t)v12, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  v29 = sub_100164DE4((uint64_t)v19, (uint64_t)v12);
  sub_100145264((uint64_t)v12, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  sub_100012DDC((uint64_t)v21, &qword_1005D1508);
  sub_100145264((uint64_t)v19, type metadata accessor for ICSelectionStateModel.ObjectSelection);
  sub_100012DDC((uint64_t)v15, &qword_1005D1508);
  if ((v29 & 1) == 0)
    goto LABEL_15;
LABEL_8:
  v30 = v65;
  v31 = v65 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess(v65 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, v70, 0, 0);
  v32 = v62;
  sub_100012CE8(v31, v62, &qword_1005D1500);
  v33 = v23 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
  swift_beginAccess(v23 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, v69, 0, 0);
  v34 = v64;
  v35 = v64 + *(int *)(v60 + 48);
  sub_100012CE8(v32, v64, &qword_1005D1500);
  sub_100012CE8(v33, v35, &qword_1005D1500);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  v37 = v63;
  if (v36(v34, 1, v63) == 1)
  {
    sub_100012DDC(v32, &qword_1005D1500);
    if (v36(v35, 1, v37) == 1)
    {
      sub_100012DDC(v34, &qword_1005D1500);
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  v38 = v59;
  sub_100012CE8(v34, v59, &qword_1005D1500);
  if (v36(v35, 1, v37) == 1)
  {
    sub_100012DDC(v32, &qword_1005D1500);
    sub_100145264(v38, type metadata accessor for ICSelectionStateModel.ContainerSelection);
LABEL_13:
    v27 = &qword_1005D16B8;
    v28 = v34;
    goto LABEL_14;
  }
  v41 = v58;
  sub_10013B170(v35, v58, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  v42 = sub_100165A24(v38, v41);
  sub_100145264(v41, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  sub_100012DDC(v32, &qword_1005D1500);
  sub_100145264(v38, type metadata accessor for ICSelectionStateModel.ContainerSelection);
  sub_100012DDC(v34, &qword_1005D1500);
  if ((v42 & 1) == 0)
    goto LABEL_15;
LABEL_18:
  v43 = (uint64_t *)(v30
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess(v30 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID, v68, 0, 0);
  v44 = *v43;
  v45 = (uint64_t *)(v23
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess(v23 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID, v67, 0, 0);
  v46 = *v45;
  if (v44)
  {
    if (!v46)
      goto LABEL_15;
    swift_bridgeObjectRetain(v46);
    v47 = swift_bridgeObjectRetain(v44);
    sub_10016450C(v47, v46);
    v49 = v48;
    swift_bridgeObjectRelease(v44);
    swift_bridgeObjectRelease(v46);
    if ((v49 & 1) == 0)
      goto LABEL_15;
  }
  else if (v46)
  {
    goto LABEL_15;
  }
  v50 = *(void **)(v30 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  v39 = *(void **)(v23 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentSelectedSearchResult);
  if (v50)
  {
    if (!v39)
      return v39 & 1;
    sub_1000163BC(0, &qword_1005D1660, ICSearchResult_ptr);
    v51 = v39;
    v52 = v50;
    v53 = static NSObject.== infix(_:_:)(v52);

    if ((v53 & 1) != 0)
      goto LABEL_28;
LABEL_15:
    LOBYTE(v39) = 0;
    return v39 & 1;
  }
  if (v39)
    goto LABEL_15;
LABEL_28:
  v54 = *(_QWORD *)(v30 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  v55 = *(_QWORD *)(v23 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID);
  LOBYTE(v39) = (v54 | v55) == 0;
  if (v54 && v55)
  {
    sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v56 = (id)v55;
    v57 = (id)v54;
    LOBYTE(v39) = static NSObject.== infix(_:_:)(v57);

  }
  return v39 & 1;
}

unint64_t sub_100167280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3CC0;
  if (!qword_1005D3CC0)
  {
    v1 = sub_1000163BC(255, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3CC0);
  }
  return result;
}

uint64_t sub_1001672D8(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_10013DD30(result, a2);
  return result;
}

unint64_t sub_1001672EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D16D0;
  if (!qword_1005D16D0)
  {
    v1 = sub_10001537C((uint64_t *)&unk_1005D6780);
    sub_100019C6C(&qword_1005D16D8, type metadata accessor for ICSelectionStateModel, (uint64_t)&unk_100455CB8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D16D0);
  }
  return result;
}

unint64_t sub_100167368()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D16E0;
  if (!qword_1005D16E0)
  {
    v1 = sub_10001537C((uint64_t *)&unk_1005D6780);
    sub_100019C6C(&qword_1005D16C8, type metadata accessor for ICSelectionStateModel, (uint64_t)&unk_100455C90);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D16E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason.CodingKeys()
{
  return &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys()
{
  return &type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionReason.LinkCodingKeys()
{
  return &type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ContainerSelection.CodingKeys()
{
  return &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys()
{
  return &type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys;
}

uint64_t getEnumTagSinglePayload for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11MobileNotes21ICSelectionStateModelC18ContainerSelectionO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100167518 + 4 * byte_100455965[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10016754C + 4 * byte_100455960[v4]))();
}

uint64_t sub_10016754C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100167554(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10016755CLL);
  return result;
}

uint64_t sub_100167568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100167570);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100167574(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016757C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ObjectSelection.CodingKeys()
{
  return &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys;
}

uint64_t _s11MobileNotes21ICSelectionStateModelC15SelectionReasonOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001675E4 + 4 * byte_10045596F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100167618 + 4 * byte_10045596A[v4]))();
}

uint64_t sub_100167618(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100167620(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100167628);
  return result;
}

uint64_t sub_100167634(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10016763CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100167640(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100167648(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys()
{
  return &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys;
}

uint64_t getEnumTagSinglePayload for LearnMoreSmartFoldersFiltersView.FilterSection(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1001676F8 + 4 * byte_100455974[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100167718 + 4 * byte_100455979[v4]))();
}

_BYTE *sub_1001676F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100167718(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100167720(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100167728(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100167730(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100167738(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys()
{
  return &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys;
}

uint64_t getEnumTagSinglePayload for ICSelectionStateModel.SelectionItem(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ICSelectionStateModel.SelectionItem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_100167830 + 4 * byte_100455983[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100167864 + 4 * byte_10045597E[v4]))();
}

uint64_t sub_100167864(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016786C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100167874);
  return result;
}

uint64_t sub_100167880(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100167888);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10016788C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100167894(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateModel.SelectionItem()
{
  return &type metadata for ICSelectionStateModel.SelectionItem;
}

unint64_t sub_1001678B4()
{
  unint64_t result;

  result = qword_1005D16E8;
  if (!qword_1005D16E8)
  {
    result = swift_getWitnessTable(&unk_100455E50, &type metadata for ICSelectionStateModel.SelectionItem);
    atomic_store(result, (unint64_t *)&qword_1005D16E8);
  }
  return result;
}

unint64_t sub_1001678FC()
{
  unint64_t result;

  result = qword_1005D16F0;
  if (!qword_1005D16F0)
  {
    result = swift_getWitnessTable(&unk_100455F08, &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D16F0);
  }
  return result;
}

unint64_t sub_100167944()
{
  unint64_t result;

  result = qword_1005D16F8;
  if (!qword_1005D16F8)
  {
    result = swift_getWitnessTable(&unk_100455FC0, &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D16F8);
  }
  return result;
}

unint64_t sub_10016798C()
{
  unint64_t result;

  result = qword_1005D1700;
  if (!qword_1005D1700)
  {
    result = swift_getWitnessTable(&unk_100456078, &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1700);
  }
  return result;
}

unint64_t sub_1001679D4()
{
  unint64_t result;

  result = qword_1005D1708;
  if (!qword_1005D1708)
  {
    result = swift_getWitnessTable(&unk_100456130, &type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1708);
  }
  return result;
}

unint64_t sub_100167A1C()
{
  unint64_t result;

  result = qword_1005D1710;
  if (!qword_1005D1710)
  {
    result = swift_getWitnessTable(&unk_1004561E8, &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1710);
  }
  return result;
}

unint64_t sub_100167A64()
{
  unint64_t result;

  result = qword_1005D1718;
  if (!qword_1005D1718)
  {
    result = swift_getWitnessTable(&unk_100456340, &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1718);
  }
  return result;
}

unint64_t sub_100167AAC()
{
  unint64_t result;

  result = qword_1005D1720;
  if (!qword_1005D1720)
  {
    result = swift_getWitnessTable(&unk_100456260, &type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1720);
  }
  return result;
}

unint64_t sub_100167AF4()
{
  unint64_t result;

  result = qword_1005D1728;
  if (!qword_1005D1728)
  {
    result = swift_getWitnessTable(&unk_100456288, &type metadata for ICSelectionStateModel.SelectionReason.UnspecifiedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1728);
  }
  return result;
}

unint64_t sub_100167B3C()
{
  unint64_t result;

  result = qword_1005D1730;
  if (!qword_1005D1730)
  {
    result = swift_getWitnessTable(&unk_100456210, &type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1730);
  }
  return result;
}

unint64_t sub_100167B84()
{
  unint64_t result;

  result = qword_1005D1738;
  if (!qword_1005D1738)
  {
    result = swift_getWitnessTable(&unk_100456238, &type metadata for ICSelectionStateModel.SelectionReason.LinkCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1738);
  }
  return result;
}

unint64_t sub_100167BCC()
{
  unint64_t result;

  result = qword_1005D1740;
  if (!qword_1005D1740)
  {
    result = swift_getWitnessTable(&unk_1004562B0, &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1740);
  }
  return result;
}

unint64_t sub_100167C14()
{
  unint64_t result;

  result = qword_1005D1748;
  if (!qword_1005D1748)
  {
    result = swift_getWitnessTable(&unk_1004562D8, &type metadata for ICSelectionStateModel.SelectionReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1748);
  }
  return result;
}

unint64_t sub_100167C5C()
{
  unint64_t result;

  result = qword_1005D1750;
  if (!qword_1005D1750)
  {
    result = swift_getWitnessTable(&unk_1004560A0, &type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1750);
  }
  return result;
}

unint64_t sub_100167CA4()
{
  unint64_t result;

  result = qword_1005D1758;
  if (!qword_1005D1758)
  {
    result = swift_getWitnessTable(&unk_1004560C8, &type metadata for ICSelectionStateModel.ContainerSelection.VirtualSmartFolderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1758);
  }
  return result;
}

unint64_t sub_100167CEC()
{
  unint64_t result;

  result = qword_1005D1760;
  if (!qword_1005D1760)
  {
    result = swift_getWitnessTable(&unk_100456158, &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1760);
  }
  return result;
}

unint64_t sub_100167D34()
{
  unint64_t result;

  result = qword_1005D1768;
  if (!qword_1005D1768)
  {
    result = swift_getWitnessTable(&unk_100456180, &type metadata for ICSelectionStateModel.ContainerSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1768);
  }
  return result;
}

unint64_t sub_100167D7C()
{
  unint64_t result;

  result = qword_1005D1770;
  if (!qword_1005D1770)
  {
    result = swift_getWitnessTable(&unk_100455F30, &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1770);
  }
  return result;
}

unint64_t sub_100167DC4()
{
  unint64_t result;

  result = qword_1005D1778;
  if (!qword_1005D1778)
  {
    result = swift_getWitnessTable(&unk_100455F58, &type metadata for ICSelectionStateModel.ObjectSelection.AttachmentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1778);
  }
  return result;
}

unint64_t sub_100167E0C()
{
  unint64_t result;

  result = qword_1005D1780;
  if (!qword_1005D1780)
  {
    result = swift_getWitnessTable(&unk_100455E78, &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1780);
  }
  return result;
}

unint64_t sub_100167E54()
{
  unint64_t result;

  result = qword_1005D1788;
  if (!qword_1005D1788)
  {
    result = swift_getWitnessTable(&unk_100455EA0, &type metadata for ICSelectionStateModel.ObjectSelection.EditorObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1788);
  }
  return result;
}

unint64_t sub_100167E9C()
{
  unint64_t result;

  result = qword_1005D1790;
  if (!qword_1005D1790)
  {
    result = swift_getWitnessTable(&unk_100455FE8, &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1790);
  }
  return result;
}

unint64_t sub_100167EE4()
{
  unint64_t result;

  result = qword_1005D1798;
  if (!qword_1005D1798)
  {
    result = swift_getWitnessTable(&unk_100456010, &type metadata for ICSelectionStateModel.ObjectSelection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005D1798);
  }
  return result;
}

unint64_t sub_100167F2C()
{
  unint64_t result;

  result = qword_1005D17A0;
  if (!qword_1005D17A0)
  {
    result = swift_getWitnessTable(&unk_100455D88, &type metadata for ICSelectionStateModel.SelectionItem);
    atomic_store(result, (unint64_t *)&qword_1005D17A0);
  }
  return result;
}

unint64_t sub_100167F74()
{
  unint64_t result;

  result = qword_1005D17A8;
  if (!qword_1005D17A8)
  {
    result = swift_getWitnessTable(&unk_100455DB0, &type metadata for ICSelectionStateModel.SelectionItem);
    atomic_store(result, (unint64_t *)&qword_1005D17A8);
  }
  return result;
}

unint64_t sub_100167FB8(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100555608, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t sub_100168000(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v6;
  char v7;

  if (a1 == 0x656D686361747461 && a2 == 0xEF6465646F43746ELL)
  {
    v4 = 0xEF6465646F43746ELL;
LABEL_6:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656D686361747461, 0xEF6465646F43746ELL, a1, a2, 0) & 1) != 0)
  {
    v4 = a2;
    goto LABEL_6;
  }
  if (a1 == 0x65646F4365746F6ELL && a2 == 0xE900000000000064)
  {
    v6 = 0xE900000000000064;
LABEL_12:
    swift_bridgeObjectRelease(v6);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65646F4365746F6ELL, 0xE900000000000064, a1, a2, 0) & 1) != 0)
  {
    v6 = a2;
    goto LABEL_12;
  }
  if (a1 == 0x6974617469766E69 && a2 == 0xEF6465646F436E6FLL)
  {
    swift_bridgeObjectRelease(0xEF6465646F436E6FLL);
    return 2;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6974617469766E69, 0xEF6465646F436E6FLL, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_10016818C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x656D686361747461 && a2 == 0xED00004C5255746ELL)
  {
    v5 = 0xED00004C5255746ELL;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656D686361747461, 0xED00004C5255746ELL, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x4C525565746F6ELL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x4C525565746F6ELL, 0xE700000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1001682A0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x65646F4373676174 && a2 == 0xE900000000000064)
  {
    v5 = 0xE900000000000064;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65646F4373676174, 0xE900000000000064, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0xD000000000000017)
  {
    v7 = 0x800000010047BFA0;
    if (a2 == 0x800000010047BFA0)
      goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000017, 0x800000010047BFA0, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x800000010047BFC0)
  {
    swift_bridgeObjectRelease(0x800000010047BFC0);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000012, 0x800000010047BFC0, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001683F8(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x55746E756F636361 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease(0xEA00000000004C52);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x55746E756F636361, 0xEA00000000004C52, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_100168508()
{
  unint64_t result;

  result = qword_1005D17B0;
  if (!qword_1005D17B0)
  {
    result = swift_getWitnessTable(&unk_100456698, &type metadata for ShowNotesAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1005D17B0);
  }
  return result;
}

unint64_t sub_100168550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D17B8;
  if (!qword_1005D17B8)
  {
    v1 = type metadata accessor for StringSearchCriteria(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for StringSearchCriteria, v1);
    atomic_store(result, (unint64_t *)&qword_1005D17B8);
  }
  return result;
}

uint64_t sub_100168598()
{
  uint64_t v0;

  v0 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v0, qword_100601630);
  sub_10012A0B0(v0, (uint64_t)qword_100601630);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000026, 0x800000010047C120);
}

uint64_t sub_1001685F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010047C0D0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t sub_100168810()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D17F0);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D17F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100168B40();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for ShowNotesAppSearchResultsIntent, v6);
  v7._object = (void *)0x800000010047C100;
  v7._countAndFlagsBits = 0xD000000000000018;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004567C0, v8);
  v10 = sub_100012E18(&qword_1005D1800);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for ShowNotesAppSearchResultsIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for ShowNotesAppSearchResultsIntent, v6);
}

uint64_t sub_100168978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v0 = sub_100012E18(&qword_1005D1810);
  v1 = type metadata accessor for StringSearchScope(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject(v0, v4 + *(_QWORD *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + 16) = xmmword_100451C20;
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5 + v4, enum case for StringSearchScope.general(_:), v1);
  qword_100601648 = v5;
  return result;
}

uint64_t sub_100168A0C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1005CE9A0 != -1)
    swift_once(&qword_1005CE9A0, sub_100168978);
  v2 = qword_100601648;
  *a1 = qword_100601648;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_100168A5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for StringSearchCriteria(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*InsertAllMentionIntent.target.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10012A894;
}

unint64_t sub_100168B40()
{
  unint64_t result;

  result = qword_1005D21A0;
  if (!qword_1005D21A0)
  {
    result = swift_getWitnessTable(&unk_1004566C0, &type metadata for ShowNotesAppSearchResultsIntent);
    atomic_store(result, &qword_1005D21A0);
  }
  return result;
}

unint64_t sub_100168B88()
{
  unint64_t result;

  result = qword_1005D17C0;
  if (!qword_1005D17C0)
  {
    result = swift_getWitnessTable(&unk_100456750, &type metadata for ShowNotesAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1005D17C0);
  }
  return result;
}

unint64_t sub_100168BD0()
{
  unint64_t result;

  result = qword_1005D17C8;
  if (!qword_1005D17C8)
  {
    result = swift_getWitnessTable(&unk_100456778, &type metadata for ShowNotesAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1005D17C8);
  }
  return result;
}

uint64_t sub_100168C14(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100503878, 1);
}

uint64_t sub_100168C24(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100503850, 1);
}

uint64_t sub_100168C34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CE998 != -1)
    swift_once(&qword_1005CE998, sub_100168598);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)qword_100601630);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100168CA4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10016909C();
  return static ShowInAppSearchResultsIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_100168CD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_100168D50();
  *a1 = result;
  return result;
}

unint64_t sub_100168CF8()
{
  return 0xD000000000000023;
}

ValueMetadata *type metadata accessor for ShowNotesAppSearchResultsIntent()
{
  return &type metadata for ShowNotesAppSearchResultsIntent;
}

uint64_t sub_100168D24()
{
  return sub_100016638(&qword_1005D17D8, &qword_1005D17E0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100168D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v31 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  __chkstk_darwin(v2);
  v30 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LocalizedStringResource(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_100012E18(&qword_1005D17E8);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x6169726574697243, 0xE800000000000000);
  static Locale.current.getter(v21);
  v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v23(v10, enum case for LocalizedStringResource.BundleDescription.main(_:), v7);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0, 0, v13, v10, "Parameter title for Show in app search results intent", 53, 2);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x800000010047C020);
  static Locale.current.getter(v24);
  v23(v10, v22, v7);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v16, 0, 0, v13, v10, "Parameter description for criteria", 34, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v17);
  v25 = type metadata accessor for IntentDialog(0);
  v26 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v30, 1, 1, v25);
  v27 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  return IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)(v20, v6, v26, v27);
}

uint64_t sub_100169074@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10016909C()
{
  unint64_t result;

  result = qword_1005D1808;
  if (!qword_1005D1808)
  {
    result = swift_getWitnessTable(&unk_100456640, &type metadata for ShowNotesAppSearchResultsIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1808);
  }
  return result;
}

uint64_t sub_1001690E0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10012B334(v0, qword_1005D1818);
  sub_10012A0B0(v0, (uint64_t)qword_1005D1818);
  return static Logger.archiving.getter();
}

char *ICArchiveNotesPreviewer.__allocating_init(forArchiveAt:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ICArchiveNotesPreviewer.init(forArchiveAt:)(a1);
}

char *ICArchiveNotesPreviewer.init(forArchiveAt:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  objc_class *v64;
  _QWORD *v65;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t ObjectType;
  uint64_t v74;
  char *v75;
  int v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  objc_super v89;
  char v90[32];
  _QWORD *v91;

  v2 = v1;
  ObjectType = swift_getObjectType(v2);
  v4 = sub_100012E18(&qword_1005D1830);
  __chkstk_darwin(v4);
  v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ICArchiveNotesPreviewer.Note(0);
  v7 = *(_QWORD *)(v6 - 8);
  v83 = v6;
  v84 = v7;
  v8 = __chkstk_darwin(v6);
  v82 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v87 = (uint64_t)&v67 - v11;
  __chkstk_darwin(v10);
  v74 = (uint64_t)&v67 - v12;
  v13 = sub_100012E18(&qword_1005D3DA0);
  v85 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v81 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v67 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v67 - v19;
  v21 = type metadata accessor for URL(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, a1, v21);
  v26 = type metadata accessor for ICArchivePreviewer();
  swift_allocObject(v26, 32, 7);
  v27 = v2;
  v28 = v88;
  v29 = ICArchivePreviewer.init(forArchiveAt:)(v24);
  if (v28)
  {

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(a1, v21);
    swift_deallocPartialClassInstance(v27, ObjectType, 24, 7);
  }
  else
  {
    v30 = v29;
    v72 = v25;
    v88 = v20;
    v79 = v18;
    v71 = v22;
    v80 = v21;
    *(_QWORD *)&v27[OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer] = v29;
    swift_beginAccess(v29 + 24, v90, 0, 0);
    v31 = *(_QWORD *)(v30 + 24);
    swift_bridgeObjectRetain_n(v31, 2);
    v32 = sub_10016BB98(v31);
    swift_bridgeObjectRelease(v31);
    v91 = v32;
    sub_10016A7A0(&v91);
    swift_bridgeObjectRelease(v31);
    v33 = v91[2];
    v34 = v79;
    v35 = v80;
    v36 = v85;
    if (v33)
    {
      v69 = v27;
      v70 = 0;
      v37 = (char *)v91 + ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80));
      v38 = *(_QWORD *)(v85 + 72);
      v77 = *(void (**)(char *, char *, uint64_t))(v85 + 16);
      v78 = v38;
      v76 = enum case for ICObjectReferences.note<A>(_:);
      v68 = v91;
      swift_retain(v91);
      v86 = _swiftEmptyArrayStorage;
      v39 = (uint64_t)v75;
      v40 = v84;
      v41 = v88;
      do
      {
        v42 = v41;
        v43 = v77;
        v77(v41, v37, v13);
        v43(v34, v42, v13);
        v44 = v81;
        v43(v81, v34, v13);
        v45 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v44, v13);
        if (v45 == v76)
        {
          (*(void (**)(char *, uint64_t))(v36 + 96))(v44, v13);
          v46 = *(_QWORD *)v44;
          ICObjectReferences.identifier.getter(v13);
          v47 = ICObjectReferences.title.getter(v13);
          v49 = v48;
          v50 = *(void (**)(char *, uint64_t))(v36 + 8);
          v50(v34, v13);
          v51 = v46;
          v39 = (uint64_t)v75;
          swift_release(v51);
          v52 = v83;
          v53 = (uint64_t *)(v87 + *(int *)(v83 + 20));
          *v53 = v47;
          v53[1] = v49;
          v40 = v84;
          sub_10016BCD0(v87, v39);
          v54 = 0;
        }
        else
        {
          v55 = v44;
          v50 = *(void (**)(char *, uint64_t))(v36 + 8);
          v50(v79, v13);
          v56 = v55;
          v34 = v79;
          v50(v56, v13);
          v54 = 1;
          v52 = v83;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v39, v54, 1, v52);
        v50(v88, v13);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v52) == 1)
        {
          sub_100012DDC(v39, &qword_1005D1830);
          v35 = v80;
          v36 = v85;
        }
        else
        {
          v57 = v74;
          sub_10016BCD0(v39, v74);
          sub_10016BCD0(v57, v82);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v86);
          v35 = v80;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            v59 = (unint64_t)v86;
          else
            v59 = sub_10016A84C(0, v86[2] + 1, 1, (unint64_t)v86, &qword_1005D1A38, type metadata accessor for ICArchiveNotesPreviewer.Note);
          v61 = *(_QWORD *)(v59 + 16);
          v60 = *(_QWORD *)(v59 + 24);
          v36 = v85;
          if (v61 >= v60 >> 1)
            v59 = sub_10016A84C(v60 > 1, v61 + 1, 1, v59, &qword_1005D1A38, type metadata accessor for ICArchiveNotesPreviewer.Note);
          *(_QWORD *)(v59 + 16) = v61 + 1;
          v40 = v84;
          v62 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          v86 = (_QWORD *)v59;
          sub_10016BCD0(v82, v59 + v62 + *(_QWORD *)(v84 + 72) * v61);
        }
        v37 += v78;
        --v33;
        v41 = v88;
      }
      while (v33);
      swift_release_n(v68, 2);
      v63 = v72;
      v64 = (objc_class *)ObjectType;
      v27 = v69;
      v65 = v86;
    }
    else
    {
      swift_release(v91);
      v65 = _swiftEmptyArrayStorage;
      v63 = v72;
      v64 = (objc_class *)ObjectType;
    }
    *(_QWORD *)&v27[OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_notes] = v65;

    v89.receiver = v27;
    v89.super_class = v64;
    v20 = (char *)objc_msgSendSuper2(&v89, "init");
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v63, v35);
  }
  return v20;
}

uint64_t type metadata accessor for ICArchiveNotesPreviewer.Note(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D18D0;
  if (!qword_1005D18D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ICArchiveNotesPreviewer.Note);
  return result;
}

uint64_t ICArchiveNotesPreviewer.notes.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_notes));
}

id ICArchiveNotesPreviewer.startPreviewing(_:completion:)(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v14;

  v7 = sub_100012E18(&qword_1005D3DA0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer);
  sub_1001699A8(a1, (uint64_t)v10);
  swift_retain(a3);
  v12 = sub_1002521D0((uint64_t)v10, v11, a2, a3);
  swift_release(a3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12;
}

uint64_t sub_1001699A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE v21[16];
  uint64_t v22;
  _BYTE v23[24];

  v5 = sub_100012E18(&qword_1005D1A28);
  __chkstk_darwin(v5);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer);
  swift_beginAccess(v8 + 24, v23, 0, 0);
  v9 = *(_QWORD *)(v8 + 24);
  v22 = a1;
  swift_bridgeObjectRetain(v9);
  sub_100206760((uint64_t (*)(char *))sub_10016E9B8, v9, v7);
  swift_bridgeObjectRelease(v9);
  v10 = sub_100012E18(&qword_1005D3DA0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v7, v10);
  sub_100012DDC((uint64_t)v7, &qword_1005D1A28);
  if (qword_1005CE9A8 != -1)
    swift_once(&qword_1005CE9A8, sub_1001690E0);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_10012A0B0(v12, (uint64_t)qword_1005D1818);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.fault.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Object to be previewed does not exist", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = sub_10016E9D4();
  v18 = swift_allocError(&type metadata for ICArchiveImporter.Errors, v17, 0, 0);
  *v19 = 4;
  return swift_willThrow(v18);
}

void sub_100169BAC(void *a1, char a2, void (*a3)(void *, uint64_t))
{
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];

  v4 = a1;
  v5 = a2 & 1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
  }
  else
  {
    v7[3] = sub_1000163BC(0, (unint64_t *)&qword_1005D9080, ICCloudSyncingObject_ptr);
    v7[0] = v4;
    v6 = v4;
    v4 = (void *)sub_100169C8C((uint64_t)v7, (unint64_t *)&qword_1005D39F0, ICNote_ptr, &qword_1005D1A08);
    sub_1000153C0(v7);
  }
  a3(v4, v5);
  sub_10016E9AC(v4, v5);
}

uint64_t sub_100169C5C(uint64_t a1)
{
  return sub_100169EA4(a1, (uint64_t (*)(_QWORD))type metadata accessor for LearnMoreViewController, &qword_1005D1960);
}

uint64_t sub_100169C70(uint64_t a1)
{
  return sub_100169C8C(a1, (unint64_t *)&qword_1005D39F0, ICNote_ptr, &qword_1005D1A08);
}

uint64_t sub_100169C8C(uint64_t a1, unint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  Swift::String v14;
  uint64_t v15;
  void *object;
  void (*v17)(char *, uint64_t);
  Swift::String v18;
  Swift::String v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _BYTE v25[32];

  v8 = type metadata accessor for Mirror(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100128424(a1, (uint64_t)v25);
  v12 = sub_1000163BC(0, a2, a3);
  if (swift_dynamicCast(&v21, v25, (char *)&type metadata for Any + 8, v12, 6))
    return v21;
  sub_100128424(a1, (uint64_t)v25);
  v21 = 0;
  v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v22);
  strcpy((char *)v24, "Cannot cast ");
  BYTE5(v24[1]) = 0;
  HIWORD(v24[1]) = -5120;
  sub_100128424((uint64_t)v25, (uint64_t)&v21);
  Mirror.init(reflecting:)(&v21);
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v8, &protocol witness table for Mirror);
  v15 = v9;
  object = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(object);
  v17 = *(void (**)(char *, uint64_t))(v15 + 8);
  v17(v11, v8);
  v18._countAndFlagsBits = 544432416;
  v18._object = (void *)0xE400000000000000;
  String.append(_:)(v18);
  v23 = sub_100012E18(a4);
  v21 = v12;
  Mirror.init(reflecting:)(&v21);
  v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v8, &protocol witness table for Mirror);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v17(v11, v8);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v24[0], v24[1], "NotesShared/Casting.swift", 25, 2, 12, 0);
  __break(1u);
  return result;
}

uint64_t sub_100169E90(uint64_t a1)
{
  return sub_100169EA4(a1, type metadata accessor for SystemPaperViewController, &qword_1005D1940);
}

uint64_t sub_100169EA4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  Swift::String v12;
  void *object;
  void (*v14)(char *, uint64_t);
  Swift::String v15;
  Swift::String v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  _BYTE v22[32];

  v6 = type metadata accessor for Mirror(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100128424(a1, (uint64_t)v22);
  v10 = a2(0);
  if (swift_dynamicCast(&v18, v22, (char *)&type metadata for Any + 8, v10, 6))
    return v18;
  sub_100128424(a1, (uint64_t)v22);
  v18 = 0;
  v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v19);
  strcpy((char *)v21, "Cannot cast ");
  BYTE5(v21[1]) = 0;
  HIWORD(v21[1]) = -5120;
  sub_100128424((uint64_t)v22, (uint64_t)&v18);
  Mirror.init(reflecting:)(&v18);
  v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, &protocol witness table for Mirror);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  v15._countAndFlagsBits = 544432416;
  v15._object = (void *)0xE400000000000000;
  String.append(_:)(v15);
  v20 = sub_100012E18(a3);
  v18 = v10;
  Mirror.init(reflecting:)(&v18);
  v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, &protocol witness table for Mirror);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  v14(v9, v6);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v21[0], v21[1], "NotesShared/Casting.swift", 25, 2, 12, 0);
  __break(1u);
  return result;
}

uint64_t sub_10016A09C(uint64_t a1)
{
  return sub_100169EA4(a1, (uint64_t (*)(_QWORD))type metadata accessor for InlineMenuButtonTextAttachment, &qword_1005D1948);
}

uint64_t sub_10016A0B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  Swift::String v8;
  void *object;
  void (*v10)(char *, uint64_t);
  Swift::String v11;
  Swift::String v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _BYTE v18[32];

  v2 = type metadata accessor for Mirror(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100128424(a1, (uint64_t)v18);
  v6 = sub_100012E18(&qword_1005D19F0);
  if (swift_dynamicCast(&v14, v18, (char *)&type metadata for Any + 8, v6, 6))
    return v14;
  sub_100128424(a1, (uint64_t)v18);
  v14 = 0;
  v15 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v15);
  strcpy((char *)v17, "Cannot cast ");
  BYTE5(v17[1]) = 0;
  HIWORD(v17[1]) = -5120;
  sub_100128424((uint64_t)v18, (uint64_t)&v14);
  Mirror.init(reflecting:)(&v14);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, &protocol witness table for Mirror);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v11._countAndFlagsBits = 544432416;
  v11._object = (void *)0xE400000000000000;
  String.append(_:)(v11);
  v16 = sub_100012E18(&qword_1005D19F8);
  v14 = v6;
  Mirror.init(reflecting:)(&v14);
  v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, &protocol witness table for Mirror);
  v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v10(v5, v2);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v17[0], v17[1], "NotesShared/Casting.swift", 25, 2, 12, 0);
  __break(1u);
  return result;
}

uint64_t sub_10016A2A8(uint64_t a1)
{
  return sub_100169C8C(a1, (unint64_t *)&qword_1005D9080, ICCloudSyncingObject_ptr, &qword_1005D1A20);
}

uint64_t sub_10016A2C4(uint64_t a1)
{
  return sub_100169C8C(a1, (unint64_t *)&qword_1005D8AB0, ICNoteEditorViewController_ptr, &qword_1005D1938);
}

uint64_t sub_10016A2E0(uint64_t a1)
{
  return sub_100169C8C(a1, &qword_1005D1928, &off_10054E2D0, &qword_1005D1930);
}

uint64_t ICArchiveNotesPreviewer.stopPreviewing(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v8;

  v2 = sub_100012E18(&qword_1005D3DA0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001699A8(a1, (uint64_t)v5);
  v6 = ICArchivePreviewer.stopPreviewing(_:)((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t, double))(v3 + 8))(v5, v2, v6);
}

uint64_t ICArchiveNotesPreviewer.state(of:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v3 = sub_100012E18(&qword_1005D3DA0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MobileNotes23ICArchiveNotesPreviewer_archivePreviewer);
  swift_beginAccess(v7 + 24, v15, 0, 0);
  v8 = *(_QWORD *)(v7 + 24);
  swift_bridgeObjectRetain(v8);
  sub_1001699A8(a1, (uint64_t)v6);
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = sub_100248D28((uint64_t)v6);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(v8 + 56) + 24 * v9;
      v12 = *(unsigned __int8 *)(v11 + 16);
      sub_10016D9D0(*(id *)v11, *(_QWORD *)(v11 + 8), *(_BYTE *)(v11 + 16));
      swift_bridgeObjectRelease(v8);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      __asm { BR              X9 }
    }
  }
  swift_bridgeObjectRelease(v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return 0;
}

void sub_10016A52C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = sub_1000163BC(0, (unint64_t *)&qword_1005D9080, ICCloudSyncingObject_ptr);
  *(_QWORD *)(v1 - 128) = v0;
  sub_100169C8C(v1 - 128, (unint64_t *)&qword_1005D39F0, ICNote_ptr, &qword_1005D1A08);
  sub_1000153C0((_QWORD *)(v1 - 128));
  JUMPOUT(0x10016A508);
}

void sub_10016A580()
{
  JUMPOUT(0x10016A508);
}

uint64_t sub_10016A58C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D3DA0);
  ICObjectReferences.identifier.getter(v7);
  v8 = static URL.== infix(_:_:)(v6, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8 & 1;
}

id ICCloudSyncingObject.MoveAction.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void ICArchiveNotesPreviewer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("MobileNotes.ICArchiveNotesPreviewer", 35, "init()", 6, 0);
  __break(1u);
}

uint64_t ICArchiveNotesPreviewer.Note.title.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for ICArchiveNotesPreviewer.Note(0) + 20));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

Swift::Int ICArchiveNotesPreviewer.Note.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  URL.hash(into:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10016A768(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  URL.hash(into:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_10016A7A0(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  Swift::Int result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(sub_100012E18(&qword_1005D3DA0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_1001565B0(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_10016C2AC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_10016A824(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D19C0, type metadata accessor for NoteEntity);
}

uint64_t sub_10016A838(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0EF8, type metadata accessor for TagEntity);
}

uint64_t sub_10016A84C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100012E18(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    v24 = a4 + v22;
    if ((unint64_t)v18 < a4 || v23 >= v24 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22, v24);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22, v24);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10016E698(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_10016AA58(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0EE0, type metadata accessor for FolderEntity);
}

_QWORD *sub_10016AA6C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10016B3E8(a1, a2, a3, a4, &qword_1005D1968);
}

uint64_t sub_10016AA78(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016B624(a1, a2, a3, a4, &qword_1005D0EA0, &qword_1005D3DA0);
}

_QWORD *sub_10016AA8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D1A10);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016D8C8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10016AB98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0ED0, (uint64_t (*)(_QWORD))&type metadata accessor for TranscriptViewModelSegment);
}

_QWORD *sub_10016ABAC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D1950);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016E0A4(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10016ACB8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10016AE00(a1, a2, a3, a4, &qword_1005D0DD0, &qword_1005D0DD8);
}

uint64_t sub_10016ACCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D19A0, (uint64_t (*)(_QWORD))&type metadata accessor for ICQueryType);
}

_QWORD *sub_10016ACE0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D0EF0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016D5D8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10016ADEC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10016AE00(a1, a2, a3, a4, &qword_1005D1970, &qword_1005D1978);
}

_QWORD *sub_10016AE00(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_100012E18(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 25;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 3);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v11 + 4])
          memmove(v17, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016E2B4(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10016AF18(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D1980);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10016E3B8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10016B03C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D1A00, (uint64_t (*)(_QWORD))&type metadata accessor for CollaboratorStatus);
}

_QWORD *sub_10016B050(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D19E0);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10016D4CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10016B174(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10016B18C(a1, a2, a3, a4, &qword_1005D0D70);
}

_QWORD *sub_10016B180(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10016B18C(a1, a2, a3, a4, &qword_1005D1908);
}

_QWORD *sub_10016B18C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_100012E18(a5);
      v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v12[2] = v9;
      v12[3] = 2 * v13 - 64;
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= (_QWORD *)((char *)a4 + v9 + 32))
          memmove(v14, a4 + 4, v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10016E4AC(0, v9, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10016B280(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D19D8, type metadata accessor for AttachmentEntity);
}

uint64_t sub_10016B294(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0EC8, (uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_10016B2A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D1988, _s16AttributedStringV9AttributeVMa);
}

_QWORD *sub_10016B2BC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D1998);
      v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v8 + 4])
          memmove(v14, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016E1AC(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10016B3C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D19D0, (uint64_t (*)(_QWORD))&type metadata accessor for FastSync.SelectionMessage);
}

_QWORD *sub_10016B3DC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10016B3E8(a1, a2, a3, a4, &qword_1005D19B8);
}

_QWORD *sub_10016B3E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_100012E18(a5);
      v12 = (_QWORD *)swift_allocObject(v11, 8 * v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v9;
      v12[3] = 2 * (v14 >> 3);
      v15 = v12 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v15 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[v9 + 4])
          memmove(v15, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016D6C8(0, v9, (char *)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10016B4F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D19C8);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016E590(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10016B5FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0E18, _s3TagVMa);
}

uint64_t sub_10016B610(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016B624(a1, a2, a3, a4, &qword_1005D1990, &qword_1005D0218);
}

uint64_t sub_10016B624(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100012E18(a5);
  v14 = *(_QWORD *)(sub_100012E18(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(sub_100012E18(a6) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    v24 = a4 + v22;
    if ((unint64_t)v18 < a4 || v23 >= v24 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22, v24);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22, v24);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10016D7B0(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_10016B830(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0EC0, (uint64_t (*)(_QWORD))&type metadata accessor for NoteID);
}

uint64_t sub_10016B844(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D19B0, type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_10016B858(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D19A8, type metadata accessor for TableEntity);
}

_QWORD *sub_10016B86C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D1918);
      v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4])
          memmove(v13, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10016E7B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10016B98C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016B624(a1, a2, a3, a4, &qword_1005D0D90, &qword_1005D0D98);
}

uint64_t sub_10016B9A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0E20, type metadata accessor for AccountEntity);
}

uint64_t sub_10016B9B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10016A84C(a1, a2, a3, a4, &qword_1005D0D78, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

_QWORD *sub_10016B9C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100012E18(&qword_1005D1910);
      v11 = (_QWORD *)swift_allocObject(v10, 32 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 1;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4])
          memmove(v14, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10016E8BC(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

int64_t *sub_10016BAD4(int64_t *result, int64_t a2)
{
  int64_t v2;
  int64_t v4;
  uint64_t v5;
  int64_t *v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9[3];

  v2 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    v4 = (int64_t)result;
    if (v2 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_100012E18((uint64_t *)&unk_1005D0E90);
      v6 = (int64_t *)swift_allocObject(v5, 8 * v2 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v2;
      v6[3] = 2 * (v8 >> 3);
    }
    result = sub_1001E6E50(v9, v6 + 4, v2, v4, a2);
    if (result == (int64_t *)v2)
      return v6;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10016BB98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100012E18(&qword_1005D0EA0);
  v4 = *(_QWORD *)(sub_100012E18(&qword_1005D3DA0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_100012E18(&qword_1005D3DA0) - 8) + 80);
      v12 = sub_1001E6F80(&v14, (uint64_t)v8 + ((v11 + 32) & ~v11), v1, a1);
      v13 = v14;
      swift_bridgeObjectRetain(a1);
      sub_1001452E0(v13);
      if (v12 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10016BCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ICArchiveNotesPreviewer.Note(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_10016BD14(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10016BEC8(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for ICSelectionStateModel);
}

_QWORD *sub_10016BD20(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v5)
    return _swiftEmptyArrayStorage;
  v8 = 8 * v5;
  if (v5 <= 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if (v4 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v9 = sub_100012E18(&qword_1005CF6F0);
  v10 = (_QWORD *)swift_allocObject(v9, v8 + 32, 7);
  v11 = j__malloc_size(v10);
  v12 = v11 - 32;
  if (v11 < 32)
    v12 = v11 - 25;
  v10[2] = v5;
  v10[3] = (2 * (v12 >> 3)) | 1;
  if (v4 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v5 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v13 = a2 + 8 * a3;
  if (v13 >= (unint64_t)&v10[(unint64_t)v8 / 8 + 4] || (unint64_t)(v10 + 4) >= v13 + v8)
  {
    sub_1000163BC(0, &qword_1005D8540, CKShareParticipant_ptr);
    swift_arrayInitWithCopy(v10 + 4);
    return v10;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_10016BEB0(uint64_t a1)
{
  return sub_10016C1AC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1001E7E54);
}

_QWORD *sub_10016BEBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10016BEC8(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for NoteSearchResult);
}

_QWORD *sub_10016BEC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_18;
  if (!v6)
    return _swiftEmptyArrayStorage;
  v10 = 8 * v6;
  if (v6 <= 0)
  {
    v12 = _swiftEmptyArrayStorage;
    if (v5 != a3)
      goto LABEL_7;
    goto LABEL_17;
  }
  v11 = sub_100012E18(&qword_1005CF6F0);
  v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
  v13 = j__malloc_size(v12);
  v14 = v13 - 32;
  if (v13 < 32)
    v14 = v13 - 25;
  v12[2] = v6;
  v12[3] = (2 * (v14 >> 3)) | 1;
  if (v5 == a3)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_7:
  if (v6 < 0)
  {
LABEL_19:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_20;
  }
  v15 = a2 + 8 * a3;
  if (v15 >= (unint64_t)&v12[(unint64_t)v10 / 8 + 4] || (unint64_t)(v12 + 4) >= v15 + v10)
  {
    a5(0);
    swift_arrayInitWithCopy(v12 + 4);
    return v12;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_20:
  __break(1u);
  return result;
}

_QWORD *sub_10016C054(uint64_t a1)
{
  return sub_10016C09C(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_1001E786C);
}

_QWORD *sub_10016C060(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10016BEC8(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for AttachmentSearchResult);
}

_QWORD *sub_10016C06C(uint64_t a1)
{
  return sub_10016C09C(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_1001E7880);
}

_QWORD *sub_10016C078(uint64_t a1)
{
  return sub_10016C1AC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))&specialized _ArrayBuffer._copyContents(initializing:));
}

_QWORD *sub_10016C084(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10016BEC8(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TableSearchResult);
}

_QWORD *sub_10016C090(uint64_t a1)
{
  return sub_10016C09C(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))sub_1001E7E40);
}

_QWORD *sub_10016C09C(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t, __n128))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _QWORD *result;
  uint64_t v12;

  v3 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
      goto LABEL_5;
    return _swiftEmptyArrayStorage;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = __CocoaSet.count.getter(a1);
  if (!v4)
    return _swiftEmptyArrayStorage;
LABEL_5:
  if (v4 <= 0)
  {
    v6 = _swiftEmptyArrayStorage;
  }
  else
  {
    v5 = sub_100012E18(&qword_1005CF6F0);
    v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
    v7 = j__malloc_size(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 25;
    v6[2] = v4;
    v6[3] = (2 * (v8 >> 3)) | 1;
  }
  v9 = swift_bridgeObjectRetain(v3);
  v10 = a2(&v12, v6 + 4, v4, v3, v9);
  result = (_QWORD *)sub_1001452E0(v12);
  if (v10 == v4)
    return v6;
  __break(1u);
  return result;
}

_QWORD *sub_10016C1A0(uint64_t a1)
{
  return sub_10016C1AC(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))sub_1001E8AF0);
}

_QWORD *sub_10016C1AC(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t, __n128);
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_100012E18(&qword_1005CF6F0);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    v9 = swift_bridgeObjectRetain(a1);
    v10 = a2(v6 + 4, v4, a1, v9);
    a2 = v11;
    swift_bridgeObjectRelease(v10);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t, __n128))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

Swift::Int sub_10016C2AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  char *v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  Swift::Int v34;
  Swift::Int v35;
  Swift::Int v36;
  char *v37;
  char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::Int v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  Swift::Int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  Swift::Int v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  int64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  unint64_t v132;
  char *v133;
  _QWORD *v134;
  _QWORD *v135;
  Swift::Int v136;
  char *v137;
  Swift::Int v138;
  char *v139;
  int64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t);
  char *v146;
  char *v147;
  _QWORD *v148;
  int64_t v149;
  char *v150;
  Swift::Int v151;
  int64_t v152;
  uint64_t v153;

  v3 = sub_100012E18(&qword_1005D3DA0);
  v153 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v139 = (char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v150 = (char *)&v135 - v7;
  v8 = __chkstk_darwin(v6);
  v147 = (char *)&v135 - v9;
  __chkstk_darwin(v8);
  v146 = (char *)&v135 - v10;
  v11 = a1[1];
  result = _minimumMergeRunLength(_:)(v11);
  if (result >= v11)
  {
    if (v11 < 0)
      goto LABEL_143;
    if (v11)
      return sub_10016CCC8(0, v11, 1, a1);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_151;
  v136 = result;
  v142 = v1;
  if (v11 < 2)
  {
    v17 = _swiftEmptyArrayStorage;
    v141 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    if (v11 != 1)
    {
      v20 = _swiftEmptyArrayStorage[2];
      v19 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      v135 = v17;
      if (v20 >= 2)
      {
        v125 = *a1;
        do
        {
          v126 = v20 - 2;
          if (v20 < 2)
            goto LABEL_138;
          if (!v125)
            goto LABEL_150;
          v118 = v19;
          v127 = v19 + 32;
          v128 = *(_QWORD *)&v19[16 * v126 + 32];
          v129 = *(_QWORD *)&v19[16 * v20 + 24];
          v130 = v142;
          sub_10016CF2C(v125 + *(_QWORD *)(v153 + 72) * v128, v125 + *(_QWORD *)(v153 + 72) * *(_QWORD *)&v127[16 * v20 - 16], v125 + *(_QWORD *)(v153 + 72) * v129, v141);
          v142 = v130;
          if (v130)
            goto LABEL_117;
          if (v129 < v128)
            goto LABEL_139;
          if ((swift_isUniquelyReferenced_nonNull_native(v118) & 1) == 0)
            v118 = sub_1001562F4((uint64_t)v118);
          if (v126 >= *((_QWORD *)v118 + 2))
            goto LABEL_140;
          v131 = &v118[16 * v126 + 32];
          *(_QWORD *)v131 = v128;
          *((_QWORD *)v131 + 1) = v129;
          v132 = *((_QWORD *)v118 + 2);
          if (v20 > v132)
            goto LABEL_141;
          v19 = v118;
          memmove(&v118[16 * v20 + 16], &v118[16 * v20 + 32], 16 * (v132 - v20));
          *((_QWORD *)v118 + 2) = v132 - 1;
          v20 = v132 - 1;
        }
        while (v132 > 2);
      }
      v133 = v19;
LABEL_119:
      swift_bridgeObjectRelease(v133);
      v134 = v135;
      v135[2] = 0;
      return swift_bridgeObjectRelease(v134);
    }
    v135 = _swiftEmptyArrayStorage;
  }
  else
  {
    v14 = v13 >> 1;
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v3);
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v153 + 80);
    v135 = (_QWORD *)v15;
    v141 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v19 = (char *)_swiftEmptyArrayStorage;
  v148 = a1;
  while (1)
  {
    v21 = v18;
    v22 = v18 + 1;
    v140 = v18;
    if (v18 + 1 >= v11)
    {
      v34 = v18 + 1;
      v41 = v142;
    }
    else
    {
      v144 = *a1;
      v23 = v144;
      v151 = v11;
      v24 = v18;
      v25 = v153;
      v26 = *(_QWORD *)(v153 + 72);
      v27 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 16);
      v28 = v146;
      v27(v146, v144 + v26 * v22, v3);
      v29 = v23 + v26 * v24;
      v30 = v147;
      v27(v147, v29, v3);
      v149 = sub_10016EA18();
      LODWORD(v145) = dispatch thunk of static Comparable.< infix(_:_:)(v28, v30, v3, v149);
      v31 = *(void (**)(char *, uint64_t))(v25 + 8);
      v32 = v30;
      v33 = v144;
      v31(v32, v3);
      v31(v28, v3);
      v34 = v24 + 2;
      v11 = v151;
      v152 = v26;
      if (v34 >= v151)
      {
        v41 = v142;
        v40 = v26;
      }
      else
      {
        v137 = v19;
        v143 = v26 * v22;
        v35 = v26 * v34;
        while (1)
        {
          v36 = v34;
          v37 = v146;
          v27(v146, v33 + v35, v3);
          v38 = v147;
          v27(v147, v33 + v143, v3);
          v39 = dispatch thunk of static Comparable.< infix(_:_:)(v37, v38, v3, v149);
          v31(v38, v3);
          v31(v37, v3);
          if (((v145 ^ v39) & 1) != 0)
            break;
          v34 = v36 + 1;
          v11 = v151;
          v40 = v152;
          v33 += v152;
          if (v151 == v34)
          {
            v34 = v151;
            v41 = v142;
            v19 = v137;
            goto LABEL_25;
          }
        }
        v41 = v142;
        v19 = v137;
        v34 = v36;
        v11 = v151;
        v40 = v152;
      }
LABEL_25:
      a1 = v148;
      v21 = v140;
      if ((v145 & 1) != 0)
      {
        if (v34 < v140)
          goto LABEL_144;
        if (v140 < v34)
        {
          v137 = v19;
          v42 = 0;
          v43 = v40 * (v34 - 1);
          v44 = v34 * v40;
          v45 = v140;
          v46 = v140 * v40;
          v149 = v34;
          do
          {
            if (v45 != v34 + v42 - 1)
            {
              if (!v144)
                goto LABEL_149;
              v47 = v41;
              v48 = v144 + v46;
              v49 = (char *)(v144 + v43);
              v145 = *(void (**)(char *, uint64_t, uint64_t))(v153 + 32);
              v145(v139, v144 + v46, v3);
              if (v46 < v43 || v48 >= v144 + v44)
              {
                swift_arrayInitWithTakeFrontToBack(v48, v49);
              }
              else if (v46 != v43)
              {
                swift_arrayInitWithTakeBackToFront(v48, v49);
              }
              v145(v49, (uint64_t)v139, v3);
              v41 = v47;
              a1 = v148;
              v34 = v149;
              v40 = v152;
            }
            ++v45;
            --v42;
            v43 -= v40;
            v44 -= v40;
            v46 += v40;
          }
          while (v45 < v34 + v42);
          v19 = v137;
          v21 = v140;
          v11 = v151;
        }
      }
    }
    if (v34 >= v11)
      goto LABEL_57;
    if (__OFSUB__(v34, v21))
      goto LABEL_142;
    if (v34 - v21 >= v136)
      goto LABEL_57;
    if (__OFADD__(v21, v136))
      goto LABEL_145;
    v50 = v21 + v136 >= v11 ? v11 : v21 + v136;
    if (v50 < v21)
      break;
    if (v34 != v50)
    {
      v137 = v19;
      v138 = v50;
      v51 = *(_QWORD *)(v153 + 72);
      v52 = *(char **)(v153 + 16);
      v142 = v41;
      v143 = (uint64_t)v52;
      v53 = v51 * (v34 - 1);
      v144 = v51;
      v54 = v34 * v51;
      do
      {
        v56 = 0;
        v149 = v34;
        v145 = (void (*)(char *, uint64_t, uint64_t))v54;
        while (1)
        {
          v57 = *a1;
          v151 = v54 + v56;
          v152 = v21;
          v58 = (char *)(v54 + v56 + v57);
          v59 = v146;
          v60 = (void (*)(char *, uint64_t, uint64_t))v143;
          ((void (*)(char *, char *, uint64_t))v143)(v146, v58, v3);
          v61 = v53;
          v62 = v53 + v56 + v57;
          v63 = a1;
          v64 = v147;
          v60(v147, v62, v3);
          v65 = sub_10016EA18();
          LOBYTE(v57) = dispatch thunk of static Comparable.< infix(_:_:)(v59, v64, v3, v65);
          v66 = *(void (**)(char *, uint64_t))(v153 + 8);
          v66(v64, v3);
          v66(v59, v3);
          if ((v57 & 1) == 0)
            break;
          v67 = *v63;
          if (!*v63)
            goto LABEL_147;
          v54 = (Swift::Int)v145;
          v68 = (char *)v145 + v67 + v56;
          v53 = v61;
          v69 = (char *)(v67 + v61 + v56);
          v70 = *(void (**)(char *, char *, uint64_t))(v153 + 32);
          v70(v150, v68, v3);
          swift_arrayInitWithTakeFrontToBack(v68, v69);
          v70(v69, v150, v3);
          v56 -= v144;
          v21 = v152 + 1;
          a1 = v148;
          v55 = v149;
          if (v149 == v152 + 1)
            goto LABEL_50;
        }
        v55 = v149;
        a1 = v63;
        v53 = v61;
        v54 = (Swift::Int)v145;
LABEL_50:
        v34 = v55 + 1;
        v53 += v144;
        v54 += v144;
        v21 = v140;
      }
      while (v34 != v138);
      v34 = v138;
      v41 = v142;
      v19 = v137;
    }
LABEL_57:
    if (v34 < v21)
      goto LABEL_137;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
    v142 = v41;
    v149 = v34;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v19 = sub_100155E58(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
    v73 = *((_QWORD *)v19 + 2);
    v72 = *((_QWORD *)v19 + 3);
    v20 = v73 + 1;
    if (v73 >= v72 >> 1)
      v19 = sub_100155E58((char *)(v72 > 1), v73 + 1, 1, v19);
    *((_QWORD *)v19 + 2) = v20;
    v74 = v19 + 32;
    v75 = &v19[16 * v73 + 32];
    v76 = v149;
    *(_QWORD *)v75 = v21;
    *((_QWORD *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        v77 = v20 - 1;
        if (v20 >= 4)
        {
          v82 = &v74[16 * v20];
          v83 = *((_QWORD *)v82 - 8);
          v84 = *((_QWORD *)v82 - 7);
          v88 = __OFSUB__(v84, v83);
          v85 = v84 - v83;
          if (v88)
            goto LABEL_126;
          v87 = *((_QWORD *)v82 - 6);
          v86 = *((_QWORD *)v82 - 5);
          v88 = __OFSUB__(v86, v87);
          v80 = v86 - v87;
          v81 = v88;
          if (v88)
            goto LABEL_127;
          v89 = v20 - 2;
          v90 = &v74[16 * v20 - 32];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v88 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          if (v88)
            goto LABEL_129;
          v88 = __OFADD__(v80, v93);
          v94 = v80 + v93;
          if (v88)
            goto LABEL_132;
          if (v94 >= v85)
          {
            v112 = &v74[16 * v77];
            v114 = *(_QWORD *)v112;
            v113 = *((_QWORD *)v112 + 1);
            v88 = __OFSUB__(v113, v114);
            v115 = v113 - v114;
            if (v88)
              goto LABEL_136;
            v105 = v80 < v115;
            goto LABEL_94;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v106 = *((_QWORD *)v19 + 4);
            v107 = *((_QWORD *)v19 + 5);
            v88 = __OFSUB__(v107, v106);
            v99 = v107 - v106;
            v100 = v88;
            goto LABEL_88;
          }
          v79 = *((_QWORD *)v19 + 4);
          v78 = *((_QWORD *)v19 + 5);
          v88 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          v81 = v88;
        }
        if ((v81 & 1) != 0)
          goto LABEL_128;
        v89 = v20 - 2;
        v95 = &v74[16 * v20 - 32];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v98 = __OFSUB__(v96, v97);
        v99 = v96 - v97;
        v100 = v98;
        if (v98)
          goto LABEL_131;
        v101 = &v74[16 * v77];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v88 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v88)
          goto LABEL_134;
        if (__OFADD__(v99, v104))
          goto LABEL_135;
        if (v99 + v104 >= v80)
        {
          v105 = v80 < v104;
LABEL_94:
          if (v105)
            v77 = v89;
          goto LABEL_96;
        }
LABEL_88:
        if ((v100 & 1) != 0)
          goto LABEL_130;
        v108 = &v74[16 * v77];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v88 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v88)
          goto LABEL_133;
        if (v111 < v99)
          goto LABEL_15;
LABEL_96:
        v116 = v77 - 1;
        if (v77 - 1 >= v20)
        {
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        v117 = *a1;
        if (!*a1)
          goto LABEL_148;
        v118 = v19;
        v119 = &v74[16 * v116];
        v120 = *(_QWORD *)v119;
        v121 = &v74[16 * v77];
        v122 = *((_QWORD *)v121 + 1);
        v123 = v142;
        sub_10016CF2C(v117 + *(_QWORD *)(v153 + 72) * *(_QWORD *)v119, v117 + *(_QWORD *)(v153 + 72) * *(_QWORD *)v121, v117 + *(_QWORD *)(v153 + 72) * v122, v141);
        v142 = v123;
        if (v123)
        {
LABEL_117:
          v133 = v118;
          goto LABEL_119;
        }
        if (v122 < v120)
          goto LABEL_123;
        if (v77 > *((_QWORD *)v118 + 2))
          goto LABEL_124;
        *(_QWORD *)v119 = v120;
        *(_QWORD *)&v74[16 * v116 + 8] = v122;
        v124 = *((_QWORD *)v118 + 2);
        if (v77 >= v124)
          goto LABEL_125;
        v19 = v118;
        v20 = v124 - 1;
        memmove(&v74[16 * v77], v121 + 16, 16 * (v124 - 1 - v77));
        *((_QWORD *)v118 + 2) = v124 - 1;
        a1 = v148;
        if (v124 <= 2)
          goto LABEL_15;
      }
    }
    v20 = 1;
LABEL_15:
    v11 = a1[1];
    v18 = v149;
    if (v149 >= v11)
    {
      v17 = v135;
      goto LABEL_105;
    }
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_10016CCC8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v30 = a1;
  v7 = sub_100012E18(&qword_1005D3DA0);
  v38 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v37 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v34 = (char *)&v28 - v11;
  result = __chkstk_darwin(v10);
  v33 = (char *)&v28 - v13;
  v36 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v14 = v38[9];
    v31 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v32 = a4;
    v40 = v14 * (v36 - 1);
    v35 = v14;
    v39 = v14 * v36;
LABEL_5:
    v15 = 0;
    v16 = v30;
    while (1)
    {
      v17 = *a4;
      v18 = v33;
      v19 = v31;
      v31(v33, v39 + v15 + *a4, v7);
      v20 = v34;
      v19(v34, v40 + v15 + v17, v7);
      v21 = sub_10016EA18();
      LOBYTE(v17) = dispatch thunk of static Comparable.< infix(_:_:)(v18, v20, v7, v21);
      v22 = (void (*)(char *, uint64_t))v38[1];
      v23 = v20;
      a4 = v32;
      v22(v23, v7);
      result = ((uint64_t (*)(char *, uint64_t))v22)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v40 += v35;
        v39 += v35;
        if (++v36 == v29)
          return result;
        goto LABEL_5;
      }
      v24 = *a4;
      if (!*a4)
        break;
      v25 = v24 + v39 + v15;
      v26 = v24 + v40 + v15;
      v27 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v27(v37, v25, v7);
      swift_arrayInitWithTakeFrontToBack(v25, v26);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v26, v37, v7);
      v15 -= v35;
      if (v36 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10016CF2C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  char *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  char *v36;
  unint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, unint64_t, uint64_t);
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v8 = sub_100012E18(&qword_1005D3DA0);
  v9 = *(_QWORD **)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v52 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v51 = (char *)&v45 - v12;
  v53 = v9[9];
  if (!v53)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v53 == -1)
    goto LABEL_63;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v53 == -1)
    goto LABEL_64;
  v14 = (uint64_t)(a2 - a1) / v53;
  v56 = a1;
  v55 = a4;
  v15 = v13 / v53;
  if (v14 >= v13 / v53)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v53;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v29 = a4 + v17;
      v54 = a4 + v17;
      v56 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v31 = -v53;
        v32 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v46 = -v53;
        v47 = v32;
        v49 = a4;
        v50 = a1;
        v48 = v9;
        do
        {
          v53 = a3 + v31;
          v33 = v51;
          v34 = v47;
          v47(v51, v29 + v31, v8);
          v35 = a2 + v31;
          v36 = v52;
          v34(v52, a2 + v31, v8);
          v37 = sub_10016EA18();
          LOBYTE(v34) = dispatch thunk of static Comparable.< infix(_:_:)(v33, v36, v8, v37);
          v38 = (void (*)(char *, uint64_t))v9[1];
          v38(v36, v8);
          v38(v33, v8);
          if ((v34 & 1) != 0)
          {
            v39 = v53;
            if (a3 < a2 || v53 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v53, a2 + v31);
              v9 = v48;
              v40 = v49;
              v41 = v50;
            }
            else
            {
              v9 = v48;
              v40 = v49;
              v41 = v50;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v53, a2 + v31);
            }
            v31 = v46;
            v56 += v46;
          }
          else
          {
            v39 = v53;
            v42 = v54;
            v43 = v54 + v31;
            v54 += v31;
            if (a3 < v42 || v53 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack(v53, v43);
              v35 = a2;
              v9 = v48;
              v40 = v49;
              v41 = v50;
            }
            else
            {
              v9 = v48;
              v40 = v49;
              v41 = v50;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront(v53, v43);
              v35 = a2;
            }
            v31 = v46;
          }
          v29 = v54;
          if (v54 <= v40)
            break;
          a2 = v35;
          a3 = v39;
        }
        while (v35 > v41);
      }
      goto LABEL_61;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v53;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v50 = a4 + v16;
    v54 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v51;
        v19(v51, a2, v8);
        v22 = v52;
        v19(v52, a4, v8);
        v23 = sub_10016EA18();
        v24 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v22, v8, v23);
        v25 = (void (*)(char *, uint64_t))v9[1];
        v25(v22, v8);
        v25(v21, v8);
        v26 = v56;
        if ((v24 & 1) != 0)
        {
          v27 = a2 + v53;
          if (v56 < a2 || v56 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack(v56, a2);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v56 == a2)
              v26 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v56, a2);
          }
        }
        else
        {
          v28 = v55 + v53;
          if (v56 < v55 || v56 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v56, v55);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v56 != v55)
              swift_arrayInitWithTakeBackToFront(v56, v55);
          }
          v55 = v28;
          v27 = a2;
        }
        v56 = v26 + v53;
        a4 = v55;
        if (v55 >= v50)
          break;
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_61:
    sub_10015600C(&v56, &v55, (uint64_t *)&v54);
    return 1;
  }
LABEL_65:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t _s11MobileNotes09ICArchiveB9PreviewerC4NoteV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;

  if ((static URL.== infix(_:_:)(a1, a2) & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for ICArchiveNotesPreviewer.Note(0) + 20);
    v5 = (_QWORD *)(a1 + v4);
    v6 = *(_QWORD *)(a1 + v4 + 8);
    v7 = (_QWORD *)(a2 + v4);
    v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v5, v6, *v7, v8, 0) & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_10016D4CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_100012E18(&qword_1005D19E8);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10016D5D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10016D6C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10016D7B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(sub_100012E18(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10016D8C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100012E18(&qword_1005D1A18);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

id sub_10016D9D0(id result, uint64_t a2, char a3)
{
  id v4;

  switch(a3)
  {
    case 2:
      return (id)swift_errorRetain();
    case 1:
      return result;
    case 0:
      v4 = result;
      return (id)swift_bridgeObjectRetain(a2);
  }
  return result;
}

unint64_t sub_10016DA1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1848;
  if (!qword_1005D1848)
  {
    v1 = type metadata accessor for ICArchiveNotesPreviewer.Note(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ICArchiveNotesPreviewer.Note, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1848);
  }
  return result;
}

uint64_t type metadata accessor for ICArchiveNotesPreviewer()
{
  return objc_opt_self(_TtC11MobileNotes23ICArchiveNotesPreviewer);
}

uint64_t *initializeBufferWithCopyOfBuffer for ICArchiveNotesPreviewer.Note(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
  }
  return a1;
}

uint64_t destroy for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t initializeWithCopy for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t initializeWithTake for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  v12 = v8[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016DD18);
}

uint64_t sub_10016DD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveNotesPreviewer.Note(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016DDB0);
}

uint64_t sub_10016DDB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_10016DE2C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100456880;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10016DEE0(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_10016DEE0(id result, unsigned __int8 a2)
{
  if (a2 == 2)
    return (id)swift_errorRetain(result);
  if (a2 <= 1u)
    return result;
  return result;
}

void destroy for ICArchiveNotesPreviewer.Note.States(uint64_t a1)
{
  sub_10016DF14(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_10016DF14(id a1, unsigned __int8 a2)
{
  if (a2 == 2)
  {
    swift_errorRelease(a1);
  }
  else if (a2 <= 1u)
  {

  }
}

uint64_t assignWithCopy for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10016DEE0(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_10016DF14(v5, v6);
  return a1;
}

uint64_t initializeWithTake for RealtimeCollaborationController.GroupActivityState(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for ICArchiveNotesPreviewer.Note.States(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_10016DF14(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICArchiveNotesPreviewer.Note.States(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ICArchiveNotesPreviewer.Note.States(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_10016E064(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_10016E07C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICArchiveNotesPreviewer.Note.States()
{
  return &type metadata for ICArchiveNotesPreviewer.Note.States;
}

uint64_t sub_10016E0A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100012E18(&qword_1005D1958);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10016E1AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v4;
    if (v6 >= v7 || v6 + 8 * v4 <= a3)
    {
      sub_100012E18(&qword_1005D3D80);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10016E2B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 8 * a1 + 32;
    v8 = a3 + 8 * v5;
    if (v7 >= v8 || v7 + 8 * v5 <= a3)
    {
      sub_100012E18(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10016E3B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 24 * a1 + 32;
  v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_10016E4AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10016E590(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100012E18(&qword_1005D0B18);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10016E698(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10016E7B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 40 * a1 + 32;
  v7 = a3 + 40 * v4;
  if (v6 >= v7 || v6 + 40 * v4 <= a3)
  {
    sub_100012E18(&qword_1005D1920);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10016E8BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

void sub_10016E9AC(void *a1, char a2)
{
  if ((a2 & 1) != 0)
    swift_errorRelease(a1);
  else

}

uint64_t sub_10016E9B8(uint64_t a1)
{
  uint64_t v1;

  return sub_10016A58C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_10016E9D4()
{
  unint64_t result;

  result = qword_1005D1A30;
  if (!qword_1005D1A30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ICArchiveImporter.Errors, &type metadata for ICArchiveImporter.Errors);
    atomic_store(result, (unint64_t *)&qword_1005D1A30);
  }
  return result;
}

unint64_t sub_10016EA18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1A40;
  if (!qword_1005D1A40)
  {
    v1 = sub_10001537C(&qword_1005D3DA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for ICObjectReferences<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1A40);
  }
  return result;
}

void ICMoveDecisionControlling.performDecision(completion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v6[4] = a1;
  v7 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10016EB00;
  v6[3] = &unk_10055ACA8;
  v4 = _Block_copy(v6);
  v5 = v7;
  swift_retain(a2);
  swift_release(v5);
  objc_msgSend(v2, "performDecisionWithCompletion:", v4);
  _Block_release(v4);
}

uint64_t sub_10016EB00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  unint64_t v5;
  uint64_t v6;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = sub_10016EF58();
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

uint64_t ICMoveDecisionControlling.performDecision()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v2[3] = a1;
  v2[4] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[5] = v3;
  v2[6] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor, v4);
  v2[7] = v5;
  v2[8] = v6;
  return swift_task_switch(sub_10016EBCC, v5, v6);
}

uint64_t sub_10016EBCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 24);
  v2 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 72) = v2;
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v1 + 80) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 88) = v4;
  v5 = sub_100012E18((uint64_t *)&unk_1005D72D0);
  *v4 = v1;
  v4[1] = sub_10016ECA0;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 16, v2, &protocol witness table for MainActor, 0xD000000000000011, 0x800000010047C2B0, sub_10016EE68, v3, v5);
}

uint64_t sub_10016ECA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = *(_QWORD *)(*v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10016ED08, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10016ED08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_10016ED38(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD aBlock[5];
  uint64_t v12;

  v4 = sub_100012E18(&qword_1005D7370);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 16) & ~v7;
  v9 = swift_allocObject(&unk_10055ACE0, v8 + v6, v7 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10016EF18;
  v12 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10016EB00;
  aBlock[3] = &unk_10055ACF8;
  v10 = _Block_copy(aBlock);
  swift_release(v12);
  objc_msgSend(a2, "performDecisionWithCompletion:", v10);
  _Block_release(v10);
}

void sub_10016EE68(uint64_t a1)
{
  uint64_t v1;

  sub_10016ED38(a1, *(void **)(v1 + 24));
}

uint64_t sub_10016EE70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  swift_bridgeObjectRetain(a1);
  v1 = sub_100012E18(&qword_1005D7370);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t sub_10016EEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100012E18(&qword_1005D7370);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10016EF18(uint64_t a1)
{
  sub_100012E18(&qword_1005D7370);
  return sub_10016EE70(a1);
}

unint64_t sub_10016EF58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D6460;
  if (!qword_1005D6460)
  {
    v1 = objc_opt_self(NSManagedObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D6460);
  }
  return result;
}

void *AddTagsToNotesIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static AddTagsToNotesIntent.persistentIdentifier;
}

unint64_t static AddTagsToNotesIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_10016EFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static AddTagsToNotesIntent.title);
  sub_10012A0B0(v10, (uint64_t)static AddTagsToNotesIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x800000010047C310);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t AddTagsToNotesIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CE9B0 != -1)
    swift_once(&qword_1005CE9B0, sub_10016EFC4);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static AddTagsToNotesIntent.title);
}

uint64_t static AddTagsToNotesIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CE9B0 != -1)
    swift_once(&qword_1005CE9B0, sub_10016EFC4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static AddTagsToNotesIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static AddTagsToNotesIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x800000010047C2F0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static AddTagsToNotesIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v17;

  v0 = sub_100012E18(&qword_1005D1A50);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D1A58);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10016F5D0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for AddTagsToNotesIntent, v6);
  v7._countAndFlagsBits = 0x2065687420646441;
  v7._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004568A0, v8);
  v10 = sub_100012E18(&qword_1005D1A68);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x6F74207367617420;
  v11._object = (void *)0xED00002065687420;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_1004568C8, v12);
  v14 = sub_100012E18(&qword_1005D1A70);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x7365746F6E20;
  v15._object = (void *)0xE600000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for AddTagsToNotesIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for AddTagsToNotesIntent, v6);
}

unint64_t sub_10016F5D0()
{
  unint64_t result;

  result = qword_1005D1A60;
  if (!qword_1005D1A60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddTagsToNotesIntent, &type metadata for AddTagsToNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1A60);
  }
  return result;
}

uint64_t sub_10016F614@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10016F63C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t AddTagsToNotesIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  v6 = type metadata accessor for BulkModifyNoteTags(0);
  v5[15] = v6;
  v5[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10016F6CC, 0, 0);
}

uint64_t sub_10016F6CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0[16];
  v3 = v0[13];
  v2 = v0[14];
  v5 = v0[11];
  v4 = v0[12];
  AppDependency.wrappedValue.getter(v0 + 6);
  v6 = v0[6];
  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v3);
  swift_retain(v2);
  AppDependency.wrappedValue.getter(v0 + 2);
  Logger.init(subsystem:category:)(v0[2], v0[3], v0[4], v0[5]);
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  *(_BYTE *)v1 = 0;
  *(_QWORD *)(v1 + 8) = v6;
  IntentParameter.wrappedValue.getter(v0 + 7);
  v7 = v0[7];
  v0[17] = v7;
  IntentParameter.wrappedValue.getter(v0 + 8);
  v8 = v0[8];
  v0[18] = v8;
  v9 = (_QWORD *)swift_task_alloc(dword_1005DB4AC);
  v0[19] = v9;
  *v9 = v0;
  v9[1] = sub_100130584;
  return sub_10039799C(v7, v8);
}

uint64_t sub_10016F800(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  v6 = v1[3];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D1A7C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100130768;
  return AddTagsToNotesIntent.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_10016F878@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = _s11MobileNotes09AddTagsToB6IntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t _s11MobileNotes09AddTagsToB6IntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *);
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64x2_t v34;
  int16x8_t v35;
  _BYTE *v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t, uint64_t);
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _BYTE v53[12];
  unsigned int v54;
  void (*v55)(_BYTE *);
  void (*v56)(_BYTE *, uint64_t, uint64_t);
  uint64_t v57;
  unsigned int v58;
  _BYTE *v59;
  void (*v60)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD v70[3];
  char v71;
  unsigned __int32 v72;

  v67 = type metadata accessor for InputConnectionBehavior(0);
  v63 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = &v53[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v1 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2 = __chkstk_darwin(v1);
  v65 = &v53[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v64 = &v53[-v4];
  v5 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v5);
  v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = v8;
  __chkstk_darwin(v8);
  v12 = &v53[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = &v53[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  v61 = v19;
  __chkstk_darwin(v19);
  v59 = &v53[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v62 = sub_100012E18(&qword_1005CEE58);
  v22 = String.LocalizationValue.init(stringLiteral:)(0x7365746F4ELL, 0xE500000000000000);
  static Locale.current.getter(v22);
  v23 = *(void (**)(_BYTE *))(v9 + 104);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v58 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v57 = v10;
  v23(v12);
  v56 = (void (*)(_BYTE *, uint64_t, uint64_t))v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter title for notes to add tags to", 40, 2);
  v25 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x8000000100476E60);
  static Locale.current.getter(v25);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v23)(v12, v24, v10);
  v26 = v7;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter description for notes", 31, 2);
  v60 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v60(v7, 0, 1, v19);
  v68 = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v29 = v64;
  v28(v64, 1, 1, v27);
  v30 = v65;
  v28(v65, 1, 1, v27);
  v70[0] = sub_1001E8EEC();
  v70[1] = v31;
  v70[2] = v32;
  v71 = v33 & 1;
  v34 = (uint64x2_t)vdupq_n_s64(v33);
  v35 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_100451C10), (int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_100451C00));
  *(int8x8_t *)v35.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v35), (int8x8_t)0x1000100010001);
  v72 = vmovn_s16(v35).u32[0];
  v54 = enum case for InputConnectionBehavior.default(_:);
  v55 = *(void (**)(_BYTE *))(v63 + 104);
  v36 = v66;
  v55(v66);
  v37 = sub_100127D40();
  v38 = v59;
  v63 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v59, v26, &v68, v29, v30, v36, v70, &type metadata for VisibleNotesQuery, v37);
  v62 = sub_100012E18(&qword_1005CEE68);
  v39 = String.LocalizationValue.init(stringLiteral:)(1936154964, 0xE400000000000000);
  static Locale.current.getter(v39);
  v40 = v58;
  v42 = v56;
  v41 = v57;
  v56(v12, v58, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter title for tags to add to notes", 40, 2);
  v43 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x8000000100476EC0);
  static Locale.current.getter(v43);
  v42(v12, v40, v41);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter description for tags", 30, 2);
  v60(v26, 0, 1, v61);
  v70[0] = 0;
  v44 = v64;
  v28(v64, 1, 1, v27);
  v45 = v65;
  v28(v65, 1, 1, v27);
  v46 = v66;
  ((void (*)(_BYTE *, _QWORD, uint64_t))v55)(v66, v54, v67);
  v47 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v38, v26, v70, v44, v45, v46, v47);
  sub_100012E18(&qword_1005CEE50);
  v68 = 0xD000000000000021;
  v69 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v70, &v68, &type metadata for String, &protocol witness table for String);
  v48 = type metadata accessor for AppDependencyManager(0);
  v49 = static AppDependencyManager.shared.getter(v48);
  AppDependency.__allocating_init(key:manager:)(v70, v49);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v68 = 0xD000000000000024;
  v69 = 0x8000000100476B40;
  v50 = AnyHashable.init<A>(_:)(v70, &v68, &type metadata for String, &protocol witness table for String);
  v51 = static AppDependencyManager.shared.getter(v50);
  AppDependency.__allocating_init(key:manager:)(v70, v51);
  return v63;
}

unint64_t sub_10016FF00()
{
  unint64_t result;

  result = qword_1005D1A80;
  if (!qword_1005D1A80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddTagsToNotesIntent, &type metadata for AddTagsToNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1A80);
  }
  return result;
}

unint64_t sub_10016FF48()
{
  unint64_t result;

  result = qword_1005D1A88;
  if (!qword_1005D1A88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddTagsToNotesIntent, &type metadata for AddTagsToNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1A88);
  }
  return result;
}

uint64_t sub_10016FF8C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of AddTagsToNotesIntent.perform()>>, 1)+ 8);
}

uint64_t sub_10016FFB0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static AddTagsToNotesIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for AddTagsToNotesIntent()
{
  return &type metadata for AddTagsToNotesIntent;
}

uint64_t sub_10016FFD0()
{
  return sub_100016638(&qword_1005D1A98, &qword_1005D1AA0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

void *SetChecklistItemsCheckedIntentv1.persistentIdentifier.unsafeMutableAddressor()
{
  return &static SetChecklistItemsCheckedIntentv1.persistentIdentifier;
}

unint64_t static SetChecklistItemsCheckedIntentv1.persistentIdentifier.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_100170024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static SetChecklistItemsCheckedIntentv1.title);
  sub_10012A0B0(v10, (uint64_t)static SetChecklistItemsCheckedIntentv1.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x800000010047C3E0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title (V1)", 17, 2);
}

uint64_t SetChecklistItemsCheckedIntentv1.title.unsafeMutableAddressor()
{
  return sub_100171BF8(&qword_1005CE9B8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetChecklistItemsCheckedIntentv1.title, (uint64_t)sub_100170024);
}

uint64_t static SetChecklistItemsCheckedIntentv1.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100171C60(&qword_1005CE9B8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetChecklistItemsCheckedIntentv1.title, (uint64_t)sub_100170024, a1);
}

void *SetChecklistItemsCheckedIntentv1.assistantOnly.unsafeMutableAddressor()
{
  return &static SetChecklistItemsCheckedIntentv1.assistantOnly;
}

uint64_t static SetChecklistItemsCheckedIntentv1.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x800000010047C360);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t SetChecklistItemsCheckedIntentv1.changeOperation.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t SetChecklistItemsCheckedIntentv1.changeOperation.setter(char a1)
{
  char v2;

  v2 = a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t SetChecklistItemsCheckedIntentv1.loggingConfiguration.getter()
{
  uint64_t v1;

  AppDependency.wrappedValue.getter(&v1);
  return v1;
}

uint64_t SetChecklistItemsCheckedIntentv1.loggingConfiguration.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[4];

  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  return AppDependency.wrappedValue.setter(v5);
}

uint64_t (*SetChecklistItemsCheckedIntentv1.loggingConfiguration.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10012A600;
}

uint64_t SetChecklistItemsCheckedIntentv1.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t SetChecklistItemsCheckedIntentv1.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  v6 = *(_QWORD *)(type metadata accessor for ChecklistItemEntity(0) - 8);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v5[12] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[13] = swift_task_alloc(v8);
  v5[14] = swift_task_alloc(v8);
  return swift_task_switch(sub_1001705B0, 0, 0);
}

uint64_t sub_1001705B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  void *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 120) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 128) = v2;
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 96);
    LODWORD(v5) = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 240) = v5;
    v5 = v5;
    v6 = (v5 + 16) & ~v5;
    v7 = (v3 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v0 + 136) = *(_QWORD *)(v4 + 72);
    *(_QWORD *)(v0 + 144) = 0;
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 80);
    v31 = *(_QWORD *)(v0 + 72);
    v12 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 64);
    v30 = v5 | 7;
    sub_100147414(v1 + ((v5 + 32) & ~v5), v8);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 32));
    v13 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 152) = objc_msgSend(v13, "modernManagedObjectContext");

    sub_100147414(v8, v9);
    v14 = swift_allocObject(&unk_10055AE88, v7 + 32, v30);
    *(_QWORD *)(v0 + 160) = v14;
    sub_100147570(v9, v14 + v6);
    v15 = (_QWORD *)(v14 + v7);
    *v15 = v12;
    v15[1] = v11;
    v15[2] = v31;
    v15[3] = v10;
    v16 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v12);
    swift_retain(v11);
    swift_retain(v31);
    swift_retain(v10);
    v17 = (_QWORD *)swift_task_alloc(v16);
    *(_QWORD *)(v0 + 168) = v17;
    v18 = (char *)sub_100012E18((uint64_t *)&unk_1005D0640);
    *v17 = v0;
    v17[1] = sub_100170828;
    v19 = sub_100172ED8;
    v20 = (_QWORD *)(v0 + 24);
    v21 = (_QWORD *)v14;
  }
  else
  {
    swift_bridgeObjectRelease(v1);
    v23 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 64);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 40));
    v26 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 208) = objc_msgSend(v26, "modernManagedObjectContext");

    v27 = (_QWORD *)swift_allocObject(&unk_10055AEB0, 48, 7);
    *(_QWORD *)(v0 + 216) = v27;
    v27[2] = v25;
    v27[3] = v24;
    v27[4] = v23;
    v27[5] = v22;
    v28 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v25);
    swift_retain(v24);
    swift_retain(v23);
    swift_retain(v22);
    v20 = (_QWORD *)swift_task_alloc(v28);
    *(_QWORD *)(v0 + 224) = v20;
    *v20 = v0;
    v20[1] = sub_100170F44;
    v18 = (char *)&type metadata for () + 8;
    v19 = sub_100172FA0;
    v21 = v27;
  }
  return NSManagedObjectContext.perform<A>(_:)(v20, v19, v21, v18);
}

uint64_t sub_100170828()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  v2 = *(void **)(*(_QWORD *)v0 + 152);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_release(v1);

  return swift_task_switch(sub_10017088C, 0, 0);
}

uint64_t sub_10017088C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  char *v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 176) = v1;
  if (!v1)
    goto LABEL_6;
  v2 = objc_opt_self(ICNote);
  v3 = (void *)swift_dynamicCastObjCClass(v1, v2);
  if (!v3)
  {

LABEL_6:
    sub_10014763C(*(_QWORD *)(v0 + 112));
    goto LABEL_8;
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "managedObjectContext");
  *(_QWORD *)(v0 + 184) = v5;
  if (v5)
  {
    v6 = *(unsigned __int8 *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 104);
    v45 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 56);
    v42 = *(_QWORD *)(v0 + 64);
    v44 = *(_QWORD *)(v0 + 72);
    v9 = (v6 + 24) & ~v6;
    v10 = (*(_QWORD *)(v0 + 96) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = v6 | 7;
    sub_100147414(*(_QWORD *)(v0 + 112), v7);
    v12 = swift_allocObject(&unk_10055AED8, v10 + 32, v11);
    *(_QWORD *)(v0 + 192) = v12;
    *(_QWORD *)(v12 + 16) = v4;
    sub_100147570(v7, v12 + v9);
    v13 = (_QWORD *)(v12 + v10);
    *v13 = v8;
    v13[1] = v42;
    v13[2] = v44;
    v13[3] = v45;
    v14 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v8);
    swift_retain(v42);
    swift_retain(v44);
    swift_retain(v45);
    v15 = v1;
    v16 = (_QWORD *)swift_task_alloc(v14);
    *(_QWORD *)(v0 + 200) = v16;
    v17 = (char *)sub_100012E18((uint64_t *)&unk_1005D68A0);
    *v16 = v0;
    v16[1] = sub_100170C5C;
    v18 = sub_1001730E4;
    v19 = (_QWORD *)(v0 + 244);
    v20 = (_QWORD *)v12;
    return NSManagedObjectContext.perform<A>(_:)(v19, v18, v20, v17);
  }
  sub_10014763C(*(_QWORD *)(v0 + 112));

LABEL_8:
  v21 = *(_QWORD *)(v0 + 144) + 1;
  if (v21 == *(_QWORD *)(v0 + 128))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
    v23 = *(_QWORD *)(v0 + 72);
    v22 = *(_QWORD *)(v0 + 80);
    v25 = *(_QWORD *)(v0 + 56);
    v24 = *(_QWORD *)(v0 + 64);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 40));
    v26 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 208) = objc_msgSend(v26, "modernManagedObjectContext");

    v27 = (_QWORD *)swift_allocObject(&unk_10055AEB0, 48, 7);
    *(_QWORD *)(v0 + 216) = v27;
    v27[2] = v25;
    v27[3] = v24;
    v27[4] = v23;
    v27[5] = v22;
    v28 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v25);
    swift_retain(v24);
    swift_retain(v23);
    swift_retain(v22);
    v19 = (_QWORD *)swift_task_alloc(v28);
    *(_QWORD *)(v0 + 224) = v19;
    *v19 = v0;
    v19[1] = sub_100170F44;
    v17 = (char *)&type metadata for () + 8;
    v18 = sub_100172FA0;
    v20 = v27;
  }
  else
  {
    *(_QWORD *)(v0 + 144) = v21;
    v29 = *(unsigned __int8 *)(v0 + 240);
    v30 = *(_QWORD *)(v0 + 112);
    v31 = *(_QWORD *)(v0 + 104);
    v32 = *(_QWORD *)(v0 + 80);
    v33 = *(_QWORD *)(v0 + 56);
    v46 = *(_QWORD *)(v0 + 64);
    v47 = *(_QWORD *)(v0 + 72);
    v34 = (v29 + 16) & ~v29;
    v35 = (*(_QWORD *)(v0 + 96) + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = v29 | 7;
    sub_100147414(*(_QWORD *)(v0 + 120) + ((v29 + 32) & ~v29) + *(_QWORD *)(v0 + 136) * v21, v30);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 32));
    v36 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 152) = objc_msgSend(v36, "modernManagedObjectContext");

    sub_100147414(v30, v31);
    v37 = swift_allocObject(&unk_10055AE88, v35 + 32, v43);
    *(_QWORD *)(v0 + 160) = v37;
    sub_100147570(v31, v37 + v34);
    v38 = (_QWORD *)(v37 + v35);
    *v38 = v33;
    v38[1] = v46;
    v38[2] = v47;
    v38[3] = v32;
    v39 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v33);
    swift_retain(v46);
    swift_retain(v47);
    swift_retain(v32);
    v40 = (_QWORD *)swift_task_alloc(v39);
    *(_QWORD *)(v0 + 168) = v40;
    v17 = (char *)sub_100012E18((uint64_t *)&unk_1005D0640);
    *v40 = v0;
    v40[1] = sub_100170828;
    v18 = sub_100172ED8;
    v19 = (_QWORD *)(v0 + 24);
    v20 = (_QWORD *)v37;
  }
  return NSManagedObjectContext.perform<A>(_:)(v19, v18, v20, v17);
}

uint64_t sub_100170C5C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  v2 = *(void **)(*(_QWORD *)v0 + 184);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 200));
  swift_release(v1);

  return swift_task_switch(sub_100170CC0, 0, 0);
}

uint64_t sub_100170CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 112);

  sub_10014763C(v1);
  v2 = *(_QWORD *)(v0 + 144) + 1;
  if (v2 == *(_QWORD *)(v0 + 128))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
    v4 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80);
    v6 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 64);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 40));
    v7 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 208) = objc_msgSend(v7, "modernManagedObjectContext");

    v8 = (_QWORD *)swift_allocObject(&unk_10055AEB0, 48, 7);
    *(_QWORD *)(v0 + 216) = v8;
    v8[2] = v6;
    v8[3] = v5;
    v8[4] = v4;
    v8[5] = v3;
    v9 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v6);
    swift_retain(v5);
    swift_retain(v4);
    swift_retain(v3);
    v10 = (_QWORD *)swift_task_alloc(v9);
    *(_QWORD *)(v0 + 224) = v10;
    *v10 = v0;
    v10[1] = sub_100170F44;
    v11 = (char *)&type metadata for () + 8;
    v12 = sub_100172FA0;
    v13 = v8;
  }
  else
  {
    *(_QWORD *)(v0 + 144) = v2;
    v14 = *(unsigned __int8 *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 56);
    v28 = *(_QWORD *)(v0 + 64);
    v29 = *(_QWORD *)(v0 + 72);
    v19 = (v14 + 16) & ~v14;
    v20 = (*(_QWORD *)(v0 + 96) + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = v14 | 7;
    sub_100147414(*(_QWORD *)(v0 + 120) + ((v14 + 32) & ~v14) + *(_QWORD *)(v0 + 136) * v2, v15);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 32));
    v22 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 152) = objc_msgSend(v22, "modernManagedObjectContext");

    sub_100147414(v15, v16);
    v23 = swift_allocObject(&unk_10055AE88, v20 + 32, v21);
    *(_QWORD *)(v0 + 160) = v23;
    sub_100147570(v16, v23 + v19);
    v24 = (_QWORD *)(v23 + v20);
    *v24 = v18;
    v24[1] = v28;
    v24[2] = v29;
    v24[3] = v17;
    v25 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    swift_retain(v18);
    swift_retain(v28);
    swift_retain(v29);
    swift_retain(v17);
    v26 = (_QWORD *)swift_task_alloc(v25);
    *(_QWORD *)(v0 + 168) = v26;
    v11 = (char *)sub_100012E18((uint64_t *)&unk_1005D0640);
    *v26 = v0;
    v26[1] = sub_100170828;
    v12 = sub_100172ED8;
    v10 = (_QWORD *)(v0 + 24);
    v13 = (_QWORD *)v23;
  }
  return NSManagedObjectContext.perform<A>(_:)(v10, v12, v13, v11);
}

uint64_t sub_100170F44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 224);
  *(_QWORD *)(*v1 + 232) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100170FFC;
  }
  else
  {
    v5 = *(void **)(v2 + 208);
    swift_release(*(_QWORD *)(v2 + 216));

    v4 = sub_100170FB4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100170FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 104);
  v3 = *(_QWORD *)(v1 + 112);
  static IntentResult.result<>()(a1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100170FFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release(*(_QWORD *)(v0 + 216));

  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_100171050@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id result;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  _BYTE *v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  uint64_t v42;
  uint64_t v43;

  v40 = a4;
  v43 = a5;
  v39 = a3;
  v11 = type metadata accessor for ChecklistItemEntity(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, "textStorage");
  if (!result)
    goto LABEL_3;
  v16 = result;
  v38 = ICTTAttributeNameParagraphStyle;
  v17 = objc_msgSend(v16, "ic_range");
  v36 = v18;
  v37 = v17;
  sub_100147414(a2, (uint64_t)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(unsigned __int8 *)(v12 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 39) & 0xFFFFFFFFFFFFFFF8;
  v34 = a1;
  v35 = a7;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject(&unk_10055B018, v23 + 8, v19 | 7);
  sub_100147570((uint64_t)v14, v24 + v20);
  v25 = (_QWORD *)(v24 + v21);
  v26 = v39;
  v27 = v40;
  *v25 = v39;
  v25[1] = v27;
  v25[2] = v43;
  v25[3] = a6;
  *(_QWORD *)(v24 + v22) = v16;
  *(_QWORD *)(v24 + v23) = a1;
  a7 = v35;
  v28 = swift_allocObject(&unk_10055B040, 32, 7);
  *(_QWORD *)(v28 + 16) = sub_100173884;
  *(_QWORD *)(v28 + 24) = v24;
  aBlock[4] = sub_100147B3C;
  v42 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003DA3F0;
  aBlock[3] = &unk_10055B058;
  v29 = _Block_copy(aBlock);
  v30 = v42;
  swift_retain(v26);
  swift_retain(v27);
  swift_retain(v43);
  swift_retain(a6);
  v31 = v16;
  v32 = v34;
  swift_retain(v28);
  swift_release(v30);
  v33 = v38;
  objc_msgSend(v31, "enumerateAttribute:inRange:options:usingBlock:", v38, v37, v36, 0, v29);

  _Block_release(v29);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation(v28, "", 135, 43, 157, 1);
  swift_release(v24);
  result = (id)swift_release(v28);
  if ((v31 & 1) != 0)
    __break(1u);
  else
LABEL_3:
    *a7 = 0;
  return result;
}

void sub_1001712C8(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  void *v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, uint64_t);
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  unsigned int v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t inited;
  void *v56;
  id v57;
  id v58;
  unint64_t v59;
  Class isa;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE v68[72];
  id v69;
  _QWORD v70[5];

  v64 = a7;
  v65 = a2;
  v66 = a3;
  v67 = a4;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100012E18((uint64_t *)&unk_1005D8C60);
  __chkstk_darwin(v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100012E18((uint64_t *)&unk_1005D06A0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v61 - v25;
  __chkstk_darwin(v24);
  v28 = (char *)&v61 - v27;
  sub_100012CE8(a1, (uint64_t)v70, &qword_1005CF190);
  if (!v70[3])
  {
    sub_100012DDC((uint64_t)v70, &qword_1005CF190);
    return;
  }
  v29 = sub_1000163BC(0, (unint64_t *)&qword_1005D06B0, ICTTParagraphStyle_ptr);
  if ((swift_dynamicCast(&v69, v70, (char *)&type metadata for Any + 8, v29, 6) & 1) == 0)
    return;
  v30 = v69;
  if (objc_msgSend(v69, "style") != 103)
  {

    return;
  }
  v31 = type metadata accessor for ChecklistItemID(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v28, a5 + *(int *)(v31 + 20), v13);
  v32 = 1;
  v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v62(v28, 0, 1, v13);
  v63 = v30;
  v33 = objc_msgSend(v30, "uuid");
  if (v33)
  {
    v34 = v33;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v33);

    v32 = 0;
  }
  v62(v26, v32, 1, v13);
  v35 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_100012CE8((uint64_t)v28, (uint64_t)v19, (uint64_t *)&unk_1005D06A0);
  sub_100012CE8((uint64_t)v26, v35, (uint64_t *)&unk_1005D06A0);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v36((uint64_t)v19, 1, v13) == 1)
  {
    sub_100012DDC((uint64_t)v26, (uint64_t *)&unk_1005D06A0);
    sub_100012DDC((uint64_t)v28, (uint64_t *)&unk_1005D06A0);
    v37 = v36(v35, 1, v13);
    v38 = v63;
    if (v37 == 1)
    {
      sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D06A0);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  sub_100012CE8((uint64_t)v19, (uint64_t)v23, (uint64_t *)&unk_1005D06A0);
  if (v36(v35, 1, v13) == 1)
  {
    sub_100012DDC((uint64_t)v26, (uint64_t *)&unk_1005D06A0);
    sub_100012DDC((uint64_t)v28, (uint64_t *)&unk_1005D06A0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v23, v13);
    v38 = v63;
LABEL_13:
    sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D8C60);
    goto LABEL_31;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v35, v13);
  v39 = sub_100019C6C((unint64_t *)&unk_1005D1B70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v40 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v16, v13, v39);
  v41 = *(void (**)(char *, uint64_t))(v14 + 8);
  v41(v16, v13);
  sub_100012DDC((uint64_t)v26, (uint64_t *)&unk_1005D06A0);
  sub_100012DDC((uint64_t)v28, (uint64_t *)&unk_1005D06A0);
  v41(v23, v13);
  sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D06A0);
  v38 = v63;
  if ((v40 & 1) != 0)
  {
LABEL_15:
    v42 = objc_msgSend(v38, "mutableCopy");
    if (!v42)
    {
LABEL_30:
      *v67 = 1;
      goto LABEL_31;
    }
    v43 = v42;
    IntentParameter.wrappedValue.getter(v70);
    if (LOBYTE(v70[0]))
    {
      if (LOBYTE(v70[0]) == 1)
      {
        v44 = objc_msgSend(v38, "todo");
        if (v44)
        {
          v45 = v44;
          v46 = objc_msgSend(v44, "todoWithDone:", 0);
LABEL_28:
          v53 = v46;

          goto LABEL_29;
        }
      }
      else
      {
        v48 = objc_msgSend(v38, "todo");
        if (v48)
        {
          v45 = v48;
          v49 = objc_msgSend(v38, "todo");
          if (v49)
          {
            v50 = v49;
            v51 = objc_msgSend(v49, "done");

            v52 = v51 ^ 1;
          }
          else
          {
            v52 = 1;
          }
          v46 = objc_msgSend(v45, "todoWithDone:", v52);
          goto LABEL_28;
        }
      }
    }
    else
    {
      v47 = objc_msgSend(v38, "todo");
      if (v47)
      {
        v45 = v47;
        v46 = objc_msgSend(v47, "todoWithDone:", 1);
        goto LABEL_28;
      }
    }
    v53 = 0;
LABEL_29:
    objc_msgSend(v43, "setTodo:", v53);

    v54 = sub_100012E18(&qword_1005D1B58);
    inited = swift_initStackObject(v54, v68);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    v56 = (void *)ICTTAttributeNameParagraphStyle;
    *(_QWORD *)(inited + 32) = ICTTAttributeNameParagraphStyle;
    *(_QWORD *)(inited + 64) = sub_1000163BC(0, (unint64_t *)&qword_1005D1B60, ICTTMutableParagraphStyle_ptr);
    *(_QWORD *)(inited + 40) = v43;
    v57 = v56;
    v58 = v43;
    v59 = sub_100135F1C(inited);
    type metadata accessor for Key(0);
    sub_100019C6C((unint64_t *)&qword_1005CF5E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100452820);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v59);
    objc_msgSend(a10, "setAttributes:range:", isa, v65, v66);

    objc_msgSend(a11, "updateModificationDateAndChangeCount");
    goto LABEL_30;
  }
LABEL_31:

}

id sub_1001718E4()
{
  id v0;
  id v1;
  unsigned int v2;
  id v3;
  id v5;
  id v6;

  AppDependency.wrappedValue.getter(&v6);
  v0 = v6;
  v1 = objc_msgSend(v6, "modernManagedObjectContext");

  v6 = 0;
  v2 = objc_msgSend(v1, "save:", &v6);

  v3 = v6;
  if (v2)
    return v6;
  v5 = v6;
  _convertNSErrorToError(_:)(v3);

  return (id)swift_willThrow();
}

uint64_t sub_1001719C0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100478B90);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Title for enum representing formatting change operations", 56, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_100171BF8(&qword_1005CE9C0, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.typeDisplayRepresentation, (uint64_t)sub_1001719C0);
}

uint64_t sub_100171BF8(_QWORD *a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = a2(0);
  return sub_10012A0B0(v6, a3);
}

uint64_t static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100171C60(&qword_1005CE9C0, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.typeDisplayRepresentation, (uint64_t)sub_1001719C0, a1);
}

uint64_t sub_100171C60@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_10012A0B0(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

unint64_t sub_100171CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *);
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  unint64_t result;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  char *v54;
  char *v55;

  v0 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v0);
  v55 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v54 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E18(&qword_1005D1B48);
  v17 = sub_100012E18(&qword_1005D1B50);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 72);
  v20 = *(unsigned __int8 *)(v18 + 80);
  v21 = (v20 + 32) & ~v20;
  v46 = v17;
  v47 = 2 * v19;
  v22 = swift_allocObject(v16, v21 + 3 * v19, v20 | 7);
  v48 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_100456A10;
  v43 = v22 + v21 + *(int *)(v17 + 48);
  v44 = v22 + v21;
  *(_BYTE *)(v22 + v21) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x6B63656843, 0xE500000000000000);
  static Locale.current.getter(v23);
  v52 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v45 = *(void (**)(char *))(v4 + 104);
  v24 = v53;
  v45(v6);
  v25 = v6;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "Link enum value", 15, 2);
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v26 = v54;
  v27 = v49;
  v42(v54, 1, 1, v49);
  v28 = type metadata accessor for DisplayRepresentation.Image(0);
  v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v51 = v28;
  v29 = v55;
  v50(v55, 1, 1, v28);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v26, v29);
  v30 = v44;
  v43 = v44 + v19 + *(int *)(v46 + 48);
  *(_BYTE *)(v44 + v19) = 1;
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6B636568636E55, 0xE700000000000000);
  static Locale.current.getter(v31);
  v32 = v45;
  ((void (*)(char *, _QWORD, uint64_t))v45)(v25, v52, v24);
  v33 = v15;
  v34 = v25;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v25, "Link enum value", 15, 2);
  v35 = v54;
  v36 = v27;
  v37 = v42;
  v42(v54, 1, 1, v36);
  v38 = v55;
  v50(v55, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)(v33, v35, v38);
  *(_BYTE *)(v30 + v47) = 2;
  v39 = String.LocalizationValue.init(stringLiteral:)(0x656C67676F54, 0xE600000000000000);
  static Locale.current.getter(v39);
  ((void (*)(char *, _QWORD, uint64_t))v32)(v34, v52, v53);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v34, "Link enum value", 15, 2);
  v37(v35, 1, 1, v49);
  v50(v38, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)(v33, v35, v38);
  result = sub_100135F38(v48);
  static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations = result;
  return result;
}

uint64_t *SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1005CE9C8 != -1)
    swift_once(&qword_1005CE9C8, sub_100171CCC);
  return &static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations;
}

uint64_t static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations.getter()
{
  _BYTE v1[24];

  if (qword_1005CE9C8 != -1)
    swift_once(&qword_1005CE9C8, sub_100171CCC);
  swift_beginAccess(&static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations, v1, 0, 0);
  return swift_bridgeObjectRetain(static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations);
}

uint64_t static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations.setter(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[24];

  if (qword_1005CE9C8 != -1)
    swift_once(&qword_1005CE9C8, sub_100171CCC);
  swift_beginAccess(&static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations, v4, 1, 0);
  v2 = static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations;
  static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t (*static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations.modify(uint64_t a1))(_QWORD)
{
  if (qword_1005CE9C8 != -1)
    swift_once(&qword_1005CE9C8, sub_100171CCC);
  swift_beginAccess(&static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.caseDisplayRepresentations, a1, 33, 0);
  return j__swift_endAccess;
}

_UNKNOWN **static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.allCases.getter()
{
  return &off_100555780;
}

uint64_t SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6B63656863;
  if (a1 == 1)
    return 0x6B636568636E75;
  return 0x656C67676F74;
}

uint64_t sub_100172334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002152EC(*a1, *a2);
}

unint64_t sub_100172340@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s11MobileNotes32SetChecklistItemsCheckedIntentv1V0F19ChangeOperationTypeO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10017236C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x6B636568636E75;
  if (v2 != 1)
  {
    v5 = 0x656C67676F74;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6B63656863;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

Swift::Int sub_1001723C4()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE700000000000000;
  v3 = 0x6B636568636E75;
  if (v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x6B63656863;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE500000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10017245C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE700000000000000;
  v3 = 0x6B636568636E75;
  if (*v1 != 1)
  {
    v3 = 0x656C67676F74;
    v2 = 0xE600000000000000;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x6B63656863;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE500000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1001724D0(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE700000000000000;
  v4 = 0x6B636568636E75;
  if (v2 != 1)
  {
    v4 = 0x656C67676F74;
    v3 = 0xE600000000000000;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x6B63656863;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE500000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

uint64_t sub_100172564@<X0>(uint64_t a1@<X8>)
{
  return sub_10017262C(&qword_1005CE9C0, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType.typeDisplayRepresentation, (uint64_t)sub_1001719C0, a1);
}

uint64_t sub_100172588(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100127D84();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1001725C0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10017339C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1001725F8(_QWORD *a1@<X8>)
{
  *a1 = &off_1005557A8;
}

uint64_t sub_100172608@<X0>(uint64_t a1@<X8>)
{
  return sub_10017262C(&qword_1005CE9B8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static SetChecklistItemsCheckedIntentv1.title, (uint64_t)sub_100170024, a1);
}

uint64_t sub_10017262C@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_10012A0B0(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_1001726A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  v6 = v1[3];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D1AAC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100130768;
  return SetChecklistItemsCheckedIntentv1.perform()(a1, v4, v5, v7, v6);
}

uint64_t sub_10017271C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = _s11MobileNotes32SetChecklistItemsCheckedIntentv1VACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

uint64_t sub_100172744()
{
  uint64_t v1;

  AppDependency.wrappedValue.getter(&v1);
  return v1;
}

uint64_t _s11MobileNotes32SetChecklistItemsCheckedIntentv1VACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v49;
  unsigned int v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  unsigned int v54;
  void (*v55)(char *);
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD v66[7];

  v63 = type metadata accessor for InputConnectionBehavior(0);
  v59 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v62 = (char *)&v49 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2 = __chkstk_darwin(v1);
  v61 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v60 = (char *)&v49 - v4;
  v5 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  v57 = v18;
  __chkstk_darwin(v18);
  v53 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100012E18((uint64_t *)&unk_1005D1B80);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x73696C6B63656843, 0xEE006D6574492074);
  static Locale.current.getter(v21);
  v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v50 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v52 = v8;
  v23(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  v51 = v23;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Parameter title for Set Checklist Items Checked intent", 54, 2);
  v24 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002FLL, 0x8000000100476F30);
  static Locale.current.getter(v24);
  v23(v11, v22, v8);
  v25 = v7;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Parameter description for checklist item", 40, 2);
  v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v49 = v7;
  v56(v7, 0, 1, v18);
  v66[0] = 0;
  v26 = type metadata accessor for IntentDialog(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28 = v60;
  v27(v60, 1, 1, v26);
  v29 = v61;
  v27(v61, 1, 1, v26);
  v54 = enum case for InputConnectionBehavior.default(_:);
  v55 = *(void (**)(char *))(v59 + 104);
  v30 = v62;
  v55(v62);
  v31 = sub_100019C6C((unint64_t *)&unk_1005CEE80, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
  v32 = v53;
  v59 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v53, v25, v66, v28, v29, v30, v31);
  v58 = sub_100012E18(&qword_1005D1B90);
  v33 = String.LocalizationValue.init(stringLiteral:)(0x6F6974617265704FLL, 0xE90000000000006ELL);
  static Locale.current.getter(v33);
  v34 = v50;
  v35 = v51;
  v36 = v52;
  v51(v11, v50, v52);
  v37 = v32;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Parameter title for Set Checklist Items Checked intent", 54, 2);
  v38 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x8000000100476F90);
  static Locale.current.getter(v38);
  v35(v11, v34, v36);
  v39 = v49;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Parameter description for operation", 35, 2);
  v56(v39, 0, 1, v57);
  LOBYTE(v66[0]) = 2;
  v40 = v60;
  v27(v60, 1, 1, v26);
  v41 = v61;
  v27(v61, 1, 1, v26);
  v42 = v62;
  ((void (*)(char *, _QWORD, uint64_t))v55)(v62, v54, v63);
  v43 = sub_100127D84();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v37, v39, v66, v40, v41, v42, &off_1005556C8, v43);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v64 = 0xD000000000000024;
  v65 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v66, &v64, &type metadata for String, &protocol witness table for String);
  v44 = type metadata accessor for AppDependencyManager(0);
  v45 = static AppDependencyManager.shared.getter(v44);
  AppDependency.__allocating_init(key:manager:)(v66, v45);
  sub_100012E18(&qword_1005CEE50);
  v64 = 0xD000000000000021;
  v65 = 0x8000000100476B70;
  v46 = AnyHashable.init<A>(_:)(v66, &v64, &type metadata for String, &protocol witness table for String);
  v47 = static AppDependencyManager.shared.getter(v46);
  AppDependency.__allocating_init(key:manager:)(v66, v47);
  return v59;
}

uint64_t sub_100172DB8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for ChecklistItemEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  v8 = type metadata accessor for URL(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = v7 + *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v9(v7 + v1[5], v8);
  swift_release(*(_QWORD *)(v7 + v1[6]));
  swift_release(*(_QWORD *)(v7 + v1[7]));
  swift_release(*(_QWORD *)(v7 + v1[8]));
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v6 + 16));
  swift_release(*(_QWORD *)(v0 + v6 + 24));
  return swift_deallocObject(v0, v6 + 32, v5);
}

void sub_100172ED8(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;
  void *v4;

  type metadata accessor for ChecklistItemEntity(0);
  AppDependency.wrappedValue.getter(&v4);
  v2 = v4;
  v3 = ChecklistItemEntity.note(in:)(v4);

  *a1 = v3;
}

uint64_t sub_100172F64()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

id sub_100172FA0()
{
  return sub_1001718E4();
}

uint64_t sub_100172FBC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for ChecklistItemEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  v7 = v0 + v4;
  v8 = type metadata accessor for URL(0);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v10 = v7 + *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v9(v7 + v1[5], v8);
  swift_release(*(_QWORD *)(v7 + v1[6]));
  swift_release(*(_QWORD *)(v7 + v1[7]));
  swift_release(*(_QWORD *)(v7 + v1[8]));
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  swift_release(*(_QWORD *)(v0 + v6 + 16));
  swift_release(*(_QWORD *)(v0 + v6 + 24));
  return swift_deallocObject(v0, v6 + 32, v5);
}

id sub_1001730E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for ChecklistItemEntity(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_100171050(*(void **)(v1 + 16), v1 + v4, *v5, v5[1], v5[2], v5[3], a1);
}

unint64_t _s11MobileNotes32SetChecklistItemsCheckedIntentv1V0F19ChangeOperationTypeO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100555718, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_100173198()
{
  unint64_t result;

  result = qword_1005D1AB0;
  if (!qword_1005D1AB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AB0);
  }
  return result;
}

unint64_t sub_1001731E0()
{
  unint64_t result;

  result = qword_1005D1AB8;
  if (!qword_1005D1AB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AB8);
  }
  return result;
}

unint64_t sub_100173228()
{
  unint64_t result;

  result = qword_1005D1AC0;
  if (!qword_1005D1AC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AC0);
  }
  return result;
}

unint64_t sub_100173270()
{
  unint64_t result;

  result = qword_1005D1AC8;
  if (!qword_1005D1AC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AC8);
  }
  return result;
}

void *sub_1001732B4()
{
  return &protocol witness table for String;
}

unint64_t sub_1001732C4()
{
  unint64_t result;

  result = qword_1005D1AD0;
  if (!qword_1005D1AD0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AD0);
  }
  return result;
}

unint64_t sub_10017330C()
{
  unint64_t result;

  result = qword_1005D1AD8;
  if (!qword_1005D1AD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AD8);
  }
  return result;
}

unint64_t sub_100173354()
{
  unint64_t result;

  result = qword_1005D1AE0;
  if (!qword_1005D1AE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AE0);
  }
  return result;
}

unint64_t sub_10017339C()
{
  unint64_t result;

  result = qword_1005D1AE8;
  if (!qword_1005D1AE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AE8);
  }
  return result;
}

uint64_t sub_1001733E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001735AC(a1, a2, a3, (uint64_t (*)(void))sub_100127D84, (uint64_t)&opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>);
}

unint64_t sub_1001733F8()
{
  unint64_t result;

  result = qword_1005D1AF8;
  if (!qword_1005D1AF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1AF8);
  }
  return result;
}

unint64_t sub_100173440()
{
  unint64_t result;

  result = qword_1005D1B00;
  if (!qword_1005D1B00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1B00);
  }
  return result;
}

unint64_t sub_100173488()
{
  unint64_t result;

  result = qword_1005D1B08;
  if (!qword_1005D1B08)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D1B08);
  }
  return result;
}

uint64_t sub_1001734CC()
{
  return sub_100016638(&qword_1005D1B10, &qword_1005D1B18, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1001734FC()
{
  unint64_t result;

  result = qword_1005D1B20;
  if (!qword_1005D1B20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1, &type metadata for SetChecklistItemsCheckedIntentv1);
    atomic_store(result, (unint64_t *)&qword_1005D1B20);
  }
  return result;
}

unint64_t sub_100173544()
{
  unint64_t result;

  result = qword_1005D1B28;
  if (!qword_1005D1B28)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1, &type metadata for SetChecklistItemsCheckedIntentv1);
    atomic_store(result, (unint64_t *)&qword_1005D1B28);
  }
  return result;
}

uint64_t sub_100173588(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of SetChecklistItemsCheckedIntentv1.perform()>>, 1);
}

uint64_t sub_100173598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001735AC(a1, a2, a3, (uint64_t (*)(void))sub_1001735EC, (uint64_t)&opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>);
}

uint64_t sub_1001735AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  _QWORD v7[2];

  v7[0] = a2;
  v7[1] = a4();
  return swift_getOpaqueTypeConformance2(v7, a5, 1);
}

unint64_t sub_1001735EC()
{
  unint64_t result;

  result = qword_1005D1B30;
  if (!qword_1005D1B30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntentv1, &type metadata for SetChecklistItemsCheckedIntentv1);
    atomic_store(result, (unint64_t *)&qword_1005D1B30);
  }
  return result;
}

ValueMetadata *type metadata accessor for SetChecklistItemsCheckedIntentv1()
{
  return &type metadata for SetChecklistItemsCheckedIntentv1;
}

uint64_t storeEnumTagSinglePayload for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10017368C + 4 * byte_100456A25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001736C0 + 4 * byte_100456A20[v4]))();
}

uint64_t sub_1001736C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001736C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001736D0);
  return result;
}

uint64_t sub_1001736DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001736E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001736E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001736F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType()
{
  return &type metadata for SetChecklistItemsCheckedIntentv1.CheckedChangeOperationType;
}

uint64_t sub_10017370C()
{
  return sub_100016638((unint64_t *)&qword_1005D1B40, (uint64_t *)&unk_1005D0690, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100173738()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ChecklistItemEntity(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v14 = v3 | 7;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = type metadata accessor for URL(0);
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v11 = v8 + *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v12 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v10(v8 + v1[5], v9);
  swift_release(*(_QWORD *)(v8 + v1[6]));
  swift_release(*(_QWORD *)(v8 + v1[7]));
  swift_release(*(_QWORD *)(v8 + v1[8]));
  swift_release(*(_QWORD *)(v0 + v5));
  swift_release(*(_QWORD *)(v0 + v5 + 8));
  swift_release(*(_QWORD *)(v0 + v5 + 16));
  swift_release(*(_QWORD *)(v0 + v5 + 24));

  return swift_deallocObject(v0, v7 + 8, v14);
}

void sub_100173884(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v9 = *(_QWORD *)(type metadata accessor for ChecklistItemEntity(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1001712C8(a1, a2, a3, a4, v4 + v10, *(_QWORD *)(v4 + v11), *(_QWORD *)(v4 + v11 + 8), *(_QWORD *)(v4 + v11 + 16), *(_QWORD *)(v4 + v11 + 24), *(void **)(v4 + ((v11 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v4 + ((((v11 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100173930()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *LockNoteIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static LockNoteIntent.persistentIdentifier;
}

unint64_t static LockNoteIntent.persistentIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_100173968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static LockNoteIntent.title);
  sub_10012A0B0(v10, (uint64_t)static LockNoteIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x746F4E206B636F4CLL, 0xE900000000000065);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t LockNoteIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CE9D0 != -1)
    swift_once(&qword_1005CE9D0, sub_100173968);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static LockNoteIntent.title);
}

uint64_t static LockNoteIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CE9D0 != -1)
    swift_once(&qword_1005CE9D0, sub_100173968);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static LockNoteIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *LockNoteIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static LockNoteIntent.openAppWhenRun;
}

void *LockNoteIntent.assistantOnly.unsafeMutableAddressor()
{
  return &static LockNoteIntent.assistantOnly;
}

uint64_t static LockNoteIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000062, 0x800000010047C450);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t LockNoteIntent.target.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v4, (uint64_t *)&unk_1005D0B60);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100012DDC(a1, (uint64_t *)&unk_1005D0B60);
}

uint64_t LockNoteIntent.perform()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[20] = a3;
  v5[21] = a5;
  v5[18] = a1;
  v5[19] = a2;
  v6 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v5[22] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NoteEntity(0);
  v5[23] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[24] = v8;
  v5[25] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  v5[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100173F00, 0, 0);
}

uint64_t sub_100173F00()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 168);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 208);
    v3 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 192);
    v5 = v1;
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 104));
    v6 = *(void **)(v0 + 104);
    *(_QWORD *)(v0 + 216) = objc_msgSend(v6, "modernManagedObjectContext");

    v7 = swift_allocObject(&unk_10055B2A8, 24, 7);
    *(_QWORD *)(v0 + 224) = v7;
    *(_QWORD *)(v7 + 16) = 0;
    IntentParameter.wrappedValue.getter(v2);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    {
      v22 = *(_QWORD *)(v0 + 208);
      sub_10014FF9C(v22, *(_QWORD *)(v0 + 200));
      sub_100012DDC(v22, (uint64_t *)&unk_1005D0B60);
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 136));
      v23 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 232) = v23;
      v24 = unk_1005D0B54;
      v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005D0B50 + dword_1005D0B50);
      swift_retain(v7);
      v25 = (_QWORD *)swift_task_alloc(v24);
      *(_QWORD *)(v0 + 240) = v25;
      *v25 = v0;
      v25[1] = sub_10017429C;
      return v43((uint64_t)v43, v23, (uint64_t)sub_100175158, v7);
    }
    sub_100012DDC(*(_QWORD *)(v0 + 208), (uint64_t *)&unk_1005D0B60);
    *(_QWORD *)(v0 + 256) = 0;
    v8 = *(_QWORD *)(v0 + 224);
    v9 = swift_beginAccess(v8 + 16, v0 + 80, 0, 0);
    v10 = *(void **)(v8 + 16);
    *(_QWORD *)(v0 + 264) = v10;
    if (v10)
    {
      v11 = v10;
      if (objc_msgSend(v11, "ic_isModernNoteType"))
      {
        v12 = *(void **)(v0 + 216);
        v13 = *(id *)(v0 + 168);
        v14 = v11;
        v15 = v12;
        return swift_task_switch(sub_1001744F8, 0, 0);
      }
      v36 = *(void **)(v0 + 216);
      v35 = *(_QWORD *)(v0 + 224);
      v37 = *(void **)(v0 + 168);
      v38 = sub_10013F4E8();
      v39 = swift_allocError(&type metadata for AppIntentsError, v38, 0, 0);
      *v40 = 17;
      swift_willThrow(v39);

      swift_release(v35);
    }
    else
    {
      v27 = *(void **)(v0 + 216);
      v26 = *(_QWORD *)(v0 + 224);
      v29 = *(void **)(v0 + 168);
      v28 = *(_QWORD *)(v0 + 176);
      v30 = IntentParameter.projectedValue.getter(v9);
      v31 = type metadata accessor for IntentDialog(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v28, 1, 1, v31);
      v32 = type metadata accessor for AppIntentError(0);
      v33 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
      swift_allocError(v32, v33, 0, 0);
      IntentParameter.needsValueError(_:)(v28);
      swift_release(v30);
      v34 = sub_100012DDC(v28, (uint64_t *)&unk_1005CEE20);
      swift_willThrow(v34);
      swift_release(v26);

    }
  }
  else
  {
    type metadata accessor for ICError(0);
    v18 = v17;
    *(_QWORD *)(v0 + 128) = 222;
    v19 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v20 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v21 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 112), v0 + 128, v19, v18, v20);
    swift_willThrow(v21);
  }
  v41 = *(_QWORD *)(v0 + 200);
  v42 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017429C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = (*v1)[30];
  (*v1)[31] = v0;
  swift_task_dealloc(v3);
  v4 = v2[28];
  v5 = (void *)v2[29];
  sub_10014FFE0(v2[25]);
  swift_release(v4);

  if (v0)
    v6 = sub_10017477C;
  else
    v6 = sub_100174320;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100174320()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 224);
  v2 = swift_beginAccess(v1 + 16, v0 + 80, 0, 0);
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v0 + 264) = v3;
  if (v3)
  {
    v4 = v3;
    if (objc_msgSend(v4, "ic_isModernNoteType"))
    {
      v5 = *(void **)(v0 + 216);
      v6 = *(id *)(v0 + 168);
      v7 = v4;
      v8 = v5;
      return swift_task_switch(sub_1001744F8, 0, 0);
    }
    v11 = *(void **)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 224);
    v13 = *(void **)(v0 + 168);
    v19 = sub_10013F4E8();
    v20 = swift_allocError(&type metadata for AppIntentsError, v19, 0, 0);
    *v21 = 17;
    swift_willThrow(v20);

  }
  else
  {
    v11 = *(void **)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 224);
    v13 = *(void **)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 176);
    v14 = IntentParameter.projectedValue.getter(v2);
    v15 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
    v16 = type metadata accessor for AppIntentError(0);
    v17 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v16, v17, 0, 0);
    IntentParameter.needsValueError(_:)(v12);
    swift_release(v14);
    v18 = sub_100012DDC(v12, (uint64_t *)&unk_1005CEE20);
    swift_willThrow(v18);
  }
  swift_release(v10);

  v22 = *(_QWORD *)(v0 + 200);
  v23 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001744F8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0 + 2;
  v2 = v0[32];
  v3 = v0[33];
  v4 = v0[27];
  v5 = v0[21];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1001745DC;
  v6 = swift_continuation_init(v0 + 2, 1);
  v7 = (_QWORD *)swift_task_alloc(48);
  v7[2] = v4;
  v7[3] = v3;
  v7[4] = v5;
  v7[5] = v6;
  NSManagedObjectContext.performAndWait<A>(_:)(sub_10017513C, v7, (char *)&type metadata for () + 8);
  swift_task_dealloc(v7);
  if (v2)
  {
    v8 = sub_100012E18(&qword_1005D7A90);
    v9 = swift_allocError(v8, &protocol self-conformance witness table for Error, 0, 0);
    *v10 = v2;
    swift_continuation_throwingResumeWithError(v6, v9);
  }
  return swift_continuation_await(v1);
}

uint64_t sub_1001745DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  void *v5;
  void *v6;
  void *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 272) = v3;
  if (v3)
  {
    swift_willThrow(a1);
    v4 = sub_100174668;
  }
  else
  {
    v5 = *(void **)(v2 + 264);
    v6 = *(void **)(v2 + 168);
    v7 = *(void **)(v2 + 120);

    v4 = sub_1001746F0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100174668()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 264);
  v3 = *(void **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(void **)(v0 + 168);
  swift_willThrow();

  swift_release(v2);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001746F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v2 = *(void **)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 208);
  v6 = *(void **)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 176);

  static IntentResult.result<>()(v7);
  swift_release(v1);

  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017477C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(void **)(v0 + 168);

  swift_release(v1);
  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 208));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001747E4(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  v4 = objc_msgSend(a1, "objectID");
  swift_beginAccess(v3, v6, 1, 0);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v4;

}

void sub_100174854(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;

  v6 = objc_msgSend(a1, "ic_existingObjectWithID:", a2);
  if (v6)
  {
    v7 = v6;
    v8 = objc_opt_self(ICNote);
    v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
    if (!v9)
    {
LABEL_5:

      return;
    }
    v10 = v9;
    if ((objc_msgSend(v9, "isPasswordProtected") & 1) != 0)
    {
      v11 = sub_10013F4E8();
      v12 = swift_allocError(&type metadata for AppIntentsError, v11, 0, 0);
      *v13 = 18;
      swift_willThrow(v12);
      goto LABEL_5;
    }
    v14 = objc_msgSend(objc_allocWithZone((Class)ICNoteLockManager), "initWithNote:", v10);
    objc_msgSend(v14, "setWindow:", a3);
    v15 = swift_allocObject(&unk_10055B358, 32, 7);
    *(_QWORD *)(v15 + 16) = a4;
    *(_QWORD *)(v15 + 24) = v14;
    v19[4] = sub_10017547C;
    v20 = v15;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_100343CD8;
    v19[3] = &unk_10055B370;
    v16 = _Block_copy(v19);
    v17 = v20;
    v18 = v14;
    swift_release(v17);
    objc_msgSend(v18, "addLockWithCompletionHandler:", v16);
    _Block_release(v16);

  }
}

uint64_t sub_1001749E0(int a1, uint64_t a2, id a3)
{
  id v5;

  v5 = objc_msgSend(a3, "updatedNote");
  sub_100175484((uint64_t)&v5, *(_QWORD *)(*(_QWORD *)(a2 + 64) + 40));
  return swift_continuation_throwingResume(a2);
}

uint64_t sub_100174A3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[3];
  v7 = (_QWORD *)swift_task_alloc(dword_1005D1B9C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_100130768;
  return LockNoteIntent.perform()(a1, v4, v5, v8, v6);
}

uint64_t sub_100174AA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = _s11MobileNotes14LockNoteIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return result;
}

unint64_t sub_100174AD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100012E18(&qword_1005D02D8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100012CE8(v7, (uint64_t)&v16, (uint64_t *)&unk_1005D02E0);
    v8 = v16;
    v9 = v17;
    result = sub_10035B58C(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_1000160B8(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t _s11MobileNotes14LockNoteIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64x2_t v38;
  int16x8_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD v48[2];
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD v57[3];
  char v58;
  unsigned __int32 v59;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v53 = *(_QWORD *)(v0 - 8);
  v54 = v0;
  __chkstk_darwin(v0);
  v52 = (char *)v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v51 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v50 = (char *)v48 - v5;
  v6 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  __chkstk_darwin(v6);
  v49 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v8);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48[1] = sub_100012E18(&qword_1005CEEC8);
  v25 = String.LocalizationValue.init(stringLiteral:)(1702129486, 0xE400000000000000);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  v27(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter title for note", 24, 2);
  v28 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x8000000100477010);
  static Locale.current.getter(v28);
  v27(v14, v26, v11);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for note", 30, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v10, 0, 1, v21);
  v29 = type metadata accessor for NoteEntity(0);
  v30 = v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v49, 1, 1, v29);
  v31 = type metadata accessor for IntentDialog(0);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v33 = v50;
  v32(v50, 1, 1, v31);
  v34 = v51;
  v32(v51, 1, 1, v31);
  v57[0] = sub_1001E93A0();
  v57[1] = v35;
  v57[2] = v36;
  v58 = v37 & 1;
  v38 = (uint64x2_t)vdupq_n_s64(v37);
  v39 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v38, (uint64x2_t)xmmword_100451C10), (int32x4_t)vshlq_u64(v38, (uint64x2_t)xmmword_100451C00));
  *(int8x8_t *)v39.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v39), (int8x8_t)0x1000100010001);
  v59 = vmovn_s16(v39).u32[0];
  v40 = v52;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v52, enum case for InputConnectionBehavior.default(_:), v54);
  v41 = sub_100127D40();
  v42 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v24, v10, v30, v33, v34, v40, v57, &type metadata for VisibleNotesQuery, v41);
  sub_100012E18(&qword_1005CEE50);
  v55 = 0xD000000000000021;
  v56 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v57, &v55, &type metadata for String, &protocol witness table for String);
  v43 = type metadata accessor for AppDependencyManager(0);
  v44 = static AppDependencyManager.shared.getter(v43);
  AppDependency.__allocating_init(key:manager:)(v57, v44);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v55 = 0xD000000000000024;
  v56 = 0x8000000100476B40;
  v45 = AnyHashable.init<A>(_:)(v57, &v55, &type metadata for String, &protocol witness table for String);
  v46 = static AppDependencyManager.shared.getter(v45);
  AppDependency.__allocating_init(key:manager:)(v57, v46);
  return v42;
}

uint64_t sub_100175118()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10017513C()
{
  uint64_t v0;

  sub_100174854(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_100175158(void *a1)
{
  uint64_t v1;

  sub_1001747E4(a1, v1);
}

unint64_t sub_100175174()
{
  unint64_t result;

  result = qword_1005D1BA0;
  if (!qword_1005D1BA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LockNoteIntent, &type metadata for LockNoteIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1BA0);
  }
  return result;
}

unint64_t sub_1001751BC()
{
  unint64_t result;

  result = qword_1005D1BA8;
  if (!qword_1005D1BA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LockNoteIntent, &type metadata for LockNoteIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1BA8);
  }
  return result;
}

uint64_t sub_100175200(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of LockNoteIntent.perform()>>, 1);
}

uint64_t sub_100175210(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100175250();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

unint64_t sub_100175250()
{
  unint64_t result;

  result = qword_1005D2050;
  if (!qword_1005D2050)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LockNoteIntent, &type metadata for LockNoteIntent);
    atomic_store(result, &qword_1005D2050);
  }
  return result;
}

void destroy for LockNoteIntent(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));

}

uint64_t *initializeWithCopy for LockNoteIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = (void *)a2[3];
  a1[2] = v5;
  a1[3] = (uint64_t)v6;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for LockNoteIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = (void *)a1[3];
  v11 = (void *)a2[3];
  a1[3] = (uint64_t)v11;
  v12 = v11;

  return a1;
}

_QWORD *assignWithTake for LockNoteIntent(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  void *v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = (void *)a1[3];
  *((_OWORD *)a1 + 1) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for LockNoteIntent()
{
  return &type metadata for LockNoteIntent;
}

unint64_t sub_10017540C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1B40;
  if (!qword_1005D1B40)
  {
    v1 = sub_10001537C((uint64_t *)&unk_1005D0690);
    result = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1B40);
  }
  return result;
}

uint64_t sub_100175458()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10017547C(int a1)
{
  uint64_t v1;

  return sub_1001749E0(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_100175484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D1BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_1001754CC(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  id v41;
  void **v42;
  Class isa;
  id v44;
  void *v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  objc_class *ObjectType;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  objc_super v68;
  void **aBlock;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;

  v57 = a5;
  v61 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v5);
  v10 = sub_100012E18(&qword_1005D1C20);
  v11 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  v12 = v11;
  v65 = v11;
  __chkstk_darwin(v10);
  v64 = (uint64_t)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_100012E18(&qword_1005D1C28);
  v56 = *(_QWORD *)(v66 - 8);
  v14 = *(_QWORD *)(v56 + 64);
  v15 = __chkstk_darwin(v66);
  v16 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v67 = (char *)&v55 - v17;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_accountsChangeObservation] = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource____lazy_storage___accountsChangePublisher], 1, 1, v10);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_folderSelection] = a3;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_accountObjectID] = a4;
  v18 = objc_allocWithZone((Class)ICFolderCoreDataIndexer);
  v19 = a3;
  v20 = a4;
  v62 = v20;
  v21 = objc_msgSend(v18, "initWithLegacyManagedObjectContext:modernManagedObjectContext:", a1, a2);
  objc_msgSend(v21, "setAccountObjectID:", v20);
  objc_msgSend(v21, "setShouldIncludeSmartFolders:", 0);
  objc_msgSend(v21, "setShouldIncludeAccount:", 2);
  objc_msgSend(v21, "setShouldIncludeSystemPaper:", 2);
  objc_msgSend(v21, "setShouldIncludeMathNotes:", 2);
  objc_msgSend(v21, "setShouldIncludeCallNotes:", 2);
  objc_msgSend(v21, "setShouldIncludeSharedWithYou:", 2);
  objc_msgSend(v21, "setShouldIncludeTrash:", 0);
  objc_msgSend(v21, "setShouldIncludeLegacyAccounts:", 0);
  v22 = swift_allocObject(&unk_10055B450, 32, 7);
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = v19;
  v23 = sub_1000163BC(0, &qword_1005D1C30, &off_10054DDE8);
  v24 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v60 = v19;
  v59 = a2;
  v25 = v67;
  UICollectionView.CellRegistration.init(handler:)(sub_100176588, v22, v23, v24);
  v26 = v56;
  v27 = v66;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v16, v25, v66);
  v28 = *(unsigned __int8 *)(v26 + 80);
  v29 = (v28 + 24) & ~v28;
  v30 = swift_allocObject(&unk_10055B478, v29 + v14, v28 | 7);
  v31 = v57;
  *(_QWORD *)(v30 + 16) = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v30 + v29, v16, v27);
  v73 = sub_100176608;
  v74 = v30;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_1002A9E30;
  v72 = &unk_10055B490;
  v32 = _Block_copy(&aBlock);
  v33 = v74;
  v34 = v31;
  swift_retain(v30);
  swift_release(v33);
  v68.receiver = v5;
  v68.super_class = ObjectType;
  v35 = objc_msgSendSuper2(&v68, "initWithCollectionView:cellProvider:indexer:", v34, v32, v21);
  _Block_release(v32);
  v36 = v35;
  objc_msgSend(v36, "setAutoExpandMode:", 2);
  v37 = sub_100012E18(&qword_1005CF6F0);
  v38 = swift_allocObject(v37, 40, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100456F30;
  v39 = objc_allocWithZone((Class)NSNumber);
  v40 = (char *)v36;
  v41 = objc_msgSend(v39, "initWithUnsignedInteger:", 1);
  *(_QWORD *)(v38 + 32) = v41;
  aBlock = (void **)v38;
  specialized Array._endMutation()(v41);
  v42 = aBlock;
  sub_1000163BC(0, (unint64_t *)&unk_1005D8C50, NSNumber_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v42);
  objc_msgSend(v40, "setSectionTypes:", isa);

  v44 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewDiffableDataSourceSectionSnapshotHandlers), "init");
  v73 = variable initialization expression of FastSync.LeaveActivityAction.isFinished;
  v74 = 0;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_100175E80;
  v72 = &unk_10055B4B8;
  v45 = _Block_copy(&aBlock);
  objc_msgSend(v44, "setShouldExpandItemHandler:", v45);
  _Block_release(v45);
  v73 = variable initialization expression of FastSync.LeaveActivityAction.isFinished;
  v74 = 0;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_100175E80;
  v72 = &unk_10055B4E0;
  v46 = _Block_copy(&aBlock);
  objc_msgSend(v44, "setShouldCollapseItemHandler:", v46);
  _Block_release(v46);
  v47 = objc_msgSend(v40, "collectionViewDiffableDataSource");
  objc_msgSend(v47, "setSectionSnapshotHandlers:", v44);

  v48 = v64;
  sub_100175EF0(v64);
  v49 = swift_allocObject(&unk_10055B518, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16, v40);
  v50 = sub_100016638(&qword_1005D1C38, &qword_1005D1C20, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v51 = v63;
  v52 = Publisher<>.sink(receiveValue:)(sub_100176688, v49, v63, v50);
  swift_release(v30);

  swift_release(v49);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v48, v51);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v67, v66);
  v53 = *(_QWORD *)&v40[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_accountsChangeObservation];
  *(_QWORD *)&v40[OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource_accountsChangeObservation] = v52;
  swift_release(v53);
  return v40;
}

void sub_100175B38(void *a1, int a2, _QWORD *a3, id a4, void *a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  id v18;

  if (a4)
  {
    v7 = objc_msgSend(a4, "ic_existingObjectWithID:", *a3);
    if (v7)
    {
      v18 = v7;
      v8 = objc_opt_self(ICNoteContainer);
      v9 = swift_dynamicCastObjCClass(v18, v8);
      if (v9)
      {
        v10 = (void *)v9;
        objc_msgSend(a1, "setAllowsExpandCollapse:", 0);
        objc_msgSend(a1, "setHasGroupInset:", 1);
        objc_msgSend(a1, "setHasDisclosureIndicator:", 0);
        objc_msgSend(a1, "setShowsNoteCount:", 0);
        v11 = v18;
        objc_msgSend(a1, "setNoteContainer:", v10);
        v12 = objc_msgSend(v10, "identifier");

        if (v12)
        {
          v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
          v15 = v14;

          v16 = objc_msgSend(a5, "folderIdentifiers");
          v17 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, &type metadata for String);

          LOBYTE(v16) = sub_100263A64(v13, v15, v17);
          swift_bridgeObjectRelease(v15);
          swift_bridgeObjectRelease(v17);
          objc_msgSend(a1, "setShowsCheckmark:", v16 & 1);
        }
      }

    }
  }
}

uint64_t sub_100175CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t result;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[4];
  _QWORD v19[4];

  sub_100128424(a3, (uint64_t)v19);
  v8 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  if (swift_dynamicCast(v18, v19, (char *)&type metadata for Any + 8, v8, 0))
  {
    v9 = (void *)v18[0];
    v16 = v18[0];
    v10 = sub_1000163BC(0, &qword_1005D1C30, &off_10054DDE8);
    v11 = v9;
    v12 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(a5, a2, &v16, v10, v8);

    sub_1000153C0(v19);
    return v12;
  }
  else
  {
    sub_100128424(a3, (uint64_t)v18);
    v16 = 0;
    v17 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    v14._object = (void *)0x800000010047C610;
    v14._countAndFlagsBits = 0xD00000000000002ALL;
    String.append(_:)(v14);
    _print_unlocked<A, B>(_:_:)(v18, &v16, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v15._countAndFlagsBits = 125;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v16, v17, "MobileNotes/FolderComposerFolderSelectionDataSource.swift", 57, 2, 55, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_100175E80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, __n128);
  __n128 v5;
  _QWORD v7[4];

  v2 = a2;
  v4 = *(uint64_t (**)(_QWORD *, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v7[3] = swift_getObjectType(a2);
  v7[0] = v2;
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(v2);
  LOBYTE(v2) = v4(v7, v5);
  swift_release(v3);
  sub_1000153C0(v7);
  return v2 & 1;
}

void sub_100175EF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44[3];
  char v45[24];

  v3 = sub_100012E18(&qword_1005D1C40);
  __chkstk_darwin(v3);
  v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v41 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v36 - v10;
  v12 = sub_100012E18(&qword_1005D1C48);
  v37 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100012E18(&qword_1005D1C50);
  v16 = __chkstk_darwin(v15);
  v39 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v36 - v18;
  v20 = v1
      + OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource____lazy_storage___accountsChangePublisher;
  swift_beginAccess(v1+ OBJC_IVAR____TtC11MobileNotes39FolderComposerFolderSelectionDataSource____lazy_storage___accountsChangePublisher, v45, 0, 0);
  sub_100176690(v20, (uint64_t)v19);
  v21 = sub_100012E18(&qword_1005D1C20);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) == 1)
  {
    sub_100012DDC((uint64_t)v19, &qword_1005D1C50);
    v23 = (void *)objc_opt_self(NSNotificationCenter);
    v36 = a1;
    v24 = objc_msgSend(v23, "defaultCenter");
    NSNotificationCenter.publisher(for:object:)(ICAccountsDidChangeNotification, 0);

    v25 = objc_msgSend(v23, "defaultCenter");
    NSNotificationCenter.publisher(for:object:)(ICLocalAccountDidChooseToMigrateNotification, 0);

    v26 = sub_1001766D8();
    Publishers.Merge.init(_:_:)(v11, v9, v6, v6, v26, v26);
    v27 = v40;
    static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)(300);
    v44[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
    v28 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
    v29 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v42, 1, 1, v28);
    v30 = sub_1000163BC(0, &qword_1005D1C58, NSRunLoop_ptr);
    v31 = sub_100016638(&qword_1005D1C60, &qword_1005D1C48, (uint64_t)&protocol conformance descriptor for Publishers.Merge<A, B>);
    v32 = sub_100176720();
    v33 = v36;
    v34 = v38;
    Publisher.debounce<A>(for:scheduler:options:)(v27, v44, v29, v38, v30, v31, v32);
    sub_100012DDC(v29, &qword_1005D1C40);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v43);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v34);
    v35 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v39, v33, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v35, 0, 1, v21);
    swift_beginAccess(v20, v44, 33, 0);
    sub_100176778(v35, v20);
    swift_endAccess(v44);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(a1, v19, v21);
  }
}

void sub_100176320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "reloadDataAnimated:", 1);

  }
}

uint64_t sub_100176438()
{
  return type metadata accessor for FolderComposerFolderSelectionDataSource(0);
}

uint64_t type metadata accessor for FolderComposerFolderSelectionDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D1C08;
  if (!qword_1005D1C08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FolderComposerFolderSelectionDataSource);
  return result;
}

void sub_10017647C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = "\b";
  sub_100176504(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_100176504(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D1C18)
  {
    v2 = sub_10001537C(&qword_1005D1C20);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D1C18);
  }
}

uint64_t sub_10017655C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100176588(void *a1, int a2, _QWORD *a3)
{
  uint64_t v3;

  sub_100175B38(a1, a2, a3, *(id *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t sub_100176590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100012E18(&qword_1005D1C28);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100176608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_100012E18(&qword_1005D1C28) - 8) + 80);
  return sub_100175CE4(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7));
}

uint64_t sub_100176664()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100176688(uint64_t a1)
{
  uint64_t v1;

  sub_100176320(a1, v1);
}

uint64_t sub_100176690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D1C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001766D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8FC0;
  if (!qword_1005D8FC0)
  {
    v1 = type metadata accessor for NSNotificationCenter.Publisher(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1005D8FC0);
  }
  return result;
}

unint64_t sub_100176720()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1C68;
  if (!qword_1005D1C68)
  {
    v1 = sub_1000163BC(255, &qword_1005D1C58, NSRunLoop_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSRunLoop, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1C68);
  }
  return result;
}

uint64_t sub_100176778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D1C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001767D0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static FolderViewSetting.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static FolderViewSetting.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x56207265646C6F46, 0xEB00000000776569);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Title for entity representing Notes folder view settings", 56, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t FolderViewSetting.typeDisplayRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CE9D8 != -1)
    swift_once(&qword_1005CE9D8, sub_1001767D0);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10012A0B0(v0, (uint64_t)static FolderViewSetting.typeDisplayRepresentation);
}

uint64_t static FolderViewSetting.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CE9D8 != -1)
    swift_once(&qword_1005CE9D8, sub_1001767D0);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static FolderViewSetting.typeDisplayRepresentation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

MobileNotes::FolderViewSetting_optional __swiftcall FolderViewSetting.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MobileNotes::FolderViewSetting_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005557D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MobileNotes_FolderViewSetting_listView;
  else
    v4.value = MobileNotes_FolderViewSetting_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t FolderViewSetting.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x776569567473696CLL;
  else
    return 0x567972656C6C6167;
}

uint64_t sub_100176B30(char *a1, char *a2)
{
  return sub_100216390(*a1, *a2);
}

uint64_t sub_100176B3C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005557D0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_100176B98(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x567972656C6C6167;
  if (*v1)
    v2 = 0x776569567473696CLL;
  v3 = 0xEB00000000776569;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

Swift::Int sub_100176BE0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x776569567473696CLL;
  else
    v2 = 0x567972656C6C6167;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEB00000000776569;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_100176C68(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x776569567473696CLL;
  else
    v2 = 0x567972656C6C6167;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEB00000000776569;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_100176CCC(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x776569567473696CLL;
  else
    v3 = 0x567972656C6C6167;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEB00000000776569;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_100176D50(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100127E1C();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100176D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t result;
  _QWORD v31[2];
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v0 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v0);
  v39 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v38 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v36 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E18(&qword_1005D1CD8);
  v17 = sub_100012E18(&qword_1005D02B0);
  v18 = *(_QWORD *)(v17 - 8);
  v35 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v35, v19 | 7);
  v37 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_100454E90;
  v22 = v21 + v20;
  v31[1] = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0x207972656C6C6147, 0xEC00000077656956);
  static Locale.current.getter(v23);
  v34 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v36 = *(_QWORD *)(v36 + 104);
  v24 = v5;
  ((void (*)(char *))v36)(v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Title for the Gallery folder view setting", 41, 2);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v25 = v38;
  v32(v38, 1, 1, v12);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28 = v39;
  v27(v39, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  *(_BYTE *)(v22 + v35) = 1;
  v29 = String.LocalizationValue.init(stringLiteral:)(0x656956207473694CLL, 0xE900000000000077);
  static Locale.current.getter(v29);
  ((void (*)(char *, _QWORD, uint64_t))v36)(v24, v34, v40);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v24, "Title for the List folder view setting", 38, 2);
  v32(v25, 1, 1, v33);
  v27(v28, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  result = sub_100135F54(v37);
  static FolderViewSetting.caseDisplayRepresentations = result;
  return result;
}

uint64_t *FolderViewSetting.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1005CE9E0 != -1)
    swift_once(&qword_1005CE9E0, sub_100176D88);
  return &static FolderViewSetting.caseDisplayRepresentations;
}

uint64_t static FolderViewSetting.caseDisplayRepresentations.getter()
{
  if (qword_1005CE9E0 != -1)
    swift_once(&qword_1005CE9E0, sub_100176D88);
  return swift_bridgeObjectRetain(static FolderViewSetting.caseDisplayRepresentations);
}

_UNKNOWN **static FolderViewSetting.allCases.getter()
{
  return &off_100555820;
}

unint64_t sub_1001771D0()
{
  unint64_t result;

  result = qword_1005D1C70;
  if (!qword_1005D1C70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1C70);
  }
  return result;
}

unint64_t sub_100177218()
{
  unint64_t result;

  result = qword_1005D1C78;
  if (!qword_1005D1C78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1C78);
  }
  return result;
}

unint64_t sub_100177260()
{
  unint64_t result;

  result = qword_1005D1C80;
  if (!qword_1005D1C80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1C80);
  }
  return result;
}

unint64_t sub_1001772A8()
{
  unint64_t result;

  result = qword_1005D1C88;
  if (!qword_1005D1C88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1C88);
  }
  return result;
}

unint64_t sub_1001772F0()
{
  unint64_t result;

  result = qword_1005D1C90;
  if (!qword_1005D1C90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1C90);
  }
  return result;
}

unint64_t sub_100177338()
{
  unint64_t result;

  result = qword_1005D1C98;
  if (!qword_1005D1C98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1C98);
  }
  return result;
}

unint64_t sub_100177380()
{
  unint64_t result;

  result = qword_1005D1CA0;
  if (!qword_1005D1CA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1CA0);
  }
  return result;
}

unint64_t sub_1001773C8()
{
  unint64_t result;

  result = qword_1005D1CA8;
  if (!qword_1005D1CA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1CA8);
  }
  return result;
}

uint64_t sub_10017740C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100127E1C();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100177450()
{
  unint64_t result;

  result = qword_1005D1CB0;
  if (!qword_1005D1CB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1CB0);
  }
  return result;
}

unint64_t sub_100177498()
{
  unint64_t result;

  result = qword_1005D1CB8;
  if (!qword_1005D1CB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1CB8);
  }
  return result;
}

unint64_t sub_1001774E0()
{
  unint64_t result;

  result = qword_1005D1CC0;
  if (!qword_1005D1CC0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FolderViewSetting, &type metadata for FolderViewSetting);
    atomic_store(result, (unint64_t *)&qword_1005D1CC0);
  }
  return result;
}

uint64_t sub_100177524(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001773C8();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100177560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1CC8;
  if (!qword_1005D1CC8)
  {
    v1 = sub_10001537C(&qword_1005D1CD0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D1CC8);
  }
  return result;
}

void sub_1001775AC(_QWORD *a1@<X8>)
{
  *a1 = &off_100555848;
}

uint64_t storeEnumTagSinglePayload for FolderViewSetting(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100177608 + 4 * byte_100456F85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10017763C + 4 * byte_100456F80[v4]))();
}

uint64_t sub_10017763C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100177644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10017764CLL);
  return result;
}

uint64_t sub_100177658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100177660);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100177664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10017766C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FolderViewSetting()
{
  return &type metadata for FolderViewSetting;
}

uint64_t sub_100177688()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10012B334(v0, qword_1005D1CE0);
  v1 = sub_10012A0B0(v0, (uint64_t)qword_1005D1CE0);
  return static Logger.audioTranscription.getter(v1);
}

uint64_t sub_1001776D0()
{
  uint64_t v0;

  v0 = type metadata accessor for URL(0);
  sub_10012B334(v0, qword_1006016D8);
  sub_10012A0B0(v0, (uint64_t)qword_1006016D8);
  return URL.init(fileURLWithPath:)(0xD000000000000035, 0x800000010047C800);
}

id CallNoteCoordinator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallNoteCoordinator();
  return objc_msgSendSuper2(&v2, "init");
}

id CallNoteCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CallNoteCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100177984(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[6];
  void *v41;

  v2 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v3 = a1;
    else
      v3 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v3);
    v5 = sub_1000163BC(0, &qword_1005CFAC0, ICAttachment_ptr);
    v6 = sub_100179830();
    v7 = Set.Iterator.init(_cocoa:)(v4, v5, v6);
    v2 = v40[1];
    v37 = v40[2];
    v8 = v40[3];
    v9 = v40[4];
    v10 = v40[5];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v37 = a1 + 56;
    v12 = ~v11;
    v13 = -v11;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v10 = v14 & *(_QWORD *)(a1 + 56);
    v7 = swift_bridgeObjectRetain(a1);
    v8 = v12;
    v9 = 0;
  }
  v36 = (unint64_t)(v8 + 64) >> 6;
  v38 = v2;
  while (v2 < 0)
  {
    v18 = __CocoaSet.Iterator.next()(v7);
    if (!v18)
      goto LABEL_46;
    v19 = v18;
    v40[0] = v18;
    v20 = sub_1000163BC(0, &qword_1005CFAC0, ICAttachment_ptr);
    swift_unknownObjectRetain(v19);
    swift_dynamicCast(&v41, v40, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
    v21 = v41;
    swift_unknownObjectRelease(v19, v22);
    v17 = v9;
    v15 = v10;
    if (!v21)
      goto LABEL_46;
LABEL_36:
    v26 = objc_msgSend(v21, "identifier");
    if (v26)
    {
      v27 = v26;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v30 = v29;

    }
    else
    {
      v28 = 0;
      v30 = 0;
    }
    v31 = objc_msgSend(a2, "UUIDString");
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    if (v30)
    {
      if (v28 == v32 && v30 == v34)
      {
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v34);
LABEL_45:
        v2 = v38;
LABEL_46:
        sub_1001452E0(v2);
        return;
      }
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v34, 0);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v34);
      if ((v35 & 1) != 0)
        goto LABEL_45;

    }
    else
    {

      v7 = swift_bridgeObjectRelease(v34);
    }
    v9 = v17;
    v10 = v15;
    v2 = v38;
  }
  if (v10)
  {
    v15 = (v10 - 1) & v10;
    v16 = __clz(__rbit64(v10)) | (v9 << 6);
    v17 = v9;
LABEL_35:
    v21 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v16);
    if (!v21)
      goto LABEL_46;
    goto LABEL_36;
  }
  v23 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v23 >= v36)
      goto LABEL_46;
    v24 = *(_QWORD *)(v37 + 8 * v23);
    v17 = v9 + 1;
    if (!v24)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v36)
        goto LABEL_46;
      v24 = *(_QWORD *)(v37 + 8 * v17);
      if (!v24)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v36)
          goto LABEL_46;
        v24 = *(_QWORD *)(v37 + 8 * v17);
        if (!v24)
        {
          v17 = v9 + 4;
          if (v9 + 4 >= v36)
            goto LABEL_46;
          v24 = *(_QWORD *)(v37 + 8 * v17);
          if (!v24)
          {
            v17 = v9 + 5;
            if (v9 + 5 >= v36)
              goto LABEL_46;
            v24 = *(_QWORD *)(v37 + 8 * v17);
            if (!v24)
            {
              v25 = v9 + 6;
              while (v36 != v25)
              {
                v24 = *(_QWORD *)(v37 + 8 * v25++);
                if (v24)
                {
                  v17 = v25 - 1;
                  goto LABEL_34;
                }
              }
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_34:
    v15 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v17 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t _s11MobileNotes19CallNoteCoordinatorC8callType3forSo06ICCallG0VSo6NSUUIDC_tFZ_0(void *a1)
{
  id v2;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unsigned int v7;
  uint64_t v8;

  v2 = objc_msgSend((id)objc_opt_self(TUCallCenter), "sharedInstance");
  v3 = objc_msgSend(a1, "UUIDString");
  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v5 = v4;
    v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  v6 = objc_msgSend(v2, "callWithUniqueProxyIdentifier:", v3);

  if (!v6)
    return 0;
  v7 = objc_msgSend(v6, "service");

  v8 = 2;
  if (v7 != 2)
    v8 = 3;
  if (v7 == 1)
    return 1;
  else
    return v8;
}

void sub_100177E20(void *a1, void *a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  NSString v40;
  id v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t inited;
  void *v47;
  id v48;
  NSObject *v49;
  unint64_t v50;
  id v51;
  NSString v52;
  Class isa;
  id v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  NSString v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  NSString v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  NSString v74;
  id v75;
  void *v76;
  id v77;
  os_log_t oslog;
  NSObject *osloga;
  _BYTE v80[72];

  v6 = objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
  objc_msgSend(v6, "ensureModernAccountExistsInContext:", a3);

  v7 = objc_msgSend((id)objc_opt_self(ICAccount), "defaultAccountInContext:", a3);
  if (v7)
  {
    v8 = v7;
    v77 = a2;
    v9 = objc_msgSend(a1, "UUIDString");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v11 = v10;

    v12 = a3;
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
    v14 = (void *)objc_opt_self(ICNote);
    v15 = objc_msgSend(v14, "noteWithIdentifier:context:", v13, v12);

    if (!v15)
    {
      v16 = objc_msgSend(v8, "defaultFolder");
      v15 = objc_msgSend(v14, "newEmptyNoteWithUUID:folder:", a1, v16);

    }
    oslog = (os_log_t)objc_msgSend((id)objc_opt_self(ICTTMutableParagraphStyle), "paragraphStyleNamed:", 0);
    objc_msgSend(v15, "markAsCallNoteIfNeeded:", 1);
    v17 = objc_msgSend(a1, "UUIDString");
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v21 = static AudioTranscriptionContactsUtility.fetchContactNameForUniqueProxyIdentifier(identifier:)(v18, v20);
    v23 = v22;
    swift_bridgeObjectRelease(v20);
    if (v23)
    {
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v8);
      v25 = String._bridgeToObjectiveC()();
      v26 = objc_msgSend(v24, "localizedStringForKey:value:table:", v25, 0, 0);

      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

      v30 = sub_100012E18((uint64_t *)&unk_1005D5630);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100451C20;
      *(_QWORD *)(v31 + 56) = &type metadata for String;
      *(_QWORD *)(v31 + 64) = sub_1001797EC();
      *(_QWORD *)(v31 + 32) = v21;
      *(_QWORD *)(v31 + 40) = v23;
      String.init(format:_:)(v27, v29, v31);
      v33 = v32;
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      v39 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle", v8);
      v40 = String._bridgeToObjectiveC()();
      v41 = objc_msgSend(v39, "localizedStringForKey:value:table:", v40, 0, 0);

      static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v33 = v42;

    }
    v43 = objc_msgSend(v15, "textStorage");
    if (v43)
    {
      v44 = v43;
      v45 = sub_100012E18(&qword_1005D1B58);
      inited = swift_initStackObject(v45, v80);
      *(_OWORD *)(inited + 16) = xmmword_100451C20;
      v47 = (void *)ICTTAttributeNameParagraphStyle;
      *(_QWORD *)(inited + 32) = ICTTAttributeNameParagraphStyle;
      *(_QWORD *)(inited + 64) = sub_1000163BC(0, (unint64_t *)&qword_1005D1B60, ICTTMutableParagraphStyle_ptr);
      *(_QWORD *)(inited + 40) = oslog;
      v48 = v47;
      v49 = oslog;
      v50 = sub_100135F1C(inited);
      v51 = objc_allocWithZone((Class)NSAttributedString);
      v52 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v33);
      type metadata accessor for Key(0);
      sub_1001797A4();
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v50);
      v54 = objc_msgSend(v51, "initWithString:attributes:", v52, isa);

      objc_msgSend(v44, "appendAttributedString:", v54);
    }
    else
    {
      swift_bridgeObjectRelease(v33);
    }
    v55 = objc_msgSend(v77, "UUIDString");
    if (!v55)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v57 = v56;
      v55 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v57);
    }
    v58 = objc_msgSend(v15, "addAudioAttachmentWithIdentifier:", v55);

    v59 = _s11MobileNotes19CallNoteCoordinatorC8callType3forSo06ICCallG0VSo6NSUUIDC_tFZ_0(a1);
    v60 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v61 = String._bridgeToObjectiveC()();
    v62 = objc_msgSend(v60, "localizedStringForKey:value:table:", v61, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
    v64 = v63;

    v65 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v64);
    objc_msgSend(v58, "setTitle:", v65);

    v66 = objc_msgSend(v58, "audioModel");
    if (v66)
    {
      v67 = v66;
      v68 = objc_msgSend(v66, "audioDocument");

      if (!v68)
      {
        __break(1u);
        goto LABEL_27;
      }
      objc_msgSend(v68, "setIsCallRecording:", 1);

    }
    v69 = objc_msgSend(v58, "audioModel");
    if (!v69)
    {
LABEL_23:
      v72 = objc_msgSend(v58, "audioModel");
      if (v72)
      {
        v73 = v72;
        objc_msgSend(v72, "setMergeableDataDirty:", 1);

      }
      v74 = String._bridgeToObjectiveC()();
      objc_msgSend(v58, "updateChangeCountWithReason:", v74);

      v75 = objc_msgSend(objc_allocWithZone((Class)ICAttachmentInsertionController), "initWithNote:", v15);
      objc_msgSend(v15, "save");

      return;
    }
    v70 = v69;
    v71 = objc_msgSend(v69, "audioDocument");

    if (v71)
    {
      objc_msgSend(v71, "setCallType:", v59);

      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (qword_1005CE9E8 != -1)
    swift_once(&qword_1005CE9E8, sub_100177688);
  v34 = type metadata accessor for Logger(0);
  v35 = sub_10012A0B0(v34, (uint64_t)qword_1005D1CE0);
  osloga = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.error.getter(osloga, v36);
  if (os_log_type_enabled(osloga, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, osloga, v37, "Call recording could not create a new note from because we couldnt get a default account", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }

}

uint64_t sub_10017866C(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005CE9E8 != -1)
    swift_once(&qword_1005CE9E8, sub_100177688);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_10012A0B0(v9, (uint64_t)qword_1005D1CE0);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "ending call recording", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  static CallRecordingImporter.importCallRecording(noteID:recordingID:managedObjectContext:directory:)(a1, a2, a3, (uint64_t)v8);
  return sub_10013B118((uint64_t)v8);
}

uint64_t _s11MobileNotes19CallNoteCoordinatorC08fetchAllC10Recordings9directorySay10Foundation3URLVGAHSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _BYTE v13[16];

  v2 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100179888(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    if (qword_1005CE9F0 != -1)
      swift_once(&qword_1005CE9F0, sub_1001776D0);
    v9 = sub_10012A0B0(v5, (uint64_t)qword_1006016D8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
    sub_10013B118((uint64_t)v4);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  v10 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v11 = NSFileManager.contentsOfDirectory(at:)(v8);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);

  return v11;
}

void _s11MobileNotes19CallNoteCoordinatorC06deleteC23RecordingsFromDirectory9directoryy10Foundation3URLV_tFZ_0()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v0 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  URL._bridgeToObjectiveC()(v1);
  v3 = v2;
  v19 = 0;
  v4 = objc_msgSend(v0, "removeItemAtURL:error:", v2, &v19);

  v5 = v19;
  if (v4)
  {
    v6 = v19;

  }
  else
  {
    v7 = v19;
    v8 = _convertNSErrorToError(_:)(v5);

    swift_willThrow(v9);
    if (qword_1005CE9E8 != -1)
      swift_once(&qword_1005CE9E8, sub_100177688);
    v10 = type metadata accessor for Logger(0);
    sub_10012A0B0(v10, (uint64_t)qword_1005D1CE0);
    swift_errorRetain(v8);
    v11 = swift_errorRetain(v8);
    v12 = Logger.logObject.getter(v11);
    v14 = static os_log_type_t.error.getter(v12, v13);
    if (os_log_type_enabled(v12, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v15 = 138412290;
      swift_errorRetain(v8);
      v17 = (void *)_swift_stdlib_bridgeErrorToNSError(v8);
      v19 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v15 + 4);
      *v16 = v17;
      swift_errorRelease(v8);
      swift_errorRelease(v8);
      _os_log_impl((void *)&_mh_execute_header, v12, v14, "could not delete directory for call recording: %@", v15, 0xCu);
      v18 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v16, 1, v18);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

      swift_errorRelease(v8);
    }
    else
    {

      swift_errorRelease(v8);
      swift_errorRelease(v8);
      swift_errorRelease(v8);

    }
  }
}

uint64_t type metadata accessor for CallNoteCoordinator()
{
  return objc_opt_self(ICCallNoteCoordinator);
}

uint64_t _s11MobileNotes19CallNoteCoordinatorC015importAndDeleteC13RecordingFile20managedObjectContext9directory6noteID09recordingP00Q3URLSbSo09NSManagedlM0C_10Foundation0R0VSgSo6NSUUIDCAqNtFZ_0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSURL *v33;
  void *v34;
  void *v35;
  unsigned int v36;
  id v37;
  id v38;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;

  v8 = objc_msgSend((id)objc_opt_self(NSFileManager), "defaultManager");
  v9 = objc_msgSend(a3, "UUIDString");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;

  v12 = a1;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = objc_msgSend((id)objc_opt_self(ICNote), "noteWithIdentifier:context:", v13, v12);

  if (!v14)
    goto LABEL_11;
  v15 = objc_msgSend(v14, "attachments");
  if (!v15)
    goto LABEL_10;
  v16 = v15;
  v17 = sub_1000163BC(0, &qword_1005CFAC0, ICAttachment_ptr);
  v18 = sub_100179830();
  v52 = v17;
  v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v16, v17, v18);
  v20 = a2;
  v21 = v8;
  v22 = v19;

  v23 = a4;
  sub_100177984(v22, v23);
  v25 = v24;
  v26 = v22;
  v8 = v21;
  a2 = v20;
  v27 = v25;
  swift_bridgeObjectRelease(v26);

  if (!v27)
  {
LABEL_10:

LABEL_11:
    static CallRecordingImporter.importCallRecordingAndCreateNewNote(noteID:recordingID:managedObjectContext:directory:)(a3, a4, v12, a2);

    return 1;
  }
  if ((ICInternalSettingsShouldPreserveImportedCallRecordingData() & 1) != 0)
    goto LABEL_13;
  v28 = objc_msgSend(v27, "subAttachments");
  if (!v28)
    goto LABEL_13;
  v29 = v28;
  v30 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v28, v52, v18);

  v31 = (void *)sub_10023FEE8(v30);
  swift_bridgeObjectRelease(v30);
  if (!v31)
    goto LABEL_13;
  v32 = objc_msgSend(v31, "media");

  if (!v32)
  {

LABEL_13:
    static CallRecordingImporter.importCallRecording(noteID:recordingID:managedObjectContext:directory:)(a3, v23, v12, a2);

    return 1;
  }
  URL._bridgeToObjectiveC()(v33);
  v35 = v34;
  v53 = 0;
  v36 = objc_msgSend(v8, "removeItemAtURL:error:", v34, &v53);

  v37 = v53;
  if (v36)
  {
    v38 = v53;

    return 0;
  }
  else
  {
    v40 = v53;
    v41 = _convertNSErrorToError(_:)(v37);

    swift_willThrow(v42);
    if (qword_1005CE9E8 != -1)
      swift_once(&qword_1005CE9E8, sub_100177688);
    v43 = type metadata accessor for Logger(0);
    sub_10012A0B0(v43, (uint64_t)qword_1005D1CE0);
    swift_errorRetain(v41);
    v44 = swift_errorRetain(v41);
    v45 = Logger.logObject.getter(v44);
    v47 = static os_log_type_t.error.getter(v45, v46);
    if (os_log_type_enabled(v45, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(12, -1);
      v49 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v48 = 138412290;
      swift_errorRetain(v41);
      v50 = (void *)_swift_stdlib_bridgeErrorToNSError(v41);
      v53 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v48 + 4);
      *v49 = v50;
      swift_errorRelease(v41);
      swift_errorRelease(v41);
      _os_log_impl((void *)&_mh_execute_header, v45, v47, "could not remove call recording:%@", v48, 0xCu);
      v51 = sub_100012E18(&qword_1005D3A30);
      swift_arrayDestroy(v49, 1, v51);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      swift_errorRelease(v41);
    }
    else
    {

      swift_errorRelease(v41);
      swift_errorRelease(v41);
      swift_errorRelease(v41);

    }
    return 0;
  }
}

void sub_100179164(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = v3;
  v7 = sub_100012E18(&qword_1005CEFD0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = URL.pathComponents.getter(v8);
  v12 = v11;
  v13 = *(_QWORD *)(v11 + 16);
  if (v13)
  {
    v14 = v11 + 16 * v13;
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v14 + 24);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRelease(v12);
    v50 = v15;
    v51 = v16;
    v17 = sub_1001452E8();
    v18 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(95, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v17);
    swift_bridgeObjectRelease(v16);
    v19 = v18[2];
    if (v19)
    {
      v46 = a3;
      v47 = a2;
      v52 = v4;
      v20 = v18[4];
      v21 = v18[5];
      v22 = v18[6];
      v23 = v18[7];
      v24 = (uint64_t)&v18[4 * v19 + 4];
      v25 = *(_QWORD *)(v24 - 32);
      v26 = *(_QWORD *)(v24 - 24);
      v27 = *(_QWORD *)(v24 - 8);
      v48 = *(_QWORD *)(v24 - 16);
      v49 = v25;
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v27);
      swift_bridgeObjectRelease(v18);
      static String._fromSubstring(_:)(v20, v21, v22, v23);
      v29 = v28;
      swift_bridgeObjectRelease(v23);
      v30 = objc_allocWithZone((Class)NSUUID);
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
      v32 = objc_msgSend(v30, "initWithUUIDString:", v31);

      if (v32)
      {
        static String._fromSubstring(_:)(v49, v26, v48, v27);
        v34 = v33;
        swift_bridgeObjectRelease(v27);
        v35 = objc_allocWithZone((Class)NSUUID);
        v36 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v34);
        v37 = objc_msgSend(v35, "initWithUUIDString:", v36);

        if (v37)
        {
          v38 = type metadata accessor for URL(0);
          v39 = *(_QWORD *)(v38 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v10, v46, v38);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v10, 0, 1, v38);
          _s11MobileNotes19CallNoteCoordinatorC015importAndDeleteC13RecordingFile20managedObjectContext9directory6noteID09recordingP00Q3URLSbSo09NSManagedlM0C_10Foundation0R0VSgSo6NSUUIDCAqNtFZ_0(v47, (uint64_t)v10, v32, v37);

          sub_10013B118((uint64_t)v10);
          return;
        }

      }
      else
      {
        swift_bridgeObjectRelease(v27);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v18);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v11);
  }
  if (qword_1005CE9E8 != -1)
    swift_once(&qword_1005CE9E8, sub_100177688);
  v40 = type metadata accessor for Logger(0);
  v41 = sub_10012A0B0(v40, (uint64_t)qword_1005D1CE0);
  v42 = Logger.logObject.getter(v41);
  v44 = static os_log_type_t.error.getter(v42, v43);
  if (os_log_type_enabled(v42, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v45 = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, v44, "did not parse directory name for call recording", v45, 2u);
    swift_slowDealloc(v45, -1, -1);
  }

}

uint64_t _s11MobileNotes19CallNoteCoordinatorC015importAndDeleteC22RecordingFilesIfNeeded9directory20managedObjectContexty10Foundation3URLVSg_So09NSManagedoP0CtFZ_0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  char *v34;

  v32 = a2;
  v3 = sub_100012E18(&qword_1005CEFD0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v30 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v30 - v10;
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v30 - v17;
  sub_100179888(a1, (uint64_t)v11);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v33(v11, 1, v12) == 1)
  {
    if (qword_1005CE9F0 != -1)
      swift_once(&qword_1005CE9F0, sub_1001776D0);
    v19 = sub_10012A0B0(v12, (uint64_t)qword_1006016D8);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v20(v18, v19, v12);
    sub_10013B118((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  }
  v34 = v18;
  v20(v9, (uint64_t)v18, v12);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v9, 0, 1, v12);
  v22 = _s11MobileNotes19CallNoteCoordinatorC08fetchAllC10Recordings9directorySay10Foundation3URLVGAHSg_tFZ_0((uint64_t)v9);
  sub_10013B118((uint64_t)v9);
  v23 = *(_QWORD *)(v22 + 16);
  v31 = v22;
  if (v23)
  {
    v24 = v22 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v25 = v22;
    v26 = *(_QWORD *)(v13 + 72);
    v27 = swift_bridgeObjectRetain(v25);
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t, __n128))v20)(v6, v24, v12, v27);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v21)(v6, 0, 1, v12);
      if (v33(v6, 1, v12) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v6, v12);
      sub_100179164((uint64_t)v16, v32, (uint64_t)v34);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      v24 += v26;
      if (!--v23)
        goto LABEL_12;
    }
  }
  else
  {
    v27 = swift_bridgeObjectRetain(v22);
LABEL_12:
    v21(v6, 1, 1, v12, v27);
  }
  v28 = v31;
  swift_bridgeObjectRelease(v31);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v34, v12);
  return swift_bridgeObjectRelease(v28);
}

unint64_t sub_1001797A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005CF5E0;
  if (!qword_1005CF5E0)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_100452820, v1);
    atomic_store(result, (unint64_t *)&qword_1005CF5E0);
  }
  return result;
}

unint64_t sub_1001797EC()
{
  unint64_t result;

  result = qword_1005D4090;
  if (!qword_1005D4090)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005D4090);
  }
  return result;
}

unint64_t sub_100179830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1D20;
  if (!qword_1005D1D20)
  {
    v1 = sub_1000163BC(255, &qword_1005CFAC0, ICAttachment_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1005D1D20);
  }
  return result;
}

uint64_t sub_100179888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005CEFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t ICMoveDecisionType.debugDescription.getter(uint64_t a1)
{
  unint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;

  v1 = 0xD000000000000018;
  switch(a1)
  {
    case 0:
      return v1;
    case 1:
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease(0xE000000000000000);
      v1 = 0xD00000000000002ALL;
      break;
    case 2:
      v1 = 0xD00000000000001ALL;
      break;
    case 3:
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease(0xE000000000000000);
      v1 = 0xD00000000000002CLL;
      break;
    default:
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease(0xE000000000000000);
      v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
      object = v2._object;
      String.append(_:)(v2);
      swift_bridgeObjectRelease(object);
      v4._countAndFlagsBits = 41;
      v4._object = (void *)0xE100000000000000;
      String.append(_:)(v4);
      v1 = 0xD00000000000001DLL;
      break;
  }
  return v1;
}

unint64_t sub_100179A20()
{
  uint64_t *v0;

  return ICMoveDecisionType.debugDescription.getter(*v0);
}

void *StartRecordingIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static StartRecordingIntent.persistentIdentifier;
}

unint64_t static StartRecordingIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_100179A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static StartRecordingIntent.title);
  sub_10012A0B0(v10, (uint64_t)static StartRecordingIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x800000010047C980);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t StartRecordingIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CE9F8 != -1)
    swift_once(&qword_1005CE9F8, sub_100179A50);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static StartRecordingIntent.title);
}

uint64_t static StartRecordingIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CE9F8 != -1)
    swift_once(&qword_1005CE9F8, sub_100179A50);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static StartRecordingIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *StartRecordingIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static StartRecordingIntent.openAppWhenRun;
}

uint64_t static StartRecordingIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x800000010047C920);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static StartRecordingIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  uint64_t v5;

  v0 = sub_100012E18(&qword_1005D1D28);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100179F54();
  ParameterSummaryString.init(stringLiteral:)(0xD000000000000015, 0x800000010047C960, &type metadata for StartRecordingIntent, v3);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for StartRecordingIntent, v3);
}

unint64_t sub_100179F54()
{
  unint64_t result;

  result = qword_1005D1D30;
  if (!qword_1005D1D30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for StartRecordingIntent, &type metadata for StartRecordingIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1D30);
  }
  return result;
}

void (*StartRecordingIntent.loggingConfiguration.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10012A894;
}

uint64_t sub_100179FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = sub_100012E18(&qword_1005D1D28);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.init(stringLiteral:)(0xD000000000000015, 0x800000010047C960, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_10017A094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s11MobileNotes20StartRecordingIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s11MobileNotes20StartRecordingIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  sub_100012E18(&qword_1005CEE50);
  v6 = 0xD000000000000021;
  v7 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v8, &v6, &type metadata for String, &protocol witness table for String);
  v0 = type metadata accessor for AppDependencyManager(0);
  v1 = static AppDependencyManager.shared.getter(v0);
  v2 = AppDependency.__allocating_init(key:manager:)(v8, v1);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v6 = 0xD000000000000024;
  v7 = 0x8000000100476B40;
  v3 = AnyHashable.init<A>(_:)(v8, &v6, &type metadata for String, &protocol witness table for String);
  v4 = static AppDependencyManager.shared.getter(v3);
  AppDependency.__allocating_init(key:manager:)(v8, v4);
  return v2;
}

unint64_t sub_10017A1C8()
{
  unint64_t result;

  result = qword_1005D1D40;
  if (!qword_1005D1D40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for StartRecordingIntent, &type metadata for StartRecordingIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1D40);
  }
  return result;
}

unint64_t sub_10017A210()
{
  unint64_t result;

  result = qword_1005D1D48;
  if (!qword_1005D1D48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for StartRecordingIntent, &type metadata for StartRecordingIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1D48);
  }
  return result;
}

uint64_t sub_10017A254(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of StartRecordingIntent.perform()>>, 1);
}

uint64_t sub_10017A264(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static StartRecordingIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for StartRecordingIntent()
{
  return &type metadata for StartRecordingIntent;
}

uint64_t sub_10017A284()
{
  return sub_100016638(&qword_1005D1D58, &qword_1005D1D60, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

id sub_10017A2B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font);
    if (v5)
    {
      v6 = (void *)objc_opt_self(UIImageSymbolConfiguration);
      v7 = v5;
      v8 = objc_msgSend(v6, "configurationWithFont:", v7);
      objc_msgSend(v4, "setSymbolConfiguration:", v8);

    }
    objc_msgSend(v4, "setContentMode:", 4);
    v9 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_10017A3B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel);
  }
  else
  {
    v4 = sub_10017A414(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10017A414(uint64_t a1)
{
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setTextAlignment:", 1);
  objc_msgSend(v2, "setFont:", *(_QWORD *)(a1 + OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font));
  LODWORD(v3) = 1148846080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 0, v3);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 0, v4);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v2, "setContentHuggingPriority:forAxis:", 1, v5);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v2, "setContentCompressionResistancePriority:forAxis:", 1, v6);
  return v2;
}

id sub_10017A500(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_horizontalPadding] = 0x4024000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_verticalPadding] = 0x4018000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_imageToTextPadding] = 0x4008000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_cornerRadius] = 0x4020000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_backgroundTintColorRatio] = 0x3FC3333333333333;
  v10 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font;
  v11 = (void *)objc_opt_self(UIFont);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "ic_preferredFontForStyle:withFontWeight:", UIFontTextStyleSubheadline, UIFontWeightSemibold);
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel] = 0;

  v15.receiver = v12;
  v15.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v15, "initWithFrame:", a1, a2, a3, a4);
  sub_10017A668();

  return v13;
}

void sub_10017A668()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  Class isa;
  id v8;
  id v9;
  id v10;

  v1 = v0;
  v2 = sub_100012E18(&qword_1005CF6F0);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100451BF0;
  *(_QWORD *)(v3 + 32) = sub_10017A2B0();
  v4 = sub_10017A3B4();
  *(_QWORD *)(v3 + 40) = v4;
  specialized Array._endMutation()(v4);
  v5 = v3;
  v6 = objc_allocWithZone((Class)UIStackView);
  sub_10017AB80();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v8 = objc_msgSend(v6, "initWithArrangedSubviews:", isa);

  objc_msgSend(v8, "setSpacing:", 3.0);
  v9 = objc_msgSend(v1, "contentView");
  objc_msgSend(v9, "addSubview:", v8);

  objc_msgSend(v8, "ic_addAnchorsToFillSuperviewWithHorizontalPadding:verticalPadding:usesSafeAreaLayoutGuide:", 1, 10.0, 6.0);
  v10 = objc_msgSend(v1, "contentView");
  objc_msgSend(v10, "ic_applyRoundedCornersWithRadius:", 8.0);

}

id sub_10017A7D8(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_horizontalPadding] = 0x4024000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_verticalPadding] = 0x4018000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_imageToTextPadding] = 0x4008000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_cornerRadius] = 0x4020000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_backgroundTintColorRatio] = 0x3FC3333333333333;
  v5 = OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell_font;
  v6 = (void *)objc_opt_self(UIFont);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "ic_preferredFontForStyle:withFontWeight:", UIFontTextStyleSubheadline, UIFontWeightSemibold);
  *(_QWORD *)&v7[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___imageView] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell____lazy_storage___textLabel] = 0;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);
  v9 = v8;
  if (v8)
  {
    v10 = v8;
    sub_10017A668();

  }
  return v9;
}

void sub_10017A954(uint64_t a1)
{
  void *v1;
  id v3;
  NSString v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v3 = sub_10017A3B4();
  v4 = (id)ICLocalizedStringForICFilterType(a1);
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v7 = v6;
    v4 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v5 = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  objc_msgSend(v3, "setText:", v4, v5);

  v8 = sub_10017A2B0();
  v9 = (id)ICSymbolImageNameForICFilterType(a1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;

  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v12);

  objc_msgSend(v8, "setImage:", v13);
  v14 = (id)ICTintColorForICFilterType(a1);
  v15 = sub_10017A2B0();
  objc_msgSend(v15, "setTintColor:", v14);

  v16 = sub_10017A3B4();
  objc_msgSend(v16, "setTextColor:", v14);

  v17 = objc_msgSend(v1, "contentView");
  v18 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.15);
  objc_msgSend(v17, "setBackgroundColor:", v18);

}

uint64_t type metadata accessor for LearnMoreSmartFoldersFiltersCell()
{
  return objc_opt_self(_TtC11MobileNotes32LearnMoreSmartFoldersFiltersCell);
}

unint64_t sub_10017AB80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8340;
  if (!qword_1005D8340)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D8340);
  }
  return result;
}

void *ChangeFolderViewSettingIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static ChangeFolderViewSettingIntent.persistentIdentifier;
}

uint64_t sub_10017ABC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static ChangeFolderViewSettingIntent.title);
  sub_10012A0B0(v10, (uint64_t)static ChangeFolderViewSettingIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010047CB00);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for Change Folder View Setting intent", 43, 2);
}

uint64_t ChangeFolderViewSettingIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEA00 != -1)
    swift_once(&qword_1005CEA00, sub_10017ABC8);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static ChangeFolderViewSettingIntent.title);
}

uint64_t static ChangeFolderViewSettingIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA00 != -1)
    swift_once(&qword_1005CEA00, sub_10017ABC8);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static ChangeFolderViewSettingIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *ChangeFolderViewSettingIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static ChangeFolderViewSettingIntent.openAppWhenRun;
}

uint64_t static ChangeFolderViewSettingIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000041, 0x800000010047CAB0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static ChangeFolderViewSettingIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v17;

  v0 = sub_100012E18(&qword_1005D1DD0);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D1DD8);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10001737C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 2, &type metadata for ChangeFolderViewSettingIntent, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100457408, v8);
  v10 = sub_100012E18(&qword_1005D1DE0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x2065687420;
  v11._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_100457430, v12);
  v14 = sub_100012E18(&qword_1005D1DE8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x676E697474657320;
  v15._object = (void *)0xE800000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for ChangeFolderViewSettingIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for ChangeFolderViewSettingIntent, v6);
}

uint64_t sub_10017B1C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10017B1F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t ChangeFolderViewSettingIntent.changeOperation.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for ChangeOperation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t ChangeFolderViewSettingIntent.setting.setter(char a1)
{
  char v2;

  v2 = a1 & 1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_10017B2E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = type metadata accessor for ChangeOperation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  IntentParameter.wrappedValue.setter(v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

_QWORD *sub_10017B380@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10017B3B8(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t (*SetChecklistItemsCheckedIntent.entities.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10012A600;
}

uint64_t sub_10017B43C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t _s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  unsigned int v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  char *v57;
  unsigned int v58;
  void (*v59)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char v67[3];
  uint64_t v68[3];

  v66 = type metadata accessor for InputConnectionBehavior(0);
  v62 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v65 = (char *)&v51 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2 = __chkstk_darwin(v1);
  v64 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v63 = (char *)&v51 - v4;
  v5 = sub_100012E18(&qword_1005CEED0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = (uint64_t)v7;
  v8 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v8);
  v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  __chkstk_darwin(v10);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  v60 = v21;
  __chkstk_darwin(v21);
  v52 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100012E18(&qword_1005CEED8);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x65676E616843, 0xE600000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v55 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v53 = v12;
  v26(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  v54 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter to Change Folder View Setting intent", 46, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001FLL, 0x8000000100477080);
  static Locale.current.getter(v27);
  v26(v14, v25, v12);
  v28 = v57;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for change operation", 42, 2);
  v59 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v59(v28, 0, 1, v21);
  v29 = type metadata accessor for ChangeOperation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
  v30 = type metadata accessor for IntentDialog(0);
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v56 = v31;
  v32 = v63;
  v31(v63, 1, 1, v30);
  v33 = v64;
  v31(v64, 1, 1, v30);
  v58 = enum case for InputConnectionBehavior.default(_:);
  v62 = *(_QWORD *)(v62 + 104);
  v34 = v65;
  ((void (*)(char *))v62)(v65);
  v35 = sub_10017BAF8(&qword_1005CEEE0, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  dispatch thunk of static CaseIterable.allCases.getter(v68, v29, v35);
  v36 = v68[0];
  v37 = sub_10017BAF8(&qword_1005CEEE8, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v38 = v52;
  v61 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v52, v28, v51, v32, v33, v34, v36, v37);
  v51 = sub_100012E18(&qword_1005CEEF0);
  v39 = String.LocalizationValue.init(stringLiteral:)(0x676E6974746553, 0xE700000000000000);
  static Locale.current.getter(v39);
  v40 = v55;
  v41 = v53;
  v42 = v54;
  v54(v14, v55, v53);
  v43 = v38;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter to Change Folder View Setting intent", 46, 2);
  v44 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000020, 0x80000001004770D0);
  static Locale.current.getter(v44);
  v42(v14, v40, v41);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Parameter description for folder view", 37, 2);
  v59(v28, 0, 1, v60);
  v67[0] = 2;
  v45 = v63;
  v46 = v56;
  v56(v63, 1, 1, v30);
  v47 = v64;
  v46(v64, 1, 1, v30);
  v48 = v65;
  ((void (*)(char *, _QWORD, uint64_t))v62)(v65, v58, v66);
  v49 = sub_100127E1C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v43, v28, v67, v45, v47, v48, &off_100555C60, v49);
  return v61;
}

unint64_t sub_10017BA24()
{
  unint64_t result;

  result = qword_1005D1DF8;
  if (!qword_1005D1DF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeFolderViewSettingIntent, &type metadata for ChangeFolderViewSettingIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1DF8);
  }
  return result;
}

uint64_t sub_10017BA70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ChangeFolderViewSettingIntent.perform()>>, 1);
}

uint64_t sub_10017BA80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static ChangeFolderViewSettingIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for ChangeFolderViewSettingIntent()
{
  return &type metadata for ChangeFolderViewSettingIntent;
}

uint64_t sub_10017BAA0()
{
  return sub_100016638(&qword_1005D1E18, &qword_1005D1E20, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_10017BACC()
{
  return sub_100016638((unint64_t *)&qword_1005D1B40, (uint64_t *)&unk_1005D0690, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10017BAF8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ChangeOperation(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

double sub_10017BB38()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  v1 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font), "lineHeight");
  v3 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight;
  v4 = *(double *)(v0 + OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight);
  v5 = 4.0;
  v6 = 4.0;
  if (v2 + 8.0 < v4)
  {
    objc_msgSend(*(id *)(v0 + v1), "lineHeight");
    v6 = (v4 - v7) * 0.5;
  }
  objc_msgSend(*(id *)(v0 + v1), "lineHeight");
  v9 = v8;
  objc_msgSend(*(id *)(v0 + v1), "lineHeight");
  v11 = *(double *)(v0 + v3);
  if (v10 + 8.0 < v11)
  {
    objc_msgSend(*(id *)(v0 + v1), "lineHeight");
    v5 = (v11 - v12) * 0.5;
  }
  return v6 + v9 + v5;
}

id sub_10017BC08()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  NSString v12;
  NSString v13;
  id v14;
  objc_super v16;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_menu] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_traitCollection] = 0;
  v3 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
  v4 = (void *)objc_opt_self(UIFont);
  v5 = v0;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v6 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_foregroundColor;
  *(_QWORD *)&v5[v6] = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight] = 0;

  v7 = (void *)objc_opt_self(NSTextAttachment);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "textAttachmentViewProviderClassForFileType:", v8);

  if (!v9)
  {
    v10 = type metadata accessor for InlineMenuButtonTextAttachmentViewProvider();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "registerTextAttachmentViewProviderClass:forFileType:", ObjCClassFromMetadata, v12);

  }
  v13 = String._bridgeToObjectiveC()();
  v16.receiver = v5;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, "initWithData:ofType:", 0, v13);

  return v14;
}

void sub_10017BDD8(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_menu] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_traitCollection] = 0;
  v2 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_font;
  *(_QWORD *)&v1[v2] = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v3 = OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_foregroundColor;
  *(_QWORD *)&v1[v3] = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes30InlineMenuButtonTextAttachment_minimumHeight] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004796E0, "MobileNotes/InlineMenuButtonTextAttachment.swift", 48, 2, 59, 0);
  __break(1u);
}

uint64_t type metadata accessor for InlineMenuButtonTextAttachment()
{
  return objc_opt_self(_TtC11MobileNotes30InlineMenuButtonTextAttachment);
}

void *CreateNoteIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateNoteIntent.persistentIdentifier;
}

unint64_t static CreateNoteIntent.persistentIdentifier.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_10017BFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static CreateNoteIntent.title);
  sub_10012A0B0(v10, (uint64_t)static CreateNoteIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x4E20657461657243, 0xEB0000000065746FLL);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t CreateNoteIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEA08 != -1)
    swift_once(&qword_1005CEA08, sub_10017BFD8);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static CreateNoteIntent.title);
}

uint64_t static CreateNoteIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA08 != -1)
    swift_once(&qword_1005CEA08, sub_10017BFD8);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static CreateNoteIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static CreateNoteIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x800000010047CCB0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static CreateNoteIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v21;

  v0 = sub_100012E18(&qword_1005D1E78);
  __chkstk_darwin(v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18((uint64_t *)&unk_1005D1E80);
  __chkstk_darwin(v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10017C638();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 3, &type metadata for CreateNoteIntent, v6);
  v7._countAndFlagsBits = 0x6120657461657243;
  v7._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100457600, v8);
  v10 = sub_100012E18(&qword_1005D1E90);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x6E692065746F6E20;
  v11._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_100457628, v12);
  v14 = sub_100012E18(&qword_1005D1E98);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x6F63207461687420;
  v15._object = (void *)0xEF20736E6961746ELL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_100457650, v16);
  v18 = sub_100012E18((uint64_t *)&unk_1005D1EA0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v17, v3, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v19);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CreateNoteIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for CreateNoteIntent, v6);
}

unint64_t sub_10017C638()
{
  unint64_t result;

  result = qword_1005DCC90;
  if (!qword_1005DCC90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateNoteIntent, &type metadata for CreateNoteIntent);
    atomic_store(result, (unint64_t *)&qword_1005DCC90);
  }
  return result;
}

uint64_t SetChecklistItemsCheckedIntent.$changeOperation.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10017C69C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t SetChecklistItemsCheckedIntent.$note.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10017C6E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t SetChecklistItemsCheckedIntent.$entities.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10017C72C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

double CreateNoteIntent.init()@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_10018030C((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t CreateChecklistItemIntent.name.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t CreateChecklistItemIntent.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return IntentParameter.wrappedValue.setter(v3);
}

_QWORD *CreateChecklistItemIntent.noteEntity.getter@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t CreateNoteIntent.contents.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100012E18(&qword_1005CEEA0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v4, &qword_1005CEEA0);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100012DDC(a1, &qword_1005CEEA0);
}

_QWORD *SetChecklistItemsCheckedIntent.note.getter@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t CreateNoteIntent.folder.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100012E18(&qword_1005D1EB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v4, &qword_1005D1EB0);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100012DDC(a1, &qword_1005D1EB0);
}

uint64_t (*SetChecklistItemsCheckedIntent.note.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10012A600;
}

uint64_t ChangeTagSelectionIntent.loggingConfiguration.getter()
{
  uint64_t v1;

  AppDependency.wrappedValue.getter(&v1);
  return v1;
}

uint64_t ChangeTagSelectionIntent.loggingConfiguration.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[4];

  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  return AppDependency.wrappedValue.setter(v5);
}

uint64_t (*ChangeTagSelectionIntent.loggingConfiguration.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10012A600;
}

uint64_t ChangeTagSelectionIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t CreateNoteIntent.perform()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v2[51] = a1;
  v2[52] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[53] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[54] = v4;
  v2[55] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OpensIntentHint(0);
  v2[56] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[57] = v6;
  v2[58] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D1EB0);
  v2[59] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FolderEntity(0);
  v2[60] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[61] = v9;
  v2[62] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NoteEntity(0);
  v2[63] = v10;
  v11 = (*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[64] = swift_task_alloc(v11);
  v2[65] = swift_task_alloc(v11);
  v2[66] = swift_task_alloc(v11);
  v2[67] = swift_task_alloc(v11);
  v2[68] = swift_task_alloc(v11);
  v12 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2[69] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v2[70] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[71] = v14;
  v2[72] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  v2[73] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  v2[74] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LocalizedStringResource(0);
  v2[75] = v17;
  v18 = *(_QWORD *)(v17 - 8);
  v2[76] = v18;
  v19 = (*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[77] = swift_task_alloc(v19);
  v2[78] = swift_task_alloc(v19);
  v20 = type metadata accessor for AttributedString.Index(0);
  v2[79] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v2[80] = v21;
  v22 = (*(_QWORD *)(v21 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[81] = swift_task_alloc(v22);
  v2[82] = swift_task_alloc(v22);
  v23 = type metadata accessor for AttributedString.CharacterView(0);
  v2[83] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v2[84] = v24;
  v2[85] = swift_task_alloc((*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for AttributedString(0);
  v2[86] = v25;
  v26 = *(_QWORD *)(v25 - 8);
  v2[87] = v26;
  v2[88] = swift_task_alloc((*(_QWORD *)(v26 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005CEEA0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[89] = swift_task_alloc(v27);
  v2[90] = swift_task_alloc(v27);
  v2[91] = swift_task_alloc(v27);
  v2[92] = swift_task_alloc(v27);
  v2[93] = swift_task_alloc(v27);
  v28 = type metadata accessor for IntentSystemContext.Kind(0);
  v2[94] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v2[95] = v29;
  v2[96] = swift_task_alloc((*(_QWORD *)(v29 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100012E18(&qword_1005D1EC8);
  v2[97] = v30;
  v2[98] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v30 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D1ED0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[99] = swift_task_alloc(v31);
  v2[100] = swift_task_alloc(v31);
  v2[101] = swift_task_alloc(v31);
  v32 = type metadata accessor for IntentSystemContext.Source(0);
  v2[102] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v2[103] = v33;
  v2[104] = swift_task_alloc((*(_QWORD *)(v33 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100012E18(&qword_1005D1ED8);
  v2[105] = v34;
  v2[106] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v34 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18((uint64_t *)&unk_1005D1EE0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[107] = swift_task_alloc(v35);
  v2[108] = swift_task_alloc(v35);
  v2[109] = swift_task_alloc(v35);
  v36 = type metadata accessor for IntentSystemContext(0);
  v2[110] = v36;
  v37 = *(_QWORD *)(v36 - 8);
  v2[111] = v37;
  v38 = (*(_QWORD *)(v37 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[112] = swift_task_alloc(v38);
  v2[113] = swift_task_alloc(v38);
  return swift_task_switch(sub_10017CE8C, 0, 0);
}

uint64_t sub_10017CE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  id v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  void (*v112)(uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t (*v178)(uint64_t, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), uint64_t);
  uint64_t v179;
  uint64_t v180;

  v1 = *(_QWORD *)(v0 + 904);
  v2 = *(_QWORD *)(v0 + 888);
  v3 = *(_QWORD *)(v0 + 880);
  v4 = *(_QWORD *)(v0 + 872);
  v5 = *(_QWORD *)(v0 + 864);
  v6 = *(_QWORD *)(v0 + 848);
  v166 = *(_QWORD *)(v0 + 840);
  v7 = *(_QWORD *)(v0 + 824);
  v8 = *(_QWORD *)(v0 + 816);
  v9 = *(_QWORD *)(v0 + 416);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)(v0 + 136) = *(_OWORD *)v9;
  *(_OWORD *)(v0 + 152) = v11;
  *(_QWORD *)(v0 + 168) = v10;
  sub_10017C638();
  v12 = AppIntent.systemContext.getter(&type metadata for CreateNoteIntent);
  IntentSystemContext.source.getter(v12);
  v170 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v170(v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v5, enum case for IntentSystemContext.Source.actionButton(_:), v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v8);
  v13 = v6 + *(int *)(v166 + 48);
  sub_100012CE8(v4, v6, (uint64_t *)&unk_1005D1EE0);
  sub_100012CE8(v5, v13, (uint64_t *)&unk_1005D1EE0);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v14(v6, 1, v8) == 1)
  {
    v15 = *(_QWORD *)(v0 + 872);
    v16 = *(_QWORD *)(v0 + 816);
    sub_100012DDC(*(_QWORD *)(v0 + 864), (uint64_t *)&unk_1005D1EE0);
    sub_100012DDC(v15, (uint64_t *)&unk_1005D1EE0);
    if (v14(v13, 1, v16) == 1)
    {
      sub_100012DDC(*(_QWORD *)(v0 + 848), (uint64_t *)&unk_1005D1EE0);
      v17 = 1;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(v0 + 816);
  sub_100012CE8(*(_QWORD *)(v0 + 848), *(_QWORD *)(v0 + 856), (uint64_t *)&unk_1005D1EE0);
  v19 = v14(v13, 1, v18);
  v20 = *(_QWORD *)(v0 + 872);
  v21 = *(_QWORD *)(v0 + 864);
  v22 = *(_QWORD *)(v0 + 856);
  if (v19 == 1)
  {
    v23 = *(_QWORD *)(v0 + 824);
    v24 = *(_QWORD *)(v0 + 816);
    sub_100012DDC(*(_QWORD *)(v0 + 864), (uint64_t *)&unk_1005D1EE0);
    sub_100012DDC(v20, (uint64_t *)&unk_1005D1EE0);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
LABEL_6:
    sub_100012DDC(*(_QWORD *)(v0 + 848), &qword_1005D1ED8);
    v17 = 0;
    goto LABEL_8;
  }
  v25 = *(_QWORD *)(v0 + 848);
  v26 = *(_QWORD *)(v0 + 832);
  v27 = *(_QWORD *)(v0 + 824);
  v28 = *(_QWORD *)(v0 + 816);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, v13, v28);
  v29 = sub_100019C6C(&qword_1005D1F48, (uint64_t (*)(uint64_t))&type metadata accessor for IntentSystemContext.Source, (uint64_t)&protocol conformance descriptor for IntentSystemContext.Source);
  v17 = dispatch thunk of static Equatable.== infix(_:_:)(v22, v26, v28, v29);
  v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v30(v26, v28);
  sub_100012DDC(v21, (uint64_t *)&unk_1005D1EE0);
  sub_100012DDC(v20, (uint64_t *)&unk_1005D1EE0);
  v30(v22, v28);
  sub_100012DDC(v25, (uint64_t *)&unk_1005D1EE0);
LABEL_8:
  v167 = v17;
  *(_BYTE *)(v0 + 1056) = v17 & 1;
  v31 = *(_QWORD *)(v0 + 896);
  v32 = *(_QWORD *)(v0 + 880);
  v33 = *(_QWORD *)(v0 + 808);
  v34 = *(_QWORD *)(v0 + 800);
  v35 = *(_QWORD *)(v0 + 784);
  v36 = *(_QWORD *)(v0 + 776);
  v37 = *(_QWORD *)(v0 + 760);
  v38 = *(_QWORD *)(v0 + 752);
  v39 = *(_QWORD *)(v0 + 416);
  v40 = *(_QWORD *)(v39 + 32);
  v41 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)v39;
  *(_OWORD *)(v0 + 112) = v41;
  *(_QWORD *)(v0 + 128) = v40;
  v42 = AppIntent.systemContext.getter(&type metadata for CreateNoteIntent);
  IntentSystemContext.kind.getter(v42);
  v170(v31, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v34, enum case for IntentSystemContext.Kind.userShortcut(_:), v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v38);
  v43 = v35 + *(int *)(v36 + 48);
  sub_100012CE8(v33, v35, &qword_1005D1ED0);
  sub_100012CE8(v34, v43, &qword_1005D1ED0);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v44(v35, 1, v38) == 1)
  {
    v45 = *(_QWORD *)(v0 + 808);
    v46 = *(_QWORD *)(v0 + 752);
    sub_100012DDC(*(_QWORD *)(v0 + 800), &qword_1005D1ED0);
    sub_100012DDC(v45, &qword_1005D1ED0);
    if (v44(v43, 1, v46) == 1)
    {
      v47 = *(uint64_t **)(v0 + 416);
      sub_100012DDC(*(_QWORD *)(v0 + 784), &qword_1005D1ED0);
      v48 = *v47;
      v49 = v47[1];
      LOBYTE(v50) = 1;
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  v51 = *(_QWORD *)(v0 + 752);
  sub_100012CE8(*(_QWORD *)(v0 + 784), *(_QWORD *)(v0 + 792), &qword_1005D1ED0);
  v52 = v44(v43, 1, v51);
  v53 = *(_QWORD *)(v0 + 808);
  v54 = *(_QWORD *)(v0 + 800);
  v55 = *(_QWORD *)(v0 + 792);
  if (v52 == 1)
  {
    v56 = *(_QWORD *)(v0 + 760);
    v57 = *(_QWORD *)(v0 + 752);
    sub_100012DDC(*(_QWORD *)(v0 + 800), &qword_1005D1ED0);
    sub_100012DDC(v53, &qword_1005D1ED0);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v57);
LABEL_13:
    sub_100012DDC(*(_QWORD *)(v0 + 784), &qword_1005D1EC8);
    v50 = 0;
    goto LABEL_15;
  }
  v58 = *(_QWORD *)(v0 + 784);
  v59 = *(_QWORD *)(v0 + 768);
  v60 = *(_QWORD *)(v0 + 760);
  v61 = *(_QWORD *)(v0 + 752);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v59, v43, v61);
  v62 = sub_100019C6C(&qword_1005D1F40, (uint64_t (*)(uint64_t))&type metadata accessor for IntentSystemContext.Kind, (uint64_t)&protocol conformance descriptor for IntentSystemContext.Kind);
  v50 = dispatch thunk of static Equatable.== infix(_:_:)(v55, v59, v61, v62);
  v63 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v63(v59, v61);
  sub_100012DDC(v54, &qword_1005D1ED0);
  sub_100012DDC(v53, &qword_1005D1ED0);
  v63(v55, v61);
  sub_100012DDC(v58, &qword_1005D1ED0);
LABEL_15:
  v64 = *(uint64_t **)(v0 + 416);
  v48 = *v64;
  v49 = v64[1];
  if (((v50 | v167) & 1) == 0)
  {
    v74 = *(_QWORD **)(v0 + 728);
    v75 = *(_QWORD *)(v0 + 696);
    v76 = *(_QWORD *)(v0 + 688);
    IntentParameter.wrappedValue.getter(v74);
    v77 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v75 + 48))(v74, 1, v76);
    v78 = *(_QWORD *)(v0 + 728);
    if (v77 == 1)
    {
      AttributedString.init()();
      sub_100012DDC(v78, &qword_1005CEEA0);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 696) + 32))(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 688));
    }
    v79 = *(_QWORD *)(v0 + 736);
    v80 = *(_QWORD *)(v0 + 720);
    (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 696) + 56))(v79, 0, 1, *(_QWORD *)(v0 + 688));
    sub_100012CE8(v79, v80, &qword_1005CEEA0);
    IntentParameter.wrappedValue.setter(v80);
    sub_100012DDC(v79, &qword_1005CEEA0);
    v68 = 0;
    LOBYTE(v50) = 0;
    goto LABEL_27;
  }
LABEL_16:
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 296));
  v65 = *(_QWORD *)(v0 + 304);
  if (!v65)
    goto LABEL_21;
  v66 = *(_QWORD *)(v0 + 296);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 304));
  v67 = HIBYTE(v65) & 0xF;
  if ((v65 & 0x2000000000000000) == 0)
    v67 = v66 & 0xFFFFFFFFFFFFLL;
  if (!v67)
  {
LABEL_21:
    v69 = *(_QWORD **)(v0 + 744);
    v70 = *(_QWORD *)(v0 + 696);
    v71 = *(_QWORD *)(v0 + 688);
    v175 = v49;
    IntentParameter.wrappedValue.getter(v69);
    v72 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v70 + 48))(v69, 1, v71);
    v73 = *(_QWORD *)(v0 + 744);
    if (v72)
    {
      sub_100012DDC(*(_QWORD *)(v0 + 744), &qword_1005CEEA0);
    }
    else
    {
      v162 = v48;
      v102 = *(_QWORD *)(v0 + 704);
      v168 = *(_QWORD *)(v0 + 688);
      v171 = *(_QWORD *)(v0 + 696);
      v103 = *(_QWORD *)(v0 + 680);
      v173 = *(_QWORD *)(v0 + 672);
      v104 = *(_QWORD *)(v0 + 664);
      v105 = *(_QWORD *)(v0 + 656);
      v106 = *(_QWORD *)(v0 + 648);
      v164 = *(_QWORD *)(v0 + 640);
      v107 = *(_QWORD *)(v0 + 632);
      (*(void (**)(uint64_t, uint64_t))(v171 + 16))(v102, v73);
      v108 = sub_100012DDC(v73, &qword_1005CEEA0);
      AttributedString.characters.getter(v108);
      v109 = sub_100019C6C((unint64_t *)&unk_1005D1F30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
      dispatch thunk of Collection.startIndex.getter(v104, v109);
      dispatch thunk of Collection.endIndex.getter(v104);
      v110 = sub_100019C6C((unint64_t *)&unk_1005D7B00, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
      v111 = dispatch thunk of static Equatable.== infix(_:_:)(v105, v106, v107, v110);
      v112 = *(void (**)(uint64_t, uint64_t))(v164 + 8);
      v112(v106, v107);
      v112(v105, v107);
      (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v103, v104);
      (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v102, v168);
      if ((v111 & 1) == 0)
      {
        v68 = 1;
        v48 = v162;
        v49 = v175;
        goto LABEL_27;
      }
    }
    v113 = *(_QWORD *)(v0 + 624);
    v114 = *(_QWORD *)(v0 + 616);
    v115 = *(_QWORD *)(v0 + 608);
    v179 = *(_QWORD *)(v0 + 600);
    v116 = *(_QWORD *)(v0 + 592);
    v117 = *(_QWORD *)(v0 + 584);
    v118 = *(_QWORD *)(v0 + 576);
    v119 = *(_QWORD *)(v0 + 568);
    v120 = *(_QWORD *)(v0 + 560);
    v121 = *(_QWORD *)(v0 + 552);
    v122 = String.LocalizationValue.init(stringLiteral:)(0x65746F4E2077654ELL, 0xE800000000000000);
    static Locale.current.getter(v122);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v119 + 104))(v118, enum case for LocalizedStringResource.BundleDescription.main(_:), v120);
    v123 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v116, 0, 0, v117, v118, "Note content prompt when creating a note via App Intents", 56, 2);
    v124 = IntentParameter.projectedValue.getter(v123);
    v125 = v115;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 16))(v114, v113, v179);
    IntentDialog.init(_:)(v114);
    v126 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v121, 0, 1, v126);
    v127 = type metadata accessor for AppIntentError(0);
    v128 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v127, v128, 0, 0);
    IntentParameter.needsValueError(_:)(v121);
    swift_release(v124);
    v129 = sub_100012DDC(v121, (uint64_t *)&unk_1005CEE20);
    swift_willThrow(v129);
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v113, v179);
    v134 = *(_QWORD *)(v0 + 896);
    v135 = *(_QWORD *)(v0 + 872);
    v136 = *(_QWORD *)(v0 + 864);
    v137 = *(_QWORD *)(v0 + 856);
    v138 = *(_QWORD *)(v0 + 848);
    v139 = *(_QWORD *)(v0 + 832);
    v140 = *(_QWORD *)(v0 + 808);
    v141 = *(_QWORD *)(v0 + 800);
    v142 = *(_QWORD *)(v0 + 792);
    v143 = *(_QWORD *)(v0 + 784);
    v144 = *(_QWORD *)(v0 + 768);
    v145 = *(_QWORD *)(v0 + 744);
    v146 = *(_QWORD *)(v0 + 736);
    v147 = *(_QWORD *)(v0 + 728);
    v148 = *(_QWORD *)(v0 + 720);
    v149 = *(_QWORD *)(v0 + 712);
    v150 = *(_QWORD *)(v0 + 704);
    v151 = *(_QWORD *)(v0 + 680);
    v152 = *(_QWORD *)(v0 + 656);
    v153 = *(_QWORD *)(v0 + 648);
    v154 = *(_QWORD *)(v0 + 624);
    v155 = *(_QWORD *)(v0 + 616);
    v156 = *(_QWORD *)(v0 + 592);
    v157 = *(_QWORD *)(v0 + 584);
    v158 = *(_QWORD *)(v0 + 576);
    v159 = *(_QWORD *)(v0 + 552);
    v160 = *(_QWORD *)(v0 + 544);
    v161 = *(_QWORD *)(v0 + 536);
    v163 = *(_QWORD *)(v0 + 528);
    v165 = *(_QWORD *)(v0 + 520);
    v169 = *(_QWORD *)(v0 + 512);
    v172 = *(_QWORD *)(v0 + 496);
    v174 = *(_QWORD *)(v0 + 472);
    v177 = *(_QWORD *)(v0 + 464);
    v180 = *(_QWORD *)(v0 + 440);
    swift_task_dealloc(*(_QWORD *)(v0 + 904));
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v137);
    swift_task_dealloc(v138);
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v142);
    swift_task_dealloc(v143);
    swift_task_dealloc(v144);
    swift_task_dealloc(v145);
    swift_task_dealloc(v146);
    swift_task_dealloc(v147);
    swift_task_dealloc(v148);
    swift_task_dealloc(v149);
    swift_task_dealloc(v150);
    swift_task_dealloc(v151);
    swift_task_dealloc(v152);
    swift_task_dealloc(v153);
    swift_task_dealloc(v154);
    swift_task_dealloc(v155);
    swift_task_dealloc(v156);
    swift_task_dealloc(v157);
    swift_task_dealloc(v158);
    swift_task_dealloc(v159);
    swift_task_dealloc(v160);
    swift_task_dealloc(v161);
    swift_task_dealloc(v163);
    swift_task_dealloc(v165);
    swift_task_dealloc(v169);
    swift_task_dealloc(v172);
    swift_task_dealloc(v174);
    swift_task_dealloc(v177);
    swift_task_dealloc(v180);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v68 = 1;
LABEL_27:
  *(_BYTE *)(v0 + 1057) = v50 & 1;
  v81 = v48;
  *(_QWORD *)(v0 + 920) = v48;
  v176 = v49;
  *(_QWORD *)(v0 + 912) = v49;
  v82 = *(_QWORD *)(*(_QWORD *)(v0 + 416) + 24);
  *(_QWORD *)(v0 + 928) = v82;
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 328));
  v83 = *(void **)(v0 + 328);
  v84 = objc_msgSend(objc_allocWithZone((Class)ICCreateNoteAction), "initWithNoteContext:", v83);
  *(_QWORD *)(v0 + 936) = v84;

  if ((v68 & 1) == 0)
    objc_msgSend(v84, "setAllowsNoContent:", 1);
  v86 = *(_QWORD *)(v0 + 480);
  v85 = *(_QWORD *)(v0 + 488);
  v87 = *(_QWORD **)(v0 + 472);
  v88 = *(_QWORD *)(v0 + 416);
  v89 = *(_QWORD *)(v88 + 16);
  *(_QWORD *)(v0 + 944) = v89;
  v90 = *(_QWORD *)(v88 + 32);
  *(_QWORD *)(v0 + 952) = v90;
  IntentParameter.wrappedValue.getter(v87);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48))(v87, 1, v86) == 1)
  {
    v91 = *(_QWORD **)(v0 + 712);
    sub_100012DDC(*(_QWORD *)(v0 + 472), &qword_1005D1EB0);
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 280));
    v92 = *(_QWORD *)(v0 + 280);
    v93 = *(_QWORD *)(v0 + 288);
    IntentParameter.wrappedValue.getter(v91);
    v130 = ICCreateNoteAction.perform(withTitle:contents:container:)(v92, v93, v91, 0);
    sub_100012DDC(*(_QWORD *)(v0 + 712), &qword_1005CEEA0);
    swift_bridgeObjectRelease(v93);
    *(_QWORD *)(v0 + 1000) = v130;
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 352));
    *(_QWORD *)(v0 + 1008) = *(_QWORD *)(v0 + 352);
    v131 = (_QWORD *)swift_task_alloc(async function pointer to ICUnifiedNoteContext.perform<A, B>(with:using:)[1]);
    *(_QWORD *)(v0 + 1016) = v131;
    v132 = sub_100012E18((uint64_t *)&unk_1005D1F10);
    *v131 = v0;
    v131[1] = sub_10017E1F0;
    return ICUnifiedNoteContext.perform<A, B>(with:using:)(v132, v130, sub_100180160, 0, v132, (char *)&type metadata for () + 8);
  }
  else
  {
    v94 = *(__int128 **)(v0 + 416);
    sub_10013B170(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 496), type metadata accessor for FolderEntity);
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 392));
    v95 = *(_QWORD *)(v0 + 392);
    *(_QWORD *)(v0 + 960) = v95;
    v96 = swift_allocObject(&unk_10055BA30, 64, 7);
    *(_QWORD *)(v0 + 968) = v96;
    *(_QWORD *)(v96 + 16) = v84;
    v98 = *v94;
    v97 = v94[1];
    *(_QWORD *)(v96 + 56) = *((_QWORD *)v94 + 4);
    *(_OWORD *)(v96 + 24) = v98;
    *(_OWORD *)(v96 + 40) = v97;
    v99 = unk_1005D0B44;
    v178 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), uint64_t))((char *)&dword_1005D0B40 + dword_1005D0B40);
    v100 = v84;
    swift_retain(v81);
    swift_retain(v176);
    swift_retain(v89);
    swift_retain(v82);
    swift_retain(v90);
    v101 = (_QWORD *)swift_task_alloc(v99);
    *(_QWORD *)(v0 + 976) = v101;
    *v101 = v0;
    v101[1] = sub_10017E0BC;
    return v178(v95, sub_100180C48, v96);
  }
}

uint64_t sub_10017E0BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 976);
  *(_QWORD *)(*(_QWORD *)v2 + 984) = v1;
  swift_task_dealloc(v5);
  v6 = (void *)v4[120];
  swift_release(v4[121]);

  if (v1)
  {
    v7 = sub_10017EDD4;
  }
  else
  {
    v4[124] = a1;
    v7 = sub_10017E140;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_10017E140()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  sub_100145264(v0[62], type metadata accessor for FolderEntity);
  v1 = v0[124];
  v0[125] = v1;
  AppDependency.wrappedValue.getter(v0 + 44);
  v0[126] = v0[44];
  v2 = (_QWORD *)swift_task_alloc(async function pointer to ICUnifiedNoteContext.perform<A, B>(with:using:)[1]);
  v0[127] = v2;
  v3 = sub_100012E18((uint64_t *)&unk_1005D1F10);
  *v2 = v0;
  v2[1] = sub_10017E1F0;
  return ICUnifiedNoteContext.perform<A, B>(with:using:)(v3, v1, sub_100180160, 0, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10017E1F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1016);
  *(_QWORD *)(*v1 + 1024) = v0;
  swift_task_dealloc(v3);

  if (v0)
    v4 = sub_10017F40C;
  else
    v4 = sub_10017E25C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10017E25C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  char *v36;
  char v37;
  char v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t inited;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v1 = objc_msgSend(*(id *)(v0 + 1000), "managedObjectContext");
  *(_QWORD *)(v0 + 1032) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(*(id *)(v0 + 1000), "objectID");
    v4 = dword_1005D7854;
    v5 = v2;
    v6 = (_QWORD *)swift_task_alloc(v4);
    *(_QWORD *)(v0 + 1040) = v6;
    *v6 = v0;
    v6[1] = sub_10017E96C;
    return NoteEntity.init(for:in:)(*(_QWORD *)(v0 + 536), (uint64_t)v3, (uint64_t)v5);
  }
  v8 = *(void **)(v0 + 1000);
  v9 = *(void **)(v0 + 936);
  type metadata accessor for ICError(0);
  v11 = v10;
  *(_QWORD *)(v0 + 368) = 225;
  v12 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
  v81 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
  v83 = v11;
  v13 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 360), v0 + 368, v12, v11, v81);
  v14 = *(_QWORD *)(v0 + 360);
  swift_willThrow(v13);

  v15 = *(_QWORD *)(v0 + 952);
  v16 = *(_QWORD *)(v0 + 944);
  v17 = *(_QWORD *)(v0 + 928);
  v18 = *(_QWORD *)(v0 + 920);
  v19 = *(_QWORD *)(v0 + 912);
  swift_retain(v18);
  swift_retain(v19);
  swift_retain(v16);
  swift_retain(v17);
  swift_retain(v15);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 176));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  swift_release(v18);
  swift_release(v19);
  swift_release(v16);
  swift_release(v17);
  swift_release(v15);
  v20 = swift_errorRetain(v14);
  v21 = Logger.logObject.getter(v20);
  v23 = static os_log_type_t.error.getter(v21, v22);
  if (os_log_type_enabled(v21, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v24 = 138412290;
    v26 = _convertErrorToNSError(_:)(v14);
    *(_QWORD *)(v0 + 344) = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 344, v0 + 352, v24 + 4);
    *v25 = v26;
    swift_errorRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v21, v23, "CreateNoteIntent failed with error: %@", v24, 0xCu);
    v27 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v25, 1, v27);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    swift_errorRelease(v14);
  }
  v29 = *(_QWORD *)(v0 + 432);
  v28 = *(_QWORD *)(v0 + 440);
  v30 = *(_QWORD *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  type metadata accessor for Code(0);
  v32 = v31;
  *(_QWORD *)(v0 + 384) = 228;
  swift_errorRetain(v14);
  v33 = sub_100019C6C(&qword_1005CF548, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1004527E4);
  LOBYTE(v30) = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 384, v14, v32, v33);
  swift_errorRelease(v14);
  if ((v30 & 1) != 0)
  {
    v34 = sub_10013F4E8();
    v35 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v34, 0, 0);
    v37 = 6;
  }
  else
  {
    *(_QWORD *)(v0 + 376) = 229;
    swift_errorRetain(v14);
    v38 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 376, v14, v32, v33);
    swift_errorRelease(v14);
    if ((v38 & 1) != 0)
    {
      v39 = sub_10013F4E8();
      v35 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v39, 0, 0);
      v37 = 7;
    }
    else
    {
      *(_QWORD *)(v0 + 336) = 218;
      swift_errorRetain(v14);
      v40 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 336, v14, v32, v33);
      swift_errorRelease(v14);
      if ((v40 & 1) == 0)
      {
        *(_QWORD *)(v0 + 312) = 218;
        v51 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
        inited = swift_initStackObject(v51, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100451C20;
        *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
        *(_QWORD *)(inited + 40) = v53;
        swift_getErrorValue(v14, v0 + 400, v0 + 256);
        v54 = *(_QWORD *)(v0 + 256);
        v55 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(inited + 72) = v55;
        v56 = sub_10012D160((_QWORD *)(inited + 48));
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v56, v54, v55);
        v57 = sub_1001356D4(inited);
        v35 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 320), v0 + 312, v57, v83, v81);
        goto LABEL_13;
      }
      v41 = sub_10013F4E8();
      v35 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v41, 0, 0);
      v37 = 5;
    }
  }
  *v36 = v37;
LABEL_13:
  swift_willThrow(v35);
  swift_errorRelease(v14);
  v42 = *(_QWORD *)(v0 + 896);
  v43 = *(_QWORD *)(v0 + 872);
  v44 = *(_QWORD *)(v0 + 864);
  v45 = *(_QWORD *)(v0 + 856);
  v46 = *(_QWORD *)(v0 + 848);
  v47 = *(_QWORD *)(v0 + 832);
  v48 = *(_QWORD *)(v0 + 808);
  v49 = *(_QWORD *)(v0 + 800);
  v50 = *(_QWORD *)(v0 + 792);
  v58 = *(_QWORD *)(v0 + 784);
  v59 = *(_QWORD *)(v0 + 768);
  v60 = *(_QWORD *)(v0 + 744);
  v61 = *(_QWORD *)(v0 + 736);
  v62 = *(_QWORD *)(v0 + 728);
  v63 = *(_QWORD *)(v0 + 720);
  v64 = *(_QWORD *)(v0 + 712);
  v65 = *(_QWORD *)(v0 + 704);
  v66 = *(_QWORD *)(v0 + 680);
  v67 = *(_QWORD *)(v0 + 656);
  v68 = *(_QWORD *)(v0 + 648);
  v69 = *(_QWORD *)(v0 + 624);
  v70 = *(_QWORD *)(v0 + 616);
  v71 = *(_QWORD *)(v0 + 592);
  v72 = *(_QWORD *)(v0 + 584);
  v73 = *(_QWORD *)(v0 + 576);
  v74 = *(_QWORD *)(v0 + 552);
  v75 = *(_QWORD *)(v0 + 544);
  v76 = *(_QWORD *)(v0 + 536);
  v77 = *(_QWORD *)(v0 + 528);
  v78 = *(_QWORD *)(v0 + 520);
  v79 = *(_QWORD *)(v0 + 512);
  v80 = *(_QWORD *)(v0 + 496);
  v82 = *(_QWORD *)(v0 + 472);
  v84 = *(_QWORD *)(v0 + 464);
  v85 = *(_QWORD *)(v0 + 440);
  swift_task_dealloc(*(_QWORD *)(v0 + 904));
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017E96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 1040);
  *(_QWORD *)(*(_QWORD *)v1 + 1048) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10017FA38;
  else
    v3 = sub_10017E9D0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10017E9D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = *(void **)(v0 + 1032);
  v2 = *(void **)(v0 + 936);
  v3 = *(_BYTE *)(v0 + 1057);
  v4 = *(unsigned __int8 *)(v0 + 1056);
  v5 = *(_QWORD *)(v0 + 544);
  v6 = *(_QWORD *)(v0 + 536);
  v7 = *(_QWORD *)(v0 + 528);
  v8 = *(_QWORD *)(v0 + 520);
  v9 = *(_QWORD *)(v0 + 512);

  sub_10013B170(v6, v5, type metadata accessor for NoteEntity);
  sub_10014FF9C(v5, v7);
  v10 = _s11MobileNotes14OpenNoteIntentVACycfC_0();
  v12 = v11;
  v14 = v13;
  sub_10014FF9C(v7, v8);
  sub_10014FF9C(v8, v9);
  IntentParameter.wrappedValue.setter(v9);
  sub_100145264(v8, type metadata accessor for NoteEntity);
  sub_100145264(v7, type metadata accessor for NoteEntity);
  v15 = *(_QWORD *)(v0 + 544);
  v59 = *(_QWORD *)(v0 + 504);
  if ((v3 & 1) != 0 || !v4)
  {
    v19 = v12;
    *(_QWORD *)(v0 + 208) = v10;
    *(_QWORD *)(v0 + 216) = v12;
    *(_QWORD *)(v0 + 224) = v14;
    v22 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
    v23 = sub_100019838();
    static IntentResult.result<A, B>(value:opensIntent:)(v15, v0 + 208, v59, &type metadata for OpenNoteIntent, v22, v23);
  }
  else
  {
    *(_QWORD *)(v0 + 232) = v10;
    v17 = *(_QWORD *)(v0 + 456);
    v16 = *(_QWORD *)(v0 + 464);
    v18 = *(_QWORD *)(v0 + 448);
    *(_QWORD *)(v0 + 240) = v12;
    *(_QWORD *)(v0 + 248) = v14;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v17 + 104))(v16, enum case for OpensIntentHint.disable(_:), v18);
    v19 = v12;
    v20 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
    v21 = sub_100019838();
    static IntentResult.result<A, B>(value:opensIntent:hint:)(v15, v0 + 232, v16, v59, &type metadata for OpenNoteIntent, v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  sub_100145264(v15, type metadata accessor for NoteEntity);
  swift_release(v10);
  swift_release(v19);
  swift_release(v14);
  v24 = *(_QWORD *)(v0 + 896);
  v25 = *(_QWORD *)(v0 + 872);
  v26 = *(_QWORD *)(v0 + 864);
  v27 = *(_QWORD *)(v0 + 856);
  v28 = *(_QWORD *)(v0 + 848);
  v29 = *(_QWORD *)(v0 + 832);
  v30 = *(_QWORD *)(v0 + 808);
  v31 = *(_QWORD *)(v0 + 800);
  v32 = *(_QWORD *)(v0 + 792);
  v34 = *(_QWORD *)(v0 + 784);
  v35 = *(_QWORD *)(v0 + 768);
  v36 = *(_QWORD *)(v0 + 744);
  v37 = *(_QWORD *)(v0 + 736);
  v38 = *(_QWORD *)(v0 + 728);
  v39 = *(_QWORD *)(v0 + 720);
  v40 = *(_QWORD *)(v0 + 712);
  v41 = *(_QWORD *)(v0 + 704);
  v42 = *(_QWORD *)(v0 + 680);
  v43 = *(_QWORD *)(v0 + 656);
  v44 = *(_QWORD *)(v0 + 648);
  v45 = *(_QWORD *)(v0 + 624);
  v46 = *(_QWORD *)(v0 + 616);
  v47 = *(_QWORD *)(v0 + 592);
  v48 = *(_QWORD *)(v0 + 584);
  v49 = *(_QWORD *)(v0 + 576);
  v50 = *(_QWORD *)(v0 + 552);
  v51 = *(_QWORD *)(v0 + 544);
  v52 = *(_QWORD *)(v0 + 536);
  v53 = *(_QWORD *)(v0 + 528);
  v54 = *(_QWORD *)(v0 + 520);
  v55 = *(_QWORD *)(v0 + 512);
  v56 = *(_QWORD *)(v0 + 496);
  v57 = *(_QWORD *)(v0 + 472);
  v58 = *(_QWORD *)(v0 + 464);
  v60 = *(_QWORD *)(v0 + 440);
  swift_task_dealloc(*(_QWORD *)(v0 + 904));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017EDD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  char *v24;
  char v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = *(_QWORD *)(v0 + 496);

  sub_100145264(v1, type metadata accessor for FolderEntity);
  v2 = *(_QWORD *)(v0 + 984);
  v3 = *(_QWORD *)(v0 + 952);
  v4 = *(_QWORD *)(v0 + 944);
  v5 = *(_QWORD *)(v0 + 928);
  v6 = *(_QWORD *)(v0 + 920);
  v7 = *(_QWORD *)(v0 + 912);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v3);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 176));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  swift_release(v6);
  swift_release(v7);
  swift_release(v4);
  swift_release(v5);
  swift_release(v3);
  v8 = swift_errorRetain(v2);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.error.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    v14 = _convertErrorToNSError(_:)(v2);
    *(_QWORD *)(v0 + 344) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 344, v0 + 352, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "CreateNoteIntent failed with error: %@", v12, 0xCu);
    v15 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
  }
  v17 = *(_QWORD *)(v0 + 432);
  v16 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  type metadata accessor for Code(0);
  v20 = v19;
  *(_QWORD *)(v0 + 384) = 228;
  swift_errorRetain(v2);
  v21 = sub_100019C6C(&qword_1005CF548, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1004527E4);
  LOBYTE(v16) = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 384, v2, v20, v21);
  swift_errorRelease(v2);
  if ((v16 & 1) != 0)
  {
    v22 = sub_10013F4E8();
    v23 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v22, 0, 0);
    v25 = 6;
  }
  else
  {
    *(_QWORD *)(v0 + 376) = 229;
    swift_errorRetain(v2);
    v26 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 376, v2, v20, v21);
    swift_errorRelease(v2);
    if ((v26 & 1) != 0)
    {
      v27 = sub_10013F4E8();
      v23 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v27, 0, 0);
      v25 = 7;
    }
    else
    {
      *(_QWORD *)(v0 + 336) = 218;
      swift_errorRetain(v2);
      v28 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 336, v2, v20, v21);
      swift_errorRelease(v2);
      if ((v28 & 1) == 0)
      {
        type metadata accessor for ICError(0);
        v41 = v40;
        *(_QWORD *)(v0 + 312) = 218;
        v42 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
        inited = swift_initStackObject(v42, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100451C20;
        *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
        *(_QWORD *)(inited + 40) = v44;
        swift_getErrorValue(v2, v0 + 400, v0 + 256);
        v45 = *(_QWORD *)(v0 + 256);
        v46 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(inited + 72) = v46;
        v47 = sub_10012D160((_QWORD *)(inited + 48));
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v47, v45, v46);
        v48 = sub_1001356D4(inited);
        v49 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
        v23 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 320), v0 + 312, v48, v41, v49);
        goto LABEL_11;
      }
      v29 = sub_10013F4E8();
      v23 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v29, 0, 0);
      v25 = 5;
    }
  }
  *v24 = v25;
LABEL_11:
  swift_willThrow(v23);
  swift_errorRelease(v2);
  v30 = *(_QWORD *)(v0 + 896);
  v31 = *(_QWORD *)(v0 + 872);
  v32 = *(_QWORD *)(v0 + 864);
  v33 = *(_QWORD *)(v0 + 856);
  v34 = *(_QWORD *)(v0 + 848);
  v35 = *(_QWORD *)(v0 + 832);
  v36 = *(_QWORD *)(v0 + 808);
  v37 = *(_QWORD *)(v0 + 800);
  v38 = *(_QWORD *)(v0 + 792);
  v50 = *(_QWORD *)(v0 + 784);
  v51 = *(_QWORD *)(v0 + 768);
  v52 = *(_QWORD *)(v0 + 744);
  v53 = *(_QWORD *)(v0 + 736);
  v54 = *(_QWORD *)(v0 + 728);
  v55 = *(_QWORD *)(v0 + 720);
  v56 = *(_QWORD *)(v0 + 712);
  v57 = *(_QWORD *)(v0 + 704);
  v58 = *(_QWORD *)(v0 + 680);
  v59 = *(_QWORD *)(v0 + 656);
  v60 = *(_QWORD *)(v0 + 648);
  v61 = *(_QWORD *)(v0 + 624);
  v62 = *(_QWORD *)(v0 + 616);
  v63 = *(_QWORD *)(v0 + 592);
  v64 = *(_QWORD *)(v0 + 584);
  v65 = *(_QWORD *)(v0 + 576);
  v66 = *(_QWORD *)(v0 + 552);
  v67 = *(_QWORD *)(v0 + 544);
  v68 = *(_QWORD *)(v0 + 536);
  v69 = *(_QWORD *)(v0 + 528);
  v70 = *(_QWORD *)(v0 + 520);
  v71 = *(_QWORD *)(v0 + 512);
  v72 = *(_QWORD *)(v0 + 496);
  v73 = *(_QWORD *)(v0 + 472);
  v74 = *(_QWORD *)(v0 + 464);
  v75 = *(_QWORD *)(v0 + 440);
  swift_task_dealloc(*(_QWORD *)(v0 + 904));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017F40C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  char *v24;
  char v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v1 = *(void **)(v0 + 936);

  v2 = *(_QWORD *)(v0 + 1024);
  v3 = *(_QWORD *)(v0 + 952);
  v4 = *(_QWORD *)(v0 + 944);
  v5 = *(_QWORD *)(v0 + 928);
  v6 = *(_QWORD *)(v0 + 920);
  v7 = *(_QWORD *)(v0 + 912);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v3);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 176));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  swift_release(v6);
  swift_release(v7);
  swift_release(v4);
  swift_release(v5);
  swift_release(v3);
  v8 = swift_errorRetain(v2);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.error.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 138412290;
    v14 = _convertErrorToNSError(_:)(v2);
    *(_QWORD *)(v0 + 344) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 344, v0 + 352, v12 + 4);
    *v13 = v14;
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "CreateNoteIntent failed with error: %@", v12, 0xCu);
    v15 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v13, 1, v15);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_errorRelease(v2);
  }
  v17 = *(_QWORD *)(v0 + 432);
  v16 = *(_QWORD *)(v0 + 440);
  v18 = *(_QWORD *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  type metadata accessor for Code(0);
  v20 = v19;
  *(_QWORD *)(v0 + 384) = 228;
  swift_errorRetain(v2);
  v21 = sub_100019C6C(&qword_1005CF548, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1004527E4);
  LOBYTE(v16) = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 384, v2, v20, v21);
  swift_errorRelease(v2);
  if ((v16 & 1) != 0)
  {
    v22 = sub_10013F4E8();
    v23 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v22, 0, 0);
    v25 = 6;
  }
  else
  {
    *(_QWORD *)(v0 + 376) = 229;
    swift_errorRetain(v2);
    v26 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 376, v2, v20, v21);
    swift_errorRelease(v2);
    if ((v26 & 1) != 0)
    {
      v27 = sub_10013F4E8();
      v23 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v27, 0, 0);
      v25 = 7;
    }
    else
    {
      *(_QWORD *)(v0 + 336) = 218;
      swift_errorRetain(v2);
      v28 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 336, v2, v20, v21);
      swift_errorRelease(v2);
      if ((v28 & 1) == 0)
      {
        type metadata accessor for ICError(0);
        v41 = v40;
        *(_QWORD *)(v0 + 312) = 218;
        v42 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
        inited = swift_initStackObject(v42, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100451C20;
        *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
        *(_QWORD *)(inited + 40) = v44;
        swift_getErrorValue(v2, v0 + 400, v0 + 256);
        v45 = *(_QWORD *)(v0 + 256);
        v46 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(inited + 72) = v46;
        v47 = sub_10012D160((_QWORD *)(inited + 48));
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v47, v45, v46);
        v48 = sub_1001356D4(inited);
        v49 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
        v23 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 320), v0 + 312, v48, v41, v49);
        goto LABEL_11;
      }
      v29 = sub_10013F4E8();
      v23 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v29, 0, 0);
      v25 = 5;
    }
  }
  *v24 = v25;
LABEL_11:
  swift_willThrow(v23);
  swift_errorRelease(v2);
  v30 = *(_QWORD *)(v0 + 896);
  v31 = *(_QWORD *)(v0 + 872);
  v32 = *(_QWORD *)(v0 + 864);
  v33 = *(_QWORD *)(v0 + 856);
  v34 = *(_QWORD *)(v0 + 848);
  v35 = *(_QWORD *)(v0 + 832);
  v36 = *(_QWORD *)(v0 + 808);
  v37 = *(_QWORD *)(v0 + 800);
  v38 = *(_QWORD *)(v0 + 792);
  v50 = *(_QWORD *)(v0 + 784);
  v51 = *(_QWORD *)(v0 + 768);
  v52 = *(_QWORD *)(v0 + 744);
  v53 = *(_QWORD *)(v0 + 736);
  v54 = *(_QWORD *)(v0 + 728);
  v55 = *(_QWORD *)(v0 + 720);
  v56 = *(_QWORD *)(v0 + 712);
  v57 = *(_QWORD *)(v0 + 704);
  v58 = *(_QWORD *)(v0 + 680);
  v59 = *(_QWORD *)(v0 + 656);
  v60 = *(_QWORD *)(v0 + 648);
  v61 = *(_QWORD *)(v0 + 624);
  v62 = *(_QWORD *)(v0 + 616);
  v63 = *(_QWORD *)(v0 + 592);
  v64 = *(_QWORD *)(v0 + 584);
  v65 = *(_QWORD *)(v0 + 576);
  v66 = *(_QWORD *)(v0 + 552);
  v67 = *(_QWORD *)(v0 + 544);
  v68 = *(_QWORD *)(v0 + 536);
  v69 = *(_QWORD *)(v0 + 528);
  v70 = *(_QWORD *)(v0 + 520);
  v71 = *(_QWORD *)(v0 + 512);
  v72 = *(_QWORD *)(v0 + 496);
  v73 = *(_QWORD *)(v0 + 472);
  v74 = *(_QWORD *)(v0 + 464);
  v75 = *(_QWORD *)(v0 + 440);
  swift_task_dealloc(*(_QWORD *)(v0 + 904));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017FA38()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char *v25;
  char v26;
  char v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v1 = *(void **)(v0 + 1032);
  v2 = *(void **)(v0 + 936);

  v3 = *(_QWORD *)(v0 + 1048);
  v4 = *(_QWORD *)(v0 + 952);
  v5 = *(_QWORD *)(v0 + 944);
  v6 = *(_QWORD *)(v0 + 928);
  v7 = *(_QWORD *)(v0 + 920);
  v8 = *(_QWORD *)(v0 + 912);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v4);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 176));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  swift_release(v7);
  swift_release(v8);
  swift_release(v5);
  swift_release(v6);
  swift_release(v4);
  v9 = swift_errorRetain(v3);
  v10 = Logger.logObject.getter(v9);
  v12 = static os_log_type_t.error.getter(v10, v11);
  if (os_log_type_enabled(v10, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 138412290;
    v15 = _convertErrorToNSError(_:)(v3);
    *(_QWORD *)(v0 + 344) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 344, v0 + 352, v13 + 4);
    *v14 = v15;
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v10, v12, "CreateNoteIntent failed with error: %@", v13, 0xCu);
    v16 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v14, 1, v16);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    swift_errorRelease(v3);
  }
  v18 = *(_QWORD *)(v0 + 432);
  v17 = *(_QWORD *)(v0 + 440);
  v19 = *(_QWORD *)(v0 + 424);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  type metadata accessor for Code(0);
  v21 = v20;
  *(_QWORD *)(v0 + 384) = 228;
  swift_errorRetain(v3);
  v22 = sub_100019C6C(&qword_1005CF548, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1004527E4);
  LOBYTE(v17) = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 384, v3, v21, v22);
  swift_errorRelease(v3);
  if ((v17 & 1) != 0)
  {
    v23 = sub_10013F4E8();
    v24 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v23, 0, 0);
    v26 = 6;
  }
  else
  {
    *(_QWORD *)(v0 + 376) = 229;
    swift_errorRetain(v3);
    v27 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 376, v3, v21, v22);
    swift_errorRelease(v3);
    if ((v27 & 1) != 0)
    {
      v28 = sub_10013F4E8();
      v24 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v28, 0, 0);
      v26 = 7;
    }
    else
    {
      *(_QWORD *)(v0 + 336) = 218;
      swift_errorRetain(v3);
      v29 = static _ErrorCodeProtocol.~= infix(_:_:)(v0 + 336, v3, v21, v22);
      swift_errorRelease(v3);
      if ((v29 & 1) == 0)
      {
        type metadata accessor for ICError(0);
        v42 = v41;
        *(_QWORD *)(v0 + 312) = 218;
        v43 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
        inited = swift_initStackObject(v43, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100451C20;
        *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUnderlyingErrorKey);
        *(_QWORD *)(inited + 40) = v45;
        swift_getErrorValue(v3, v0 + 400, v0 + 256);
        v46 = *(_QWORD *)(v0 + 256);
        v47 = *(_QWORD *)(v0 + 264);
        *(_QWORD *)(inited + 72) = v47;
        v48 = sub_10012D160((_QWORD *)(inited + 48));
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v48, v46, v47);
        v49 = sub_1001356D4(inited);
        v50 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
        v24 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 320), v0 + 312, v49, v42, v50);
        goto LABEL_11;
      }
      v30 = sub_10013F4E8();
      v24 = (_QWORD *)swift_allocError(&type metadata for AppIntentsError, v30, 0, 0);
      v26 = 5;
    }
  }
  *v25 = v26;
LABEL_11:
  swift_willThrow(v24);
  swift_errorRelease(v3);
  v31 = *(_QWORD *)(v0 + 896);
  v32 = *(_QWORD *)(v0 + 872);
  v33 = *(_QWORD *)(v0 + 864);
  v34 = *(_QWORD *)(v0 + 856);
  v35 = *(_QWORD *)(v0 + 848);
  v36 = *(_QWORD *)(v0 + 832);
  v37 = *(_QWORD *)(v0 + 808);
  v38 = *(_QWORD *)(v0 + 800);
  v39 = *(_QWORD *)(v0 + 792);
  v51 = *(_QWORD *)(v0 + 784);
  v52 = *(_QWORD *)(v0 + 768);
  v53 = *(_QWORD *)(v0 + 744);
  v54 = *(_QWORD *)(v0 + 736);
  v55 = *(_QWORD *)(v0 + 728);
  v56 = *(_QWORD *)(v0 + 720);
  v57 = *(_QWORD *)(v0 + 712);
  v58 = *(_QWORD *)(v0 + 704);
  v59 = *(_QWORD *)(v0 + 680);
  v60 = *(_QWORD *)(v0 + 656);
  v61 = *(_QWORD *)(v0 + 648);
  v62 = *(_QWORD *)(v0 + 624);
  v63 = *(_QWORD *)(v0 + 616);
  v64 = *(_QWORD *)(v0 + 592);
  v65 = *(_QWORD *)(v0 + 584);
  v66 = *(_QWORD *)(v0 + 576);
  v67 = *(_QWORD *)(v0 + 552);
  v68 = *(_QWORD *)(v0 + 544);
  v69 = *(_QWORD *)(v0 + 536);
  v70 = *(_QWORD *)(v0 + 528);
  v71 = *(_QWORD *)(v0 + 520);
  v72 = *(_QWORD *)(v0 + 512);
  v73 = *(_QWORD *)(v0 + 496);
  v74 = *(_QWORD *)(v0 + 472);
  v75 = *(_QWORD *)(v0 + 464);
  v76 = *(_QWORD *)(v0 + 440);
  swift_task_dealloc(*(_QWORD *)(v0 + 904));
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018006C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];
  uint64_t *v12;

  v12 = a2;
  v4 = sub_100012E18(&qword_1005CEEA0);
  __chkstk_darwin(v4);
  v6 = (_QWORD *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.getter(v11);
  v8 = v11[0];
  v7 = v11[1];
  IntentParameter.wrappedValue.getter(v6);
  v9 = ICCreateNoteAction.perform(withTitle:contents:container:)(v8, v7, v6, a1);
  sub_100012DDC((uint64_t)v6, &qword_1005CEEA0);
  result = swift_bridgeObjectRelease(v7);
  if (!v2)
    *v12 = v9;
  return result;
}

void sub_100180160(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;

  v2 = objc_opt_self(NoteObject);
  v3 = swift_dynamicCastObjCClass(a1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = (void *)objc_opt_self(NotesRefreshController);
    v6 = a1;
    v7 = objc_msgSend(v5, "sharedInstance");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v4, "folder");
      v10 = objc_msgSend(v9, "objectID");
      swift_unknownObjectRelease(v9, v11);
      objc_msgSend(v8, "refreshNotesForCollectionWithID:", v10);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100180254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 48) = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D1EBC);
  *(_QWORD *)(v2 + 56) = v5;
  *v5 = v2;
  v5[1] = sub_1001802C4;
  return CreateNoteIntent.perform()(a1);
}

uint64_t sub_1001802C4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10018030C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t result;
  uint64_t *v76;
  char *v77;
  char *v78;
  void (*v79)(char *, uint64_t, uint64_t);
  unsigned int v80;
  void (*v81)(char *);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void (*v92)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  void (*v94)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v95;
  char *v96;
  unsigned int v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  char v105;
  char v106;

  v88 = a1;
  v1 = sub_100012E18(&qword_1005D1EB0);
  __chkstk_darwin(v1);
  v87 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005CEEA0);
  __chkstk_darwin(v3);
  v85 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for InputConnectionBehavior(0);
  v84 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v7 = __chkstk_darwin(v6);
  v86 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v91 = (char *)&v78 - v9;
  v10 = sub_100012E18(&qword_1005CEF00);
  __chkstk_darwin(v10);
  v83 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v12);
  v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for Locale(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for LocalizedStringResource(0);
  v26 = *(_QWORD *)(v25 - 8);
  v95 = v25;
  __chkstk_darwin(v25);
  v90 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100012E18(&qword_1005CEF08);
  v28 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v28);
  v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v80 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v89 = v15;
  v30(v18, enum case for LocalizedStringResource.BundleDescription.main(_:), v15);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v24, 0, 0, v21, v18, "Parameter title for Create Note intent", 38, 2);
  v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000034, 0x8000000100477160);
  static Locale.current.getter(v31);
  v30(v18, v29, v15);
  v32 = v14;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v24, 0, 0, v21, v18, "Parameter description for name", 30, 2);
  v94 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
  v78 = v14;
  v94(v14, 0, 1, v25);
  v33 = type metadata accessor for String.IntentInputOptions(0);
  v101 = 0;
  v102 = 0;
  v34 = v83;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v83, 1, 1, v33);
  v35 = type metadata accessor for IntentDialog(0);
  v92 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v93 = v35;
  v36 = v91;
  v92(v91, 1, 1, v35);
  v97 = enum case for InputConnectionBehavior.default(_:);
  v81 = *(void (**)(char *))(v84 + 104);
  v37 = v96;
  v38 = v98;
  v81(v96);
  v39 = v36;
  v40 = v37;
  v84 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v90, v32, &v101, v34, v39, v37);
  v83 = (char *)sub_100012E18((uint64_t *)&unk_1005CEF10);
  v41 = String.LocalizationValue.init(stringLiteral:)(0x73746E65746E6F43, 0xE800000000000000);
  static Locale.current.getter(v41);
  v42 = v80;
  v43 = v89;
  v79 = v30;
  v30(v18, v80, v89);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v24, 0, 0, v21, v18, "Parameter title for Create Note intent", 38, 2);
  v44 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x80000001004771C0);
  static Locale.current.getter(v44);
  v30(v18, v42, v43);
  v45 = v78;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v24, 0, 0, v21, v18, "Parameter description for contents", 34, 2);
  v94(v45, 0, 1, v95);
  v46 = type metadata accessor for AttributedString(0);
  v47 = v85;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v85, 1, 1, v46);
  v48 = v91;
  v92(v91, 1, 1, v93);
  v49 = v40;
  v50 = v38;
  v51 = v81;
  ((void (*)(char *, _QWORD, uint64_t))v81)(v40, v97, v50);
  v52 = v90;
  v85 = (char *)IntentParameter<>.init(title:description:default:requestValueDialog:inputConnectionBehavior:)(v90, v45, v47, v48, v49);
  v83 = (char *)sub_100012E18((uint64_t *)&unk_1005CEF20);
  v53 = String.LocalizationValue.init(stringLiteral:)(0x7265646C6F46, 0xE600000000000000);
  static Locale.current.getter(v53);
  v54 = v89;
  v55 = v79;
  v79(v18, v42, v89);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v24, 0, 0, v21, v18, "Parameter title for Create Note intent", 38, 2);
  v56 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002CLL, 0x8000000100477230);
  static Locale.current.getter(v56);
  v55(v18, v42, v54);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v24, 0, 0, v21, v18, "Parameter description for folder", 32, 2);
  v94(v45, 0, 1, v95);
  v57 = type metadata accessor for FolderEntity(0);
  v58 = v87;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v87, 1, 1, v57);
  v60 = v92;
  v59 = v93;
  v92(v48, 1, 1, v93);
  v61 = v86;
  v60(v86, 1, 1, v59);
  v101 = sub_10014386C();
  v102 = v62;
  v103 = v63 & 1;
  v104 = v64 & 1;
  v105 = v65 & 1;
  v106 = v66 & 1;
  v67 = v96;
  ((void (*)(char *, _QWORD, uint64_t))v51)(v96, v97, v98);
  v68 = sub_100127E60();
  v69 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v52, v45, v58, v48, v61, v67, &v101, &type metadata for VisibleFoldersQuery, v68);
  sub_100012E18(&qword_1005CEE50);
  v99 = 0xD000000000000021;
  v100 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(&v101, &v99, &type metadata for String, &protocol witness table for String);
  v70 = type metadata accessor for AppDependencyManager(0);
  v71 = static AppDependencyManager.shared.getter(v70);
  v72 = AppDependency.__allocating_init(key:manager:)(&v101, v71);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v99 = 0xD000000000000024;
  v100 = 0x8000000100476B40;
  v73 = AnyHashable.init<A>(_:)(&v101, &v99, &type metadata for String, &protocol witness table for String);
  v74 = static AppDependencyManager.shared.getter(v73);
  result = AppDependency.__allocating_init(key:manager:)(&v101, v74);
  v76 = v88;
  v77 = v85;
  *v88 = v84;
  v76[1] = (uint64_t)v77;
  v76[2] = v69;
  v76[3] = v72;
  v76[4] = result;
  return result;
}

uint64_t sub_100180BFC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100180C48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10018006C(a1, a2);
}

unint64_t sub_100180C68()
{
  unint64_t result;

  result = qword_1005D1F50;
  if (!qword_1005D1F50)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateNoteIntent, &type metadata for CreateNoteIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1F50);
  }
  return result;
}

uint64_t sub_100180CAC()
{
  return sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

unint64_t sub_100180CE0()
{
  unint64_t result;

  result = qword_1005D1F60;
  if (!qword_1005D1F60)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateNoteIntent, &type metadata for CreateNoteIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1F60);
  }
  return result;
}

unint64_t sub_100180D28()
{
  unint64_t result;

  result = qword_1005D1F68;
  if (!qword_1005D1F68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateNoteIntent, &type metadata for CreateNoteIntent);
    atomic_store(result, (unint64_t *)&qword_1005D1F68);
  }
  return result;
}

uint64_t sub_100180D6C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CreateNoteIntent.perform()>>, 1)+ 8);
}

uint64_t sub_100180D90(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static CreateNoteIntent.parameterSummary>>, 1);
}

uint64_t destroy for CreateNoteIntent(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  return swift_release(a1[4]);
}

uint64_t *initializeWithCopy for CreateNoteIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  a1[2] = v5;
  a1[3] = v6;
  v7 = a2[4];
  a1[4] = v7;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t *assignWithCopy for CreateNoteIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[4];
  v13 = a1[4];
  a1[4] = v12;
  swift_retain(v12);
  swift_release(v13);
  return a1;
}

__n128 initializeWithTake for FastSyncActivityState(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for CreateNoteIntent(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(a1[2]);
  v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  v6 = a1[4];
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateNoteIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateNoteIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateNoteIntent()
{
  return &type metadata for CreateNoteIntent;
}

uint64_t sub_100181008()
{
  return sub_100016638(&qword_1005D1F78, &qword_1005D1F80, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100181034()
{
  return sub_100016638(&qword_1005D1F88, &qword_1005D1F90, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_100181060()
{
  return sub_100016638(&qword_1005D1F98, &qword_1005D1F90, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

void sub_1001810AC(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = objc_msgSend(a1, "interactions");
  v4 = sub_100012E18(&qword_1005D1FF0);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (v5 < 0)
    v15 = v5;
  else
    v15 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v6 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v5);
  if (!v6)
    goto LABEL_17;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    v8 = v1 + OBJC_IVAR____TtC11MobileNotes33ICAppIntentsInteractionController_interactions;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
      }
      else
      {
        v9 = *(_QWORD *)(v5 + 8 * v7 + 32);
        swift_unknownObjectRetain(v9);
      }
      v10 = type metadata accessor for UIAppIntentInteraction(0);
      v11 = swift_dynamicCastClass(v9, v10);
      if (v11)
      {
        v13 = (void *)v11;
        swift_beginAccess(v8, v16, 33, 0);
        v14 = (void *)sub_1003099C0(v13);
        swift_endAccess(v16);

        if (v14)
          objc_msgSend(a1, "removeInteraction:", v13);
      }
      ++v7;
      swift_unknownObjectRelease(v9, v12);
    }
    while (v6 != v7);
    swift_bridgeObjectRelease(v5);
  }
}

uint64_t type metadata accessor for ICAppIntentsInteractionController()
{
  return objc_opt_self(_TtC11MobileNotes33ICAppIntentsInteractionController);
}

uint64_t sub_1001812B0(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = a3;
  v4 = a2[1];
  *(_OWORD *)(v3 + 136) = *a2;
  *(_OWORD *)(v3 + 152) = v4;
  v5 = a2[3];
  *(_OWORD *)(v3 + 168) = a2[2];
  *(_OWORD *)(v3 + 184) = v5;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 200) = static MainActor.shared.getter(v6);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor, v7);
  *(_QWORD *)(v3 + 208) = v8;
  *(_QWORD *)(v3 + 216) = v9;
  return swift_task_switch(sub_100181334, v8, v9);
}

uint64_t sub_100181334()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 128) + 16;
  swift_beginAccess(v1, v0 + 80, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 224) = v4,
        v3,
        v4))
  {
    v5 = *(void **)(v0 + 184);
    v25 = *(void **)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 176);
    v9 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v26 = *(_QWORD **)(v0 + 120);
    v12 = v25;
    swift_retain(v11);
    swift_retain(v10);
    swift_retain(v9);
    swift_retain(v8);
    swift_retain(v7);
    swift_retain(v6);
    v13 = v12;
    swift_retain(v11);
    swift_retain(v10);
    swift_retain(v9);
    swift_retain(v8);
    swift_retain(v7);
    swift_retain(v6);
    v14 = v5;
    v15 = objc_msgSend(v4, "noteEditorViewController");
    *(_QWORD *)(v0 + 232) = v15;
    v16 = v15;

    *(_QWORD *)(v0 + 16) = v11;
    *(_QWORD *)(v0 + 24) = v10;
    *(_QWORD *)(v0 + 32) = v9;
    *(_QWORD *)(v0 + 40) = v8;
    *(_QWORD *)(v0 + 48) = v7;
    *(_QWORD *)(v0 + 56) = v6;
    *(_QWORD *)(v0 + 64) = v15;
    *(_QWORD *)(v0 + 72) = v25;
    v26[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v26[4] = sub_10017540C();
    v17 = sub_10012D160(v26);
    v18 = (_QWORD *)swift_task_alloc(dword_1005D488C);
    *(_QWORD *)(v0 + 240) = v18;
    *v18 = v0;
    v18[1] = sub_100181578;
    return ApplyFormattingIntent.perform()((uint64_t)v17);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 200));
    type metadata accessor for ICError(0);
    v21 = v20;
    *(_QWORD *)(v0 + 112) = 222;
    v22 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v23 = sub_100185F98();
    v24 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 104), v0 + 112, v22, v21, v23);
    swift_willThrow(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100181578()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 240);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[26];
    v5 = v2[27];
    v6 = sub_1001816E0;
  }
  else
  {
    v7 = (void *)v2[29];
    v8 = (void *)v2[24];
    v9 = v2[21];
    v10 = v2[22];
    v12 = v2[19];
    v11 = v2[20];
    v13 = v2[18];
    swift_release(v2[17]);
    swift_release(v13);
    swift_release(v12);
    swift_release(v11);
    swift_release(v9);
    swift_release(v10);

    v4 = v2[26];
    v5 = v2[27];
    v6 = sub_10018163C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10018163C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 232);
  v3 = *(void **)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v7 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 160);
  v9 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 144);

  swift_release(v2);
  swift_release(v9);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001816E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v11;

  v1 = *(void **)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 200);
  v11 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD **)(v0 + 120);

  swift_release(v2);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v3);
  swift_release(v4);

  sub_100185FE0(v9);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v3);
  swift_release(v4);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001817D0(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = a3;
  v5 = type metadata accessor for ChangeOperation(0);
  *(_QWORD *)(v3 + 168) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 176) = v6;
  *(_QWORD *)(v3 + 184) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v3 + 192) = *a2;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 208) = v7;
  *(_QWORD *)(v3 + 216) = static MainActor.shared.getter(v7);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor, v8);
  *(_QWORD *)(v3 + 224) = v9;
  *(_QWORD *)(v3 + 232) = v10;
  return swift_task_switch(sub_100181874, v9, v10);
}

uint64_t sub_100181874()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;

  v1 = *(_QWORD *)(v0 + 160) + 16;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 256));
  swift_beginAccess(v1, v0 + 96, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong
    || (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        v3,
        !v4))
  {
    swift_release(*(_QWORD *)(v0 + 216));
    type metadata accessor for ICError(0);
    v12 = v11;
    *(_QWORD *)(v0 + 136) = 222;
    v13 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v14 = sub_100185F98();
    v15 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 128), v0 + 136, v13, v12, v14);
    swift_willThrow(v15);
LABEL_9:
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if ((objc_msgSend(v4, "canUserChangeNoteContainerViewMode") & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 216));
    v16 = sub_10013F4E8();
    v17 = swift_allocError(&type metadata for AppIntentsError, v16, 0, 0);
    *v18 = 0;
    swift_willThrow(v17);

    goto LABEL_9;
  }
  v5 = *(_QWORD **)(v0 + 184);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 176);
  IntentParameter.wrappedValue.getter(v5);
  v8 = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 88))(v5, v6);
  if (v8 == enum case for ChangeOperation.disable(_:))
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 257));
    if ((*(_BYTE *)(v0 + 257) & 1) != 0)
    {
      v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x776569567473696CLL, 0xE800000000000000, 0x567972656C6C6167, 0xEB00000000776569, 0);
      swift_bridgeObjectRelease(0xE800000000000000);
      v10 = v9 ^ 1;
    }
    else
    {
      swift_bridgeObjectRelease(0xEB00000000776569);
      v10 = 0;
    }
    goto LABEL_17;
  }
  if (v8 == enum case for ChangeOperation.enable(_:))
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 258));
    if ((*(_BYTE *)(v0 + 258) & 1) != 0)
    {
      v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x776569567473696CLL, 0xE800000000000000, 0x567972656C6C6167, 0xEB00000000776569, 0);
      swift_bridgeObjectRelease(0xE800000000000000);
    }
    else
    {
      swift_bridgeObjectRelease(0xEB00000000776569);
      v10 = 1;
    }
    goto LABEL_17;
  }
  if (v8 != enum case for ChangeOperation.toggle(_:))
  {
    v27 = *(_QWORD *)(v0 + 176);
    v26 = *(_QWORD *)(v0 + 184);
    v28 = *(_QWORD *)(v0 + 168);
    swift_release(*(_QWORD *)(v0 + 216));
    type metadata accessor for ICError(0);
    v30 = v29;
    *(_QWORD *)(v0 + 144) = 223;
    v31 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v31, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
    *(_QWORD *)(inited + 40) = v33;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0xD000000000000013;
    *(_QWORD *)(inited + 56) = 0x800000010047CD90;
    v34 = sub_1001356D4(inited);
    v35 = sub_100185F98();
    v36 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 120), v0 + 144, v34, v30, v35);
    swift_willThrow(v36);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    goto LABEL_9;
  }
  v10 = objc_msgSend(v4, "noteContainerViewMode") != (id)1;
LABEL_17:
  v20 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD **)(v0 + 152);
  objc_msgSend(v4, "setNoteContainerViewMode:", v10 & 1);

  v21[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v21[4] = sub_10017540C();
  v22 = sub_10012D160(v21);
  *(_QWORD *)(v0 + 240) = v22;
  *(_QWORD *)(v0 + 248) = static MainActor.shared.getter(v22);
  v24 = dispatch thunk of Actor.unownedExecutor.getter(v20, &protocol witness table for MainActor, v23);
  return swift_task_switch(sub_100181CB4, v24, v25);
}

uint64_t sub_100181CB4()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[31]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_100181CF4, v0[28], v0[29]);
}

uint64_t sub_100181CF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 216));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100181D34(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 72) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 80) = v6;
  *(_QWORD *)(v3 + 88) = v7;
  return swift_task_switch(sub_100181DA8, v6, v7);
}

uint64_t sub_100181DA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *Strong;
  id v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v2 = v0[7];
  v1 = v0[8];
  v3 = v0[6] + 16;
  swift_beginAccess(v3, v0 + 2, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  swift_retain_n(v2, 2);
  swift_retain_n(v1, 2);
  if (Strong)
  {
    v5 = objc_msgSend(Strong, "window");

  }
  else
  {
    v5 = 0;
  }
  v0[12] = v5;
  v6 = (_QWORD *)v0[5];
  v6[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v6[4] = sub_10017540C();
  v7 = sub_10012D160(v6);
  v8 = dword_1005D776C;
  v9 = v5;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v0[13] = v10;
  *v10 = v0;
  v10[1] = sub_100181EAC;
  return DeleteTagsIntent.perform()((uint64_t)v7, v0[7], v0[8], (uint64_t)v5);
}

uint64_t sub_100181EAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v8;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_100181F88;
  }
  else
  {
    v7 = (void *)v2[12];
    v8 = v2[8];
    swift_release(v2[7]);
    swift_release(v8);

    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_100181F30;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100181F30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v3);
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100181F88()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD **)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v3);
  swift_release(v2);

  sub_100185FE0(v4);
  swift_release(v3);
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100182000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 72) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 80) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 88) = v6;
  *(_QWORD *)(v3 + 96) = v7;
  return swift_task_switch(sub_10018207C, v6, v7);
}

uint64_t sub_10018207C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  v4 = v0[6] + 16;
  swift_beginAccess(v4, v0 + 2, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  swift_retain_n(v3, 2);
  swift_retain_n(v2, 2);
  swift_retain_n(v1, 2);
  if (Strong)
  {
    v6 = objc_msgSend(Strong, "window");

  }
  else
  {
    v6 = 0;
  }
  v0[13] = v6;
  v7 = (_QWORD *)v0[5];
  v7[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v7[4] = sub_10017540C();
  v8 = sub_10012D160(v7);
  v9 = dword_1005D1B9C;
  v10 = v6;
  v11 = (_QWORD *)swift_task_alloc(v9);
  v0[14] = v11;
  *v11 = v0;
  v11[1] = sub_100182190;
  return LockNoteIntent.perform()((uint64_t)v8, v0[7], v0[8], v0[9], (uint64_t)v6);
}

uint64_t sub_100182190()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100186078;
  }
  else
  {
    v7 = (void *)v2[13];
    v8 = v2[8];
    v9 = v2[9];
    swift_release(v2[7]);
    swift_release(v8);
    swift_release(v9);

    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100186074;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100182220(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = a3;
  v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)(v3 + 96) = *a2;
  *(_OWORD *)(v3 + 112) = v4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 128) = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  *(_QWORD *)(v3 + 136) = v7;
  *(_QWORD *)(v3 + 144) = v8;
  return swift_task_switch(sub_100182298, v7, v8);
}

uint64_t sub_100182298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *Strong;
  id v7;
  _QWORD *v8;
  __int128 v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 88) + 16;
  swift_beginAccess(v5, v0 + 56, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  swift_retain_n(v4, 2);
  swift_retain_n(v3, 2);
  swift_retain_n(v2, 2);
  swift_retain_n(v1, 2);
  if (Strong)
  {
    v7 = objc_msgSend(Strong, "window");

  }
  else
  {
    v7 = 0;
  }
  *(_QWORD *)(v0 + 152) = v7;
  v8 = *(_QWORD **)(v0 + 80);
  v9 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 32) = v7;
  *(_OWORD *)(v0 + 40) = v9;
  v8[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v8[4] = sub_10017540C();
  v10 = sub_10012D160(v8);
  v11 = dword_1005D72C4;
  v12 = v7;
  v13 = (_QWORD *)swift_task_alloc(v11);
  *(_QWORD *)(v0 + 160) = v13;
  *v13 = v0;
  v13[1] = sub_1001823CC;
  return MoveNotesToFolderIntent.perform()((uint64_t)v10);
}

uint64_t sub_1001823CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[17];
    v5 = v2[18];
    v6 = sub_1001824E0;
  }
  else
  {
    v7 = (void *)v2[19];
    v8 = v2[14];
    v9 = v2[15];
    v10 = v2[13];
    swift_release(v2[12]);
    swift_release(v10);
    swift_release(v8);
    swift_release(v9);

    v4 = v2[17];
    v5 = v2[18];
    v6 = sub_10018246C;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10018246C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001824E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(void **)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD **)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);

  sub_100185FE0(v6);
  swift_release(v5);
  swift_release(v4);

  swift_release(v3);
  swift_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100182584(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[7] = a1;
  v3[8] = a3;
  v3[9] = *a2;
  v4 = type metadata accessor for MainActor(0);
  v3[10] = v4;
  v3[11] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[12] = v6;
  v3[13] = v7;
  return swift_task_switch(sub_1001825FC, v6, v7);
}

uint64_t sub_1001825FC()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 112) = v4,
        v3,
        v4))
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
      objc_msgSend(v4, "showAccountListAnimated:", 1);
    else
      objc_msgSend(v4, "showAttachmentBrowser");
    v11 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD **)(v0 + 56);
    v12[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v12[4] = sub_10017540C();
    v13 = sub_10012D160(v12);
    *(_QWORD *)(v0 + 120) = v13;
    *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v14);
    return swift_task_switch(sub_100182798, v15, v16);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 88));
    type metadata accessor for ICError(0);
    v6 = v5;
    *(_QWORD *)(v0 + 48) = 222;
    v7 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v8 = sub_100185F98();
    v9 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v7, v6, v8);
    swift_willThrow(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100182798()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[16]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_1001827D8, v0[12], v0[13]);
}

uint64_t sub_1001827D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100182818(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[47] = a1;
  v3[48] = a3;
  v3[49] = *a2;
  v4 = type metadata accessor for MainActor(0);
  v3[50] = v4;
  v3[51] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[52] = v6;
  v3[53] = v7;
  return swift_task_switch(sub_100182890, v6, v7);
}

uint64_t sub_100182890()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 384) + 16;
  swift_beginAccess(v1, v0 + 304, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "ic_viewControllerManager");
    *(_QWORD *)(v0 + 432) = v4;

    if (v4)
    {
      IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 456));
      __asm { BR              X10 }
    }
  }
  swift_release(*(_QWORD *)(v0 + 408));
  type metadata accessor for ICError(0);
  v6 = v5;
  *(_QWORD *)(v0 + 352) = 222;
  v7 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
  v8 = sub_100185F98();
  v9 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 368), v0 + 352, v7, v6, v8);
  swift_willThrow(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100182A70()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  Class isa;
  Class v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;

  v3 = objc_msgSend(objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier), "initWithType:parentIdentifier:", ICVirtualSmartFolderItemIdentifierTypeMathNotes, 0);
  v4 = sub_100012E18((uint64_t *)&unk_1005D21E0);
  inited = swift_initStackObject(v4, v2);
  *(_OWORD *)(inited + 16) = xmmword_100451C20;
  *v1 = v3;
  v6 = sub_1000163BC(0, &qword_1005D1650, ICVirtualSmartFolderItemIdentifier_ptr);
  v7 = sub_100186014();
  v8 = v3;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), v1, v6, v7);
  v9 = v0[50];
  v10 = (_QWORD *)v0[47];
  v11 = sub_10020BB20(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, &type metadata for AnyHashable);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v13 = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "selectContainerWithIdentifiers:excludingIdentifiers:usingRootViewController:deferUntilDataLoaded:animated:", isa, v13, 1, 1, 1);

  v10[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v10[4] = sub_10017540C();
  v14 = sub_10012D160(v10);
  v0[55] = v14;
  v0[56] = static MainActor.shared.getter(v14);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v15);
  return swift_task_switch(sub_100182D70, v16, v17);
}

uint64_t sub_100182B0C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  Class isa;
  Class v13;
  _QWORD *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;

  v3 = objc_msgSend(objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier), "initWithType:parentIdentifier:", ICVirtualSmartFolderItemIdentifierTypeSystemPaper, 0);
  v4 = sub_100012E18((uint64_t *)&unk_1005D21E0);
  inited = swift_initStackObject(v4, v1);
  *(_OWORD *)(inited + 16) = xmmword_100451C20;
  *v0 = v3;
  v6 = sub_1000163BC(0, &qword_1005D1650, ICVirtualSmartFolderItemIdentifier_ptr);
  v7 = sub_100186014();
  v8 = v3;
  AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), v0, v6, v7);
  v9 = v2[50];
  v10 = (_QWORD *)v2[47];
  v11 = sub_10020BB20(inited);
  swift_setDeallocating(inited);
  swift_arrayDestroy(inited + 32, 1, &type metadata for AnyHashable);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v13 = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "selectContainerWithIdentifiers:excludingIdentifiers:usingRootViewController:deferUntilDataLoaded:animated:", isa, v13, 1, 1, 1);

  v10[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v10[4] = sub_10017540C();
  v14 = sub_10012D160(v10);
  v2[55] = v14;
  v2[56] = static MainActor.shared.getter(v14);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v15);
  return swift_task_switch(sub_100182D70, v16, v17);
}

void sub_100182BA8()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  uint64_t v3;
  id v4;

  v2 = objc_msgSend(objc_allocWithZone((Class)ICVirtualSmartFolderItemIdentifier), "initWithType:parentIdentifier:", ICVirtualSmartFolderItemIdentifierTypeSharedWithYou, 0);
  v3 = sub_100012E18((uint64_t *)&unk_1005D21E0);
  *(_OWORD *)(swift_initStackObject(v3, v0) + 16) = xmmword_100451C20;
  *v1 = v2;
  sub_1000163BC(0, &qword_1005D1650, ICVirtualSmartFolderItemIdentifier_ptr);
  sub_100186014();
  v4 = v2;
  JUMPOUT(0x100182C40);
}

uint64_t sub_100182D70()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[56]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_100182DB0, v0[52], v0[53]);
}

uint64_t sub_100182DB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 408);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100182DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = v7;
  return swift_task_switch(sub_100182E70, v6, v7);
}

uint64_t sub_100182E70()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 128) = v4,
        v3,
        v4))
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    swift_retain(v7);
    swift_retain(v6);
    swift_retain(v5);
    v8 = sub_10039D578(v7, v6, v5);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v16 = v8;
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD **)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 72));
    swift_release(v10);
    swift_release(v9);
    objc_msgSend(v4, "showObjectWithObjectID:", v16);

    v18[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v18[4] = sub_10017540C();
    v19 = sub_10012D160(v18);
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor, v20);
    return swift_task_switch(sub_100183084, v21, v22);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    type metadata accessor for ICError(0);
    v12 = v11;
    *(_QWORD *)(v0 + 48) = 222;
    v13 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v14 = sub_100185F98();
    v15 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v13, v12, v14);
    swift_willThrow(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100183084()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[18]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_100186070, v0[14], v0[15]);
}

uint64_t sub_1001830C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = v7;
  return swift_task_switch(sub_100183144, v6, v7);
}

uint64_t sub_100183144()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 128) = v4,
        v3,
        v4))
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    swift_retain(v7);
    swift_retain(v6);
    swift_retain(v5);
    v8 = sub_10039D59C(v7, v6, v5);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v16 = v8;
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD **)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 72));
    swift_release(v10);
    swift_release(v9);
    objc_msgSend(v4, "showObjectWithObjectID:", v16);

    v18[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v18[4] = sub_10017540C();
    v19 = sub_10012D160(v18);
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor, v20);
    return swift_task_switch(sub_100183084, v21, v22);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    type metadata accessor for ICError(0);
    v12 = v11;
    *(_QWORD *)(v0 + 48) = 222;
    v13 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v14 = sub_100185F98();
    v15 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v13, v12, v14);
    swift_willThrow(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100183358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = v7;
  return swift_task_switch(sub_1001833D8, v6, v7);
}

uint64_t sub_1001833D8()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 128) = v4,
        v3,
        v4))
  {
    v10 = sub_100353478(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD **)(v0 + 56);
    objc_msgSend(v4, "showObjectWithObjectID:", v10);

    v12[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v12[4] = sub_10017540C();
    v13 = sub_10012D160(v12);
    *(_QWORD *)(v0 + 136) = v13;
    *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v14);
    return swift_task_switch(sub_100183084, v15, v16);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    type metadata accessor for ICError(0);
    v6 = v5;
    *(_QWORD *)(v0 + 48) = 222;
    v7 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v8 = sub_100185F98();
    v9 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v7, v6, v8);
    swift_willThrow(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100183584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = v7;
  return swift_task_switch(sub_100183604, v6, v7);
}

uint64_t sub_100183604()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 128) = v4,
        v3,
        v4))
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    swift_retain(v7);
    swift_retain(v6);
    swift_retain(v5);
    v8 = sub_10039D788(v7, v6, v5);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v16 = v8;
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD **)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 72));
    swift_release(v10);
    swift_release(v9);
    objc_msgSend(v4, "showObjectWithObjectID:", v16);

    v18[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v18[4] = sub_10017540C();
    v19 = sub_10012D160(v18);
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor, v20);
    return swift_task_switch(sub_100183818, v21, v22);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    type metadata accessor for ICError(0);
    v12 = v11;
    *(_QWORD *)(v0 + 48) = 222;
    v13 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v14 = sub_100185F98();
    v15 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v13, v12, v14);
    swift_willThrow(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100183818()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[18]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_100183858, v0[14], v0[15]);
}

uint64_t sub_100183858()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100183898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = v7;
  return swift_task_switch(sub_100183918, v6, v7);
}

uint64_t sub_100183918()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 128) = v4,
        v3,
        v4))
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    swift_retain(v7);
    swift_retain(v6);
    swift_retain(v5);
    v8 = sub_10039D7AC(v7, v6, v5);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v16 = v8;
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD **)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 72));
    swift_release(v10);
    swift_release(v9);
    objc_msgSend(v4, "selectNoteStartEditingIfEmptyWithObjectID:scrollState:animated:ensurePresented:", v16, 0, 1, 1);

    v18[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v18[4] = sub_10017540C();
    v19 = sub_10012D160(v18);
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor, v20);
    return swift_task_switch(sub_100183084, v21, v22);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    type metadata accessor for ICError(0);
    v12 = v11;
    *(_QWORD *)(v0 + 48) = 222;
    v13 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v14 = sub_100185F98();
    v15 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v13, v12, v14);
    swift_willThrow(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100183B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 112) = v6;
  *(_QWORD *)(v3 + 120) = v7;
  return swift_task_switch(sub_100183BB8, v6, v7);
}

uint64_t sub_100183BB8()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 128) = v4,
        v3,
        v4))
  {
    v6 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 72);
    swift_retain(v7);
    swift_retain(v6);
    swift_retain(v5);
    v8 = sub_10039D7D0(v7, v6, v5);
    v10 = *(_QWORD *)(v0 + 80);
    v9 = *(_QWORD *)(v0 + 88);
    v16 = v8;
    v17 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD **)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 72));
    swift_release(v10);
    swift_release(v9);
    objc_msgSend(v4, "showObjectWithObjectID:", v16);

    v18[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v18[4] = sub_10017540C();
    v19 = sub_10012D160(v18);
    *(_QWORD *)(v0 + 136) = v19;
    *(_QWORD *)(v0 + 144) = static MainActor.shared.getter(v19);
    v21 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor, v20);
    return swift_task_switch(sub_100183084, v21, v22);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 104));
    type metadata accessor for ICError(0);
    v12 = v11;
    *(_QWORD *)(v0 + 48) = 222;
    v13 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v14 = sub_100185F98();
    v15 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v13, v12, v14);
    swift_willThrow(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100183DCC(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a3;
  *(_OWORD *)(v3 + 72) = *a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 88) = v4;
  *(_QWORD *)(v3 + 96) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 104) = v6;
  *(_QWORD *)(v3 + 112) = v7;
  return swift_task_switch(sub_100183E44, v6, v7);
}

uint64_t sub_100183E44()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 120) = v4,
        v3,
        v4))
  {
    v10 = sub_10039D9B4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
    v11 = *(_QWORD *)(v0 + 88);
    v12 = *(_QWORD **)(v0 + 56);
    objc_msgSend(v4, "selectTagSelection:", v10);

    v12[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v12[4] = sub_10017540C();
    v13 = sub_10012D160(v12);
    *(_QWORD *)(v0 + 128) = v13;
    *(_QWORD *)(v0 + 136) = static MainActor.shared.getter(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v14);
    return swift_task_switch(sub_100183FEC, v15, v16);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 96));
    type metadata accessor for ICError(0);
    v6 = v5;
    *(_QWORD *)(v0 + 48) = 222;
    v7 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v8 = sub_100185F98();
    v9 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v7, v6, v8);
    swift_willThrow(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100183FEC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[17]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_10018402C, v0[13], v0[14]);
}

uint64_t sub_10018402C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018406C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = a3;
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(a2 + 32);
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 112) = v5;
  *(_QWORD *)(v3 + 120) = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  *(_QWORD *)(v3 + 128) = v7;
  *(_QWORD *)(v3 + 136) = v8;
  return swift_task_switch(sub_1001840EC, v7, v8);
}

uint64_t sub_1001840EC()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + 104) + 16;
  swift_beginAccess(v1, v0 + 56, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 144) = v4,
        v3,
        v4))
  {
    v10 = sub_1001D53E0();
    v11 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD **)(v0 + 96);
    objc_msgSend(v4, "selectTagSelection:", v10);

    v12[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
    v12[4] = sub_10017540C();
    v13 = sub_10012D160(v12);
    *(_QWORD *)(v0 + 152) = v13;
    *(_QWORD *)(v0 + 160) = static MainActor.shared.getter(v13);
    v15 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor, v14);
    return swift_task_switch(sub_100184290, v15, v16);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 120));
    type metadata accessor for ICError(0);
    v6 = v5;
    *(_QWORD *)(v0 + 88) = 222;
    v7 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v8 = sub_100185F98();
    v9 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 80), v0 + 88, v7, v6, v8);
    swift_willThrow(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100184290()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[20]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_1001842D0, v0[16], v0[17]);
}

uint64_t sub_1001842D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100184310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)a2;
  *(_QWORD *)(v3 + 72) = *(_QWORD *)(a2 + 16);
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 80) = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  *(_QWORD *)(v3 + 88) = v6;
  *(_QWORD *)(v3 + 96) = v7;
  return swift_task_switch(sub_10018438C, v6, v7);
}

uint64_t sub_10018438C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  id v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  v4 = v0[6] + 16;
  swift_beginAccess(v4, v0 + 2, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  swift_retain_n(v3, 2);
  swift_retain_n(v2, 2);
  swift_retain_n(v1, 2);
  if (Strong)
  {
    v6 = objc_msgSend(Strong, "window");

  }
  else
  {
    v6 = 0;
  }
  v0[13] = v6;
  v7 = (_QWORD *)v0[5];
  v7[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v7[4] = sub_10017540C();
  v8 = sub_10012D160(v7);
  v9 = dword_1005D5AC4;
  v10 = v6;
  v11 = (_QWORD *)swift_task_alloc(v9);
  v0[14] = v11;
  *v11 = v0;
  v11[1] = sub_1001844A0;
  return RemoveLockFromNoteIntent.perform()((uint64_t)v8, v0[7], v0[8], v0[9], (uint64_t)v6);
}

uint64_t sub_1001844A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100184590;
  }
  else
  {
    v7 = (void *)v2[13];
    v8 = v2[8];
    v9 = v2[9];
    swift_release(v2[7]);
    swift_release(v8);
    swift_release(v9);

    v4 = v2[11];
    v5 = v2[12];
    v6 = sub_100184530;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_100184530()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100184590()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD **)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);

  sub_100185FE0(v5);
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100184620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[7] = a1;
  v3[8] = a3;
  v4 = type metadata accessor for MainActor(0);
  v3[9] = v4;
  v3[10] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[11] = v6;
  v3[12] = v7;
  return swift_task_switch(sub_100184690, v6, v7);
}

uint64_t sub_100184690()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong
    || (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 104) = v4,
        v3,
        !v4))
  {
    swift_release(*(_QWORD *)(v0 + 80));
    type metadata accessor for ICError(0);
    v14 = v13;
    *(_QWORD *)(v0 + 48) = 222;
    v15 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v16 = sub_100185F98();
    v17 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v15, v14, v16);
    swift_willThrow(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = objc_msgSend(v4, "noteEditorViewController");
  v6 = objc_msgSend(v5, "ic_isViewVisible");

  if ((v6 & 1) != 0
    && (v7 = objc_msgSend(v4, "noteEditorViewController"),
        v8 = objc_msgSend(v7, "note"),
        v7,
        v8))
  {
    if ((objc_msgSend(v8, "isPasswordProtectedAndLocked") & 1) != 0)
    {
      swift_release(*(_QWORD *)(v0 + 80));
      v9 = sub_10013F4E8();
      v10 = swift_allocError(&type metadata for AppIntentsError, v9, 0, 0);
      v12 = 11;
LABEL_14:
      *v11 = v12;
      swift_willThrow(v10);

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (!objc_msgSend(v8, "canAddAttachment"))
    {
      swift_release(*(_QWORD *)(v0 + 80));
      v28 = sub_10013F4E8();
      v10 = swift_allocError(&type metadata for AppIntentsError, v28, 0, 0);
      v12 = 21;
      goto LABEL_14;
    }
    v27 = objc_msgSend(v4, "noteEditorViewController");
    objc_msgSend(v27, "showInsertUIWithPreferredSourceType:", 4);

  }
  else
  {
    v19 = objc_msgSend(v4, "showNewNoteWithApproach:sender:animated:", 10, 0, 1);
    swift_unknownObjectRelease(v19, v20);
  }
  v21 = *(_QWORD *)(v0 + 72);
  v22 = *(_QWORD **)(v0 + 56);
  v22[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v22[4] = sub_10017540C();
  v23 = sub_10012D160(v22);
  *(_QWORD *)(v0 + 112) = v23;
  *(_QWORD *)(v0 + 120) = static MainActor.shared.getter(v23);
  v25 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor, v24);
  return swift_task_switch(sub_100184958, v25, v26);
}

uint64_t sub_100184958()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[15]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_100184998, v0[11], v0[12]);
}

uint64_t sub_100184998()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);

  swift_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001849D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;

  v3[20] = a1;
  v3[21] = a3;
  v5 = type metadata accessor for StringSearchCriteria(0);
  v3[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[23] = v6;
  v7 = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  v3[24] = v7;
  v3[25] = v8;
  v9 = type metadata accessor for MainActor(0);
  v3[26] = v9;
  v3[27] = static MainActor.shared.getter(v9);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor, v10);
  v3[28] = v11;
  v3[29] = v12;
  return swift_task_switch(sub_100184A78, v11, v12);
}

uint64_t sub_100184A78()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;

  v1 = *(_QWORD *)(v0 + 168) + 16;
  swift_beginAccess(v1, v0 + 120, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 240) = v4,
        v3,
        v4))
  {
    v5 = v0 + 16;
    v6 = *(_QWORD **)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 176);
    v8 = *(_QWORD *)(v0 + 184);
    v9 = objc_msgSend((id)objc_opt_self(ICWindowStateArchive), "windowStateArchiveWithEmptyState");
    *(_QWORD *)(v0 + 248) = v9;
    v10 = IntentParameter.wrappedValue.getter(v6);
    StringSearchCriteria.term.getter(v10);
    v12 = v11;
    (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v6, v7);
    v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    objc_msgSend(v9, "setCurrentSearchTerm:", v13);

    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_100184C8C;
    v14 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v15 = (_QWORD *)(v0 + 80);
    v15[1] = 0x40000000;
    v15[2] = sub_1001D8384;
    v15[3] = &unk_10055BC00;
    v15[4] = v14;
    objc_msgSend(v4, "applyStateRestoreArchive:completion:", v9, v15);
    return swift_continuation_await(v5);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 192);
    swift_release(*(_QWORD *)(v0 + 216));
    type metadata accessor for ICError(0);
    v19 = v18;
    *(_QWORD *)(v0 + 152) = 222;
    v20 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v21 = sub_100185F98();
    v22 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 144), v0 + 152, v20, v19, v21);
    swift_willThrow(v22);
    swift_task_dealloc(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100184C8C()
{
  uint64_t v0;

  return swift_task_switch(sub_100184CD0, *(_QWORD *)(*(_QWORD *)v0 + 224), *(_QWORD *)(*(_QWORD *)v0 + 232));
}

uint64_t sub_100184CD0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[26];
  v2 = (_QWORD *)v0[20];
  v2[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v2[4] = sub_10017540C();
  v3 = sub_10012D160(v2);
  v0[32] = v3;
  v0[33] = static MainActor.shared.getter(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor, v4);
  return swift_task_switch(sub_100184D58, v5, v6);
}

uint64_t sub_100184D58()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[33]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_100184D98, v0[28], v0[29]);
}

uint64_t sub_100184D98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 192);

  swift_release(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100184DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[7] = a1;
  v3[8] = a3;
  v4 = type metadata accessor for MainActor(0);
  v3[9] = v4;
  v3[10] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[11] = v6;
  v3[12] = v7;
  return swift_task_switch(sub_100184E60, v6, v7);
}

uint64_t sub_100184E60()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong
    || (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 104) = v4,
        v3,
        !v4))
  {
    swift_release(*(_QWORD *)(v0 + 80));
    type metadata accessor for ICError(0);
    v14 = v13;
    *(_QWORD *)(v0 + 48) = 222;
    v15 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v16 = sub_100185F98();
    v17 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v15, v14, v16);
    swift_willThrow(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = objc_msgSend(v4, "noteEditorViewController");
  v6 = objc_msgSend(v5, "ic_isViewVisible");

  if ((v6 & 1) != 0
    && (v7 = objc_msgSend(v4, "noteEditorViewController"),
        v8 = objc_msgSend(v7, "note"),
        v7,
        v8))
  {
    if ((objc_msgSend(v8, "isPasswordProtected") & 1) != 0)
    {
      swift_release(*(_QWORD *)(v0 + 80));
      v9 = sub_10013F4E8();
      v10 = swift_allocError(&type metadata for AppIntentsError, v9, 0, 0);
      v12 = 11;
LABEL_16:
      *v11 = v12;
      swift_willThrow(v10);

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (!objc_msgSend(v8, "isEditable"))
    {
      swift_release(*(_QWORD *)(v0 + 80));
      v28 = sub_10013F4E8();
      v10 = swift_allocError(&type metadata for AppIntentsError, v28, 0, 0);
      v12 = 12;
      goto LABEL_16;
    }
    if (!objc_msgSend(v8, "canAddAttachment"))
    {
      swift_release(*(_QWORD *)(v0 + 80));
      v29 = sub_10013F4E8();
      v10 = swift_allocError(&type metadata for AppIntentsError, v29, 0, 0);
      v12 = 21;
      goto LABEL_16;
    }
    v21 = objc_msgSend(v4, "noteEditorViewController");
    objc_msgSend(v21, "showInsertUIWithPreferredSourceType:", 7);

  }
  else
  {
    v19 = objc_msgSend(v4, "showNewNoteWithApproach:sender:animated:", 8, 0, 1);
    swift_unknownObjectRelease(v19, v20);
    v21 = objc_msgSend(v4, "noteEditorViewController");
    objc_msgSend(v21, "showInsertUIWithPreferredSourceType:", 7);
  }
  v22 = *(_QWORD *)(v0 + 72);
  v23 = *(_QWORD **)(v0 + 56);

  v23[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v23[4] = sub_10017540C();
  v24 = sub_10012D160(v23);
  *(_QWORD *)(v0 + 112) = v24;
  *(_QWORD *)(v0 + 120) = static MainActor.shared.getter(v24);
  v26 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor, v25);
  return swift_task_switch(sub_100185194, v26, v27);
}

uint64_t sub_100185194()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = swift_release(v0[15]);
  static IntentResult.result<>()(v1);
  return swift_task_switch(sub_10018606C, v0[11], v0[12]);
}

uint64_t sub_1001851D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;

  v3[7] = a1;
  v3[8] = a3;
  v4 = type metadata accessor for MainActor(0);
  v3[9] = v4;
  v3[10] = static MainActor.shared.getter(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor, v5);
  v3[11] = v6;
  v3[12] = v7;
  return swift_task_switch(sub_100185244, v6, v7);
}

uint64_t sub_100185244()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  id v5;
  unsigned __int8 v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong
    || (v3 = Strong,
        v4 = objc_msgSend(Strong, "ic_viewControllerManager"),
        *(_QWORD *)(v0 + 104) = v4,
        v3,
        !v4))
  {
    swift_release(*(_QWORD *)(v0 + 80));
    type metadata accessor for ICError(0);
    v14 = v13;
    *(_QWORD *)(v0 + 48) = 222;
    v15 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v16 = sub_100185F98();
    v17 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 40), v0 + 48, v15, v14, v16);
    swift_willThrow(v17);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = objc_msgSend(v4, "noteEditorViewController");
  v6 = objc_msgSend(v5, "ic_isViewVisible");

  if ((v6 & 1) != 0
    && (v7 = objc_msgSend(v4, "noteEditorViewController"),
        v8 = objc_msgSend(v7, "note"),
        v7,
        v8))
  {
    if ((objc_msgSend(v8, "isPasswordProtectedAndLocked") & 1) != 0)
    {
      swift_release(*(_QWORD *)(v0 + 80));
      v9 = sub_10013F4E8();
      v10 = swift_allocError(&type metadata for AppIntentsError, v9, 0, 0);
      v12 = 11;
LABEL_14:
      *v11 = v12;
      swift_willThrow(v10);

      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    if (!objc_msgSend(v8, "canAddAttachment"))
    {
      swift_release(*(_QWORD *)(v0 + 80));
      v28 = sub_10013F4E8();
      v10 = swift_allocError(&type metadata for AppIntentsError, v28, 0, 0);
      v12 = 21;
      goto LABEL_14;
    }
    v27 = objc_msgSend(v4, "noteEditorViewController");
    objc_msgSend(v27, "showInsertUIWithPreferredSourceType:", 1);

  }
  else
  {
    v19 = objc_msgSend(v4, "showNewNoteWithApproach:sender:animated:", 11, 0, 1);
    swift_unknownObjectRelease(v19, v20);
  }
  v21 = *(_QWORD *)(v0 + 72);
  v22 = *(_QWORD **)(v0 + 56);
  v22[3] = sub_100012E18((uint64_t *)&unk_1005D0690);
  v22[4] = sub_10017540C();
  v23 = sub_10012D160(v22);
  *(_QWORD *)(v0 + 112) = v23;
  *(_QWORD *)(v0 + 120) = static MainActor.shared.getter(v23);
  v25 = dispatch thunk of Actor.unownedExecutor.getter(v21, &protocol witness table for MainActor, v24);
  return swift_task_switch(sub_100185194, v25, v26);
}

uint64_t sub_10018550C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_100185540()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100185564(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D1FFC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_1001812B0(a1, a2, v2);
}

unint64_t sub_1001855C8()
{
  unint64_t result;

  result = qword_1005D2008;
  if (!qword_1005D2008)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplyFormattingIntent, &type metadata for ApplyFormattingIntent);
    atomic_store(result, &qword_1005D2008);
  }
  return result;
}

uint64_t sub_10018560C(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D2014);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_1001817D0(a1, a2, v2);
}

uint64_t sub_100185670(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D202C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100130768;
  return sub_100181D34(a1, a2, v2);
}

uint64_t sub_1001856D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D2044);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100182000(a1, a2, v2);
}

uint64_t sub_100185738(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D205C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100182220(a1, a2, v2);
}

uint64_t sub_10018579C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D2074);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100182584(a1, a2, v2);
}

uint64_t sub_100185800(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D208C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100182818(a1, a2, v2);
}

unint64_t sub_100185864()
{
  unint64_t result;

  result = qword_1005D2098;
  if (!qword_1005D2098)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenTopLevelFolderIntent, &type metadata for OpenTopLevelFolderIntent);
    atomic_store(result, &qword_1005D2098);
  }
  return result;
}

uint64_t sub_1001858A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D20A4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100182DF0(a1, a2, v2);
}

uint64_t sub_10018590C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D20BC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_1001830C4(a1, a2, v2);
}

unint64_t sub_100185970()
{
  unint64_t result;

  result = qword_1005D20C8;
  if (!qword_1005D20C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenAttachmentIntent, &type metadata for OpenAttachmentIntent);
    atomic_store(result, &qword_1005D20C8);
  }
  return result;
}

uint64_t sub_1001859B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D20D4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100183358(a1, a2, v2);
}

unint64_t sub_100185A18()
{
  unint64_t result;

  result = qword_1005D20E0;
  if (!qword_1005D20E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenChecklistItemIntent, &type metadata for OpenChecklistItemIntent);
    atomic_store(result, &qword_1005D20E0);
  }
  return result;
}

uint64_t sub_100185A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D20EC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100183584(a1, a2, v2);
}

uint64_t sub_100185AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D2104);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100183898(a1, a2, v2);
}

uint64_t sub_100185B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D211C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100183B38(a1, a2, v2);
}

unint64_t sub_100185B88()
{
  unint64_t result;

  result = qword_1005D2128;
  if (!qword_1005D2128)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for OpenTableIntent, &type metadata for OpenTableIntent);
    atomic_store(result, &qword_1005D2128);
  }
  return result;
}

uint64_t sub_100185BCC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D2134);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100183DCC(a1, a2, v2);
}

uint64_t sub_100185C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D214C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_10018406C(a1, a2, v2);
}

unint64_t sub_100185C94()
{
  unint64_t result;

  result = qword_1005D2158;
  if (!qword_1005D2158)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeTagSelectionIntent, &type metadata for ChangeTagSelectionIntent);
    atomic_store(result, &qword_1005D2158);
  }
  return result;
}

uint64_t sub_100185CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D2164);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100184310(a1, a2, v2);
}

unint64_t sub_100185D3C()
{
  unint64_t result;

  result = qword_1005D2170;
  if (!qword_1005D2170)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RemoveLockFromNoteIntent, &type metadata for RemoveLockFromNoteIntent);
    atomic_store(result, &qword_1005D2170);
  }
  return result;
}

uint64_t sub_100185D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D217C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100184620(a1, a2, v2);
}

unint64_t sub_100185DE4()
{
  unint64_t result;

  result = qword_1005D2188;
  if (!qword_1005D2188)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ScanDocumentIntent, &type metadata for ScanDocumentIntent);
    atomic_store(result, &qword_1005D2188);
  }
  return result;
}

uint64_t sub_100185E28(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D2194);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_1001849D8(a1, a2, v2);
}

uint64_t sub_100185E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D21AC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_100184DF0(a1, a2, v2);
}

uint64_t sub_100185EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005D21C4);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_100145358;
  return sub_1001851D4(a1, a2, v2);
}

unint64_t sub_100185F54()
{
  unint64_t result;

  result = qword_1005D21D0;
  if (!qword_1005D21D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TakePhotoIntent, &type metadata for TakePhotoIntent);
    atomic_store(result, (unint64_t *)&qword_1005D21D0);
  }
  return result;
}

unint64_t sub_100185F98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005CF520;
  if (!qword_1005CF520)
  {
    type metadata accessor for ICError(255);
    result = swift_getWitnessTable(&unk_100452864, v1);
    atomic_store(result, (unint64_t *)&qword_1005CF520);
  }
  return result;
}

_QWORD *sub_100185FE0(_QWORD *result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result[3] - 8);
  if ((*(_DWORD *)(v1 + 80) & 0x20000) != 0)
    return (_QWORD *)swift_slowDealloc(*result, *(_QWORD *)(v1 + 64)+ ((*(_DWORD *)(v1 + 80) + 16) & ~(unint64_t)*(_DWORD *)(v1 + 80)), *(_DWORD *)(v1 + 80) | 7);
  return result;
}

unint64_t sub_100186014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D21F0;
  if (!qword_1005D21F0)
  {
    v1 = sub_1000163BC(255, &qword_1005D1650, ICVirtualSmartFolderItemIdentifier_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1005D21F0);
  }
  return result;
}

uint64_t *sub_10018607C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_100012E18(&qword_1005D2210);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100012E18(&qword_1005D2218);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = a3[6];
    v16 = a3[7];
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v17;
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    v18 = a3[8];
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    v21 = *v20;
    v22 = v20[1];
    v23 = v20[2];
    v24 = v20[3];
    v25 = v20[4];
    v26 = v17;
    sub_100186204(v21, v22, v23, v24, v25);
    *v19 = v21;
    v19[1] = v22;
    v19[2] = v23;
    v19[3] = v24;
    v19[4] = v25;
    v27 = a3[9];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain(v30);
  }
  return a1;
}

uint64_t sub_100186204(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6;
  uint64_t v7;

  switch(a5 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
      swift_unknownObjectRetain(result);
      v6 = a3;
      goto LABEL_4;
    case 3uLL:
      v7 = a5 & 0x1FFFFFFFFFFFFFFFLL;
      swift_unknownObjectRetain(result);
      swift_unknownObjectRetain(a3);
      v6 = v7;
LABEL_4:
      result = swift_retain(v6);
      break;
    case 4uLL:
      swift_unknownObjectRetain(result);
      result = swift_errorRetain(a3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100186284(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_100012E18(&qword_1005D2210);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);

  v8 = a1 + a2[8];
  sub_100186344(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
}

uint64_t sub_100186344(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  switch(a5 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
      swift_unknownObjectRelease(result, a2);
      v6 = a3;
      goto LABEL_4;
    case 3uLL:
      v7 = a5 & 0x1FFFFFFFFFFFFFFFLL;
      swift_unknownObjectRelease(result, a2);
      swift_unknownObjectRelease(a3, v8);
      v6 = v7;
LABEL_4:
      result = swift_release(v6);
      break;
    case 4uLL:
      swift_unknownObjectRelease(result, a2);
      result = swift_errorRelease(a3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001863C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;

  v6 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100012E18(&qword_1005D2210);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100012E18(&qword_1005D2218);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v16 = a3[8];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  v20 = v18[1];
  v21 = v18[2];
  v22 = v18[3];
  v23 = v18[4];
  v24 = v15;
  sub_100186204(v19, v20, v21, v22, v23);
  *v17 = v19;
  v17[1] = v20;
  v17[2] = v21;
  v17[3] = v22;
  v17[4] = v23;
  v25 = a3[9];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain(v28);
  return a1;
}

uint64_t sub_100186520(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_100012E18(&qword_1005D2210);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100012E18(&qword_1005D2218);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = *(void **)(a2 + v16);
  v18 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = v17;
  v19 = v17;

  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v20 = a3[8];
  v21 = (uint64_t *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *v22;
  v24 = v22[1];
  v25 = v22[2];
  v26 = v22[3];
  v27 = v22[4];
  sub_100186204(*v22, v24, v25, v26, v27);
  v28 = *v21;
  v29 = v21[1];
  v30 = v21[2];
  v31 = v21[3];
  v32 = v21[4];
  *v21 = v23;
  v21[1] = v24;
  v21[2] = v25;
  v21[3] = v26;
  v21[4] = v27;
  sub_100186344(v28, v29, v30, v31, v32);
  v33 = a3[9];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v36 = v35[1];
  v37 = v34[1];
  v34[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  return a1;
}

uint64_t sub_1001866F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v6 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_100012E18(&qword_1005D2210);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100012E18(&qword_1005D2218);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[8];
  v15 = a3[9];
  v16 = a1 + v14;
  v17 = a2 + v14;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  return a1;
}

uint64_t sub_100186810(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for EditNoteActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_100012E18(&qword_1005D2210);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100012E18(&qword_1005D2218);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  v18 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v19 = (uint64_t *)(a1 + v18);
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 32);
  v22 = *v19;
  v23 = v19[1];
  v24 = v19[2];
  v25 = v19[3];
  v26 = v19[4];
  v27 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v27;
  v19[4] = v21;
  sub_100186344(v22, v23, v24, v25, v26);
  v28 = a3[9];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  v33 = v29[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease(v33);
  return a1;
}

uint64_t sub_1001869A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001869B4);
}

uint64_t sub_1001869B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for EditNoteActivity(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_100012E18(&qword_1005D2218);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_100186A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100186A6C);
}

uint64_t sub_100186A6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for EditNoteActivity(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_100012E18(&qword_1005D2218);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FastSyncStateMachine(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D2278;
  if (!qword_1005D2278)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FastSyncStateMachine);
  return result;
}

void sub_100186B50(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  v2 = type metadata accessor for EditNoteActivity(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100186C04(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[4] = "(";
      v6[5] = &unk_1004578E0;
      swift_initStructMetadata(a1, 256, 6, v6, a1 + 16);
    }
  }
}

void sub_100186C04(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D2288)
  {
    v2 = sub_10001537C(&qword_1005D2210);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D2288);
  }
}

void *sub_100186C5C()
{
  return &protocol witness table for Int;
}

uint64_t sub_100186C68()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_10012B334(v0, qword_1005D21F8);
  v1 = sub_10012A0B0(v0, (uint64_t)qword_1005D21F8);
  return static Logger.realtimeCollaboration.getter(v1);
}

void sub_100186CB0()
{
  __int128 *v0;
  _BYTE v1[32];

  sub_10013B100(v0, (uint64_t)v1);
  __asm { BR              X11 }
}

uint64_t sub_100186D00()
{
  uint64_t v0;
  Swift::String v1;
  void *object;
  Swift::String v3;
  uint64_t v4;
  uint64_t v6;

  v0 = ((uint64_t (*)())swift_getObjectType)();
  ((void (*)())swift_unknownObjectRetain)();
  v1._countAndFlagsBits = sub_100186FB8(v0, v6);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  ((void (*)(uint64_t))swift_unknownObjectRelease)(v4);
  return 0x676E697472617473;
}

uint64_t sub_100186FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v5 = type metadata accessor for EditNoteActivity(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  v9._countAndFlagsBits = 0x3D65746F6ELL;
  v9._object = (void *)0xE500000000000000;
  String.append(_:)(v9);
  v10 = dispatch thunk of GroupSessionProvider.activity.getter(a1, a2);
  v11 = EditNoteActivity.noteID.getter(v10);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x3D6469202CLL;
  v15._object = (void *)0xE500000000000000;
  String.append(_:)(v15);
  v18 = v2;
  _print_unlocked<A, B>(_:_:)(&v18, v19, &type metadata for ObjectIdentifier, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v19[0];
}

void sub_1001870E0()
{
  __int128 *v0;
  _BYTE v1[40];

  sub_10013B100(v0, (uint64_t)v1);
  sub_100186CB0();
}

void sub_100187114(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  v3 = type metadata accessor for FastSyncStateMachine(0);
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
  v5 = EditNoteActivity.noteID.getter(v3);
  v7 = v6;
  sub_10013B100((__int128 *)(v1 + *(int *)(v3 + 32)), (uint64_t)v24);
  if (qword_1005CEA10 != -1)
    swift_once(&qword_1005CEA10, sub_100186C68);
  v8 = type metadata accessor for Logger(0);
  sub_10012A0B0(v8, (uint64_t)qword_1005D21F8);
  sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
  sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
  sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
  sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
  swift_bridgeObjectRetain(v7);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc(42, -1);
    v13 = swift_slowAlloc(96, -1);
    v22 = v4;
    v23 = v13;
    *(_DWORD *)v12 = 134218754;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v12 + 4);
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain(v7);
    v22 = sub_1003A4190(v5, v7, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v12 + 14);
    swift_bridgeObjectRelease_n(v7, 3);
    *(_WORD *)(v12 + 22) = 2080;
    sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
    sub_100186CB0();
    v15 = v14;
    v17 = v16;
    sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    v22 = sub_1003A4190(v15, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v12 + 24);
    swift_bridgeObjectRelease(v17);
    sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    *(_WORD *)(v12 + 32) = 2080;
    sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
    sub_100186CB0();
    v19 = v18;
    v21 = v20;
    sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    v22 = sub_1003A4190(v19, v21, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v12 + 34);
    swift_bridgeObjectRelease(v21);
    sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FastSyncStateMachine[id=%ld, note=%s]: state transition from '%s' -> '%s'", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy(v13, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v7, 2);
    sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    sub_10018B038(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    sub_10018B038(v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
  }

}

uint64_t sub_10018746C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v7 = (int *)type metadata accessor for FastSyncStateMachine(0);
  v8 = a4 + v7[5];
  v9 = sub_100012E18(&qword_1005D2210);
  v28 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a4 + v7[8];
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_QWORD *)(v10 + 32) = 0xA000000000000000;
  v11 = (_QWORD *)(a4 + v7[9]);
  *v11 = 0;
  v11[1] = 0;
  v12 = objc_msgSend((id)objc_opt_self(ICCloudContext), "sharedContext");
  EditNoteActivity.accountID.getter(v12);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  v16 = objc_msgSend(v12, "containerForAccountID:", v15);

  if (v16)
  {
    v17 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a4, a2, v17);
    *(_QWORD *)(a4 + v7[6]) = v16;
    *(_QWORD *)(a4 + v7[7]) = a1;
    return sub_10018BCD4(a3, v28);
  }
  else
  {
    v19 = type metadata accessor for FastSyncError(0);
    v20 = sub_100019C6C(&qword_1005DB2B0, (uint64_t (*)(uint64_t))&type metadata accessor for FastSyncError, (uint64_t)&protocol conformance descriptor for FastSyncError);
    v21 = swift_allocError(v19, v20, 0, 0);
    v23 = v22;
    *v22 = EditNoteActivity.accountID.getter(v21);
    v23[1] = v24;
    v25 = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v23, enum case for FastSyncError.failedToCreateSession(_:), v19);
    swift_willThrow(v25);
    sub_100012DDC(a3, &qword_1005D2218);
    v26 = type metadata accessor for EditNoteActivity(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a2, v26);
    sub_100012DDC(v28, &qword_1005D2218);
    sub_100186344(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32));
    return swift_bridgeObjectRelease(v11[1]);
  }
}

void sub_100187694()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v1 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v1);
  v2 = (char *)sub_100187738
     + 4
     * byte_100457880[*(_QWORD *)(v0 + *(int *)(type metadata accessor for FastSyncStateMachine(0) + 32) + 32) >> 61];
  __asm { BR              X11 }
}

uint64_t sub_100187738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v9 = v2 + *(int *)(v7 + 20);
  v10 = *(_QWORD *)(v2 + *(int *)(v7 + 24));
  v11 = v0;
  swift_unknownObjectRetain(v6);
  swift_retain(v11);
  v12 = sub_100187B44(v2, v9, v10);
  if (v1)
  {
    swift_unknownObjectRelease(v6, v13);
    swift_release(v11);
  }
  else
  {
    v14 = v12;
    v15 = v13;
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject(&unk_10055BD68, 72, 7);
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v11;
    v17[5] = v14;
    v18 = *(_QWORD *)(v8 - 200);
    v17[6] = v15;
    v17[7] = v18;
    v19 = *(_QWORD *)(v8 - 192);
    v17[8] = v19;
    swift_retain(v19);
    swift_retain(v11);
    swift_unknownObjectRetain(v14);
    v20 = sub_1003ABF90(v4, (uint64_t)&unk_1005D2368, (uint64_t)v17);
    *(_QWORD *)(v8 - 192) = v20 | 0x6000000000000000;
    sub_10013B100((__int128 *)v5, v8 - 144);
    *(_QWORD *)v5 = v6;
    *(_QWORD *)(v5 + 8) = v3;
    *(_QWORD *)(v5 + 16) = v14;
    *(_QWORD *)(v5 + 24) = v15;
    *(_QWORD *)(v5 + 32) = *(_QWORD *)(v8 - 192);
    swift_unknownObjectRetain(v14);
    swift_unknownObjectRetain(v6);
    swift_retain(v20);
    sub_100187114((_QWORD *)(v8 - 144));
    sub_10018B038((_QWORD *)(v8 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    swift_release(v20);
    swift_unknownObjectRelease(v6, v21);
    swift_unknownObjectRelease(v14, v22);
    swift_release(v11);
    v23 = 1;
  }
  return v23 & 1;
}

uint64_t sub_100187B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v60;
  os_log_t v61;
  int v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v69 = a2;
  v68 = a3;
  v4 = type metadata accessor for EditNoteActivity(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v60 - v9;
  v11 = sub_100012E18(&qword_1005D2218);
  __chkstk_darwin(v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E18(&qword_1005D2210);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  EditNoteActivity.validate()();
  if (v18)
    return a1;
  v66 = v5;
  v67 = 0;
  v63 = v10;
  v64 = v17;
  v65 = v8;
  v70 = a1;
  sub_100012CE8(v69, (uint64_t)v13, &qword_1005D2218);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100012DDC((uint64_t)v13, &qword_1005D2218);
LABEL_11:
    v45 = v70;
    v47 = v65;
    v46 = v66;
    if (qword_1005CEA10 != -1)
      swift_once(&qword_1005CEA10, sub_100186C68);
    v48 = type metadata accessor for Logger(0);
    sub_10012A0B0(v48, (uint64_t)qword_1005D21F8);
    v49 = v4;
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16))(v47, v45, v4);
    v51 = Logger.logObject.getter(v50);
    v52 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v51, v52))
    {
      v69 = v49;
      v53 = (uint8_t *)swift_slowAlloc(12, -1);
      v54 = swift_slowAlloc(32, -1);
      v73 = v54;
      *(_DWORD *)v53 = 136315138;
      v55 = EditNoteActivity.noteID.getter(v54);
      v57 = v56;
      v71 = sub_1003A4190(v55, v56, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v53 + 4);
      swift_bridgeObjectRelease(v57);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v69);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Making personal group session provider for activity %s", v53, 0xCu);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      v58 = v54;
      v45 = v70;
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v53, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v49);
    }

    sub_100012E18(&qword_1005D2380);
    a1 = static GroupSessionProvider<>.personalGroupSessionProvider(for:)(v45);
    sub_100016638(&qword_1005D2388, &qword_1005D2380, (uint64_t)&protocol conformance descriptor for PersonalGroupSessionProvider<A>);
    return a1;
  }
  v19 = v64;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v64, v13, v14);
  sub_1000163BC(0, &qword_1005D2390, CKShare_ptr);
  v20 = static NSObject<>.record(from:)(v19);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
    goto LABEL_11;
  }
  v21 = (void *)v20;
  if (qword_1005CEA10 != -1)
    swift_once(&qword_1005CEA10, sub_100186C68);
  v22 = type metadata accessor for Logger(0);
  sub_10012A0B0(v22, (uint64_t)qword_1005D21F8);
  v23 = v66;
  v24 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v63, v70, v4);
  v25 = v21;
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.debug.getter();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc(22, -1);
    v30 = swift_slowAlloc(64, -1);
    v65 = (char *)v30;
    v73 = v30;
    *(_DWORD *)v29 = 136315394;
    v62 = v28;
    v61 = v26;
    v31 = EditNoteActivity.noteID.getter(v30);
    v33 = v32;
    v71 = sub_1003A4190(v31, v32, &v73);
    v69 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v29 + 4);
    swift_bridgeObjectRelease(v33);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v4);
    *(_WORD *)(v29 + 12) = 2080;
    v34 = v25;
    v35 = objc_msgSend(v25, "ic_loggingDescription");
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v38 = v37;

    v39 = v36;
    v40 = v67;
    v71 = sub_1003A4190(v39, v38, &v73);
    v15 = v69;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v29 + 14);

    swift_bridgeObjectRelease(v38);
    v41 = v61;
    _os_log_impl((void *)&_mh_execute_header, v61, (os_log_type_t)v62, "Making shared group session provider for activity %s with share %s", (uint8_t *)v29, 0x16u);
    v42 = v65;
    swift_arrayDestroy(v65, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    v43 = v29;
    v19 = v64;
    swift_slowDealloc(v43, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v4);

    v34 = v25;
    v40 = v67;
  }
  v44 = v68;
  sub_100012E18(&qword_1005D2398);
  a1 = static GroupSessionProvider<>.sharedGroupSessionProvider(for:share:container:)(v70, v34, v44);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);

  if (!v40)
    sub_100016638((unint64_t *)&unk_1005D23A0, &qword_1005D2398, (uint64_t)&protocol conformance descriptor for CKShareGroupSessionProvider<A>);
  return a1;
}

uint64_t sub_100188178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a1;
  v9 = type metadata accessor for FastSync.PresenceAction(0);
  v8[7] = v9;
  v8[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  v8[9] = v10;
  *v10 = v8;
  v10[1] = sub_100188204;
  return Task<>.value.getter();
}

uint64_t sub_100188204()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  return swift_task_switch(sub_100188258, 0, 0);
}

uint64_t sub_100188258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  uint64_t (*v8)(_QWORD);

  static Task<>.checkCancellation()();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(int **)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)v1 = v7;
  *(_BYTE *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload(v1, v2, 0);
  v4 = v3[1];
  v8 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
  swift_unknownObjectRetain(v7);
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_10018831C;
  return v8(*(_QWORD *)(v0 + 64));
}

uint64_t sub_10018831C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 80));
  return swift_task_switch(sub_100188370, 0, 0);
}

uint64_t sub_100188370()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_OWORD **)(v0 + 16);
  v4 = *(_OWORD *)(v0 + 24);
  sub_100145264(v1, type metadata accessor for FastSync.PresenceAction);
  *v2 = v4;
  swift_unknownObjectRetain(v4);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001883DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v8[10] = v18;
  v8[11] = v19;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a1;
  v10 = type metadata accessor for EditNoteActivity(0);
  v8[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[13] = v11;
  v8[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FastSync.PresenceAction(0);
  v8[15] = v12;
  v13 = (*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[16] = swift_task_alloc(v13);
  v8[17] = swift_task_alloc(v13);
  v14 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  v8[18] = v14;
  v15 = sub_100012E18(&qword_1005D22E0);
  v16 = sub_100012E18(&qword_1005D7A90);
  *v14 = v8;
  v14[1] = sub_1001884E0;
  return Task.result.getter(v8 + 2, a4, v15, v16, &protocol self-conformance witness table for Error);
}

uint64_t sub_1001884E0()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 144));
  return swift_task_switch(sub_100188534, 0, 0);
}

uint64_t sub_100188534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 104);
  v15 = *(_QWORD *)(v0 + 96);
  v16 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 56);
  v4 = *(int **)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 152) = v7;
  *(_QWORD *)(v0 + 160) = v8;
  v9 = *(_BYTE *)(v0 + 32);
  *(_BYTE *)(v0 + 33) = v9;
  ObjectType = swift_getObjectType(v6);
  dispatch thunk of GroupSessionProvider.activity.getter(ObjectType, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v15);
  v11 = type metadata accessor for FastSync.LeaveActivityAction(0);
  *(_BYTE *)(v1 + *(int *)(v11 + 24)) = 0;
  v12 = v1 + *(int *)(v11 + 20);
  *(_QWORD *)v12 = v7;
  *(_QWORD *)(v12 + 8) = v8;
  *(_BYTE *)(v12 + 16) = v9;
  swift_storeEnumTagMultiPayload(v1, v16, 1);
  sub_10018B6BC(v7, v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v15);
  v17 = (uint64_t (*)(_QWORD))((char *)v4 + *v4);
  v13 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 168) = v13;
  *v13 = v0;
  v13[1] = sub_100188654;
  return v17(*(_QWORD *)(v0 + 136));
}

uint64_t sub_100188654()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 168));
  return swift_task_switch(sub_1001886A8, 0, 0);
}

uint64_t sub_1001886A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  uint64_t (*v8)(_QWORD);

  static Task<>.checkCancellation()();
  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(int **)(v0 + 64);
  v7 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)v1 = v7;
  *(_BYTE *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload(v1, v2, 0);
  v4 = v3[1];
  v8 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
  swift_unknownObjectRetain(v7);
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 176) = v5;
  *v5 = v0;
  v5[1] = sub_1001887C4;
  return v8(*(_QWORD *)(v0 + 128));
}

uint64_t sub_1001887C4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  return swift_task_switch(sub_100188818, 0, 0);
}

uint64_t sub_100188818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 112);
  v4 = *(_OWORD **)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 80);
  sub_10018B6C8(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 33));
  sub_100145264(v1, type metadata accessor for FastSync.PresenceAction);
  sub_100145264(v2, type metadata accessor for FastSync.PresenceAction);
  *v4 = v6;
  swift_unknownObjectRetain(v6);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001888BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  v8 = type metadata accessor for FastSync.PresenceAction(0);
  v7[7] = v8;
  v7[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100188920, 0, 0);
}

uint64_t sub_100188920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  uint64_t (*v8)(_QWORD);

  static Task<>.checkCancellation()();
  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(int **)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)v1 = v7;
  *(_BYTE *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload(v1, v2, 0);
  v4 = v3[1];
  v8 = (uint64_t (*)(_QWORD))((char *)v3 + *v3);
  swift_unknownObjectRetain(v7);
  v5 = (_QWORD *)swift_task_alloc(v4);
  *(_QWORD *)(v0 + 72) = v5;
  *v5 = v0;
  v5[1] = sub_1001889E4;
  return v8(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1001889E4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  return swift_task_switch(sub_10018BFF4, 0, 0);
}

void sub_100188A38()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v3[2];
  _BYTE v4[32];

  v1 = type metadata accessor for EditNoteActivity(0);
  __chkstk_darwin(v1);
  v2 = (__int128 *)(v0 + *(int *)(type metadata accessor for FastSyncStateMachine(0) + 32));
  sub_10013B100(v2, (uint64_t)v3);
  sub_10013B100(v3, (uint64_t)v4);
  __asm { BR              X11 }
}

void sub_100188AF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v7 - 88) = a1 & 0x1FFFFFFFFFFFFFFFLL;
  v8 = *(_QWORD *)(v7 - 120);
  v9 = *(_QWORD *)(v7 - 104);
  swift_unknownObjectRetain(v5);
  swift_retain(v4);
  swift_release(v9);
  swift_unknownObjectRelease(v8, v10);
  if (qword_1005CEA10 != -1)
    swift_once(&qword_1005CEA10, sub_100186C68);
  v11 = type metadata accessor for Logger(0);
  sub_10012A0B0(v11, (uint64_t)qword_1005D21F8);
  v12 = swift_unknownObjectRetain_n(v6, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v7 - 192) = v16;
    *(_QWORD *)(v7 - 168) = v16;
    *(_DWORD *)v15 = 136315138;
    *(_QWORD *)(v7 - 200) = v15 + 4;
    ObjectType = swift_getObjectType(v6);
    dispatch thunk of GroupSessionProvider.activity.getter(ObjectType, *(_QWORD *)(v7 - 184));
    v18 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v3, v18);
    v21 = v20;
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    *(_QWORD *)(v7 - 176) = sub_1003A4190(v19, v21, (uint64_t *)(v7 - 168));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v7 - 176, v7 - 168, *(_QWORD *)(v7 - 200));
    swift_unknownObjectRelease_n(v6, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Ignoring startActivity(_:didFailWith:) for a group session provider we've stopped tracking (%s)", v15, 0xCu);
    v22 = *(_QWORD *)(v7 - 192);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(v6, 2);
  }
}

void sub_100188E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3[2];
  _BYTE v4[32];

  v1 = type metadata accessor for EditNoteActivity(0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for FastSyncStateMachine(0);
  sub_10013B100((__int128 *)(v0 + *(int *)(v2 + 32)), (uint64_t)v3);
  sub_10013B100(v3, (uint64_t)v4);
  __asm { BR              X11 }
}

void sub_100188ED0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v6 - 88) = a1 & 0x1FFFFFFFFFFFFFFFLL;
  if (qword_1005CEA10 != -1)
    swift_once(&qword_1005CEA10, sub_100186C68);
  v7 = type metadata accessor for Logger(0);
  sub_10012A0B0(v7, (uint64_t)qword_1005D21F8);
  v8 = swift_unknownObjectRetain_n(v1, 2);
  v9 = Logger.logObject.getter(v8);
  v11 = static os_log_type_t.error.getter(v9, v10);
  if (os_log_type_enabled(v9, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_QWORD *)(v6 - 184) = v13;
    *(_QWORD *)(v6 - 168) = v13;
    *(_DWORD *)v12 = 136315138;
    *(_QWORD *)(v6 - 192) = v12 + 4;
    ObjectType = swift_getObjectType(v1);
    dispatch thunk of GroupSessionProvider.activity.getter(ObjectType, v5);
    v15 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
    v16 = dispatch thunk of CustomStringConvertible.description.getter(v2, v15);
    v17 = v4;
    v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3, v2);
    *(_QWORD *)(v6 - 176) = sub_1003A4190(v16, v19, (uint64_t *)(v6 - 168));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v6 - 176, v6 - 168, *(_QWORD *)(v6 - 192));
    swift_unknownObjectRelease_n(v1, 2);
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v9, v11, "Ignoring didStartActivity() for a group session provider we've stopped tracking (%s)", v12, 0xCu);
    v20 = *(_QWORD *)(v6 - 184);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(v1, 2);
  }
}

void sub_100189148()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v3[5];
  _BYTE v4[32];

  v1 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v1);
  v2 = (__int128 *)(v0 + *(int *)(type metadata accessor for FastSyncStateMachine(0) + 32));
  sub_10013B100(v2, (uint64_t)v3);
  sub_10013B100(v3, (uint64_t)v4);
  __asm { BR              X11 }
}

uint64_t sub_100189200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 - 208) = v5;
  *(_QWORD *)(v8 - 88) = a1 & 0x1FFFFFFFFFFFFFFFLL;
  v9 = *(_QWORD *)(v8 - 120);
  *(_QWORD *)(v8 - 216) = *(_QWORD *)(v8 - 112);
  v10 = *(_QWORD *)(v8 - 104);
  swift_unknownObjectRetain(v7);
  swift_retain(v6);
  sub_100012E18(&qword_1005D22E0);
  sub_100012E18(&qword_1005D7A90);
  Task.cancel()();
  sub_100012CE8(v4, v2, &qword_1005D4680);
  v11 = (_QWORD *)swift_allocObject(&unk_10055BC50, 72, 7);
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v10;
  v11[5] = v9;
  v13 = *(_QWORD *)(v8 - 216);
  v12 = *(_QWORD *)(v8 - 208);
  v11[6] = v13;
  v11[7] = v12;
  v11[8] = v3;
  swift_unknownObjectRetain(v9);
  swift_retain(v3);
  v14 = sub_1002EDE48(v2, (uint64_t)&unk_1005D22F0, (uint64_t)v11);
  sub_10013B100((__int128 *)v1, v8 - 160);
  *(_QWORD *)v1 = v9;
  *(_QWORD *)(v1 + 8) = v13;
  *(_QWORD *)(v1 + 16) = v14;
  *(_OWORD *)(v1 + 24) = xmmword_1004579A0;
  swift_unknownObjectRetain(v9);
  swift_retain(v14);
  sub_100187114((_QWORD *)(v8 - 160));
  swift_unknownObjectRelease(v9, v15);
  sub_10018B038((_QWORD *)(v8 - 160), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
  return swift_release(v14);
}

uint64_t sub_100189520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  v9 = type metadata accessor for EditNoteActivity(0);
  v8[10] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[11] = v10;
  v8[12] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FastSync.LeaveActivityAction(0);
  v8[13] = v11;
  v8[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v8[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[16] = v13;
  v8[17] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001895D4, 0, 0);
}

uint64_t sub_1001895D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[5];
  v2 = swift_task_alloc(48);
  v0[18] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = xmmword_1004579B0;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[19] = v3;
  *v3 = v0;
  v3[1] = sub_10018967C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 21, &type metadata for Bool, &type metadata for Bool, 0, 0, &unk_1005D2300, v2, &type metadata for Bool);
}

uint64_t sub_10018967C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1001896D8, 0, 0);
}

uint64_t sub_1001896D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  uint64_t ObjectType;
  uint64_t v25;
  Swift::String v26;
  void *object;
  Swift::String v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t type;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_BYTE *)(v0 + 168);
  v3 = swift_task_alloc(32);
  *(_BYTE *)(v3 + 16) = v2;
  v4 = swift_unknownObjectRetain_n(v1, 2);
  static Logger.realtimeCollaboration.getter(v4);
  v5 = swift_allocObject(&unk_10055BC78, 17, 7);
  *(_BYTE *)(v5 + 16) = 2;
  v6 = sub_1002B6424(v5, sub_10018B750);
  v7 = *(_QWORD *)(v0 + 136);
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 128);
    swift_unknownObjectRelease_n(*(_QWORD *)(v0 + 48), 2);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    v10 = static os_log_type_t.fault.getter(v6);
    v11 = v10;
    v12 = Logger.logObject.getter(v10);
    v13 = v11;
    v14 = os_log_type_enabled(v12, v11);
    v16 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 120);
    if (v14)
    {
      v47 = *(_QWORD *)(v0 + 120);
      type = v13;
      v18 = *(_QWORD *)(v0 + 96);
      v42 = *(_QWORD *)(v0 + 80);
      v43 = *(_QWORD *)(v0 + 88);
      v41 = *(_QWORD *)(v0 + 56);
      v48 = *(_QWORD *)(v0 + 48);
      v19 = swift_slowAlloc(32, -1);
      v44 = swift_slowAlloc(64, -1);
      v50 = v44;
      *(_DWORD *)v19 = 136315650;
      v46 = v15;
      v20 = StaticString.description.getter("MobileNotes/FastSyncStateMachine.swift", 38, 2);
      v22 = v21;
      *(_QWORD *)(v0 + 16) = sub_1003A4190(v20, v21, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v19 + 4);
      swift_bridgeObjectRelease(v22);
      *(_WORD *)(v19 + 12) = 2048;
      *(_QWORD *)(v0 + 24) = 231;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v19 + 14);
      *(_WORD *)(v19 + 22) = 2080;
      v51 = 0;
      v52 = 0xE000000000000000;
      _StringGuts.grow(_:)(80);
      v23._object = (void *)0x800000010047CE60;
      v23._countAndFlagsBits = 0xD00000000000004DLL;
      String.append(_:)(v23);
      ObjectType = swift_getObjectType(v48);
      dispatch thunk of GroupSessionProvider.activity.getter(ObjectType, v41);
      v25 = sub_100019C6C(&qword_1005D22C8, (uint64_t (*)(uint64_t))&type metadata accessor for EditNoteActivity, (uint64_t)&protocol conformance descriptor for EditNoteActivity);
      v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v42, v25);
      object = v26._object;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(object);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v18, v42);
      v28._countAndFlagsBits = 41;
      v28._object = (void *)0xE100000000000000;
      String.append(_:)(v28);
      v29 = v52;
      *(_QWORD *)(v0 + 32) = sub_1003A4190(v51, v52, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v19 + 24);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v12, type, "Failed assertion at %s:%lu: %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy(v44, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      swift_unknownObjectRelease_n(v48, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v46, v47);
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 48);

      swift_unknownObjectRelease_n(v30, 2);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    }
  }
  swift_release(v5);
  v32 = *(_QWORD *)(v0 + 104);
  v31 = *(_QWORD *)(v0 + 112);
  v33 = *(_QWORD *)(v0 + 56);
  v34 = *(int **)(v0 + 64);
  v35 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(v3);
  v36 = swift_getObjectType(v35);
  dispatch thunk of GroupSessionProvider.activity.getter(v36, v33);
  *(_BYTE *)(v31 + *(int *)(v32 + 24)) = 0;
  v37 = v31 + *(int *)(v32 + 20);
  *(_QWORD *)v37 = v35;
  *(_QWORD *)(v37 + 8) = v33;
  *(_BYTE *)(v37 + 16) = 0;
  v38 = v34[1];
  v49 = (uint64_t (*)(_QWORD))((char *)v34 + *v34);
  swift_unknownObjectRetain(v35);
  v39 = (_QWORD *)swift_task_alloc(v38);
  *(_QWORD *)(v0 + 160) = v39;
  *v39 = v0;
  v39[1] = sub_100189AC4;
  return v49(*(_QWORD *)(v0 + 112));
}

uint64_t sub_100189AC4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_task_switch(sub_100189B18, 0, 0);
}

uint64_t sub_100189B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_100145264(v2, type metadata accessor for FastSync.LeaveActivityAction);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100189B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v10 = type metadata accessor for FastSync.LeaveActivityAction(0);
  v8[9] = v10;
  v8[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  v8[11] = v11;
  v12 = sub_100012E18(&qword_1005D22E0);
  v13 = sub_100012E18(&qword_1005D7A90);
  *v11 = v8;
  v11[1] = sub_100189C38;
  return Task.result.getter(v8 + 2, a4, v12, v13, &protocol self-conformance witness table for Error);
}

uint64_t sub_100189C38()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_task_switch(sub_100189C8C, 0, 0);
}

uint64_t sub_100189C8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t ObjectType;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD);

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(int **)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v0 + 104) = v7;
  v8 = *(_BYTE *)(v0 + 32);
  *(_BYTE *)(v0 + 33) = v8;
  ObjectType = swift_getObjectType(v5);
  dispatch thunk of GroupSessionProvider.activity.getter(ObjectType, v3);
  *(_BYTE *)(v1 + *(int *)(v2 + 24)) = 0;
  v10 = v1 + *(int *)(v2 + 20);
  *(_QWORD *)v10 = v6;
  *(_QWORD *)(v10 + 8) = v7;
  *(_BYTE *)(v10 + 16) = v8;
  sub_10018B6BC(v6, v7, v8);
  v13 = (uint64_t (*)(_QWORD))((char *)v4 + *v4);
  v11 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 112) = v11;
  *v11 = v0;
  v11[1] = sub_100189D5C;
  return v13(*(_QWORD *)(v0 + 80));
}

uint64_t sub_100189D5C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));
  return swift_task_switch(sub_100189DB0, 0, 0);
}

uint64_t sub_100189DB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  sub_10018B6C8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 33));
  sub_100145264(v1, type metadata accessor for FastSync.LeaveActivityAction);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100189E00()
{
  uint64_t v0;
  __int128 *v1;
  __int128 v2[2];
  _BYTE v3[32];

  v1 = (__int128 *)(v0 + *(int *)(type metadata accessor for FastSyncStateMachine(0) + 32));
  sub_10013B100(v1, (uint64_t)v2);
  sub_10013B100(v2, (uint64_t)v3);
  __asm { BR              X11 }
}

void sub_100189E80(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[10];
  uint64_t v14;

  v13[9] = a1 & 0x1FFFFFFFFFFFFFFFLL;
  if (qword_1005CEA10 != -1)
    swift_once(&qword_1005CEA10, sub_100186C68);
  v1 = type metadata accessor for Logger(0);
  sub_10012A0B0(v1, (uint64_t)qword_1005D21F8);
  sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
  v2 = sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v14 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186204);
    sub_100186CB0();
    v8 = v7;
    v10 = v9;
    sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    v11 = sub_1003A4190(v8, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v5 + 4);
    swift_bridgeObjectRelease(v10);
    sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "didLeaveActivity(): No state transition for provider unrelated to current state: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {
    sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
    sub_10018B038(v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100186344);
  }

}

uint64_t sub_10018A46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int8x16_t *v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  int8x16_t v21;
  int8x8_t v22;
  BOOL v23;
  char v24;
  uint64_t result;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a3;
  v41 = a2;
  v7 = sub_100012E18(&qword_1005D4680);
  __chkstk_darwin(v7);
  v37 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D2218);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for EditNoteActivity(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FastSyncStateMachine(0);
  v17 = (int8x16_t *)(v4 + *(int *)(v16 + 32));
  v18 = v17[2].u64[0];
  v19 = v18 >> 61;
  v20 = v18 >> 61 == 2 || (_DWORD)v19 == 4;
  v40 = a1;
  v38 = v16;
  if (v20
    || (_DWORD)v19 == 5
    && ((v21 = vorrq_s8(*v17, v17[1]),
         v22 = vorr_s8(*(int8x8_t *)v21.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)),
         v18 == 0xA000000000000000)
      ? (v23 = *(_QWORD *)&v22 == 0)
      : (v23 = 0),
        v23))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    sub_100012CE8(v41, (uint64_t)v11, &qword_1005D2218);
    sub_100012DDC((uint64_t)v11, &qword_1005D2218);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
    sub_100012CE8(v41, (uint64_t)v11, &qword_1005D2218);
    v24 = sub_10018A7A0((uint64_t)v15, (uint64_t)v11);
    sub_100012DDC((uint64_t)v11, &qword_1005D2218);
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if ((v24 & 1) == 0)
      return result;
  }
  v26 = 1 << ((unint64_t)v17[2].i64[0] >> 61);
  v28 = v39;
  v27 = v40;
  if ((v26 & 0x2C) == 0)
  {
    if ((v26 & 3) != 0)
    {
      v29 = type metadata accessor for TaskPriority(0);
      v30 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v37, 1, 1, v29);
      v31 = swift_allocObject(&unk_10055BD18, 32, 7);
      *(_QWORD *)(v31 + 16) = v28;
      *(_QWORD *)(v31 + 24) = a4;
      swift_retain(a4);
      sub_100189148();
      swift_release(v31);
      sub_100012DDC(v30, &qword_1005D4680);
    }
    else
    {
      v32 = v17[1].i64[0];
      v33 = v17->i64[0];
      swift_unknownObjectRetain(v17->i64[0]);
      swift_errorRetain(v32);
      swift_unknownObjectRelease(v33, v34);
      swift_errorRelease(v32);
    }
    v27 = v40;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v4, v27, v12);
  sub_10018B8BC(v41, v4 + *(int *)(v38 + 20));
  v35 = swift_allocObject(&unk_10055BCF0, 32, 7);
  *(_QWORD *)(v35 + 16) = v28;
  *(_QWORD *)(v35 + 24) = a4;
  swift_retain(a4);
  sub_100187694();
  return swift_release(v35);
}

uint64_t sub_10018A7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  void *v28;
  void *v29;
  id v30;
  char v31;
  char v32;
  id v33;
  uint64_t v35;

  v3 = v2;
  v5 = type metadata accessor for FastSyncStateMachine(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D2218);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v35 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v35 - v16;
  v18 = EditNoteActivity.id.getter(v15);
  v20 = v19;
  v22 = EditNoteActivity.id.getter(v18);
  v23 = v21;
  if (v18 == v22 && v20 == v21)
  {
    swift_bridgeObjectRelease_n(v20, 2);
    sub_100012CE8(a2, (uint64_t)v17, &qword_1005D2218);
    sub_100145220(v3, (uint64_t)v7, type metadata accessor for FastSyncStateMachine);
  }
  else
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v22, v21, 0);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v23);
    sub_100012CE8(a2, (uint64_t)v17, &qword_1005D2218);
    sub_100145220(v3, (uint64_t)v7, type metadata accessor for FastSyncStateMachine);
    if ((v24 & 1) == 0)
    {
      sub_100145264((uint64_t)v7, type metadata accessor for FastSyncStateMachine);
      sub_100012DDC((uint64_t)v17, &qword_1005D2218);
      goto LABEL_18;
    }
  }
  sub_100012CE8((uint64_t)v17, (uint64_t)v14, &qword_1005D2218);
  v25 = sub_100012E18(&qword_1005D2210);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v14, 1, v25) == 1)
  {
    sub_100012DDC((uint64_t)v14, &qword_1005D2218);
    v28 = 0;
  }
  else
  {
    v28 = (void *)CloudRecordSnapshot.id.getter(v25);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
  }
  sub_100012CE8((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v11, &qword_1005D2218);
  if (v27(v11, 1, v25) == 1)
  {
    sub_100012DDC((uint64_t)v11, &qword_1005D2218);
    if (!v28)
    {
      v29 = 0;
LABEL_15:
      sub_100145264((uint64_t)v7, type metadata accessor for FastSyncStateMachine);
      sub_100012DDC((uint64_t)v17, &qword_1005D2218);
      if (!v29)
      {
        v32 = 0;
        return v32 & 1;
      }

      goto LABEL_18;
    }
LABEL_14:
    v33 = v28;
    sub_100145264((uint64_t)v7, type metadata accessor for FastSyncStateMachine);
    sub_100012DDC((uint64_t)v17, &qword_1005D2218);

LABEL_18:
    v32 = 1;
    return v32 & 1;
  }
  v29 = (void *)CloudRecordSnapshot.id.getter(v25);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  if (!v28)
    goto LABEL_15;
  if (!v29)
    goto LABEL_14;
  sub_1000163BC(0, &qword_1005DB1B0, CKRecordID_ptr);
  v30 = v28;
  v31 = static NSObject.== infix(_:_:)(v30);
  sub_100145264((uint64_t)v7, type metadata accessor for FastSyncStateMachine);
  sub_100012DDC((uint64_t)v17, &qword_1005D2218);

  v32 = v31 ^ 1;
  return v32 & 1;
}

uint64_t sub_10018AB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  v4 = type metadata accessor for FastSync.PresenceAction(0);
  v3[11] = v4;
  v5 = (*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v5);
  v3[13] = swift_task_alloc(v5);
  v3[14] = swift_task_alloc(v5);
  return swift_task_switch(sub_10018ABA8, 0, 0);
}

uint64_t sub_10018ABA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t **v4;
  uint64_t (*v6)(uint64_t);

  v1 = v0[14];
  v2 = v0[11];
  v3 = (int *)v0[9];
  sub_100145220(v0[8], v1, type metadata accessor for FastSync.LeaveActivityAction);
  swift_storeEnumTagMultiPayload(v1, v2, 1);
  v6 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
  v4 = (uint64_t **)swift_task_alloc(v3[1]);
  v0[15] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_10018AC38;
  return v6(v0[14]);
}

uint64_t sub_10018AC38()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  return swift_task_switch(sub_10018AC8C, 0, 0);
}

uint64_t sub_10018AC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  sub_100145220(*(_QWORD *)(v0 + 112), v1, type metadata accessor for FastSync.PresenceAction);
  if (swift_getEnumCaseMultiPayload(v1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 64);
    sub_100145264(v6, type metadata accessor for FastSync.LeaveActivityAction);
    sub_10018BA10(v4, v6);
    v7 = v5;
  }
  else
  {
    swift_unknownObjectRelease(**(_QWORD **)(v0 + 104), v3);
    if (qword_1005CEA10 != -1)
      swift_once(&qword_1005CEA10, sub_100186C68);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_10012A0B0(v8, (uint64_t)qword_1005D21F8);
    v10 = static os_log_type_t.fault.getter(v9);
    v11 = v10;
    v12 = Logger.logObject.getter(v10);
    v13 = v11;
    v14 = os_log_type_enabled(v12, v11);
    v15 = *(_QWORD *)(v0 + 112);
    if (v14)
    {
      v28 = *(_QWORD *)(v0 + 96);
      v29 = *(_QWORD *)(v0 + 88);
      v16 = swift_slowAlloc(32, -1);
      v17 = swift_slowAlloc(64, -1);
      v30 = v17;
      *(_DWORD *)v16 = 136315650;
      v18 = StaticString.description.getter("MobileNotes/FastSyncStateMachine.swift", 38, 2);
      v20 = v19;
      *(_QWORD *)(v0 + 40) = sub_1003A4190(v18, v19, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v16 + 4);
      swift_bridgeObjectRelease(v20);
      *(_WORD *)(v16 + 12) = 2048;
      *(_QWORD *)(v0 + 48) = 276;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v16 + 14);
      *(_WORD *)(v16 + 22) = 2080;
      v31 = 0;
      v32 = 0xE000000000000000;
      _StringGuts.grow(_:)(60);
      v21._object = (void *)0x800000010047CEB0;
      v21._countAndFlagsBits = 0xD00000000000003ALL;
      String.append(_:)(v21);
      swift_beginAccess(v15, v0 + 16, 0, 0);
      sub_100145220(v15, v28, type metadata accessor for FastSync.PresenceAction);
      v22._countAndFlagsBits = String.init<A>(reflecting:)(v28, v29);
      object = v22._object;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(object);
      v24 = v32;
      *(_QWORD *)(v0 + 56) = sub_1003A4190(v31, v32, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v16 + 24);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed assertion at %s:%lu: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

    }
    v7 = v15;
  }
  sub_100145264(v7, type metadata accessor for FastSync.PresenceAction);
  v25 = *(_QWORD *)(v0 + 104);
  v26 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018AFC8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100145358;
  return v6(a1);
}

uint64_t sub_10018B028@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(result + 28));
  return result;
}

_QWORD *sub_10018B038(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4]);
  return a1;
}

uint64_t sub_10018B06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_100012E18(&qword_1005D4680);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10018B0D0, 0, 0);
}

uint64_t sub_10018B0D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[4];
  v4 = v0[5];
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_10055BCA0, 40, 7);
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v3;
  swift_retain(v3);
  sub_100292C00(v1, (uint64_t)&unk_1005D2310, (uint64_t)v7);
  sub_100012DDC(v1, &qword_1005D4680);
  v6(v1, 1, 1, v5);
  v8 = (_QWORD *)swift_allocObject(&unk_10055BCC8, 48, 7);
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v4;
  v8[5] = v2;
  sub_100292C00(v1, (uint64_t)&unk_1005D2320, (uint64_t)v8);
  sub_100012DDC(v1, &qword_1005D4680);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.next(isolation:)[1]);
  v0[8] = v9;
  v10 = sub_100012E18(&qword_1005D2328);
  *v9 = v0;
  v9[1] = sub_10018B234;
  return TaskGroup.next(isolation:)(v0 + 9, 0, 0, v10);
}

uint64_t sub_10018B234()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  return swift_task_switch(sub_10018B288, 0, 0);
}

uint64_t sub_10018B288()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 == 2)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 56);
    **(_BYTE **)(v0 + 16) = v1 & 1;
    TaskGroup.cancelAll()();
    swift_task_dealloc(v2);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_10018B2EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_10018B34C;
  return Task<>.value.getter();
}

uint64_t sub_10018B34C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 24));
  return swift_task_switch(sub_10018B3A0, 0, 0);
}

uint64_t sub_10018B3A0()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018B3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v6 = type metadata accessor for ContinuousClock(0);
  v5[5] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[6] = v7;
  v5[7] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10018B418, 0, 0);
}

uint64_t sub_10018B418()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  ContinuousClock.init()();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1005DCAB0 + dword_1005DCAB0);
  v1 = (_QWORD *)swift_task_alloc(unk_1005DCAB4);
  v0[8] = v1;
  *v1 = v0;
  v1[1] = sub_10018B490;
  return v3(v0[3], v0[4], 0, 0, 1);
}

uint64_t sub_10018B490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0)
    v6 = sub_10018B548;
  else
    v6 = sub_10018B510;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10018B510()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 16) = 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018B548()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 56);
  **(_BYTE **)(v0 + 16) = 1;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018B590(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1005D22D4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100145358;
  return sub_100189520(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10018B628(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1005D22EC);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100145358;
  return sub_100189B7C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10018B6BC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_errorRetain(a1);
  else
    return swift_unknownObjectRetain(a1);
}

uint64_t sub_10018B6C8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return swift_unknownObjectRelease(a1, a2);
}

uint64_t sub_10018B6D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc(dword_1005D22FC);
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_100145358;
  return sub_10018B06C(a1, a2, v6, v7, v8);
}

uint64_t sub_10018B750()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_10018B758()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10018B768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);
  swift_release(*(_QWORD *)(v2 + 32));
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_10018B794(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)swift_task_alloc(dword_1005D230C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100145358;
  v3[2] = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_10018B34C;
  return Task<>.value.getter();
}

uint64_t sub_10018B820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 16), a2);
  return swift_deallocObject(v2, 48, 7);
}

uint64_t sub_10018B844(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1005D231C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_100130768;
  return sub_10018B3B4(a1, v4, v5, v7, v6);
}

uint64_t sub_10018B8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D2218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018B904()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018B928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D2334);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100145358;
  v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc(v4[1]);
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_100145358;
  return v8(a1);
}

uint64_t sub_10018B9B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1005D2344);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_100145358;
  return sub_10018AB2C(a1, v5, v4);
}

uint64_t sub_10018BA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FastSync.LeaveActivityAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10018BA54(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  swift_unknownObjectRelease(v2[2], a2);
  swift_release(v2[4]);
  swift_unknownObjectRelease(v2[5], v3);
  swift_release(v2[8]);
  swift_unknownObjectRelease(v2[9], v4);
  return swift_deallocObject(v2, 88, 7);
}

uint64_t sub_10018BA98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = v1[3];
  v12 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[7];
  v9 = v1[8];
  v10 = (_QWORD *)swift_task_alloc(dword_1005D2354);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_100145358;
  return sub_1001883DC(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10018BB44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  swift_unknownObjectRelease(v2[2], a2);
  swift_release(v2[4]);
  swift_unknownObjectRelease(v2[5], v3);
  swift_release(v2[8]);
  return swift_deallocObject(v2, 72, 7);
}

uint64_t sub_10018BB80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc(dword_1005D2364);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_100130768;
  return sub_100188178(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10018BC14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  swift_unknownObjectRelease(v2[2], a2);
  swift_unknownObjectRelease(v2[4], v3);
  swift_release(v2[7]);
  return swift_deallocObject(v2, 64, 7);
}

uint64_t sub_10018BC48(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1005D2374);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_100145358;
  return sub_1001888BC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10018BCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005D2218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for FastSyncActivityState(uint64_t a1)
{
  return sub_100186344(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

uint64_t *initializeWithCopy for FastSyncActivityState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_100186204(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for FastSyncActivityState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_100186204(*a2, v4, v5, v6, v7);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  v12 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_100186344(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for FastSyncActivityState(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = v3;
  sub_100186344(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FastSyncActivityState(uint64_t a1, unsigned int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 > 0x1FFFFA && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 2097147);
  if (((((*(_QWORD *)(a1 + 32) >> 43) >> 18) | (8
                                                             * ((*(_QWORD *)(a1 + 8) >> 57) & 0x78 | *(_QWORD *)(a1 + 8) & 7 | (*(_QWORD *)(a1 + 24) >> 50) & 0x3C00 | ((*(_QWORD *)(a1 + 24) & 7) << 7) | (*(_QWORD *)(a1 + 32) >> 43) & 0x20000 | ((*(_QWORD *)(a1 + 32) & 7) << 14)))) ^ 0x1FFFFF) >= 0x1FFFFA)
    v3 = -1;
  else
    v3 = (((*(_QWORD *)(a1 + 32) >> 43) >> 18) | (8
                                                              * ((*(_QWORD *)(a1 + 8) >> 57) & 0x78 | *(_QWORD *)(a1 + 8) & 7 | (*(_QWORD *)(a1 + 24) >> 50) & 0x3C00 | ((*(_QWORD *)(a1 + 24) & 7) << 7) | (*(_QWORD *)(a1 + 32) >> 43) & 0x20000 | ((*(_QWORD *)(a1 + 32) & 7) << 14)))) ^ 0x1FFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for FastSyncActivityState(uint64_t result, unsigned int a2, unsigned int a3)
{
  unint64_t v3;
  uint64x2_t v4;

  if (a2 >= 0x1FFFFB)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 2097147;
    if (a3 > 0x1FFFFA)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 > 0x1FFFFA)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 3) & 0x3FFFF) - (a2 << 18);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 16) = 0;
      v4 = (uint64x2_t)vdupq_n_s64(v3);
      *(int8x16_t *)(result + 24) = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1004579C0), (int8x16_t)vdupq_n_s64(7uLL)), vandq_s8((int8x16_t)vshlq_u64(v4, (uint64x2_t)xmmword_1004579D0), (int8x16_t)vdupq_n_s64(0xF000000000000000)));
    }
  }
  return result;
}

uint64_t sub_10018BF78(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32) >> 61;
  if (v1 <= 4)
    return v1;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_10018BF94(uint64_t result)
{
  *(_QWORD *)(result + 32) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_10018BFA4(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 < 5)
  {
    v2 = result[3] & 0xFFFFFFFFFFFFFF8;
    v3 = result[4] & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
    result[1] &= 0xFFFFFFFFFFFFFF8uLL;
    result[3] = v2;
    result[4] = v3;
  }
  else
  {
    *result = (a2 - 5);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    result[4] = 0xA000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for FastSyncActivityState()
{
  return &type metadata for FastSyncActivityState;
}

uint64_t ICArchiveImporter.Configuration.retainsIdentifiers.getter(char a1)
{
  return a1 & 1;
}

void sub_10018C074(void *a1, uint64_t (*a2)(), char a3, int a4, char a5, void *a6, void *a7, void *a8)
{
  void **v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void **v48;
  uint64_t (*v49)(uint64_t);
  id v50;
  id v51;
  void **v52;
  uint64_t (*v53)(uint64_t);
  void **v54;
  uint64_t (*v55)(uint64_t);
  void **v56;
  void **v57;
  uint64_t (*v58)(uint64_t);
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void **v66;
  id v67;
  unint64_t v68;
  uint64_t v69;
  void **v70;
  uint64_t (*v71)();
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  void **v75;
  uint64_t (*v76)();
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  void **v86;
  void **v87;
  void *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void **inited;
  void **v102;
  uint64_t v103;
  id v104;
  void *v105;
  void **v106;
  id v107;
  void **v108;
  uint64_t (*v109)();
  uint64_t v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t);
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  void *v117;
  uint64_t *v118;
  void *v119;
  void *v120;
  uint64_t v121;
  char v122;
  id v123;
  uint64_t *v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void *v140;
  char *v141;
  void *v142;
  void *v143;
  id v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t (*v151)();
  void **v152;
  uint64_t (*v153)();
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(uint64_t);
  uint64_t v157;
  uint64_t (*v158)();
  void *v159;
  void **v160;
  uint64_t (*v161)();
  uint64_t v162;
  uint64_t v163;
  void *v164;
  void **v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  uint64_t (*v169)(char **, void **);
  id v170;
  NSObject *v171;
  uint64_t v172;
  uint64_t v173;
  void **v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t (*v179)(uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  Class isa;
  uint64_t v186;
  unint64_t v187;
  void **v188;
  uint64_t v189;
  uint64_t (*v190)(uint64_t);
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t (*v194)(uint64_t);
  uint64_t v195;
  uint64_t v196;
  id v197;
  id v198;
  uint64_t v199;
  id v200;
  uint64_t *v201;
  uint64_t v202;
  id v203;
  void **v204;
  uint64_t (*v205)();
  char *v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  void **v211;
  int v212;
  uint64_t v213;
  uint64_t (*v214)(uint64_t);
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t (*v219)(uint64_t);
  uint64_t v220;
  uint64_t v221;
  void **v222;
  __int128 v223;
  id v224;
  void **v225;
  id v226;
  uint64_t (*v227)();
  uint64_t v228;
  uint64_t v229;
  void *v230;
  uint64_t v231;
  _QWORD v232[4];
  void **v233;
  uint64_t v234;
  uint64_t (*v235)(uint64_t);
  char *v236;
  uint64_t (*v237)();
  uint64_t (*v238)(char **, void **);
  uint64_t v239;
  uint64_t (*v240)(uint64_t);
  uint64_t v241;
  unsigned __int8 v242;
  uint64_t v243;
  void **v244;
  uint64_t v245;
  uint64_t (*v246)(uint64_t);
  char *v247;
  uint64_t (*v248)();
  uint64_t (*v249)(char **, void **);
  uint64_t v250;
  uint64_t (*v251)(uint64_t);
  uint64_t v252;
  unsigned __int8 v253;
  uint64_t v254;
  _QWORD v255[4];
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;

  v224 = a6;
  LODWORD(v225) = a4;
  v227 = a2;
  v14 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v14);
  v16 = (char *)&v196 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100012E18(&qword_1005D1508);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v196 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v22 = (char *)&v196 - v21;
  if (!a1 || !a7 || !a8)
    return;
  v226 = a1;
  *(_QWORD *)&v223 = a7;
  v23 = a7;
  v24 = a8;
  v25 = v23;
  *((_QWORD *)&v223 + 1) = v24;
  v26 = v24;
  objc_msgSend(v226, "setCurrentNoteContainerViewMode:", v227);
  v27 = objc_msgSend(v226, "selectionState");
  if (!v27)
  {

    return;
  }
  v28 = v27;
  v210 = v22;
  v216 = v16;
  v217 = v20;
  v222 = v8;
  v29 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v31 = v30;

  v32 = type metadata accessor for JSONDecoder(0);
  v33 = swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  v34 = JSONDecoder.init()(v33);
  v35 = sub_100012E18((uint64_t *)&unk_1005D6860);
  v36 = sub_100016638(&qword_1005D2530, (uint64_t *)&unk_1005D6860, (uint64_t)&protocol conformance descriptor for ICNavigableQueue<A>);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v233, v35, v29, v31, v35, v36);
  v202 = v35;
  v208 = v31;
  v209 = v29;
  swift_release(v34);
  v37 = v235;
  v204 = v233;
  v205 = v237;
  v211 = (void **)v238;
  v38 = v240;
  v206 = v236;
  v207 = v239;
  v213 = v241;
  v212 = v242;
  v39 = v243;
  v244 = v233;
  v245 = v234;
  v246 = v235;
  v214 = v235;
  v215 = v234;
  v251 = v240;
  v218 = v243;
  v219 = v240;
  v252 = v241;
  v253 = v242;
  v254 = v243;
  v40 = swift_allocObject(&unk_10055C068, 17, 7);
  *(_BYTE *)(v40 + 16) = a3 & 1;
  v41 = v40;
  v221 = v40;
  v42 = swift_allocObject(&unk_10055C090, 17, 7);
  v220 = v42;
  *(_BYTE *)(v42 + 16) = a5 & 1;
  *(_QWORD *)&v259 = sub_100194904;
  *((_QWORD *)&v259 + 1) = v41;
  *(_QWORD *)&v260 = sub_10018B750;
  *((_QWORD *)&v260 + 1) = v42;
  v261 = v223;
  v262 = 0u;
  v263 = 0u;
  v43 = swift_allocObject(&unk_10055C0B8, 104, 7);
  *(_QWORD *)(v43 + 16) = v222;
  v44 = v259;
  *(_OWORD *)(v43 + 40) = v260;
  v45 = v262;
  *(_OWORD *)(v43 + 56) = v261;
  *(_OWORD *)(v43 + 72) = v45;
  *(_OWORD *)(v43 + 88) = v263;
  *(_OWORD *)(v43 + 24) = v44;
  v46 = swift_allocObject(&unk_10055C0E0, 32, 7);
  *(_QWORD *)(v46 + 16) = sub_100194760;
  *(_QWORD *)(v46 + 24) = v43;
  v247 = (char *)sub_100194790;
  v248 = (uint64_t (*)())v46;
  v47 = v37;
  swift_bridgeObjectRetain_n(v38, 4);
  swift_bridgeObjectRetain_n(v39, 4);
  v48 = v204;
  v49 = v47;
  v50 = v25;
  v51 = v26;
  v52 = v48;
  v53 = v49;
  v204 = (void **)v50;
  v203 = v51;
  v54 = v52;
  v55 = v53;
  swift_retain(v221);
  swift_retain(v220);
  swift_retain(v46);
  v56 = v54;
  sub_100012C50((uint64_t)v206, (uint64_t)v205);
  v249 = sub_10018D648;
  v250 = 0;
  sub_100012C50((uint64_t)v211, v207);
  v57 = v56;
  v58 = v55;
  sub_100166B74((uint64_t)sub_100194790, v46);
  sub_100166B74((uint64_t)sub_10018D648, 0);

  v233 = v57;
  v234 = v215;
  v235 = v214;
  v236 = (char *)sub_100194790;
  v237 = (uint64_t (*)())v46;
  v238 = sub_10018D648;
  v60 = v218;
  v59 = v219;
  v239 = 0;
  v240 = v219;
  v241 = v213;
  v242 = v212;
  v243 = v218;
  __chkstk_darwin(v61);
  *(&v196 - 2) = (uint64_t)&v233;
  v62 = (void *)type metadata accessor for ICSelectionStateModel(0);
  OS_dispatch_queue.sync<A>(execute:)(v255, sub_100194798, &v196 - 4, v62);
  v205 = (uint64_t (*)())v58;

  v211 = v57;
  v207 = v46;
  sub_100012C50((uint64_t)sub_100194790, v46);
  sub_100012C50((uint64_t)sub_10018D648, 0);
  swift_bridgeObjectRelease(v60);
  swift_bridgeObjectRelease(v59);
  v63 = (char *)v255[0];
  v65 = v220;
  v64 = v221;
  v255[0] = sub_100194904;
  v255[1] = v221;
  v255[2] = sub_10018B750;
  v255[3] = v220;
  v256 = v223;
  v257 = 0u;
  v258 = 0u;
  v66 = v204;
  v67 = v203;
  swift_retain(v64);
  swift_retain(v65);
  sub_10018D654((uint64_t)v63, 0, (uint64_t)v255);
  *(_QWORD *)&v223 = v67;

  swift_release(v65);
  swift_release(v64);
  v203 = v62;
  *((_QWORD *)&v223 + 1) = objc_msgSend(objc_allocWithZone((Class)v62), "init");
  v206 = v63;
  v204 = v66;
  if (!v227)
  {
    if ((v225 & 1) == 0)
    {
      v87 = v211;

      v71 = v205;
      swift_bridgeObjectRelease_n(v219, 2);
      swift_bridgeObjectRelease_n(v218, 2);
      v68 = v208;
      v69 = v209;
LABEL_47:
      objc_msgSend(v226, "setIsSupplementaryContentVisible:", 1);
      goto LABEL_48;
    }
    v75 = v211;
    v76 = v205;
    v77 = v207;
    sub_100166B74((uint64_t)sub_100194790, v207);
    sub_100166B74((uint64_t)sub_10018D648, 0);

    v201 = &v196;
    v79 = __chkstk_darwin(v78);
    *(&v196 - 2) = (uint64_t)v222;
    *(&v196 - 1) = (uint64_t)&v259;
    v233 = v75;
    v234 = v215;
    v235 = v214;
    v236 = (char *)sub_100194790;
    v237 = (uint64_t (*)())v77;
    v238 = sub_10018D648;
    v81 = v218;
    v80 = v219;
    v239 = 0;
    v240 = v219;
    v241 = v213;
    v242 = v212;
    v243 = v218;
    __chkstk_darwin(v79);
    *(&v196 - 4) = (uint64_t)&v233;
    *(&v196 - 3) = (uint64_t)sub_1001947F8;
    *(&v196 - 2) = v82;
    v83 = sub_100012E18(&qword_1005D2540);
    OS_dispatch_queue.sync<A>(execute:)(v232, sub_100194800, &v196 - 6, v83);
    v227 = v76;

    v225 = v75;
    sub_100012C50((uint64_t)sub_100194790, v77);
    sub_100012C50((uint64_t)sub_10018D648, 0);
    swift_bridgeObjectRelease(v81);
    swift_bridgeObjectRelease(v80);
    v84 = (void *)v232[0];
    if (v232[0])
    {
      v85 = (void *)sub_1000189CC();
      if (!v85)
        v85 = (void *)sub_1000187EC();

    }
    else
    {
      v85 = 0;
    }
    v66 = v204;
    v88 = (void *)sub_1000189CC();
    if (!v88)
    {
      v88 = (void *)sub_1000187EC();
      if (!v88)
      {
        v89 = v85;
        v88 = v85;
      }
    }
    v201 = v88;
    v90 = sub_100018628();
    if (v90)
    {
      v91 = v90;
      v92 = objc_opt_self(NSManagedObjectID);
      v94 = swift_dynamicCastObjCClass(v91, v92);
      if (v94)
        goto LABEL_30;
      swift_unknownObjectRelease(v91, v93);
    }
    v95 = sub_100018628();
    if (v95)
    {
      v96 = v95;
      v97 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
      v94 = swift_dynamicCastObjCClass(v96, v97);
      if (v94)
        goto LABEL_30;
      swift_unknownObjectRelease(v96, v98);
    }
    v99 = sub_100018D60();
    if (!v99)
    {
      v103 = 0;
      if (v88)
      {
LABEL_31:
        v199 = v103;
        v200 = v85;
        v197 = v88;
        v104 = objc_allocWithZone((Class)type metadata accessor for FolderListSelectionValidator());
        v105 = (void *)objc_opt_self(ICAccount);
        v106 = v66;
        v107 = (id)v223;
        v198 = objc_msgSend(v104, "initWithModernContext:htmlContext:hidesSystemPaperNotesInCustomFolders:hidesMathNotesInCustomFolders:hidesCallNotesInCustomFolders:", v106, v107, objc_msgSend(v105, "hidesSystemPaperNotesInCustomFolders"), objc_msgSend(v105, "hidesMathNotesInCustomFolders"), objc_msgSend(v105, "hidesCallNotesInCustomFolders"));

        v108 = v225;
        v109 = v227;
        v110 = v207;
        sub_100166B74((uint64_t)sub_100194790, v207);
        sub_100166B74((uint64_t)sub_10018D648, 0);

        v233 = v108;
        v234 = v215;
        v235 = v214;
        v236 = (char *)sub_100194790;
        v237 = (uint64_t (*)())v110;
        v238 = sub_10018D648;
        v111 = v218;
        v112 = v219;
        v239 = 0;
        v240 = v219;
        v241 = v213;
        v242 = v212;
        v243 = v218;
        __chkstk_darwin(v113);
        *(&v196 - 2) = (uint64_t)&v233;
        OS_dispatch_queue.sync<A>(execute:)(v232, sub_1001948EC, &v196 - 4, v203);

        sub_100012C50((uint64_t)sub_100194790, v110);
        sub_100012C50((uint64_t)sub_10018D648, 0);
        v114 = v111;
        v115 = v198;
        swift_bridgeObjectRelease(v114);
        swift_bridgeObjectRelease(v112);
        v116 = (void *)v232[0];
        v117 = (void *)sub_100018D60();

        v118 = v201;
        v119 = (void *)sub_1001BAC5C(v201);
        if (v119)
        {
          v120 = v119;
          v121 = v199;
          v122 = sub_1001BAD84(v119, v199, v117);

          swift_bridgeObjectRelease(v121);
          v69 = v209;
          v71 = v205;
          v63 = v206;
          v66 = v204;
          if ((v122 & 1) == 0)
          {

            v123 = v224;
            v118 = (uint64_t *)v224;
            objc_msgSend(v226, "setIsSupplementaryContentVisible:", 1);
            if (!v123)
            {
              v68 = v208;
              goto LABEL_48;
            }
            v197 = v123;
LABEL_37:
            v124 = v118;
            if (objc_msgSend(v124, "ic_isNoteType"))
            {
              if (!objc_msgSend(v124, "ic_isNoteType"))
              {
LABEL_44:

                v68 = v208;
                goto LABEL_48;
              }
              v125 = v210;
              *v210 = v197;
              v125[1] = 0;
              v126 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
              v127 = v125;
              v128 = v126;
              v129 = 4;
            }
            else
            {
              if (!objc_msgSend(v124, "ic_isInvitationType")
                || !objc_msgSend(v124, "ic_isInvitationType"))
              {
                goto LABEL_44;
              }
              v125 = v210;
              *v210 = v197;
              v125[1] = 0;
              v126 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
              v127 = v125;
              v128 = v126;
              v129 = 5;
            }
            swift_storeEnumTagMultiPayload(v127, v128, v129);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v125, 0, 1, v126);
            v130 = *((_QWORD *)&v223 + 1) + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
            swift_beginAccess(*((_QWORD *)&v223 + 1) + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, &v233, 33, 0);
            v124 = v124;
            sub_100164108((uint64_t)v125, v130, &qword_1005D1508);
            swift_endAccess(&v233);
            goto LABEL_44;
          }
        }
        else
        {

          swift_bridgeObjectRelease(v199);
          v69 = v209;
          v71 = v205;
          v63 = v206;
          v66 = v204;
        }
        objc_msgSend(v226, "setIsSupplementaryContentVisible:", 1);
        goto LABEL_37;
      }
      goto LABEL_46;
    }
    v94 = v99;
LABEL_30:
    v100 = sub_100012E18(&qword_1005CF6F0);
    inited = (void **)swift_initStackObject(v100, &v229);
    *((_OWORD *)inited + 1) = xmmword_100456F30;
    inited[4] = (void *)v94;
    v233 = inited;
    specialized Array._endMutation()(inited);
    v102 = v233;
    v103 = sub_10020BBA8((uint64_t)v233);
    swift_bridgeObjectRelease(v102);
    if (v88)
      goto LABEL_31;
LABEL_46:

    swift_bridgeObjectRelease(v219);
    swift_bridgeObjectRelease(v81);
    swift_bridgeObjectRelease(v103);

    v68 = v208;
    v69 = v209;
    v71 = v205;
    v63 = v206;
    goto LABEL_47;
  }
  v68 = v208;
  v69 = v209;
  if (v227 == (uint64_t (*)())1)
  {
    v70 = v211;

    v71 = v205;
    swift_bridgeObjectRelease_n(v219, 2);
    swift_bridgeObjectRelease_n(v218, 2);
    if (v63[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_selectionReason] == 1)
    {
      v72 = (uint64_t)&v63[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
      swift_beginAccess(&v63[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], &v228, 0, 0);
      v73 = v210;
      sub_100012CE8(v72, (uint64_t)v210, &qword_1005D1508);
      v74 = *((_QWORD *)&v223 + 1) + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
      swift_beginAccess(*((_QWORD *)&v223 + 1) + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection, &v233, 33, 0);
      sub_100164108((uint64_t)v73, v74, &qword_1005D1508);
      swift_endAccess(&v233);
    }
  }
  else
  {
    v86 = v211;

    v71 = v205;
    swift_bridgeObjectRelease_n(v219, 2);
    swift_bridgeObjectRelease_n(v218, 2);
  }
LABEL_48:
  v131 = sub_100018628();
  v227 = 0;
  if (v131)
  {
    v132 = v131;
    v133 = objc_opt_self(NSManagedObjectID);
    v134 = swift_dynamicCastObjCClass(v132, v133);
    if (v134)
      goto LABEL_55;
    swift_unknownObjectRelease(v132, v135);
  }
  v136 = sub_100018628();
  if (v136)
  {
    v137 = v136;
    v138 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
    v134 = swift_dynamicCastObjCClass(v137, v138);
    if (v134)
      goto LABEL_55;
    swift_unknownObjectRelease(v137, v139);
  }
  v134 = sub_100018D60();
LABEL_55:
  v140 = (void *)v134;
  v141 = (char *)*((_QWORD *)&v223 + 1);
  sub_10015C714(v134, 0);

  v142 = *(void **)&v63[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
  v143 = *(void **)&v141[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID];
  *(_QWORD *)&v141[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID] = v142;
  v144 = v142;

  v145 = (uint64_t)&v141[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&v141[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v232, 0, 0);
  v146 = (uint64_t)v217;
  sub_100012CE8(v145, (uint64_t)v217, &qword_1005D1508);
  v147 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  LODWORD(v145) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 48))(v146, 1, v147);
  sub_100012DDC(v146, &qword_1005D1508);
  if ((_DWORD)v145 == 1
    && (v148 = (uint64_t)&v141[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection],
        swift_beginAccess(&v141[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection], &v231, 0, 0), v149 = (uint64_t)v216, sub_100012CE8(v148, (uint64_t)v216, &qword_1005D1500), v150 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0), LODWORD(v148) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 48))(v149, 1, v150), sub_100012DDC(v149, &qword_1005D1500), (_DWORD)v148 == 1))
  {

    sub_10013DD30(v69, v68);
    swift_release(v207);
    swift_bridgeObjectRelease(v219);
    swift_bridgeObjectRelease(v218);

    swift_release(v220);
    swift_release(v221);
    v151 = (uint64_t (*)())v223;
  }
  else
  {
    v152 = v211;
    v153 = v71;
    v154 = v207;
    sub_100166B74((uint64_t)sub_100194790, v207);
    sub_100166B74((uint64_t)sub_10018D648, 0);

    v155 = swift_release(v154);
    v233 = v152;
    v234 = v215;
    v235 = v214;
    v236 = (char *)sub_100194790;
    v237 = (uint64_t (*)())v154;
    v238 = sub_10018D648;
    v157 = v218;
    v156 = v219;
    v239 = 0;
    v240 = v219;
    v241 = v213;
    v242 = v212;
    v243 = v218;
    __chkstk_darwin(v155);
    *(&v196 - 2) = (uint64_t)&v233;
    v158 = v227;
    OS_dispatch_queue.sync<A>(execute:)(&v230, sub_1001948EC, &v196 - 4, v203);

    sub_100012C50((uint64_t)sub_100194790, v154);
    sub_100012C50((uint64_t)sub_10018D648, 0);
    swift_bridgeObjectRelease(v157);
    swift_bridgeObjectRelease(v156);
    v159 = v230;
    v160 = v204;
    v161 = (uint64_t (*)())(id)v223;
    v162 = v221;
    swift_retain(v221);
    v163 = v220;
    swift_retain(v220);
    sub_10018D654((uint64_t)v159, 0, (uint64_t)v255);
    swift_release(v163);
    swift_release(v162);
    swift_retain(v162);
    swift_retain(v163);
    sub_10018D654((uint64_t)v141, 0, (uint64_t)v255);
    v227 = v161;

    v225 = v160;
    swift_release(v163);
    swift_release(v162);
    v224 = v159;
    if ((static NSObject.== infix(_:_:)(v141) & 1) == 0)
    {
      v164 = v141;
      v165 = v244;
      v166 = swift_allocObject(&unk_10055C108, 41, 7);
      *(_BYTE *)(v166 + 16) = 0;
      *(_QWORD *)(v166 + 24) = &v244;
      *(_QWORD *)(v166 + 32) = v141;
      *(_BYTE *)(v166 + 40) = 1;
      v167 = swift_allocObject(&unk_10055C130, 32, 7);
      *(_QWORD *)(v167 + 16) = sub_1001947D4;
      *(_QWORD *)(v167 + 24) = v166;
      v237 = sub_100194900;
      v238 = (uint64_t (*)(char **, void **))v167;
      v233 = _NSConcreteStackBlock;
      v234 = 1107296256;
      v235 = sub_100016618;
      v236 = (char *)&unk_10055C148;
      v168 = _Block_copy(&v233);
      v169 = v238;
      v170 = v164;
      v171 = v165;
      swift_retain(v167);
      swift_release(v169);
      dispatch_sync(v171, v168);

      _Block_release(v168);
      LOBYTE(v168) = swift_isEscapingClosureAtFileLocation(v167, "", 112, 710, 26, 1);
      swift_release(v166);
      swift_release(v167);
      if ((v168 & 1) != 0)
      {
        __break(1u);
        return;
      }
    }
    v172 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v172, *(unsigned int *)(v172 + 48), *(unsigned __int16 *)(v172 + 52));
    v173 = JSONEncoder.init()();
    v174 = v244;
    v175 = (uint64_t)v247;
    v176 = (uint64_t)v248;
    v177 = (uint64_t)v249;
    v178 = v250;
    v179 = v251;
    v180 = v254;
    v233 = v244;
    v234 = v245;
    v235 = v246;
    v236 = v247;
    v237 = v248;
    v238 = v249;
    v239 = v250;
    v240 = v251;
    v241 = v252;
    v242 = v253;
    v243 = v254;
    v219 = v246;
    v222 = v174;
    sub_100166B74(v175, v176);
    sub_100166B74(v177, v178);
    v181 = sub_100016638(&qword_1005D2538, (uint64_t *)&unk_1005D6860, (uint64_t)&protocol conformance descriptor for ICNavigableQueue<A>);
    *(_QWORD *)&v223 = v179;
    swift_bridgeObjectRetain(v179);
    swift_bridgeObjectRetain(v180);
    v182 = v173;
    v183 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v233, v202, v181);
    if (v158)
    {
      swift_release(v173);
      swift_errorRelease(v158);

      sub_100012C50(v175, v176);
      sub_100012C50(v177, v178);
      swift_bridgeObjectRelease(v180);
      swift_bridgeObjectRelease(v223);
      isa = 0;
    }
    else
    {
      v186 = v183;
      v187 = v184;

      sub_100012C50(v175, v176);
      sub_100012C50(v177, v178);
      swift_release(v182);
      swift_bridgeObjectRelease(v180);
      swift_bridgeObjectRelease(v223);
      isa = Data._bridgeToObjectiveC()().super.isa;
      sub_10013DD30(v186, v187);
    }
    objc_msgSend(v226, "setSelectionState:", isa);
    v188 = v225;

    sub_10013DD30(v209, v208);
    swift_release(v220);
    swift_release(v221);
    v151 = v227;
  }

  v190 = v246;
  v189 = (uint64_t)v247;
  v191 = (uint64_t)v248;
  v192 = (uint64_t)v249;
  v193 = v250;
  v194 = v251;
  v195 = v254;

  sub_100012C50(v189, v191);
  sub_100012C50(v192, v193);
  swift_bridgeObjectRelease(v195);
  swift_bridgeObjectRelease(v194);
}

void sub_10018D4FC(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  id v18;
  id v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  if (a1)
  {
    v6 = a3[8];
    v5 = a3[9];
    v7 = (uint64_t)(a3 + 5);
    v16 = *((_OWORD *)a3 + 2);
    v17 = *((_OWORD *)a3 + 3);
    v8 = a3[3];
    v9 = *a3;
    v15 = *(_OWORD *)(a3 + 1);
    sub_10014BD1C((uint64_t)(a3 + 4), (uint64_t)&v19, &qword_1005D2548);
    sub_10014BD1C(v7, (uint64_t)&v18, &qword_1005D2548);
    v10 = a3[6];
    v11 = a3[7];
    v12 = a3[8];
    v13 = a3[9];
    v20 = v9;
    v21 = v15;
    v22 = v8;
    v23 = v16;
    v24 = v17;
    v25 = v6;
    v26 = v5;
    swift_retain(v15);
    swift_retain(v8);
    sub_10019481C(&v19);
    sub_10019481C(&v18);
    sub_100166B74(v10, v11);
    sub_100166B74(v12, v13);
    v14 = a1;
    sub_10018D654((uint64_t)v14, 0, (uint64_t)&v20);
    swift_release(v8);
    swift_release(v15);
    sub_100194844(&v19);
    sub_100194844(&v18);
    sub_100012C50(v10, v11);
    sub_100012C50(v12, v13);

  }
}

uint64_t sub_10018D648(char **a1, void **a2)
{
  return sub_10018E42C(*a1, *a2);
}

void sub_10018D654(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  void (*v53)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  char *v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  id v67;
  char *v68;
  void *v69;
  void *v70;
  id v71;
  uint64_t v72;
  id v73;
  Swift::Int *v74;
  Swift::Int v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  id v101;
  Swift::Int v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  Swift::Int *v118;
  id v119;
  id v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  int64_t v125;
  uint64_t (*v126)(id);
  uint64_t v127;
  id v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  int64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  _QWORD *v139;
  char v140[24];
  _BYTE v141[24];
  char v142[8];
  void *v143;
  void *v144;
  uint64_t (*v145)(id);
  uint64_t v146;
  uint64_t v147;
  NSURL v148;
  NSURL v149;

  sub_10014BD1C(a3, (uint64_t)v142, (uint64_t *)&unk_1005D24E0);
  v121 = v143;
  v120 = v144;
  v126 = v145;
  v123 = v146;
  v6 = sub_100012E18(&qword_1005CEFD0);
  v7 = __chkstk_darwin(v6);
  v117 = (uint64_t)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v124 = (char *)&v115 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v115 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v115 - v14;
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v130 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v136 = (char *)&v115 - v21;
  __chkstk_darwin(v20);
  v133 = (char *)&v115 - v22;
  v23 = sub_100012E18(&qword_1005D24F0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v137 = (char *)&v115 - v27;
  sub_1001935CC(a1, a3);
  sub_10018E924(a1, a2, a3);
  v28 = a1;
  v29 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDURLForContainerObjectIDURL);
  v129 = a3;
  if (!v29 || !*(_QWORD *)(v29 + 16))
  {
    v103 = (uint64_t *)(a1
                     + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
    swift_beginAccess(v28 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID, &v147, 1, 0);
    v104 = *v103;
    *v103 = 0;
    swift_bridgeObjectRelease(v104);
LABEL_72:
    v105 = v28 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL;
    swift_beginAccess(v28 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectIDURL, v141, 0, 0);
    v106 = v117;
    sub_100012CE8(v105, v117, &qword_1005CEFD0);
    v107 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v106, 1, v16);
    sub_100012DDC(v106, &qword_1005CEFD0);
    if (v107 != 1)
    {
      v108 = OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID;
      if (!*(_QWORD *)(v28 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_focusedNoteObjectID))
      {
        v109 = (uint64_t)v124;
        sub_100012CE8(v105, (uint64_t)v124, &qword_1005CEFD0);
        v110 = v129;
        v111 = sub_100192D2C(v109, v129);
        v112 = sub_1001933C0(v111, v110);

        sub_100012DDC(v109, &qword_1005CEFD0);
        if (v112)
        {
          v113 = *(void **)(v28 + v108);
          *(_QWORD *)(v28 + v108) = v112;

        }
      }
    }
    return;
  }
  swift_bridgeObjectRetain(v29);
  v30 = sub_100135F70((uint64_t)_swiftEmptyArrayStorage);
  v116 = a1;
  v31 = (unint64_t *)(a1
                           + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID);
  swift_beginAccess(v116 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_currentFirstVisibleObjectIDForContainerObjectID, v140, 1, 0);
  v32 = *v31;
  v118 = (Swift::Int *)v31;
  *v31 = v30;
  swift_bridgeObjectRelease(v32);
  v135 = 0;
  v127 = v29;
  v33 = *(_QWORD *)(v29 + 64);
  v122 = v29 + 64;
  v34 = 1 << *(_BYTE *)(v29 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & v33;
  v125 = (unint64_t)(v34 + 63) >> 6;
  v115 = v125 - 1;
  v131 = v13;
  v134 = v15;
  v37 = v133;
  v38 = (uint64_t)v137;
  v132 = v26;
  while (1)
  {
    if (v36)
    {
      v138 = (v36 - 1) & v36;
      v40 = __clz(__rbit64(v36)) | (v135 << 6);
LABEL_12:
      v41 = v127;
      v42 = *(_QWORD *)(v17 + 72) * v40;
      v43 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
      v43(v26, *(_QWORD *)(v127 + 48) + v42, v16);
      v44 = *(_QWORD *)(v41 + 56) + v42;
      v45 = sub_100012E18(&qword_1005D24F8);
      v43(&v26[*(int *)(v45 + 48)], v44, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v26, 0, 1, v45);
      v38 = (uint64_t)v137;
      goto LABEL_31;
    }
    v46 = v135 + 1;
    if (__OFADD__(v135, 1))
    {
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    if (v46 < v125)
    {
      v47 = *(_QWORD *)(v122 + 8 * v46);
      if (v47)
        goto LABEL_16;
      v48 = v135 + 2;
      ++v135;
      if (v46 + 1 < v125)
      {
        v47 = *(_QWORD *)(v122 + 8 * v48);
        if (v47)
          goto LABEL_19;
        v135 = v46 + 1;
        if (v46 + 2 < v125)
        {
          v47 = *(_QWORD *)(v122 + 8 * (v46 + 2));
          if (v47)
          {
            v46 += 2;
            goto LABEL_16;
          }
          v48 = v46 + 3;
          v135 = v46 + 2;
          if (v46 + 3 < v125)
            break;
        }
      }
    }
LABEL_30:
    v49 = sub_100012E18(&qword_1005D24F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v26, 1, 1, v49);
    v138 = 0;
LABEL_31:
    sub_10014BD1C((uint64_t)v26, v38, &qword_1005D24F0);
    v50 = sub_100012E18(&qword_1005D24F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v38, 1, v50) == 1)
    {
      swift_release(v127);
      v28 = v116;
      goto LABEL_72;
    }
    v51 = v38 + *(int *)(v50 + 48);
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
    v52(v37, v51, v16);
    v52(v15, v38, v16);
    v53 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56);
    v53(v15, 0, 1, v16);
    sub_100012CE8((uint64_t)v15, (uint64_t)v13, &qword_1005CEFD0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
    {
      sub_100012DDC((uint64_t)v13, &qword_1005CEFD0);
      sub_100012DDC((uint64_t)v15, &qword_1005CEFD0);
      v39 = *(void (**)(char *, uint64_t))(v17 + 8);
      goto LABEL_7;
    }
    v52(v136, (uint64_t)v13, v16);
    v54 = sub_10014BD1C(v129, (uint64_t)&v147, (uint64_t *)&unk_1005D24E0);
    if (!v147)
    {
      v57 = 0;
LABEL_45:
      v65 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      v65(v130, v136, v16);
      v56 = 0;
      if (!v57)
        goto LABEL_56;
      goto LABEL_46;
    }
    if (!v148.super.isa || (v55 = (id)((uint64_t (*)(uint64_t))v148.super.isa)(v54), (v56 = v55) == 0))
    {
      v56 = v121;
      v55 = v121;
    }
    if (v126 && (v57 = (id)v126(v55)) != 0)
    {
      if (!v56)
        goto LABEL_45;
    }
    else
    {
      v57 = v120;
      v58 = v120;
      if (!v56)
        goto LABEL_45;
    }
    v59 = v56;
    v60 = v136;
    v61 = v59;
    URL._bridgeToObjectiveC()(&v149);
    v63 = v62;
    v64 = objc_msgSend(v61, "ic_objectIDFromURL:", v62);

    v65 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v66 = v130;
    v65(v130, v60, v16);
    v128 = v64;
    if (v64)
    {

      v39 = *(void (**)(char *, uint64_t))(v17 + 8);
      v39(v66, v16);
      v39(v60, v16);
      sub_100012DDC((uint64_t)v134, &qword_1005CEFD0);
      v38 = (uint64_t)v137;
      goto LABEL_47;
    }
    v15 = v134;
    if (!v57)
    {
LABEL_56:

      v39 = *(void (**)(char *, uint64_t))(v17 + 8);
      v39(v130, v16);
      v39(v136, v16);
      sub_100012DDC((uint64_t)v15, &qword_1005CEFD0);
      v38 = (uint64_t)v137;
LABEL_7:
      v37 = v133;
      v39(v133, v16);
LABEL_8:
      v13 = v131;
      v15 = v134;
      v26 = v132;
      goto LABEL_9;
    }
LABEL_46:
    v67 = v57;
    v68 = v130;
    URL._bridgeToObjectiveC()(&v148);
    v70 = v69;
    v71 = objc_msgSend(v67, "ic_objectIDFromURL:", v69);

    v39 = *(void (**)(char *, uint64_t))(v17 + 8);
    v39(v68, v16);
    v39(v136, v16);
    sub_100012DDC((uint64_t)v15, &qword_1005CEFD0);
    v38 = (uint64_t)v137;
    v128 = v71;
    if (!v71)
      goto LABEL_7;
LABEL_47:
    v72 = (uint64_t)v124;
    v37 = v133;
    v65(v124, v133, v16);
    v53((char *)v72, 0, 1, v16);
    v73 = sub_100192D2C(v72, v129);
    sub_100012DDC(v72, &qword_1005CEFD0);
    if (!v73)
    {
      v39(v37, v16);

      goto LABEL_8;
    }
    v74 = v118;
    swift_beginAccess(v118, v141, 33, 0);
    v75 = *v74;
    v26 = v132;
    if (*v74)
    {
      v119 = v73;
      if ((v75 & 0xC000000000000001) != 0)
      {
        if (v75 >= 0)
          v75 &= 0xFFFFFFFFFFFFFF8uLL;
        v76 = (uint64_t)v128;
        v77 = v128;
        v78 = v73;
        v79 = __CocoaDictionary.count.getter(v75);
        if (__OFADD__(v79, 1))
          goto LABEL_79;
        v75 = sub_100192AFC(v75, v79 + 1);
        *v74 = v75;
      }
      else
      {
        v76 = (uint64_t)v128;
        v80 = v128;
        v81 = v73;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v75);
      v139 = (_QWORD *)*v74;
      v83 = v139;
      *v74 = 0x8000000000000000;
      v85 = sub_100248C44(v76);
      v86 = v83[2];
      v87 = (v84 & 1) == 0;
      v88 = v86 + v87;
      if (__OFADD__(v86, v87))
        goto LABEL_78;
      v89 = v84;
      if (v83[3] >= v88)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_10024FD1C();
      }
      else
      {
        sub_10024B9C0(v88, isUniquelyReferenced_nonNull_native);
        v90 = sub_100248C44((uint64_t)v128);
        if ((v89 & 1) != (v91 & 1))
          goto LABEL_82;
        v85 = v90;
      }
      v26 = v132;
      v92 = v139;
      if ((v89 & 1) != 0)
      {
        v93 = v139[7];
        v94 = 8 * v85;

        v95 = v119;
        *(_QWORD *)(v93 + v94) = v119;
        v96 = v128;
      }
      else
      {
        v139[(v85 >> 6) + 8] |= 1 << v85;
        v97 = 8 * v85;
        v96 = v128;
        *(_QWORD *)(v92[6] + v97) = v128;
        v95 = v119;
        *(_QWORD *)(v92[7] + v97) = v119;
        v98 = v92[2];
        v99 = __OFADD__(v98, 1);
        v100 = v98 + 1;
        if (v99)
          goto LABEL_80;
        v92[2] = v100;
        v101 = v96;
      }
      v102 = *v74;
      *v74 = (Swift::Int)v92;

      swift_bridgeObjectRelease(v102);
      swift_endAccess(v141);

      v37 = v133;
      v39(v133, v16);
      v13 = v131;
      v15 = v134;
      v38 = (uint64_t)v137;
    }
    else
    {
      swift_endAccess(v141);

      v39(v37, v16);
      v13 = v131;
      v15 = v134;
    }
LABEL_9:
    v36 = v138;
  }
  v47 = *(_QWORD *)(v122 + 8 * v48);
  if (v47)
  {
LABEL_19:
    v46 = v48;
LABEL_16:
    v138 = (v47 - 1) & v47;
    v40 = __clz(__rbit64(v47)) + (v46 << 6);
    v135 = v46;
    goto LABEL_12;
  }
  while (1)
  {
    v46 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v46 >= v125)
    {
      v135 = v115;
      goto LABEL_30;
    }
    v47 = *(_QWORD *)(v122 + 8 * v46);
    ++v48;
    if (v47)
      goto LABEL_16;
  }
LABEL_81:
  __break(1u);
LABEL_82:
  v114 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v114);
  __break(1u);
}

uint64_t sub_10018E308(uint64_t *a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t result;
  _OWORD v7[5];

  v3 = *a1;
  v4 = a3[1];
  v7[0] = *a3;
  v7[1] = v4;
  v5 = a3[3];
  v7[2] = a3[2];
  v7[3] = v5;
  v7[4] = a3[4];
  sub_10018D654(v3, 0, (uint64_t)v7);
  result = sub_1000189CC();
  if (result || (result = sub_1000187EC()) != 0)
  {

    return 1;
  }
  return result;
}

uint64_t sub_10018E42C(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51[24];
  char v52[24];
  char v53[24];

  v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v50 = (uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18((uint64_t *)&unk_1005D2520);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D1500);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D1508);
  v14 = __chkstk_darwin(v13);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v46 - v16;
  v18 = __chkstk_darwin(v15);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v46 - v20;
  __chkstk_darwin(v19);
  v25 = (char *)&v46 - v24;
  if (!a2 || !a1)
    goto LABEL_17;
  v47 = v22;
  v48 = v23;
  v49 = v9;
  v26 = (uint64_t)&a1[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&a1[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v53, 0, 0);
  sub_100012CE8(v26, (uint64_t)v25, &qword_1005D1508);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v27(v25, 1, v4) == 1)
  {
    v28 = &qword_1005D1508;
    v29 = (uint64_t)v25;
LABEL_16:
    sub_100012DDC(v29, v28);
LABEL_17:
    v42 = 0;
    return v42 & 1;
  }
  v30 = a2;
  v31 = a1;
  v32 = (uint64_t)v25;
  v33 = v30;
  sub_100012DDC(v32, &qword_1005D1508);
  v34 = (uint64_t)&v30[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection];
  swift_beginAccess(v34, v52, 0, 0);
  sub_100012CE8(v34, (uint64_t)v12, &qword_1005D1500);
  v35 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v12, 1, v35) == 1)
  {

    v28 = &qword_1005D1500;
    v29 = (uint64_t)v12;
    goto LABEL_16;
  }
  sub_100012DDC((uint64_t)v12, &qword_1005D1500);
  v36 = (uint64_t)&v33[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection];
  swift_beginAccess(&v33[OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection], v51, 0, 0);
  sub_100012CE8(v36, (uint64_t)v21, &qword_1005D1508);
  if (v27(v21, 1, v4) != 1)
  {
    v46 = v33;
    sub_100012DDC((uint64_t)v21, &qword_1005D1508);
    v38 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v27;
    v39 = v48;
    sub_100012CE8(v36, v48, &qword_1005D1508);
    sub_100012CE8(v26, (uint64_t)v17, &qword_1005D1508);
    v40 = (uint64_t)v49;
    v41 = (uint64_t)&v49[*(int *)(v7 + 48)];
    sub_100012CE8(v39, (uint64_t)v49, &qword_1005D1508);
    sub_100012CE8((uint64_t)v17, v41, &qword_1005D1508);
    if (v38(v40, 1, v4) == 1)
    {

      sub_100012DDC((uint64_t)v17, &qword_1005D1508);
      sub_100012DDC(v39, &qword_1005D1508);
      if (v38(v41, 1, v4) == 1)
      {
        v37 = (uint64_t)v49;
        goto LABEL_12;
      }
    }
    else
    {
      v43 = v47;
      sub_100012CE8(v40, v47, &qword_1005D1508);
      if (v38(v41, 1, v4) != 1)
      {
        v45 = v50;
        sub_10013B170(v41, v50, type metadata accessor for ICSelectionStateModel.ObjectSelection);
        v42 = sub_100164DE4(v43, v45);

        sub_100194660(v45);
        sub_100012DDC((uint64_t)v17, &qword_1005D1508);
        sub_100012DDC(v48, &qword_1005D1508);
        sub_100194660(v43);
        sub_100012DDC(v40, &qword_1005D1508);
        return v42 & 1;
      }

      sub_100012DDC((uint64_t)v17, &qword_1005D1508);
      sub_100012DDC(v48, &qword_1005D1508);
      sub_100194660(v43);
    }
    v28 = (uint64_t *)&unk_1005D2520;
    v29 = (uint64_t)v49;
    goto LABEL_16;
  }

  v37 = (uint64_t)v21;
LABEL_12:
  sub_100012DDC(v37, &qword_1005D1508);
  v42 = 1;
  return v42 & 1;
}

void sub_10018E924(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t *, uint64_t, uint64_t);
  void *v52;
  unsigned int v53;
  BOOL v54;
  unsigned int (*v55)(uint64_t *, uint64_t, uint64_t);
  id v56;
  id v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void);
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(_QWORD, _QWORD, _QWORD);
  char *v85;
  id v86;
  id v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t *v98;
  _BYTE *v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE v105[4];
  _BOOL4 v106;
  id v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t *v113;
  _BYTE *v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t (*v122)(void);
  _BYTE *v123;
  uint64_t (*v124)(void);
  unsigned int (*v125)(_QWORD, _QWORD, _QWORD);
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE v131[24];
  _BYTE v132[24];
  _QWORD v133[10];
  _QWORD v134[3];

  v128 = a2;
  sub_10014BD1C(a3, (uint64_t)v133, (uint64_t *)&unk_1005D24E0);
  v5 = (uint64_t (*)(void))v133[0];
  v124 = (uint64_t (*)(void))v133[6];
  v125 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v133[1];
  v119 = (id)v133[4];
  v120 = v133[7];
  v122 = (uint64_t (*)(void))v133[8];
  v116 = (id)v133[5];
  v117 = v133[9];
  v110 = type metadata accessor for URL(0);
  v115 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v111 = &v105[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100012E18(&qword_1005CEFD0);
  v8 = __chkstk_darwin(v7);
  v108 = &v105[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v114 = &v105[-v10];
  v11 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
  v126 = *(_QWORD *)(v11 - 8);
  v127 = v11;
  v12 = __chkstk_darwin(v11);
  v109 = &v105[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __chkstk_darwin(v12);
  v112 = &v105[-v15];
  __chkstk_darwin(v14);
  v17 = &v105[-v16];
  v18 = sub_100012E18(&qword_1005D1500);
  v19 = __chkstk_darwin(v18);
  v21 = (uint64_t *)&v105[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = __chkstk_darwin(v19);
  v113 = (uint64_t *)&v105[-v23];
  v24 = __chkstk_darwin(v22);
  v123 = &v105[-v25];
  v26 = __chkstk_darwin(v24);
  v121 = &v105[-v27];
  v28 = __chkstk_darwin(v26);
  v30 = (uint64_t *)&v105[-v29];
  v31 = __chkstk_darwin(v28);
  v33 = (uint64_t *)&v105[-v32];
  __chkstk_darwin(v31);
  v35 = &v105[-v34];
  v118 = a3;
  v36 = sub_10014BD1C(a3, (uint64_t)v134, (uint64_t *)&unk_1005D24E0);
  if (v134[0] && (((uint64_t (*)(uint64_t))v134[2])(v36) & 1) != 0)
  {
    v107 = (id)sub_1000189CC();
    if (v107 || (v107 = (id)sub_1000187EC()) != 0)
    {
      if ((v5() & 1) != 0)
      {
        v106 = 0;
      }
      else
      {
        v47 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
        swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, &v129, 0, 0);
        sub_100012CE8(v47, (uint64_t)v35, &qword_1005D1500);
        v106 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v126 + 48))(v35, 1, v127) == 1;
        sub_100012DDC((uint64_t)v35, &qword_1005D1500);
      }
      v48 = v128;
    }
    else
    {
      v107 = 0;
      v106 = 1;
      v48 = v128;
    }
    v49 = v48;
    if ((v5() & 1) != 0)
    {
      v50 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
      swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, &v130, 0, 0);
      v125 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v50;
      sub_100012CE8(v50, (uint64_t)v33, &qword_1005D1500);
      v51 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v126 + 48);
      v52 = v49;
      v53 = v51(v33, 1, v127);
      sub_100012DDC((uint64_t)v33, &qword_1005D1500);
      v54 = v53 == 1;
      v49 = v52;
      if (v54)
      {
        if (v106)
        {
LABEL_40:

          v46 = v107;
          goto LABEL_55;
        }
        v55 = v51;
        v46 = v107;
        if (v107)
        {
          v56 = v107;
          v57 = v52;
          sub_1001905E8(v46, v118, v128, v30);

          v58 = v127;
          if (v55(v30, 1, v127) != 1)
          {
            sub_10013B170((uint64_t)v30, (uint64_t)v17, type metadata accessor for ICSelectionStateModel.ContainerSelection);
            v94 = v121;
            sub_10013B170((uint64_t)v17, (uint64_t)v121, type metadata accessor for ICSelectionStateModel.ContainerSelection);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v94, 0, 1, v58);
            v95 = (uint64_t)v125;
            swift_beginAccess(v125, v132, 33, 0);
            sub_100164108((uint64_t)v94, v95, &qword_1005D1500);
            swift_endAccess(v132);

            v46 = v56;
            goto LABEL_55;
          }
          sub_100012DDC((uint64_t)v30, &qword_1005D1500);
        }
        v59 = v121;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v126 + 56))(v121, 1, 1, v127);
        v60 = (uint64_t)v125;
LABEL_45:
        swift_beginAccess(v60, v132, 33, 0);
        sub_100164108((uint64_t)v59, v60, &qword_1005D1500);
        v89 = v132;
        goto LABEL_53;
      }
    }
    if (v124 && (v61 = v124()) != 0)
    {
      v62 = (void *)v61;
      v63 = v127;
      v64 = (uint64_t)v123;
      v65 = v122;
      if (!v122)
        goto LABEL_32;
    }
    else
    {
      v66 = v119;
      v67 = v119;
      v63 = v127;
      v64 = (uint64_t)v123;
      if (!v66)
      {
LABEL_39:
        if (v106)
          goto LABEL_40;
        v46 = v107;
        if (v107)
        {
          v86 = v107;
          v87 = v49;
          sub_1001905E8(v46, v118, v128, v21);

          v88 = v126;
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v126 + 48))(v21, 1, v63) != 1)
          {
            v90 = (uint64_t)v21;
            v91 = v109;
            sub_10013B170(v90, (uint64_t)v109, type metadata accessor for ICSelectionStateModel.ContainerSelection);
            v92 = v121;
            sub_10013B170((uint64_t)v91, (uint64_t)v121, type metadata accessor for ICSelectionStateModel.ContainerSelection);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v92, 0, 1, v63);
            v93 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
            swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, v132, 33, 0);
            sub_100164108((uint64_t)v92, v93, &qword_1005D1500);
            swift_endAccess(v132);

            v46 = v86;
            goto LABEL_55;
          }
          sub_100012DDC((uint64_t)v21, &qword_1005D1500);
        }
        v59 = v121;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v126 + 56))(v121, 1, 1, v63);
        v60 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
        goto LABEL_45;
      }
      v62 = v67;
      v65 = v122;
      if (!v122)
      {
LABEL_32:
        v69 = v116;
        v68 = v116;
        if (v69)
          goto LABEL_33;

        goto LABEL_39;
      }
    }
    v68 = (id)v65();
    if (v68)
    {
LABEL_33:
      v70 = v68;
      v71 = objc_allocWithZone((Class)type metadata accessor for FolderListSelectionValidator());
      v72 = (void *)objc_opt_self(ICAccount);
      v73 = v62;
      v74 = v70;
      v75 = objc_msgSend(v72, "hidesSystemPaperNotesInCustomFolders");
      v76 = objc_msgSend(v72, "hidesMathNotesInCustomFolders");
      v77 = objc_msgSend(v72, "hidesCallNotesInCustomFolders");
      v78 = v75;
      v79 = v74;
      v80 = objc_msgSend(v71, "initWithModernContext:htmlContext:hidesSystemPaperNotesInCustomFolders:hidesMathNotesInCustomFolders:hidesCallNotesInCustomFolders:", v73, v74, v78, v76, v77);

      v81 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection;
      swift_beginAccess(a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_containerSelection, v132, 0, 0);
      sub_100012CE8(v81, v64, &qword_1005D1500);
      v82 = v126;
      v83 = v127;
      v84 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v126 + 48);
      if (v84(v64, 1, v127) != 1)
      {
        v124 = (uint64_t (*)(void))v73;
        v125 = v84;
        v85 = (char *)&loc_10018EF90 + dword_100190164[swift_getEnumCaseMultiPayload(v64, v83)];
        __asm { BR              X10 }
      }

      v46 = v107;
      if (v106)
        goto LABEL_54;
      if (v107)
      {
        v96 = v127;
        v97 = v107;
        v49 = v49;
        v98 = v113;
        sub_1001905E8(v46, v118, v128, v113);

        if (v84(v98, 1, v96) != 1)
        {
          v100 = (uint64_t)v98;
          v101 = v112;
          sub_10013B170(v100, (uint64_t)v112, type metadata accessor for ICSelectionStateModel.ContainerSelection);
          v102 = (uint64_t)v101;
          v103 = v82;
          v104 = v121;
          sub_10013B170(v102, (uint64_t)v121, type metadata accessor for ICSelectionStateModel.ContainerSelection);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v104, 0, 1, v96);
          swift_beginAccess(v81, v131, 33, 0);
          sub_100164108((uint64_t)v104, v81, &qword_1005D1500);
          swift_endAccess(v131);

          v46 = v97;
          goto LABEL_55;
        }
        sub_100012DDC((uint64_t)v98, &qword_1005D1500);
      }
      else
      {
        v96 = v127;
      }
      v99 = v121;
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v121, 1, 1, v96);
      swift_beginAccess(v81, v131, 33, 0);
      sub_100164108((uint64_t)v99, v81, &qword_1005D1500);
      v89 = v131;
LABEL_53:
      swift_endAccess(v89);
LABEL_54:

      goto LABEL_55;
    }
    goto LABEL_32;
  }
  v37 = sub_100018628();
  if (v37)
  {
    v38 = v37;
    v39 = objc_opt_self(NSManagedObjectID);
    v40 = swift_dynamicCastObjCClass(v38, v39);
    if (v40)
      goto LABEL_14;
    swift_unknownObjectRelease(v38, v41);
  }
  v42 = sub_100018628();
  if (!v42)
  {
LABEL_13:
    v40 = sub_100018D60();
    goto LABEL_14;
  }
  v43 = v42;
  v44 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
  v40 = swift_dynamicCastObjCClass(v43, v44);
  if (!v40)
  {
    swift_unknownObjectRelease(v43, v45);
    goto LABEL_13;
  }
LABEL_14:
  v46 = (id)v40;
  sub_10015C714(v40, v128);
LABEL_55:

}

void sub_10019017C(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X2>, SEL *a4@<X3>, _QWORD *a5@<X8>)
{
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  void *v15;
  id v16;

  v9 = objc_msgSend(a1, "ic_existingObjectWithID:", a2);
  if (!v9
    || ((v10 = v9, v11 = objc_opt_self(*a3), (v12 = (void *)swift_dynamicCastObjCClass(v10, v11)) == 0)
      ? (v13 = 0)
      : (v13 = objc_msgSend(v12, *a4)),
        (v14 = objc_msgSend(v10, "isDeleted"), v10, v15 = 0, (v13 & 1) == 0)
     && (v14 & 1) == 0))
  {
    v16 = a2;
    v15 = a2;
  }
  *a5 = v15;
}

void sub_100190238(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id v4;
  id v5;

  v3 = objc_msgSend((id)objc_opt_self(ICAccount), "defaultAccountInContext:", a1);
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v3, "defaultFolder");

    v4 = objc_msgSend(v5, "objectID");
  }
  *a2 = v4;
}

void sub_1001902D8(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  id v13;
  unsigned int v14;
  id v15;
  id v16;

  v4 = objc_msgSend(a1, "objectWithID:", a2);
  v5 = objc_opt_self(ICNote);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  if (v6)
  {
    v7 = v6;
    if (objc_msgSend(v6, "isSystemPaper"))
    {
      v8 = objc_msgSend((id)objc_opt_self(ICAccount), "globalVirtualSystemPaperFolder");
LABEL_12:

      goto LABEL_13;
    }
    v9 = objc_msgSend(v7, "folder");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "isTrashFolder");
      v12 = objc_msgSend(v10, "account");
      v13 = v12;
      if (v12
        && (v14 = objc_msgSend(v12, "hasAnyCustomFoldersIncludingSystem:", 0), (v11 & 1) == 0)
        && v14)
      {
        v13 = v13;
        v15 = objc_msgSend(v13, "objectID");
        v16 = v13;
      }
      else
      {
        v16 = v10;
        v15 = objc_msgSend(v16, "objectID");
      }
      v8 = v15;

      goto LABEL_12;
    }
  }

  v8 = 0;
LABEL_13:
  *a3 = v8;
}

void sub_100190474(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v4 = objc_msgSend(a1, "objectWithID:", a2);
  v5 = objc_opt_self(NoteObject);
  v6 = (void *)swift_dynamicCastObjCClass(v4, v5);
  v7 = v6;
  if (!v6)
    goto LABEL_11;
  v8 = objc_msgSend(v6, "store");
  if (!v8
    || (v9 = v8, v10 = objc_msgSend(v8, "account"), v9, !v10)
    || (v11 = objc_msgSend(v10, "hasAnyCustomFolders"), v10, !v11))
  {
    v15 = objc_msgSend(v7, "store");
    if (v15)
    {
      v13 = v15;
      v14 = objc_msgSend(v15, "objectID");
      goto LABEL_10;
    }
LABEL_12:

    v7 = 0;
    goto LABEL_13;
  }
  v12 = objc_msgSend(v7, "store");
  v7 = v12;
  if (v12)
  {
    v13 = objc_msgSend(v12, "account");

    if (v13)
    {
      v14 = objc_msgSend(v13, "objectID");
LABEL_10:
      v7 = v14;

      goto LABEL_11;
    }
    goto LABEL_12;
  }
LABEL_11:

LABEL_13:
  *a3 = v7;
}

id sub_1001905E8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_100193EA8(a1, a2);
  if (v5)
  {
    v6 = v5;
    v7 = objc_opt_self(NSManagedObjectID);
    v8 = swift_dynamicCastObjCClass(v6, v7);
    if (v8)
    {
      *a4 = v8;
      a4[1] = (uint64_t)a3;
      v9 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
      v10 = a4;
      v11 = v9;
      v12 = 5;
LABEL_6:
      swift_storeEnumTagMultiPayload(v10, v11, v12);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a4, 0, 1, v9);
      return a3;
    }
    v13 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
    v14 = swift_dynamicCastObjCClass(v6, v13);
    if (v14)
    {
      *a4 = v14;
      a4[1] = (uint64_t)a3;
      v9 = type metadata accessor for ICSelectionStateModel.ContainerSelection(0);
      v10 = a4;
      v11 = v9;
      v12 = 4;
      goto LABEL_6;
    }
    swift_unknownObjectRelease(v6, v15);
    v5 = 0;
  }
  v17 = type metadata accessor for ICSelectionStateModel.ContainerSelection(v5);
  return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a4, 1, 1, v17);
}

void sub_1001906FC(void *a1, uint64_t a2, void **a3)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v4 = objc_msgSend(a1, "ic_existingObjectWithID:", a2);
  if (v4)
  {
    v11 = v4;
    v5 = objc_opt_self(ICBaseAttachment);
    v6 = (void *)swift_dynamicCastObjCClass(v11, v5);
    if (v6)
    {
      v7 = objc_msgSend(v6, "note");
      if (v7)
      {
        v8 = v7;
        v9 = objc_msgSend(v7, "objectID");

      }
      else
      {

        v9 = 0;
      }
      v10 = *a3;
      *a3 = v9;
    }
    else
    {
      v10 = v11;
    }

  }
}

BOOL sub_100190818()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  _BYTE v9[24];

  v1 = sub_100012E18(&qword_1005D1508);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *v0 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v4, v9, 0, 0);
  sub_100012CE8(v4, (uint64_t)v3, &qword_1005D1508);
  v5 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_100012DDC((uint64_t)v3, &qword_1005D1508);
  return v6;
}

char *sub_1001908EC@<X0>(char **a1@<X8>)
{
  char *result;

  result = sub_10015ED64(1, 1);
  *a1 = result;
  return result;
}

void sub_10019091C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(id *);
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = v2 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0)
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    else
      v9 = *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + 56));
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (v4)
      goto LABEL_3;
LABEL_14:
    sub_1001948C4(&v11);
    v7 = *(void (**)(id *))(a1 + 24);
    if (v7)
    {
      v8 = 0;
      goto LABEL_16;
    }
    return;
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 56));
  if (!v4)
    goto LABEL_14;
LABEL_3:
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
  }
  else if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v6 = v2 + 32;
      *(id *)(v6 + 8 * v5);
      sub_1001948C4(&v11);
      v7 = *(void (**)(id *))(a1 + 24);
      if (!v7)
        return;
      if (v5 < *(_QWORD *)(v3 + 16))
      {
        v8 = *(id *)(v6 + 8 * v5);
LABEL_16:
        v10 = v8;
        v7(&v10);

        return;
      }
LABEL_24:
      __break(1u);
      return;
    }
    __break(1u);
    goto LABEL_24;
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 1, v2);
  sub_1001948C4(&v11);
  v7 = *(void (**)(id *))(a1 + 24);
  if (v7)
  {
    swift_bridgeObjectRetain(v2);
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 1, v2);
    sub_1001948C4(&v11);
    goto LABEL_16;
  }
}

uint64_t ICNavigableQueue.resolution.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 68));
  v3 = *v2;
  sub_100166B74(*v2, v2[1]);
  return v3;
}

uint64_t ICNavigableQueue.resolution.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t result;

  v6 = (uint64_t *)(v3 + *(int *)(a3 + 68));
  result = sub_100012C50(*v6, v6[1]);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*ICNavigableQueue.resolution.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ICNavigableQueue.duplicateCheck.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 72));
  v3 = *v2;
  sub_100166B74(*v2, v2[1]);
  return v3;
}

uint64_t ICNavigableQueue.duplicateCheck.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t result;

  v6 = (uint64_t *)(v3 + *(int *)(a3 + 72));
  result = sub_100012C50(*v6, v6[1]);
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*ICNavigableQueue.duplicateCheck.modify())()
{
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

unint64_t sub_100190BA0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100555CB0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

uint64_t sub_100190BEC(char a1)
{
  if (!a1)
    return 0x736D657469;
  if (a1 == 1)
    return 0x49746E6572727563;
  return 0xD00000000000001ELL;
}

uint64_t sub_100190C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100457B98, a3);
  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100190CA0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100457B98, a1);
  return RawRepresentable<>.hashValue.getter(a1, a2, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100190CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100457B98, a2);
  return RawRepresentable<>.hash(into:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

uint64_t sub_100190D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100457B98, a2);
  return RawRepresentable<>._rawHashValue(seed:)(a1, a2, a3, WitnessTable, &protocol witness table for String);
}

unint64_t sub_100190D8C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  unint64_t result;
  Swift::String v5;

  v3 = (void *)a1[1];
  v5._countAndFlagsBits = *a1;
  v5._object = v3;
  result = sub_100190BA0(v5);
  *a2 = result;
  return result;
}

uint64_t sub_100190DC8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_100190BEC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100190DFC()
{
  char *v0;

  return sub_100190BEC(*v0);
}

uint64_t sub_100190E10@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_100190BE8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100190E44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_10019457C();
  *a1 = result;
  return result;
}

uint64_t sub_100190E78(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100457C48, a1);
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_100190EAC(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100457C48, a1);
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t ICNavigableQueue.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  char v30;

  v4 = *(_QWORD *)(a2 + 32);
  v23 = *(_OWORD *)(a2 + 16);
  v27 = v23;
  v28 = v4;
  v24 = *(_OWORD *)(a2 + 40);
  v29 = v24;
  v5 = type metadata accessor for ICNavigableQueue.CodingKeys(255, (uint64_t)&v27);
  WitnessTable = swift_getWitnessTable(&unk_100457C48, v5);
  v7 = type metadata accessor for KeyedEncodingContainer(0, v5, WitnessTable);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - v9;
  v12 = a1[3];
  v11 = a1[4];
  sub_10012D19C(a1, v12);
  v13 = v11;
  v14 = v22[1];
  dispatch thunk of Encoder.container<A>(keyedBy:)(v5, v5, WitnessTable, v12, v13);
  *(_QWORD *)&v27 = *(_QWORD *)(v14 + *(int *)(a2 + 76));
  v30 = 0;
  v15 = type metadata accessor for Array(0, v23);
  v26 = v24;
  v16 = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v15);
  v17 = v25;
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v27, &v30, v7, v15, v16);
  if (!v17)
  {
    v18 = (uint64_t *)(v14 + *(int *)(a2 + 80));
    v19 = *v18;
    v20 = *((unsigned __int8 *)v18 + 8);
    LOBYTE(v27) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v27, v7);
    *(_QWORD *)&v27 = *(_QWORD *)(v14 + *(int *)(a2 + 84));
    v30 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v27, &v30, v7, v15, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t type metadata accessor for ICNavigableQueue.CodingKeys(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ICNavigableQueue.CodingKeys);
}

uint64_t ICNavigableQueue.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t WitnessTable;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;

  v61 = a1;
  v48 = a7;
  v63 = a2;
  v64 = a3;
  v65 = a4;
  v66 = a5;
  v67 = a6;
  v58 = type metadata accessor for ICNavigableQueue.CodingKeys(255, (uint64_t)&v63);
  WitnessTable = swift_getWitnessTable(&unk_100457C48, v58);
  v51 = type metadata accessor for KeyedDecodingContainer(0, v58, WitnessTable);
  v49 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v57 = (char *)&v47 - v12;
  v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v55 = *(_QWORD **)(v13 - 8);
  v56 = v13;
  __chkstk_darwin(v13);
  v54 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a2;
  v64 = a3;
  v50 = a4;
  v65 = a4;
  v66 = a5;
  v67 = a6;
  v21 = (int *)type metadata accessor for ICNavigableQueue(0, (uint64_t)&v63);
  v52 = *((_QWORD *)v21 - 1);
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - v22;
  v53 = sub_1000163BC(0, (unint64_t *)&qword_1005CEF30, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v53);
  v63 = _swiftEmptyArrayStorage;
  v24 = sub_10019159C();
  v25 = sub_100012E18((uint64_t *)&unk_1005CEF40);
  v26 = sub_100016638((unint64_t *)&qword_1005D6880, (uint64_t *)&unk_1005CEF40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v63, v25, v26, v15, v24);
  v27 = v54;
  ((void (*)(char *, _QWORD, uint64_t))v55[13])(v54, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v56);
  *(_QWORD *)v23 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000030, 0x8000000100477290, v20, v17, v27, 0);
  *((_QWORD *)v23 + 1) = 50;
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(*(a2 - 1) + 56))(&v23[v21[16]], 1, 1, a2);
  v28 = &v23[v21[17]];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  v29 = &v23[v21[18]];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v30 = v21[19];
  v31 = Array.init()(a2);
  *(_QWORD *)&v23[v30] = v31;
  v32 = &v23[v21[20]];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  v55 = a2;
  v56 = (uint64_t)v21;
  v33 = v21[21];
  *(_QWORD *)&v23[v33] = Array.init()(a2);
  v34 = v61[3];
  v35 = v61[4];
  sub_10012D19C(v61, v34);
  v36 = v57;
  v37 = v60;
  dispatch thunk of Decoder.container<A>(keyedBy:)(v58, v58, WitnessTable, v34, v35);
  if (v37)
  {
    v46 = v61;
    v44 = v52;
    v45 = v56;
  }
  else
  {
    v58 = v33;
    WitnessTable = v31;
    v60 = v30;
    v38 = type metadata accessor for Array(0, v55);
    v68 = 0;
    v62 = v50;
    v39 = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v38);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v63, v38, &v68, v51, v38, v39);
    swift_bridgeObjectRelease(WitnessTable);
    *(_QWORD *)&v23[v60] = v63;
    LOBYTE(v63) = 1;
    *(_QWORD *)v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v51);
    v32[8] = v41 & 1;
    v68 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v63, v38, &v68, v51, v38, v39);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v51);
    v42 = v63;
    v43 = v58;
    swift_bridgeObjectRelease(*(_QWORD *)&v23[v58]);
    *(_QWORD *)&v23[v43] = v42;
    v44 = v52;
    v45 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v48, v23, v56);
    v46 = v61;
  }
  sub_1000153C0(v46);
  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v23, v45);
}

uint64_t type metadata accessor for ICNavigableQueue(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ICNavigableQueue);
}

unint64_t sub_10019159C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D6870;
  if (!qword_1005D6870)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_1005D6870);
  }
  return result;
}

uint64_t sub_1001915E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return ICNavigableQueue.init(from:)(a1, *(_QWORD **)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 40), *(_QWORD *)(a2 + 48), a3);
}

uint64_t sub_100191608(_QWORD *a1, uint64_t a2)
{
  return ICNavigableQueue.encode(to:)(a1, a2);
}

void destroy for ICSelectionStateUtilityConfiguration(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 24));

  if (*(_QWORD *)(a1 + 48))
    swift_release(*(_QWORD *)(a1 + 56));
  if (*(_QWORD *)(a1 + 64))
    swift_release(*(_QWORD *)(a1 + 72));
}

uint64_t initializeWithCopy for ICSelectionStateUtilityConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _OWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  v9 = (_OWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 48);
  swift_retain(v4);
  swift_retain(v5);
  v10 = v6;
  v11 = v7;
  if (v8)
  {
    v12 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *v9;
  }
  v13 = *(_QWORD *)(a2 + 64);
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

_QWORD *assignWithCopy for ICSelectionStateUtilityConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = (void *)a1[4];
  v9 = (void *)a2[4];
  a1[4] = v9;
  v10 = v9;

  v11 = (void *)a1[5];
  v12 = (void *)a2[5];
  a1[5] = v12;
  v13 = v12;

  v14 = a2[6];
  if (a1[6])
  {
    if (v14)
    {
      v15 = a2[7];
      v16 = a1[7];
      a1[6] = v14;
      a1[7] = v15;
      swift_retain(v15);
      swift_release(v16);
      goto LABEL_8;
    }
    swift_release(a1[7]);
  }
  else if (v14)
  {
    v17 = a2[7];
    a1[6] = v14;
    a1[7] = v17;
    swift_retain(v17);
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_8:
  v18 = a2[8];
  if (!a1[8])
  {
    if (v18)
    {
      v21 = a2[9];
      a1[8] = v18;
      a1[9] = v21;
      swift_retain(v21);
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (!v18)
  {
    swift_release(a1[9]);
    goto LABEL_14;
  }
  v19 = a2[9];
  v20 = a1[9];
  a1[8] = v18;
  a1[9] = v19;
  swift_retain(v19);
  swift_release(v20);
  return a1;
}

__n128 initializeWithTake for ICSelectionStateUtilityConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ICSelectionStateUtilityConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v7;
      *(_QWORD *)(a1 + 56) = v8;
      swift_release(v9);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 56));
  }
  else if (v7)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v10;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_8:
  v11 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v11)
    {
      v14 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v11;
      *(_QWORD *)(a1 + 72) = v14;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v11)
  {
    swift_release(*(_QWORD *)(a1 + 72));
    goto LABEL_14;
  }
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  swift_release(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ICSelectionStateUtilityConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ICSelectionStateUtilityConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ICSelectionStateUtilityConfiguration()
{
  return &type metadata for ICSelectionStateUtilityConfiguration;
}

uint64_t type metadata accessor for ICSelectionStateUtilities()
{
  return objc_opt_self(_TtC11MobileNotes25ICSelectionStateUtilities);
}

uint64_t sub_100191A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

uint64_t sub_100191A64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_100457AE8;
    v4[4] = &unk_100457AE8;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = &unk_100457B00;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 0, 8, v4, a1 + 56);
    return 0;
  }
  return result;
}

void **sub_100191B10(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  size_t v9;
  int v10;
  char *v11;
  _QWORD *v14;
  _QWORD *v15;
  void *v16;
  const void *v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v8 + 7;
  v10 = v6 & 0x100000;
  v11 = (char *)*a2;
  *a1 = *a2;
  if (v7 > 7
    || v10 != 0
    || ((((((((v8 + 7 + ((v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 31) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    a1 = (void **)&v11[(v7 & 0xF8 ^ 0x1F8) & (v7 + 16)];
    swift_retain(v11);
  }
  else
  {
    v14 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v16 = (void *)(((unint64_t)v14 + v7 + 8) & ~v7);
    v17 = (const void *)(((unint64_t)v15 + v7 + 8) & ~v7);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    v19 = v11;
    if (v18(v17, 1, v4))
    {
      memcpy(v16, v17, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v16, v17, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
    }
    v20 = ((unint64_t)v16 + v9) & 0xFFFFFFFFFFFFFFF8;
    v21 = ((unint64_t)v17 + v9) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v21 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    else
    {
      v22 = *(_QWORD *)(v21 + 8);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *(_QWORD *)(v20 + 8) = v22;
      swift_retain(v22);
    }
    v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
    v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v24 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
    }
    else
    {
      v25 = *(_QWORD *)(v24 + 8);
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *(_QWORD *)(v23 + 8) = v25;
      swift_retain(v25);
    }
    v26 = (_QWORD *)((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    v27 = (uint64_t *)((v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = *v27;
    *v26 = *v27;
    v29 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    v30 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    v31 = *(_QWORD *)v30;
    *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
    *(_QWORD *)v29 = v31;
    v32 = (uint64_t *)(((unint64_t)v27 + 31) & 0xFFFFFFFFFFFFF8);
    v33 = *v32;
    *(_QWORD *)(((unint64_t)v26 + 31) & 0xFFFFFFFFFFFFF8) = *v32;
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v33);
  }
  return a1;
}

uint64_t sub_100191D1C(id *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v3 = (unint64_t)a1 + 15;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84))
    ++v7;
  v8 = (_QWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 >= 0xFFFFFFFFuLL)
    swift_release(v8[1]);
  v9 = (_QWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v9 >= 0xFFFFFFFFuLL)
    swift_release(v9[1]);
  v10 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(*v10);
  return swift_bridgeObjectRelease(*(_QWORD *)(((unint64_t)v10 + 31) & 0xFFFFFFFFFFFFF8));
}

void **sub_100191DFC(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  id v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v4 = *a2;
  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)v5 + v9 + 8) & ~v9);
  v11 = (const void *)(((unint64_t)v6 + v9 + 8) & ~v9);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v4;
  if (v12(v11, 1, v7))
  {
    v14 = *(_DWORD *)(v8 + 84);
    v15 = *(_QWORD *)(v8 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v10, v11, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v14 = *(_DWORD *)(v8 + 84);
    v15 = *(_QWORD *)(v8 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = ((unint64_t)v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = ((unint64_t)v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v19 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v20 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = v20;
    swift_retain(v20);
  }
  v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v22 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  else
  {
    v23 = *(_QWORD *)(v22 + 8);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *(_QWORD *)(v21 + 8) = v23;
    swift_retain(v23);
  }
  v24 = (_QWORD *)((v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = (uint64_t *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  *v24 = *v25;
  v27 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v28 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = v29;
  v30 = (uint64_t *)(((unint64_t)v25 + 31) & 0xFFFFFFFFFFFFF8);
  v31 = *v30;
  *(_QWORD *)(((unint64_t)v24 + 31) & 0xFFFFFFFFFFFFF8) = *v30;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v31);
  return a1;
}

void **sub_100191FAC(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = (unint64_t)a2 + 15;
  v5 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = (unint64_t)a1 + 15;
  v9 = v5;

  v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (void *)((v13 + 8 + (v8 & 0xFFFFFFFFFFFFFFF8)) & ~v13);
  v15 = (void *)((v13 + 8 + v10) & ~v13);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  LODWORD(v8) = v16(v14, 1, v11);
  v17 = v16(v15, 1, v11);
  if ((_DWORD)v8)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v14, v15, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v14, v15, v11);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (*(_DWORD *)(v12 + 84))
    v18 = *(_QWORD *)(v12 + 64);
  else
    v18 = *(_QWORD *)(v12 + 64) + 1;
  memcpy(v14, v15, v18);
LABEL_10:
  if (*(_DWORD *)(v12 + 84))
    v19 = *(_QWORD *)(v12 + 64);
  else
    v19 = *(_QWORD *)(v12 + 64) + 1;
  v20 = (_QWORD *)(((unint64_t)v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)(((unint64_t)v15 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      swift_retain(v25);
      goto LABEL_20;
    }
  }
  else
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v23 = v21[1];
      v24 = v20[1];
      *v20 = v22;
      v20[1] = v23;
      swift_retain(v23);
      swift_release(v24);
      goto LABEL_20;
    }
    swift_release(v20[1]);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_20:
  v26 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (unint64_t *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = *v27;
  if (*v26 < 0xFFFFFFFFuLL)
  {
    if (v28 >= 0xFFFFFFFF)
    {
      v31 = v27[1];
      *v26 = v28;
      v26[1] = v31;
      swift_retain(v31);
      goto LABEL_27;
    }
LABEL_26:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    goto LABEL_27;
  }
  if (v28 < 0xFFFFFFFF)
  {
    swift_release(v26[1]);
    goto LABEL_26;
  }
  v29 = v27[1];
  v30 = v26[1];
  *v26 = v28;
  v26[1] = v29;
  swift_retain(v29);
  swift_release(v30);
LABEL_27:
  v32 = (unint64_t)v26 + 23;
  v33 = (uint64_t *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = *v33;
  v36 = (v32 & 0xFFFFFFFFFFFFFFF8) + 15;
  v35 = *(_QWORD *)(v32 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v32 & 0xFFFFFFFFFFFFFFF8) = *v33;
  v37 = (v32 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRelease(v35);
  v38 = v36 & 0xFFFFFFFFFFFFFFF8;
  v39 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  *(_QWORD *)v38 = v40;
  v41 = *(_QWORD *)(((unint64_t)v33 + 31) & 0xFFFFFFFFFFFFF8);
  v42 = *(_QWORD *)(v37 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v37 & 0xFFFFFFFFFFFFFFF8) = v41;
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRelease(v42);
  return a1;
}

_QWORD *sub_100192250(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  int v11;
  size_t v12;
  size_t v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  v10 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    v11 = *(_DWORD *)(v7 + 84);
    v12 = *(_QWORD *)(v7 + 64);
    if (v11)
      v13 = v12;
    else
      v13 = v12 + 1;
    memcpy(v9, v10, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    v11 = *(_DWORD *)(v7 + 84);
    v12 = *(_QWORD *)(v7 + 64);
  }
  if (v11)
    v14 = v12;
  else
    v14 = v12 + 1;
  v15 = ((unint64_t)v9 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = ((unint64_t)v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v16 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  else
  {
    v17 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_QWORD *)(v15 + 8) = v17;
  }
  v18 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v19 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v20 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = v20;
  }
  v21 = (_QWORD *)((v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = v25;
  *(_QWORD *)(((unint64_t)v21 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + 31) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1001923E8(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5;
  void *v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;

  v8 = (_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8);
  v9 = v5 & 0xFFFFFFFFFFFFFFF8;
  *v8 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (void *)(((unint64_t)v8 + v12 + 8) & ~v12);
  v14 = (void *)((v12 + 8 + v9) & ~v12);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v16 = v15(v13, 1, v10);
  v17 = v15(v14, 1, v10);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v13, v14, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v13, v14, v10);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (*(_DWORD *)(v11 + 84))
    v18 = *(_QWORD *)(v11 + 64);
  else
    v18 = *(_QWORD *)(v11 + 64) + 1;
  memcpy(v13, v14, v18);
LABEL_10:
  if (*(_DWORD *)(v11 + 84))
    v19 = *(_QWORD *)(v11 + 64);
  else
    v19 = *(_QWORD *)(v11 + 64) + 1;
  v20 = (_QWORD *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)(((unint64_t)v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v25 = v21[1];
      *v20 = v22;
      v20[1] = v25;
      goto LABEL_20;
    }
  }
  else
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v23 = v21[1];
      v24 = v20[1];
      *v20 = v22;
      v20[1] = v23;
      swift_release(v24);
      goto LABEL_20;
    }
    swift_release(v20[1]);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_20:
  v26 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (unint64_t *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = *v27;
  if (*v26 < 0xFFFFFFFFuLL)
  {
    if (v28 >= 0xFFFFFFFF)
    {
      v31 = v27[1];
      *v26 = v28;
      v26[1] = v31;
      goto LABEL_27;
    }
LABEL_26:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    goto LABEL_27;
  }
  if (v28 < 0xFFFFFFFF)
  {
    swift_release(v26[1]);
    goto LABEL_26;
  }
  v29 = v27[1];
  v30 = v26[1];
  *v26 = v28;
  v26[1] = v29;
  swift_release(v30);
LABEL_27:
  v32 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = *(_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8) = *v32;
  v34 = (((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease(v33);
  v35 = ((((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v35 = v37;
  v38 = *(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v32 + 31) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease(v38);
  return a1;
}

uint64_t sub_100192660(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = 7;
  else
    v8 = 8;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  if (v7 < a2)
  {
    if (((((((((((v8 + *(_QWORD *)(v4 + 64) + ((v9 + 16) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 31) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v10 = 2;
    else
      v10 = a2 - v7 + 1;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    __asm { BR              X16 }
  }
  if ((v6 & 0x80000000) != 0)
  {
    v15 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                 + v9
                                                                 + 8) & ~v9);
    if (v15 >= 2)
      return v15 - 1;
    else
      return 0;
  }
  else
  {
    v14 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v14) = -1;
    return (v14 + 1);
  }
}

void sub_1001927C8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v10 < a3)
  {
    v12 = a3 - v10;
    if ((((((((((_DWORD)v11 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 31) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v13 = v12 + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v6 = v14;
    else
      v6 = 0;
  }
  if (a2 > v10)
  {
    if ((((((((((_DWORD)v11 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 31) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v15 = ~v10 + a2;
      bzero(a1, ((((((((v11 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 31) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

uint64_t sub_1001928EC@<X0>(unsigned int a1@<W1>, size_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  uint64_t result;

  *((_BYTE *)v14 + v15) = 0;
  if (a1)
  {
    if ((v11 & 0x80000000) != 0)
    {
      v17 = (void *)(((((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8) + v13 + 8) & v10);
      if (v11 >= a1)
      {
        return (*(uint64_t (**)(void *, _QWORD))(v12 + 56))(v17, a1 + 1);
      }
      else if ((_DWORD)a2)
      {
        if (a2 <= 3)
          v18 = a2;
        else
          v18 = 4;
        bzero(v17, a2);
        __asm { BR              X10 }
      }
    }
    else
    {
      if ((a1 & 0x80000000) != 0)
        v16 = a1 ^ 0x80000000;
      else
        v16 = a1 - 1;
      *v14 = v16;
    }
  }
  return result;
}

void sub_1001929E4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1001929EC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1001929FC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_100192A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_100192A10(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100192A5C + 4 * byte_1004579F8[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100192A90 + 4 * byte_1004579F3[v4]))();
}

uint64_t sub_100192A90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192A98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100192AA0);
  return result;
}

uint64_t sub_100192AAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100192AB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100192AB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192AC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192ACC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100457C10, a1);
}

uint64_t sub_100192ADC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100457B48, a1);
}

uint64_t sub_100192AEC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100457B70, a1);
}

Swift::Int sub_100192AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int result;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a2)
  {
    sub_100012E18(&qword_1005D0168);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v29 = v4;
    v5 = __CocoaDictionary.makeIterator()(a1);
    v6 = __CocoaDictionary.Iterator.next()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      v10 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
      do
      {
        v27 = v8;
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v26 = v9;
        swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
        v4 = v29;
        v21 = *(_QWORD *)(v29 + 16);
        if (*(_QWORD *)(v29 + 24) <= v21)
        {
          sub_10024B9C0(v21 + 1, 1);
          v4 = v29;
        }
        v12 = v27;
        v11 = v28;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v14 = v4 + 64;
        v15 = -1 << *(_BYTE *)(v4 + 32);
        v16 = result & ~v15;
        v17 = v16 >> 6;
        if (((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6))) != 0)
        {
          v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v4 + 64 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v22 = 0;
          v23 = (unint64_t)(63 - v15) >> 6;
          do
          {
            if (++v17 == v23 && (v22 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v24 = v17 == v23;
            if (v17 == v23)
              v17 = 0;
            v22 |= v24;
            v25 = *(_QWORD *)(v14 + 8 * v17);
          }
          while (v25 == -1);
          v18 = __clz(__rbit64(~v25)) + (v17 << 6);
        }
        *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
        v19 = 8 * v18;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v19) = v11;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v12;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaDictionary.Iterator.next()();
        v9 = v20;
      }
      while (v8);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1, 0);
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v4;
}

id sub_100192D2C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t (*v5)(id);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  NSURL *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  id v31;
  NSURL *v32;
  void *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  void *v38;
  char v39[32];
  void *v40;
  void *v41;
  uint64_t (*v42)(id);
  uint64_t v43[6];
  uint64_t (*v44)(uint64_t);

  sub_10014BD1C(a2, (uint64_t)v39, (uint64_t *)&unk_1005D24E0);
  v4 = v41;
  v38 = v40;
  v5 = v42;
  v6 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URL(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v36 - v13;
  v16 = v15;
  sub_100012CE8(a1, (uint64_t)v8, &qword_1005CEFD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v9) != 1)
  {
    v18 = v38;
    v37 = v12;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v8, v9);
    v19 = sub_10014BD1C(a2, (uint64_t)v43, (uint64_t *)&unk_1005D24E0);
    if (v43[0])
    {
      if (!v44 || (v20 = (id)v44(v19), (v21 = v20) == 0))
      {
        v21 = v18;
        v20 = v18;
      }
      if (!v5 || (v22 = (void *)v5(v20)) == 0)
      {
        v23 = v4;
        v22 = v4;
      }
      if (v21)
      {
        v24 = v21;
        URL._bridgeToObjectiveC()(v25);
        v26 = v16;
        v28 = v27;
        v17 = objc_msgSend(v24, "ic_objectIDFromURL:", v27);

        v16 = v26;
        v29 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
        v30 = v37;
        v29(v37, v14, v9);
        if (v17)
        {
          v21 = v22;
          goto LABEL_17;
        }
LABEL_15:
        if (!v22)
        {
          v17 = 0;
          goto LABEL_19;
        }
        v31 = v22;
        URL._bridgeToObjectiveC()(v32);
        v24 = v33;
        v17 = objc_msgSend(v31, "ic_objectIDFromURL:", v33);

LABEL_17:
LABEL_19:

        v34 = *(void (**)(char *, uint64_t))(v16 + 8);
        v34(v30, v9);
        v34(v14, v9);
        return v17;
      }
    }
    else
    {
      v22 = 0;
    }
    v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v14, v9);
    v21 = 0;
    goto LABEL_15;
  }
  sub_100012DDC((uint64_t)v8, &qword_1005CEFD0);
  return 0;
}

uint64_t sub_100192FE8(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  id *v49;
  void *v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  id *v57;

  v6 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v9 = objc_msgSend(a1, "selectionState");
  if (!v9)
    return 0;
  v10 = v9;
  v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v13 = v12;

  v14 = type metadata accessor for JSONDecoder(0);
  v15 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v16 = JSONDecoder.init()(v15);
  v17 = sub_100012E18((uint64_t *)&unk_1005D6860);
  v18 = sub_100016638(&qword_1005D2530, (uint64_t *)&unk_1005D6860, (uint64_t)&protocol conformance descriptor for ICNavigableQueue<A>);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)(v51, v17, v11, v13, v17, v18);
  v45 = v11;
  v46 = v13;
  v43 = a2;
  v44 = a3;
  v21 = swift_release(v16);
  v49 = &v40;
  v22 = (void *)v51[0];
  v23 = v52;
  v24 = v53;
  v25 = v54;
  v26 = v55;
  v27 = v57;
  __chkstk_darwin(v21);
  *(&v40 - 2) = v51;
  v29 = v28;
  v48 = v30;
  v31 = v22;
  sub_100166B74(v23, v24);
  sub_100166B74(v25, v26);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v27);
  v32 = sub_100012E18(&qword_1005D2540);
  OS_dispatch_queue.sync<A>(execute:)(&v50, sub_10019486C, &v40 - 4, v32);
  v33 = v48;

  sub_100012C50(v23, v24);
  sub_100012C50(v25, v26);
  swift_bridgeObjectRelease(v27);
  v47 = v29;
  swift_bridgeObjectRelease(v29);
  v34 = v50;
  if (v50)
  {
    v35 = v33;
    v41 = v25;
    v42 = v26;
    v49 = v27;
    v36 = (uint64_t)v44;
    v40 = v44;
    v37 = (uint64_t)v43;
    v38 = v43;
    v39 = sub_1000189CC();
    if (v39)
    {
      v19 = v39;
      sub_10013DD30(v45, v46);

      sub_100012C50(v23, v24);
      sub_100012C50(v41, v42);

      swift_bridgeObjectRelease(v49);
      swift_bridgeObjectRelease(v47);
    }
    else
    {
      sub_10015B9A8(v8);
      v51[0] = variable initialization expression of AsyncChannel.Iterator.active;
      v51[1] = 0;
      v51[2] = variable initialization expression of AsyncChannel.Iterator.active;
      v52 = 0;
      v53 = v37;
      v54 = v36;
      v55 = 0u;
      v56 = 0u;
      v19 = (uint64_t)sub_100192D2C((uint64_t)v8, (uint64_t)v51);
      sub_10013DD30(v45, v46);

      sub_100012C50(v23, v24);
      sub_100012C50(v41, v42);
      swift_bridgeObjectRelease(v49);
      swift_bridgeObjectRelease(v47);
      sub_100012DDC((uint64_t)v8, &qword_1005CEFD0);
    }
  }
  else
  {

    sub_100012C50(v23, v24);
    sub_100012C50(v25, v26);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v47);
    sub_10013DD30(v45, v46);
    return 0;
  }
  return v19;
}

uint64_t sub_1001933C0(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t (*v6)(void);
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  BOOL v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _BYTE v21[16];
  void *v22;
  void *v23;
  uint64_t v24;
  _BYTE v25[32];
  void *v26;
  void *v27;
  uint64_t (*v28)(void);
  _QWORD v29[6];
  uint64_t (*v30)(void *);

  sub_10014BD1C(a2, (uint64_t)v25, (uint64_t *)&unk_1005D24E0);
  if (!a1)
    return 0;
  v5 = v26;
  v4 = v27;
  v6 = v28;
  sub_10014BD1C(a2, (uint64_t)v29, (uint64_t *)&unk_1005D24E0);
  if (!v29[0])
  {
    v8 = 0;
    v7 = 0;
    v4 = a1;
LABEL_13:
    v12 = v4;
    goto LABEL_14;
  }
  if (v30)
  {
    v7 = (void *)v30(a1);
    if (v7)
    {
      if (!v6)
        goto LABEL_12;
      goto LABEL_10;
    }
  }
  else
  {
    v9 = a1;
  }
  v10 = v5;
  v7 = v5;
  if (!v6)
  {
LABEL_12:
    v8 = v4;
    goto LABEL_13;
  }
LABEL_10:
  v11 = v6();
  if (!v11)
    goto LABEL_12;
  v8 = (void *)v11;
LABEL_14:
  v13 = objc_msgSend(a1, "ic_isModernType");
  if ((_DWORD)v13)
    v14 = v7 == 0;
  else
    v14 = 1;
  if (!v14)
  {
    __chkstk_darwin(v13);
    v22 = v7;
    v23 = a1;
    v18 = v7;
    v19 = sub_100012E18(&qword_1005D1230);
    NSManagedObjectContext.performAndWait<A>(_:)(sub_1001945AC, v21, v19);

    return v24;
  }
  v15 = objc_msgSend(a1, "ic_isLegacyType");
  if ((_DWORD)v15)
  {
    if (v8)
    {
      __chkstk_darwin(v15);
      v22 = v8;
      v23 = a1;
      v16 = v8;
      v17 = sub_100012E18(&qword_1005D1230);
      NSManagedObjectContext.performAndWait<A>(_:)(sub_100194584, v21, v17);

      return v24;
    }

  }
  else
  {

  }
  return 0;
}

uint64_t sub_1001935CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v31;
  _QWORD v32[12];
  _BYTE v33[24];

  v32[8] = a2;
  v3 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v3);
  v32[11] = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v32[9] = *(_QWORD *)(v5 - 8);
  v32[10] = v5;
  v6 = __chkstk_darwin(v5);
  v32[7] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v32 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)v32 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)v32 - v14;
  v16 = sub_100012E18(&qword_1005D1508);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)v32 - v20;
  v22 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v28 = (char *)v32 - v27;
  v29 = a1 + OBJC_IVAR____TtC11MobileNotes21ICSelectionStateModel_objectSelection;
  swift_beginAccess(v29, v33, 0, 0);
  sub_100012CE8(v29, (uint64_t)v21, &qword_1005D1508);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
  {
    v32[1] = v10;
    v32[2] = v13;
    v32[5] = v19;
    v32[6] = v15;
    v32[3] = v29;
    v32[4] = v23;
    sub_10013B170((uint64_t)v21, (uint64_t)v28, type metadata accessor for ICSelectionStateModel.ObjectSelection);
    sub_10019461C((uint64_t)v28, (uint64_t)v26);
    v31 = (char *)&loc_10019383C + 4 * word_1004579FE[swift_getEnumCaseMultiPayload(v26, v22)];
    __asm { BR              X10 }
  }
  return sub_100012DDC((uint64_t)v21, &qword_1005D1508);
}

void sub_100193EA8(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  _BYTE v26[16];
  id v27;
  id v28;
  uint64_t v29;
  _BYTE v30[32];
  void *v31;
  void *v32;
  uint64_t (*v33)(void);
  _QWORD v34[6];
  uint64_t (*v35)(uint64_t);

  sub_10014BD1C(a2, (uint64_t)v30, (uint64_t *)&unk_1005D24E0);
  v5 = v31;
  v4 = v32;
  v6 = v33;
  v7 = sub_10014BD1C(a2, (uint64_t)v34, (uint64_t *)&unk_1005D24E0);
  if (!v34[0])
  {
    v8 = 0;
    v11 = 0;
    if (!a1)
    {
LABEL_31:

      return;
    }
    goto LABEL_15;
  }
  if (!v35 || (v8 = (void *)v35(v7)) == 0)
  {
    v9 = v5;
    v8 = v5;
    if (!v6)
      goto LABEL_10;
    goto LABEL_7;
  }
  if (v6)
  {
LABEL_7:
    v10 = (id)v6();
    v11 = v10;
    if (!v10)
      goto LABEL_10;
    if (!a1)
      goto LABEL_11;
LABEL_15:
    v14 = a1;
    if (objc_msgSend(v14, "ic_isInvitationType"))
    {
      objc_msgSend((id)objc_opt_self(ICAccount), "globalVirtualSharedWithYouFolder");

LABEL_28:
      return;
    }
    v15 = objc_msgSend(v14, "ic_isModernNoteType");
    if ((_DWORD)v15 && v8)
    {
      __chkstk_darwin(v15);
      v27 = v8;
      v28 = v14;
      v16 = v8;
      v17 = sub_100012E18((uint64_t *)&unk_1005D2510);
      NSManagedObjectContext.performAndWait<A>(_:)(sub_100194604, v26, v17);

      return;
    }
    v18 = objc_msgSend(v14, "ic_isLegacyNoteType");
    if ((_DWORD)v18)
    {
      if (v11)
      {
        __chkstk_darwin(v18);
        v27 = v11;
        v28 = v14;
        v19 = v11;
        v20 = sub_100012E18((uint64_t *)&unk_1005D2510);
        NSManagedObjectContext.performAndWait<A>(_:)(sub_1001945EC, v26, v20);

        return;
      }

    }
    else
    {

    }
    goto LABEL_31;
  }
LABEL_10:
  v10 = v4;
  v11 = v4;
  if (a1)
    goto LABEL_15;
LABEL_11:
  if (v8)
  {
    __chkstk_darwin(v10);
    v27 = v8;
    v12 = v8;
    v13 = sub_100012E18((uint64_t *)&unk_1005D2510);
    NSManagedObjectContext.performAndWait<A>(_:)(sub_1001945D4, v26, v13);

    if (v29)
    {

      return;
    }
  }
  if (!v11)
    goto LABEL_31;
  v21 = (void *)objc_opt_self(NotesApp);
  v22 = v11;
  v23 = objc_msgSend(v21, "sharedNotesApp");
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, "noteContext");

    if (v25)
    {
      v11 = objc_msgSend(v25, "defaultStoreForNewNote");

      if (v11)
      {
        objc_msgSend(v11, "objectID");

        goto LABEL_28;
      }
      goto LABEL_34;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_100194224(void *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  _QWORD v25[5];
  id aBlock[5];
  uint64_t v27;
  id v28;
  uint64_t v29[6];
  uint64_t (*v30)(uint64_t);
  _QWORD v31[5];
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v3 = sub_10014BD1C(a2, (uint64_t)v29, (uint64_t *)&unk_1005D24E0);
  if (!v29[0])
    return 0;
  if (!v30)
    return 0;
  v4 = (void *)v30(v3);
  if (!v4)
    return 0;
  v31[0] = variable initialization expression of AsyncChannel.Iterator.active;
  v31[1] = 0;
  v31[2] = variable initialization expression of AsyncChannel.Iterator.active;
  v31[3] = 0;
  v32 = 0u;
  v33 = 0u;
  v31[4] = v4;
  v34 = 0;
  v5 = v4;
  v6 = (void *)sub_1001933C0(a1, (uint64_t)v31);

  if (!v6)
  {

    return (uint64_t)v6;
  }
  if ((objc_msgSend(v6, "ic_isBaseAttachmentType") & 1) == 0)
  {

    return 0;
  }
  v28 = 0;
  v7 = (_QWORD *)swift_allocObject(&unk_10055BFF0, 40, 7);
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = &v28;
  v8 = swift_allocObject(&unk_10055C018, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_1001946C8;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1000165D0;
  v27 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100016618;
  aBlock[3] = &unk_10055C030;
  v9 = _Block_copy(aBlock);
  v10 = v27;
  v11 = v5;
  swift_retain(v8);
  v12 = v6;
  swift_release(v10);
  objc_msgSend(v11, "performBlockAndWait:", v9);
  _Block_release(v9);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v8, "", 112, 544, 45, 1);
  result = swift_release(v8);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    if (v28)
    {
      v15 = v28;
      v16 = v11;
      v17 = v15;
      v18 = v16;
      v11 = v17;
      v19 = objc_msgSend(v11, "ic_isModernType");
      if ((v19 & 1) == 0)
      {
        objc_msgSend(v11, "ic_isLegacyType");

        goto LABEL_16;
      }
      __chkstk_darwin(v19);
      v25[2] = v18;
      v25[3] = v11;
      v20 = v18;
      v21 = sub_100012E18(&qword_1005D1230);
      NSManagedObjectContext.performAndWait<A>(_:)(sub_100194910, v25, v21);

      v22 = aBlock[0];
      if (v22)
      {
        v23 = v28;
        swift_release(v7);

        return (uint64_t)v6;
      }
    }
    else
    {

      v12 = v11;
    }

LABEL_16:
    v24 = v28;
    swift_release(v7);

    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019457C()
{
  return 3;
}

void sub_100194584(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_10019017C(*(void **)(v1 + 16), *(void **)(v1 + 24), NoteObject_ptr, (SEL *)&selRef_isMarkedForDeletion, a1);
}

void sub_1001945AC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_10019017C(*(void **)(v1 + 16), *(void **)(v1 + 24), ICCloudSyncingObject_ptr, (SEL *)&selRef_markedForDeletion, a1);
}

void sub_1001945D4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100190238(*(_QWORD *)(v1 + 16), a1);
}

void sub_1001945EC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_100190474(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_100194604(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1001902D8(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_10019461C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100194660(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ICSelectionStateModel.ObjectSelection(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10019469C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1001946C8()
{
  uint64_t v0;

  sub_1001906FC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1001946D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001946E4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001946F4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100194704()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 48));

  if (*(_QWORD *)(v0 + 72))
    swift_release(*(_QWORD *)(v0 + 80));
  if (*(_QWORD *)(v0 + 88))
    swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_100194760(void *a1)
{
  uint64_t v1;

  sub_10018D4FC(a1, *(_QWORD *)(v1 + 16), (uint64_t *)(v1 + 24));
}

uint64_t sub_10019476C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100194790(_QWORD *a1)
{
  uint64_t v1;

  return sub_100275A6C(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

id sub_100194798@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100284440(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001947B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

void sub_1001947D4()
{
  uint64_t v0;

  sub_1002841C4(*(unsigned __int8 *)(v0 + 16), *(_QWORD *)(v0 + 24), (void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1001947E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001947F8(uint64_t *a1)
{
  uint64_t v1;

  return sub_10018E308(a1, *(_QWORD *)(v1 + 16), *(_OWORD **)(v1 + 24));
}

_QWORD *sub_100194800@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_10028437C(v1[2], v1[3], v1[4], a1);
}

id *sub_10019481C(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_100194844(id *a1)
{

  return a1;
}

void sub_10019486C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[5];
  uint64_t v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_OWORD *)(v4 + 48);
  v8[2] = *(_OWORD *)(v4 + 32);
  v8[3] = v5;
  v8[4] = *(_OWORD *)(v4 + 64);
  v9 = *(_QWORD *)(v4 + 80);
  v6 = *(_OWORD *)(v4 + 16);
  v8[0] = *(_OWORD *)v4;
  v8[1] = v6;
  sub_10019091C((uint64_t)v8);
  if (!v2)
    *a1 = v7;
}

_QWORD *sub_1001948C4(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

id sub_1001948EC@<X0>(_QWORD *a1@<X8>)
{
  return sub_100194798(a1);
}

void sub_100194910(_QWORD *a1@<X8>)
{
  sub_1001945AC(a1);
}

uint64_t sub_100194924()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v74 = sub_100012E18(&qword_1005D2AC8);
  v0 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v2 = (char *)&v68 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2AD0);
  __chkstk_darwin(v3);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2870();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for AddFileAttachmentIntent, v6);
  v7._countAndFlagsBits = 0x20796D20646441;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100458740, v8);
  v73 = sub_1001B4128();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v73);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._countAndFlagsBits = 0x20796D206F7420;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_100458718, v12);
  v75 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v13, v75);
  swift_release(v13);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v3);
  swift_release(v14);
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddFileAttachmentIntent, v6);
  v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddFileAttachmentIntent, v6);
  v17 = *(void (**)(char *, uint64_t))(v0 + 8);
  v71 = v16;
  v72 = v17;
  v18 = v74;
  v17(v2, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for AddFileAttachmentIntent, v6);
  v19._countAndFlagsBits = 543450177;
  v19._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v21 = swift_getKeyPath(&unk_100458740, v20);
  v22 = v73;
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v21, v73);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v3);
  swift_release(v23);
  v24._countAndFlagsBits = 0x796D206F746E6920;
  v24._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v26 = swift_getKeyPath(&unk_100458718, v25);
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v26, v75);
  swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v3);
  swift_release(v27);
  v28._countAndFlagsBits = 0x2E65746F6E20;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddFileAttachmentIntent, v6);
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddFileAttachmentIntent, v6);
  v29 = v18;
  v30 = v72;
  v72(v2, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for AddFileAttachmentIntent, v6);
  v31._countAndFlagsBits = 0x2065687420646441;
  v31._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v33 = swift_getKeyPath(&unk_100458740, v32);
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v33, v22);
  swift_release(v33);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v3);
  swift_release(v34);
  v35._countAndFlagsBits = 0x796D206F746E6920;
  v35._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v37 = swift_getKeyPath(&unk_100458718, v36);
  v38 = v75;
  v39 = _AssistantIntent.IntentProjection.subscript.getter(v37, v75);
  swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v39, v3);
  swift_release(v39);
  v40._countAndFlagsBits = 0x2E65746F6E20;
  v40._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddFileAttachmentIntent, v6);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddFileAttachmentIntent, v6);
  v30(v2, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for AddFileAttachmentIntent, v6);
  v41._countAndFlagsBits = 0x7420747265736E49;
  v41._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v43 = swift_getKeyPath(&unk_100458740, v42);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v73);
  swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v3);
  swift_release(v44);
  v45._countAndFlagsBits = 0x6874206F746E6920;
  v45._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v47 = swift_getKeyPath(&unk_100458718, v46);
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v38);
  swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v3);
  swift_release(v48);
  v49._countAndFlagsBits = 0x2E65746F6E20;
  v49._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddFileAttachmentIntent, v6);
  v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddFileAttachmentIntent, v6);
  v50 = v74;
  v51 = v72;
  v72(v2, v74);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for AddFileAttachmentIntent, v6);
  v52._countAndFlagsBits = 0x2065687420747550;
  v52._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v54 = swift_getKeyPath(&unk_100458740, v53);
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v54, v73);
  swift_release(v54);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v3);
  swift_release(v55);
  v56._countAndFlagsBits = 0x796D206F746E6920;
  v56._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v58 = swift_getKeyPath(&unk_100458718, v57);
  v59 = _AssistantIntent.IntentProjection.subscript.getter(v58, v75);
  swift_release(v58);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v59, v3);
  swift_release(v59);
  v60._countAndFlagsBits = 0x2E65746F6E20;
  v60._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v60);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for AddFileAttachmentIntent, v6);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for AddFileAttachmentIntent, v6);
  v51(v2, v50);
  v62 = sub_100012E18((uint64_t *)&unk_1005D2AD8);
  v63 = swift_allocObject(v62, 72, 7);
  *(_OWORD *)(v63 + 16) = xmmword_100457CA0;
  v64 = v70;
  *(_QWORD *)(v63 + 32) = v71;
  *(_QWORD *)(v63 + 40) = v64;
  v65 = v68;
  *(_QWORD *)(v63 + 48) = v69;
  *(_QWORD *)(v63 + 56) = v65;
  *(_QWORD *)(v63 + 64) = v61;
  v66 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v63);
  return v66;
}

uint64_t sub_100195060(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_100012E18(&qword_1005CF1F8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  sub_100012CE8(a1, (uint64_t)&v9 - v6, &qword_1005CF1F8);
  sub_100012CE8((uint64_t)v7, (uint64_t)v5, &qword_1005CF1F8);
  IntentParameter.wrappedValue.setter(v5);
  return sub_100012DDC((uint64_t)v7, &qword_1005CF1F8);
}

uint64_t sub_100195124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458718, v4);
  v6 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2870();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001952B8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458740, v11);
  v13 = sub_1001B4128();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001953B0, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001952B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6964726F636552, 0xEA00000000007367);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x8000000100480610);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7550206573756F48, 0xEE00657361686372);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000018, 0x8000000100480630);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001953B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6850617568736F4ALL, 0xEF67706A2E6F746FLL);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001DLL, 0x80000001004805A0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000027, 0x80000001004805C0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001BLL, 0x80000001004805F0);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001954A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;

  v54 = sub_100012E18(&qword_1005D2AA0);
  v2 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2AA8);
  __chkstk_darwin(v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B28B4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v9._countAndFlagsBits = 0x20796D206B636F4CLL;
  v9._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_1004586C8, v10);
  v53 = sub_1001B32F0();
  v47 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v53);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v54;
  v14(v4, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v16._object = (void *)0x8000000100480520;
  v16._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_1004586C8, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v53);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._countAndFlagsBits = 0x2E65746F6E20;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v14(v4, v15);
  v21 = v14;
  v48 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v22._countAndFlagsBits = 0x20796D20747550;
  v22._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v24 = swift_getKeyPath(&unk_1004586C8, v23);
  v25 = v53;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v24, v53);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5);
  swift_release(v26);
  v27._countAndFlagsBits = 0xD000000000000015;
  v27._object = (void *)0x8000000100480540;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v21(v4, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v28._countAndFlagsBits = 0x20796D206B636F4CLL;
  v28._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_1004586C8, v29);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v25);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v5);
  swift_release(v31);
  v32._countAndFlagsBits = 0xD000000000000012;
  v32._object = (void *)0x8000000100480560;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v33 = v54;
  v34 = v48;
  v48(v4, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v35._countAndFlagsBits = 0xD000000000000016;
  v35._object = (void *)0x8000000100480580;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v37 = swift_getKeyPath(&unk_1004586C8, v36);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v25);
  swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5);
  swift_release(v38);
  v39._countAndFlagsBits = 0x2E65746F6E20;
  v39._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddOrRemoveNoteLockIntent, v8);
  v34(v4, v33);
  v41 = sub_100012E18(&qword_1005D2AB0);
  v42 = swift_allocObject(v41, 72, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100457CA0;
  v43 = v51;
  *(_QWORD *)(v42 + 32) = v52;
  *(_QWORD *)(v42 + 40) = v43;
  v44 = v49;
  *(_QWORD *)(v42 + 48) = v50;
  *(_QWORD *)(v42 + 56) = v44;
  *(_QWORD *)(v42 + 64) = v40;
  v45 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v42);
  return v45;
}

uint64_t sub_100195A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  sub_100012CE8(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_1005D0B60);
  sub_100012CE8((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1005D0B60);
  IntentParameter.wrappedValue.setter(v5);
  return sub_100012DDC((uint64_t)v7, (uint64_t *)&unk_1005D0B60);
}

uint64_t sub_100195AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004586C8, v4);
  v6 = sub_1001B32F0();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28B4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100195C50, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_1004586F0, v11);
  v13 = sub_1001B40AC();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100195D68, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_100195C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7261646E656C6143, 0xEF73746E65764520);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000024, 0x8000000100480490);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x100000000000001BLL, 0x80000001004804C0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000018, 0x80000001004804E0);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x8000000100480500);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100195D68()
{
  return sub_1001B08A0(6579297, 0xE300000000000000);
}

uint64_t sub_100195D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[2];
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v39[1] = a1;
  v44 = sub_100012E18(&qword_1005D2AA0);
  v1 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v3 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D2AA8);
  __chkstk_darwin(v4);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001B28B4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v8._object = (void *)0x80000001004803E0;
  v8._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_1004586C8, v9);
  v11 = sub_1001B32F0();
  v45 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v40 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14 = v44;
  v40(v3, v44);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 1, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v15._countAndFlagsBits = 0x20796D2065766F4DLL;
  v15._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_1004586C8, v16);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4);
  swift_release(v18);
  v19._countAndFlagsBits = 0xD000000000000021;
  v19._object = (void *)0x8000000100480400;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v20 = v40;
  v40(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(63, 1, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v21._object = (void *)0x8000000100480430;
  v21._countAndFlagsBits = 0x1000000000000039;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_1004586C8, v22);
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v45);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4);
  swift_release(v24);
  v25._countAndFlagsBits = 0x2E65746F6E20;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v26 = v44;
  v20(v3, v44);
  v27 = v20;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 1, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v28._countAndFlagsBits = 0xD00000000000001FLL;
  v28._object = (void *)0x8000000100480470;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_1004586C8, v29);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v45);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v4);
  swift_release(v31);
  v32._countAndFlagsBits = 0x2E65746F6E20;
  v32._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AddOrRemoveNoteLockIntent, v7);
  v27(v3, v26);
  v34 = sub_100012E18(&qword_1005D2AB0);
  v35 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100457CB0;
  v36 = v42;
  *(_QWORD *)(v35 + 32) = v43;
  *(_QWORD *)(v35 + 40) = v36;
  *(_QWORD *)(v35 + 48) = v41;
  *(_QWORD *)(v35 + 56) = v33;
  v37 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v35);
  return v37;
}

uint64_t sub_100196214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004586C8, v4);
  v6 = sub_1001B32F0();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28B4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100196390, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_1004586F0, v11);
  v13 = sub_1001B40AC();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001964BC, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_100196390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C79747372696148, 0xEF73616564492065);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001ALL, 0x80000001004803A0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x4C206F6374736F43, 0xEB00000000747369);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x80000001004803C0);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6D726F6665657246, 0xEE007365746F4E20);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001964BC()
{
  return sub_1001B08A0(0x65766F6D6572, 0xE600000000000000);
}

uint64_t sub_1001964D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  void (*v53)(char *, uint64_t);
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v70[2];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;

  v77 = sub_100012E18(&qword_1005D2A88);
  v2 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v4 = (char *)v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2A90);
  __chkstk_darwin(v5);
  v7 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10016F5D0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 2, &type metadata for AddTagsToNotesIntent, v8);
  v9._countAndFlagsBits = 0x206120646441;
  v9._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100458678, v10);
  v78 = sub_1001B2FF8();
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v78);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 0x206F742067617420;
  v13._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v15 = swift_getKeyPath(&unk_1004586A0, v14);
  v16 = sub_100130EAC();
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v16);
  swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v5);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E65746F6E20;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddTagsToNotesIntent, v8);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddTagsToNotesIntent, v8);
  v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v74 = v19;
  v75 = v20;
  v21 = v77;
  v20(v4, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 2, &type metadata for AddTagsToNotesIntent, v8);
  v22._countAndFlagsBits = 0x6174206120747550;
  v22._object = (void *)0xEE0020726F662067;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v24 = swift_getKeyPath(&unk_100458678, v23);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v78);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5);
  swift_release(v25);
  v26._countAndFlagsBits = 0x796D206F746E6920;
  v26._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v28 = swift_getKeyPath(&unk_1004586A0, v27);
  v76 = v16;
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v16);
  swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v5);
  swift_release(v29);
  v30._countAndFlagsBits = 0x2E65746F6E20;
  v30._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddTagsToNotesIntent, v8);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddTagsToNotesIntent, v8);
  v31 = v21;
  v32 = v75;
  v75(v4, v31);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 2, &type metadata for AddTagsToNotesIntent, v8);
  v33._countAndFlagsBits = 0x20656874206E49;
  v33._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v35 = swift_getKeyPath(&unk_1004586A0, v34);
  v70[1] = a1;
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v16);
  swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v5);
  swift_release(v36);
  v37._object = (void *)0x8000000100480380;
  v37._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v39 = swift_getKeyPath(&unk_100458678, v38);
  v40 = v78;
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v39, v78);
  swift_release(v39);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v5);
  swift_release(v41);
  v42._countAndFlagsBits = 46;
  v42._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddTagsToNotesIntent, v8);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddTagsToNotesIntent, v8);
  v43 = v77;
  v32(v4, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 2, &type metadata for AddTagsToNotesIntent, v8);
  v44._countAndFlagsBits = 0x6120747265736E49;
  v44._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v46 = swift_getKeyPath(&unk_100458678, v45);
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v46, v40);
  swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v5);
  swift_release(v47);
  v48._countAndFlagsBits = 0x746E692067617420;
  v48._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v50 = swift_getKeyPath(&unk_1004586A0, v49);
  v51 = _AssistantIntent.IntentProjection.subscript.getter(v50, v76);
  swift_release(v50);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v51, v5);
  swift_release(v51);
  v52._countAndFlagsBits = 0x2E65746F6E20;
  v52._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddTagsToNotesIntent, v8);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddTagsToNotesIntent, v8);
  v53 = v75;
  v75(v4, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 2, &type metadata for AddTagsToNotesIntent, v8);
  v54._countAndFlagsBits = 0x6120657461657243;
  v54._object = (void *)0xEA0000000000206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v56 = swift_getKeyPath(&unk_100458678, v55);
  v57 = _AssistantIntent.IntentProjection.subscript.getter(v56, v78);
  swift_release(v56);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v57, v5);
  swift_release(v57);
  v58._countAndFlagsBits = 0x206E692067617420;
  v58._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v60 = swift_getKeyPath(&unk_1004586A0, v59);
  v61 = _AssistantIntent.IntentProjection.subscript.getter(v60, v76);
  swift_release(v60);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v61, v5);
  swift_release(v61);
  v62._countAndFlagsBits = 0x2E65746F6E20;
  v62._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AddTagsToNotesIntent, v8);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AddTagsToNotesIntent, v8);
  v53(v4, v77);
  v64 = sub_100012E18(&qword_1005D2A98);
  v65 = swift_allocObject(v64, 72, 7);
  *(_OWORD *)(v65 + 16) = xmmword_100457CA0;
  v66 = v73;
  *(_QWORD *)(v65 + 32) = v74;
  *(_QWORD *)(v65 + 40) = v66;
  v67 = v71;
  *(_QWORD *)(v65 + 48) = v72;
  *(_QWORD *)(v65 + 56) = v67;
  *(_QWORD *)(v65 + 64) = v63;
  v68 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v65);
  return v68;
}

uint64_t sub_100196C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458678, v4);
  v6 = sub_1001B2FF8();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_10016F5D0();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100196D90, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_1004586A0, v11);
  v13 = sub_100130EAC();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100196E98, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_100196D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x8000000100480360);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x70616373646E614CLL, 0xEB00000000676E69);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x654E657461647055, 0xEC00000064656465);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(12624, 0xE200000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x636E617275736E49, 0xE900000000000065);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100196E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000016, 0x8000000100480300);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x8000000100480320);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000015, 0x8000000100480340);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7250206573756F48, 0xEE00737463656A6FLL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x614420646F6F6C46, 0xEC0000006567616DLL);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100196FB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  unint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  unint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  unint64_t v42;
  void (*v43)(char *, uint64_t);
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;

  v80 = sub_100012E18(&qword_1005D2A70);
  v2 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2A78);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10014C588();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, &type metadata for AppendToNoteIntent, v8);
  v9._countAndFlagsBits = 543450177;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100458628, v10);
  v78 = sub_100019C6C(&qword_1005D26E8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v78);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._object = (void *)0x8000000100480280;
  v13._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v15 = swift_getKeyPath(&unk_100458650, v14);
  v16 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v77 = v16;
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v16);
  swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v5);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E65746F6E20;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = v8;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AppendToNoteIntent, v8);
  v76 = v8;
  v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AppendToNoteIntent, v8);
  v79 = *(void (**)(char *, uint64_t))(v2 + 8);
  v20 = v80;
  v79(v4, v80);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 2, &type metadata for AppendToNoteIntent, v19);
  v21._object = (void *)0x80000001004802A0;
  v21._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100458650, v22);
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v16);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v5);
  swift_release(v24);
  v25._countAndFlagsBits = 0x61202C65746F6E20;
  v25._object = (void *)0xEB00000000206464;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v27 = swift_getKeyPath(&unk_100458628, v26);
  v28 = v78;
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v27, v78);
  swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v5);
  swift_release(v29);
  v30._countAndFlagsBits = 46;
  v30._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = v76;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AppendToNoteIntent, v76);
  v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AppendToNoteIntent, v31);
  v79(v4, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 2, &type metadata for AppendToNoteIntent, v31);
  v32._countAndFlagsBits = 543450177;
  v32._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v34 = swift_getKeyPath(&unk_100458628, v33);
  v71 = a1;
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v28);
  swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v5);
  swift_release(v35);
  v36._countAndFlagsBits = 0xD000000000000015;
  v36._object = (void *)0x80000001004802C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v38 = swift_getKeyPath(&unk_100458650, v37);
  v39 = v77;
  v40 = _AssistantIntent.IntentProjection.subscript.getter(v38, v77);
  swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v40, v5);
  swift_release(v40);
  v41._countAndFlagsBits = 0x2E65746F6E20;
  v41._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = v76;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AppendToNoteIntent, v76);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AppendToNoteIntent, v42);
  v43 = v79;
  v79(v4, v80);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 2, &type metadata for AppendToNoteIntent, v42);
  v44._countAndFlagsBits = 0xD000000000000014;
  v44._object = (void *)0x80000001004802E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v46 = swift_getKeyPath(&unk_100458650, v45);
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v46, v39);
  swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v5);
  swift_release(v47);
  v48._countAndFlagsBits = 0x77202C65746F6E20;
  v48._object = (void *)0xED00002065746972;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v50 = swift_getKeyPath(&unk_100458628, v49);
  v51 = _AssistantIntent.IntentProjection.subscript.getter(v50, v28);
  swift_release(v50);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v51, v5);
  swift_release(v51);
  v52._countAndFlagsBits = 46;
  v52._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AppendToNoteIntent, v42);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AppendToNoteIntent, v42);
  v53 = v80;
  v43(v4, v80);
  v54 = v43;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 2, &type metadata for AppendToNoteIntent, v42);
  v55._countAndFlagsBits = 0x20796D206E49;
  v55._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v55);
  v57 = swift_getKeyPath(&unk_100458650, v56);
  v58 = _AssistantIntent.IntentProjection.subscript.getter(v57, v77);
  swift_release(v57);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v58, v5);
  swift_release(v58);
  v59._countAndFlagsBits = 0x61202C65746F6E20;
  v59._object = (void *)0xEB00000000206464;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v59);
  v61 = swift_getKeyPath(&unk_100458628, v60);
  v62 = _AssistantIntent.IntentProjection.subscript.getter(v61, v78);
  swift_release(v61);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v62, v5);
  swift_release(v62);
  v63._countAndFlagsBits = 46;
  v63._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v63);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for AppendToNoteIntent, v42);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for AppendToNoteIntent, v42);
  v54(v4, v53);
  v65 = sub_100012E18(&qword_1005D2A80);
  v66 = swift_allocObject(v65, 72, 7);
  *(_OWORD *)(v66 + 16) = xmmword_100457CA0;
  v67 = v74;
  *(_QWORD *)(v66 + 32) = v75;
  *(_QWORD *)(v66 + 40) = v67;
  v68 = v72;
  *(_QWORD *)(v66 + 48) = v73;
  *(_QWORD *)(v66 + 56) = v68;
  *(_QWORD *)(v66 + 64) = v64;
  v69 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v66);
  return v69;
}

uint64_t sub_100197734(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for AttributedString(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_100197804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458628, v4);
  v6 = sub_100019C6C(&qword_1005D26E8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_10014C588();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001979B0, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458650, v11);
  v13 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197AB4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001979B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x80000001004801D0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(7889229, 0xE300000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000019, 0x80000001004801F0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000002CLL, 0x8000000100480210);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000003DLL, 0x8000000100480240);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100197AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x65697265636F7247, 0xE900000000000073);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000016, 0x8000000100480170);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000016, 0x8000000100480190);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x654C206465766153, 0xEE00736572757463);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000015, 0x80000001004801B0);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_100197BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A60);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001855C8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000017, 0x80000001004800B0, &type metadata for ApplyFormattingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002BLL, 0x80000001004800D0, &type metadata for ApplyFormattingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000033, 0x8000000100480100, &type metadata for ApplyFormattingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x8000000100480140, &type metadata for ApplyFormattingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A68);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_100197DD0(uint64_t a1)
{
  return sub_100198438(a1, (uint64_t)&unk_100458600, (uint64_t)sub_100197DE4);
}

uint64_t sub_100197DE4()
{
  return sub_1001B08A0(0x656C62616E65, 0xE600000000000000);
}

uint64_t sub_100197DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A60);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001855C8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000001CLL, 0x800000010047FFF0, &type metadata for ApplyFormattingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100480010, &type metadata for ApplyFormattingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000036, 0x8000000100480040, &type metadata for ApplyFormattingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x8000000100480080, &type metadata for ApplyFormattingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A68);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_100197FFC(uint64_t a1)
{
  return sub_100198438(a1, (uint64_t)&unk_1004585D8, (uint64_t)sub_100197DE4);
}

uint64_t sub_100198010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A60);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001855C8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000001CLL, 0x800000010047FF20, &type metadata for ApplyFormattingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000031, 0x800000010047FF40, &type metadata for ApplyFormattingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000039, 0x800000010047FF80, &type metadata for ApplyFormattingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x800000010047FFC0, &type metadata for ApplyFormattingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A68);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_100198210(uint64_t a1)
{
  return sub_100198438(a1, (uint64_t)&unk_1004585B0, (uint64_t)sub_100197DE4);
}

uint64_t sub_100198224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A60);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001855C8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000020, 0x800000010047FE40, &type metadata for ApplyFormattingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000034, 0x800000010047FE70, &type metadata for ApplyFormattingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000003CLL, 0x800000010047FEB0, &type metadata for ApplyFormattingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010047FEF0, &type metadata for ApplyFormattingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ApplyFormattingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A68);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_100198424(uint64_t a1)
{
  return sub_100198438(a1, (uint64_t)&unk_100458588, (uint64_t)sub_100197DE4);
}

uint64_t sub_100198438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = type metadata accessor for _AssistantIntent.Value(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2, v9);
  v11 = sub_1001B37D8(&qword_1005D2A48, &qword_1005D2A50, (void (*)(void))sub_1001B3E3C);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  v13 = sub_1001855C8();
  _AssistantIntent.Value.init<A>(for:builder:)(v12, a3, 0, v13);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = sub_100012E18(&qword_1005D2650);
  v16 = swift_allocObject(v15, 40, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100451C20;
  *(_QWORD *)(v16 + 32) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v16);
  return v17;
}

uint64_t sub_10019856C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D2A38);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10001737C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x800000010047FDD0, &type metadata for ChangeFolderViewSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFolderViewSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000039, 0x800000010047FE00, &type metadata for ChangeFolderViewSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFolderViewSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001CLL, 0x800000010047FDB0, &type metadata for ChangeFolderViewSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFolderViewSettingIntent, v4);
  v6(v3, v0);
  v9 = sub_100012E18(&qword_1005D2A40);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100456A10;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_100198714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458538, v4);
  v6 = sub_100177380();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_10001737C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001988A8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458560, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197DE4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001988A8()
{
  return sub_1001B08A0(0x567972656C6C6167, 0xEB00000000776569);
}

uint64_t sub_1001988C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for ChangeOperation(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_100198998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_100012E18(&qword_1005D2A38);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10001737C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001CLL, 0x800000010047FDB0, &type metadata for ChangeFolderViewSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFolderViewSettingIntent, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_100012E18(&qword_1005D2A40);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100451C20;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100198AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458538, v4);
  v6 = sub_100177380();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_10001737C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001988A8, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458560, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100198C38, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_100198C38()
{
  return sub_1001B08A0(0x656C67676F74, 0xE600000000000000);
}

uint64_t sub_100198C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_100012E18(&qword_1005D2A38);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10001737C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x800000010047FD60, &type metadata for ChangeFolderViewSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFolderViewSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001BLL, 0x800000010047FD90, &type metadata for ChangeFolderViewSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFolderViewSettingIntent, v4);
  v6(v3, v0);
  v8 = sub_100012E18(&qword_1005D2A40);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100454E90;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v7;
  v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_100198DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458538, v4);
  v6 = sub_100177380();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_10001737C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_100198F40, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458560, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197DE4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_100198F40()
{
  return sub_1001B08A0(0x776569567473696CLL, 0xE800000000000000);
}

uint64_t sub_100198F58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t KeyPath;
  unint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  void (*v31)(char *, uint64_t);
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  char *v44;
  Swift::String v45;
  void (*v46)(char *, uint64_t);
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;

  v82 = sub_100012E18(&qword_1005D2A20);
  v2 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = v5;
  __chkstk_darwin(v5);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D2A28);
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100185C94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for ChangeTagSelectionIntent, v13);
  v14._object = (void *)0x800000010047F9D0;
  v14._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  LODWORD(v75) = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v74 = *(void (**)(char *))(v6 + 104);
  v72 = v7;
  v74(v9);
  v71 = v9;
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v9, v10);
  v73 = *(void (**)(char *, uint64_t))(v6 + 8);
  v73(v9, v7);
  v15._countAndFlagsBits = 0x6E69207461687420;
  v15._object = (void *)0xEE00206564756C63;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_1004584C0, v16);
  v18 = sub_1001B2FF8();
  v81 = v18;
  v19 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v18);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v10);
  swift_release(v19);
  v20._countAndFlagsBits = 46;
  v20._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for ChangeTagSelectionIntent, v13);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ChangeTagSelectionIntent, v13);
  v22 = *(void (**)(char *, uint64_t))(v2 + 8);
  v78 = v21;
  v79 = v22;
  v23 = v82;
  v22(v4, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for ChangeTagSelectionIntent, v13);
  v24._countAndFlagsBits = 0xD000000000000023;
  v24._object = (void *)0x800000010047FCE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v26 = swift_getKeyPath(&unk_1004584C0, v25);
  v27 = v18;
  v28 = a1;
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v26, v27);
  swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v10);
  swift_release(v29);
  v30._countAndFlagsBits = 46;
  v30._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for ChangeTagSelectionIntent, v13);
  v77 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ChangeTagSelectionIntent, v13);
  v31 = v79;
  v79(v4, v23);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for ChangeTagSelectionIntent, v13);
  v32._countAndFlagsBits = 0x74207463656C6553;
  v32._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v34 = swift_getKeyPath(&unk_1004584C0, v33);
  v80 = v28;
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v81);
  swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v10);
  swift_release(v35);
  v36._countAndFlagsBits = 0x2E67617420;
  v36._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for ChangeTagSelectionIntent, v13);
  v76 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ChangeTagSelectionIntent, v13);
  v31(v4, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 2, &type metadata for ChangeTagSelectionIntent, v13);
  v37._countAndFlagsBits = 0x6D207463656C6553;
  v37._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v39 = swift_getKeyPath(&unk_1004584C0, v38);
  v40 = v81;
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v39, v81);
  swift_release(v39);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v10);
  swift_release(v41);
  v42._countAndFlagsBits = 0x206E692067617420;
  v42._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v44 = v71;
  v43 = v72;
  ((void (*)(char *, _QWORD, uint64_t))v74)(v71, v75, v72);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v10);
  v73(v44, v43);
  v45._countAndFlagsBits = 46;
  v45._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for ChangeTagSelectionIntent, v13);
  v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ChangeTagSelectionIntent, v13);
  v46 = v79;
  v79(v4, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 1, &type metadata for ChangeTagSelectionIntent, v13);
  v47._countAndFlagsBits = 0xD000000000000025;
  v47._object = (void *)0x800000010047FD10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  v49 = swift_getKeyPath(&unk_1004584E8, v48);
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v49, v40);
  swift_release(v49);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v10);
  swift_release(v50);
  v51._countAndFlagsBits = 46;
  v51._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for ChangeTagSelectionIntent, v13);
  v74 = (void (*)(char *))static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ChangeTagSelectionIntent, v13);
  v46(v4, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for ChangeTagSelectionIntent, v13);
  v52._countAndFlagsBits = 0x7463656C65736544;
  v52._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v54 = swift_getKeyPath(&unk_1004584E8, v53);
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v54, v40);
  swift_release(v54);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v10);
  swift_release(v55);
  v56._countAndFlagsBits = 0x2E67617420;
  v56._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for ChangeTagSelectionIntent, v13);
  v73 = (void (*)(char *, uint64_t))static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ChangeTagSelectionIntent, v13);
  v57 = v82;
  v46(v4, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for ChangeTagSelectionIntent, v13);
  v58._countAndFlagsBits = 0xD000000000000013;
  v58._object = (void *)0x800000010047FD40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v60 = swift_getKeyPath(&unk_1004584E8, v59);
  v61 = _AssistantIntent.IntentProjection.subscript.getter(v60, v81);
  swift_release(v60);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v61, v10);
  swift_release(v61);
  v62._countAndFlagsBits = 0x2E67617420;
  v62._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v12, &type metadata for ChangeTagSelectionIntent, v13);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ChangeTagSelectionIntent, v13);
  v46(v4, v57);
  v64 = sub_100012E18(&qword_1005D2A30);
  v65 = swift_allocObject(v64, 88, 7);
  *(_OWORD *)(v65 + 16) = xmmword_100457CC0;
  v66 = v77;
  *(_QWORD *)(v65 + 32) = v78;
  *(_QWORD *)(v65 + 40) = v66;
  v67 = v75;
  *(_QWORD *)(v65 + 48) = v76;
  *(_QWORD *)(v65 + 56) = v67;
  v68 = v73;
  *(_QWORD *)(v65 + 64) = v74;
  *(_QWORD *)(v65 + 72) = v68;
  *(_QWORD *)(v65 + 80) = v63;
  v69 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v65);
  return v69;
}

uint64_t sub_10019973C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004584C0, v4);
  v6 = sub_1001B2FF8();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100185C94();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001998B4, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_1004584E8, v11);
  v13 = _AssistantIntent.IntentProjection.subscript.getter(v12, v6);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v13, sub_10019995C, 0, v8);
  v14 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v15 = sub_100012E18(&qword_1005D2650);
  v16 = swift_allocObject(v15, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100454E90;
  *(_QWORD *)(v16 + 32) = v9;
  *(_QWORD *)(v16 + 40) = v14;
  v17 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v16);
  return v17;
}

uint64_t sub_1001998B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661719, 0xE400000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C616E6F73726550, 0xE800000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(842149938, 0xE400000000000000);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10019995C()
{
  return sub_1001B0550(0x736956656C707041, 0xEE006F72506E6F69, 0x73656D614E676F44, 0xE800000000000000);
}

uint64_t sub_100199994()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v36 = sub_100012E18(&qword_1005D2A20);
  v0 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2A28);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185C94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(46, 2, &type metadata for ChangeTagSelectionIntent, v6);
  v7._object = (void *)0x800000010047FA80;
  v7._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004584C0, v8);
  v10 = sub_1001B2FF8();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v3);
  swift_release(v11);
  v12._countAndFlagsBits = 0xD00000000000001DLL;
  v12._object = (void *)0x800000010047FCA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  v14 = swift_getKeyPath(&unk_1004584E8, v13);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v10);
  swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v3);
  swift_release(v15);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeTagSelectionIntent, v6);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeTagSelectionIntent, v6);
  v34 = *(void (**)(char *, uint64_t))(v0 + 8);
  v35 = v17;
  v18 = v36;
  v34(v2, v36);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(46, 2, &type metadata for ChangeTagSelectionIntent, v6);
  v19._countAndFlagsBits = 0xD000000000000018;
  v19._object = (void *)0x800000010047FAC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v21 = swift_getKeyPath(&unk_1004584C0, v20);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v10);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3);
  swift_release(v22);
  v23._countAndFlagsBits = 0xD000000000000011;
  v23._object = (void *)0x800000010047FCC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v25 = swift_getKeyPath(&unk_1004584E8, v24);
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v10);
  swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v3);
  swift_release(v26);
  v27._countAndFlagsBits = 0x2E67617420;
  v27._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeTagSelectionIntent, v6);
  v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeTagSelectionIntent, v6);
  v34(v2, v18);
  v29 = sub_100012E18(&qword_1005D2A30);
  v30 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100454E90;
  *(_QWORD *)(v30 + 32) = v35;
  *(_QWORD *)(v30 + 40) = v28;
  v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v30);
  return v31;
}

uint64_t sub_100199D24(uint64_t a1)
{
  return sub_10019B320(a1, (uint64_t)sub_1001B41EC, (uint64_t)sub_10019995C, (uint64_t)sub_100199D40);
}

uint64_t sub_100199D40()
{
  return sub_1001B08A0(7105633, 0xE300000000000000);
}

uint64_t sub_100199D50()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v36 = sub_100012E18(&qword_1005D2A20);
  v0 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2A28);
  __chkstk_darwin(v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185C94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(56, 2, &type metadata for ChangeTagSelectionIntent, v6);
  v7._countAndFlagsBits = 0xD00000000000001CLL;
  v7._object = (void *)0x800000010047FC40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004584C0, v8);
  v10 = sub_1001B2FF8();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v3);
  swift_release(v11);
  v12._object = (void *)0x800000010047FC60;
  v12._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  v14 = swift_getKeyPath(&unk_1004584E8, v13);
  v15 = _AssistantIntent.IntentProjection.subscript.getter(v14, v10);
  swift_release(v14);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v3);
  swift_release(v15);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeTagSelectionIntent, v6);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeTagSelectionIntent, v6);
  v34 = *(void (**)(char *, uint64_t))(v0 + 8);
  v35 = v17;
  v18 = v36;
  v34(v2, v36);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(56, 2, &type metadata for ChangeTagSelectionIntent, v6);
  v19._countAndFlagsBits = 0xD000000000000018;
  v19._object = (void *)0x800000010047FAC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v21 = swift_getKeyPath(&unk_1004584C0, v20);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v10);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3);
  swift_release(v22);
  v23._object = (void *)0x800000010047FC80;
  v23._countAndFlagsBits = 0xD00000000000001BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v25 = swift_getKeyPath(&unk_1004584E8, v24);
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v25, v10);
  swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v3);
  swift_release(v26);
  v27._countAndFlagsBits = 0x2E67617420;
  v27._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeTagSelectionIntent, v6);
  v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeTagSelectionIntent, v6);
  v34(v2, v18);
  v29 = sub_100012E18(&qword_1005D2A30);
  v30 = swift_allocObject(v29, 48, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100454E90;
  *(_QWORD *)(v30 + 32) = v35;
  *(_QWORD *)(v30 + 40) = v28;
  v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v30);
  return v31;
}

uint64_t sub_10019A0D8(uint64_t a1)
{
  return sub_10019B320(a1, (uint64_t)sub_1001B41EC, (uint64_t)sub_10019995C, (uint64_t)sub_10019A0F4);
}

uint64_t sub_10019A0F4()
{
  return sub_1001B08A0(7958113, 0xE300000000000000);
}

uint64_t sub_10019A104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  void (*v23)(char *, uint64_t);
  Swift::String v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  void (*v56)(char *, uint64_t);
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  unint64_t v82;
  uint64_t v83;

  v2 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  __chkstk_darwin(v2);
  v75 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_100012E18(&qword_1005D2A20);
  v4 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2A28);
  __chkstk_darwin(v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100185C94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v11._countAndFlagsBits = 0xD000000000000025;
  v11._object = (void *)0x800000010047FB90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_1004584C0, v12);
  v14 = sub_1001B2FF8();
  v82 = v14;
  v80 = a1;
  v15 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v14);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v7);
  swift_release(v15);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v79 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v81 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17 = v83;
  v81(v6, v83);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v18._countAndFlagsBits = 0xD000000000000017;
  v18._object = (void *)0x800000010047FBC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v20 = swift_getKeyPath(&unk_1004584C0, v19);
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v20, v14);
  swift_release(v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v7);
  swift_release(v21);
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v78 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v23 = v81;
  v81(v6, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for ChangeTagSelectionIntent, v10);
  v24._object = (void *)0x800000010047F9D0;
  v24._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v26 = v75;
  v25 = v76;
  v27 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v77);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v7);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  v28._countAndFlagsBits = 0x6E69207461687420;
  v28._object = (void *)0xEE00206564756C63;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_1004584C0, v29);
  v31 = v82;
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v30, v82);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v7);
  swift_release(v32);
  v33._countAndFlagsBits = 46;
  v33._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v77 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v23(v6, v83);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v34._countAndFlagsBits = 0xD000000000000021;
  v34._object = (void *)0x800000010047FBE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_1004584E8, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v31);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v7);
  swift_release(v37);
  v38._countAndFlagsBits = 46;
  v38._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v76 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v39 = v83;
  v40 = v81;
  v81(v6, v83);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v41._countAndFlagsBits = 0xD000000000000028;
  v41._object = (void *)0x800000010047FC10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v43 = swift_getKeyPath(&unk_1004584E8, v42);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v82);
  swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v7);
  swift_release(v44);
  v45._countAndFlagsBits = 46;
  v45._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v75 = (char *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v40(v6, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 2, &type metadata for ChangeTagSelectionIntent, v10);
  v46._countAndFlagsBits = 0xD000000000000010;
  v46._object = (void *)0x800000010047FA80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v48 = swift_getKeyPath(&unk_1004584C0, v47);
  v49 = v82;
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v48, v82);
  swift_release(v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v7);
  swift_release(v50);
  v51._countAndFlagsBits = 0xD00000000000001FLL;
  v51._object = (void *)0x800000010047FAA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  v53 = swift_getKeyPath(&unk_1004584E8, v52);
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v53, v49);
  swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v7);
  swift_release(v54);
  v55._countAndFlagsBits = 46;
  v55._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v55);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v56 = v81;
  v81(v6, v83);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 2, &type metadata for ChangeTagSelectionIntent, v10);
  v57._countAndFlagsBits = 0xD000000000000018;
  v57._object = (void *)0x800000010047FAC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v59 = swift_getKeyPath(&unk_1004584C0, v58);
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v49);
  swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v7);
  swift_release(v60);
  v61._object = (void *)0x800000010047FAE0;
  v61._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  v63 = swift_getKeyPath(&unk_1004584E8, v62);
  v64 = _AssistantIntent.IntentProjection.subscript.getter(v63, v49);
  swift_release(v63);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v64, v7);
  swift_release(v64);
  v65._countAndFlagsBits = 0x2E7367617420;
  v65._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v65);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v56(v6, v83);
  v67 = sub_100012E18(&qword_1005D2A30);
  v68 = swift_allocObject(v67, 88, 7);
  *(_OWORD *)(v68 + 16) = xmmword_100457CC0;
  v69 = v78;
  *(_QWORD *)(v68 + 32) = v79;
  *(_QWORD *)(v68 + 40) = v69;
  v70 = v76;
  *(_QWORD *)(v68 + 48) = v77;
  *(_QWORD *)(v68 + 56) = v70;
  v71 = v74;
  *(_QWORD *)(v68 + 64) = v75;
  *(_QWORD *)(v68 + 72) = v71;
  *(_QWORD *)(v68 + 80) = v66;
  v72 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v68);
  return v72;
}

uint64_t sub_10019A974(uint64_t a1)
{
  return sub_10019B320(a1, (uint64_t)sub_10019A990, (uint64_t)sub_10019AA60, (uint64_t)sub_100199D40);
}

uint64_t sub_10019A990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x800000010047FB50);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000015, 0x800000010047FB70);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x646E612032323032, 0xED00003332303220);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10019AA60()
{
  return sub_1001B0550(0xD000000000000023, 0x800000010047FB00, 0xD000000000000016, 0x800000010047FB30);
}

uint64_t sub_10019AA98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  void (*v23)(char *, uint64_t);
  Swift::String v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  Swift::String v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);

  v2 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v2;
  __chkstk_darwin(v2);
  v75 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_100012E18(&qword_1005D2A20);
  v4 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2A28);
  __chkstk_darwin(v7);
  v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100185C94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v11._countAndFlagsBits = 0xD000000000000028;
  v11._object = (void *)0x800000010047F970;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_1004584C0, v12);
  v14 = sub_1001B2FF8();
  v80 = a1;
  v81 = v14;
  v15 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v14);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v15, v7);
  swift_release(v15);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v79 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v83 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17 = v82;
  v83(v6, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v18._countAndFlagsBits = 0xD000000000000027;
  v18._object = (void *)0x800000010047F9A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v20 = swift_getKeyPath(&unk_1004584C0, v19);
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v20, v14);
  swift_release(v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v7);
  swift_release(v21);
  v22._countAndFlagsBits = 0x2E7367617420;
  v22._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v78 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v23 = v83;
  v83(v6, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 2, &type metadata for ChangeTagSelectionIntent, v10);
  v24._object = (void *)0x800000010047F9D0;
  v24._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v26 = v75;
  v25 = v76;
  v27 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v77);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v7);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  v28._countAndFlagsBits = 0xD000000000000015;
  v28._object = (void *)0x800000010047F9F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_1004584C0, v29);
  v31 = v81;
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v30, v81);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v7);
  swift_release(v32);
  v33._countAndFlagsBits = 46;
  v33._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v77 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v23(v6, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v34._countAndFlagsBits = 0xD000000000000024;
  v34._object = (void *)0x800000010047FA10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_1004584E8, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v31);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v7);
  swift_release(v37);
  v38._countAndFlagsBits = 46;
  v38._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v76 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v40 = v82;
  v39 = v83;
  v83(v6, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(53, 1, &type metadata for ChangeTagSelectionIntent, v10);
  v41._countAndFlagsBits = 0xD000000000000034;
  v41._object = (void *)0x800000010047FA40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v43 = swift_getKeyPath(&unk_1004584E8, v42);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v81);
  swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v7);
  swift_release(v44);
  v45._countAndFlagsBits = 46;
  v45._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v75 = (char *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v39(v6, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 2, &type metadata for ChangeTagSelectionIntent, v10);
  v46._countAndFlagsBits = 0xD000000000000010;
  v46._object = (void *)0x800000010047FA80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v48 = swift_getKeyPath(&unk_1004584C0, v47);
  v49 = v81;
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v48, v81);
  swift_release(v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v7);
  swift_release(v50);
  v51._countAndFlagsBits = 0xD00000000000001FLL;
  v51._object = (void *)0x800000010047FAA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  v53 = swift_getKeyPath(&unk_1004584E8, v52);
  v54 = _AssistantIntent.IntentProjection.subscript.getter(v53, v49);
  swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v54, v7);
  swift_release(v54);
  v55._countAndFlagsBits = 46;
  v55._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v55);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v56 = v82;
  v83(v6, v82);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 2, &type metadata for ChangeTagSelectionIntent, v10);
  v57._countAndFlagsBits = 0xD000000000000018;
  v57._object = (void *)0x800000010047FAC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v59 = swift_getKeyPath(&unk_1004584C0, v58);
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v49);
  swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v7);
  swift_release(v60);
  v61._object = (void *)0x800000010047FAE0;
  v61._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  v63 = swift_getKeyPath(&unk_1004584E8, v62);
  v64 = _AssistantIntent.IntentProjection.subscript.getter(v63, v49);
  swift_release(v63);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v64, v7);
  swift_release(v64);
  v65._countAndFlagsBits = 0x2E7367617420;
  v65._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v65);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for ChangeTagSelectionIntent, v10);
  v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v6, &type metadata for ChangeTagSelectionIntent, v10);
  v83(v6, v56);
  v67 = sub_100012E18(&qword_1005D2A30);
  v68 = swift_allocObject(v67, 88, 7);
  *(_OWORD *)(v68 + 16) = xmmword_100457CC0;
  v69 = v78;
  *(_QWORD *)(v68 + 32) = v79;
  *(_QWORD *)(v68 + 40) = v69;
  v70 = v76;
  *(_QWORD *)(v68 + 48) = v77;
  *(_QWORD *)(v68 + 56) = v70;
  v71 = v74;
  *(_QWORD *)(v68 + 64) = v75;
  *(_QWORD *)(v68 + 72) = v71;
  *(_QWORD *)(v68 + 80) = v66;
  v72 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v68);
  return v72;
}

uint64_t sub_10019B304(uint64_t a1)
{
  return sub_10019B320(a1, (uint64_t)sub_10019B504, (uint64_t)sub_10019B5D0, (uint64_t)sub_10019A0F4);
}

uint64_t sub_10019B320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  v7 = type metadata accessor for _AssistantIntent.Value(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004584C0, v11);
  v13 = sub_1001B2FF8();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v13);
  swift_release(KeyPath);
  v15 = sub_100185C94();
  _AssistantIntent.Value.init<A>(for:builder:)(v14, a2, 0, v15);
  v16 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v10);
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v19 = swift_getKeyPath(&unk_1004584E8, v18);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v13);
  swift_release(v19);
  _AssistantIntent.Value.init<A>(for:builder:)(v20, a3, 0, v15);
  v21 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v10);
  v17(v10, v7);
  v23 = swift_getKeyPath(&unk_100458510, v22);
  v24 = sub_1001B3D1C();
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v24);
  swift_release(v23);
  _AssistantIntent.Value.init<A>(for:builder:)(v25, a4, 0, v15);
  v26 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v10);
  v17(v10, v7);
  v27 = sub_100012E18(&qword_1005D2650);
  v28 = swift_allocObject(v27, 56, 7);
  *(_OWORD *)(v28 + 16) = xmmword_100456A10;
  *(_QWORD *)(v28 + 32) = v16;
  *(_QWORD *)(v28 + 40) = v21;
  *(_QWORD *)(v28 + 48) = v26;
  v29 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v28);
  return v29;
}

uint64_t sub_10019B504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000016, 0x800000010047F930);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047F950);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20726F2032323032, 0xEC00000033323032);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10019B5D0()
{
  return sub_1001B0550(0xD000000000000022, 0x800000010047F8E0, 0xD000000000000015, 0x800000010047F910);
}

uint64_t sub_10019B608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000027, 0x800000010047F820, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000025, 0x800000010047F850, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000021, 0x800000010047F880, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000029, 0x800000010047F8B0, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A10);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_10019B800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019B994, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019B9B0, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019B994()
{
  return sub_1001B08A0(0xD000000000000010, 0x8000000100476720);
}

uint64_t sub_10019B9B0()
{
  return sub_1001B08A0(0x656C6261736964, 0xE700000000000000);
}

uint64_t sub_10019B9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010047F770, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000026, 0x800000010047F790, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x800000010047F7C0, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x800000010047F7F0, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A10);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_10019BBBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019B994, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197DE4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019BD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000025, 0x800000010047F6B0, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x800000010047F6E0, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x800000010047F710, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000025, 0x800000010047F740, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A10);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_10019BF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019C0DC, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019B9B0, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019C0DC()
{
  return sub_1001B08A0(0xD000000000000014, 0x8000000100476740);
}

uint64_t sub_10019C0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000026, 0x800000010047F600, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x800000010047F630, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000027, 0x800000010047F660, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010047F690, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v10 = sub_100012E18(&qword_1005D2A10);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v11 + 32) = v5;
  *(_QWORD *)(v11 + 40) = v7;
  *(_QWORD *)(v11 + 48) = v8;
  *(_QWORD *)(v11 + 56) = v9;
  v12 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_10019C2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019C0DC, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197DE4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019C480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x800000010047F560, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000033, 0x800000010047F590, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x800000010047F5D0, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v9 = sub_100012E18(&qword_1005D2A10);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100456A10;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_10019C628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019C7BC, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019B9B0, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019C7BC()
{
  return sub_1001B08A0(0x6363416C61636F6CLL, 0xEC000000746E756FLL);
}

uint64_t sub_10019C7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000019, 0x800000010047F480, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x800000010047F4A0, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002ALL, 0x800000010047F4D0, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000021, 0x800000010047F500, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010047F530, &type metadata for ChangeSettingIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D2A10);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_10019CA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019C7BC, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197DE4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019CBAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000002BLL, 0x800000010047F380, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000031, 0x800000010047F3B0, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000020, 0x800000010047F3F0, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000002CLL, 0x800000010047F420, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002ELL, 0x800000010047F450, &type metadata for ChangeSettingIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D2A10);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_10019CDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019CF88, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019B9B0, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019CF88()
{
  return sub_1001B08A0(0xD000000000000013, 0x800000010047F360);
}

uint64_t sub_10019CFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x800000010047F270, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000032, 0x800000010047F2A0, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000001FLL, 0x800000010047F2E0, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000024, 0x800000010047F300, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002FLL, 0x800000010047F330, &type metadata for ChangeSettingIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D2A10);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_10019D1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019D380, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197DE4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019D380()
{
  return sub_1001B08A0(0xD000000000000014, 0x8000000100476770);
}

uint64_t sub_10019D39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000003FLL, 0x800000010047F140, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000036, 0x800000010047F180, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000029, 0x800000010047F1C0, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000026, 0x800000010047F1F0, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000004ALL, 0x800000010047F220, &type metadata for ChangeSettingIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D2A10);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_10019D5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019D770, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019B9B0, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019D770()
{
  return sub_1001B08A0(0xD000000000000013, 0x8000000100476790);
}

uint64_t sub_10019D78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D2A08);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B28F8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000003DLL, 0x800000010047F000, &type metadata for ChangeSettingIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000035, 0x800000010047F040, &type metadata for ChangeSettingIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x800000010047F080, &type metadata for ChangeSettingIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000037, 0x800000010047F0B0, &type metadata for ChangeSettingIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000004BLL, 0x800000010047F0F0, &type metadata for ChangeSettingIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeSettingIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D2A10);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_10019D9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458470, v4);
  v6 = sub_1001B3B68();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B28F8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019D770, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458498, v11);
  v13 = sub_100019C6C(&qword_1005D2A00, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100197DE4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019DB60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v60 = a1;
  v61 = sub_100012E18(&qword_1005D29E0);
  v1 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v3 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D29E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001B26D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for CreateChecklistItemIntent, v7);
  v8._countAndFlagsBits = 0xD000000000000016;
  v8._object = (void *)0x800000010047EF30;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100458420, v9);
  v11 = sub_1001B32F0();
  v59 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CreateChecklistItemIntent, v7);
  v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CreateChecklistItemIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v61;
  v14(v3, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for CreateChecklistItemIntent, v7);
  v16._countAndFlagsBits = 0xD000000000000017;
  v16._object = (void *)0x800000010047EF50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100458420, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v11);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v4);
  swift_release(v19);
  v20._countAndFlagsBits = 0x2E65746F6E20;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CreateChecklistItemIntent, v7);
  v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CreateChecklistItemIntent, v7);
  v14(v3, v15);
  v21 = v14;
  v53 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 1, &type metadata for CreateChecklistItemIntent, v7);
  v22._countAndFlagsBits = 0xD000000000000022;
  v22._object = (void *)0x800000010047EF70;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v24 = swift_getKeyPath(&unk_100458420, v23);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v59);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v4);
  swift_release(v25);
  v26._countAndFlagsBits = 0x2E65746F6E20;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CreateChecklistItemIntent, v7);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CreateChecklistItemIntent, v7);
  v27 = v61;
  v21(v3, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for CreateChecklistItemIntent, v7);
  v28._countAndFlagsBits = 0xD00000000000001BLL;
  v28._object = (void *)0x800000010047EFA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_100458448, v29);
  v59 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v59);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v4);
  swift_release(v31);
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CreateChecklistItemIntent, v7);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CreateChecklistItemIntent, v7);
  v33 = v53;
  v53(v3, v27);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, &type metadata for CreateChecklistItemIntent, v7);
  v34._countAndFlagsBits = 0xD00000000000001FLL;
  v34._object = (void *)0x800000010047EFC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100458448, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v59);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v4);
  swift_release(v37);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CreateChecklistItemIntent, v7);
  v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CreateChecklistItemIntent, v7);
  v39 = v61;
  v33(v3, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for CreateChecklistItemIntent, v7);
  v40._countAndFlagsBits = 544503120;
  v40._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v42 = swift_getKeyPath(&unk_100458448, v41);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v59);
  swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v4);
  swift_release(v43);
  v44._object = (void *)0x800000010047EFE0;
  v44._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for CreateChecklistItemIntent, v7);
  v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for CreateChecklistItemIntent, v7);
  v33(v3, v39);
  v46 = sub_100012E18(&qword_1005D29F0);
  v47 = swift_allocObject(v46, 80, 7);
  *(_OWORD *)(v47 + 16) = xmmword_100457CD0;
  v48 = v57;
  *(_QWORD *)(v47 + 32) = v58;
  *(_QWORD *)(v47 + 40) = v48;
  v49 = v55;
  *(_QWORD *)(v47 + 48) = v56;
  *(_QWORD *)(v47 + 56) = v49;
  *(_QWORD *)(v47 + 64) = v54;
  *(_QWORD *)(v47 + 72) = v45;
  v50 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v47);
  return v50;
}

uint64_t sub_10019E1CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458420, v4);
  v6 = sub_1001B32F0();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B26D8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019E360, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458448, v11);
  v13 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019E424, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019E360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047EEF0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001BLL, 0x800000010047EF10);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x736D657449203150, 0xE800000000000000);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10019E424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6461657242, 0xE500000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047EEB0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x800000010047EED0);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_10019E4E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t FolderIntent;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  Swift::String v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;

  v95 = a1;
  v1 = sub_100012E18(&qword_1005D29C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = v1;
  __chkstk_darwin(v1);
  v5 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005D29D0);
  __chkstk_darwin(v6);
  v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  v10 = sub_100019C6C(&qword_1005D6AA0, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, FolderIntent, v10);
  v11._countAndFlagsBits = 0xD00000000000001BLL;
  v11._object = (void *)0x800000010047EE00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_1004583D8, v12);
  v96 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v96);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v6);
  swift_release(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, FolderIntent, v10);
  v91 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, FolderIntent, v10);
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v93 = v3;
  v94 = v16;
  v17 = v3;
  v16(v5, v3);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, FolderIntent, v10);
  v18._countAndFlagsBits = 0xD000000000000014;
  v18._object = (void *)0x800000010047EE20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v20 = swift_getKeyPath(&unk_1004583D8, v19);
  v21 = v96;
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v20, v96);
  swift_release(v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v6);
  swift_release(v22);
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, FolderIntent, v10);
  v90 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, FolderIntent, v10);
  v24 = v17;
  v25 = v94;
  v94(v5, v24);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, FolderIntent, v10);
  v26._countAndFlagsBits = 0xD00000000000001DLL;
  v26._object = (void *)0x800000010047EE40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v28 = swift_getKeyPath(&unk_1004583D8, v27);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v21);
  swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v6);
  swift_release(v29);
  v30._countAndFlagsBits = 46;
  v30._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = FolderIntent;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, FolderIntent, v10);
  v92 = FolderIntent;
  v89 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, FolderIntent, v10);
  v32 = v93;
  v25(v5, v93);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, v31, v10);
  v33._countAndFlagsBits = 0x6120707520746553;
  v33._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v35 = swift_getKeyPath(&unk_1004583D8, v34);
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v21);
  swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v6);
  swift_release(v36);
  v37._countAndFlagsBits = 0x2E7265646C6F6620;
  v37._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v84 = v5;
  v38 = v92;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, v92, v10);
  v88 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, v38, v10);
  v25(v5, v32);
  v39 = v10;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, v38, v10);
  v40._countAndFlagsBits = 0x206120646441;
  v40._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v42 = swift_getKeyPath(&unk_1004583D8, v41);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v96);
  swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v6);
  swift_release(v43);
  v44._countAndFlagsBits = 0x207265646C6F6620;
  v44._object = (void *)0xEE0020796D206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v46 = swift_getKeyPath(&unk_100458400, v45);
  v85 = sub_1001B3974();
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v46, v85);
  swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v6);
  swift_release(v47);
  v48._countAndFlagsBits = 0x2E7265646C6F6620;
  v48._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = v84;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, v38, v10);
  v83 = v10;
  v87 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v49, v38, v10);
  v50 = v49;
  v52 = v93;
  v51 = v94;
  v94(v49, v93);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 2, v38, v39);
  v53._countAndFlagsBits = 0x206120656B614DLL;
  v53._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  v55 = swift_getKeyPath(&unk_1004583D8, v54);
  v56 = _AssistantIntent.IntentProjection.subscript.getter(v55, v96);
  swift_release(v55);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v56, v6);
  swift_release(v56);
  v57._object = (void *)0x800000010047EE60;
  v57._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v59 = swift_getKeyPath(&unk_100458400, v58);
  v60 = v85;
  v61 = _AssistantIntent.IntentProjection.subscript.getter(v59, v85);
  swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v61, v6);
  swift_release(v61);
  v62._countAndFlagsBits = 0x2E7265646C6F6620;
  v62._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  v63 = v92;
  v64 = v83;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, v92, v83);
  v86 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v50, v63, v64);
  v51(v50, v52);
  v65 = v63;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 2, v63, v64);
  v66._countAndFlagsBits = 0x20656874206E49;
  v66._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v66);
  v68 = swift_getKeyPath(&unk_100458400, v67);
  v69 = _AssistantIntent.IntentProjection.subscript.getter(v68, v60);
  swift_release(v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v69, v6);
  swift_release(v69);
  v70._countAndFlagsBits = 0xD000000000000023;
  v70._object = (void *)0x800000010047EE80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v70);
  v72 = swift_getKeyPath(&unk_1004583D8, v71);
  v73 = _AssistantIntent.IntentProjection.subscript.getter(v72, v96);
  swift_release(v72);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v73, v6);
  swift_release(v73);
  v74._countAndFlagsBits = 46;
  v74._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v74);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, v65, v64);
  v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v50, v65, v64);
  v94(v50, v93);
  v76 = sub_100012E18(&qword_1005D29D8);
  v77 = swift_allocObject(v76, 88, 7);
  *(_OWORD *)(v77 + 16) = xmmword_100457CC0;
  v78 = v90;
  *(_QWORD *)(v77 + 32) = v91;
  *(_QWORD *)(v77 + 40) = v78;
  v79 = v88;
  *(_QWORD *)(v77 + 48) = v89;
  *(_QWORD *)(v77 + 56) = v79;
  v80 = v86;
  *(_QWORD *)(v77 + 64) = v87;
  *(_QWORD *)(v77 + 72) = v80;
  *(_QWORD *)(v77 + 80) = v75;
  v81 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v77);
  return v81;
}

uint64_t sub_10019ED58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004583D8, v4);
  v6 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100019C6C(&qword_1005D6AA0, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019EF04, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458400, v11);
  v13 = sub_1001B3974();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019F030, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019EF04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047EDC0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7250206573756F48, 0xEE00737463656A6FLL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x800000010047EDE0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20676E697465654DLL, 0xED00007365746F4ELL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20737265626D754ELL, 0xEB00000000707041);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_10019F030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20676E697465654DLL, 0xED00007365746F4ELL);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x616C6C656373694DLL, 0xED000073756F656ELL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C616E6F73726550, 0xE800000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661719, 0xE400000000000000);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10019F11C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  Swift::String v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  uint64_t v90;

  v89 = sub_100012E18(&qword_1005D29B0);
  v2 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D29B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10017C638();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 1, &type metadata for CreateNoteIntent, v8);
  v9._countAndFlagsBits = 0xD00000000000001ELL;
  v9._object = (void *)0x800000010047ECE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100458388, v10);
  v12 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v90 = v12;
  v87 = a1;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v12);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v5);
  swift_release(v13);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v86 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v88 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v89;
  v88(v4, v89);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for CreateNoteIntent, v8);
  v16._countAndFlagsBits = 0x6120657461657243;
  v16._object = (void *)0xED00002077656E20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100458388, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v12);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._countAndFlagsBits = 0x2E65746F6E20;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v85 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v21 = v88;
  v88(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(47, 1, &type metadata for CreateNoteIntent, v8);
  v22._object = (void *)0x800000010047ED00;
  v22._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v24 = swift_getKeyPath(&unk_100458388, v23);
  v25 = v90;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v24, v90);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5);
  swift_release(v26);
  v27._countAndFlagsBits = 0xD000000000000018;
  v27._object = (void *)0x800000010047ED20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v84 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v21(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for CreateNoteIntent, v8);
  v28._countAndFlagsBits = 0xD000000000000016;
  v28._object = (void *)0x800000010047ED40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_100458388, v29);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v25);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v5);
  swift_release(v31);
  v32._countAndFlagsBits = 46;
  v32._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v83 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v33 = v15;
  v34 = v88;
  v88(v4, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for CreateNoteIntent, v8);
  v35._object = (void *)0x800000010047ED60;
  v35._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v37 = swift_getKeyPath(&unk_100458388, v36);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v90);
  swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5);
  swift_release(v38);
  v39._countAndFlagsBits = 46;
  v39._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v82 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v40 = v89;
  v34(v4, v89);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 2, &type metadata for CreateNoteIntent, v8);
  v41._countAndFlagsBits = 0xD000000000000012;
  v41._object = (void *)0x800000010047ED80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v43 = swift_getKeyPath(&unk_100458388, v42);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v90);
  swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v5);
  swift_release(v44);
  v45._countAndFlagsBits = 0x20796D206F7420;
  v45._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v47 = swift_getKeyPath(&unk_1004583B0, v46);
  v48 = sub_1001B3974();
  v79 = v48;
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v47, v48);
  swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v5);
  swift_release(v49);
  v50._countAndFlagsBits = 0x7265646C6F6620;
  v50._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v81 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v51 = v40;
  v52 = v88;
  v88(v4, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 2, &type metadata for CreateNoteIntent, v8);
  v53._countAndFlagsBits = 0x2061207472617453;
  v53._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  v55 = swift_getKeyPath(&unk_100458388, v54);
  v56 = _AssistantIntent.IntentProjection.subscript.getter(v55, v90);
  swift_release(v55);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v56, v5);
  swift_release(v56);
  v57._countAndFlagsBits = 0x6E692065746F6E20;
  v57._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v59 = swift_getKeyPath(&unk_1004583B0, v58);
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v48);
  swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v5);
  swift_release(v60);
  v61._countAndFlagsBits = 0x7265646C6F6620;
  v61._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v80 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v52(v4, v89);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 2, &type metadata for CreateNoteIntent, v8);
  v62._countAndFlagsBits = 0xD000000000000015;
  v62._object = (void *)0x800000010047EDA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  v64 = swift_getKeyPath(&unk_100458388, v63);
  v65 = _AssistantIntent.IntentProjection.subscript.getter(v64, v90);
  swift_release(v64);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v65, v5);
  swift_release(v65);
  v66._countAndFlagsBits = 0x20796D206E6920;
  v66._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v66);
  v68 = swift_getKeyPath(&unk_1004583B0, v67);
  v69 = _AssistantIntent.IntentProjection.subscript.getter(v68, v79);
  swift_release(v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v69, v5);
  swift_release(v69);
  v70._countAndFlagsBits = 0x7265646C6F6620;
  v70._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v70);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateNoteIntent, v8);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateNoteIntent, v8);
  v52(v4, v89);
  v72 = sub_100012E18(&qword_1005D29C0);
  v73 = swift_allocObject(v72, 96, 7);
  *(_OWORD *)(v73 + 16) = xmmword_100457CE0;
  v74 = v85;
  *(_QWORD *)(v73 + 32) = v86;
  *(_QWORD *)(v73 + 40) = v74;
  v75 = v83;
  *(_QWORD *)(v73 + 48) = v84;
  *(_QWORD *)(v73 + 56) = v75;
  v76 = v81;
  *(_QWORD *)(v73 + 64) = v82;
  *(_QWORD *)(v73 + 72) = v76;
  *(_QWORD *)(v73 + 80) = v80;
  *(_QWORD *)(v73 + 88) = v71;
  v77 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v73);
  return v77;
}

uint64_t sub_10019FA58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_100012E18(&qword_1005D1EB0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  sub_100012CE8(a1, (uint64_t)&v9 - v6, &qword_1005D1EB0);
  sub_100012CE8((uint64_t)v7, (uint64_t)v5, &qword_1005D1EB0);
  IntentParameter.wrappedValue.setter(v5);
  return sub_100012DDC((uint64_t)v7, &qword_1005D1EB0);
}

uint64_t sub_10019FB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458388, v4);
  v6 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_10017C638();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_10019FCB0, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_1004583B0, v11);
  v13 = sub_1001B3974();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_10019FDD4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_10019FCB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x800000010047ECA0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2074756F6B726F57, 0xEF656E6974756F52);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656449206B6F6F42, 0xEA00000000007361);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x800000010047ECC0);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656D614E20676F44, 0xEE00736165644920);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_10019FDD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C616E6F73726550, 0xE800000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661719, 0xE400000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6174726F706D49, 0xE900000000000074);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(875704370, 0xE400000000000000);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10019FEA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);

  v81 = sub_100012E18(&qword_1005D2998);
  v2 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D29A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B271C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for CreateTableIntent, v8);
  v9._countAndFlagsBits = 0xD000000000000014;
  v9._object = (void *)0x800000010047EBA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100458338, v10);
  v12 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v79 = v12;
  v80 = a1;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v12);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v5);
  swift_release(v13);
  v14._countAndFlagsBits = 0x2E65746F6E20;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTableIntent, v8);
  v77 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTableIntent, v8);
  v82 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v81;
  v82(v4, v81);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for CreateTableIntent, v8);
  v16._object = (void *)0x800000010047EBC0;
  v75 = (void *)0x800000010047EBC0;
  v16._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100458338, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v12);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._countAndFlagsBits = 0x2E65746F6E20;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTableIntent, v8);
  v76 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTableIntent, v8);
  v21 = v82;
  v82(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for CreateTableIntent, v8);
  v22._countAndFlagsBits = 0xD00000000000001ELL;
  v22._object = (void *)0x800000010047EBE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v24 = swift_getKeyPath(&unk_100458338, v23);
  v25 = v79;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v24, v79);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5);
  swift_release(v26);
  v27._countAndFlagsBits = 0x2E65746F6E20;
  v27._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTableIntent, v8);
  v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTableIntent, v8);
  v21(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for CreateTableIntent, v8);
  v28._countAndFlagsBits = 0x20796D206E49;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_100458338, v29);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v25);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v5);
  swift_release(v31);
  v32._countAndFlagsBits = 0xD00000000000001ALL;
  v32._object = (void *)0x800000010047EC00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTableIntent, v8);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTableIntent, v8);
  v82(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(39, 2, &type metadata for CreateTableIntent, v8);
  v33._object = (void *)0x800000010047EC20;
  v33._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v35 = swift_getKeyPath(&unk_100458360, v34);
  v78 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v35, v78);
  swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v5);
  swift_release(v36);
  v37._countAndFlagsBits = 0x6D206F746E692027;
  v37._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v39 = swift_getKeyPath(&unk_100458338, v38);
  v40 = v79;
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v39, v79);
  swift_release(v39);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v5);
  swift_release(v41);
  v42._countAndFlagsBits = 0x2E65746F6E20;
  v42._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTableIntent, v8);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTableIntent, v8);
  v82(v4, v81);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(51, 2, &type metadata for CreateTableIntent, v8);
  v43._countAndFlagsBits = 0xD000000000000018;
  v43._object = (void *)0x800000010047EC40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  v45 = swift_getKeyPath(&unk_100458338, v44);
  v46 = _AssistantIntent.IntentProjection.subscript.getter(v45, v40);
  swift_release(v45);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v46, v5);
  swift_release(v46);
  v47._countAndFlagsBits = 0xD000000000000019;
  v47._object = (void *)0x800000010047EC60;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  v49 = swift_getKeyPath(&unk_100458360, v48);
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v49, v78);
  swift_release(v49);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v5);
  swift_release(v50);
  v51._countAndFlagsBits = 11815;
  v51._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTableIntent, v8);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTableIntent, v8);
  v52 = v81;
  v53 = v82;
  v82(v4, v81);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(47, 2, &type metadata for CreateTableIntent, v8);
  v54._countAndFlagsBits = 0xD000000000000017;
  v54._object = v75;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v56 = swift_getKeyPath(&unk_100458338, v55);
  v57 = _AssistantIntent.IntentProjection.subscript.getter(v56, v79);
  swift_release(v56);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v57, v5);
  swift_release(v57);
  v58._countAndFlagsBits = 0xD000000000000016;
  v58._object = (void *)0x800000010047EC80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v60 = swift_getKeyPath(&unk_100458360, v59);
  v61 = _AssistantIntent.IntentProjection.subscript.getter(v60, v78);
  swift_release(v60);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v61, v5);
  swift_release(v61);
  v62._countAndFlagsBits = 11815;
  v62._object = (void *)0xE200000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTableIntent, v8);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTableIntent, v8);
  v53(v4, v52);
  v64 = sub_100012E18(&qword_1005D29A8);
  v65 = swift_allocObject(v64, 88, 7);
  *(_OWORD *)(v65 + 16) = xmmword_100457CC0;
  v66 = v76;
  *(_QWORD *)(v65 + 32) = v77;
  *(_QWORD *)(v65 + 40) = v66;
  v67 = v73;
  *(_QWORD *)(v65 + 48) = v74;
  *(_QWORD *)(v65 + 56) = v67;
  v68 = v71;
  *(_QWORD *)(v65 + 64) = v72;
  *(_QWORD *)(v65 + 72) = v68;
  *(_QWORD *)(v65 + 80) = v63;
  v69 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v65);
  return v69;
}

uint64_t sub_1001A0704(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for NoteEntity(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  sub_100145220(a1, (uint64_t)&v9 - v6, type metadata accessor for NoteEntity);
  sub_100145220((uint64_t)v7, (uint64_t)v5, type metadata accessor for NoteEntity);
  IntentParameter.wrappedValue.setter(v5);
  return sub_100145264((uint64_t)v7, type metadata accessor for NoteEntity);
}

uint64_t sub_1001A07C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458338, v4);
  v6 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B271C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A0974, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458360, v11);
  v13 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001A0A4C, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001A0974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x472073276E69644FLL, 0xED00006874776F72);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6475422034323032, 0xEB00000000746567);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x5420746867696557, 0xEF676E696B636172);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001A0A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x800000010047EB30);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000002BLL, 0x800000010047EB50);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001BLL, 0x800000010047EB80);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001A0B14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;

  v51 = sub_100012E18(&qword_1005D2980);
  v2 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2988);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B2760();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for CreateTagIntent, v8);
  v9._countAndFlagsBits = 0x6174206120646441;
  v9._object = (void *)0xEE0020726F662067;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100458310, v10);
  v53 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v46 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v53);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTagIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTagIntent, v8);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v51;
  v14(v4, v51);
  v52 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for CreateTagIntent, v8);
  v16._countAndFlagsBits = 0xD000000000000015;
  v16._object = (void *)0x800000010047EAC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100458310, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v53);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._countAndFlagsBits = 46;
  v20._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTagIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTagIntent, v8);
  v14(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 1, &type metadata for CreateTagIntent, v8);
  v21._countAndFlagsBits = 0xD00000000000002FLL;
  v21._object = (void *)0x800000010047EAE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100458310, v22);
  v24 = v53;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v53);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5);
  swift_release(v25);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTagIntent, v8);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTagIntent, v8);
  v52(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for CreateTagIntent, v8);
  v27._object = (void *)0x800000010047EB10;
  v27._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_100458310, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v24);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5);
  swift_release(v30);
  v31._countAndFlagsBits = 46;
  v31._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTagIntent, v8);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTagIntent, v8);
  v32 = v51;
  v33 = v52;
  v52(v4, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for CreateTagIntent, v8);
  v34._countAndFlagsBits = 0x206120657355;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100458310, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v24);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5);
  swift_release(v37);
  v38._countAndFlagsBits = 0x2E67617420;
  v38._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for CreateTagIntent, v8);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for CreateTagIntent, v8);
  v33(v4, v32);
  v40 = sub_100012E18(&qword_1005D2990);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001A1078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458310, v4);
  v6 = sub_1001B37D8(&qword_1005D2970, &qword_1005D2978, (void (*)(void))sub_1001B2FAC);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2760();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A11A0, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A11A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047EAA0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x4E746375646F7250, 0xEC00000073656D61);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7373616C63, 0xE500000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661751, 0xE400000000000000);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A127C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  unint64_t v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);

  v52 = sub_100012E18(&qword_1005D2958);
  v2 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2960);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B293C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for DeleteAttachmentsIntent, v8);
  v9._countAndFlagsBits = 0x74206574656C6544;
  v9._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_1004582E8, v10);
  v12 = sub_1001B36EC();
  v46 = a1;
  v47 = v12;
  v13 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v12);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v13, v5);
  swift_release(v13);
  v14._countAndFlagsBits = 0x6D68636174746120;
  v14._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteAttachmentsIntent, v8);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteAttachmentsIntent, v8);
  v53 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v52;
  v53(v4, v52);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for DeleteAttachmentsIntent, v8);
  v16._countAndFlagsBits = 0xD000000000000021;
  v16._object = (void *)0x800000010047EA50;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_1004582E8, v17);
  v19 = v47;
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v18, v47);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v5);
  swift_release(v20);
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteAttachmentsIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteAttachmentsIntent, v8);
  v53(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for DeleteAttachmentsIntent, v8);
  v22._countAndFlagsBits = 0x742065766F6D6552;
  v22._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v24 = swift_getKeyPath(&unk_1004582E8, v23);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v19);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5);
  swift_release(v25);
  v26._object = (void *)0x800000010047EA80;
  v26._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteAttachmentsIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteAttachmentsIntent, v8);
  v53(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for DeleteAttachmentsIntent, v8);
  v27._countAndFlagsBits = 0x2064697220746547;
  v27._object = (void *)0xEF2065687420666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_1004582E8, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v19);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5);
  swift_release(v30);
  v31._countAndFlagsBits = 0x6D68636174746120;
  v31._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteAttachmentsIntent, v8);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteAttachmentsIntent, v8);
  v32 = v52;
  v33 = v53;
  v53(v4, v52);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for DeleteAttachmentsIntent, v8);
  v34._countAndFlagsBits = 0x742065766F6D6552;
  v34._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_1004582E8, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v19);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5);
  swift_release(v37);
  v38._countAndFlagsBits = 46;
  v38._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteAttachmentsIntent, v8);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteAttachmentsIntent, v8);
  v33(v4, v32);
  v40 = sub_100012E18(&qword_1005D2968);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v50;
  *(_QWORD *)(v41 + 32) = v51;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v48;
  *(_QWORD *)(v41 + 48) = v49;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001A1804(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_1004582E8, (uint64_t (*)(void))sub_1001B36EC, (uint64_t (*)(uint64_t))sub_1001B293C, (uint64_t)sub_1001A1828);
}

uint64_t sub_1001A1828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047E9D0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x800000010047D870);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047E9F0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010047EA10);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001ELL, 0x800000010047EA30);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A1934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  unint64_t v52;
  uint64_t v53;

  v53 = a1;
  v50 = sub_100012E18(&qword_1005D2938);
  v1 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D2940);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100145B9C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for DeleteChecklistItemsIntent, v7);
  v8._countAndFlagsBits = 0x74206574656C6544;
  v8._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_1004582C0, v9);
  v11 = sub_1001B2D48();
  v52 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4);
  swift_release(v12);
  v13._object = (void *)0x800000010047E280;
  v13._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteChecklistItemsIntent, v7);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteChecklistItemsIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v50;
  v14(v3, v50);
  v51 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for DeleteChecklistItemsIntent, v7);
  v16._countAndFlagsBits = 0x742065766F6D6552;
  v16._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_1004582C0, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v11);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v4);
  swift_release(v19);
  v20._countAndFlagsBits = 0xD000000000000011;
  v20._object = (void *)0x800000010047E2A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteChecklistItemsIntent, v7);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteChecklistItemsIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for DeleteChecklistItemsIntent, v7);
  v21._countAndFlagsBits = 0x206574656C6544;
  v21._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_1004582C0, v22);
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v52);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4);
  swift_release(v24);
  v25._object = (void *)0x800000010047E2C0;
  v25._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteChecklistItemsIntent, v7);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteChecklistItemsIntent, v7);
  v51(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 1, &type metadata for DeleteChecklistItemsIntent, v7);
  v26._countAndFlagsBits = 0x2064697220746547;
  v26._object = (void *)0xEF2065687420666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v28 = swift_getKeyPath(&unk_1004582C0, v27);
  v29 = v52;
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v28, v52);
  swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4);
  swift_release(v30);
  v31._countAndFlagsBits = 0xD000000000000019;
  v31._object = (void *)0x800000010047E300;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteChecklistItemsIntent, v7);
  v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteChecklistItemsIntent, v7);
  v32 = v50;
  v33 = v51;
  v51(v3, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for DeleteChecklistItemsIntent, v7);
  v34._countAndFlagsBits = 0xD00000000000001DLL;
  v34._object = (void *)0x800000010047E9B0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_1004582C0, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v29);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v4);
  swift_release(v37);
  v38._countAndFlagsBits = 46;
  v38._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteChecklistItemsIntent, v7);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteChecklistItemsIntent, v7);
  v33(v3, v32);
  v40 = sub_100012E18(&qword_1005D2948);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v48;
  *(_QWORD *)(v41 + 32) = v49;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v46;
  *(_QWORD *)(v41 + 48) = v47;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001A1EB8(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_1004582C0, (uint64_t (*)(void))sub_1001B2D48, (uint64_t (*)(uint64_t))sub_100145B9C, (uint64_t)sub_1001B41D8);
}

uint64_t sub_1001A1EDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  unint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  Swift::String v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  char *v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(char *);
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;

  v58 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v55 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v57 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100012E18(&qword_1005D2920);
  v3 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005D2928);
  __chkstk_darwin(v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001B2980();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for DeleteFoldersIntent, v9);
  v10._countAndFlagsBits = 0x6D206574656C6544;
  v10._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100458298, v11);
  v13 = sub_1001B35F0();
  v48 = a1;
  v49 = v13;
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v13);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v6);
  swift_release(v14);
  v15._countAndFlagsBits = 0x2E7265646C6F6620;
  v15._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for DeleteFoldersIntent, v9);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for DeleteFoldersIntent, v9);
  v50 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16 = v59;
  v50(v5, v59);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 2, &type metadata for DeleteFoldersIntent, v9);
  v17._countAndFlagsBits = 0x6D206574656C6544;
  v17._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  v19 = swift_getKeyPath(&unk_100458298, v18);
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v13);
  swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v6);
  swift_release(v20);
  v21._countAndFlagsBits = 0x207265646C6F6620;
  v21._object = (void *)0xED0000206D6F7266;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v54 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v22 = v55;
  v53 = *(void (**)(char *))(v55 + 104);
  v24 = v57;
  v23 = v58;
  v53(v57);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v6);
  v52 = *(void (**)(char *, uint64_t))(v22 + 8);
  v52(v24, v23);
  v25._countAndFlagsBits = 46;
  v25._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for DeleteFoldersIntent, v9);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for DeleteFoldersIntent, v9);
  v26 = v16;
  v27 = v50;
  v50(v5, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for DeleteFoldersIntent, v9);
  v28._countAndFlagsBits = 0x6D2065766F6D6552;
  v28._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_100458298, v29);
  v31 = v49;
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v30, v49);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v6);
  swift_release(v32);
  v33._countAndFlagsBits = 0x2E7265646C6F6620;
  v33._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for DeleteFoldersIntent, v9);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for DeleteFoldersIntent, v9);
  v27(v5, v59);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for DeleteFoldersIntent, v9);
  v34._countAndFlagsBits = 0x20796D2065766F4DLL;
  v34._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100458298, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v31);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v6);
  swift_release(v37);
  v38._countAndFlagsBits = 0x207265646C6F6620;
  v38._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v40 = v57;
  v39 = v58;
  ((void (*)(char *, _QWORD, uint64_t))v53)(v57, v54, v58);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v40, v6);
  v52(v40, v39);
  v41._countAndFlagsBits = 0x20656874206F7420;
  v41._object = (void *)0xEE002E6873617254;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for DeleteFoldersIntent, v9);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for DeleteFoldersIntent, v9);
  v27(v5, v59);
  v43 = sub_100012E18(&qword_1005D2930);
  v44 = swift_allocObject(v43, 64, 7);
  *(_OWORD *)(v44 + 16) = xmmword_100457CB0;
  v45 = v55;
  *(_QWORD *)(v44 + 32) = v56;
  *(_QWORD *)(v44 + 40) = v45;
  *(_QWORD *)(v44 + 48) = v51;
  *(_QWORD *)(v44 + 56) = v42;
  v46 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v44);
  return v46;
}

uint64_t sub_1001A246C(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100458298, (uint64_t (*)(void))sub_1001B35F0, (uint64_t (*)(uint64_t))sub_1001B2980, (uint64_t)sub_1001A2490);
}

uint64_t sub_1001A2490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20676E697465654DLL, 0xED00007365746F4ELL);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x65746F4E2077654ELL, 0xE900000000000073);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x800000010047E990);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661719, 0xE400000000000000);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A2578(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  Swift::String v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = a1;
  v42 = sub_100012E18(&qword_1005D2900);
  v1 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D2908);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001B29C4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for DeleteNotesIntent, v7);
  v8._countAndFlagsBits = 0x6D206574656C6544;
  v8._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100458270, v9);
  v38 = sub_100130EAC();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v38);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4);
  swift_release(v11);
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteNotesIntent, v7);
  v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteNotesIntent, v7);
  v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14 = v42;
  v13(v3, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for DeleteNotesIntent, v7);
  v15._countAndFlagsBits = 0x2064697220746547;
  v15._object = (void *)0xEE0020796D20666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_100458270, v16);
  v18 = v38;
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v17, v38);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v4);
  swift_release(v19);
  v20._countAndFlagsBits = 0x2E65746F6E20;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteNotesIntent, v7);
  v40 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteNotesIntent, v7);
  v13(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for DeleteNotesIntent, v7);
  v21._countAndFlagsBits = 0x6D2065766F6D6552;
  v21._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100458270, v22);
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v18);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4);
  swift_release(v24);
  v25._countAndFlagsBits = 0x2E65746F6E20;
  v25._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteNotesIntent, v7);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteNotesIntent, v7);
  v26 = v42;
  v13(v3, v42);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for DeleteNotesIntent, v7);
  v27._object = (void *)0x800000010047E970;
  v27._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_100458270, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v18);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4);
  swift_release(v30);
  v31._countAndFlagsBits = 0x20656874206F7420;
  v31._object = (void *)0xEE002E6873617254;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteNotesIntent, v7);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteNotesIntent, v7);
  v13(v3, v26);
  v33 = sub_100012E18(&qword_1005D2910);
  v34 = swift_allocObject(v33, 64, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100457CB0;
  v35 = v40;
  *(_QWORD *)(v34 + 32) = v41;
  *(_QWORD *)(v34 + 40) = v35;
  *(_QWORD *)(v34 + 48) = v39;
  *(_QWORD *)(v34 + 56) = v32;
  v36 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v34);
  return v36;
}

uint64_t sub_1001A29FC(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100458270, (uint64_t (*)(void))sub_100130EAC, (uint64_t (*)(uint64_t))sub_1001B29C4, (uint64_t)sub_1001A2A20);
}

uint64_t sub_1001A2A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73776569766552, 0xE700000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x800000010047E930);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010047E950);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x617244206B6F6F42, 0xEA00000000007466);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A2B0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;

  v51 = sub_100012E18(&qword_1005D28E8);
  v2 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D28F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B2A08();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for DeleteTablesIntent, v8);
  v9._countAndFlagsBits = 0xD000000000000016;
  v9._object = (void *)0x800000010047E860;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100458248, v10);
  v53 = sub_1001B34FC();
  v46 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v53);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 0x6E69206F666E6920;
  v13._object = (void *)0xEC0000002E746920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteTablesIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteTablesIntent, v8);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v51;
  v14(v4, v51);
  v52 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(46, 1, &type metadata for DeleteTablesIntent, v8);
  v16._countAndFlagsBits = 0xD00000000000001BLL;
  v16._object = (void *)0x800000010047E880;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100458248, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v53);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._object = (void *)0x800000010047E8A0;
  v20._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteTablesIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteTablesIntent, v8);
  v14(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 1, &type metadata for DeleteTablesIntent, v8);
  v21._countAndFlagsBits = 0xD000000000000025;
  v21._object = (void *)0x800000010047E8C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100458248, v22);
  v24 = v53;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v53);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5);
  swift_release(v25);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteTablesIntent, v8);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteTablesIntent, v8);
  v52(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for DeleteTablesIntent, v8);
  v27._countAndFlagsBits = 0xD00000000000001FLL;
  v27._object = (void *)0x800000010047E8F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_100458248, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v24);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5);
  swift_release(v30);
  v31._countAndFlagsBits = 46;
  v31._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteTablesIntent, v8);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteTablesIntent, v8);
  v32 = v51;
  v33 = v52;
  v52(v4, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for DeleteTablesIntent, v8);
  v34._countAndFlagsBits = 0xD000000000000015;
  v34._object = (void *)0x800000010047E910;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100458248, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v24);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5);
  swift_release(v37);
  v38._countAndFlagsBits = 0x2E7469206E6920;
  v38._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for DeleteTablesIntent, v8);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for DeleteTablesIntent, v8);
  v33(v4, v32);
  v40 = sub_100012E18(&qword_1005D28F8);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001A308C(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100458248, (uint64_t (*)(void))sub_1001B34FC, (uint64_t (*)(uint64_t))sub_1001B2A08, (uint64_t)sub_1001A30B0);
}

uint64_t sub_1001A30B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x800000010047DD70);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6475622033323032, 0xEB00000000746567);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6320796C696D6166, 0xED00007365726F68);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001BLL, 0x800000010047DD90);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047DDB0);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A31CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);

  v52 = a1;
  v50 = sub_100012E18(&qword_1005D28C0);
  v1 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D28C8);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100019748();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for DeleteTagsIntent, v7);
  v8._countAndFlagsBits = 0x74206574656C6544;
  v8._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100458220, v9);
  v11 = sub_1001B2FF8();
  v51 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E67617420;
  v13._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteTagsIntent, v7);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteTagsIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v50;
  v14(v3, v50);
  v53 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for DeleteTagsIntent, v7);
  v16._countAndFlagsBits = 0x2064697220746547;
  v16._object = (void *)0xEE0020796D20666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100458220, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v11);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v4);
  swift_release(v19);
  v20._countAndFlagsBits = 0x2E67617420;
  v20._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteTagsIntent, v7);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteTagsIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for DeleteTagsIntent, v7);
  v21._countAndFlagsBits = 0x796D206873617254;
  v21._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100458220, v22);
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v51);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4);
  swift_release(v24);
  v25._countAndFlagsBits = 0x2E67617420;
  v25._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteTagsIntent, v7);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteTagsIntent, v7);
  v53(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 1, &type metadata for DeleteTagsIntent, v7);
  v26._countAndFlagsBits = 0xD000000000000023;
  v26._object = (void *)0x800000010047E810;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v28 = swift_getKeyPath(&unk_100458220, v27);
  v29 = v51;
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v28, v51);
  swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4);
  swift_release(v30);
  v31._countAndFlagsBits = 0x65746F4E206E6920;
  v31._object = (void *)0xEA00000000002E73;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteTagsIntent, v7);
  v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteTagsIntent, v7);
  v32 = v50;
  v33 = v53;
  v53(v3, v50);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for DeleteTagsIntent, v7);
  v34._countAndFlagsBits = 0x6568742065766F4DLL;
  v34._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100458220, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v29);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v4);
  swift_release(v37);
  v38._object = (void *)0x800000010047E840;
  v38._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for DeleteTagsIntent, v7);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for DeleteTagsIntent, v7);
  v33(v3, v32);
  v40 = sub_100012E18(&qword_1005D28D0);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v48;
  *(_QWORD *)(v41 + 32) = v49;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v46;
  *(_QWORD *)(v41 + 48) = v47;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001A374C(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100458220, (uint64_t (*)(void))sub_1001B2FF8, (uint64_t (*)(uint64_t))sub_100019748, (uint64_t)sub_1001A3770);
}

uint64_t sub_1001A3770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(959524914, 0xE400000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656D614E79626142, 0xED00007361656449);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x800000010047E7F0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(808595506, 0xE400000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x65636E616E6946, 0xE700000000000000);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A386C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);

  v40 = a1;
  v44 = sub_100012E18(&qword_1005D28A8);
  v1 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D28B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001B2A4C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(48, 1, &type metadata for GetLinkedNotesIntent, v7);
  v8._object = (void *)0x800000010047E720;
  v8._countAndFlagsBits = 0xD00000000000002ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_1004581F8, v9);
  v11 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for GetLinkedNotesIntent, v7);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for GetLinkedNotesIntent, v7);
  v45 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14 = v44;
  v45(v3, v44);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(61, 1, &type metadata for GetLinkedNotesIntent, v7);
  v15._countAndFlagsBits = 0xD000000000000037;
  v15._object = (void *)0x800000010047E750;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_1004581F8, v16);
  v39 = v11;
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4);
  swift_release(v18);
  v19._countAndFlagsBits = 0x2E65746F6E20;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for GetLinkedNotesIntent, v7);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for GetLinkedNotesIntent, v7);
  v45(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(52, 1, &type metadata for GetLinkedNotesIntent, v7);
  v20._countAndFlagsBits = 0xD00000000000002ELL;
  v20._object = (void *)0x800000010047E790;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_1004581F8, v21);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v11);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4);
  swift_release(v23);
  v24._countAndFlagsBits = 0x2E65746F6E20;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for GetLinkedNotesIntent, v7);
  v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for GetLinkedNotesIntent, v7);
  v26 = v44;
  v25 = v45;
  v45(v3, v44);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(49, 1, &type metadata for GetLinkedNotesIntent, v7);
  v27._countAndFlagsBits = 0xD00000000000002BLL;
  v27._object = (void *)0x800000010047E7C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_1004581F8, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v39);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4);
  swift_release(v30);
  v31._countAndFlagsBits = 0x2E65746F6E20;
  v31._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for GetLinkedNotesIntent, v7);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for GetLinkedNotesIntent, v7);
  v25(v3, v26);
  v33 = sub_100012E18(&qword_1005D28B8);
  v34 = swift_allocObject(v33, 64, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100457CB0;
  v35 = v42;
  *(_QWORD *)(v34 + 32) = v43;
  *(_QWORD *)(v34 + 40) = v35;
  *(_QWORD *)(v34 + 48) = v41;
  *(_QWORD *)(v34 + 56) = v32;
  v36 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v34);
  return v36;
}

uint64_t sub_1001A3D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004581F8, v4);
  v6 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2A4C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A3E38, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A3E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x676E6970706F6853, 0xE800000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047E700);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C616E6F73726550, 0xE800000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661719, 0xE400000000000000);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A3F10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  void (*v25)(char *, uint64_t);
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);

  v45 = a1;
  v1 = sub_100012E18(&qword_1005D2890);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2898);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B2A90();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for InsertAllMentionIntent, v8);
  v9._countAndFlagsBits = 0xD000000000000017;
  v9._object = (void *)0x800000010047E610;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_1004581D0, v10);
  v41 = sub_1001B32F0();
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v41);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertAllMentionIntent, v8);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v46 = *(void (**)(char *, uint64_t))(v2 + 8);
  v46(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for InsertAllMentionIntent, v8);
  v14._object = (void *)0x800000010047E630;
  v14._countAndFlagsBits = 0x1000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v16 = swift_getKeyPath(&unk_1004581D0, v15);
  v17 = v41;
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v16, v41);
  swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5);
  swift_release(v18);
  v19._countAndFlagsBits = 0x2E65746F6E20;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertAllMentionIntent, v8);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v46(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for InsertAllMentionIntent, v8);
  v20._countAndFlagsBits = 0xD00000000000001ELL;
  v20._object = (void *)0x800000010047E650;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_1004581D0, v21);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v17);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v5);
  swift_release(v23);
  v24._countAndFlagsBits = 0x2E65746F6E20;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertAllMentionIntent, v8);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v25 = v46;
  v46(v4, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(39, 1, &type metadata for InsertAllMentionIntent, v8);
  v26._countAndFlagsBits = 0x1000000000000021;
  v26._object = (void *)0x800000010047E670;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v28 = swift_getKeyPath(&unk_1004581D0, v27);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v17);
  swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v5);
  swift_release(v29);
  v30._countAndFlagsBits = 0x2E65746F6E20;
  v30._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertAllMentionIntent, v8);
  v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v25(v4, v1);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x800000010047E6A0, &type metadata for InsertAllMentionIntent, v8);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v25(v4, v1);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x9D80E274419C80E2, 0xAD00002E6C6C6120, &type metadata for InsertAllMentionIntent, v8);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v25(v4, v1);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000015, 0x800000010047E6C0, &type metadata for InsertAllMentionIntent, v8);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v25(v4, v1);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000001ALL, 0x800000010047E6E0, &type metadata for InsertAllMentionIntent, v8);
  v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertAllMentionIntent, v8);
  v25(v4, v1);
  v36 = sub_100012E18(&qword_1005D28A0);
  v37 = swift_allocObject(v36, 96, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100457CE0;
  v38 = v43;
  *(_QWORD *)(v37 + 32) = v44;
  *(_QWORD *)(v37 + 40) = v38;
  *(_QWORD *)(v37 + 48) = v42;
  *(_QWORD *)(v37 + 56) = v31;
  *(_QWORD *)(v37 + 64) = v32;
  *(_QWORD *)(v37 + 72) = v33;
  *(_QWORD *)(v37 + 80) = v34;
  *(_QWORD *)(v37 + 88) = v35;
  v39 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v37);
  return v39;
}

uint64_t sub_1001A44DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  sub_100012CE8(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_1005D0B60);
  sub_100012CE8((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_1005D0B60);
  IntentParameter.wrappedValue.setter(v5);
  return sub_100012DDC((uint64_t)v7, (uint64_t *)&unk_1005D0B60);
}

uint64_t sub_1001A45A0(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_1004581D0, (uint64_t (*)(void))sub_1001B32F0, (uint64_t (*)(uint64_t))sub_1001B2A90, (uint64_t)sub_1001B41E8);
}

uint64_t sub_1001A45C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  Swift::String v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  char *v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;

  v67 = sub_100012E18(&qword_1005D2878);
  v0 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v2 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2880);
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B27A4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for InsertMentionIntent, v6);
  v7._countAndFlagsBits = 0x206E6F69746E654DLL;
  v7._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100458180, v8);
  v66 = sub_1001B2FAC();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v66);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._countAndFlagsBits = 0x20796D206E6920;
  v11._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_1004581A8, v12);
  v65 = sub_1001B32F0();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v13, v65);
  swift_release(v13);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v3);
  swift_release(v14);
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = v2;
  v64 = v2;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for InsertMentionIntent, v6);
  v17 = v2;
  v18 = v6;
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v17, &type metadata for InsertMentionIntent, v6);
  v60 = *(void (**)(char *, uint64_t))(v0 + 8);
  v19 = v67;
  v60(v16, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for InsertMentionIntent, v6);
  v20._countAndFlagsBits = 0x9D80E274419C80E2;
  v20._object = (void *)0xA900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_100458180, v21);
  v23 = v66;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v66);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v3);
  swift_release(v24);
  v25._countAndFlagsBits = 0x20796D206E6920;
  v25._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v27 = swift_getKeyPath(&unk_1004581A8, v26);
  v28 = v65;
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v27, v65);
  swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v3);
  swift_release(v29);
  v30._countAndFlagsBits = 0x2E65746F6E20;
  v30._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v31 = v64;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for InsertMentionIntent, v18);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v31, &type metadata for InsertMentionIntent, v18);
  v32 = v19;
  v33 = v60;
  v60(v31, v32);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for InsertMentionIntent, v18);
  v34._object = (void *)0x800000010047E5D0;
  v34._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100458180, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v23);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v3);
  swift_release(v37);
  v38._countAndFlagsBits = 0x6874206F746E6920;
  v38._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v40 = swift_getKeyPath(&unk_1004581A8, v39);
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v40, v28);
  swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v3);
  swift_release(v41);
  v42._countAndFlagsBits = 0x2E65746F6E20;
  v42._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = v64;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for InsertMentionIntent, v18);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v43, &type metadata for InsertMentionIntent, v18);
  v44 = v67;
  v33(v43, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 2, &type metadata for InsertMentionIntent, v18);
  v45._object = (void *)0x800000010047E5F0;
  v45._countAndFlagsBits = 0x1000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v47 = swift_getKeyPath(&unk_100458180, v46);
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v66);
  swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v3);
  swift_release(v48);
  v49._countAndFlagsBits = 0x20656874206E6920;
  v49._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  v51 = swift_getKeyPath(&unk_1004581A8, v50);
  v52 = _AssistantIntent.IntentProjection.subscript.getter(v51, v65);
  swift_release(v51);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v52, v3);
  swift_release(v52);
  v53._countAndFlagsBits = 0x2E65746F6E20;
  v53._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for InsertMentionIntent, v18);
  v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v43, &type metadata for InsertMentionIntent, v18);
  v33(v43, v44);
  v55 = sub_100012E18(&qword_1005D2888);
  v56 = swift_allocObject(v55, 64, 7);
  *(_OWORD *)(v56 + 16) = xmmword_100457CB0;
  v57 = v62;
  *(_QWORD *)(v56 + 32) = v63;
  *(_QWORD *)(v56 + 40) = v57;
  *(_QWORD *)(v56 + 48) = v61;
  *(_QWORD *)(v56 + 56) = v54;
  v58 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v56);
  return v58;
}

uint64_t sub_1001A4BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458180, v4);
  v6 = sub_1001B2FAC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B27A4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A4D54, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_1004581A8, v11);
  v13 = sub_1001B32F0();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001A4E40, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001A4D54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E696C6C6F43, 0xE600000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x65696C754ALL, 0xE500000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6572614BLL, 0xE500000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x696E69746E616853, 0xE800000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E65646D6143, 0xE600000000000000);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A4E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047E570);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047E590);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x800000010047E5B0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6F6974616E6F44, 0xE900000000000073);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A4F30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  Swift::String v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::String v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  Swift::String v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  Swift::String v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);

  v106 = sub_100012E18(&qword_1005D2860);
  v2 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v4 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2868);
  __chkstk_darwin(v5);
  v7 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B27E8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 2, &type metadata for InsertNoteLinkIntent, v8);
  v9._object = (void *)0x800000010047E4F0;
  v100 = (void *)0x800000010047E4F0;
  v9._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100458158, v10);
  v105 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v105);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 0x6E692065746F6E20;
  v13._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v15 = swift_getKeyPath(&unk_100458130, v14);
  v104 = sub_1001B32F0();
  v16 = a1;
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v104);
  swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v5);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E65746F6E20;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v102 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v19 = *(void (**)(char *, uint64_t))(v2 + 8);
  v20 = v106;
  v19(v4, v106);
  v107 = v19;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2, &type metadata for InsertNoteLinkIntent, v8);
  v21._object = (void *)0x800000010047E510;
  v98 = (void *)0x800000010047E510;
  v21._countAndFlagsBits = 0xD000000000000011;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100458158, v22);
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v23, v105);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v5);
  swift_release(v24);
  v25._countAndFlagsBits = 0x6E692065746F6E20;
  v25._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v27 = swift_getKeyPath(&unk_100458130, v26);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v104);
  swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v5);
  swift_release(v28);
  v29._countAndFlagsBits = 0x2E65746F6E20;
  v29._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v101 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v19(v4, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 2, &type metadata for InsertNoteLinkIntent, v8);
  v30._countAndFlagsBits = 0xD000000000000015;
  v30._object = (void *)0x800000010047E530;
  v96 = (void *)0x800000010047E530;
  v97 = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v32 = swift_getKeyPath(&unk_100458158, v31);
  v103 = v16;
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v105);
  swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v5);
  swift_release(v33);
  v34._countAndFlagsBits = 0x6E692065746F6E20;
  v34._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100458130, v35);
  v37 = v104;
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v36, v104);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5);
  swift_release(v38);
  v39._countAndFlagsBits = 0x2E65746F6E20;
  v39._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v99 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v107(v4, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 2, &type metadata for InsertNoteLinkIntent, v8);
  v40._countAndFlagsBits = 0x20796D206E49;
  v40._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v42 = swift_getKeyPath(&unk_100458130, v41);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v37);
  swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v5);
  swift_release(v43);
  v44._countAndFlagsBits = 0xD000000000000018;
  v44._object = (void *)0x800000010047E550;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v46 = swift_getKeyPath(&unk_100458158, v45);
  v47 = v105;
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v46, v105);
  swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v5);
  swift_release(v48);
  v49._countAndFlagsBits = 0x2E65746F6E20;
  v49._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v95 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v107(v4, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 2, &type metadata for InsertNoteLinkIntent, v8);
  v50._countAndFlagsBits = 0x206F74206B6E694CLL;
  v50._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  v52 = swift_getKeyPath(&unk_100458158, v51);
  v53 = _AssistantIntent.IntentProjection.subscript.getter(v52, v47);
  swift_release(v52);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v53, v5);
  swift_release(v53);
  v54._countAndFlagsBits = 0x72662065746F6E20;
  v54._object = (void *)0xEE0020796D206D6FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v56 = swift_getKeyPath(&unk_100458130, v55);
  v57 = _AssistantIntent.IntentProjection.subscript.getter(v56, v104);
  swift_release(v56);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v57, v5);
  swift_release(v57);
  v58._countAndFlagsBits = 0x2E65746F6E20;
  v58._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v104 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v60 = v106;
  v59 = v107;
  v107(v4, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for InsertNoteLinkIntent, v8);
  v61._countAndFlagsBits = 0xD000000000000011;
  v61._object = v100;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  v63 = swift_getKeyPath(&unk_100458158, v62);
  v64 = v105;
  v65 = _AssistantIntent.IntentProjection.subscript.getter(v63, v105);
  swift_release(v63);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v65, v5);
  swift_release(v65);
  v66._countAndFlagsBits = 0x2E65746F6E20;
  v66._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v66);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v100 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v59(v4, v60);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for InsertNoteLinkIntent, v8);
  v67._countAndFlagsBits = 0xD000000000000011;
  v67._object = v98;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v67);
  v69 = swift_getKeyPath(&unk_100458158, v68);
  v70 = v64;
  v71 = _AssistantIntent.IntentProjection.subscript.getter(v69, v64);
  swift_release(v69);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v71, v5);
  swift_release(v71);
  v72._countAndFlagsBits = 0x2E65746F6E20;
  v72._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v72);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v98 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v107(v4, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for InsertNoteLinkIntent, v8);
  v73._object = v96;
  v73._countAndFlagsBits = v97;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v73);
  v75 = swift_getKeyPath(&unk_100458158, v74);
  v76 = _AssistantIntent.IntentProjection.subscript.getter(v75, v64);
  swift_release(v75);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v76, v5);
  swift_release(v76);
  v77._countAndFlagsBits = 0x2E65746F6E20;
  v77._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v77);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v97 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v79 = v106;
  v78 = v107;
  v107(v4, v106);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for InsertNoteLinkIntent, v8);
  v80._countAndFlagsBits = 0x206F74206B6E694CLL;
  v80._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v80);
  v82 = swift_getKeyPath(&unk_100458158, v81);
  v83 = _AssistantIntent.IntentProjection.subscript.getter(v82, v70);
  swift_release(v82);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v83, v5);
  swift_release(v83);
  v84._countAndFlagsBits = 0x2E65746F6E20;
  v84._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v84);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for InsertNoteLinkIntent, v8);
  v85 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for InsertNoteLinkIntent, v8);
  v78(v4, v79);
  v86 = sub_100012E18(&qword_1005D2870);
  v87 = swift_allocObject(v86, 104, 7);
  *(_OWORD *)(v87 + 16) = xmmword_100457CF0;
  v88 = v101;
  *(_QWORD *)(v87 + 32) = v102;
  *(_QWORD *)(v87 + 40) = v88;
  v89 = v95;
  *(_QWORD *)(v87 + 48) = v99;
  *(_QWORD *)(v87 + 56) = v89;
  v90 = v100;
  *(_QWORD *)(v87 + 64) = v104;
  *(_QWORD *)(v87 + 72) = v90;
  v91 = v97;
  *(_QWORD *)(v87 + 80) = v98;
  *(_QWORD *)(v87 + 88) = v91;
  *(_QWORD *)(v87 + 96) = v85;
  v92 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v87);
  return v92;
}

uint64_t sub_1001A59EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for NoteEntity(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  sub_100145220(a1, (uint64_t)&v9 - v6, type metadata accessor for NoteEntity);
  sub_100145220((uint64_t)v7, (uint64_t)v5, type metadata accessor for NoteEntity);
  IntentParameter.wrappedValue.setter(v5);
  return sub_100145264((uint64_t)v7, type metadata accessor for NoteEntity);
}

uint64_t sub_1001A5AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458130, v4);
  v6 = sub_1001B32F0();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B27E8();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A5C44, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458158, v11);
  v13 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001A5D40, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001A5C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20646E656B656557, 0xED00006F44206F54);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000002BLL, 0x800000010047E4A0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x800000010047E4D0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20676E6964616552, 0xEC0000007473694CLL);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A5D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20797265636F7247, 0xEC0000007473694CLL);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001ELL, 0x800000010047E440);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x800000010047E460);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7250206573756F48, 0xEE00737463656A6FLL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010047E480);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A5E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  char *v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  unint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  unint64_t v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  Swift::String v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  Swift::String v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v87 = sub_100012E18(&qword_1005D2840);
  v84 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v78 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2848);
  __chkstk_darwin(v7);
  v9 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100019B6C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 3, &type metadata for MoveNotesToFolderIntent, v10);
  v11._countAndFlagsBits = 0x6568742065766F4DLL;
  v11._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_1004580E0, v12);
  v79 = sub_100130EAC();
  v86 = a1;
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v79);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v7);
  swift_release(v14);
  v15._countAndFlagsBits = 0x6F742065746F6E20;
  v15._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_100458108, v16);
  v85 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v85);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v7);
  swift_release(v18);
  v19._object = (void *)0xEB00000000206E69;
  v19._countAndFlagsBits = 0x207265646C6F6620;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v20._countAndFlagsBits = 46;
  v20._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = v78;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveNotesToFolderIntent, v10);
  v82 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v21, &type metadata for MoveNotesToFolderIntent, v10);
  v84 = *(_QWORD *)(v84 + 8);
  v22 = v87;
  ((void (*)(char *, uint64_t))v84)(v21, v87);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 2, &type metadata for MoveNotesToFolderIntent, v10);
  v23._object = (void *)0x800000010047E420;
  v23._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v25 = swift_getKeyPath(&unk_1004580E0, v24);
  v26 = v79;
  v27 = _AssistantIntent.IntentProjection.subscript.getter(v25, v79);
  swift_release(v25);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v27, v7);
  swift_release(v27);
  v28._countAndFlagsBits = 0x796D206F746E6920;
  v28._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_100458108, v29);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v85);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v7);
  swift_release(v31);
  v32._countAndFlagsBits = 0x2E7265646C6F6620;
  v32._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v33 = v10;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveNotesToFolderIntent, v10);
  v83 = v10;
  v81 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v21, &type metadata for MoveNotesToFolderIntent, v10);
  v34 = v21;
  v35 = (void (*)(char *, uint64_t))v84;
  ((void (*)(char *, uint64_t))v84)(v21, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 2, &type metadata for MoveNotesToFolderIntent, v33);
  v36._countAndFlagsBits = 0x7420747265736E49;
  v36._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v38 = swift_getKeyPath(&unk_1004580E0, v37);
  v39 = _AssistantIntent.IntentProjection.subscript.getter(v38, v26);
  swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v39, v7);
  swift_release(v39);
  v40._countAndFlagsBits = 0x6E692065746F6E20;
  v40._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v42 = swift_getKeyPath(&unk_100458108, v41);
  v43 = v85;
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v42, v85);
  swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v7);
  swift_release(v44);
  v45._countAndFlagsBits = 0x2E7265646C6F6620;
  v45._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = v83;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveNotesToFolderIntent, v83);
  v80 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v21, &type metadata for MoveNotesToFolderIntent, v46);
  v47 = v87;
  v35(v34, v87);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for MoveNotesToFolderIntent, v46);
  v48._countAndFlagsBits = 0x20796D20747550;
  v48._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v50 = swift_getKeyPath(&unk_1004580E0, v49);
  v51 = _AssistantIntent.IntentProjection.subscript.getter(v50, v26);
  swift_release(v50);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v51, v7);
  swift_release(v51);
  v52._countAndFlagsBits = 0x6E692065746F6E20;
  v52._object = (void *)0xEC00000020796D20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v54 = swift_getKeyPath(&unk_100458108, v53);
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v54, v43);
  swift_release(v54);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v7);
  swift_release(v55);
  v56._countAndFlagsBits = 0x2E7265646C6F6620;
  v56._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v57 = v83;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveNotesToFolderIntent, v83);
  v77 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for MoveNotesToFolderIntent, v57);
  v58 = v47;
  v59 = (void (*)(char *, uint64_t))v84;
  ((void (*)(char *, uint64_t))v84)(v34, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(31, 2, &type metadata for MoveNotesToFolderIntent, v57);
  v60._countAndFlagsBits = 0x6568742065766F4DLL;
  v60._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v60);
  v62 = swift_getKeyPath(&unk_1004580E0, v61);
  v63 = _AssistantIntent.IntentProjection.subscript.getter(v62, v26);
  swift_release(v62);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v63, v7);
  swift_release(v63);
  v64._countAndFlagsBits = 0x6E692065746F6E20;
  v64._object = (void *)0xEE0020796D206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v64);
  v66 = swift_getKeyPath(&unk_100458108, v65);
  v67 = _AssistantIntent.IntentProjection.subscript.getter(v66, v43);
  swift_release(v66);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v67, v7);
  swift_release(v67);
  v68._countAndFlagsBits = 0x2E7265646C6F6620;
  v68._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v68);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for MoveNotesToFolderIntent, v57);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v34, &type metadata for MoveNotesToFolderIntent, v57);
  v59(v34, v87);
  v70 = sub_100012E18(&qword_1005D2850);
  v71 = swift_allocObject(v70, 72, 7);
  *(_OWORD *)(v71 + 16) = xmmword_100457CA0;
  v72 = v81;
  *(_QWORD *)(v71 + 32) = v82;
  *(_QWORD *)(v71 + 40) = v72;
  v73 = v77;
  *(_QWORD *)(v71 + 48) = v80;
  *(_QWORD *)(v71 + 56) = v73;
  *(_QWORD *)(v71 + 64) = v69;
  v74 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v71);
  return v74;
}

uint64_t sub_1001A66B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for FolderEntity(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v9 - v6;
  sub_100145220(a1, (uint64_t)&v9 - v6, type metadata accessor for FolderEntity);
  sub_100145220((uint64_t)v7, (uint64_t)v5, type metadata accessor for FolderEntity);
  IntentParameter.wrappedValue.setter(v5);
  return sub_100145264((uint64_t)v7, type metadata accessor for FolderEntity);
}

uint64_t sub_1001A677C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004580E0, v4);
  v6 = sub_100130EAC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100019B6C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A6910, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100458108, v11);
  v13 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001A6A04, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001A6910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000018, 0x800000010047E3C0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000019, 0x800000010047E3E0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F6F462079626142, 0xED0000676F4C2064);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047E400);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A6A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x615020656D656854, 0xEB00000000736B72);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661719, 0xE400000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1935960395, 0xE400000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656D747365766E49, 0xEB0000000073746ELL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20646E656B656557, 0xED00006F44206F74);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A6B10()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = sub_100012E18(&qword_1005D2828);
  v0 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2830);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1000191E4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenAccountIntent, v6);
  v7._countAndFlagsBits = 0x20796D206E65704FLL;
  v7._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004580B8, v8);
  v41 = sub_100019C6C(&qword_1005DABC0, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v41);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._countAndFlagsBits = 0x746E756F63636120;
  v11._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenAccountIntent, v6);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenAccountIntent, v6);
  v12 = *(void (**)(char *, uint64_t))(v0 + 8);
  v13 = v40;
  v12(v2, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for OpenAccountIntent, v6);
  v14._countAndFlagsBits = 0x6874206F74206F47;
  v14._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v16 = swift_getKeyPath(&unk_1004580B8, v15);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v41);
  swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3);
  swift_release(v17);
  v18._countAndFlagsBits = 0x746E756F63636120;
  v18._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenAccountIntent, v6);
  v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenAccountIntent, v6);
  v12(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenAccountIntent, v6);
  v19._countAndFlagsBits = 0x20796D20776F6853;
  v19._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v21 = swift_getKeyPath(&unk_1004580B8, v20);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v41);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3);
  swift_release(v22);
  v23._countAndFlagsBits = 0x746E756F63636120;
  v23._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenAccountIntent, v6);
  v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenAccountIntent, v6);
  v24 = v40;
  v12(v2, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for OpenAccountIntent, v6);
  v25._object = (void *)0x800000010047E3A0;
  v25._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v27 = swift_getKeyPath(&unk_1004580B8, v26);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v41);
  swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v3);
  swift_release(v28);
  v29._countAndFlagsBits = 0x746E756F63636120;
  v29._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenAccountIntent, v6);
  v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenAccountIntent, v6);
  v12(v2, v24);
  v31 = sub_100012E18(&qword_1005D2838);
  v32 = swift_allocObject(v31, 64, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100457CB0;
  v33 = v38;
  *(_QWORD *)(v32 + 32) = v39;
  *(_QWORD *)(v32 + 40) = v33;
  *(_QWORD *)(v32 + 48) = v37;
  *(_QWORD *)(v32 + 56) = v30;
  v34 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v32);
  return v34;
}

uint64_t sub_1001A6F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v7 = a5(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v14 - v11;
  sub_100145220(a1, (uint64_t)&v14 - v11, a5);
  sub_100145220((uint64_t)v12, (uint64_t)v10, a5);
  IntentParameter.wrappedValue.setter(v10);
  return sub_100145264((uint64_t)v12, a5);
}

uint64_t sub_1001A7058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1004580B8, v4);
  v6 = sub_100019C6C(&qword_1005DABC0, type metadata accessor for AccountEntity, (uint64_t)&protocol conformance descriptor for AccountEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1000191E4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A7180, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A7180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64756F6C4369, 0xE600000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x506920796D206E4FLL, 0xEC000000656E6F68);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x506920796D206E4FLL, 0xEA00000000006461);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C69616D47, 0xE500000000000000);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A7260()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E18(&qword_1005D2810);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2818);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185970();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for OpenAttachmentIntent, v6);
  v7._countAndFlagsBits = 0x2079616C70736944;
  v7._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100458090, v8);
  v10 = sub_100019C6C(&qword_1005D2BD0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v3);
  swift_release(v11);
  v12._countAndFlagsBits = 0x6D68636174746120;
  v12._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenAttachmentIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenAttachmentIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for OpenAttachmentIntent, v6);
  v14._countAndFlagsBits = 0x656874206E65704FLL;
  v14._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v16 = swift_getKeyPath(&unk_100458090, v15);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v10);
  swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3);
  swift_release(v17);
  v18._countAndFlagsBits = 0x6D68636174746120;
  v18._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenAttachmentIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenAttachmentIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for OpenAttachmentIntent, v6);
  v20._countAndFlagsBits = 0x65687420776F6853;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_100458090, v21);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v10);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v3);
  swift_release(v23);
  v24._countAndFlagsBits = 0x6D68636174746120;
  v24._object = (void *)0xEC0000002E746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenAttachmentIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenAttachmentIntent, v6);
  v19(v2, v13);
  v26 = sub_100012E18(&qword_1005D2820);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100456A10;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_1001A7648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458090, v4);
  v6 = sub_100019C6C(&qword_1005D2BD0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100185970();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A7770, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A7770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000015, 0x800000010047E320);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010047E340);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047E360);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047E380);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001A7858()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);

  v41 = sub_100012E18(&qword_1005D27F8);
  v0 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v2 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2800);
  __chkstk_darwin(v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185A18();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for OpenChecklistItemIntent, v6);
  v7._countAndFlagsBits = 0x65687420776F6853;
  v7._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100458068, v8);
  v40 = sub_100019C6C(&qword_1005D8C00, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v40);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._object = (void *)0x800000010047E280;
  v11._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenChecklistItemIntent, v6);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenChecklistItemIntent, v6);
  v42 = *(void (**)(char *, uint64_t))(v0 + 8);
  v12 = v41;
  v42(v2, v41);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for OpenChecklistItemIntent, v6);
  v13._countAndFlagsBits = 0x656874206E65704FLL;
  v13._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v15 = swift_getKeyPath(&unk_100458068, v14);
  v16 = v40;
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v40);
  swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3);
  swift_release(v17);
  v18._countAndFlagsBits = 0xD000000000000011;
  v18._object = (void *)0x800000010047E2A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenChecklistItemIntent, v6);
  v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenChecklistItemIntent, v6);
  v42(v2, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for OpenChecklistItemIntent, v6);
  v19._countAndFlagsBits = 0x2079616C70736944;
  v19._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v21 = swift_getKeyPath(&unk_100458068, v20);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v16);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3);
  swift_release(v22);
  v23._object = (void *)0x800000010047E2C0;
  v23._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenChecklistItemIntent, v6);
  v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenChecklistItemIntent, v6);
  v24 = v41;
  v25 = v42;
  v42(v2, v41);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 1, &type metadata for OpenChecklistItemIntent, v6);
  v26._countAndFlagsBits = 0xD000000000000010;
  v26._object = (void *)0x800000010047E2E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v28 = swift_getKeyPath(&unk_100458068, v27);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v40);
  swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v3);
  swift_release(v29);
  v30._countAndFlagsBits = 0xD000000000000019;
  v30._object = (void *)0x800000010047E300;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenChecklistItemIntent, v6);
  v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenChecklistItemIntent, v6);
  v25(v2, v24);
  v32 = sub_100012E18(&qword_1005D2808);
  v33 = swift_allocObject(v32, 64, 7);
  *(_OWORD *)(v33 + 16) = xmmword_100457CB0;
  v34 = v38;
  *(_QWORD *)(v33 + 32) = v39;
  *(_QWORD *)(v33 + 40) = v34;
  *(_QWORD *)(v33 + 48) = v37;
  *(_QWORD *)(v33 + 56) = v31;
  v35 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v33);
  return v35;
}

uint64_t sub_1001A7D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458068, v4);
  v6 = sub_100019C6C(&qword_1005D8C00, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100185A18();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A7E34, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A7E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73617068746F6F74, 0xEA00000000006574);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000015, 0x800000010047E240);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x646E61682077656ELL, 0xEF736C65776F7420);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F4A206C69616D65, 0xEE006E616874616ELL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001FLL, 0x800000010047E260);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A7F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  Swift::String v17;
  void (*v18)(_QWORD);
  Swift::String v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  char *v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  char *v34;
  void (*v35)(char *, _QWORD, uint64_t);
  uint64_t v36;
  Swift::String v37;
  char *v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  Swift::String v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  Swift::String v46;
  char *v47;
  char *v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, _QWORD, uint64_t);
  void (*v70)(char *, uint64_t);
  char *v71;
  unsigned int v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;

  v67 = a1;
  v1 = sub_100012E18(&qword_1005D27E0);
  v74 = *(void (**)(char *, uint64_t))(v1 - 8);
  v75 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = v4;
  __chkstk_darwin(v4);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D27E8);
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1000192D4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 2, &type metadata for OpenFolderIntent, v12);
  v13._countAndFlagsBits = 0x20796D206E65704FLL;
  v13._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  KeyPath = swift_getKeyPath(&unk_100458040, v14);
  v73 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v73);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v9);
  swift_release(v16);
  v17._countAndFlagsBits = 32;
  v17._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  v72 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v18 = *(void (**)(_QWORD))(v5 + 104);
  v68 = v8;
  v69 = (void (*)(char *, _QWORD, uint64_t))v18;
  v63 = v6;
  v18(v8);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v8, v9);
  v70 = *(void (**)(char *, uint64_t))(v5 + 8);
  v70(v8, v6);
  v19._countAndFlagsBits = 0x2E7265646C6F6620;
  v19._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v71 = v3;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v11, &type metadata for OpenFolderIntent, v12);
  v66 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenFolderIntent, v12);
  v20 = v75;
  v21 = (void (*)(char *, uint64_t))*((_QWORD *)v74 + 1);
  v21(v3, v75);
  v74 = v21;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for OpenFolderIntent, v12);
  v22._countAndFlagsBits = 0x656874206E65704FLL;
  v22._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  v24 = swift_getKeyPath(&unk_100458040, v23);
  v25 = v73;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v24, v73);
  swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v9);
  swift_release(v26);
  v27._countAndFlagsBits = 0x2E7265646C6F6620;
  v27._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v11, &type metadata for OpenFolderIntent, v12);
  v65 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v28, &type metadata for OpenFolderIntent, v12);
  v21(v28, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 2, &type metadata for OpenFolderIntent, v12);
  v29._countAndFlagsBits = 0x656874206E65704FLL;
  v29._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v31 = swift_getKeyPath(&unk_100458040, v30);
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v31, v25);
  swift_release(v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v9);
  swift_release(v32);
  v33._countAndFlagsBits = 0x207265646C6F6620;
  v33._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = v68;
  v35 = v69;
  v36 = v63;
  v69(v68, v72, v63);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v9);
  v70(v34, v36);
  v37._countAndFlagsBits = 46;
  v37._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v11, &type metadata for OpenFolderIntent, v12);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v38, &type metadata for OpenFolderIntent, v12);
  v74(v38, v75);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 2, &type metadata for OpenFolderIntent, v12);
  v39._object = (void *)0x800000010047E200;
  v39._countAndFlagsBits = 0x1000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v41 = swift_getKeyPath(&unk_100458040, v40);
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v41, v73);
  swift_release(v41);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v9);
  swift_release(v42);
  v43._countAndFlagsBits = 0x207265646C6F6620;
  v43._object = (void *)0xEF20656874206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  v44 = v68;
  v35(v68, v72, v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v9);
  v45 = v70;
  v70(v44, v36);
  v46._countAndFlagsBits = 0x2E70706120;
  v46._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = v71;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v11, &type metadata for OpenFolderIntent, v12);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v47, &type metadata for OpenFolderIntent, v12);
  v48 = v47;
  v74(v47, v75);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 2, &type metadata for OpenFolderIntent, v12);
  v49._object = (void *)0x800000010047E220;
  v49._countAndFlagsBits = 0xD000000000000019;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  v51 = swift_getKeyPath(&unk_100458040, v50);
  v52 = _AssistantIntent.IntentProjection.subscript.getter(v51, v73);
  swift_release(v51);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v52, v9);
  swift_release(v52);
  v53._countAndFlagsBits = 0x207265646C6F6620;
  v53._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  v69(v44, v72, v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v9);
  v45(v44, v36);
  v54._countAndFlagsBits = 46;
  v54._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v11, &type metadata for OpenFolderIntent, v12);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v48, &type metadata for OpenFolderIntent, v12);
  v74(v48, v75);
  v56 = sub_100012E18(&qword_1005D27F0);
  v57 = swift_allocObject(v56, 72, 7);
  *(_OWORD *)(v57 + 16) = xmmword_100457CA0;
  v58 = v65;
  *(_QWORD *)(v57 + 32) = v66;
  *(_QWORD *)(v57 + 40) = v58;
  v59 = v62;
  *(_QWORD *)(v57 + 48) = v64;
  *(_QWORD *)(v57 + 56) = v59;
  *(_QWORD *)(v57 + 64) = v55;
  v60 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v57);
  return v60;
}

uint64_t sub_1001A8668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458040, v4);
  v6 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1000192D4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A8790, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A8790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6769532064726942, 0xEE0073676E697468);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x31303120636C6143, 0xE800000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x676E69666C6F47, 0xE700000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73657069636552, 0xE700000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x5220746867696557, 0xED000064726F6365);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001A88A4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  void (*v20)(char *, uint64_t);
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v45 = sub_100012E18(&qword_1005D27C8);
  v43 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D27D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100019838();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for OpenNoteIntent, v7);
  v8._countAndFlagsBits = 0x656874206E65704FLL;
  v8._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100458018, v9);
  v11 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v40 = v11;
  v46 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNoteIntent, v7);
  v44 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNoteIntent, v7);
  v41 = *(void (**)(char *, uint64_t))(v43 + 8);
  v14 = v45;
  v41(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for OpenNoteIntent, v7);
  v15._countAndFlagsBits = 0x20796D206E65704FLL;
  v15._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_100458018, v16);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4);
  swift_release(v18);
  v19._countAndFlagsBits = 0x2E65746F6E20;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNoteIntent, v7);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNoteIntent, v7);
  v20 = v41;
  v41(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenNoteIntent, v7);
  v21._countAndFlagsBits = 0x6874206F74206F47;
  v21._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100458018, v22);
  v24 = v40;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v40);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v4);
  swift_release(v25);
  v26._countAndFlagsBits = 0x2E65746F6E20;
  v26._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNoteIntent, v7);
  v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNoteIntent, v7);
  v27 = v45;
  v20(v3, v45);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for OpenNoteIntent, v7);
  v28._countAndFlagsBits = 0x20796D20776F6853;
  v28._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v30 = swift_getKeyPath(&unk_100458018, v29);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v24);
  swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v4);
  swift_release(v31);
  v32._countAndFlagsBits = 0x2E65746F6E20;
  v32._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenNoteIntent, v7);
  v33 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNoteIntent, v7);
  v20(v3, v27);
  v34 = sub_100012E18(&qword_1005D27D8);
  v35 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v35 + 16) = xmmword_100457CB0;
  v36 = v43;
  *(_QWORD *)(v35 + 32) = v44;
  *(_QWORD *)(v35 + 40) = v36;
  *(_QWORD *)(v35 + 48) = v42;
  *(_QWORD *)(v35 + 56) = v33;
  v37 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v35);
  return v37;
}

uint64_t sub_1001A8D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100458018, v4);
  v6 = sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100019838();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001A8E60, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A8E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010047E1A0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x800000010047E1C0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x800000010047E1E0);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001A8F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D27B8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100019A7C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002FLL, 0x800000010047E0A0, &type metadata for OpenNotesViewIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001ELL, 0x800000010047E0D0, &type metadata for OpenNotesViewIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000003DLL, 0x800000010047E0F0, &type metadata for OpenNotesViewIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000031, 0x800000010047E130, &type metadata for OpenNotesViewIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x800000010047E170, &type metadata for OpenNotesViewIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D27C0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_1001A9160(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100457FF0, (uint64_t (*)(void))sub_1001B31F0, (uint64_t (*)(uint64_t))sub_100019A7C, (uint64_t)sub_1001A9184);
}

uint64_t sub_1001A9184()
{
  return sub_1001B08A0(0xD000000000000011, 0x80000001004769B0);
}

uint64_t sub_1001A91A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D27B8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100019A7C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000027, 0x800000010047DFB0, &type metadata for OpenNotesViewIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000029, 0x800000010047DFE0, &type metadata for OpenNotesViewIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002CLL, 0x800000010047E010, &type metadata for OpenNotesViewIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x800000010047E040, &type metadata for OpenNotesViewIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x800000010047E070, &type metadata for OpenNotesViewIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenNotesViewIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D27C0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_1001A93E0(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100457FF0, (uint64_t (*)(void))sub_1001B31F0, (uint64_t (*)(uint64_t))sub_100019A7C, (uint64_t)sub_1001A9404);
}

uint64_t sub_1001A9404()
{
  return sub_1001B08A0(0x694C7265646C6F66, 0xEA00000000007473);
}

uint64_t sub_1001A9420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D27A0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100185864();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000032, 0x800000010047DEE0, &type metadata for OpenTopLevelFolderIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001BLL, 0x800000010047DF20, &type metadata for OpenTopLevelFolderIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010047DF40, &type metadata for OpenTopLevelFolderIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002BLL, 0x800000010047DF60, &type metadata for OpenTopLevelFolderIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001BLL, 0x800000010047DF90, &type metadata for OpenTopLevelFolderIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D27A8);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_1001A9660(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100457FC8, (uint64_t (*)(void))sub_1001B3140, (uint64_t (*)(uint64_t))sub_100185864, (uint64_t)sub_1001A9684);
}

uint64_t sub_1001A9684()
{
  return sub_1001B08A0(0x746F4E6B63697571, 0xEA00000000007365);
}

uint64_t sub_1001A96A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D27A0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100185864();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000018, 0x800000010047DE30, &type metadata for OpenTopLevelFolderIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000019, 0x800000010047DE50, &type metadata for OpenTopLevelFolderIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000024, 0x800000010047DE70, &type metadata for OpenTopLevelFolderIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000016, 0x800000010047DEA0, &type metadata for OpenTopLevelFolderIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001FLL, 0x800000010047DEC0, &type metadata for OpenTopLevelFolderIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTopLevelFolderIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D27A8);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_1001A98E0(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100457FC8, (uint64_t (*)(void))sub_1001B3140, (uint64_t (*)(uint64_t))sub_100185864, (uint64_t)sub_1001A9904);
}

uint64_t sub_1001A9904()
{
  return sub_1001B08A0(0x6957646572616873, 0xED0000756F596874);
}

uint64_t sub_1001A9928()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E18(&qword_1005D2780);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2788);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185B88();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for OpenTableIntent, v6);
  v7._object = (void *)0x800000010047DDD0;
  v7._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100457FA0, v8);
  v10 = sub_100019C6C(&qword_1005D10E8, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v3);
  swift_release(v11);
  v12._countAndFlagsBits = 0x6E69206F666E6920;
  v12._object = (void *)0xEC0000002E746920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTableIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTableIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(36, 1, &type metadata for OpenTableIntent, v6);
  v14._countAndFlagsBits = 0xD00000000000001ELL;
  v14._object = (void *)0x800000010047DDF0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v16 = swift_getKeyPath(&unk_100457FA0, v15);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v10);
  swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E6F666E6920;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTableIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTableIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for OpenTableIntent, v6);
  v20._countAndFlagsBits = 0xD00000000000001DLL;
  v20._object = (void *)0x800000010047DE10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_100457FA0, v21);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v10);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v3);
  swift_release(v23);
  v24._countAndFlagsBits = 46;
  v24._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTableIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTableIntent, v6);
  v19(v2, v13);
  v26 = sub_100012E18(&qword_1005D2790);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100456A10;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_1001A9CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457FA0, v4);
  v6 = sub_100019C6C(&qword_1005D10E8, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100185B88();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001B41DC, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001A9E24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;

  v51 = sub_100012E18(&qword_1005D2768);
  v0 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2770);
  __chkstk_darwin(v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100019928();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(42, 1, &type metadata for OpenTagIntent, v6);
  v7._countAndFlagsBits = 0xD000000000000025;
  v7._object = (void *)0x800000010047DC90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100457F78, v8);
  v49 = sub_100019C6C(&qword_1005D3E20, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v49);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3);
  swift_release(v10);
  v11._countAndFlagsBits = 0x2E67617420;
  v11._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTagIntent, v6);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTagIntent, v6);
  v12 = *(void (**)(char *, uint64_t))(v0 + 8);
  v13 = v51;
  v12(v2, v51);
  v50 = v12;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(37, 1, &type metadata for OpenTagIntent, v6);
  v14._countAndFlagsBits = 0xD000000000000020;
  v14._object = (void *)0x800000010047DCC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v16 = swift_getKeyPath(&unk_100457F78, v15);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v49);
  swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E67617420;
  v18._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTagIntent, v6);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTagIntent, v6);
  v12(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(45, 1, &type metadata for OpenTagIntent, v6);
  v19._countAndFlagsBits = 0xD000000000000015;
  v19._object = (void *)0x800000010047DCF0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v21 = swift_getKeyPath(&unk_100457F78, v20);
  v22 = v49;
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v21, v49);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v3);
  swift_release(v23);
  v24._countAndFlagsBits = 0xD000000000000018;
  v24._object = (void *)0x800000010047DD10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTagIntent, v6);
  v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTagIntent, v6);
  v50(v2, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for OpenTagIntent, v6);
  v25._object = (void *)0x800000010047DD30;
  v25._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v27 = swift_getKeyPath(&unk_100457F78, v26);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v22);
  swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v3);
  swift_release(v28);
  v29._countAndFlagsBits = 0x2E67617420;
  v29._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTagIntent, v6);
  v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTagIntent, v6);
  v31 = v50;
  v30 = v51;
  v50(v2, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for OpenTagIntent, v6);
  v32._object = (void *)0x800000010047DD50;
  v32._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v34 = swift_getKeyPath(&unk_100457F78, v33);
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v22);
  swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v3);
  swift_release(v35);
  v36._countAndFlagsBits = 0x2E67617420;
  v36._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for OpenTagIntent, v6);
  v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for OpenTagIntent, v6);
  v31(v2, v30);
  v38 = sub_100012E18(&qword_1005D2778);
  v39 = swift_allocObject(v38, 72, 7);
  *(_OWORD *)(v39 + 16) = xmmword_100457CA0;
  v40 = v47;
  *(_QWORD *)(v39 + 32) = v48;
  *(_QWORD *)(v39 + 40) = v40;
  v41 = v45;
  *(_QWORD *)(v39 + 48) = v46;
  *(_QWORD *)(v39 + 56) = v41;
  *(_QWORD *)(v39 + 64) = v37;
  v42 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v39);
  return v42;
}

uint64_t sub_1001AA3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457F78, v4);
  v6 = sub_100019C6C(&qword_1005D3E20, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100019928();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001AA4D0, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001AA4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656D614E79626142, 0xE900000000000073);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F72506573756F48, 0xED0000737463656ALL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x746567647562, 0xE600000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661751, 0xE400000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x676E696B636170, 0xE700000000000000);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001AA5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  unint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  void (*v23)(char *, uint64_t);
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v61 = a1;
  v1 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v58 = *(_QWORD *)(v1 - 8);
  v59 = v1;
  __chkstk_darwin(v1);
  v57 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100012E18(&qword_1005D2750);
  v3 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005D2758);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1001B2AD4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for PinNotesIntent, v9);
  v10._object = (void *)0x800000010047DC20;
  v10._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100457F28, v11);
  v13 = sub_100130EAC();
  v53 = v13;
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v13);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v6);
  swift_release(v14);
  v15._countAndFlagsBits = 0x2E65746F6E20;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for PinNotesIntent, v9);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for PinNotesIntent, v9);
  v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v17 = v62;
  v16(v5, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(56, 1, &type metadata for PinNotesIntent, v9);
  v18._countAndFlagsBits = 0x72757320656B614DLL;
  v18._object = (void *)0xED000020796D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v20 = swift_getKeyPath(&unk_100457F28, v19);
  v21 = _AssistantIntent.IntentProjection.subscript.getter(v20, v13);
  swift_release(v20);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v21, v6);
  swift_release(v21);
  v22._countAndFlagsBits = 0xD00000000000002BLL;
  v22._object = (void *)0x800000010047DC40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for PinNotesIntent, v9);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for PinNotesIntent, v9);
  v16(v5, v17);
  v23 = v16;
  v54 = v16;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for PinNotesIntent, v9);
  v24._countAndFlagsBits = 0x20656874206E6950;
  v24._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v26 = swift_getKeyPath(&unk_100457F28, v25);
  v27 = v53;
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v26, v53);
  swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v6);
  swift_release(v28);
  v29._countAndFlagsBits = 0x2E65746F6E20;
  v29._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for PinNotesIntent, v9);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for PinNotesIntent, v9);
  v23(v5, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 2, &type metadata for PinNotesIntent, v9);
  v30._countAndFlagsBits = 544106832;
  v30._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v32 = swift_getKeyPath(&unk_100457F28, v31);
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v27);
  swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v6);
  swift_release(v33);
  v34._countAndFlagsBits = 544106784;
  v34._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = v57;
  v36 = v58;
  v37 = v59;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v6);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
  v38._countAndFlagsBits = 46;
  v38._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for PinNotesIntent, v9);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for PinNotesIntent, v9);
  v39 = v62;
  v40 = v54;
  v54(v5, v62);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for PinNotesIntent, v9);
  v41._object = (void *)0x800000010047DC70;
  v41._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v43 = swift_getKeyPath(&unk_100457F28, v42);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v27);
  swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v6);
  swift_release(v44);
  v45._countAndFlagsBits = 0x2E65746F6E20;
  v45._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v8, &type metadata for PinNotesIntent, v9);
  v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v5, &type metadata for PinNotesIntent, v9);
  v40(v5, v39);
  v47 = sub_100012E18(&qword_1005D2760);
  v48 = swift_allocObject(v47, 72, 7);
  *(_OWORD *)(v48 + 16) = xmmword_100457CA0;
  v49 = v56;
  *(_QWORD *)(v48 + 32) = v60;
  *(_QWORD *)(v48 + 40) = v49;
  v50 = v59;
  *(_QWORD *)(v48 + 48) = v55;
  *(_QWORD *)(v48 + 56) = v50;
  *(_QWORD *)(v48 + 64) = v46;
  v51 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v48);
  return v51;
}

uint64_t sub_1001AABC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457F28, v4);
  v6 = sub_100130EAC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2AD4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001AAD54, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100457F50, v11);
  v13 = sub_100019C6C(&qword_1005D2748, (uint64_t (*)(uint64_t))&type metadata accessor for FavoriteOperation, (uint64_t)&protocol conformance descriptor for FavoriteOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_100195D68, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001AAD54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x4C206F6374736F43, 0xEB00000000747369);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047DBC0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000021, 0x800000010047DB70);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010047DBE0);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047DC00);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001AAE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v6 = a5(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v15 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v15 - v11, a1, v6);
  v13(v10, (uint64_t)v12, v6);
  IntentParameter.wrappedValue.setter(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_1001AAF38()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  Swift::String v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = sub_100012E18(&qword_1005D2750);
  v0 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2758);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2AD4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for PinNotesIntent, v6);
  v7._object = (void *)0x800000010047DBA0;
  v7._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100457F28, v8);
  v10 = sub_100130EAC();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v3);
  swift_release(v11);
  v12._countAndFlagsBits = 0x2E65746F6E20;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for PinNotesIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for PinNotesIntent, v6);
  v13 = *(void (**)(char *, uint64_t))(v0 + 8);
  v14 = v26;
  v13(v2, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for PinNotesIntent, v6);
  v15._countAndFlagsBits = 0x796D206E69706E55;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_100457F28, v16);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v3);
  swift_release(v18);
  v19._countAndFlagsBits = 0x2E65746F6E20;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for PinNotesIntent, v6);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for PinNotesIntent, v6);
  v13(v2, v14);
  v21 = sub_100012E18(&qword_1005D2760);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100454E90;
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v20;
  v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v22);
  return v23;
}

uint64_t sub_1001AB200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457F28, v4);
  v6 = sub_100130EAC();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2AD4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001AB394, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100457F50, v11);
  v13 = sub_100019C6C(&qword_1005D2748, (uint64_t (*)(uint64_t))&type metadata accessor for FavoriteOperation, (uint64_t)&protocol conformance descriptor for FavoriteOperation);
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001964BC, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001AB394()
{
  return sub_1001B08A0(0xD000000000000021, 0x800000010047DB70);
}

uint64_t sub_1001AB3B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Swift::String v50;
  unint64_t v51;
  uint64_t v52;
  Swift::String v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  unint64_t v78;

  v76 = sub_100012E18(&qword_1005D2730);
  v2 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2738);
  __chkstk_darwin(v5);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100130160();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(47, 2, &type metadata for RemoveTagsFromNotesIntent, v8);
  v9._countAndFlagsBits = 0xD00000000000001CLL;
  v9._object = (void *)0x800000010047DB10;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100457ED8, v10);
  v78 = sub_1001B2FF8();
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v78);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 0x6F72662067617420;
  v13._object = (void *)0xED000020796D206DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v15 = swift_getKeyPath(&unk_100457F00, v14);
  v16 = sub_100130EAC();
  v75 = v16;
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v16);
  swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v5);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E65746F6E20;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RemoveTagsFromNotesIntent, v8);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for RemoveTagsFromNotesIntent, v8);
  v77 = *(void (**)(char *, uint64_t))(v2 + 8);
  v19 = v76;
  v77(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(42, 2, &type metadata for RemoveTagsFromNotesIntent, v8);
  v20._countAndFlagsBits = 0x20796D206E49;
  v20._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_100457F00, v21);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v16);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v5);
  swift_release(v23);
  v24._countAndFlagsBits = 0xD00000000000001FLL;
  v24._object = (void *)0x800000010047DB30;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  v26 = swift_getKeyPath(&unk_100457ED8, v25);
  v27 = v78;
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v26, v78);
  swift_release(v26);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v5);
  swift_release(v28);
  v29._countAndFlagsBits = 0x2E67617420;
  v29._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RemoveTagsFromNotesIntent, v8);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for RemoveTagsFromNotesIntent, v8);
  v77(v4, v19);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 2, &type metadata for RemoveTagsFromNotesIntent, v8);
  v30._countAndFlagsBits = 0x742065766F6D6552;
  v30._object = (void *)0xEB00000000206568;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  v32 = swift_getKeyPath(&unk_100457ED8, v31);
  v74 = a1;
  v33 = _AssistantIntent.IntentProjection.subscript.getter(v32, v27);
  swift_release(v32);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v33, v5);
  swift_release(v33);
  v34._countAndFlagsBits = 0x6F72662067617420;
  v34._object = (void *)0xED000020796D206DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100457F00, v35);
  v37 = v75;
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v36, v75);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5);
  swift_release(v38);
  v39._countAndFlagsBits = 0x2E65746F6E20;
  v39._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RemoveTagsFromNotesIntent, v8);
  v69 = v8;
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for RemoveTagsFromNotesIntent, v8);
  v40 = v76;
  v41 = v77;
  v77(v4, v76);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 2, &type metadata for RemoveTagsFromNotesIntent, v8);
  v42._countAndFlagsBits = 0x2064697220746547;
  v42._object = (void *)0xEF2065687420666FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v44 = swift_getKeyPath(&unk_100457ED8, v43);
  v45 = _AssistantIntent.IntentProjection.subscript.getter(v44, v78);
  swift_release(v44);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v45, v5);
  swift_release(v45);
  v46._countAndFlagsBits = 0x206E692067617420;
  v46._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v48 = swift_getKeyPath(&unk_100457F00, v47);
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v48, v37);
  swift_release(v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v5);
  swift_release(v49);
  v50._countAndFlagsBits = 0x2E65746F6E20;
  v50._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  v51 = v69;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RemoveTagsFromNotesIntent, v69);
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for RemoveTagsFromNotesIntent, v51);
  v52 = v40;
  v41(v4, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 2, &type metadata for RemoveTagsFromNotesIntent, v51);
  v53._object = (void *)0x800000010047DB50;
  v53._countAndFlagsBits = 0xD000000000000018;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v53);
  v55 = swift_getKeyPath(&unk_100457ED8, v54);
  v56 = _AssistantIntent.IntentProjection.subscript.getter(v55, v78);
  swift_release(v55);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v56, v5);
  swift_release(v56);
  v57._countAndFlagsBits = 0x6F72662067617420;
  v57._object = (void *)0xED000020796D206DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  v59 = swift_getKeyPath(&unk_100457F00, v58);
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v75);
  swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v5);
  swift_release(v60);
  v61._countAndFlagsBits = 0x2E65746F6E20;
  v61._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v61);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for RemoveTagsFromNotesIntent, v51);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for RemoveTagsFromNotesIntent, v51);
  v41(v4, v52);
  v63 = sub_100012E18(&qword_1005D2740);
  v64 = swift_allocObject(v63, 72, 7);
  *(_OWORD *)(v64 + 16) = xmmword_100457CA0;
  v65 = v72;
  *(_QWORD *)(v64 + 32) = v73;
  *(_QWORD *)(v64 + 40) = v65;
  v66 = v70;
  *(_QWORD *)(v64 + 48) = v71;
  *(_QWORD *)(v64 + 56) = v66;
  *(_QWORD *)(v64 + 64) = v62;
  v67 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v64);
  return v67;
}

uint64_t sub_1001ABB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457ED8, v4);
  v6 = sub_1001B2FF8();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100130160();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001ABCB4, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100457F00, v11);
  v13 = sub_100130EAC();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001ABDB4, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001ABCB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(6382932, 0xE300000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7365786154, 0xE500000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7265676945, 0xE500000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x736956656C707041, 0xEE006F72506E6F69);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E616C506C61654DLL, 0xEC000000676E696ELL);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001ABDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000011, 0x800000010047DAF0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(875704370, 0xE400000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x65746F6E79654BLL, 0xE700000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x746F4E206B726F57, 0xEA00000000007365);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1685024582, 0xE400000000000000);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001ABEA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  void (*v39)(char *, uint64_t);
  Swift::String v40;
  char *v41;
  Swift::String v42;
  uint64_t v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  unsigned int v75;
  void (*v76)(char *);
  uint64_t v77;
  char *v78;
  uint64_t v79;

  v79 = sub_100012E18(&qword_1005D2710);
  v71 = *(void (**)(char *, uint64_t))(v79 - 8);
  __chkstk_darwin(v79);
  v78 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2718);
  __chkstk_darwin(v7);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1001B2B18();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(49, 2, &type metadata for RenameFolderIntent, v10);
  v11._countAndFlagsBits = 0x6D20656D616E6552;
  v11._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  KeyPath = swift_getKeyPath(&unk_100457E88, v12);
  v72 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v73 = a1;
  v14 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v72);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v14, v7);
  swift_release(v14);
  v15._countAndFlagsBits = 0x207265646C6F6620;
  v15._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v75 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v76 = *(void (**)(char *))(v4 + 104);
  v77 = v3;
  v76(v6);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  v74 = *(void (**)(char *, uint64_t))(v4 + 8);
  v74(v6, v3);
  v16._countAndFlagsBits = 0xD00000000000001CLL;
  v16._object = (void *)0x800000010047D9E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = v78;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameFolderIntent, v10);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v17, &type metadata for RenameFolderIntent, v10);
  v19 = (void (*)(char *, uint64_t))*((_QWORD *)v71 + 1);
  v70 = v18;
  v71 = v19;
  v20 = v79;
  v19(v17, v79);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(49, 2, &type metadata for RenameFolderIntent, v10);
  v21._countAndFlagsBits = 0x6D20657461647055;
  v21._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100457E88, v22);
  v24 = v72;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v72);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v7);
  swift_release(v25);
  v26._countAndFlagsBits = 0xD000000000000026;
  v26._object = (void *)0x800000010047DA00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  v27 = v77;
  ((void (*)(char *, _QWORD, uint64_t))v76)(v6, v75, v77);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  v74(v6, v27);
  v28._countAndFlagsBits = 46;
  v28._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = v78;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameFolderIntent, v10);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v29, &type metadata for RenameFolderIntent, v10);
  v30 = v71;
  v71(v29, v20);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 2, &type metadata for RenameFolderIntent, v10);
  v31._countAndFlagsBits = 0x6D2065676E616843;
  v31._object = (void *)0xEA00000000002079;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  v33 = swift_getKeyPath(&unk_100457E88, v32);
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v33, v24);
  swift_release(v33);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v7);
  swift_release(v34);
  v35._countAndFlagsBits = 0xD000000000000020;
  v35._object = (void *)0x800000010047DA30;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = v75;
  v38 = (void (*)(char *, uint64_t, uint64_t))v76;
  v37 = v77;
  ((void (*)(char *, _QWORD, uint64_t))v76)(v6, v75, v77);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  v39 = v74;
  v74(v6, v37);
  v40._countAndFlagsBits = 46;
  v40._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v41 = v78;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameFolderIntent, v10);
  v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v41, &type metadata for RenameFolderIntent, v10);
  v30(v41, v79);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(77, 2, &type metadata for RenameFolderIntent, v10);
  v42._countAndFlagsBits = 2125385;
  v42._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = v77;
  v38(v6, v36, v77);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  v39(v6, v43);
  v44._object = (void *)0x800000010047DA60;
  v44._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  v46 = swift_getKeyPath(&unk_100457E88, v45);
  v47 = v72;
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v46, v72);
  swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v7);
  swift_release(v48);
  v49._countAndFlagsBits = 0xD000000000000030;
  v49._object = (void *)0x800000010047DA80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  v50 = v78;
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameFolderIntent, v10);
  v67 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v50, &type metadata for RenameFolderIntent, v10);
  v51 = v71;
  v71(v50, v79);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(55, 2, &type metadata for RenameFolderIntent, v10);
  v52._countAndFlagsBits = 0x6120657661682049;
  v52._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v54 = swift_getKeyPath(&unk_100457E88, v53);
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v54, v47);
  swift_release(v54);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v7);
  swift_release(v55);
  v56._countAndFlagsBits = 0x207265646C6F6620;
  v56._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v56);
  v57 = v77;
  ((void (*)(char *, _QWORD, uint64_t))v76)(v6, v75, v77);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v6, v7);
  v74(v6, v57);
  v58._object = (void *)0x800000010047DAC0;
  v58._countAndFlagsBits = 0x1000000000000023;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v9, &type metadata for RenameFolderIntent, v10);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v50, &type metadata for RenameFolderIntent, v10);
  v51(v50, v79);
  v60 = sub_100012E18(&qword_1005D2720);
  v61 = swift_allocObject(v60, 72, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100457CA0;
  v62 = v69;
  *(_QWORD *)(v61 + 32) = v70;
  *(_QWORD *)(v61 + 40) = v62;
  v63 = v67;
  *(_QWORD *)(v61 + 48) = v68;
  *(_QWORD *)(v61 + 56) = v63;
  *(_QWORD *)(v61 + 64) = v59;
  v64 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v61);
  return v64;
}

uint64_t sub_1001AC620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457E88, v4);
  v6 = sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2B18();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001AC7B4, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100457EB0, v11);
  v13 = sub_1001B2FAC();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001AC8D8, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001AC7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x657469726F766146, 0xEF73726F6C6F4320);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7250206573756F48, 0xEE00737463656A6FLL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x800000010047D9A0);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x800000010047D9C0);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x746F4E206B726F57, 0xEA00000000007365);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001AC8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x800000010047D960);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7250206F646E6F43, 0xEE00737463656A6FLL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x61737265766E6F43, 0xED0000736E6F6974);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001CLL, 0x800000010047D980);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1802661719, 0xE400000000000000);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001AC9F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;

  v51 = sub_100012E18(&qword_1005D26F0);
  v2 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D26F8);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B2B5C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for ReplaceSelectionIntent, v8);
  v9._countAndFlagsBits = 0xD00000000000001FLL;
  v9._object = (void *)0x800000010047D8D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100457E60, v10);
  v53 = sub_100019C6C(&qword_1005D26E8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v46 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v53);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ReplaceSelectionIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ReplaceSelectionIntent, v8);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v51;
  v14(v4, v51);
  v52 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for ReplaceSelectionIntent, v8);
  v16._countAndFlagsBits = 543450177;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100457E60, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v53);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._countAndFlagsBits = 0xD00000000000001DLL;
  v20._object = (void *)0x800000010047D8F0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ReplaceSelectionIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ReplaceSelectionIntent, v8);
  v14(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 1, &type metadata for ReplaceSelectionIntent, v8);
  v21._countAndFlagsBits = 0xD000000000000025;
  v21._object = (void *)0x800000010047D910;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100457E60, v22);
  v24 = v53;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v53);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5);
  swift_release(v25);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ReplaceSelectionIntent, v8);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ReplaceSelectionIntent, v8);
  v52(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for ReplaceSelectionIntent, v8);
  v27._countAndFlagsBits = 0x206E69206C6C6946;
  v27._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_100457E60, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v24);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5);
  swift_release(v30);
  v31._object = (void *)0x800000010047D940;
  v31._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ReplaceSelectionIntent, v8);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ReplaceSelectionIntent, v8);
  v32 = v51;
  v33 = v52;
  v52(v4, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for ReplaceSelectionIntent, v8);
  v34._countAndFlagsBits = 0x20747265736E49;
  v34._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100457E60, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v24);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5);
  swift_release(v37);
  v38._countAndFlagsBits = 0x6874206F746E6920;
  v38._object = (void *)0xEF2E65746F6E2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ReplaceSelectionIntent, v8);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ReplaceSelectionIntent, v8);
  v33(v4, v32);
  v40 = sub_100012E18(&qword_1005D2700);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001ACF70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for AttributedString(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1001AD040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457E60, v4);
  v6 = sub_100019C6C(&qword_1005D26E8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2B5C();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001AD168, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001AD168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000010, 0x800000010047D870);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001ALL, 0x800000010047D890);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x2D3535352D383034, 0xEC00000032313231);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x3736353433323143, 0xE900000000000038);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001CLL, 0x800000010047D8B0);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001AD280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  Swift::String v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_100012E18(&qword_1005D26D0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D26D8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100185DE4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for ScanDocumentIntent, v11);
  v12._object = (void *)0x800000010047D720;
  v12._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v4);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v7, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v10, &type metadata for ScanDocumentIntent, v11);
  v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ScanDocumentIntent, v11);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000033, 0x800000010047D740, &type metadata for ScanDocumentIntent, v11);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ScanDocumentIntent, v11);
  v14(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002DLL, 0x800000010047D780, &type metadata for ScanDocumentIntent, v11);
  v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ScanDocumentIntent, v11);
  v14(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000024, 0x800000010047D7B0, &type metadata for ScanDocumentIntent, v11);
  v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ScanDocumentIntent, v11);
  v14(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000027, 0x800000010047D7E0, &type metadata for ScanDocumentIntent, v11);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ScanDocumentIntent, v11);
  v14(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000026, 0x800000010047D810, &type metadata for ScanDocumentIntent, v11);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ScanDocumentIntent, v11);
  v14(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002ELL, 0x800000010047D840, &type metadata for ScanDocumentIntent, v11);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ScanDocumentIntent, v11);
  v14(v3, v0);
  v20 = sub_100012E18(&qword_1005D26E0);
  v21 = swift_allocObject(v20, 88, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100457CC0;
  v22 = v25;
  *(_QWORD *)(v21 + 32) = v26;
  *(_QWORD *)(v21 + 40) = v22;
  *(_QWORD *)(v21 + 48) = v15;
  *(_QWORD *)(v21 + 56) = v16;
  *(_QWORD *)(v21 + 64) = v17;
  *(_QWORD *)(v21 + 72) = v18;
  *(_QWORD *)(v21 + 80) = v19;
  v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v21);
  return v23;
}

uint64_t sub_1001AD63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  void (*v24)(char *, uint64_t);
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v49 = a1;
  v54 = sub_100012E18(&qword_1005D26B8);
  v1 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D26C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1001B2BA0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for SetAttachmentSizeIntent, v7);
  v8._countAndFlagsBits = 0x6573616572636544;
  v8._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100457E10, v9);
  v11 = sub_100019C6C(&qword_1005D2BD0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  v56 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v4);
  swift_release(v12);
  v13._object = (void *)0x800000010047D700;
  v13._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SetAttachmentSizeIntent, v7);
  v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SetAttachmentSizeIntent, v7);
  v50 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14 = v54;
  v50(v3, v54);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for SetAttachmentSizeIntent, v7);
  v15._countAndFlagsBits = 0x65687420656B614DLL;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_100457E10, v16);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4);
  swift_release(v18);
  v19._countAndFlagsBits = 0x6D68636174746120;
  v19._object = (void *)0xEC00000020746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  v21 = swift_getKeyPath(&unk_100457E38, v20);
  v55 = sub_1001B2EB8();
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v55);
  swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v4);
  swift_release(v22);
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SetAttachmentSizeIntent, v7);
  v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SetAttachmentSizeIntent, v7);
  v24 = v50;
  v50(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 2, &type metadata for SetAttachmentSizeIntent, v7);
  v25._countAndFlagsBits = 0x2079616C70736944;
  v25._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  v27 = swift_getKeyPath(&unk_100457E10, v26);
  v28 = _AssistantIntent.IntentProjection.subscript.getter(v27, v56);
  swift_release(v27);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v28, v4);
  swift_release(v28);
  v29._countAndFlagsBits = 0x736120656C696620;
  v29._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v31 = swift_getKeyPath(&unk_100457E38, v30);
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v31, v55);
  swift_release(v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v4);
  swift_release(v32);
  v33._countAndFlagsBits = 46;
  v33._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SetAttachmentSizeIntent, v7);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SetAttachmentSizeIntent, v7);
  v24(v3, v14);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 2, &type metadata for SetAttachmentSizeIntent, v7);
  v34._countAndFlagsBits = 0x20747265766E6F43;
  v34._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100457E10, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v56);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v4);
  swift_release(v37);
  v38._countAndFlagsBits = 0x6D68636174746120;
  v38._object = (void *)0xEF206F7420746E65;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v40 = swift_getKeyPath(&unk_100457E38, v39);
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v40, v55);
  swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v4);
  swift_release(v41);
  v42._countAndFlagsBits = 0x2E657A697320;
  v42._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SetAttachmentSizeIntent, v7);
  v43 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SetAttachmentSizeIntent, v7);
  v24(v3, v54);
  v44 = sub_100012E18(&qword_1005D26C8);
  v45 = swift_allocObject(v44, 64, 7);
  *(_OWORD *)(v45 + 16) = xmmword_100457CB0;
  v46 = v52;
  *(_QWORD *)(v45 + 32) = v53;
  *(_QWORD *)(v45 + 40) = v46;
  *(_QWORD *)(v45 + 48) = v51;
  *(_QWORD *)(v45 + 56) = v43;
  v47 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v45);
  return v47;
}

uint64_t sub_1001ADC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457E10, v4);
  v6 = sub_100019C6C(&qword_1005D2BD0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2BA0();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001ADDA4, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100457E38, v11);
  v13 = sub_1001B2EB8();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001ADE78, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001ADDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000014, 0x800000010047D6E0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x746F68506E69644FLL, 0xED000067706A2E6FLL);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x68736E6565726353, 0xEE00676E702E746FLL);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001ADE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C6C616D73, 0xE500000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6D756964656DLL, 0xE600000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656772616CLL, 0xE500000000000000);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001ADF24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E18(&qword_1005D26A0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D26A8);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2BE4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v7._countAndFlagsBits = 0x6874206B63656843;
  v7._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100457DC0, v8);
  v10 = sub_1001B2D48();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v3);
  swift_release(v11);
  v12._countAndFlagsBits = 0x2E6D65746920;
  v12._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v14._countAndFlagsBits = 0x666F206B63656843;
  v14._object = (void *)0xEE00206568742066;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v16 = swift_getKeyPath(&unk_100457DC0, v15);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v10);
  swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E6D65746920;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v20._countAndFlagsBits = 0x6863206120646441;
  v20._object = (void *)0xEF206F74206B6365;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_100457DC0, v21);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v10);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v3);
  swift_release(v23);
  v24._countAndFlagsBits = 46;
  v24._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v19(v2, v13);
  v26 = sub_100012E18(&qword_1005D26B0);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100456A10;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_1001AE2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457DC0, v4);
  v6 = sub_1001B2D48();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2BE4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001AE450, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100457DE8, v11);
  v13 = sub_1001B2E30();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001AE56C, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001AE450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E61726F646F6564, 0xE900000000000074);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73206C65766F6873, 0xEF6B6C6177656469);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000015, 0x800000010047D680);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x65776F742077656ELL, 0xEA0000000000736CLL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000012, 0x800000010047D6A0);
  v5 = sub_100012E18(&qword_1005D2588);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v6 + 32) = v0;
  *(_QWORD *)(v6 + 40) = v1;
  *(_QWORD *)(v6 + 48) = v2;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001AE56C()
{
  return sub_1001B08A0(0x6B63656863, 0xE500000000000000);
}

uint64_t sub_1001AE580()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_100012E18(&qword_1005D26A0);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D26A8);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2BE4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v7._countAndFlagsBits = 0x6874207261656C43;
  v7._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100457DC0, v8);
  v10 = sub_1001B2D48();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v3);
  swift_release(v11);
  v12._countAndFlagsBits = 0x2E6E6F6974706F20;
  v12._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v14._object = (void *)0x800000010047D6C0;
  v14._countAndFlagsBits = 0xD00000000000001ALL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v16 = swift_getKeyPath(&unk_100457DC0, v15);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v10);
  swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3);
  swift_release(v17);
  v18._countAndFlagsBits = 0x2E6D65746920;
  v18._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v20._countAndFlagsBits = 0x206B636568636E55;
  v20._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v22 = swift_getKeyPath(&unk_100457DC0, v21);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v10);
  swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v3);
  swift_release(v23);
  v24._countAndFlagsBits = 0x2E6D65746920;
  v24._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for SetChecklistItemsCheckedIntent, v6);
  v19(v2, v13);
  v26 = sub_100012E18(&qword_1005D26B0);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100456A10;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_1001AE930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457DC0, v4);
  v6 = sub_1001B2D48();
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_1001B2BE4();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001B41E0, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v12 = swift_getKeyPath(&unk_100457DE8, v11);
  v13 = sub_1001B2E30();
  v14 = _AssistantIntent.IntentProjection.subscript.getter(v12, v13);
  swift_release(v12);
  _AssistantIntent.Value.init<A>(for:builder:)(v14, sub_1001AEAAC, 0, v8);
  v15 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v10(v3, v0);
  v16 = sub_100012E18(&qword_1005D2650);
  v17 = swift_allocObject(v16, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100454E90;
  *(_QWORD *)(v17 + 32) = v9;
  *(_QWORD *)(v17 + 40) = v15;
  v18 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v17);
  return v18;
}

uint64_t sub_1001AEAAC()
{
  return sub_1001B08A0(0x6B636568636E75, 0xE700000000000000);
}

uint64_t sub_1001AEAC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  unint64_t v53;

  v51 = sub_100012E18(&qword_1005D2678);
  v2 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2680);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1001B2C28();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for SetParagraphStyleIntent, v8);
  v9._countAndFlagsBits = 0xD000000000000019;
  v9._object = (void *)0x800000010047D5C0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100457D98, v10);
  v53 = sub_1001B2CFC();
  v46 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v53);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetParagraphStyleIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetParagraphStyleIntent, v8);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v51;
  v14(v4, v51);
  v52 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(43, 1, &type metadata for SetParagraphStyleIntent, v8);
  v16._countAndFlagsBits = 0x100000000000002ALL;
  v16._object = (void *)0x800000010047D5E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100457D98, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v53);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._countAndFlagsBits = 46;
  v20._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetParagraphStyleIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetParagraphStyleIntent, v8);
  v14(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(38, 1, &type metadata for SetParagraphStyleIntent, v8);
  v21._countAndFlagsBits = 0x206120646441;
  v21._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100457D98, v22);
  v24 = v53;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v53);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5);
  swift_release(v25);
  v26._countAndFlagsBits = 0xD000000000000020;
  v26._object = (void *)0x800000010047D610;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetParagraphStyleIntent, v8);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetParagraphStyleIntent, v8);
  v52(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for SetParagraphStyleIntent, v8);
  v27._object = (void *)0x800000010047D640;
  v27._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_100457D98, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v24);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5);
  swift_release(v30);
  v31._countAndFlagsBits = 46;
  v31._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetParagraphStyleIntent, v8);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetParagraphStyleIntent, v8);
  v32 = v51;
  v33 = v52;
  v52(v4, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(32, 1, &type metadata for SetParagraphStyleIntent, v8);
  v34._object = (void *)0x800000010047D660;
  v34._countAndFlagsBits = 0x100000000000001FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100457D98, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v24);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5);
  swift_release(v37);
  v38._countAndFlagsBits = 46;
  v38._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for SetParagraphStyleIntent, v8);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for SetParagraphStyleIntent, v8);
  v33(v4, v32);
  v40 = sub_100012E18(&qword_1005D2688);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001AF014(uint64_t a1)
{
  return sub_1001AF038(a1, (uint64_t)&unk_100457D98, (uint64_t (*)(void))sub_1001B2CFC, (uint64_t (*)(uint64_t))sub_1001B2C28, (uint64_t)sub_1001AF15C);
}

uint64_t sub_1001AF038(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v9 = type metadata accessor for _AssistantIntent.Value(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2, v13);
  v15 = a3();
  v16 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v15);
  v17 = swift_release(KeyPath);
  v18 = a4(v17);
  _AssistantIntent.Value.init<A>(for:builder:)(v16, a5, 0, v18);
  v19 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = sub_100012E18(&qword_1005D2650);
  v21 = swift_allocObject(v20, 40, 7);
  *(_OWORD *)(v21 + 16) = xmmword_100451C20;
  *(_QWORD *)(v21 + 32) = v19;
  v22 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v21);
  return v22;
}

uint64_t sub_1001AF15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x656C746974, 0xE500000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x676E6964616568, 0xE700000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6964616568627573, 0xEA0000000000676ELL);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(2036625250, 0xE400000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C7974736F6E6F6DLL, 0xEA00000000006465);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x646574656C6C7562, 0xED00007473696C20);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C20646568736164, 0xEB00000000747369);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64657265626D756ELL, 0xED00007473696C20);
  v8 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73696C6B63656863, 0xE900000000000074);
  v9 = sub_100012E18(&qword_1005D2588);
  v10 = swift_allocObject(v9, 104, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100457CF0;
  *(_QWORD *)(v10 + 32) = v0;
  *(_QWORD *)(v10 + 40) = v1;
  *(_QWORD *)(v10 + 48) = v2;
  *(_QWORD *)(v10 + 56) = v3;
  *(_QWORD *)(v10 + 64) = v4;
  *(_QWORD *)(v10 + 72) = v5;
  *(_QWORD *)(v10 + 80) = v6;
  *(_QWORD *)(v10 + 88) = v7;
  *(_QWORD *)(v10 + 96) = v8;
  v11 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_1001AF304(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  Swift::String v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;

  v51 = sub_100012E18(&qword_1005D2658);
  v2 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2660);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100168B40();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v9._countAndFlagsBits = 0x6620686372616553;
  v9._object = (void *)0xEE0020796D20726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100457D70, v10);
  v53 = sub_100019C6C(&qword_1005D2648, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v46 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v53);
  swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5);
  swift_release(v12);
  v13._countAndFlagsBits = 0x2E65746F6E20;
  v13._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v51;
  v14(v4, v51);
  v52 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v16._countAndFlagsBits = 0xD00000000000001CLL;
  v16._object = (void *)0x800000010047D560;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v18 = swift_getKeyPath(&unk_100457D70, v17);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v53);
  swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5);
  swift_release(v19);
  v20._countAndFlagsBits = 46;
  v20._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v14(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v21._object = (void *)0x800000010047D580;
  v21._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v23 = swift_getKeyPath(&unk_100457D70, v22);
  v24 = v53;
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v23, v53);
  swift_release(v23);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5);
  swift_release(v25);
  v26._countAndFlagsBits = 46;
  v26._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v52(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v27._countAndFlagsBits = 0xD000000000000018;
  v27._object = (void *)0x800000010047D5A0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v29 = swift_getKeyPath(&unk_100457D70, v28);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v24);
  swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v5);
  swift_release(v30);
  v31._countAndFlagsBits = 46;
  v31._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v32 = v51;
  v33 = v52;
  v52(v4, v51);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v34._countAndFlagsBits = 0x20656D20776F6853;
  v34._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v36 = swift_getKeyPath(&unk_100457D70, v35);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v24);
  swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5);
  swift_release(v37);
  v38._countAndFlagsBits = 0x2E7365746F6E20;
  v38._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for ShowNotesAppSearchResultsIntent, v8);
  v33(v4, v32);
  v40 = sub_100012E18(&qword_1005D2668);
  v41 = swift_allocObject(v40, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100457CA0;
  v42 = v49;
  *(_QWORD *)(v41 + 32) = v50;
  *(_QWORD *)(v41 + 40) = v42;
  v43 = v47;
  *(_QWORD *)(v41 + 48) = v48;
  *(_QWORD *)(v41 + 56) = v43;
  *(_QWORD *)(v41 + 64) = v39;
  v44 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v41);
  return v44;
}

uint64_t sub_1001AF880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = type metadata accessor for StringSearchCriteria(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1001AF950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100457D70, v4);
  v6 = sub_100019C6C(&qword_1005D2648, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v7 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v6);
  swift_release(KeyPath);
  v8 = sub_100168B40();
  _AssistantIntent.Value.init<A>(for:builder:)(v7, sub_1001AFA78, 0, v8);
  v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v10 = sub_100012E18(&qword_1005D2650);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  *(_QWORD *)(v11 + 32) = v9;
  v12 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_1001AFA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1936158532, 0xE400000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73676E6977617264, 0xE800000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7365786174, 0xE500000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6F697461636176, 0xE800000000000000);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001AFB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  void (*v12)(char *, uint64_t);
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v0 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D2630);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2638);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1001B282C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x800000010047D4B0, &type metadata for ShowQuickNoteIntent, v11);
  v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for ShowQuickNoteIntent, v11);
  v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for ShowQuickNoteIntent, v11);
  v13._countAndFlagsBits = 0xD000000000000019;
  v13._object = (void *)0x800000010047D4D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for _AssistantIntent.PhraseToken.applicationName(_:), v0);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v3, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for ShowQuickNoteIntent, v11);
  v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for ShowQuickNoteIntent, v11);
  v12(v10, v7);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000014, 0x800000010047D4F0, &type metadata for ShowQuickNoteIntent, v11);
  v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for ShowQuickNoteIntent, v11);
  v12(v10, v7);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x800000010047D510, &type metadata for ShowQuickNoteIntent, v11);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for ShowQuickNoteIntent, v11);
  v12(v10, v7);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001ALL, 0x800000010047D540, &type metadata for ShowQuickNoteIntent, v11);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for ShowQuickNoteIntent, v11);
  v12(v10, v7);
  v19 = sub_100012E18(&qword_1005D2640);
  v20 = swift_allocObject(v19, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v20 + 32) = v24;
  *(_QWORD *)(v20 + 40) = v15;
  *(_QWORD *)(v20 + 48) = v16;
  *(_QWORD *)(v20 + 56) = v17;
  *(_QWORD *)(v20 + 64) = v18;
  v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v20);
  return v21;
}

uint64_t sub_1001AFE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  void (*v12)(char *, uint64_t);
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(char *, uint64_t);
  void (*v25)(char *);
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v0 = type metadata accessor for _AssistantIntent.PhraseToken(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D2618);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2620);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100179F54();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000014, 0x800000010047D3F0, &type metadata for StartRecordingIntent, v11);
  v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for StartRecordingIntent, v11);
  v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for StartRecordingIntent, v11);
  v13._object = (void *)0x800000010047D410;
  v13._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  v26 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  v25 = *(void (**)(char *))(v1 + 104);
  v25(v3);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v3, v4);
  v24 = *(void (**)(char *, uint64_t))(v1 + 8);
  v24(v3, v0);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for StartRecordingIntent, v11);
  v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for StartRecordingIntent, v11);
  v12(v10, v7);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002ALL, 0x800000010047D430, &type metadata for StartRecordingIntent, v11);
  v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for StartRecordingIntent, v11);
  v12(v10, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for StartRecordingIntent, v11);
  v15._countAndFlagsBits = 0xD00000000000001CLL;
  v15._object = (void *)0x800000010047D460;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  ((void (*)(char *, _QWORD, uint64_t))v25)(v3, v26, v0);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v3, v4);
  v24(v3, v0);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for StartRecordingIntent, v11);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for StartRecordingIntent, v11);
  v12(v10, v7);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x800000010047D480, &type metadata for StartRecordingIntent, v11);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v10, &type metadata for StartRecordingIntent, v11);
  v12(v10, v7);
  v19 = sub_100012E18(&qword_1005D2628);
  v20 = swift_allocObject(v19, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100457CA0;
  v21 = v28;
  *(_QWORD *)(v20 + 32) = v29;
  *(_QWORD *)(v20 + 40) = v21;
  *(_QWORD *)(v20 + 48) = v27;
  *(_QWORD *)(v20 + 56) = v17;
  *(_QWORD *)(v20 + 64) = v18;
  v22 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v20);
  return v22;
}

uint64_t sub_1001B0218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_100012E18(&qword_1005D2608);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100185F54();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001ELL, 0x800000010047D300, &type metadata for TakePhotoIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for TakePhotoIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x800000010047D320, &type metadata for TakePhotoIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for TakePhotoIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000024, 0x800000010047D350, &type metadata for TakePhotoIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for TakePhotoIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000030, 0x800000010047D380, &type metadata for TakePhotoIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for TakePhotoIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002DLL, 0x800000010047D3C0, &type metadata for TakePhotoIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for TakePhotoIntent, v4);
  v6(v3, v0);
  v11 = sub_100012E18(&qword_1005D2610);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100457CA0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_1001B0454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000002ELL, 0x800000010047D280);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000023, 0x800000010047D2B0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001ELL, 0x800000010047D2E0);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001B0518()
{
  return sub_1001B0550(0xD00000000000001FLL, 0x800000010047D240, 0xD00000000000001BLL, 0x800000010047D260);
}

uint64_t sub_1001B0550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a3, a4);
  v8 = sub_100012E18(&qword_1005D2588);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100454E90;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_1001B05D0()
{
  return sub_1001B08A0(0xD000000000000034, 0x800000010047D200);
}

uint64_t sub_1001B05EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001ELL, 0x800000010047D160);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000034, 0x800000010047D180);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000003CLL, 0x800000010047D1C0);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001B06B0()
{
  return sub_1001B08A0(0xD00000000000003DLL, 0x800000010047D120);
}

uint64_t sub_1001B06CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000002ALL, 0x800000010047D020);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x1000000000000035, 0x800000010047D050);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000046, 0x800000010047D090);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x1000000000000038, 0x800000010047D0E0);
  v4 = sub_100012E18(&qword_1005D2588);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100457CB0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1001B07C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001FLL, 0x800000010047CFB0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD00000000000001DLL, 0x800000010047CFD0);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000026, 0x800000010047CFF0);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100456A10;
  *(_QWORD *)(v4 + 32) = v0;
  *(_QWORD *)(v4 + 40) = v1;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1001B0884()
{
  return sub_1001B08A0(0xD000000000000031, 0x800000010047CF70);
}

uint64_t sub_1001B08A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(a1, a2);
  v3 = sub_100012E18(&qword_1005D2588);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100451C20;
  *(_QWORD *)(v4 + 32) = v2;
  v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v4);
  return v5;
}

ValueMetadata *type metadata accessor for NotesAssistantIntentsProvider()
{
  return &type metadata for NotesAssistantIntentsProvider;
}

uint64_t sub_1001B091C()
{
  uint64_t FolderIntent;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  void (*v8)(char *, uint64_t);
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  id v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *Tag;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;

  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  __chkstk_darwin(FolderIntent);
  v2 = (uint64_t *)((char *)&v187 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for _AssistantIntent(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v187 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003BB7BC(&Tag);
  v7 = sub_1001B2870();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100194924, 0, sub_100195124, 0, &type metadata for AddFileAttachmentIntent, v7);
  v247 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8(v6, v3);
  sub_1003C4E80((uint64_t *)&Tag);
  v9 = sub_1001B28B4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001954A4, 0, sub_100195AD4, 0, &type metadata for AddOrRemoveNoteLockIntent, v9);
  v246 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1003C4E80((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100195D78, 0, sub_100196214, 0, &type metadata for AddOrRemoveNoteLockIntent, v9);
  v245 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes09AddTagsToB6IntentVACycfC_0();
  v249 = v10;
  v250 = v11;
  v251 = v12;
  v13 = sub_10016F5D0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001964D0, 0, sub_100196C14, 0, &type metadata for AddTagsToNotesIntent, v13);
  v244 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes18AppendToNoteIntentVACycfC_0();
  v249 = v14;
  v250 = v15;
  v16 = sub_10014C588();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100196FB4, 0, sub_100197804, 0, &type metadata for AppendToNoteIntent, v16);
  v243 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_100202C34((uint64_t *)&Tag);
  v17 = sub_1001855C8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100197BD0, 0, sub_100197DD0, 0, &type metadata for ApplyFormattingIntent, v17);
  v242 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_100202C34((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100197DF8, 0, sub_100197FFC, 0, &type metadata for ApplyFormattingIntent, v17);
  v241 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_100202C34((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100198010, 0, sub_100198210, 0, &type metadata for ApplyFormattingIntent, v17);
  v240 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_100202C34((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100198224, 0, sub_100198424, 0, &type metadata for ApplyFormattingIntent, v17);
  v239 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  v249 = v18;
  v19 = sub_10001737C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019856C, 0, sub_100198714, 0, &type metadata for ChangeFolderViewSettingIntent, v19);
  v238 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  v249 = v20;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100198998, 0, sub_100198AA4, 0, &type metadata for ChangeFolderViewSettingIntent, v19);
  v237 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes29ChangeFolderViewSettingIntentVACycfC_0();
  v249 = v21;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100198C4C, 0, sub_100198DAC, 0, &type metadata for ChangeFolderViewSettingIntent, v19);
  v236 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1001D6988((uint64_t *)&Tag);
  v22 = sub_100185C94();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100198F58, 0, sub_10019973C, 0, &type metadata for ChangeTagSelectionIntent, v22);
  v235 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1001D6988((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100199994, 0, sub_100199D24, 0, &type metadata for ChangeTagSelectionIntent, v22);
  v234 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1001D6988((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_100199D50, 0, sub_10019A0D8, 0, &type metadata for ChangeTagSelectionIntent, v22);
  v233 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1001D6988((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019A104, 0, sub_10019A974, 0, &type metadata for ChangeTagSelectionIntent, v22);
  v232 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1001D6988((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019AA98, 0, sub_10019B304, 0, &type metadata for ChangeTagSelectionIntent, v22);
  v231 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v23;
  v250 = v24;
  v251 = v25;
  v26 = sub_1001B28F8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019B608, 0, sub_10019B800, 0, &type metadata for ChangeSettingIntent, v26);
  v230 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v27;
  v250 = v28;
  v251 = v29;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019B9C8, 0, sub_10019BBBC, 0, &type metadata for ChangeSettingIntent, v26);
  v229 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v30;
  v250 = v31;
  v251 = v32;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019BD50, 0, sub_10019BF48, 0, &type metadata for ChangeSettingIntent, v26);
  v228 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v33;
  v250 = v34;
  v251 = v35;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019C0F8, 0, sub_10019C2EC, 0, &type metadata for ChangeSettingIntent, v26);
  v227 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v36;
  v250 = v37;
  v251 = v38;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019C480, 0, sub_10019C628, 0, &type metadata for ChangeSettingIntent, v26);
  v226 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v39;
  v250 = v40;
  v251 = v41;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019C7DC, 0, sub_10019CA18, 0, &type metadata for ChangeSettingIntent, v26);
  v225 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v42;
  v250 = v43;
  v251 = v44;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019CBAC, 0, sub_10019CDF4, 0, &type metadata for ChangeSettingIntent, v26);
  v224 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v45;
  v250 = v46;
  v251 = v47;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019CFA4, 0, sub_10019D1EC, 0, &type metadata for ChangeSettingIntent, v26);
  v223 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v48;
  v250 = v49;
  v251 = v50;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019D39C, 0, sub_10019D5DC, 0, &type metadata for ChangeSettingIntent, v26);
  v222 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = _s11MobileNotes19ChangeSettingIntentVACycfC_0();
  v249 = v51;
  v250 = v52;
  v251 = v53;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019D78C, 0, sub_10019D9CC, 0, &type metadata for ChangeSettingIntent, v26);
  v221 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1001D25E8((uint64_t *)&Tag);
  v54 = sub_1001B26D8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019DB60, 0, sub_10019E1CC, 0, &type metadata for CreateChecklistItemIntent, v54);
  v220 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  CreateFolderIntent.init()(v2);
  v55 = sub_100019C6C(&qword_1005D6AA0, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(v2, sub_10019E4E4, 0, sub_10019ED58, 0, FolderIntent, v55);
  v219 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_10018030C((uint64_t *)&Tag);
  v56 = sub_10017C638();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019F11C, 0, sub_10019FB1C, 0, &type metadata for CreateNoteIntent, v56);
  v218 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_10035B8D4((uint64_t *)&Tag);
  v57 = sub_1001B271C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_10019FEA4, 0, sub_1001A07C8, 0, &type metadata for CreateTableIntent, v57);
  v217 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)variable initialization expression of CreateTagIntent._name();
  v58 = sub_1001B2760();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A0B14, 0, sub_1001A1078, 0, &type metadata for CreateTagIntent, v58);
  v216 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes23DeleteAttachmentsIntentVACycfC_0();
  v249 = v59;
  v250 = v60;
  v61 = sub_1001B293C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A127C, 0, sub_1001A1804, 0, &type metadata for DeleteAttachmentsIntent, v61);
  v215 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes26DeleteChecklistItemsIntentVACycfC_0();
  v249 = v62;
  v250 = v63;
  v64 = sub_100145B9C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A1934, 0, sub_1001A1EB8, 0, &type metadata for DeleteChecklistItemsIntent, v64);
  v214 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes19DeleteFoldersIntentVACycfC_0();
  v249 = v65;
  v66 = sub_1001B2980();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A1EDC, 0, sub_1001A246C, 0, &type metadata for DeleteFoldersIntent, v66);
  v213 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes06DeleteB6IntentVACycfC_0();
  v249 = v67;
  v250 = v68;
  v69 = sub_1001B29C4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A2578, 0, sub_1001A29FC, 0, &type metadata for DeleteNotesIntent, v69);
  v212 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes18DeleteTablesIntentVACycfC_0();
  v249 = v70;
  v250 = v71;
  v72 = sub_1001B2A08();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A2B0C, 0, sub_1001A308C, 0, &type metadata for DeleteTablesIntent, v72);
  v211 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes16DeleteTagsIntentVACycfC_0();
  v249 = v73;
  v250 = v74;
  v75 = sub_100019748();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A31CC, 0, sub_1001A374C, 0, &type metadata for DeleteTagsIntent, v75);
  v210 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes09GetLinkedB6IntentVACycfC_0();
  v249 = v76;
  v77 = sub_1001B2A4C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A386C, 0, sub_1001A3D10, 0, &type metadata for GetLinkedNotesIntent, v77);
  v209 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1003BD244((uint64_t)&Tag);
  v78 = sub_1001B2A90();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A3F10, 0, sub_1001A45A0, 0, &type metadata for InsertAllMentionIntent, v78);
  v208 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_100243004((uint64_t *)&Tag);
  v79 = sub_1001B27A4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A45C4, 0, sub_1001A4BD8, 0, &type metadata for InsertMentionIntent, v79);
  v207 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_100332CE4((uint64_t *)&Tag);
  v80 = sub_1001B27E8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A4F30, 0, sub_1001A5AB0, 0, &type metadata for InsertNoteLinkIntent, v80);
  v206 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1002B1158((uint64_t *)&Tag);
  v81 = sub_100019B6C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A5E5C, 0, sub_1001A677C, 0, &type metadata for MoveNotesToFolderIntent, v81);
  v205 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes17OpenAccountIntentVACycfC_0();
  v249 = v82;
  v250 = v83;
  v84 = sub_1000191E4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A6B10, 0, sub_1001A7058, 0, &type metadata for OpenAccountIntent, v84);
  v204 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes20OpenAttachmentIntentVACycfC_0();
  v249 = v85;
  v250 = v86;
  v87 = sub_100185970();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A7260, 0, sub_1001A7648, 0, &type metadata for OpenAttachmentIntent, v87);
  v203 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes23OpenChecklistItemIntentVACycfC_0();
  v249 = v88;
  v250 = v89;
  v90 = sub_100185A18();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A7858, 0, sub_1001A7D0C, 0, &type metadata for OpenChecklistItemIntent, v90);
  v202 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes16OpenFolderIntentVACycfC_0();
  v249 = v91;
  v250 = v92;
  v93 = sub_1000192D4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A7F5C, 0, sub_1001A8668, 0, &type metadata for OpenFolderIntent, v93);
  v201 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes14OpenNoteIntentVACycfC_0();
  v249 = v94;
  v250 = v95;
  v96 = sub_100019838();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A88A4, 0, sub_1001A8D38, 0, &type metadata for OpenNoteIntent, v96);
  v200 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes04OpenB10ViewIntentVACycfC_0();
  v249 = v97;
  v98 = sub_100019A7C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A8F24, 0, sub_1001A9160, 0, &type metadata for OpenNotesViewIntent, v98);
  v199 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes04OpenB10ViewIntentVACycfC_0();
  v249 = v99;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A91A0, 0, sub_1001A93E0, 0, &type metadata for OpenNotesViewIntent, v98);
  v198 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes24OpenTopLevelFolderIntentVACycfC_0();
  v249 = v100;
  v101 = sub_100185864();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A9420, 0, sub_1001A9660, 0, &type metadata for OpenTopLevelFolderIntent, v101);
  v197 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes24OpenTopLevelFolderIntentVACycfC_0();
  v249 = v102;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A96A0, 0, sub_1001A98E0, 0, &type metadata for OpenTopLevelFolderIntent, v101);
  v196 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes15OpenTableIntentVACycfC_0();
  v249 = v103;
  v250 = v104;
  v105 = sub_100185B88();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A9928, 0, sub_1001A9CFC, 0, &type metadata for OpenTableIntent, v105);
  v195 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes13OpenTagIntentVACycfC_0();
  v249 = v106;
  v107 = sub_100019928();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001A9E24, 0, sub_1001AA3A8, 0, &type metadata for OpenTagIntent, v107);
  v194 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes03PinB6IntentVACycfC_0();
  v249 = v108;
  v250 = v109;
  v251 = v110;
  v111 = sub_1001B2AD4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AA5D0, 0, sub_1001AABC0, 0, &type metadata for PinNotesIntent, v111);
  v193 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes03PinB6IntentVACycfC_0();
  v249 = v112;
  v250 = v113;
  v251 = v114;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AAF38, 0, sub_1001AB200, 0, &type metadata for PinNotesIntent, v111);
  v192 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes014RemoveTagsFromB6IntentVACycfC_0();
  v249 = v115;
  v250 = v116;
  v251 = v117;
  v118 = sub_100130160();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AB3B0, 0, sub_1001ABB38, 0, &type metadata for RemoveTagsFromNotesIntent, v118);
  v191 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes18RenameFolderIntentVACycfC_0();
  v249 = v119;
  v250 = v120;
  v251 = v121;
  v122 = sub_1001B2B18();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001ABEA8, 0, sub_1001AC620, 0, &type metadata for RenameFolderIntent, v122);
  v190 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes22ReplaceSelectionIntentVACycfC_0();
  v249 = v123;
  v250 = v124;
  v125 = sub_1001B2B5C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AC9F0, 0, sub_1001AD040, 0, &type metadata for ReplaceSelectionIntent, v125);
  v189 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes20StartRecordingIntentVACycfC_0();
  v249 = v126;
  v127 = sub_100185DE4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AD280, 0, &j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for ScanDocumentIntent, v127);
  v188 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes23SetAttachmentSizeIntentVACycfC_0();
  v249 = v128;
  v250 = v129;
  v251 = v130;
  v131 = sub_1001B2BA0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AD63C, 0, sub_1001ADC10, 0, &type metadata for SetAttachmentSizeIntent, v131);
  v187 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1003E68E0((uint64_t *)&Tag);
  v132 = sub_1001B2BE4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001ADF24, 0, sub_1001AE2D4, 0, &type metadata for SetChecklistItemsCheckedIntent, v132);
  v133 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  sub_1003E68E0((uint64_t *)&Tag);
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AE580, 0, sub_1001AE930, 0, &type metadata for SetChecklistItemsCheckedIntent, v132);
  v134 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes23SetParagraphStyleIntentVACycfC_0();
  v249 = v135;
  v250 = v136;
  v137 = sub_1001B2C28();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AEAC4, 0, sub_1001AF014, 0, &type metadata for SetParagraphStyleIntent, v137);
  v138 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)sub_100168D50();
  v139 = sub_100168B40();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AF304, 0, sub_1001AF950, 0, &type metadata for ShowNotesAppSearchResultsIntent, v139);
  v140 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  v141 = objc_msgSend((id)objc_opt_self(FBSDisplayLayoutMonitorConfiguration), "configurationForDefaultMainDisplayMonitor");
  v142 = objc_msgSend((id)objc_opt_self(FBSDisplayLayoutMonitor), "monitorWithConfiguration:", v141);

  v143 = type metadata accessor for ShowQuickNoteIntent.LayoutMonitorBox();
  v144 = swift_allocObject(v143, 24, 7);
  *(_QWORD *)(v144 + 16) = v142;
  Tag = (char *)v144;
  v145 = sub_1001B282C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AFB48, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for ShowQuickNoteIntent, v145);
  v146 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes20StartRecordingIntentVACycfC_0();
  v249 = v147;
  v148 = sub_100179F54();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001AFE74, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for StartRecordingIntent, v148);
  v149 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  Tag = (char *)_s11MobileNotes20StartRecordingIntentVACycfC_0();
  v249 = v150;
  v151 = sub_100185F54();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&Tag, sub_1001B0218, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for TakePhotoIntent, v151);
  v152 = static _AssistantIntent.Builder.buildExpression(_:)(v6);
  v8(v6, v3);
  v153 = sub_100012E18(&qword_1005D2600);
  v154 = swift_allocObject(v153, 576, 7);
  v155 = v246;
  *(_QWORD *)(v154 + 32) = v247;
  *(_QWORD *)(v154 + 40) = v155;
  v156 = v244;
  *(_QWORD *)(v154 + 48) = v245;
  *(_QWORD *)(v154 + 56) = v156;
  v157 = v242;
  *(_QWORD *)(v154 + 64) = v243;
  *(_QWORD *)(v154 + 72) = v157;
  v158 = v240;
  *(_QWORD *)(v154 + 80) = v241;
  *(_QWORD *)(v154 + 88) = v158;
  v159 = v238;
  *(_QWORD *)(v154 + 96) = v239;
  *(_QWORD *)(v154 + 104) = v159;
  v160 = v236;
  *(_QWORD *)(v154 + 112) = v237;
  *(_QWORD *)(v154 + 120) = v160;
  v161 = v234;
  *(_QWORD *)(v154 + 128) = v235;
  *(_QWORD *)(v154 + 136) = v161;
  v162 = v232;
  *(_QWORD *)(v154 + 144) = v233;
  *(_QWORD *)(v154 + 152) = v162;
  v163 = v230;
  *(_QWORD *)(v154 + 160) = v231;
  *(_QWORD *)(v154 + 168) = v163;
  v164 = v228;
  *(_QWORD *)(v154 + 176) = v229;
  *(_QWORD *)(v154 + 184) = v164;
  v165 = v226;
  *(_QWORD *)(v154 + 192) = v227;
  *(_QWORD *)(v154 + 200) = v165;
  v166 = v224;
  *(_QWORD *)(v154 + 208) = v225;
  *(_QWORD *)(v154 + 216) = v166;
  v167 = v222;
  *(_QWORD *)(v154 + 224) = v223;
  *(_QWORD *)(v154 + 232) = v167;
  v168 = v220;
  *(_QWORD *)(v154 + 240) = v221;
  *(_QWORD *)(v154 + 248) = v168;
  v169 = v218;
  *(_QWORD *)(v154 + 256) = v219;
  *(_QWORD *)(v154 + 264) = v169;
  v170 = v216;
  *(_QWORD *)(v154 + 272) = v217;
  *(_QWORD *)(v154 + 280) = v170;
  v171 = v214;
  *(_QWORD *)(v154 + 288) = v215;
  *(_QWORD *)(v154 + 296) = v171;
  v172 = v212;
  *(_QWORD *)(v154 + 304) = v213;
  *(_QWORD *)(v154 + 312) = v172;
  v173 = v210;
  *(_QWORD *)(v154 + 320) = v211;
  *(_QWORD *)(v154 + 328) = v173;
  v174 = v208;
  *(_QWORD *)(v154 + 336) = v209;
  *(_QWORD *)(v154 + 344) = v174;
  *(_OWORD *)(v154 + 16) = xmmword_100457D00;
  v175 = v206;
  *(_QWORD *)(v154 + 352) = v207;
  *(_QWORD *)(v154 + 360) = v175;
  v176 = v204;
  *(_QWORD *)(v154 + 368) = v205;
  *(_QWORD *)(v154 + 376) = v176;
  v177 = v202;
  *(_QWORD *)(v154 + 384) = v203;
  *(_QWORD *)(v154 + 392) = v177;
  v178 = v200;
  *(_QWORD *)(v154 + 400) = v201;
  *(_QWORD *)(v154 + 408) = v178;
  v179 = v198;
  *(_QWORD *)(v154 + 416) = v199;
  *(_QWORD *)(v154 + 424) = v179;
  v180 = v196;
  *(_QWORD *)(v154 + 432) = v197;
  *(_QWORD *)(v154 + 440) = v180;
  v181 = v194;
  *(_QWORD *)(v154 + 448) = v195;
  *(_QWORD *)(v154 + 456) = v181;
  v182 = v192;
  *(_QWORD *)(v154 + 464) = v193;
  *(_QWORD *)(v154 + 472) = v182;
  v183 = v190;
  *(_QWORD *)(v154 + 480) = v191;
  *(_QWORD *)(v154 + 488) = v183;
  v184 = v188;
  *(_QWORD *)(v154 + 496) = v189;
  *(_QWORD *)(v154 + 504) = v184;
  *(_QWORD *)(v154 + 512) = v187;
  *(_QWORD *)(v154 + 520) = v133;
  *(_QWORD *)(v154 + 528) = v134;
  *(_QWORD *)(v154 + 536) = v138;
  *(_QWORD *)(v154 + 544) = v140;
  *(_QWORD *)(v154 + 552) = v146;
  *(_QWORD *)(v154 + 560) = v149;
  *(_QWORD *)(v154 + 568) = v152;
  v185 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease(v154);
  return v185;
}

uint64_t sub_1001B23EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t FolderIntent;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001B26D8();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for CreateChecklistItemIntent, sub_1001B0454, 0, &type metadata for CreateChecklistItemIntent, v4);
  v26 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  FolderIntent = type metadata accessor for CreateFolderIntent(0);
  v7 = sub_100019C6C(&qword_1005D6AA0, type metadata accessor for CreateFolderIntent, (uint64_t)&protocol conformance descriptor for CreateFolderIntent);
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(FolderIntent, sub_1001B0518, 0, FolderIntent, v7);
  v8 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5(v3, v0);
  v9 = sub_10017C638();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for CreateNoteIntent, sub_1001B05D0, 0, &type metadata for CreateNoteIntent, v9);
  v10 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5(v3, v0);
  v11 = sub_1001B271C();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for CreateTableIntent, sub_1001B05EC, 0, &type metadata for CreateTableIntent, v11);
  v12 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5(v3, v0);
  v13 = sub_1001B2760();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for CreateTagIntent, sub_1001B06B0, 0, &type metadata for CreateTagIntent, v13);
  v14 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5(v3, v0);
  v15 = sub_1001B27A4();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for InsertMentionIntent, sub_1001B06CC, 0, &type metadata for InsertMentionIntent, v15);
  v16 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5(v3, v0);
  v17 = sub_1001B27E8();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for InsertNoteLinkIntent, sub_1001B07C0, 0, &type metadata for InsertNoteLinkIntent, v17);
  v18 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5(v3, v0);
  v19 = sub_1001B282C();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)(&type metadata for ShowQuickNoteIntent, sub_1001B0884, 0, &type metadata for ShowQuickNoteIntent, v19);
  v20 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)(v3);
  v5(v3, v0);
  v21 = sub_100012E18(&qword_1005D2580);
  v22 = swift_allocObject(v21, 96, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100457CE0;
  *(_QWORD *)(v22 + 32) = v26;
  *(_QWORD *)(v22 + 40) = v8;
  *(_QWORD *)(v22 + 48) = v10;
  *(_QWORD *)(v22 + 56) = v12;
  *(_QWORD *)(v22 + 64) = v14;
  *(_QWORD *)(v22 + 72) = v16;
  *(_QWORD *)(v22 + 80) = v18;
  *(_QWORD *)(v22 + 88) = v20;
  v23 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v22);
  return v23;
}

unint64_t sub_1001B26D8()
{
  unint64_t result;

  result = qword_1005D2550;
  if (!qword_1005D2550)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateChecklistItemIntent, &type metadata for CreateChecklistItemIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2550);
  }
  return result;
}

unint64_t sub_1001B271C()
{
  unint64_t result;

  result = qword_1005D2558;
  if (!qword_1005D2558)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateTableIntent, &type metadata for CreateTableIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2558);
  }
  return result;
}

unint64_t sub_1001B2760()
{
  unint64_t result;

  result = qword_1005D2560;
  if (!qword_1005D2560)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateTagIntent, &type metadata for CreateTagIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2560);
  }
  return result;
}

unint64_t sub_1001B27A4()
{
  unint64_t result;

  result = qword_1005D2568;
  if (!qword_1005D2568)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InsertMentionIntent, &type metadata for InsertMentionIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2568);
  }
  return result;
}

unint64_t sub_1001B27E8()
{
  unint64_t result;

  result = qword_1005D2570;
  if (!qword_1005D2570)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InsertNoteLinkIntent, &type metadata for InsertNoteLinkIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2570);
  }
  return result;
}

unint64_t sub_1001B282C()
{
  unint64_t result;

  result = qword_1005D2578;
  if (!qword_1005D2578)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ShowQuickNoteIntent, &type metadata for ShowQuickNoteIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2578);
  }
  return result;
}

unint64_t sub_1001B2870()
{
  unint64_t result;

  result = qword_1005D2590;
  if (!qword_1005D2590)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddFileAttachmentIntent, &type metadata for AddFileAttachmentIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2590);
  }
  return result;
}

unint64_t sub_1001B28B4()
{
  unint64_t result;

  result = qword_1005D2598;
  if (!qword_1005D2598)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddOrRemoveNoteLockIntent, &type metadata for AddOrRemoveNoteLockIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2598);
  }
  return result;
}

unint64_t sub_1001B28F8()
{
  unint64_t result;

  result = qword_1005D25A0;
  if (!qword_1005D25A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeSettingIntent, &type metadata for ChangeSettingIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25A0);
  }
  return result;
}

unint64_t sub_1001B293C()
{
  unint64_t result;

  result = qword_1005D25A8;
  if (!qword_1005D25A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteAttachmentsIntent, &type metadata for DeleteAttachmentsIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25A8);
  }
  return result;
}

unint64_t sub_1001B2980()
{
  unint64_t result;

  result = qword_1005D25B0;
  if (!qword_1005D25B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteFoldersIntent, &type metadata for DeleteFoldersIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25B0);
  }
  return result;
}

unint64_t sub_1001B29C4()
{
  unint64_t result;

  result = qword_1005D25B8;
  if (!qword_1005D25B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteNotesIntent, &type metadata for DeleteNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25B8);
  }
  return result;
}

unint64_t sub_1001B2A08()
{
  unint64_t result;

  result = qword_1005D25C0;
  if (!qword_1005D25C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DeleteTablesIntent, &type metadata for DeleteTablesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25C0);
  }
  return result;
}

unint64_t sub_1001B2A4C()
{
  unint64_t result;

  result = qword_1005D25C8;
  if (!qword_1005D25C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for GetLinkedNotesIntent, &type metadata for GetLinkedNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25C8);
  }
  return result;
}

unint64_t sub_1001B2A90()
{
  unint64_t result;

  result = qword_1005D25D0;
  if (!qword_1005D25D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for InsertAllMentionIntent, &type metadata for InsertAllMentionIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25D0);
  }
  return result;
}

unint64_t sub_1001B2AD4()
{
  unint64_t result;

  result = qword_1005D25D8;
  if (!qword_1005D25D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PinNotesIntent, &type metadata for PinNotesIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25D8);
  }
  return result;
}

unint64_t sub_1001B2B18()
{
  unint64_t result;

  result = qword_1005D25E0;
  if (!qword_1005D25E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for RenameFolderIntent, &type metadata for RenameFolderIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25E0);
  }
  return result;
}

unint64_t sub_1001B2B5C()
{
  unint64_t result;

  result = qword_1005D25E8;
  if (!qword_1005D25E8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ReplaceSelectionIntent, &type metadata for ReplaceSelectionIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25E8);
  }
  return result;
}

unint64_t sub_1001B2BA0()
{
  unint64_t result;

  result = qword_1005D25F0;
  if (!qword_1005D25F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetAttachmentSizeIntent, &type metadata for SetAttachmentSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25F0);
  }
  return result;
}

unint64_t sub_1001B2BE4()
{
  unint64_t result;

  result = qword_1005DCFA0;
  if (!qword_1005DCFA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntent, &type metadata for SetChecklistItemsCheckedIntent);
    atomic_store(result, (unint64_t *)&qword_1005DCFA0);
  }
  return result;
}

unint64_t sub_1001B2C28()
{
  unint64_t result;

  result = qword_1005D25F8;
  if (!qword_1005D25F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetParagraphStyleIntent, &type metadata for SetParagraphStyleIntent);
    atomic_store(result, (unint64_t *)&qword_1005D25F8);
  }
  return result;
}

_QWORD *sub_1001B2C6C@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_1001B2C90@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B2CC8(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B2CFC()
{
  unint64_t result;

  result = qword_1005D2670;
  if (!qword_1005D2670)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ParagraphStyle, &type metadata for ParagraphStyle);
    atomic_store(result, (unint64_t *)&qword_1005D2670);
  }
  return result;
}

unint64_t sub_1001B2D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2690;
  if (!qword_1005D2690)
  {
    v1 = sub_10001537C(qword_1005D8C10);
    sub_100019C6C(&qword_1005D8C00, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D2690);
  }
  return result;
}

_QWORD *sub_1001B2DC4@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B2DFC(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B2E30()
{
  unint64_t result;

  result = qword_1005D2698;
  if (!qword_1005D2698)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SetChecklistItemsCheckedIntent.CheckedChangeOperationType, &type metadata for SetChecklistItemsCheckedIntent.CheckedChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D2698);
  }
  return result;
}

_QWORD *sub_1001B2E74@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1001B2E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for AttachmentEntity);
}

unint64_t sub_1001B2EB8()
{
  unint64_t result;

  result = qword_1005D9310;
  if (!qword_1005D9310)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttachmentViewSize, &type metadata for AttachmentViewSize);
    atomic_store(result, (unint64_t *)&qword_1005D9310);
  }
  return result;
}

_QWORD *sub_1001B2EFC@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1001B2F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for FolderEntity);
}

_QWORD *sub_1001B2F3C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;
  _QWORD v4[2];

  result = IntentParameter.wrappedValue.getter(v4);
  v3 = v4[1];
  *a1 = v4[0];
  a1[1] = v3;
  return result;
}

uint64_t sub_1001B2F74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

unint64_t sub_1001B2FAC()
{
  unint64_t result;

  result = qword_1005D2708;
  if (!qword_1005D2708)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005D2708);
  }
  return result;
}

unint64_t sub_1001B2FF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2728;
  if (!qword_1005D2728)
  {
    v1 = sub_10001537C(&qword_1005D00D0);
    sub_100019C6C(&qword_1005D3E20, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D2728);
  }
  return result;
}

uint64_t sub_1001B3080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AAE68(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for FavoriteOperation);
}

uint64_t sub_1001B309C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for TagEntity);
}

uint64_t sub_1001B30B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for TableEntity);
}

_QWORD *sub_1001B30D4@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B310C(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B3140()
{
  unint64_t result;

  result = qword_1005D2798;
  if (!qword_1005D2798)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D2798);
  }
  return result;
}

_QWORD *sub_1001B3184@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B31BC(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B31F0()
{
  unint64_t result;

  result = qword_1005D27B0;
  if (!qword_1005D27B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesView, &type metadata for NotesView);
    atomic_store(result, (unint64_t *)&qword_1005D27B0);
  }
  return result;
}

uint64_t sub_1001B3234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for NoteEntity);
}

uint64_t sub_1001B3250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for FolderEntity);
}

uint64_t sub_1001B326C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_1001B3288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for AttachmentEntity);
}

uint64_t sub_1001B32A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for AccountEntity);
}

_QWORD *sub_1001B32CC@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

unint64_t sub_1001B32F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2858;
  if (!qword_1005D2858)
  {
    v1 = sub_10001537C((uint64_t *)&unk_1005D0B60);
    sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D2858);
  }
  return result;
}

_QWORD *sub_1001B336C@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_1001B3390@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;
  _QWORD v4[2];

  result = IntentParameter.wrappedValue.getter(v4);
  v3 = v4[1];
  *a1 = v4[0];
  a1[1] = v3;
  return result;
}

uint64_t sub_1001B33C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

_QWORD *sub_1001B3400@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_1001B3424@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

_QWORD *sub_1001B3448@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1001B3468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for NoteEntity);
}

_QWORD *sub_1001B3484@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B34BC(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B34FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D28D8;
  if (!qword_1005D28D8)
  {
    v1 = sub_10001537C(&qword_1005D28E0);
    sub_100019C6C(&qword_1005D10E8, type metadata accessor for TableEntity, (uint64_t)&protocol conformance descriptor for TableEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D28D8);
  }
  return result;
}

_QWORD *sub_1001B3580@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B35B8(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B35F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2918;
  if (!qword_1005D2918)
  {
    v1 = sub_10001537C(qword_1005D0548);
    sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D2918);
  }
  return result;
}

_QWORD *sub_1001B3678@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B36B4(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B36EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2950;
  if (!qword_1005D2950)
  {
    v1 = sub_10001537C(qword_1005D5360);
    sub_100019C6C(&qword_1005D2BD0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D2950);
  }
  return result;
}

double sub_1001B3768@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  IntentParameter.wrappedValue.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001B37A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

uint64_t sub_1001B37D8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10001537C(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1001B383C@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1001B385C(uint64_t a1)
{
  return sub_1001A0704(a1);
}

double sub_1001B3870@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  IntentParameter.wrappedValue.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001B38A8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

double sub_1001B38E0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  IntentParameter.wrappedValue.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3918(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

_QWORD *sub_1001B3950@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

unint64_t sub_1001B3974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3F30;
  if (!qword_1005D3F30)
  {
    v1 = sub_10001537C(&qword_1005D1EB0);
    sub_100019C6C((unint64_t *)&unk_1005D6AE0, type metadata accessor for FolderEntity, (uint64_t)&protocol conformance descriptor for FolderEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3F30);
  }
  return result;
}

double sub_1001B39F0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  IntentParameter.wrappedValue.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3A28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

_QWORD *sub_1001B3A60@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

double sub_1001B3A84@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  IntentParameter.wrappedValue.getter(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3ABC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a1;
  v1 = a1[1];
  v4[0] = v2;
  v4[1] = v1;
  swift_bridgeObjectRetain(v1);
  return IntentParameter.wrappedValue.setter(v4);
}

_QWORD *sub_1001B3AF8@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3B34(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B3B68()
{
  unint64_t result;

  result = qword_1005D29F8;
  if (!qword_1005D29F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NotesSetting, &type metadata for NotesSetting);
    atomic_store(result, (unint64_t *)&qword_1005D29F8);
  }
  return result;
}

uint64_t sub_1001B3BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AAE68(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ChangeOperation);
}

_QWORD *sub_1001B3BC8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3C00(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_1001B3C3C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3C78(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_1001B3CB0@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3CE8(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B3D1C()
{
  unint64_t result;

  result = qword_1005D2A18;
  if (!qword_1005D2A18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D2A18);
  }
  return result;
}

_QWORD *sub_1001B3D60@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3D98(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_1001B3DD0@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3E08(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_1001B3E3C()
{
  unint64_t result;

  result = qword_1005D2A58;
  if (!qword_1005D2A58)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ApplyFormattingIntent.ChangeOperationType, &type metadata for ApplyFormattingIntent.ChangeOperationType);
    atomic_store(result, (unint64_t *)&qword_1005D2A58);
  }
  return result;
}

_QWORD *sub_1001B3E80@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3EB8(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_1001B3EEC@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3F24(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_1001B3F58@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B3F90(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_1001B3FC4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_1001B3FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A6F98(a1, a2, a3, a4, type metadata accessor for NoteEntity);
}

_QWORD *sub_1001B400C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001B4048(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_bridgeObjectRetain(v2);
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_1001B4080@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

unint64_t sub_1001B40AC()
{
  unint64_t result;

  result = qword_1005D3960;
  if (!qword_1005D3960)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AddOrRemoveNoteLockIntent.LockOperation, &type metadata for AddOrRemoveNoteLockIntent.LockOperation);
    atomic_store(result, (unint64_t *)&qword_1005D3960);
  }
  return result;
}

uint64_t sub_1001B40F0(uint64_t a1)
{
  return sub_1001A0704(a1);
}

_QWORD *sub_1001B4104@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

unint64_t sub_1001B4128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2AB8;
  if (!qword_1005D2AB8)
  {
    v1 = sub_10001537C(&qword_1005CF1F8);
    sub_100019C6C(&qword_1005D2AC0, (uint64_t (*)(uint64_t))&type metadata accessor for IntentFile, (uint64_t)&protocol conformance descriptor for IntentFile);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D2AB8);
  }
  return result;
}

uint64_t sub_1001B41F8()
{
  uint64_t result;
  uint64_t v1;
  char v2;

  result = _s11MobileNotes23VisibleAttachmentsQueryVACycfC_0();
  static AttachmentEntity.defaultQuery = result;
  unk_100601740 = v1;
  byte_100601748 = v2 & 1;
  return result;
}

uint64_t *AttachmentEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_1005CEA18 != -1)
    swift_once(&qword_1005CEA18, sub_1001B41F8);
  return &static AttachmentEntity.defaultQuery;
}

uint64_t static AttachmentEntity.defaultQuery.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (qword_1005CEA18 != -1)
    swift_once(&qword_1005CEA18, sub_1001B41F8);
  v0 = static AttachmentEntity.defaultQuery;
  v1 = unk_100601740;
  swift_retain(static AttachmentEntity.defaultQuery);
  swift_retain(v1);
  return v0;
}

uint64_t sub_1001B42D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static AttachmentEntity.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static AttachmentEntity.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x656D686361747441, 0xEA0000000000746ELL);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "App entity name", 15, 2);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x80000001004806D0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v2, 0, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t AttachmentEntity.typeDisplayRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEA20 != -1)
    swift_once(&qword_1005CEA20, sub_1001B42D4);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10012A0B0(v0, (uint64_t)static AttachmentEntity.typeDisplayRepresentation);
}

uint64_t static AttachmentEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA20 != -1)
    swift_once(&qword_1005CEA20, sub_1001B42D4);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static AttachmentEntity.typeDisplayRepresentation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t AttachmentEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AttachmentID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AttachmentEntity.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AttachmentID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t AttachmentEntity.managedObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AttachmentEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for AttachmentEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D2CC0;
  if (!qword_1005D2CC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AttachmentEntity);
  return result;
}

uint64_t AttachmentEntity.managedObjectURI.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for AttachmentEntity(0) + 20);
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*AttachmentEntity.managedObjectURI.modify())()
{
  type metadata accessor for AttachmentEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t AttachmentEntity.typeUTI.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for AttachmentEntity(0) + 24));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t AttachmentEntity.typeUTI.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AttachmentEntity(0) + 24));
  result = swift_bridgeObjectRelease(v5[1]);
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AttachmentEntity.typeUTI.modify())()
{
  type metadata accessor for AttachmentEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t AttachmentEntity.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AttachmentEntity(0);
  return sub_100012CE8(v1 + *(int *)(v3 + 28), a1, &qword_1005CEFD0);
}

uint64_t AttachmentEntity.fileURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AttachmentEntity(0) + 28);
  return sub_1001B4838(a1, v3);
}

uint64_t sub_1001B4838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005CEFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AttachmentEntity.fileURL.modify())()
{
  type metadata accessor for AttachmentEntity(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t AttachmentEntity.title.getter()
{
  uint64_t v1;

  type metadata accessor for AttachmentEntity(0);
  EntityProperty.wrappedValue.getter(&v1);
  return v1;
}

uint64_t AttachmentEntity.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD v5[2];

  type metadata accessor for AttachmentEntity(0);
  v5[0] = a1;
  v5[1] = a2;
  return EntityProperty.wrappedValue.setter(v5);
}

void (*AttachmentEntity.title.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for AttachmentEntity(0);
  v2[4] = EntityProperty.wrappedValue.modify(v2);
  return sub_10012A894;
}

uint64_t AttachmentEntity.$title.getter()
{
  type metadata accessor for AttachmentEntity(0);
  return EntityProperty.projectedValue.getter();
}

uint64_t AttachmentEntity.subtitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_100012E18(&qword_1005D2AE8);
  __chkstk_darwin(v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t *)(v0 + *(int *)(type metadata accessor for AttachmentEntity(0) + 24));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = swift_bridgeObjectRetain(v4[1]);
    UTType.init(_:)(v6, v5, v7);
    v8 = type metadata accessor for UTType(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
    {
      sub_100012DDC((uint64_t)v3, &qword_1005D2AE8);
LABEL_5:
      swift_bridgeObjectRelease(0);
      return 0;
    }
    v5 = UTType.localizedDescription.getter();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
    if (!v11)
      goto LABEL_5;
  }
  return v5;
}

uint64_t sub_1001B4AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (qword_1005CEA18 != -1)
    swift_once(&qword_1005CEA18, sub_1001B41F8);
  v2 = static AttachmentEntity.defaultQuery;
  v3 = unk_100601740;
  v4 = byte_100601748;
  *(_QWORD *)a1 = static AttachmentEntity.defaultQuery;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  swift_retain(v2);
  return swift_retain(v3);
}

uint64_t sub_1001B4B2C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C((unint64_t *)&qword_1005D2C60, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t AttachmentEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  Swift::String v17;
  void *object;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  Swift::String v23;
  uint64_t v24;
  _QWORD v26[2];
  Swift::String v27;

  v26[1] = a1;
  v1 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v1);
  v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue.StringInterpolation(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v26 - v15;
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
  type metadata accessor for AttachmentEntity(0);
  EntityProperty.wrappedValue.getter(&v27);
  object = v27._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v27);
  swift_bridgeObjectRelease(object);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
  LocalizedStringResource.init(stringInterpolation:)(v16);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(0, 1);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v20);
  v21._countAndFlagsBits = AttachmentEntity.subtitle.getter();
  v22 = v21._object;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v21);
  swift_bridgeObjectRelease(v22);
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  LocalizedStringResource.init(stringInterpolation:)(v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v24 = type metadata accessor for DisplayRepresentation.Image(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v3, 1, 1, v24);
  return DisplayRepresentation.init(title:subtitle:image:)(v10, v6, v3);
}

uint64_t sub_1001B4DCC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100019C6C(&qword_1005D2BF0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t static AttachmentEntity.transferRepresentation.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for UTType(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2AF0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter(v5);
  v8 = type metadata accessor for AttachmentEntity(0);
  v9 = sub_100019C6C(&qword_1005D2B00, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  FileRepresentation.init(exportedContentType:shouldAllowToOpenInPlace:exporting:)(v2, 0, &unk_1005D2AF8, 0, v8, v9);
  v10 = sub_100016638(&qword_1005D2B08, &qword_1005D2AF0, (uint64_t)&protocol conformance descriptor for FileRepresentation<A>);
  TransferRepresentation.exportingCondition(_:)(sub_1001B5058, 0, v3, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1001B4F64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_100012E18(&qword_1005CEFD0);
  v2[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B4FC0, 0, 0);
}

uint64_t sub_1001B4FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = type metadata accessor for AttachmentEntity(0);
  sub_100012CE8(v1 + *(int *)(v3 + 28), v2, &qword_1005CEFD0);
  v4 = type metadata accessor for URL(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 32);
    SentTransferredFile.init(_:allowAccessingOriginalFile:)(v6, 0);
    swift_task_dealloc(v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

BOOL sub_1001B5058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v2 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttachmentEntity(0);
  sub_100012CE8(a1 + *(int *)(v5 + 28), (uint64_t)v4, &qword_1005CEFD0);
  v6 = type metadata accessor for URL(0);
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_100012DDC((uint64_t)v4, &qword_1005CEFD0);
  return v7;
}

uint64_t sub_1001B5110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v4 = type metadata accessor for UTType(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2AF0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter(v9);
  FileRepresentation.init(exportedContentType:shouldAllowToOpenInPlace:exporting:)(v6, 0, &unk_1005D2AF8, 0, a1, a2);
  v12 = sub_100016638(&qword_1005D2B08, &qword_1005D2AF0, (uint64_t)&protocol conformance descriptor for FileRepresentation<A>);
  TransferRepresentation.exportingCondition(_:)(sub_1001B5058, 0, v7, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1001B523C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t *v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD v72[3];

  v66 = a1;
  v3 = sub_100012E18(&qword_1005CEFD0);
  v4 = __chkstk_darwin(v3);
  v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v64 = (char *)&v61 - v7;
  __chkstk_darwin(v6);
  v63 = (char *)&v61 - v8;
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)type metadata accessor for AttachmentEntity(0);
  v23 = (uint64_t *)(a2 + v22[6]);
  *v23 = 0;
  v23[1] = 0;
  v67 = v23;
  v24 = a2 + v22[7];
  v25 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
  v69 = v25;
  v70 = v24;
  v68 = v26;
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v24, 1, 1);
  v27 = v22[8];
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v28 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v28);
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v30 = v66;
  v29(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter title for Find Attachments intent", 43, 2);
  v31 = EntityProperty<>.init(title:)(v21);
  v65 = v27;
  *(_QWORD *)(a2 + v27) = v31;
  sub_1001B5B48(v30);
  v32 = objc_msgSend(v30, "objectID");
  v33 = objc_msgSend(v32, "URIRepresentation");

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v34 = objc_msgSend(v30, "title");
  if (v34)
  {
    v35 = v34;
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v38 = v37;

    v40 = v68;
    v39 = v69;
  }
  else
  {
    v42 = v62;
    v41 = (uint64_t)v63;
    v43 = (uint64_t)v64;
    v44 = objc_msgSend(v30, "fileURL");
    if (v44)
    {
      v45 = v44;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v44);

      v46 = 0;
    }
    else
    {
      v46 = 1;
    }
    v40 = v68;
    v39 = v69;
    v47 = v41;
    v68(v43, v46, 1, v69);
    sub_100157FAC(v43, v41);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v41, 1, v39);
    if ((_DWORD)v48 == 1)
    {
      sub_100012DDC(v41, &qword_1005CEFD0);
      v36 = 0;
      v38 = 0xE000000000000000;
    }
    else
    {
      v36 = URL.lastPathComponent.getter(v48);
      v38 = v49;
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v47, v39);
    }
  }
  v72[0] = v36;
  v72[1] = v38;
  EntityProperty.wrappedValue.setter(v72);
  v50 = objc_msgSend(v30, "typeUTI");
  if (v50)
  {
    v51 = v50;
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v54 = v53;

  }
  else
  {
    v52 = 0;
    v54 = 0;
  }
  v55 = v67;
  swift_bridgeObjectRelease(v67[1]);
  *v55 = v52;
  v55[1] = v54;
  v56 = objc_msgSend(v30, "fileURL");
  if (v56)
  {
    v57 = v56;
    v58 = (uint64_t)v71;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v56);

    v59 = 0;
  }
  else
  {
    v59 = 1;
    v58 = (uint64_t)v71;
  }

  v40(v58, v59, 1, v39);
  return sub_1001B4838(v58, v70);
}

uint64_t AttachmentEntity.init<A>(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t *v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _QWORD v72[3];

  v66 = a1;
  v3 = sub_100012E18(&qword_1005CEFD0);
  v4 = __chkstk_darwin(v3);
  v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v64 = (char *)&v61 - v7;
  __chkstk_darwin(v6);
  v63 = (char *)&v61 - v8;
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)type metadata accessor for AttachmentEntity(0);
  v23 = (uint64_t *)(a2 + v22[6]);
  *v23 = 0;
  v23[1] = 0;
  v67 = v23;
  v24 = a2 + v22[7];
  v25 = type metadata accessor for URL(0);
  v62 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
  v69 = v25;
  v70 = v24;
  v68 = v26;
  ((void (*)(uint64_t, uint64_t, uint64_t))v26)(v24, 1, 1);
  v27 = v22[8];
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v28 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v28);
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v30 = v66;
  v29(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter title for Find Attachments intent", 43, 2);
  v31 = EntityProperty<>.init(title:)(v21);
  v65 = v27;
  *(_QWORD *)(a2 + v27) = v31;
  static AttachmentEntity.identifier<A>(for:)(v30);
  v32 = objc_msgSend(v30, "objectID");
  v33 = objc_msgSend(v32, "URIRepresentation");

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v34 = objc_msgSend(v30, "title");
  if (v34)
  {
    v35 = v34;
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v38 = v37;

    v40 = v68;
    v39 = v69;
  }
  else
  {
    v42 = v62;
    v41 = (uint64_t)v63;
    v43 = (uint64_t)v64;
    v44 = objc_msgSend(v30, "fileURL");
    if (v44)
    {
      v45 = v44;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v44);

      v46 = 0;
    }
    else
    {
      v46 = 1;
    }
    v40 = v68;
    v39 = v69;
    v47 = v41;
    v68(v43, v46, 1, v69);
    sub_100157FAC(v43, v41);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v41, 1, v39);
    if ((_DWORD)v48 == 1)
    {
      sub_100012DDC(v41, &qword_1005CEFD0);
      v36 = 0;
      v38 = 0xE000000000000000;
    }
    else
    {
      v36 = URL.lastPathComponent.getter(v48);
      v38 = v49;
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v47, v39);
    }
  }
  v72[0] = v36;
  v72[1] = v38;
  EntityProperty.wrappedValue.setter(v72);
  v50 = objc_msgSend(v30, "typeUTI");
  if (v50)
  {
    v51 = v50;
    v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
    v54 = v53;

  }
  else
  {
    v52 = 0;
    v54 = 0;
  }
  v55 = v67;
  swift_bridgeObjectRelease(v67[1]);
  *v55 = v52;
  v55[1] = v54;
  v56 = objc_msgSend(v30, "fileURL");
  if (v56)
  {
    v57 = v56;
    v58 = (uint64_t)v71;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v56);

    v59 = 0;
  }
  else
  {
    v59 = 1;
    v58 = (uint64_t)v71;
  }

  v40(v58, v59, 1, v39);
  return sub_1001B4838(v58, v70);
}

void sub_1001B5B48(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t v33;
  Swift::String v34;
  void *object;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __objc2_prot *v39;

  v2 = sub_100012E18(&qword_1005D1080);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v36 - v6;
  v8 = objc_opt_self(ICAttachment);
  v9 = swift_dynamicCastObjCClass(a1, v8);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = enum case for ManagedEntityContextType.modern(_:);
    v12 = type metadata accessor for ManagedEntityContextType(0);
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v7, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    v14 = a1;
    v15 = objc_msgSend(v10, "identifier");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0xE000000000000000;
    }
    v30 = v7;
    v31 = v17;
LABEL_11:
    AttachmentID.init(contextType:managedIdentifier:)(v30, v31, v19);

    return;
  }
  v39 = &OBJC_PROTOCOL___ICLegacyAttachment;
  v20 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v39);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = enum case for ManagedEntityContextType.html(_:);
    v23 = type metadata accessor for ManagedEntityContextType(0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v5, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v5, 0, 1, v23);
    v25 = a1;
    v26 = objc_msgSend(v21, "contentID");
    if (v26)
    {
      v27 = v26;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v19 = v29;

    }
    else
    {
      v28 = 0;
      v19 = 0xE000000000000000;
    }
    v30 = v5;
    v31 = v28;
    goto LABEL_11;
  }
  v37 = 0;
  v38 = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v32._object = (void *)0x8000000100480680;
  v32._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v32);
  v33 = sub_100012E18((uint64_t *)&unk_1005D2D40);
  v34._countAndFlagsBits = _typeName(_:qualified:)(v33, 0);
  object = v34._object;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(object);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v37, v38, "MobileNotes/AttachmentEntity.swift", 34, 2, 88, 0);
  __break(1u);
}

void static AttachmentEntity.identifier<A>(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  Swift::String v32;
  uint64_t ObjectType;
  Swift::String v34;
  void *object;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __objc2_prot *v39;

  v2 = sub_100012E18(&qword_1005D1080);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v36 - v6;
  v8 = objc_opt_self(ICAttachment);
  v9 = swift_dynamicCastObjCClass(a1, v8);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = enum case for ManagedEntityContextType.modern(_:);
    v12 = type metadata accessor for ManagedEntityContextType(0);
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v7, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    v14 = a1;
    v15 = objc_msgSend(v10, "identifier");
    if (v15)
    {
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v19 = v18;

    }
    else
    {
      v17 = 0;
      v19 = 0xE000000000000000;
    }
    v30 = v7;
    v31 = v17;
LABEL_11:
    AttachmentID.init(contextType:managedIdentifier:)(v30, v31, v19);

    return;
  }
  v39 = &OBJC_PROTOCOL___ICLegacyAttachment;
  v20 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v39);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = enum case for ManagedEntityContextType.html(_:);
    v23 = type metadata accessor for ManagedEntityContextType(0);
    v24 = *(_QWORD *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 104))(v5, v22, v23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v5, 0, 1, v23);
    v25 = a1;
    v26 = objc_msgSend(v21, "contentID");
    if (v26)
    {
      v27 = v26;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v19 = v29;

    }
    else
    {
      v28 = 0;
      v19 = 0xE000000000000000;
    }
    v30 = v5;
    v31 = v28;
    goto LABEL_11;
  }
  v37 = 0;
  v38 = 0xE000000000000000;
  _StringGuts.grow(_:)(65);
  v32._object = (void *)0x8000000100480680;
  v32._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v32);
  ObjectType = swift_getObjectType(a1);
  v34._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v34._object;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(object);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v37, v38, "MobileNotes/AttachmentEntity.swift", 34, 2, 88, 0);
  __break(1u);
}

uint64_t AttachmentEntity.init(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for AttachmentEntity(0);
  v3[5] = v4;
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[8] = v6;
  v3[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource(0);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B6184, 0, 0);
}

uint64_t sub_1001B6184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  void *v21;
  void *v22;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(int **)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  v21 = *(void **)(v0 + 24);
  v22 = *(void **)(v0 + 32);
  v9 = v7[6];
  *(_DWORD *)(v0 + 120) = v9;
  v10 = (_QWORD *)(v8 + v9);
  *v10 = 0;
  v10[1] = 0;
  v11 = v7[7];
  *(_DWORD *)(v0 + 124) = v11;
  v12 = v8 + v11;
  v13 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v7[8];
  *(_DWORD *)(v0 + 128) = v14;
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v15 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Attachments intent", 43, 2);
  *(_QWORD *)(v8 + v14) = EntityProperty<>.init(title:)(v1);
  v16 = dword_1005D2B7C;
  v17 = v21;
  v18 = v22;
  v19 = (_QWORD *)swift_task_alloc(v16);
  *(_QWORD *)(v0 + 104) = v19;
  *v19 = v0;
  v19[1] = sub_1001B62F0;
  return AttachmentEntity.init(for:in:includeContents:)(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1001B62F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001B6424;
  else
    v3 = sub_1001B6354;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001B6354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(int *)(v0 + 124);
  v2 = *(int *)(v0 + 128);
  v3 = *(int *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(void **)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(v9 + v3 + 8));
  sub_100012DDC(v9 + v1, &qword_1005CEFD0);
  swift_release(*(_QWORD *)(v9 + v2));
  sub_1001B6970(v7, v9);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v11);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(int *)(v0 + 124);
  v2 = *(int *)(v0 + 128);
  v3 = *(int *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 48);
  v8 = *(void **)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(v9 + v3 + 8));
  sub_100012DDC(v9 + v1, &qword_1005CEFD0);
  swift_release(*(_QWORD *)(v9 + v2));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AttachmentEntity.init(for:in:includeContents:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for AttachmentEntity(0);
  v3[5] = v4;
  v3[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[8] = v6;
  v3[9] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v3[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for String.LocalizationValue(0);
  v3[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource(0);
  v3[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B65D0, 0, 0);
}

uint64_t sub_1001B65D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD *v20;
  void *v22;
  void *v23;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(int **)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  v22 = *(void **)(v0 + 32);
  v23 = *(void **)(v0 + 24);
  v9 = v7[6];
  *(_DWORD *)(v0 + 128) = v9;
  v10 = (_QWORD *)(v8 + v9);
  *v10 = 0;
  v10[1] = 0;
  v11 = v7[7];
  *(_DWORD *)(v0 + 132) = v11;
  v12 = v8 + v11;
  v13 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v7[8];
  *(_DWORD *)(v0 + 136) = v14;
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v15 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Attachments intent", 43, 2);
  *(_QWORD *)(v8 + v14) = EntityProperty<>.init(title:)(v1);
  v16 = swift_allocObject(&unk_10055C290, 32, 7);
  *(_QWORD *)(v0 + 104) = v16;
  *(_QWORD *)(v16 + 16) = v22;
  *(_QWORD *)(v16 + 24) = v23;
  v17 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v18 = v22;
  v19 = v23;
  v20 = (_QWORD *)swift_task_alloc(v17);
  *(_QWORD *)(v0 + 112) = v20;
  *v20 = v0;
  v20[1] = sub_1001B6764;
  return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 48), sub_1001B6AC4, v16, *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001B6764()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001B68A0;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 104));
    v4 = sub_1001B67D0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001B67D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(int *)(v0 + 132);
  v2 = *(int *)(v0 + 136);
  v3 = *(int *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(void **)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(v9 + v3 + 8));
  sub_100012DDC(v9 + v1, &qword_1005CEFD0);
  swift_release(*(_QWORD *)(v9 + v2));
  sub_1001B6970(v7, v9);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v11);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B68A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(int *)(v0 + 132);
  v3 = *(int *)(v0 + 136);
  v5 = *(int *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 72);
  v12 = *(_QWORD *)(v0 + 48);
  v8 = *(void **)(v0 + 24);
  v9 = *(_QWORD *)(v0 + 16);

  swift_release(v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v9 + v5 + 8));
  sub_100012DDC(v9 + v4, &qword_1005CEFD0);
  swift_release(*(_QWORD *)(v9 + v3));
  swift_task_dealloc(v1);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AttachmentEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B69B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  id v9;
  uint64_t v10;
  id v11;
  __objc2_prot *v12;

  v11 = 0;
  v4 = objc_msgSend(a1, "existingObjectWithID:error:", a2, &v11);
  v5 = v11;
  if (v4)
  {
    v12 = &OBJC_PROTOCOL___ICAttachmentObject;
    v6 = (void *)swift_dynamicCastObjCProtocolUnconditional(v4, 1, &v12, 0, 0, 0);
    v7 = v5;
    return sub_1001B523C(v6, a3);
  }
  else
  {
    v9 = v11;
    _convertNSErrorToError(_:)(v5);

    return swift_willThrow(v10);
  }
}

uint64_t sub_1001B6A98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B6AC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001B69B4(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t AttachmentEntity.init(for:in:includeContents:noteContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v5 + 140) = a4;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = type metadata accessor for AttachmentEntity(0);
  *(_QWORD *)(v5 + 48) = v6;
  *(_QWORD *)(v5 + 56) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  *(_QWORD *)(v5 + 64) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 72) = v8;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  *(_QWORD *)(v5 + 88) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  *(_QWORD *)(v5 + 96) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for LocalizedStringResource(0);
  *(_QWORD *)(v5 + 104) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B6BC8, 0, 0);
}

uint64_t sub_1001B6BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD *v19;
  void *v21;
  void *v22;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(int **)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 16);
  v21 = *(void **)(v0 + 24);
  v22 = *(void **)(v0 + 32);
  v9 = v7[6];
  *(_DWORD *)(v0 + 128) = v9;
  v10 = (_QWORD *)(v8 + v9);
  *v10 = 0;
  v10[1] = 0;
  v11 = v7[7];
  *(_DWORD *)(v0 + 132) = v11;
  v12 = v8 + v11;
  v13 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = v7[8];
  *(_DWORD *)(v0 + 136) = v14;
  sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v15 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v2, 0, 0, v3, v4, "Parameter title for Find Attachments intent", 43, 2);
  *(_QWORD *)(v8 + v14) = EntityProperty<>.init(title:)(v1);
  v16 = dword_1005D2B7C;
  v17 = v21;
  v18 = v22;
  v19 = (_QWORD *)swift_task_alloc(v16);
  *(_QWORD *)(v0 + 112) = v19;
  *v19 = v0;
  v19[1] = sub_1001B6D38;
  return AttachmentEntity.init(for:in:includeContents:)(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1001B6D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001B6E74;
  else
    v3 = sub_1001B6D9C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001B6D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(int *)(v0 + 132);
  v2 = *(int *)(v0 + 136);
  v3 = *(int *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 16);
  v8 = *(void **)(v0 + 24);

  swift_bridgeObjectRelease(*(_QWORD *)(v9 + v3 + 8));
  sub_100012DDC(v9 + v1, &qword_1005CEFD0);
  swift_release(*(_QWORD *)(v9 + v2));
  sub_1001B6970(v6, v9);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(int *)(v0 + 132);
  v2 = *(int *)(v0 + 136);
  v3 = *(int *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v11 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 56);
  v7 = *(void **)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(void **)(v0 + 24);

  swift_bridgeObjectRelease(*(_QWORD *)(v8 + v3 + 8));
  sub_100012DDC(v8 + v1, &qword_1005CEFD0);
  swift_release(*(_QWORD *)(v8 + v2));
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v6);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static AttachmentEntity.managedObjectID(for:in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D2B90 + dword_1005D2B90);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D2B94);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100158D18;
  return v7(a1, a2);
}

void sub_1001B6FA8(void *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;

  AttachmentID.managedIdentifier.getter();
  v5 = v4;
  v6 = a1;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v8 = objc_msgSend((id)objc_opt_self(ICAttachment), "attachmentWithIdentifier:context:", v7, v6);

  if (v8)
  {
    v9 = objc_msgSend(v8, "objectID");

  }
  else
  {
    v9 = 0;
  }
  *a2 = v9;
}

void sub_1001B7074(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  AttachmentID.managedIdentifier.getter();
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v7 = objc_msgSend(a1, "legacyAttachmentWithIdentifier:", v6);

  if (!v7)
    goto LABEL_5;
  v8 = objc_opt_self(NoteAttachmentObject);
  v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
  if (!v9)
  {
    swift_unknownObjectRelease(v7, v10);
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  v11 = objc_msgSend(v9, "objectID");
  swift_unknownObjectRelease(v7, v12);
LABEL_6:
  *a2 = v11;
}

uint64_t sub_1001B7140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1005D2B74);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100145358;
  return AttachmentEntity.init(for:in:)(a1, a2, a3);
}

uint64_t sub_1001B71A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(dword_1005D2B7C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_100145358;
  return AttachmentEntity.init(for:in:includeContents:)(a1, a2, a3);
}

uint64_t sub_1001B7214(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(dword_1005D2B84);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_100130768;
  return AttachmentEntity.init(for:in:includeContents:noteContext:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1001B7294(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1005D2B90 + dword_1005D2B90);
  v5 = (_QWORD *)swift_task_alloc(unk_1005D2B94);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100159034;
  return v7(a1, a2);
}

uint64_t sub_1001B7300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  v6 = sub_100012E18(&qword_1005D1080);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v8, &qword_1005D1080);
  v9 = type metadata accessor for ManagedEntityContextType(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1
    || (v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v8, v9),
        v11 == enum case for ManagedEntityContextType.modern(_:)))
  {
    a2 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    a3 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(a2);
    v13 = v12;
    v11 = swift_release(a2);
    if (v13)
      return a3;
    __break(1u);
  }
  if (v11 == enum case for ManagedEntityContextType.html(_:))
  {
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
    a3 = dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v14);
    v16 = v15;
    swift_release(v14);
    if (v16)
      return a3;
    __break(1u);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v6, v6);
  __break(1u);
  return result;
}

uint64_t sub_1001B7474@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_100012E18(&qword_1005D2D20);
  v3 = EntityQuerySort.by.getter();
  v4 = EntityQuerySort.order.getter(v2) & 1;
  v5 = type metadata accessor for AttachmentEntity(0);
  v6 = sub_100019C6C((unint64_t *)&qword_1005D2C60, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  LOBYTE(v5) = static EntityQuerySort.Ordering.== infix(_:_:)(v4, 0, v5, v6);
  KeyPath = swift_getKeyPath(&unk_100458A38, v7);
  v12 = v3;
  v13 = KeyPath;
  v9 = sub_100012E18(&qword_1005D2D28);
  LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(&v13, &v12, v9, &protocol witness table for AnyKeyPath);
  swift_release(v3);
  result = swift_release(KeyPath);
  v11 = (v5 & 1) == 0;
  if ((v4 & 1) == 0)
    v11 = 2;
  *a1 = v11;
  return result;
}

uint64_t sub_1001B7578(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v2[5] = a1;
  v2[6] = a2;
  v3 = type metadata accessor for Logger(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttachmentID(0);
  v2[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[11] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v2[12] = v7;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[13] = swift_task_alloc(v8);
  v2[14] = swift_task_alloc(v8);
  v9 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D1080) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[15] = swift_task_alloc(v9);
  v2[16] = swift_task_alloc(v9);
  return swift_task_switch(sub_1001B7648, 0, 0);
}

uint64_t sub_1001B7648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v1 = *(_QWORD *)(v0 + 128);
  AttachmentID.contextType.getter();
  v2 = type metadata accessor for ManagedEntityContextType(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
LABEL_2:
    v4 = *(void **)(v0 + 48);
    v5 = sub_100012DDC(*(_QWORD *)(v0 + 128), &qword_1005D1080);
    AttachmentID.managedIdentifier.getter(v5);
    v7 = v6;
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v9 = objc_msgSend(v4, "managedObjectIDForURIString:", v8);

    if (!v9)
    {
      v11 = *(_QWORD *)(v0 + 104);
      v13 = *(_QWORD *)(v0 + 80);
      v12 = *(_QWORD *)(v0 + 88);
      v14 = *(_QWORD *)(v0 + 40);
      static Logger.link.getter(v10);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14, v13);
      v16 = Logger.logObject.getter(v15);
      v18 = static os_log_type_t.error.getter(v16, v17);
      v19 = os_log_type_enabled(v16, v18);
      v20 = *(_QWORD *)(v0 + 104);
      v22 = *(_QWORD *)(v0 + 80);
      v21 = *(_QWORD *)(v0 + 88);
      v24 = *(_QWORD *)(v0 + 64);
      v23 = *(_QWORD *)(v0 + 72);
      v25 = *(_QWORD *)(v0 + 56);
      if (v19)
      {
        v65 = *(_QWORD *)(v0 + 72);
        v64 = *(_QWORD *)(v0 + 56);
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        v27 = swift_slowAlloc(32, -1);
        v66 = v27;
        *(_DWORD *)v26 = 136315138;
        v28 = sub_100019C6C((unint64_t *)&unk_1005D2D30, (uint64_t (*)(uint64_t))&type metadata accessor for AttachmentID, (uint64_t)&protocol conformance descriptor for AttachmentID);
        v29 = dispatch thunk of CustomStringConvertible.description.getter(v22, v28);
        v31 = v30;
        *(_QWORD *)(v0 + 16) = sub_1003A4190(v29, v30, &v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v26 + 4);
        swift_bridgeObjectRelease(v31);
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
        _os_log_impl((void *)&_mh_execute_header, v16, v18, "AttachmentEntity: Unable to resolve managed object ID for entity ID: %s", v26, 0xCu);
        swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v27, -1, -1);
        swift_slowDealloc(v26, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v65, v64);
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(v21 + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80));

        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
      }
      v9 = 0;
    }
    goto LABEL_13;
  }
  v32 = *(_QWORD *)(v0 + 120);
  sub_100012CE8(*(_QWORD *)(v0 + 128), v32, &qword_1005D1080);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v32, v2);
  if (v33 == enum case for ManagedEntityContextType.modern(_:))
  {
    v34 = *(_QWORD *)(v0 + 112);
    v36 = *(_QWORD *)(v0 + 88);
    v35 = *(_QWORD *)(v0 + 96);
    v37 = *(_QWORD *)(v0 + 80);
    v38 = *(_QWORD *)(v0 + 40);
    v39 = objc_msgSend(*(id *)(v0 + 48), "modernManagedObjectContext");
    *(_QWORD *)(v0 + 136) = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v34, v38, v37);
    v40 = *(unsigned __int8 *)(v36 + 80);
    v41 = (v40 + 16) & ~v40;
    v42 = (v35 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v43 = swift_allocObject(&unk_10055C370, v42 + 8, v40 | 7);
    *(_QWORD *)(v0 + 144) = v43;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v43 + v41, v34, v37);
    *(_QWORD *)(v43 + v42) = v39;
    v44 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    v39;
    v45 = (_QWORD *)swift_task_alloc(v44);
    *(_QWORD *)(v0 + 152) = v45;
    v46 = sub_100012E18(&qword_1005D1230);
    *v45 = v0;
    v45[1] = sub_1001B7B68;
    return NSManagedObjectContext.perform<A>(_:)(v0 + 32, sub_1001B8BB4, v43, v46);
  }
  if (v33 != enum case for ManagedEntityContextType.html(_:))
  {
    (*(void (**)(_QWORD, uint64_t))(v3 + 8))(*(_QWORD *)(v0 + 120), v2);
    goto LABEL_2;
  }
  v9 = objc_msgSend(*(id *)(v0 + 48), "htmlManagedObjectContext");
  *(_QWORD *)(v0 + 160) = v9;
  if (v9)
  {
    v48 = *(_QWORD *)(v0 + 112);
    v50 = *(_QWORD *)(v0 + 88);
    v49 = *(_QWORD *)(v0 + 96);
    v51 = *(_QWORD *)(v0 + 80);
    v52 = *(void **)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v50 + 16))(v48, *(_QWORD *)(v0 + 40), v51);
    v53 = *(unsigned __int8 *)(v50 + 80);
    v54 = (v53 + 24) & ~v53;
    v55 = swift_allocObject(&unk_10055C348, v54 + v49, v53 | 7);
    *(_QWORD *)(v0 + 168) = v55;
    *(_QWORD *)(v55 + 16) = v52;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v55 + v54, v48, v51);
    v56 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
    v9;
    v57 = v52;
    v58 = (_QWORD *)swift_task_alloc(v56);
    *(_QWORD *)(v0 + 176) = v58;
    v59 = sub_100012E18(&qword_1005D1230);
    *v58 = v0;
    v58[1] = sub_1001B7C4C;
    return NSManagedObjectContext.perform<A>(_:)(v0 + 24, sub_1001B8AF4, v55, v59);
  }
  sub_100012DDC(*(_QWORD *)(v0 + 128), &qword_1005D1080);
LABEL_13:
  v60 = *(_QWORD *)(v0 + 120);
  v62 = *(_QWORD *)(v0 + 104);
  v61 = *(_QWORD *)(v0 + 112);
  v63 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  return (*(uint64_t (**)(id))(v0 + 8))(v9);
}

uint64_t sub_1001B7B68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  swift_release(v1);
  return swift_task_switch(sub_1001B7BC4, 0, 0);
}

uint64_t sub_1001B7BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 128);

  v2 = *(_QWORD *)(v0 + 32);
  sub_100012DDC(v1, &qword_1005D1080);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1001B7C4C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  v2 = *(void **)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  swift_release(v1);

  return swift_task_switch(sub_1001B7CB0, 0, 0);
}

uint64_t sub_1001B7CB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  sub_100012DDC(*(_QWORD *)(v0 + 128), &qword_1005D1080);
  v2 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1001B7D38()
{
  return sub_100019C6C(&qword_1005D2B98, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7D64()
{
  return sub_100019C6C(&qword_1005D2BA0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7D90()
{
  return sub_100019C6C(&qword_1005D2BA8, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7DC0()
{
  return sub_100019C6C(&qword_1005D0210, (uint64_t (*)(uint64_t))&type metadata accessor for AttachmentID, (uint64_t)&protocol conformance descriptor for AttachmentID);
}

uint64_t sub_1001B7DEC()
{
  return sub_100019C6C(&qword_1005D2BC0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7E18()
{
  return sub_100019C6C(&qword_1005D2BC8, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7E44()
{
  return sub_100019C6C(&qword_1005D2BD0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7E70()
{
  return sub_100019C6C(&qword_1005D2BD8, (uint64_t (*)(uint64_t))&type metadata accessor for AttachmentID, (uint64_t)&protocol conformance descriptor for AttachmentID);
}

uint64_t sub_1001B7E9C()
{
  return sub_100016638(&qword_1005D2BE0, &qword_1005D2BE8, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1001B7EC8()
{
  return sub_100019C6C(&qword_1005D2BF0, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7EF4()
{
  return sub_100019C6C(&qword_1005D2BF8, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
}

uint64_t sub_1001B7F20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static AttachmentEntity.transferRepresentation>>, 1);
}

uint64_t sub_1001B7F30(uint64_t a1)
{
  uint64_t result;

  result = sub_100019C6C((unint64_t *)&qword_1005D2C60, type metadata accessor for AttachmentEntity, (uint64_t)&protocol conformance descriptor for AttachmentEntity);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AttachmentEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for AttachmentID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    v14 = a3[6];
    v15 = a3[7];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (char *)a1 + v15;
    v20 = (char *)a2 + v15;
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    v22 = swift_bridgeObjectRetain(v18);
    if (v21(v20, 1, v11, v22))
    {
      v23 = sub_100012E18(&qword_1005CEFD0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v13(v19, v20, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v19, 0, 1, v11);
    }
    v25 = a3[8];
    v24 = *(uint64_t *)((char *)a2 + v25);
    *(uint64_t *)((char *)a1 + v25) = v24;
  }
  swift_retain(v24);
  return a1;
}

uint64_t destroy for AttachmentEntity(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  v4 = type metadata accessor for AttachmentID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  v9 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  return swift_release(*(_QWORD *)(a1 + a2[8]));
}

uint64_t initializeWithCopy for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for AttachmentID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v13);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (void *)(a1 + v14);
  v19 = (const void *)(a2 + v14);
  v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v11 + 48);
  v21 = swift_bridgeObjectRetain(v17);
  if (v20(v19, 1, v10, v21))
  {
    v22 = sub_100012E18(&qword_1005CEFD0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v12(v18, v19, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
  }
  v23 = a3[8];
  v24 = *(_QWORD *)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  swift_retain(v24);
  return a1;
}

uint64_t assignWithCopy for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(const void *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for AttachmentID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v16 = v15[1];
  v17 = v14[1];
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = a3[7];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v22 = v21((const void *)(a1 + v18), 1, v10);
  v23 = v21(v20, 1, v10);
  if (!v22)
  {
    if (!v23)
    {
      v12(v19, v20, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v19, v10);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    v24 = sub_100012E18(&qword_1005CEFD0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v19, v20, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
LABEL_7:
  v25 = a3[8];
  v26 = *(_QWORD *)(a2 + v25);
  v27 = *(_QWORD *)(a1 + v25);
  *(_QWORD *)(a1 + v25) = v26;
  swift_retain(v26);
  swift_release(v27);
  return a1;
}

uint64_t initializeWithTake for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;

  v6 = type metadata accessor for AttachmentID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    v16 = sub_100012E18(&qword_1005CEFD0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for AttachmentEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t (*v22)(const void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for AttachmentID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  v18 = v14[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  v19 = a3[7];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v23 = v22((const void *)(a1 + v19), 1, v10);
  v24 = v22(v21, 1, v10);
  if (!v23)
  {
    if (!v24)
    {
      v12(v20, v21, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v20, v10);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = sub_100012E18(&qword_1005CEFD0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v20, v21, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
LABEL_7:
  v26 = a3[8];
  v27 = *(_QWORD *)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  swift_release(v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttachmentEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B86D4);
}

uint64_t sub_1001B86D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = type metadata accessor for AttachmentID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = sub_100012E18(&qword_1005CEFD0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[7];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t storeEnumTagSinglePayload for AttachmentEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B87B0);
}

uint64_t sub_1001B87B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for AttachmentID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = type metadata accessor for URL(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = sub_100012E18(&qword_1005CEFD0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[7];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[8]) = (a2 - 1);
  return result;
}

void sub_1001B887C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v2 = type metadata accessor for AttachmentID(319);
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for URL(319);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      v8[2] = &unk_1004589F8;
      sub_1001B8930(319);
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = (char *)&value witness table for Builtin.NativeObject + 64;
        swift_initStructMetadata(a1, 256, 5, v8, a1 + 16);
      }
    }
  }
}

void sub_1001B8930(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D2CD0)
  {
    v2 = type metadata accessor for URL(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D2CD0);
  }
}

uint64_t sub_1001B8984()
{
  return sub_100016638(&qword_1005D2D10, &qword_1005D2D18, (uint64_t)&protocol conformance descriptor for _ConditionalTransferRepresentation<A>);
}

uint64_t storeEnumTagSinglePayload for AttachmentEntity.SortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001B89FC + 4 * byte_100458775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001B8A30 + 4 * byte_100458770[v4]))();
}

uint64_t sub_1001B8A30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B8A38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001B8A40);
  return result;
}

uint64_t sub_1001B8A4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001B8A54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001B8A58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001B8A60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttachmentEntity.SortType()
{
  return &type metadata for AttachmentEntity.SortType;
}

uint64_t sub_1001B8A80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AttachmentID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001B8AF4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  type metadata accessor for AttachmentID(0);
  sub_1001B7074(*(void **)(v1 + 16), a1);
}

uint64_t sub_1001B8B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for AttachmentID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1001B8BB4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for AttachmentID(0);
  sub_1001B6FA8(*(void **)(v1+ ((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t CreateTagIntent.name.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t CreateTagIntent.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a1;
  v3[1] = a2;
  return IntentParameter.wrappedValue.setter(v3);
}

void *CreateTagIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateTagIntent.persistentIdentifier;
}

unint64_t static CreateTagIntent.persistentIdentifier.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1001B8C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static CreateTagIntent.title);
  sub_10012A0B0(v10, (uint64_t)static CreateTagIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x5420657461657243, 0xEA00000000006761);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t CreateTagIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEA28 != -1)
    swift_once(&qword_1005CEA28, sub_1001B8C9C);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static CreateTagIntent.title);
}

uint64_t static CreateTagIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA28 != -1)
    swift_once(&qword_1005CEA28, sub_1001B8C9C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static CreateTagIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static CreateTagIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000028, 0x8000000100480710);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static CreateTagIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;

  v0 = sub_100012E18(&qword_1005D2D50);
  __chkstk_darwin(v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D2D58);
  __chkstk_darwin(v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B2760();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for CreateTagIntent, v6);
  v7._countAndFlagsBits = 0x6120657461657243;
  v7._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100458A60, v8);
  v10 = sub_100012E18(&qword_1005D2D60);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 1734439968;
  v11._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CreateTagIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for CreateTagIntent, v6);
}

uint64_t CreateTagIntent.perform()(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2[38] = a1;
  v2[39] = a2;
  v3 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v2[41] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[42] = v5;
  v2[43] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v2[44] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v2[45] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v2[46] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[47] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[48] = swift_task_alloc(v10);
  v2[49] = swift_task_alloc(v10);
  v11 = type metadata accessor for TagEntity(0);
  v2[50] = v11;
  v12 = (*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[51] = swift_task_alloc(v12);
  v2[52] = swift_task_alloc(v12);
  v2[53] = swift_task_alloc(v12);
  v2[54] = swift_task_alloc(v12);
  v13 = type metadata accessor for CharacterSet(0);
  v2[55] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v2[56] = v14;
  v2[57] = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B93BC, 0, 0);
}

uint64_t sub_1001B93BC()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  NSString v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  _QWORD *v35;
  id v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t inited;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;

  v1 = objc_msgSend((id)objc_opt_self(ICDefaultAccountUtilities), "defaultAccount");
  *(_QWORD *)(v0 + 464) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = objc_opt_self(ICAccount);
    v4 = swift_dynamicCastObjCClass(v2, v3);
    if (v4)
    {
      v5 = v4;
      v6 = v2;
      v7 = objc_msgSend(v6, "managedObjectContext");
      *(_QWORD *)(v0 + 472) = v7;
      if (v7)
      {
        v8 = v7;
        v90 = v6;
        v9 = IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 224));
        v10 = *(_QWORD *)(v0 + 232);
        if (v10)
        {
          v11 = *(_QWORD *)(v0 + 448);
          v12 = *(_QWORD *)(v0 + 456);
          v13 = *(_QWORD *)(v0 + 440);
          *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 224);
          *(_QWORD *)(v0 + 200) = v10;
          static CharacterSet.whitespacesAndNewlines.getter(v9);
          v14 = sub_1001452E8();
          StringProtocol.trimmingCharacters(in:)(v12, &type metadata for String, v14);
          v16 = v15;
          v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
          v17(v12, v13);
          swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
          v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v16);
          v19 = objc_msgSend(v18, "ic_withoutHashtagPrefix");

          v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
          v22 = v21;

          v23 = HIBYTE(v22) & 0xF;
          if ((v22 & 0x2000000000000000) == 0)
            v23 = v20 & 0xFFFFFFFFFFFFLL;
          if (v23)
          {
            v24 = *(_QWORD *)(v0 + 456);
            v89 = *(_QWORD *)(v0 + 440);
            *(_QWORD *)(v0 + 256) = v20;
            *(_QWORD *)(v0 + 264) = v22;
            strcpy((char *)(v0 + 240), "[\\p{C}\\p{Z}]+");
            *(_WORD *)(v0 + 254) = -4864;
            *(_QWORD *)(v0 + 208) = 45;
            *(_QWORD *)(v0 + 216) = 0xE100000000000000;
            v25 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v0 + 240, v0 + 208, 1024, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v14, v14, v14);
            v27 = v26;
            swift_bridgeObjectRelease(v22);
            v28 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "ic_hashtagAllowedCharacterSet");
            static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

            v29 = String.removingCharacters(notContainedIn:)(v24, v25, v27);
            v31 = v30;
            swift_bridgeObjectRelease(v27);
            v17(v24, v89);
            v32 = (_QWORD *)swift_allocObject(&unk_10055C528, 48, 7);
            *(_QWORD *)(v0 + 480) = v32;
            v32[2] = v29;
            v32[3] = v31;
            v32[4] = v5;
            v32[5] = v8;
            v33 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
            v34 = v90;
            v8;
            v35 = (_QWORD *)swift_task_alloc(v33);
            *(_QWORD *)(v0 + 488) = v35;
            *v35 = v0;
            v35[1] = sub_1001B9B6C;
            return NSManagedObjectContext.perform<A>(_:)(*(_QWORD *)(v0 + 432), sub_1001BA4C8, v32, *(_QWORD *)(v0 + 400));
          }
          swift_bridgeObjectRelease(v22);
        }
        v88 = v8;
        v63 = *(_QWORD *)(v0 + 384);
        v62 = *(_QWORD *)(v0 + 392);
        v64 = *(_QWORD *)(v0 + 360);
        v86 = *(_QWORD *)(v0 + 376);
        v87 = *(_QWORD *)(v0 + 368);
        v66 = *(_QWORD *)(v0 + 344);
        v65 = *(_QWORD *)(v0 + 352);
        v68 = *(_QWORD *)(v0 + 328);
        v67 = *(_QWORD *)(v0 + 336);
        v69 = *(_QWORD *)(v0 + 320);
        v70 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100480800);
        static Locale.current.getter(v70);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v67 + 104))(v66, enum case for LocalizedStringResource.BundleDescription.main(_:), v68);
        v71 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v64, 0, 0, v65, v66, "Prompt for tag name when creating a tag via App Intents", 55, 2);
        v72 = IntentParameter.projectedValue.getter(v71);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v63, v62, v87);
        IntentDialog.init(_:)(v63);
        v73 = type metadata accessor for IntentDialog(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v69, 0, 1, v73);
        v74 = type metadata accessor for AppIntentError(0);
        v75 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
        swift_allocError(v74, v75, 0, 0);
        IntentParameter.needsValueError(_:)(v69);
        swift_release(v72);
        v76 = sub_1001BA4E4(v69);
        swift_willThrow(v76);

        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v62, v87);
      }
      else
      {
        type metadata accessor for ICError(0);
        v55 = v54;
        *(_QWORD *)(v0 + 288) = 225;
        v56 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
        inited = swift_initStackObject(v56, v0 + 16);
        *(_OWORD *)(inited + 16) = xmmword_100451C20;
        *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
        *(_QWORD *)(inited + 40) = v58;
        *(_QWORD *)(inited + 72) = &type metadata for String;
        *(_QWORD *)(inited + 48) = 0xD000000000000035;
        *(_QWORD *)(inited + 56) = 0x80000001004807C0;
        v59 = sub_1001356D4(inited);
        v60 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
        v61 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 272), v0 + 288, v59, v55, v60);
        swift_willThrow(v61);

      }
    }
    else
    {
      v51 = swift_allocObject(&unk_10055C500, 24, 7);
      *(_QWORD *)(v51 + 16) = 0;
      v52 = v2;
      sub_1001BA2FC(v51, 203, (uint64_t)v52);

      v53 = swift_release(v51);
      swift_willThrow(v53);

    }
  }
  else
  {
    ICInternalSettingsIsAppleAccountBrandingEnabled();
    v37 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v38 = String._bridgeToObjectiveC()();
    v39 = objc_msgSend(v37, "localizedStringForKey:value:table:", v38, 0, 0);

    v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v42 = v41;

    type metadata accessor for ICError(0);
    v44 = v43;
    *(_QWORD *)(v0 + 280) = 203;
    v45 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    v46 = swift_initStackObject(v45, v0 + 96);
    *(_OWORD *)(v46 + 16) = xmmword_100451C20;
    *(_QWORD *)(v46 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(v46 + 40) = v47;
    *(_QWORD *)(v46 + 72) = &type metadata for String;
    *(_QWORD *)(v46 + 48) = v40;
    *(_QWORD *)(v46 + 56) = v42;
    v48 = sub_1001356D4(v46);
    v49 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v50 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 296), v0 + 280, v48, v44, v49);
    swift_willThrow(v50);
  }
  v77 = *(_QWORD *)(v0 + 424);
  v78 = *(_QWORD *)(v0 + 432);
  v80 = *(_QWORD *)(v0 + 408);
  v79 = *(_QWORD *)(v0 + 416);
  v82 = *(_QWORD *)(v0 + 384);
  v81 = *(_QWORD *)(v0 + 392);
  v84 = *(_QWORD *)(v0 + 352);
  v83 = *(_QWORD *)(v0 + 360);
  v85 = *(_QWORD *)(v0 + 344);
  v91 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc(*(_QWORD *)(v0 + 456));
  swift_task_dealloc(v78);
  swift_task_dealloc(v77);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v91);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B9B6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 488);
  *(_QWORD *)(*v1 + 496) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001B9D80;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 480));
    v4 = sub_1001B9BD8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001B9BD8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(void **)(v0 + 464);
  v13 = *(void **)(v0 + 472);
  v14 = *(_QWORD *)(v0 + 456);
  v2 = *(_QWORD *)(v0 + 424);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 408);
  v5 = *(_QWORD *)(v0 + 416);
  v15 = *(_QWORD *)(v0 + 392);
  v16 = *(_QWORD *)(v0 + 384);
  v17 = *(_QWORD *)(v0 + 360);
  v18 = *(_QWORD *)(v0 + 352);
  v19 = *(_QWORD *)(v0 + 344);
  v20 = *(_QWORD *)(v0 + 320);
  v12 = *(_QWORD *)(v0 + 400);
  sub_100138470(v3, v2);
  v6 = _s11MobileNotes13OpenTagIntentVACycfC_0();
  v8 = v7;
  sub_100138470(v2, v5);
  sub_100138470(v5, v4);
  IntentParameter.wrappedValue.setter(v4);
  sub_1001384B4(v5);
  sub_1001384B4(v2);
  *(_QWORD *)(v0 + 176) = v6;
  *(_QWORD *)(v0 + 184) = v8;
  v9 = sub_100019C6C(&qword_1005D3E20, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  v10 = sub_100019928();
  static IntentResult.result<A, B>(value:opensIntent:)(v3, v0 + 176, v12, &type metadata for OpenTagIntent, v9, v10);

  swift_release(v6);
  swift_release(v8);
  sub_1001384B4(v3);
  swift_task_dealloc(v14);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v4);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B9D80()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(void **)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = *(void **)(v0 + 464);

  swift_release(v2);
  v5 = *(_QWORD *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 432);
  v7 = *(_QWORD *)(v0 + 408);
  v6 = *(_QWORD *)(v0 + 416);
  v9 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 392);
  v11 = *(_QWORD *)(v0 + 352);
  v10 = *(_QWORD *)(v0 + 360);
  v12 = *(_QWORD *)(v0 + 344);
  v14 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc(*(_QWORD *)(v0 + 456));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001B9E60(uint64_t a1@<X1>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  id v8;
  NSString v9;
  id v10;
  unsigned __int8 v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _BYTE v32[80];

  swift_bridgeObjectRetain(a1);
  v8 = a2;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a1);
  v10 = objc_msgSend((id)objc_opt_self(ICHashtag), "hashtagWithDisplayText:account:createIfNecessary:", v9, v8, 1);

  if (v10)
  {
    v31 = 0;
    v11 = objc_msgSend(a3, "save:", &v31);
    v12 = v31;
    if ((v11 & 1) != 0)
    {
      v13 = v31;
      TagEntity.init(_:)(v10, a4);
    }
    else
    {
      v28 = v31;
      _convertNSErrorToError(_:)(v12);

      swift_willThrow(v29);
    }
  }
  else
  {
    type metadata accessor for ICError(0);
    v15 = v14;
    v30 = 226;
    v16 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v16, v32);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
    *(_QWORD *)(inited + 40) = v18;
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v20 = String._bridgeToObjectiveC()();
    v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = v22;
    *(_QWORD *)(inited + 56) = v24;
    v25 = sub_1001356D4(inited);
    v26 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v27 = _BridgedStoredNSError.init(_:userInfo:)(&v31, &v30, v25, v15, v26);
    swift_willThrow(v27);
  }
}

uint64_t sub_1001BA0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  Swift::String v14;
  uint64_t v16;

  v4 = sub_100012E18(&qword_1005D2D50);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D2D58);
  __chkstk_darwin(v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, a1, a2);
  v10._countAndFlagsBits = 0x6120657461657243;
  v10._object = (void *)0xE900000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_100458A60, v11);
  v13 = sub_100012E18(&qword_1005D2D60);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v13);
  swift_release(KeyPath);
  v14._countAndFlagsBits = 1734439968;
  v14._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v14);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

uint64_t sub_1001BA234(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1005D2D6C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100130768;
  return CreateTagIntent.perform()(a1, v4);
}

uint64_t sub_1001BA28C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = variable initialization expression of CreateTagIntent._name();
  *a1 = result;
  return result;
}

uint64_t sub_1001BA2B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001BA2D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1001BA2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void **v4;
  id v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  Swift::String v13;
  uint64_t ObjectType;
  Swift::String v15;
  void *object;
  Swift::String v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v24[3];
  _BYTE v25[80];
  uint64_t v26;

  v4 = (void **)(a1 + 16);
  v3 = *(void **)(a1 + 16);
  if (v3)
  {
    v5 = *(id *)(a1 + 16);
  }
  else
  {
    type metadata accessor for ICError(0);
    v9 = v8;
    v26 = a2;
    v10 = sub_100012E18((uint64_t *)&unk_1005D1EF0);
    inited = swift_initStackObject(v10, v25);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICErrorFailureReasonKey);
    *(_QWORD *)(inited + 40) = v12;
    v24[0] = 0;
    v24[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(93);
    v13._object = (void *)0x8000000100480890;
    v13._countAndFlagsBits = 0xD00000000000005BLL;
    String.append(_:)(v13);
    ObjectType = swift_getObjectType(a3);
    v15._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
    object = v15._object;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(object);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    String.append(_:)(v17);
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 0;
    *(_QWORD *)(inited + 56) = 0xE000000000000000;
    v18 = sub_100174AD0(inited);
    v19 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    _BridgedStoredNSError.init(_:userInfo:)(v24, &v26, v18, v9, v19);
    v20 = (void *)v24[0];
    swift_beginAccess(v4, v24, 1, 0);
    v21 = *v4;
    *v4 = v20;
    v5 = v20;

    v3 = 0;
  }
  v22 = v3;
  return v5;
}

uint64_t sub_1001BA494()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_1001BA4C8(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1001B9E60(*(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_1001BA4E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001BA528()
{
  unint64_t result;

  result = qword_1005D2D70;
  if (!qword_1005D2D70)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateTagIntent, &type metadata for CreateTagIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2D70);
  }
  return result;
}

unint64_t sub_1001BA574()
{
  unint64_t result;

  result = qword_1005D2D78;
  if (!qword_1005D2D78)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateTagIntent, &type metadata for CreateTagIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2D78);
  }
  return result;
}

unint64_t sub_1001BA5BC()
{
  unint64_t result;

  result = qword_1005D2D80;
  if (!qword_1005D2D80)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateTagIntent, &type metadata for CreateTagIntent);
    atomic_store(result, (unint64_t *)&qword_1005D2D80);
  }
  return result;
}

uint64_t sub_1001BA600(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CreateTagIntent.perform()>>, 1)+ 8);
}

uint64_t sub_1001BA624(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static CreateTagIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for CreateTagIntent()
{
  return &type metadata for CreateTagIntent;
}

uint64_t sub_1001BA644()
{
  return sub_100016638(&qword_1005D2D90, &qword_1005D2D98, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1001BA670()
{
  return sub_100016638(&qword_1005D2DA0, &qword_1005D2DA8, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1001BA69C()
{
  return sub_100016638(&qword_1005D2DB0, &qword_1005D2DA8, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

void sub_1001BA6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[6];
  unint64_t v35;

  v1 = a1;
  v35 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_1000163BC(0, (unint64_t *)&qword_1005D3D00, NSObject_ptr);
    v5 = sub_1001452A0(&qword_1005D2E08, (unint64_t *)&qword_1005D3D00, NSObject_ptr);
    v6 = Set.Iterator.init(_cocoa:)(v3, v4, v5);
    v1 = v34[1];
    v32 = v34[2];
    v8 = v34[3];
    v7 = v34[4];
    v9 = v34[5];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v32 = a1 + 56;
    v8 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v7 = 0;
  }
  v13 = (unint64_t)(v8 + 64) >> 6;
  while (v1 < 0)
  {
    v17 = __CocoaSet.Iterator.next()(v6);
    if (!v17)
      goto LABEL_41;
    v18 = v17;
    v33 = v17;
    v19 = sub_1000163BC(0, (unint64_t *)&qword_1005D3D00, NSObject_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(v34, &v33, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = (id)v34[0];
    swift_unknownObjectRelease(v18, v21);
    v16 = v7;
    v14 = v9;
    if (!v20)
      goto LABEL_41;
LABEL_36:
    v25 = objc_opt_self(NSManagedObjectID);
    v26 = (void *)swift_dynamicCastObjCClass(v20, v25);
    if (v26 && (v27 = v26, v28 = objc_msgSend(v26, "ic_isHashtagType"), (v28 & 1) != 0))
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
      v30 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v29 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v30 >= v29 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
      v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
      v6 = specialized Array._endMutation()(v31);
    }
    else
    {

    }
    v7 = v16;
    v9 = v14;
  }
  if (v9)
  {
    v14 = (v9 - 1) & v9;
    v15 = __clz(__rbit64(v9)) | (v7 << 6);
    v16 = v7;
LABEL_35:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_41;
    goto LABEL_36;
  }
  v22 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v22 >= v13)
      goto LABEL_41;
    v23 = *(_QWORD *)(v32 + 8 * v22);
    v16 = v7 + 1;
    if (!v23)
    {
      v16 = v7 + 2;
      if (v7 + 2 >= v13)
        goto LABEL_41;
      v23 = *(_QWORD *)(v32 + 8 * v16);
      if (!v23)
      {
        v16 = v7 + 3;
        if (v7 + 3 >= v13)
          goto LABEL_41;
        v23 = *(_QWORD *)(v32 + 8 * v16);
        if (!v23)
        {
          v16 = v7 + 4;
          if (v7 + 4 >= v13)
            goto LABEL_41;
          v23 = *(_QWORD *)(v32 + 8 * v16);
          if (!v23)
          {
            v16 = v7 + 5;
            if (v7 + 5 >= v13)
              goto LABEL_41;
            v23 = *(_QWORD *)(v32 + 8 * v16);
            if (!v23)
            {
              v24 = v7 + 6;
              while (v13 != v24)
              {
                v23 = *(_QWORD *)(v32 + 8 * v24++);
                if (v23)
                {
                  v16 = v24 - 1;
                  goto LABEL_34;
                }
              }
LABEL_41:
              sub_1001452E0(v1);
              return;
            }
          }
        }
      }
    }
LABEL_34:
    v14 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v16 << 6);
    goto LABEL_35;
  }
  __break(1u);
}

id sub_1001BAA58(uint64_t a1, uint64_t a2, char a3, char a4, char a5)
{
  objc_class *v5;
  _BYTE *v11;
  objc_super v13;

  v11 = objc_allocWithZone(v5);
  *(_QWORD *)&v11[OBJC_IVAR___ICFolderListSelectionValidator_modernContext] = a1;
  *(_QWORD *)&v11[OBJC_IVAR___ICFolderListSelectionValidator_htmlContext] = a2;
  v11[OBJC_IVAR___ICFolderListSelectionValidator_hidesSystemPaperNotesInCustomFolders] = a3;
  v11[OBJC_IVAR___ICFolderListSelectionValidator_hidesMathNotesInCustomFolders] = a4;
  v11[OBJC_IVAR___ICFolderListSelectionValidator_hidesCallNotesInCustomFolders] = a5;
  v13.receiver = v11;
  v13.super_class = v5;
  return objc_msgSendSuper2(&v13, "init");
}

uint64_t sub_1001BAC5C(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  id (*v5)@<X0>(_QWORD *@<X8>);
  id v6;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v3 = objc_msgSend(a1, "ic_isModernType");
  if ((_DWORD)v3)
  {
    __chkstk_darwin(v3);
    v9 = v1;
    v10 = a1;
    v4 = sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
    v5 = sub_1001BC40C;
LABEL_5:
    NSManagedObjectContext.performAndWait<A>(_:)(v5, &v8, v4);
    return v11;
  }
  v6 = objc_msgSend(a1, "ic_isLegacyType");
  if ((_DWORD)v6)
  {
    __chkstk_darwin(v6);
    v9 = v1;
    v10 = a1;
    v4 = sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
    v5 = sub_1001BC3F0;
    goto LABEL_5;
  }
  return 0;
}

uint64_t sub_1001BAD84(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v4;
  id v8;
  void *v9;
  unsigned __int8 v10;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  Class isa;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  _BYTE v62[16];
  void *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  unsigned __int8 v69;
  char v70;

  v4 = v3;
  v8 = objc_msgSend(a1, "managedObjectContext");
  if (!v8)
    goto LABEL_3;
  v9 = v8;
  __chkstk_darwin(v8);
  v65 = (uint64_t)a1;
  NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC334, &v63, &type metadata for Bool);

  if ((v70 & 1) != 0)
    goto LABEL_3;
  if (a3)
  {
    v12 = a3;
    if (objc_msgSend(v12, "isNonEmpty"))
    {
      v13 = objc_opt_self(ICNote);
      v14 = swift_dynamicCastObjCClass(a1, v13);
      if (v14)
      {
        v15 = v14;
        type metadata accessor for ICQuery(0);
        v16 = a1;
        v17 = (void *)static ICQuery.makeQueryForNotesMatching(_:)(v12);
        v18 = __chkstk_darwin(v17);
        v63 = v4;
        v64 = v18;
        v65 = v15;
        NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC388, v62, &type metadata for Bool);

        v10 = v66;
        return v10 & 1;
      }
      goto LABEL_38;
    }

  }
  if (!a2)
    goto LABEL_24;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 >= 0)
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    else
      v19 = a2;
    if (__CocoaSet.count.getter(v19))
    {
      v20 = __CocoaSet.count.getter(v19);
      goto LABEL_18;
    }
LABEL_24:
    v10 = 1;
    return v10 & 1;
  }
  v20 = *(_QWORD *)(a2 + 16);
  if (!v20)
    goto LABEL_24;
LABEL_18:
  if (v20 != 1)
  {
LABEL_30:
    v33 = objc_msgSend((id)objc_opt_self(ICTagAllTagsItemIdentifier), "sharedItemIdentifier");
    v34 = sub_100379FBC(v33, a2);

    if ((v34 & 1) != 0)
    {
      v35 = objc_opt_self(ICNote);
      v36 = swift_dynamicCastObjCClass(a1, v35);
      if (v36)
      {
        v37 = v36;
        v38 = *(_QWORD *)&v4[OBJC_IVAR___ICFolderListSelectionValidator_modernContext];
        v39 = objc_allocWithZone((Class)ICTagSelection);
        v40 = a1;
        v41 = objc_msgSend(v39, "initWithManagedObjectContext:mode:", v38, 1);
        type metadata accessor for ICQuery(0);
        v42 = (void *)static ICQuery.makeQueryForNotesMatching(_:)(v41);
        v43 = __chkstk_darwin(v42);
        v63 = v4;
        v64 = v43;
        v65 = v37;
        NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC470, v62, &type metadata for Bool);

        v10 = v68;
        return v10 & 1;
      }
    }
    else
    {
      sub_1001BA6C8(a2);
      v45 = v44;
      v46 = sub_10020BAFC(v44);
      swift_bridgeObjectRelease(v45);
      v47 = objc_opt_self(ICNote);
      v48 = swift_dynamicCastObjCClass(a1, v47);
      if (v48)
      {
        v49 = v48;
        v50 = *(void **)&v4[OBJC_IVAR___ICFolderListSelectionValidator_modernContext];
        v51 = objc_allocWithZone((Class)ICTagSelection);
        sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
        sub_1001452A0((unint64_t *)&qword_1005D3CC0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
        v52 = a1;
        v53 = v50;
        isa = Set._bridgeToObjectiveC()().super.isa;
        v55 = objc_msgSend(v51, "initWithManagedObjectContext:includedObjectIDs:", v53, isa);

        type metadata accessor for ICQuery(0);
        v56 = (void *)static ICQuery.makeQueryForNotesMatching(_:)(v55);
        v57 = __chkstk_darwin(v56);
        v63 = v4;
        v64 = v57;
        v65 = v49;
        NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC470, v62, &type metadata for Bool);
        swift_bridgeObjectRelease(v46);

        v10 = v69;
        return v10 & 1;
      }
      swift_bridgeObjectRelease(v46);
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain(a2);
  v12 = (id)sub_10023FEFC(v21);
  swift_bridgeObjectRelease(a2);
  if (!v12)
  {
LABEL_26:
    swift_bridgeObjectRetain(a2);
    v30 = (void *)sub_10023FEFC(v29);
    swift_bridgeObjectRelease(a2);
    if (v30)
    {
      v31 = objc_opt_self(ICVirtualSmartFolderItemIdentifier);
      v32 = (void *)swift_dynamicCastObjCClass(v30, v31);
      if (v32)
      {
        v10 = sub_1001BB6B8(a1, v32);

        return v10 & 1;
      }

    }
    goto LABEL_30;
  }
  v22 = objc_opt_self(NSManagedObjectID);
  v23 = (void *)swift_dynamicCastObjCClass(v12, v22);
  if (!v23 || (v24 = v23, !objc_msgSend(v23, "ic_isContainerType")))
  {

    goto LABEL_26;
  }
  v25 = objc_opt_self(ICNote);
  v26 = swift_dynamicCastObjCClass(a1, v25);
  if (v26)
  {
    v27 = __chkstk_darwin(v26);
    v63 = v24;
    v64 = (uint64_t)v4;
    v65 = v27;
    v28 = a1;
    NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC36C, v62, &type metadata for Bool);

    v10 = v67;
    return v10 & 1;
  }
  v58 = objc_opt_self(NoteObject);
  v59 = swift_dynamicCastObjCClass(a1, v58);
  if (v59)
  {
    v60 = v59;
    v61 = a1;
    v10 = sub_1001BBA68(v60, v24);

    return v10 & 1;
  }
LABEL_38:

LABEL_3:
  v10 = 0;
  return v10 & 1;
}

uint64_t sub_1001BB6B8(void *a1, id a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[7];
  char v31;

  v5 = objc_msgSend(a2, "type");
  v6 = ICVirtualSmartFolderItemIdentifierTypeRecentlyDeletedMathNotes;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v9 = v8;
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  if (v7 == v10 && v9 == v11)
  {

    swift_bridgeObjectRelease_n(v9, 2);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);

  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 1) != 0)
  {
LABEL_9:
    v18 = 1;
    return v18 & 1;
  }
  v15 = objc_opt_self(ICNote);
  v16 = swift_dynamicCastObjCClass(a1, v15);
  if (v16)
  {
    v30[2] = a2;
    v30[3] = v2;
    v30[4] = __chkstk_darwin(v16);
    v17 = a1;
    NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC3D4, v30, &type metadata for Bool);

    v18 = v31;
  }
  else
  {
    v20 = objc_opt_self(ICInvitation);
    if (swift_dynamicCastObjCClass(a1, v20))
    {
      v21 = a1;
      v22 = objc_msgSend(a2, "type");
      v23 = ICVirtualSmartFolderItemIdentifierTypeSharedWithYou;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v26 = v25;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v29 = v27;
      if (v24 == v28 && v26 == v27)
        v18 = 1;
      else
        v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v26, v28, v27, 0);

      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      v18 = 0;
    }
  }
  return v18 & 1;
}

void sub_1001BB9A8(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, _BYTE *a4@<X8>)
{
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  v7 = *(void **)(a1 + OBJC_IVAR___ICFolderListSelectionValidator_modernContext);
  v8 = objc_allocWithZone((Class)type metadata accessor for ICQueryResultsController(0));
  v9 = (void *)ICQueryResultsController.init(managedObjectContext:query:)(v7, a2);
  v10 = ICQueryResultsController.performFetch()();
  v11 = objc_msgSend(a3, "objectID");
  LOBYTE(v7) = sub_100379FD0(v11, v10);

  swift_bridgeObjectRelease(v10);
  *a4 = v7 & 1;
}

id sub_1001BBA68(uint64_t a1, id a2)
{
  id v4;
  id result;
  _BYTE v6[16];
  uint64_t v7;
  id v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v4 = objc_msgSend(a2, "ic_isLegacyFolderType");
  if ((_DWORD)v4)
  {
    __chkstk_darwin(v4);
    v7 = a1;
    v8 = a2;
    NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC3BC, v6, &type metadata for Bool);
    return (id)v9;
  }
  else
  {
    result = objc_msgSend(a2, "ic_isLegacyAccountType");
    if ((_DWORD)result)
    {
      __chkstk_darwin(result);
      v7 = a1;
      v8 = a2;
      NSManagedObjectContext.performAndWait<A>(_:)(sub_1001BC3A4, v6, &type metadata for Bool);
      return (id)v10;
    }
  }
  return result;
}

void sub_1001BBB6C(void *a1@<X0>, char *a2@<X1>, void *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  char *v26;
  char v27;
  char *v28;
  unsigned __int8 v29;
  void *v30;
  id v31;
  char *v32;

  if (objc_msgSend(a1, "ic_isModernFolderType"))
  {
    v8 = sub_1001BAC5C(a1);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = objc_opt_self(ICFolder);
      v11 = (void *)swift_dynamicCastObjCClass(v9, v10);
      if (v11)
      {
        v12 = v11;
        if (objc_msgSend(v11, "isSmartFolder"))
        {
          v13 = objc_msgSend(v12, "smartFolderQueryObjC");
          if (v13)
          {
            v14 = v13;
            v15 = *(void **)&a2[OBJC_IVAR___ICFolderListSelectionValidator_modernContext];
            v16 = objc_allocWithZone((Class)type metadata accessor for ICQueryResultsController(0));
            v17 = v15;
            v18 = v14;
            v19 = (void *)ICQueryResultsController.init(managedObjectContext:query:)(v17, v18);
            v20 = ICQueryResultsController.performFetch()();
            v21 = objc_msgSend(a3, "objectID");
            LOBYTE(a2) = sub_100379FD0(v21, v20);

            swift_bridgeObjectRelease(v20);
            goto LABEL_25;
          }
        }
        if (objc_msgSend(v12, "isTrashFolder"))
        {
          v22 = objc_msgSend(a3, "folder");
          if (v22)
            goto LABEL_27;
          goto LABEL_30;
        }
        if ((a2[OBJC_IVAR___ICFolderListSelectionValidator_hidesSystemPaperNotesInCustomFolders] != 1
           || !objc_msgSend(a3, "isSystemPaper"))
          && (a2[OBJC_IVAR___ICFolderListSelectionValidator_hidesMathNotesInCustomFolders] != 1
           || !objc_msgSend(a3, "isMathNote"))
          && (a2[OBJC_IVAR___ICFolderListSelectionValidator_hidesCallNotesInCustomFolders] != 1
           || !objc_msgSend(a3, "isCallNote")))
        {
          v22 = objc_msgSend(a3, "folder");
          if (v22)
          {
LABEL_27:
            v30 = v22;
            a2 = (char *)objc_msgSend(v22, "objectID");

            if (a2)
            {
              sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
              v31 = a1;
              v32 = a2;
              LOBYTE(a2) = static NSObject.== infix(_:_:)(v32);

            }
            goto LABEL_25;
          }
LABEL_30:
          LOBYTE(a2) = 0;

          goto LABEL_25;
        }

LABEL_24:
        LOBYTE(a2) = 0;
        goto LABEL_25;
      }

    }
  }
  if (!objc_msgSend(a1, "ic_isModernAccountType"))
    goto LABEL_24;
  v23 = (char *)objc_msgSend(a3, "folder");
  a2 = v23;
  if (!v23)
    goto LABEL_25;
  v24 = objc_msgSend(v23, "account");

  a2 = (char *)objc_msgSend(v24, "objectID");
  if (!a2)
    goto LABEL_25;
  sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v25 = a1;
  v26 = a2;
  v27 = static NSObject.== infix(_:_:)(v26);

  if ((v27 & 1) == 0)
    goto LABEL_24;
  v28 = (char *)objc_msgSend(a3, "folder");
  a2 = v28;
  if (v28)
  {
    v29 = objc_msgSend(v28, "isTrashFolder");

    LOBYTE(a2) = v29 ^ 1;
  }
LABEL_25:
  *a4 = a2 & 1;
}

void sub_1001BBF20(void *a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  char v10;

  v5 = objc_msgSend(a1, "store");
  if (v5 && (v6 = v5, v7 = objc_msgSend(v5, "objectID"), v6, v7))
  {
    sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v8 = a2;
    v9 = v7;
    v10 = static NSObject.== infix(_:_:)(v9);

  }
  else
  {
    v10 = 0;
  }
  *a3 = v10 & 1;
}

void sub_1001BBFEC(void *a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  char v11;

  v5 = objc_msgSend(a1, "store");
  if (v5
    && (v6 = v5, v7 = objc_msgSend(v5, "account"), v6, v7)
    && (v8 = objc_msgSend(v7, "objectID"), v7, v8))
  {
    sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
    v9 = a2;
    v10 = v8;
    v11 = static NSObject.== infix(_:_:)(v10);

  }
  else
  {
    v11 = 0;
  }
  *a3 = v11 & 1;
}

void sub_1001BC0DC(void *a1@<X0>, void *a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;

  v6 = objc_msgSend(a1, "query");
  v7 = objc_msgSend(v6, "entityName");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = objc_allocWithZone((Class)NSFetchRequest);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v12 = objc_msgSend(v10, "initWithEntityName:", v11);

  objc_msgSend(v12, "setResultType:", 1);
  v13 = objc_msgSend(a1, "query");
  v14 = objc_msgSend(v13, "predicate");

  objc_msgSend(v12, "setPredicate:", v14);
  v15 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v16 = NSManagedObjectContext.fetch<A>(_:)(v12, v15);
  if (v3)
  {
    swift_errorRelease(v3);

    v17 = 0;
  }
  else
  {
    v18 = v16;
    v19 = objc_msgSend(a2, "objectID");
    v20 = sub_100263C7C((uint64_t)v19, v18);
    swift_bridgeObjectRelease(v18);

    v17 = v20 & 1;
  }
  *a3 = v17;
}

uint64_t type metadata accessor for FolderListSelectionValidator()
{
  return objc_opt_self(ICFolderListSelectionValidator);
}

id sub_1001BC334@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 16), "isDeleted");
  *a1 = (_BYTE)result;
  return result;
}

void sub_1001BC36C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1001BBB6C(*(void **)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), a1);
}

void sub_1001BC388(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1001BB9A8(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), a1);
}

void sub_1001BC3A4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1001BBFEC(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_1001BC3BC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1001BBF20(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

void sub_1001BC3D4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_1001BC0DC(*(void **)(v1 + 16), *(void **)(v1 + 32), a1);
}

id sub_1001BC3F0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001BC428(&OBJC_IVAR___ICFolderListSelectionValidator_htmlContext, a1);
}

id sub_1001BC40C@<X0>(_QWORD *a1@<X8>)
{
  return sub_1001BC428(&OBJC_IVAR___ICFolderListSelectionValidator_modernContext, a1);
}

id sub_1001BC428@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(v2 + 16) + *a1), "objectWithID:", *(_QWORD *)(v2 + 24));
  *a2 = result;
  return result;
}

void sub_1001BC470(_BYTE *a1@<X8>)
{
  sub_1001BC388(a1);
}

id sub_1001BC484(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v4[OBJC_IVAR___ICMovePreviewView_maximumImageViewsCount] = 3;
  *(_QWORD *)&v4[OBJC_IVAR___ICMovePreviewView_size] = 0x4046000000000000;
  *(_QWORD *)&v4[OBJC_IVAR___ICMovePreviewView_cornerRadius] = 0x4010000000000000;
  *(_QWORD *)&v4[OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMovePreviewView_modernContext] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMovePreviewView_htmlContext] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___ICMovePreviewView_objectIds] = _swiftEmptyArrayStorage;
  v16.receiver = v4;
  v16.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  sub_1001BC5D4();
  v11 = sub_100012E18(&qword_1005D2E70);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100451C20;
  *(_QWORD *)(v12 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v12 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v13 = UIView.registerForTraitChanges(_:action:)(v12, "reloadImages");

  swift_unknownObjectRelease(v13, v14);
  swift_bridgeObjectRelease(v12);
  return v10;
}

void sub_1001BC5D4()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;

  objc_msgSend(v0, "setClipsToBounds:", 1);
  objc_msgSend(v0, "ic_applyRoundedCornersWithRadius:", *(double *)&v0[OBJC_IVAR___ICMovePreviewView_cornerRadius]);
  v1 = sub_1001BC9CC();
  objc_msgSend(v0, "addSubview:", v1);

  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100012E18(&qword_1005CF6F0);
  v4 = swift_allocObject(v3, 56, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100454060;
  v5 = sub_1001BC9CC();
  v6 = objc_msgSend(v5, "topAnchor");

  v7 = objc_msgSend(v0, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = sub_1001BC9CC();
  v10 = objc_msgSend(v9, "leadingAnchor");

  v11 = objc_msgSend(v0, "leadingAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v4 + 40) = v12;
  v13 = sub_1001BC9CC();
  v14 = objc_msgSend(v13, "trailingAnchor");

  v15 = objc_msgSend(v0, "trailingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 48) = v16;
  specialized Array._endMutation()(v17);
  sub_1000163BC(0, (unint64_t *)&qword_1005D8F60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  objc_msgSend(v2, "activateConstraints:", isa);

}

id sub_1001BC83C(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR___ICMovePreviewView_maximumImageViewsCount] = 3;
  *(_QWORD *)&v1[OBJC_IVAR___ICMovePreviewView_size] = 0x4046000000000000;
  *(_QWORD *)&v1[OBJC_IVAR___ICMovePreviewView_cornerRadius] = 0x4010000000000000;
  *(_QWORD *)&v1[OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMovePreviewView_modernContext] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMovePreviewView_htmlContext] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___ICMovePreviewView_objectIds] = _swiftEmptyArrayStorage;
  v12.receiver = v1;
  v12.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v12, "initWithCoder:", a1);
  v5 = v4;
  if (v4)
  {
    v6 = v4;
    sub_1001BC5D4();
    v7 = sub_100012E18(&qword_1005D2E70);
    v8 = swift_allocObject(v7, 48, 7);
    *(_OWORD *)(v8 + 16) = xmmword_100451C20;
    *(_QWORD *)(v8 + 32) = type metadata accessor for UITraitUserInterfaceStyle(0);
    *(_QWORD *)(v8 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    v9 = UIView.registerForTraitChanges(_:action:)(v8, "reloadImages");

    swift_unknownObjectRelease(v9, v10);
    swift_bridgeObjectRelease(v8);
  }
  else
  {

  }
  return v5;
}

id sub_1001BC9CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___ICMovePreviewView____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setSpacing:", *(double *)(v0 + OBJC_IVAR___ICMovePreviewView_cornerRadius) * 1.5- *(double *)(v0 + OBJC_IVAR___ICMovePreviewView_size));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1001BCA98(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  double v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR___ICMovePreviewView_objectIds);
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v20 = *(_QWORD *)(v2 + OBJC_IVAR___ICMovePreviewView_objectIds);
    else
      v20 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + OBJC_IVAR___ICMovePreviewView_objectIds));
    v6 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = sub_1001BCD2C(a2);
  v8 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v7);

  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    v9 = 3;
    if (v6 < 3)
      v9 = v6;
    objc_msgSend(v8, "setAlpha:", 1.0 / (double)v9 * (double)(a1 + 1));
    objc_msgSend(v8, "ic_applyRoundedCornersWithRadius:", *(double *)(v2 + OBJC_IVAR___ICMovePreviewView_cornerRadius));
    if (objc_msgSend((id)objc_opt_self(UIDevice), "ic_isVision"))
      objc_msgSend(v8, "setOverrideUserInterfaceStyle:", 1);
    v10 = sub_1001BC9CC();
    objc_msgSend(v10, "addArrangedSubview:", v8);

    v11 = (void *)objc_opt_self(NSLayoutConstraint);
    v12 = sub_100012E18(&qword_1005CF6F0);
    v13 = swift_allocObject(v12, 48, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100451BF0;
    v14 = objc_msgSend(v8, "heightAnchor");
    v15 = *(double *)(v2 + OBJC_IVAR___ICMovePreviewView_size);
    v16 = objc_msgSend(v14, "constraintEqualToConstant:", v15);

    *(_QWORD *)(v13 + 32) = v16;
    v17 = objc_msgSend(v8, "widthAnchor");
    v18 = objc_msgSend(v17, "constraintEqualToConstant:", v15);

    *(_QWORD *)(v13 + 40) = v18;
    specialized Array._endMutation()(v19);
    sub_1000163BC(0, (unint64_t *)&qword_1005D8F60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v11, "activateConstraints:", isa);

  }
}

id sub_1001BCD2C(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  if (objc_msgSend(a1, "ic_isModernFolderType"))
  {
    v3 = *(void **)(v1 + OBJC_IVAR___ICMovePreviewView_modernContext);
    if (v3 && (v4 = objc_msgSend(v3, "objectWithID:", a1)) != 0)
    {
      v5 = v4;
      v6 = objc_opt_self(ICFolder);
      v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
      v8 = v7;
      if (v7)
      {
        v9 = objc_msgSend(v7, "navigationBarIconWithSize:", *(double *)(v1 + OBJC_IVAR___ICMovePreviewView_size), *(double *)(v1 + OBJC_IVAR___ICMovePreviewView_size));
        if (!v9)
          goto LABEL_14;
LABEL_12:
        v14 = v9;

        return v14;
      }

    }
    else
    {
      v8 = 0;
    }
LABEL_14:
    v15 = objc_msgSend((id)objc_opt_self(ICFolder), "defaultNavigationBarIcon");
LABEL_23:
    v14 = v15;

    return v14;
  }
  if (objc_msgSend(a1, "ic_isModernNoteType"))
  {
    v10 = *(void **)(v1 + OBJC_IVAR___ICMovePreviewView_modernContext);
    if (v10 && (v11 = objc_msgSend(v10, "objectWithID:", a1)) != 0)
    {
      v5 = v11;
      v12 = objc_opt_self(ICNote);
      v13 = (void *)swift_dynamicCastObjCClass(v5, v12);
      v8 = v13;
      if (v13)
      {
        v9 = objc_msgSend(v13, "navigationBarIconWithSize:", *(double *)(v1 + OBJC_IVAR___ICMovePreviewView_size), *(double *)(v1 + OBJC_IVAR___ICMovePreviewView_size));
        if (v9)
          goto LABEL_12;
      }
      else
      {

      }
    }
    else
    {
      v8 = 0;
    }
    v15 = objc_msgSend((id)objc_opt_self(ICNote), "defaultNavigationBarIcon");
    goto LABEL_23;
  }
  if (objc_msgSend(a1, "ic_isLegacyFolderType"))
  {
    v16 = objc_msgSend((id)objc_opt_self(ICFolder), "defaultNavigationBarIcon");
  }
  else
  {
    objc_msgSend(a1, "ic_isLegacyNoteType");
    v16 = objc_msgSend((id)objc_opt_self(ICNote), "defaultNavigationBarIcon");
  }
  return v16;
}

void sub_1001BD0B0()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v1 = sub_1001BC9CC();
  v2 = objc_msgSend(v1, "arrangedSubviews");

  v3 = sub_1000163BC(0, (unint64_t *)&qword_1005D8340, UIView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v9 = v4;
    else
      v9 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v9);
    if (!v5)
      goto LABEL_13;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v5)
      goto LABEL_13;
  }
  if (v5 < 1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v7 = *(id *)(v4 + 8 * i + 32);
    v8 = v7;
    objc_msgSend(v7, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v4, 2);
  v10 = *(_QWORD *)&v0[OBJC_IVAR___ICMovePreviewView_objectIds];
  swift_bridgeObjectRetain(v10);
  v11 = sub_10036ED14(3, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease(v10);
  v19 = __OFSUB__(v17 >> 1, v15);
  v20 = (v17 >> 1) - v15;
  if (!v20)
  {
LABEL_19:
    swift_unknownObjectRelease(v11, v18);
    return;
  }
  if (!((v20 < 0) ^ v19 | (v20 == 0)))
  {
    v21 = v0;
    v22 = 0;
    v23 = v13 + 8 * v15;
    while (!__OFADD__(v22, 1))
    {
      v24 = *(id *)(v23 + 8 * v22);
      sub_1001BCA98(v22, v24);

      if (v20 == ++v22)
      {

        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
}

uint64_t type metadata accessor for MovePreviewView()
{
  return objc_opt_self(ICMovePreviewView);
}

uint64_t static ChecklistItemID.uriTypeName.getter()
{
  return 0x73696C6B63656863;
}

uint64_t ChecklistItemID.contextType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = enum case for ManagedEntityContextType.modern(_:);
  v3 = type metadata accessor for ManagedEntityContextType(0);
  v4 = *(_QWORD *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(a1, v2, v3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
}

uint64_t ChecklistItemID.noteObjectURI.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ChecklistItemID.noteObjectURI.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t ChecklistItemID.paragraphUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for ChecklistItemID(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D2F60;
  if (!qword_1005D2F60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChecklistItemID);
  return result;
}

uint64_t ChecklistItemID.paragraphUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ChecklistItemID.paragraphUUID.modify())()
{
  type metadata accessor for ChecklistItemID(0);
  return ICCloudSyncingObject.MoveAction.Types.rawValue.getter;
}

uint64_t ChecklistItemID.init(noteObjectID:paragraphUUID:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  uint64_t v7;
  uint64_t v8;

  v6 = objc_msgSend(a1, "URIRepresentation");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v6);

  v7 = a3 + *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  v8 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a2, v8);
}

uint64_t ChecklistItemID.init(noteManagedIdentifier:paragraphIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a1;
  v36 = a4;
  v33 = a3;
  v37 = a5;
  v6 = sub_100012E18((uint64_t *)&unk_1005D06A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v32 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ChecklistItemID(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(v35, a2);
  swift_bridgeObjectRelease(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_bridgeObjectRelease(v36);
    v22 = &qword_1005CEFD0;
    v23 = (uint64_t)v13;
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v24(v17, v13, v14);
    v25 = v36;
    UUID.init(uuidString:)(v33, v36);
    swift_bridgeObjectRelease(v25);
    v26 = v34;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v34) != 1)
    {
      v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v30 = v32;
      v29(v32, v8, v26);
      v24(v21, v17, v14);
      v29(&v21[*(int *)(v18 + 20)], v30, v26);
      v28 = v37;
      sub_1001BD828((uint64_t)v21, v37);
      v27 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v28, v27, 1, v18);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v22 = (uint64_t *)&unk_1005D06A0;
    v23 = (uint64_t)v8;
  }
  sub_100012DDC(v23, v22);
  v27 = 1;
  v28 = v37;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v28, v27, 1, v18);
}

uint64_t sub_1001BD828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ChecklistItemID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ChecklistItemID.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for ChecklistItemID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a2, 1, 1, v5);
}

uint64_t ChecklistItemID.note(in:)@<X0>(void *a1@<X0>, NSURL *a2@<X8>)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t result;
  __objc2_prot *v10;

  URL._bridgeToObjectiveC()(a2);
  v4 = v3;
  v5 = objc_msgSend(a1, "managedObjectIDForURIRepresentation:", v3);

  if (v5)
  {
    v6 = objc_msgSend(a1, "managedObjectContextForObjectID:", v5);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "objectWithID:", v5);

      if (v8)
      {
        v10 = &OBJC_PROTOCOL___ICSearchIndexableNote;
        result = swift_dynamicCastObjCProtocolConditional(v8, 1, &v10);
        if (result)
          return result;

      }
    }
    else
    {

    }
  }
  return 0;
}

uint64_t ChecklistItemID.hash(into:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for URL(0);
  v3 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
  type metadata accessor for ChecklistItemID(0);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_100019C6C((unint64_t *)&qword_1005D8AD0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
}

uint64_t static ChecklistItemID.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((static URL.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for ChecklistItemID(0) + 20);
  return static UUID.== infix(_:_:)(a1 + v4, a2 + v4);
}

Swift::Int ChecklistItemID.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v0 = type metadata accessor for URL(0);
  v1 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v5, v0, v1);
  type metadata accessor for ChecklistItemID(0);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_100019C6C((unint64_t *)&qword_1005D8AD0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v5, v2, v3);
  return Hasher._finalize()();
}

unint64_t ChecklistItemID.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  unint64_t v28;
  unint64_t v29;

  v0 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ManagedEntityContextType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for ManagedEntityContextType.modern(_:), v3);
  v8 = ManagedEntityContextType.rawValue.getter(v7);
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v28 = v8;
  v29 = v10;
  v11 = String.init<A>(reflecting:)(&v28, &type metadata for String);
  v13 = v12;
  ChecklistItemID.uriRepresentation.getter((uint64_t)v2);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v2, 1, v14);
  if ((_DWORD)v16 == 1)
  {
    sub_100012DDC((uint64_t)v2, &qword_1005CEFD0);
    v17 = 0;
    v18 = 0xE000000000000000;
  }
  else
  {
    v17 = URL.absoluteString.getter(v16);
    v18 = v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v14);
  }
  v28 = v17;
  v29 = v18;
  v20 = String.init<A>(reflecting:)(&v28, &type metadata for String);
  v22 = v21;
  v28 = 0;
  v29 = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  swift_bridgeObjectRelease(v29);
  v28 = 0xD00000000000001DLL;
  v29 = 0x8000000100480C60;
  v23._countAndFlagsBits = v11;
  v23._object = v13;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v13);
  v24._countAndFlagsBits = 0x203A697275202CLL;
  v24._object = (void *)0xE700000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = v20;
  v25._object = v22;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v22);
  v26._countAndFlagsBits = 41;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  return v28;
}

uint64_t ChecklistItemID.entityIdentifierString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v0);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChecklistItemID.uriRepresentation.getter((uint64_t)v2);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if ((_DWORD)v5 == 1)
  {
    sub_100012DDC((uint64_t)v2, &qword_1005CEFD0);
    return 0;
  }
  else
  {
    v6 = URL.absoluteString.getter(v5);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v6;
}

uint64_t static ChecklistItemID.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t result;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  Swift::String v67;
  Swift::Bool v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t (**v79)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(unint64_t *, _QWORD);
  char *v95;
  uint64_t v96;
  char *v97;
  void (*v98)(unint64_t *__return_ptr, char *);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  unint64_t v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(char *, uint64_t);
  char v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unint64_t v166;
  char v167;
  _QWORD v168[2];
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;

  v6 = sub_100012E18(&qword_1005D1080);
  __chkstk_darwin(v6);
  v142 = (char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ManagedEntityContextType(0);
  v143 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v141 = (char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v136 - v11;
  v156 = type metadata accessor for FilePath.Component(0);
  v160 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v144 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for FilePath.ComponentView.Index(0);
  v153 = *(_QWORD *)(v154 - 8);
  v14 = __chkstk_darwin(v154);
  v151 = (char *)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v150 = (char *)&v136 - v16;
  v17 = sub_100012E18(&qword_1005D2E78);
  v18 = __chkstk_darwin(v17);
  v155 = (uint64_t)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v159 = (char *)&v136 - v20;
  v21 = sub_100012E18(&qword_1005D2E80);
  __chkstk_darwin(v21);
  v149 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = type metadata accessor for FilePath.ComponentView(0);
  v158 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v161 = (char *)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100012E18(&qword_1005D2E88);
  __chkstk_darwin(v146);
  v147 = (char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_100012E18(&qword_1005D2E90);
  __chkstk_darwin(v148);
  v157 = (char *)&v136 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100012E18(&qword_1005D2E98);
  __chkstk_darwin(v26);
  v145 = (char *)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FilePath(0);
  v163 = *(_QWORD *)(v28 - 8);
  v164 = v28;
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v136 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v162 = (char *)&v136 - v32;
  v33 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v33);
  v35 = (char *)&v136 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = a1;
  v172 = a2;
  v169 = 58;
  v170 = 0xE100000000000000;
  v36 = sub_1001BFF58();
  v37 = sub_1001BFF9C();
  BidirectionalCollection<>.firstRange<A>(of:)(&v165, &v169, &type metadata for String, &type metadata for String, v36, v37, &protocol witness table for Character);
  if ((v167 & 1) != 0)
  {
    v38 = type metadata accessor for ChecklistItemID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a3, 1, 1, v38);
  }
  v137 = v12;
  v138 = v8;
  v140 = a3;
  v40 = v165;
  v139 = v166;
  swift_bridgeObjectRetain(a2);
  v41 = String.subscript.getter(15, v40, a1, a2);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  swift_bridgeObjectRelease(a2);
  static String._fromSubstring(_:)(v41, v43, v45, v47);
  v49 = v48;
  swift_bridgeObjectRelease(v47);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  LODWORD(v49) = ICIsNotesURLScheme(v50);

  if (!(_DWORD)v49)
    goto LABEL_36;
  URL.init(string:)(a1, a2);
  sub_100012DDC((uint64_t)v35, &qword_1005CEFD0);
  v169 = a1;
  v170 = a2;
  v168[0] = 63;
  v168[1] = 0xE100000000000000;
  BidirectionalCollection<>.firstRange<A>(of:)(&v165, v168, &type metadata for String, &type metadata for String, v36, v37, &protocol witness table for Character);
  if ((v167 & 1) != 0)
  {
    swift_bridgeObjectRetain(a2);
    v51 = sub_1001BF074(v139, a1, a2);
    v53 = v52;
    v55 = v54;
    v57 = v56;
    swift_bridgeObjectRelease(a2);
    v58 = static String._fromSubstring(_:)(v51, v53, v55, v57);
    v60 = v59;
    v61 = v161;
  }
  else
  {
    result = v139;
    v61 = v161;
    if (v165 >> 14 < v139 >> 14)
    {
      __break(1u);
      return result;
    }
    v62 = String.subscript.getter(v139, v165, a1, a2);
    v57 = v63;
    v58 = static String._fromSubstring(_:)(v62, v64, v65, v63);
    v60 = v66;
  }
  swift_bridgeObjectRelease(v57);
  v171 = v58;
  v172 = v60;
  swift_bridgeObjectRetain(v60);
  v67._countAndFlagsBits = 12079;
  v67._object = (void *)0xE200000000000000;
  v68 = String.hasPrefix(_:)(v67);
  swift_bridgeObjectRelease(v60);
  v69 = v164;
  v70 = v152;
  v71 = v158;
  if (v68)
    sub_1001BF0C0(2);
  v72 = v162;
  FilePath.init(_:)(v171, v172);
  v73 = type metadata accessor for FilePath.Root(0);
  v74 = v145;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v145, 1, 1, v73);
  FilePath.root.setter(v74);
  v75 = (*(uint64_t (**)(char *, char *, uint64_t))(v163 + 16))(v31, v72, v69);
  FilePath.components.getter(v75);
  v76 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
  v77 = (uint64_t)v149;
  v76(v149, v61, v70);
  v78 = v147;
  v145 = *(char **)(v71 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v145)(v147, v77, v70);
  v79 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v78[*(int *)(v146 + 44)];
  *v79 = sub_1001BF134;
  v79[1] = 0;
  sub_100012DDC(v77, &qword_1005D2E80);
  v76(v61, v78, v70);
  sub_100019C6C(&qword_1005D2EB0, (uint64_t (*)(uint64_t))&type metadata accessor for FilePath.ComponentView, (uint64_t)&protocol conformance descriptor for FilePath.ComponentView);
  v80 = v157;
  dispatch thunk of Sequence.makeIterator()(v70);
  v81 = &v80[*(int *)(v148 + 44)];
  *(_OWORD *)v81 = *(_OWORD *)v79;
  v82 = &v80[*(int *)(sub_100012E18(&qword_1005D2EB8) + 36)];
  v83 = v153;
  v84 = v150;
  v85 = v70;
  v86 = v154;
  (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v150, v82, v154);
  v87 = sub_100019C6C(&qword_1005D2EC0, (uint64_t (*)(uint64_t))&type metadata accessor for FilePath.ComponentView, (uint64_t)&protocol conformance descriptor for FilePath.ComponentView);
  v88 = v151;
  dispatch thunk of Collection.endIndex.getter(v85);
  v89 = sub_100019C6C(&qword_1005D2EC8, (uint64_t (*)(uint64_t))&type metadata accessor for FilePath.ComponentView.Index, (uint64_t)&protocol conformance descriptor for FilePath.ComponentView.Index);
  LOBYTE(v77) = dispatch thunk of static Equatable.== infix(_:_:)(v84, v88, v86, v89);
  v90 = *(void (**)(char *, uint64_t))(v83 + 8);
  v90(v88, v86);
  v90(v84, v86);
  v91 = 1;
  v92 = (uint64_t)v80;
  v93 = v156;
  if ((v77 & 1) == 0)
  {
    v94 = (void (*)(unint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v165, v82, v85, v87);
    (*(void (**)(char *))(v160 + 16))(v159);
    v94(&v165, 0);
    v95 = v161;
    ((void (*)(char *, uint64_t, uint64_t))v145)(v161, v92, v85);
    dispatch thunk of Collection.formIndex(after:)(v82, v85, v87);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v95, v85);
    v91 = 0;
  }
  v97 = v159;
  v96 = v160;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v159, v91, 1, v93);
  v98 = *(void (**)(unint64_t *__return_ptr, char *))v81;
  v99 = (uint64_t)v97;
  v100 = v155;
  sub_10014BD1C(v99, v155, &qword_1005D2E78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v100, 1, v93) != 1)
  {
    v101 = v144;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v144, v100, v93);
    v98(&v165, v101);
    v103 = v165;
    v102 = v166;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v101, v93);
    if (v103 == 0x73696C6B63656863 && v102 == 0xED00006D65746974)
    {
      swift_bridgeObjectRelease(0xED00006D65746974);
    }
    else
    {
      v104 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73696C6B63656863, 0xED00006D65746974, v103, v102, 0);
      swift_bridgeObjectRelease(v102);
      if ((v104 & 1) == 0)
        goto LABEL_35;
    }
    v105 = sub_1001BF220();
    if (v106)
    {
      v107 = v106;
      v165 = v105;
      v166 = v106;
      v108 = sub_1001452E8();
      v109 = StringProtocol.removingPercentEncoding.getter(&type metadata for String, v108);
      v111 = v110;
      swift_bridgeObjectRelease(v107);
      if (v111)
      {
        v112 = swift_bridgeObjectRetain(v111);
        v113 = (uint64_t)v142;
        ManagedEntityContextType.init(rawValue:)(v109, v111, v112);
        v114 = v143;
        v115 = v138;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v113, 1, v138) == 1)
        {
          sub_100012DDC(v113, &qword_1005D1080);
          v116 = sub_1001BF220();
          if (v117)
          {
            ChecklistItemID.init(noteManagedIdentifier:paragraphIdentifier:)(v109, v111, v116, v117, v140);
            v118 = v92;
LABEL_31:
            sub_100012DDC(v118, &qword_1005D2E90);
            return (*(uint64_t (**)(char *, uint64_t))(v163 + 8))(v162, v164);
          }
          swift_bridgeObjectRelease(v111);
          goto LABEL_35;
        }
        swift_bridgeObjectRelease(v111);
        v119 = v137;
        (*(void (**)(char *, uint64_t, uint64_t))(v114 + 32))(v137, v113, v115);
        v120 = sub_1001BF220();
        if (v121)
        {
          v122 = v121;
          v165 = v120;
          v166 = v121;
          v123 = StringProtocol.removingPercentEncoding.getter(&type metadata for String, v108);
          v125 = v124;
          swift_bridgeObjectRelease(v122);
          if (v125)
          {
            v126 = sub_1001BF220();
            if (v127)
            {
              v128 = v126;
              v129 = v127;
              (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v141, enum case for ManagedEntityContextType.modern(_:), v115);
              v130 = sub_100019C6C(&qword_1005D2ED8, (uint64_t (*)(uint64_t))&type metadata accessor for ManagedEntityContextType, (uint64_t)&protocol conformance descriptor for ManagedEntityContextType);
              dispatch thunk of RawRepresentable.rawValue.getter(&v165, v115, v130);
              dispatch thunk of RawRepresentable.rawValue.getter(&v169, v115, v130);
              v131 = v166;
              v132 = v170;
              if (v165 == v169 && v166 == v170)
              {
                swift_bridgeObjectRelease_n(v166, 2);
                v133 = *(void (**)(char *, uint64_t))(v143 + 8);
                v115 = v138;
                v133(v141, v138);
LABEL_30:
                ChecklistItemID.init(noteManagedIdentifier:paragraphIdentifier:)(v123, v125, v128, v129, v140);
                v133(v119, v115);
                v118 = (uint64_t)v157;
                goto LABEL_31;
              }
              v134 = _stringCompareWithSmolCheck(_:_:expecting:)(v165, v166, v169, v170, 0);
              swift_bridgeObjectRelease(v131);
              swift_bridgeObjectRelease(v132);
              v133 = *(void (**)(char *, uint64_t))(v143 + 8);
              v115 = v138;
              v133(v141, v138);
              if ((v134 & 1) != 0)
                goto LABEL_30;
              swift_bridgeObjectRelease(v129);
              v92 = (uint64_t)v157;
            }
            swift_bridgeObjectRelease(v125);
            v114 = v143;
          }
        }
        (*(void (**)(char *, uint64_t))(v114 + 8))(v119, v115);
      }
    }
  }
LABEL_35:
  sub_100012DDC(v92, &qword_1005D2E90);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v162, v164);
LABEL_36:
  v135 = type metadata accessor for ChecklistItemID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v140, 1, 1, v135);
}

Swift::Int sub_1001BEB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  v0 = type metadata accessor for URL(0);
  v1 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v5, v0, v1);
  v2 = type metadata accessor for UUID(0);
  v3 = sub_100019C6C((unint64_t *)&qword_1005D8AD0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v5, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1001BEC00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for URL(0);
  v3 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_100019C6C((unint64_t *)&qword_1005D8AD0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v4, v5);
}

Swift::Int sub_1001BECA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  v1 = type metadata accessor for URL(0);
  v2 = sub_100019C6C((unint64_t *)&unk_1005CF700, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v6, v1, v2);
  v3 = type metadata accessor for UUID(0);
  v4 = sub_100019C6C((unint64_t *)&qword_1005D8AD0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v6, v3, v4);
  return Hasher._finalize()();
}

uint64_t sub_1001BED54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static URL.== infix(_:_:)() & 1) != 0)
    return static UUID.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
  else
    return 0;
}

uint64_t sub_1001BEDA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v43 = a2;
  v41 = sub_100012E18(&qword_1005D2FA0);
  v5 = __chkstk_darwin(v41);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v34 - v8;
  v10 = type metadata accessor for AttributedString.Index(0);
  v39 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100012E18(&qword_1005D7AF0);
  v13 = __chkstk_darwin(v40);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v34 - v16;
  v18 = type metadata accessor for AttributedString.CharacterView(0);
  v19 = sub_100019C6C((unint64_t *)&unk_1005D1F30, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
  v42 = v18;
  v38 = v19;
  dispatch thunk of Collection.endIndex.getter(v18);
  v20 = sub_100019C6C(&qword_1005D2FA8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.Index, (uint64_t)&protocol conformance descriptor for AttributedString.Index);
  result = dispatch thunk of static Comparable.<= infix(_:_:)(a1, v12, v10, v20);
  if ((result & 1) != 0)
  {
    v35 = v15;
    v36 = v17;
    v22 = v9;
    v23 = v41;
    v24 = &v22[*(int *)(v41 + 48)];
    v37 = v3;
    v25 = v7;
    v26 = v39;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    v27(v22, a1, v10);
    v28 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v28(v24, v12, v10);
    v29 = &v25[*(int *)(v23 + 48)];
    v27(v25, (uint64_t)v22, v10);
    v27(v29, (uint64_t)v24, v10);
    v30 = (uint64_t)v35;
    v28(v35, v25, v10);
    v31 = *(void (**)(char *, uint64_t))(v26 + 8);
    v31(v29, v10);
    v32 = &v25[*(int *)(v23 + 48)];
    v28(v25, v22, v10);
    v28(v32, v24, v10);
    v28((char *)(v30 + *(int *)(v40 + 36)), v32, v10);
    v31(v25, v10);
    v33 = (uint64_t)v36;
    sub_10014BD1C(v30, (uint64_t)v36, &qword_1005D7AF0);
    dispatch thunk of Collection.subscript.getter(v33, v42, v38);
    return sub_100012DDC(v33, &qword_1005D7AF0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1001BF074(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return String.subscript.getter();
  __break(1u);
  return result;
}

uint64_t sub_1001BF0C0(uint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (result)
  {
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      v2 = v1[1];
      v3 = HIBYTE(v2) & 0xF;
      if ((v2 & 0x2000000000000000) == 0)
        v3 = *v1;
      v4 = 7;
      if (((v2 >> 60) & ((*v1 & 0x800000000000000) == 0)) != 0)
        v4 = 11;
      result = String.index(_:offsetBy:limitedBy:)(15, result, v4 | (v3 << 16));
      if ((v5 & 1) == 0)
        return String.removeSubrange(_:)(15, result);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BF134@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v4 = type metadata accessor for FilePath.Component(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = FilePath.Component.string.getter(v6);
  v11 = v10;
  v19[0] = v9;
  v19[1] = v10;
  v12 = sub_1001452E8();
  v13 = StringProtocol.removingPercentEncoding.getter(&type metadata for String, v12);
  v15 = v14;
  swift_bridgeObjectRelease(v11);
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if (!v15)
  {
    v13 = FilePath.Component.string.getter(v16);
    v15 = v17;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v13;
  a2[1] = v15;
  return result;
}

uint64_t sub_1001BF220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, _QWORD);
  char *v28;
  uint64_t v29;
  void (*v30)(uint64_t *__return_ptr, char *);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = type metadata accessor for FilePath.Component(0);
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  __chkstk_darwin(v1);
  v37 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FilePath.ComponentView(0);
  v36 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v35 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FilePath.ComponentView.Index(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v35 - v10;
  v12 = sub_100012E18(&qword_1005D2E78);
  v13 = __chkstk_darwin(v12);
  v38 = (uint64_t)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - v15;
  v17 = v0 + *(int *)(sub_100012E18(&qword_1005D2EB8) + 36);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, v17, v5);
  v18 = sub_100019C6C(&qword_1005D2EC0, (uint64_t (*)(uint64_t))&type metadata accessor for FilePath.ComponentView, (uint64_t)&protocol conformance descriptor for FilePath.ComponentView);
  v19 = v0;
  dispatch thunk of Collection.endIndex.getter(v3);
  v20 = sub_100019C6C(&qword_1005D2EC8, (uint64_t (*)(uint64_t))&type metadata accessor for FilePath.ComponentView.Index, (uint64_t)&protocol conformance descriptor for FilePath.ComponentView.Index);
  v21 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v9, v5, v20);
  v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v9, v5);
  v22(v11, v5);
  if ((v21 & 1) != 0)
  {
    v23 = 1;
    v25 = v39;
    v24 = v40;
  }
  else
  {
    v26 = v19;
    v27 = (void (*)(uint64_t *, _QWORD))dispatch thunk of Collection.subscript.read(&v41, v17, v3, v18);
    v25 = v39;
    v24 = v40;
    (*(void (**)(char *))(v39 + 16))(v16);
    v27(&v41, 0);
    v28 = v35;
    v29 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v35, v26, v3);
    dispatch thunk of Collection.formIndex(after:)(v17, v3, v18);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v3);
    v23 = 0;
    v19 = v26;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v16, v23, 1, v24);
  v30 = *(void (**)(uint64_t *__return_ptr, char *))(v19 + *(int *)(sub_100012E18(&qword_1005D2E90) + 44));
  v31 = v38;
  sub_10014BD1C((uint64_t)v16, v38, &qword_1005D2E78);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v31, 1, v24) == 1)
    return 0;
  v33 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v37, v31, v24);
  v30(&v41, v33);
  v32 = v41;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v24);
  return v32;
}

uint64_t sub_1001BF578(uint64_t result)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  void (*v10)(void **__return_ptr, uint64_t *);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;

  v2 = v1;
  v3 = *v1;
  if ((*v1 & 0x8000000000000000) == 0)
  {
    v5 = v1[3];
    v4 = v2[4];
    if (v4)
    {
      v6 = (v4 - 1) & v4;
      v7 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_4:
      v8 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v7);
      v9 = v8;
      goto LABEL_5;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    v15 = (unint64_t)(v2[2] + 64) >> 6;
    if (v14 >= v15)
    {
      v8 = 0;
      v6 = 0;
      goto LABEL_5;
    }
    v16 = v2[1];
    v17 = *(_QWORD *)(v16 + 8 * v14);
    if (v17)
    {
LABEL_14:
      v6 = (v17 - 1) & v17;
      v7 = __clz(__rbit64(v17)) + (v14 << 6);
      v5 = v14;
      goto LABEL_4;
    }
    v18 = v5 + 2;
    if (v5 + 2 >= v15)
      goto LABEL_30;
    v17 = *(_QWORD *)(v16 + 8 * v18);
    if (v17)
    {
LABEL_18:
      v14 = v18;
      goto LABEL_14;
    }
    if (v5 + 3 < v15)
    {
      v17 = *(_QWORD *)(v16 + 8 * (v5 + 3));
      if (v17)
      {
        v14 = v5 + 3;
        goto LABEL_14;
      }
      v18 = v5 + 4;
      if (v5 + 4 >= v15)
      {
        v8 = 0;
        v6 = 0;
        v5 += 3;
LABEL_5:
        v2[3] = v5;
        v2[4] = v6;
        if (v8)
        {
LABEL_6:
          v10 = (void (*)(void **__return_ptr, uint64_t *))v2[5];
          v21 = (uint64_t)v8;
          v10(&v20, &v21);

          return (uint64_t)v20;
        }
        return 0;
      }
      v17 = *(_QWORD *)(v16 + 8 * v18);
      if (v17)
        goto LABEL_18;
      v14 = v5 + 5;
      if (v5 + 5 < v15)
      {
        v17 = *(_QWORD *)(v16 + 8 * v14);
        if (v17)
          goto LABEL_14;
        v14 = v15 - 1;
        v19 = v5 + 6;
        while (v15 != v19)
        {
          v17 = *(_QWORD *)(v16 + 8 * v19++);
          if (v17)
          {
            v14 = v19 - 1;
            goto LABEL_14;
          }
        }
LABEL_30:
        v8 = 0;
        v6 = 0;
        v5 = v14;
        goto LABEL_5;
      }
    }
    v8 = 0;
    v6 = 0;
    v5 = v18;
    goto LABEL_5;
  }
  result = __CocoaSet.Iterator.next()(result);
  if (!result)
    return result;
  v11 = result;
  v21 = result;
  v12 = sub_1001C0510();
  swift_unknownObjectRetain(v11);
  swift_dynamicCast(&v20, &v21, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
  v8 = v20;
  swift_unknownObjectRelease(v11, v13);
  if (v8)
    goto LABEL_6;
  return 0;
}

uint64_t ChecklistItemID.uriRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  id v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v122 = a1;
  v1 = type metadata accessor for URLComponents(0);
  v116 = *(_QWORD *)(v1 - 8);
  v117 = v1;
  __chkstk_darwin(v1);
  v115 = (char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ManagedEntityContextType(0);
  v111 = *(_QWORD *)(v3 - 8);
  v112 = v3;
  __chkstk_darwin(v3);
  v110 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100012E18(&qword_1005D2E98);
  __chkstk_darwin(v5);
  v109 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for FilePath(0);
  v114 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v113 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for CharacterSet(0);
  v119 = *(void (**)(char *, char *, uint64_t))(v8 - 8);
  v120 = v8;
  __chkstk_darwin(v8);
  v121 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D2E78);
  v11 = __chkstk_darwin(v10);
  v108 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v118 = (char *)&v99 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v99 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v99 - v18;
  v20 = type metadata accessor for FilePath.Component(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v99 - v26;
  v28 = __chkstk_darwin(v25);
  v30 = (char *)&v99 - v29;
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v99 - v32;
  __chkstk_darwin(v31);
  v35 = (char *)&v99 - v34;
  FilePath.Component.init(_:)(0x73696C6B63656863, 0xED00006D65746974);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v36(v19, 1, v20) == 1)
    goto LABEL_12;
  v105 = v17;
  v103 = (uint64_t (*)(char *, uint64_t, uint64_t))v36;
  v100 = v27;
  v101 = v24;
  v102 = v30;
  v104 = v33;
  v37 = *(uint64_t (**)(char *, char *, uint64_t))(v21 + 32);
  v106 = v35;
  v38 = v37(v35, v19, v20);
  v123 = URL.absoluteString.getter(v38);
  v124 = v39;
  v40 = (void *)objc_opt_self(NSCharacterSet);
  v41 = objc_msgSend(v40, "ic_uriIdentifierAllowedCharacterSet");
  v42 = v121;
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  v43 = sub_1001452E8();
  v44 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v42, &type metadata for String, v43);
  v46 = v45;
  v47 = (void (*)(char *, uint64_t))*((_QWORD *)v119 + 1);
  v48 = v42;
  v49 = v120;
  v47(v48, v120);
  swift_bridgeObjectRelease(v124);
  if (!v46)
  {
    v19 = v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v105, 1, 1, v20);
    goto LABEL_9;
  }
  v119 = (void (*)(char *, char *, uint64_t))v37;
  v50 = v44;
  v19 = v105;
  FilePath.Component.init(_:)(v50, v46);
  v51 = v103;
  if (v103(v19, 1, v20) == 1)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v21 + 8))(v106, v20);
LABEL_12:
    v82 = v122;
    sub_100012DDC((uint64_t)v19, &qword_1005D2E78);
    v83 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 1, 1, v83);
  }
  v119(v104, v19, v20);
  type metadata accessor for ChecklistItemID(0);
  v123 = UUID.uuidString.getter();
  v124 = v52;
  v53 = objc_msgSend(v40, "ic_uriIdentifierAllowedCharacterSet");
  v54 = v121;
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  v55 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v54, &type metadata for String, v43);
  v57 = v56;
  v47(v54, v49);
  swift_bridgeObjectRelease(v124);
  if (!v57)
  {
    v58 = v118;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v118, 1, 1, v20);
    v60 = v106;
    goto LABEL_11;
  }
  v58 = v118;
  FilePath.Component.init(_:)(v55, v57);
  v59 = v51(v58, 1, v20);
  v60 = v106;
  if (v59 == 1)
  {
LABEL_11:
    v81 = *(void (**)(char *, uint64_t))(v21 + 8);
    v81(v104, v20);
    v19 = v58;
    v81(v60, v20);
    goto LABEL_12;
  }
  v119(v102, v58, v20);
  v61 = type metadata accessor for FilePath.Root(0);
  v62 = v109;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v109, 1, 1, v61);
  v63 = sub_100012E18((uint64_t *)&unk_1005D2EE0);
  v64 = *(unsigned __int8 *)(v21 + 80);
  v65 = (v64 + 32) & ~v64;
  v66 = swift_allocObject(v63, v65 + *(_QWORD *)(v21 + 72), v64 | 7);
  *(_OWORD *)(v66 + 16) = xmmword_100451C20;
  v67 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 16);
  v67(v66 + v65, v60, v20);
  v68 = v113;
  FilePath.init(root:components:)(v62, v66);
  v69 = v110;
  v70 = v111;
  v71 = v112;
  v72 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v111 + 104))(v110, enum case for ManagedEntityContextType.modern(_:), v112);
  v73 = (uint64_t)v108;
  ManagedEntityContextType.uriPathComponent.getter(v72);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v71);
  v74 = v51((char *)v73, 1, v20);
  v99 = v21;
  if (v74 == 1)
  {
    sub_100012DDC(v73, &qword_1005D2E78);
    v76 = v116;
    v75 = v117;
    v77 = v115;
    v78 = v20;
    v79 = v104;
    v80 = v101;
  }
  else
  {
    v85 = v100;
    v119(v100, (char *)v73, v20);
    v86 = v101;
    v67((uint64_t)v101, v85, v20);
    FilePath.append(_:)(v86);
    v80 = v86;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v85, v20);
    v76 = v116;
    v75 = v117;
    v77 = v115;
    v78 = v20;
    v79 = v104;
  }
  v67((uint64_t)v80, v79, v78);
  FilePath.append(_:)(v80);
  v87 = v102;
  v67((uint64_t)v80, v102, v78);
  v88 = FilePath.append(_:)(v80);
  v89 = URLComponents.init()(v88);
  v90 = v79;
  v91 = (id)ICNotesAppURLScheme(v89);
  v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v91);
  v94 = v93;

  v95 = URLComponents.scheme.setter(v92, v94);
  v96 = FilePath.string.getter(v95);
  v97 = URLComponents.path.setter(v96);
  URLComponents.url.getter(v97);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v75);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v68, v107);
  v98 = *(void (**)(char *, uint64_t))(v99 + 8);
  v98(v87, v78);
  v98(v90, v78);
  return ((uint64_t (*)(char *, uint64_t))v98)(v106, v78);
}

unint64_t sub_1001BFF58()
{
  unint64_t result;

  result = qword_1005D2EA0;
  if (!qword_1005D2EA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005D2EA0);
  }
  return result;
}

unint64_t sub_1001BFF9C()
{
  unint64_t result;

  result = qword_1005D2EA8;
  if (!qword_1005D2EA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005D2EA8);
  }
  return result;
}

uint64_t sub_1001BFFE0()
{
  return sub_100019C6C(&qword_1005D8720, type metadata accessor for ChecklistItemID, (uint64_t)&protocol conformance descriptor for ChecklistItemID);
}

uint64_t sub_1001C000C()
{
  return sub_100019C6C((unint64_t *)&unk_1005D2EF0, type metadata accessor for ChecklistItemID, (uint64_t)&protocol conformance descriptor for ChecklistItemID);
}

uint64_t sub_1001C0038()
{
  return sub_100019C6C(&qword_1005D8740, type metadata accessor for ChecklistItemID, (uint64_t)&protocol conformance descriptor for ChecklistItemID);
}

uint64_t sub_1001C0064()
{
  return sub_100019C6C(&qword_1005D2F00, type metadata accessor for ChecklistItemID, (uint64_t)&protocol conformance descriptor for ChecklistItemID);
}

uint64_t *initializeBufferWithCopyOfBuffer for ChecklistItemID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for ChecklistItemID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C0390);
}

uint64_t sub_1001C0390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ChecklistItemID(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C0410);
}

uint64_t sub_1001C0410(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for UUID(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1001C048C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1001C0510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D8AB0;
  if (!qword_1005D8AB0)
  {
    v1 = objc_opt_self(ICNoteEditorViewController);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D8AB0);
  }
  return result;
}

uint64_t sub_1001C054C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v1[3] = v0;
  v2 = sub_100012E18(qword_1005D2FB8);
  v1[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0);
  v1[5] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[6] = v4;
  v1[7] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v1[8] = v5;
  v1[9] = static MainActor.shared.getter(v5);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor, v6);
  v1[10] = v7;
  v1[11] = v8;
  return swift_task_switch(sub_1001C0608, v7, v8);
}

uint64_t sub_1001C0608()
{
  uint64_t v0;
  uint64_t v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  if (objc_msgSend(*(id *)(v0 + 24), "isReadyForDelayedLaunchTasks"))
  {
    swift_release(*(_QWORD *)(v0 + 72));
    v1 = *(_QWORD *)(v0 + 32);
    swift_task_dealloc(*(_QWORD *)(v0 + 56));
    swift_task_dealloc(v1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    NSNotificationCenter.notifications(named:object:)(CFSTR("ICAppDelegateWillRunDelayedLaunchTasks"), 0);

    v4 = NSNotificationCenter.Notifications.makeAsyncIterator()();
    *(_QWORD *)(v0 + 96) = static MainActor.shared.getter(v4);
    v5 = sub_1001C0908();
    v6 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(_QWORD *)(v0 + 104) = v6;
    *v6 = v0;
    v6[1] = sub_1001C0714;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v5);
  }
}

uint64_t sub_1001C0714()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t (*v13)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)(*v1 + 112) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    if (v4)
    {
      ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 96));
      v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor, v6);
      v9 = v8;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1001C08A8;
  }
  else
  {
    if (v4)
    {
      v10 = swift_getObjectType(*(_QWORD *)(v2 + 96));
      v7 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor, v11);
      v9 = v12;
    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v13 = sub_1001C07DC;
  }
  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_1001C07DC()
{
  _QWORD *v0;

  swift_release(v0[12]);
  return swift_task_switch(sub_1001C0814, v0[10], v0[11]);
}

uint64_t sub_1001C0814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = type metadata accessor for Notification(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) != 1)
    sub_1001C0950(*(_QWORD *)(v0 + 32));
  v6 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C08A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 112);
  v1 = sub_100012E18(&qword_1005D7A90);
  v2 = swift_dynamicCast(v1, v0 + 16, v1, &type metadata for Never, 7);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

unint64_t sub_1001C0908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DB1A0;
  if (!qword_1005DB1A0)
  {
    v1 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator, v1);
    atomic_store(result, (unint64_t *)&qword_1005DB1A0);
  }
  return result;
}

uint64_t sub_1001C0950(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100012E18(qword_1005D2FB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001C0990(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 8), a2);
  return swift_release(*(_QWORD *)(a1 + 24));
}

uint64_t sub_1001C09B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  swift_unknownObjectRetain(v3);
  swift_retain(v5);
  return a1;
}

uint64_t sub_1001C09FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5, v6);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1001C0A70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_unknownObjectRelease(v5, a2);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1001C0AC4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1001C0B0C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for CollaborationPopoverDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014BDB0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollaborationPopoverDetailView);
}

uint64_t sub_1001C0B60(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1005041A0, 1);
}

uint64_t sub_1001C0B94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1001C0BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t OpaqueTypeConformance2;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t WitnessTable;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;

  v4 = v3;
  v48 = a3;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = type metadata accessor for CollaborationPopoverDetailView.CollaborationListLabelStyle(0, v5, v6, a2);
  v45 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v39 - v8);
  v10 = sub_100012E18(&qword_1005D3040);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1001C63D0();
  v41 = v13;
  WitnessTable = swift_getWitnessTable(&unk_100459020, v7);
  v51 = v10;
  v52 = v7;
  v53 = v13;
  v54 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v51, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v47 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  v43 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2);
  v16 = (char *)&v39 - v15;
  v18 = type metadata accessor for ModifiedContent(0, v17, &type metadata for _AppearanceActionModifier);
  v46 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v42 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v44 = (char *)&v39 - v21;
  v22 = v4;
  v23 = v5;
  v24 = v5;
  v25 = v6;
  sub_1001C0EB4(v22, v24, v6, (uint64_t)v12);
  sub_1001C190C(v26, v9);
  v28 = WitnessTable;
  v27 = v41;
  View.labelStyle<A>(_:)(v9, v10, v7, v41, WitnessTable);
  (*(void (**)(_QWORD *, uint64_t))(v45 + 8))(v9, v7);
  sub_100012DDC((uint64_t)v12, &qword_1005D3040);
  v29 = *(_QWORD *)(v39 + 8);
  v30 = (_QWORD *)swift_allocObject(&unk_10055C758, 40, 7);
  v30[2] = v23;
  v30[3] = v25;
  v30[4] = v29;
  swift_unknownObjectRetain(v29);
  v51 = v10;
  v52 = v7;
  v53 = v27;
  v54 = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v51, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v32 = v42;
  v33 = v43;
  View.onAppear(perform:)(sub_1001C6A94, v30, v43, OpaqueTypeConformance2);
  swift_release(v30);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v33);
  v49 = OpaqueTypeConformance2;
  v50 = &protocol witness table for _AppearanceActionModifier;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v34 = v46;
  v35 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v36 = v44;
  v35(v44, v32, v18);
  v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  v37(v32, v18);
  v35(v48, v36, v18);
  return ((uint64_t (*)(char *, uint64_t))v37)(v36, v18);
}

uint64_t sub_1001C0EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v86;
  id v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;

  v101 = a4;
  v7 = sub_100012E18(&qword_1005D3068);
  v8 = __chkstk_darwin(v7);
  v103 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v99 = (char *)&v86 - v10;
  v102 = sub_100012E18(&qword_1005D3070);
  v98 = *(_QWORD *)(v102 - 8);
  v11 = __chkstk_darwin(v102);
  v100 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v97 = (char *)&v86 - v13;
  v90 = sub_100012E18(&qword_1005D3078);
  v88 = *(_QWORD *)(v90 - 8);
  v14 = __chkstk_darwin(v90);
  v89 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v86 - v16;
  v18 = sub_100012E18(&qword_1005D3080);
  v94 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v86 - v22;
  v24 = sub_100012E18(&qword_1005D3088);
  v25 = __chkstk_darwin(v24);
  v27 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v95 = (uint64_t)&v86 - v28;
  v29 = sub_100012E18(&qword_1005D3090);
  v92 = *(_QWORD *)(v29 - 8);
  v93 = v29;
  v30 = __chkstk_darwin(v29);
  v91 = (char *)&v86 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v96 = (char *)&v86 - v32;
  v33 = sub_100012E18(&qword_1005D3098);
  v34 = __chkstk_darwin(v33);
  v105 = (char *)&v86 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v106 = (uint64_t)&v86 - v36;
  v104 = type metadata accessor for CollaborationPopoverDetailView(0, a2, a3, v37);
  v38 = *(_QWORD *)(a1 + 8);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 16);
  v40 = swift_unknownObjectRetain(v38);
  v41 = (void *)v39(a2, a3, v40);
  swift_unknownObjectRelease(v38, v42);
  if (!v41)
    goto LABEL_6;
  v43 = objc_opt_self(ICNote);
  v44 = swift_dynamicCastObjCClass(v41, v43);
  if (!v44)
  {

LABEL_6:
    v59 = sub_100012E18(&qword_1005D30A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v106, 1, 1, v59);
    v60 = (uint64_t)v99;
    v61 = v97;
    goto LABEL_9;
  }
  v45 = (void *)v44;
  v87 = v41;
  v46 = v104;
  sub_1001C18A4(v104, &qword_1005D3208, (uint64_t (*)(void))sub_1001C7E88, (uint64_t)sub_1001C7E7C);
  if ((_s11MobileNotes31RealtimeCollaborationControllerC02iscD7Enabled3forSbSo6ICNoteC_tFZ_0(v45) & 1) != 0)
  {
    sub_1001C165C(v46);
    sub_1001C178C(v46, &qword_1005D30D0, &qword_1005D30D8, (uint64_t)&protocol conformance descriptor for Toggle<A>, (uint64_t)sub_1001C6ADC);
    v47 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
    v47(v21, v23, v18);
    v86 = v23;
    v48 = v17;
    v49 = v18;
    v50 = v88;
    v51 = v89;
    v52 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
    v53 = v90;
    v52(v89, v48, v90);
    v47(v27, v21, v49);
    v54 = sub_100012E18(&qword_1005D30C8);
    v52(&v27[*(int *)(v54 + 48)], v51, v53);
    v55 = *(void (**)(char *, uint64_t))(v50 + 8);
    v55(v48, v53);
    v56 = *(void (**)(char *, uint64_t))(v94 + 8);
    v56(v86, v49);
    v55(v51, v53);
    v56(v21, v49);
    v57 = sub_100012E18(&qword_1005D30B8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v27, 0, 1, v57);
    v58 = v95;
    sub_10014BD1C((uint64_t)v27, v95, &qword_1005D3088);
  }
  else
  {
    v62 = sub_100012E18(&qword_1005D30B8);
    v58 = v95;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v95, 1, 1, v62);
  }
  v63 = v96;
  v61 = v97;
  v64 = v91;
  v65 = v92;
  v66 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  v67 = v93;
  v66(v91, v96, v93);
  sub_100012CE8(v58, (uint64_t)v27, &qword_1005D3088);
  v68 = (uint64_t)v105;
  v66(v105, v64, v67);
  v69 = sub_100012E18(&qword_1005D30C0);
  sub_100012CE8((uint64_t)v27, v68 + *(int *)(v69 + 48), &qword_1005D3088);

  sub_100012DDC(v58, &qword_1005D3088);
  v70 = *(void (**)(char *, uint64_t))(v65 + 8);
  v70(v63, v67);
  sub_100012DDC((uint64_t)v27, &qword_1005D3088);
  v70(v64, v67);
  v71 = sub_100012E18(&qword_1005D30A0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v68, 0, 1, v71);
  sub_10014BD1C(v68, v106, &qword_1005D3098);
  v60 = (uint64_t)v99;
LABEL_9:
  v72 = v104;
  sub_1001C178C(v104, &qword_1005D3338, &qword_1005D3340, (uint64_t)&protocol conformance descriptor for TupleView<A>, (uint64_t)sub_1001C82AC);
  if ((sub_1001C1810(v72) & 1) != 0)
  {
    sub_1001C18A4(v72, &qword_1005D32F8, (uint64_t (*)(void))sub_1001C8180, (uint64_t)sub_1001C8174);
    v73 = sub_100012E18(&qword_1005D30A8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v60, 0, 1, v73);
  }
  else
  {
    v74 = sub_100012E18(&qword_1005D30A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v60, 1, 1, v74);
  }
  v75 = (uint64_t)v105;
  sub_100012CE8(v106, (uint64_t)v105, &qword_1005D3098);
  v76 = v98;
  v77 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  v78 = v100;
  v79 = v102;
  v77(v100, v61, v102);
  v80 = v103;
  sub_100012CE8(v60, v103, &qword_1005D3068);
  v81 = v101;
  sub_100012CE8(v75, v101, &qword_1005D3098);
  v82 = v60;
  v83 = sub_100012E18(&qword_1005D30B0);
  v77((char *)(v81 + *(int *)(v83 + 48)), v78, v79);
  sub_100012CE8(v80, v81 + *(int *)(v83 + 64), &qword_1005D3068);
  sub_100012DDC(v82, &qword_1005D3068);
  v84 = *(void (**)(char *, uint64_t))(v76 + 8);
  v84(v61, v79);
  sub_100012DDC(v106, &qword_1005D3098);
  sub_100012DDC(v80, &qword_1005D3068);
  v84(v78, v79);
  return sub_100012DDC(v75, &qword_1005D3098);
}

uint64_t sub_1001C165C(uint64_t a1)
{
  uint64_t v1;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _OWORD v13[2];
  uint64_t v14;
  _QWORD v15[2];

  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "localizedStringForKey:value:table:", v4, 0, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v15[0] = v6;
  v15[1] = v8;
  v13[1] = *(_OWORD *)(a1 + 16);
  v14 = v1;
  v9 = sub_100012E18(&qword_1005D30E0);
  v10 = sub_100016638(&qword_1005D30E8, &qword_1005D30E0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v11 = sub_1001452E8();
  return Section<>.init<A>(_:content:)(v15, sub_1001C6B70, v13, v9, &type metadata for String, v10, v11);
}

uint64_t sub_1001C178C(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _OWORD v12[2];

  v12[1] = *(_OWORD *)(a1 + 16);
  v9 = sub_100012E18(a2);
  v10 = sub_100016638(a3, a2, a4);
  return Section<>.init(content:)(a5, v12, v9, v10);
}

uint64_t sub_1001C1810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  swift_unknownObjectRetain(v2);
  v6 = (void *)v5(v4, v3);
  swift_unknownObjectRelease(v2, v7);
  if (!v6)
    return 1;
  v8 = objc_opt_self(ICFolder);
  v9 = (void *)swift_dynamicCastObjCClass(v6, v8);
  if (v9)
    v10 = (uint64_t)objc_msgSend(v9, "canBeSharedViaICloud");
  else
    v10 = 1;

  return v10;
}

uint64_t sub_1001C18A4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];

  v9[1] = *(_OWORD *)(a1 + 16);
  v6 = sub_100012E18(a2);
  v7 = a3();
  return Section<>.init(content:)(a4, v9, v6, v7);
}

uint64_t sub_1001C190C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  *a2 = swift_getKeyPath(&unk_100458E38, a1);
  v3 = sub_100012E18(&qword_1005D3060);
  return swift_storeEnumTagMultiPayload(a2, v3, 0);
}

uint64_t sub_1001C1950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  unsigned int v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;

  v40 = a4;
  v7 = sub_100012E18(&qword_1005D3230);
  __chkstk_darwin(v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D3220);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100012E18(&qword_1005D3208);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = static HorizontalAlignment.leading.getter(v14);
  v18 = objc_msgSend((id)objc_opt_self(ICDeviceSupport), "deviceIsVision");
  v19 = 0x4020000000000000;
  if (!v18)
    v19 = 0;
  *(_QWORD *)v9 = v17;
  *((_QWORD *)v9 + 1) = v19;
  v9[16] = 0;
  v20 = sub_100012E18(&qword_1005D3238);
  v21 = sub_1001C1B90(a1, a2, a3, (uint64_t *)&v9[*(int *)(v20 + 44)]);
  v22 = static Font.subheadline.getter(v21);
  KeyPath = swift_getKeyPath(&unk_100458F58, v23);
  sub_100012CE8((uint64_t)v9, (uint64_t)v12, &qword_1005D3230);
  v25 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v25 = KeyPath;
  v25[1] = v22;
  v26 = sub_100012DDC((uint64_t)v9, &qword_1005D3230);
  v27 = static Edge.Set.vertical.getter(v26);
  v28 = objc_msgSend((id)objc_opt_self(UIDevice), "ic_isVision");
  v29 = 8.0;
  if (v28)
    v29 = 0.0;
  v30 = EdgeInsets.init(_all:)(v29);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_100012CE8((uint64_t)v12, (uint64_t)v16, &qword_1005D3220);
  v37 = &v16[*(int *)(v13 + 36)];
  *v37 = v27;
  *((double *)v37 + 1) = v30;
  *((_QWORD *)v37 + 2) = v32;
  *((_QWORD *)v37 + 3) = v34;
  *((_QWORD *)v37 + 4) = v36;
  v37[40] = 0;
  sub_100012DDC((uint64_t)v12, &qword_1005D3220);
  return sub_10014BD1C((uint64_t)v16, v40, &qword_1005D3208);
}

uint64_t sub_1001C1B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, __n128);
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  id v70;
  NSString v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  unint64_t v137;
  id v138;
  _QWORD *v139;
  uint64_t v140;
  unint64_t *v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  char *v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;

  v155 = a2;
  v156 = a3;
  v153 = a4;
  v154 = a1;
  v144 = sub_100012E18(&qword_1005D3240);
  __chkstk_darwin(v144);
  v141 = (unint64_t *)((char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_100012E18(&qword_1005D3248);
  v6 = __chkstk_darwin(v5);
  v136 = (uint64_t)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v135 = (uint64_t *)((char *)&v132 - v8);
  v9 = sub_100012E18(&qword_1005D3250);
  v10 = __chkstk_darwin(v9);
  v139 = (uint64_t *)((char *)&v132 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v140 = (uint64_t)&v132 - v12;
  v150 = sub_100012E18(&qword_1005D3258);
  __chkstk_darwin(v150);
  v146 = (uint64_t *)((char *)&v132 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100012E18(&qword_1005D84A0);
  v15 = __chkstk_darwin(v14);
  v142 = (uint64_t)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)&v132 - v17;
  v19 = type metadata accessor for ICActivityStreamDigest.Summary(0);
  v157 = *(_QWORD *)(v19 - 8);
  v158 = v19;
  __chkstk_darwin(v19);
  v145 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100012E18(&qword_1005D3260);
  v22 = __chkstk_darwin(v21);
  v152 = (uint64_t)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v151 = (char *)&v132 - v24;
  v138 = (id)objc_opt_self(NSBundle);
  v25 = objc_msgSend(v138, "mainBundle");
  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v25, "localizedStringForKey:value:table:", v26, 0, 0);

  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v159 = v28;
  v160 = v30;
  v137 = sub_1001452E8();
  v31 = Text.init<A>(_:)(&v159, &type metadata for String, v137);
  v33 = v32;
  v35 = v34;
  v37 = v36 & 1;
  v38 = static Color.secondary.getter(v31);
  v39 = Text.foregroundColor(_:)(v38, v31, v33, v37, v35);
  v41 = v40;
  LOBYTE(v30) = v42;
  v44 = v43;
  swift_release(v38);
  LOBYTE(v38) = v30 & 1;
  sub_10014BCF0(v31, v33, v37);
  v45 = swift_bridgeObjectRelease(v35);
  v46 = static Font.headline.getter(v45);
  v47 = Text.font(_:)(v46, v39, v41, v30 & 1, v44);
  v49 = v48;
  LOBYTE(v33) = v50;
  v52 = v51;
  swift_release(v46);
  v53 = v41;
  v54 = v158;
  v55 = v38;
  v56 = v156;
  sub_10014BCF0(v39, v53, v55);
  swift_bridgeObjectRelease(v44);
  v57 = Text.bold()(v47, v49, v33 & 1, v52);
  v147 = v58;
  v148 = v57;
  v143 = v59;
  v149 = v60;
  v61 = v47;
  v62 = v155;
  sub_10014BCF0(v61, v49, v33 & 1);
  swift_bridgeObjectRelease(v52);
  v63 = objc_msgSend((id)objc_opt_self(ICDeviceSupport), "deviceIsMac");
  v64 = *(_QWORD *)(v154 + 8);
  v65 = *(void (**)(uint64_t, uint64_t, __n128))(v56 + 32);
  v66 = swift_unknownObjectRetain(v64);
  v65(v62, v56, v66);
  v67 = v157;
  swift_unknownObjectRelease(v64, v68);
  v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
  if (v69(v18, 1, v54) == 1)
  {
    sub_100012DDC((uint64_t)v18, &qword_1005D84A0);
    v70 = objc_msgSend(v138, "mainBundle");
    v71 = String._bridgeToObjectiveC()();
    v72 = objc_msgSend(v70, "localizedStringForKey:value:table:", v71, 0, 0);

    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
    v75 = v74;

    v159 = v73;
    v160 = v75;
    v76 = Text.init<A>(_:)(&v159, &type metadata for String, v137);
    v78 = v77;
    v80 = v79;
    v82 = v81 & 1;
    v83 = static Color.secondary.getter(v76);
    v84 = Text.foregroundColor(_:)(v83, v76, v78, v82, v80);
    v86 = v85;
    v88 = v87;
    v90 = v89;
    swift_release(v83);
    sub_10014BCF0(v76, v78, v82);
    swift_bridgeObjectRelease(v80);
    v91 = v146;
    *v146 = v84;
    v91[1] = v86;
    *((_BYTE *)v91 + 16) = v88 & 1;
    v91[3] = v90;
    swift_storeEnumTagMultiPayload(v91, v150, 1);
    v92 = sub_100016638(&qword_1005D3268, &qword_1005D3240, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v93 = (uint64_t)v151;
    _ConditionalContent<>.init(storage:)(v91, v144, &type metadata for Text, v92, &protocol witness table for Text);
    goto LABEL_9;
  }
  LODWORD(v138) = v63;
  v94 = (*(uint64_t (**)(char *, char *, uint64_t))(v67 + 32))(v145, v18, v54);
  v137 = ICActivityStreamDigest.Summary.formattedText.getter(v94);
  v134 = v95;
  v97 = v96;
  v133 = v98;
  v99 = swift_unknownObjectRetain(v64);
  v100 = v142;
  v65(v62, v56, v99);
  swift_unknownObjectRelease(v64, v101);
  if (v69((char *)v100, 1, v54) == 1)
  {
    sub_100012DDC(v142, &qword_1005D84A0);
LABEL_7:
    v114 = sub_100012E18(&qword_1005D3278);
    v112 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v140, 1, 1, v114);
    v113 = v150;
    v93 = (uint64_t)v151;
    v109 = (uint64_t)v139;
    goto LABEL_8;
  }
  v102 = v142;
  v103 = ICActivityStreamDigest.Summary.isNavigable.getter();
  v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v102, v54);
  if ((v103 & 1) == 0)
    goto LABEL_7;
  v105 = static VerticalAlignment.center.getter(v104);
  v106 = (uint64_t)v135;
  *v135 = v105;
  *(_QWORD *)(v106 + 8) = 0;
  *(_BYTE *)(v106 + 16) = 1;
  v107 = sub_100012E18(&qword_1005D3288);
  sub_1001C25B8(v154, v155, v156, v106 + *(int *)(v107 + 44));
  v108 = v136;
  sub_100012CE8(v106, v136, &qword_1005D3248);
  v109 = (uint64_t)v139;
  *v139 = 0x4010000000000000;
  *(_BYTE *)(v109 + 8) = 0;
  v110 = sub_100012E18(&qword_1005D3290);
  sub_100012CE8(v108, v109 + *(int *)(v110 + 48), &qword_1005D3248);
  sub_100012DDC(v106, &qword_1005D3248);
  sub_100012DDC(v108, &qword_1005D3248);
  v111 = sub_100012E18(&qword_1005D3278);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v109, 0, 1, v111);
  v112 = v140;
  sub_10014BD1C(v109, v140, &qword_1005D3250);
  v113 = v150;
  v93 = (uint64_t)v151;
LABEL_8:
  sub_100012CE8(v112, v109, &qword_1005D3250);
  v115 = v141;
  v116 = v137;
  v117 = v134;
  *v141 = v137;
  v115[1] = v117;
  v115[2] = v97;
  v118 = v97;
  v119 = v133;
  v115[3] = v133;
  v120 = sub_100012E18(&qword_1005D3280);
  sub_100012CE8(v109, (uint64_t)v115 + *(int *)(v120 + 48), &qword_1005D3250);
  sub_1001C7348(v116, v117, v118, v119);
  sub_1001C7348(v116, v117, v118, v119);
  sub_100012DDC(v109, &qword_1005D3250);
  sub_1001C7378(v116, v117, v118, v119);
  v121 = v146;
  sub_100012CE8((uint64_t)v115, (uint64_t)v146, &qword_1005D3240);
  swift_storeEnumTagMultiPayload(v121, v113, 0);
  v122 = sub_100016638(&qword_1005D3268, &qword_1005D3240, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  _ConditionalContent<>.init(storage:)(v121, v144, &type metadata for Text, v122, &protocol witness table for Text);
  sub_100012DDC((uint64_t)v115, &qword_1005D3240);
  sub_100012DDC(v112, &qword_1005D3250);
  sub_1001C7378(v116, v117, v118, v119);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v145, v158);
  v63 = v138;
LABEL_9:
  v123 = v143 & 1;
  if (v63)
    v124 = 0x4018000000000000;
  else
    v124 = 0;
  v125 = v152;
  sub_100012CE8(v93, v152, &qword_1005D3260);
  v126 = v153;
  v128 = v147;
  v127 = v148;
  *v153 = v148;
  v126[1] = v128;
  *((_BYTE *)v126 + 16) = v123;
  v129 = v149;
  v126[3] = v149;
  v126[4] = v124;
  *((_BYTE *)v126 + 40) = 0;
  v130 = sub_100012E18(&qword_1005D3270);
  sub_100012CE8(v125, (uint64_t)v126 + *(int *)(v130 + 64), &qword_1005D3260);
  sub_10014BCE0(v127, v128, v123);
  swift_bridgeObjectRetain(v129);
  sub_100012DDC(v93, &qword_1005D3260);
  sub_100012DDC(v125, &qword_1005D3260);
  sub_10014BCF0(v127, v128, v123);
  return swift_bridgeObjectRelease(v129);
}

uint64_t sub_1001C25B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, __n128);
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _OWORD v128[3];

  v127 = a3;
  v111 = a2;
  v126 = a4;
  v6 = type metadata accessor for AvatarStackView(0);
  v122 = *(_QWORD *)(v6 - 8);
  v123 = v6;
  __chkstk_darwin(v6);
  v119 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_100012E18(&qword_1005D3298);
  __chkstk_darwin(v120);
  v118 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_100012E18(&qword_1005D32A0);
  v9 = __chkstk_darwin(v125);
  v121 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v124 = (uint64_t)&v99 - v11;
  v117 = type metadata accessor for ButtonBorderShape(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for ControlSize(0);
  v110 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v109 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for BorderedProminentButtonStyle(0);
  v107 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E18(&qword_1005D31D0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_100012E18(&qword_1005D32A8);
  __chkstk_darwin(v99);
  v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100012E18(&qword_1005D32B0);
  v104 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v23 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_100012E18(&qword_1005D32B8);
  __chkstk_darwin(v101);
  v25 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100012E18(&qword_1005D32C0);
  __chkstk_darwin(v103);
  v102 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100012E18(&qword_1005D32C8);
  v27 = __chkstk_darwin(v114);
  v108 = (uint64_t)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v113 = (uint64_t)&v99 - v29;
  v30 = *(_QWORD *)(a1 + 8);
  v31 = (_QWORD *)swift_allocObject(&unk_10055C898, 40, 7);
  v32 = v127;
  v31[2] = a2;
  v31[3] = v32;
  v100 = v30;
  v31[4] = v30;
  swift_unknownObjectRetain(v30);
  v33 = Button.init(action:label:)(sub_1001C814C, v31, sub_1001C2E5C, 0, &type metadata for Text, &protocol witness table for Text);
  v34 = static Font.footnote.getter(v33);
  KeyPath = swift_getKeyPath(&unk_100458F58, v35);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v19, v16);
  v37 = v99;
  v38 = (uint64_t *)&v21[*(int *)(v99 + 36)];
  *v38 = KeyPath;
  v38[1] = v34;
  v39 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  BorderedProminentButtonStyle.init()(v39);
  v40 = sub_1001C7FE0();
  v41 = sub_1001C807C();
  v42 = v105;
  View.buttonStyle<A>(_:)(v15, v37, v105, v40, v41);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v15, v42);
  sub_100012DDC((uint64_t)v21, &qword_1005D32A8);
  v43 = v110;
  v44 = v109;
  v45 = v112;
  (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v109, enum case for ControlSize.small(_:), v112);
  v47 = swift_getKeyPath(&unk_100458F88, v46);
  v48 = (uint64_t *)&v25[*(int *)(v101 + 36)];
  v49 = sub_100012E18(&qword_1005D32E0);
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v48 + *(int *)(v49 + 28), v44, v45);
  *v48 = v47;
  v50 = v104;
  v51 = v106;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v25, v23, v106);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  v52 = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v23, v51);
  v53 = v115;
  static ButtonBorderShape.capsule.getter(v52);
  v55 = swift_getKeyPath(&unk_100458FB8, v54);
  v56 = (uint64_t)v102;
  v57 = (uint64_t *)&v102[*(int *)(v103 + 36)];
  v58 = sub_100012E18(&qword_1005D32E8);
  v59 = v116;
  v60 = v117;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))((char *)v57 + *(int *)(v58 + 28), v53, v117);
  *v57 = v55;
  sub_100012CE8((uint64_t)v25, v56, &qword_1005D32B8);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v53, v60);
  v61 = sub_100012DDC((uint64_t)v25, &qword_1005D32B8);
  v62 = static AvatarStackView.avatarDimension.getter(v61);
  v64 = v63;
  v65 = static Alignment.center.getter(v62);
  _FrameLayout.init(width:height:alignment:)(v128, 0, 1, v64, 0, v65, v66);
  v67 = v108;
  sub_100012CE8(v56, v108, &qword_1005D32C0);
  v68 = (_OWORD *)(v67 + *(int *)(v114 + 36));
  v69 = v128[1];
  *v68 = v128[0];
  v68[1] = v69;
  v68[2] = v128[2];
  sub_100012DDC(v56, &qword_1005D32C0);
  v70 = v113;
  sub_10014BD1C(v67, v113, &qword_1005D32C8);
  v71 = v127;
  v72 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v127 + 40);
  v73 = v100;
  v74 = swift_unknownObjectRetain(v100);
  v75 = v72(v111, v71, v74);
  swift_unknownObjectRelease(v73, v76);
  v77 = v119;
  v78 = AvatarStackView.init(participants:)(v75);
  v79 = static Color.quaternary.getter(v78);
  v81 = v122;
  v80 = v123;
  v82 = (uint64_t)v118;
  (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v118, v77, v123);
  v83 = v82 + *(int *)(v120 + 36);
  *(_QWORD *)v83 = v79;
  *(_OWORD *)(v83 + 8) = xmmword_100458D60;
  *(_QWORD *)(v83 + 24) = 0x3FF0000000000000;
  v84 = (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v77, v80);
  LOBYTE(v79) = static Edge.Set.vertical.getter(v84);
  v85 = EdgeInsets.init(_all:)(4.0);
  v87 = v86;
  v89 = v88;
  v91 = v90;
  v92 = v121;
  sub_100012CE8(v82, v121, &qword_1005D3298);
  v93 = v92 + *(int *)(v125 + 36);
  *(_BYTE *)v93 = v79;
  *(double *)(v93 + 8) = v85;
  *(_QWORD *)(v93 + 16) = v87;
  *(_QWORD *)(v93 + 24) = v89;
  *(_QWORD *)(v93 + 32) = v91;
  *(_BYTE *)(v93 + 40) = 0;
  sub_100012DDC(v82, &qword_1005D3298);
  v94 = v124;
  sub_10014BD1C(v92, v124, &qword_1005D32A0);
  sub_100012CE8(v70, v67, &qword_1005D32C8);
  sub_100012CE8(v94, v92, &qword_1005D32A0);
  v95 = v126;
  sub_100012CE8(v67, v126, &qword_1005D32C8);
  v96 = sub_100012E18(&qword_1005D32F0);
  v97 = v95 + *(int *)(v96 + 48);
  *(_QWORD *)v97 = 0;
  *(_BYTE *)(v97 + 8) = 1;
  sub_100012CE8(v92, v95 + *(int *)(v96 + 64), &qword_1005D32A0);
  sub_100012DDC(v94, &qword_1005D32A0);
  sub_100012DDC(v70, &qword_1005D32C8);
  sub_100012DDC(v92, &qword_1005D32A0);
  return sub_100012DDC(v67, &qword_1005D32C8);
}

uint64_t sub_1001C2E5C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _QWORD v33[2];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v33[0] = v5;
  v33[1] = v7;
  v8 = sub_1001452E8();
  v9 = Text.init<A>(_:)(v33, &type metadata for String, v8);
  v11 = v10;
  v13 = v12;
  v15 = v14 & 1;
  v16 = static Font.body.getter();
  v17 = Text.font(_:)(v16, v9, v11, v15, v13);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_release(v16);
  LOBYTE(v16) = v21 & 1;
  sub_10014BCF0(v9, v11, v15);
  v24 = swift_bridgeObjectRelease(v13);
  v25 = static Color.white.getter(v24);
  v26 = Text.foregroundColor(_:)(v25, v17, v19, v21 & 1, v23);
  v28 = v27;
  LOBYTE(v15) = v29;
  v31 = v30;
  swift_release(v25);
  sub_10014BCF0(v17, v19, v16);
  result = swift_bridgeObjectRelease(v23);
  *(_QWORD *)a1 = v26;
  *(_QWORD *)(a1 + 8) = v28;
  *(_BYTE *)(a1 + 16) = v15 & 1;
  *(_QWORD *)(a1 + 24) = v31;
  return result;
}

uint64_t sub_1001C3004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t KeyPath;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;

  v54 = a4;
  v7 = sub_100012E18(&qword_1005D30F0);
  v8 = __chkstk_darwin(v7);
  v53 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v52 = (uint64_t)&v45 - v10;
  v11 = sub_100012E18(&qword_1005D30F8);
  v12 = __chkstk_darwin(v11);
  v51 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v49 = (uint64_t)&v45 - v14;
  v50 = sub_100012E18(&qword_1005D3100);
  v47 = *(_QWORD *)(v50 - 8);
  v15 = v47;
  v16 = __chkstk_darwin(v50);
  v55 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v45 - v18;
  v21 = type metadata accessor for CollaborationPopoverDetailView(0, a2, a3, v20);
  v56 = sub_1001C33A0(v21);
  KeyPath = swift_getKeyPath(&unk_100458EC0, v22);
  v23 = *(_OWORD *)a1;
  v57 = *(_OWORD *)(a1 + 16);
  v58 = v23;
  v24 = swift_allocObject(&unk_10055C780, 72, 7);
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  v25 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v24 + 48) = v25;
  *(_QWORD *)(v24 + 64) = *(_QWORD *)(a1 + 32);
  sub_1001C6C28((uint64_t)&v58);
  sub_10014BA50((uint64_t)&v57);
  v26 = sub_100012E18(&qword_1005D3D70);
  v27 = sub_100012E18(&qword_1005D3108);
  v28 = sub_100016638(&qword_1005D3110, &qword_1005D3D70, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = sub_1001C6C50();
  v30 = sub_100016638(&qword_1005D3130, &qword_1005D3108, (uint64_t)&protocol conformance descriptor for Button<A>);
  v31 = v19;
  v46 = v19;
  ForEach<>.init(_:id:content:)(&v56, KeyPath, sub_1001C6C1C, v24, v26, v27, v28, v29, v30);
  v33 = *(_QWORD *)(v21 + 16);
  v32 = *(_QWORD **)(v21 + 24);
  v34 = v49;
  sub_1001C431C((__int128 *)a1, v33, (uint64_t)v32, v49);
  v35 = v52;
  sub_1001C37A8((__int128 *)a1, v33, v32, v52);
  v36 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v37 = v55;
  v38 = v50;
  v36(v55, v31, v50);
  v39 = v51;
  sub_100012CE8(v34, v51, &qword_1005D30F8);
  v40 = v53;
  sub_100012CE8(v35, v53, &qword_1005D30F0);
  v41 = v54;
  v36(v54, v37, v38);
  v42 = sub_100012E18(&qword_1005D3138);
  sub_100012CE8(v39, (uint64_t)&v41[*(int *)(v42 + 48)], &qword_1005D30F8);
  sub_100012CE8(v40, (uint64_t)&v41[*(int *)(v42 + 64)], &qword_1005D30F0);
  sub_100012DDC(v35, &qword_1005D30F0);
  sub_100012DDC(v34, &qword_1005D30F8);
  v43 = *(void (**)(char *, uint64_t))(v47 + 8);
  v43(v46, v38);
  sub_100012DDC(v40, &qword_1005D30F0);
  sub_100012DDC(v39, &qword_1005D30F8);
  return ((uint64_t (*)(char *, uint64_t))v43)(v55, v38);
}

_QWORD *sub_1001C33A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v4 + 88);
  v7 = swift_unknownObjectRetain(v3);
  v8 = v6(v5, v4, v7);
  swift_unknownObjectRelease(v3, v9);
  v10 = sub_1001C36CC(a1);
  v11 = sub_10036ED28(v10, v8);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease(v8);
  if ((v17 & 1) == 0)
    goto LABEL_2;
  v21 = type metadata accessor for __ContiguousArrayStorageBase(0, v18);
  v22 = swift_unknownObjectRetain_n(v11, 2);
  v23 = (_QWORD *)swift_dynamicCastClass(v22, v21);
  if (!v23)
  {
    swift_unknownObjectRelease(v11, v24);
    v23 = _swiftEmptyArrayStorage;
  }
  v25 = v23[2];
  v26 = swift_release(v23);
  if (__OFSUB__(v17 >> 1, v15))
  {
    __break(1u);
    goto LABEL_11;
  }
  v26 = v11;
  if (v25 != (v17 >> 1) - v15)
  {
LABEL_11:
    swift_unknownObjectRelease(v26, v27);
LABEL_2:
    v20 = sub_10016BD20(v11, v13, v15, v17);
    goto LABEL_9;
  }
  v20 = (_QWORD *)swift_dynamicCastClass(v11, v21);
  if (!v20)
  {
    swift_unknownObjectRelease(v11, v19);
    v20 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  swift_unknownObjectRelease(v11, v19);
  return v20;
}

uint64_t sub_1001C34D4(void **a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  unint64_t v11;
  id v12;
  _QWORD v14[6];
  __int128 v15;
  __int128 v16;

  v7 = *a1;
  v8 = *a2;
  v15 = a2[1];
  v16 = v8;
  v9 = swift_allocObject(&unk_10055C848, 80, 7);
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  v10 = a2[1];
  *(_OWORD *)(v9 + 32) = *a2;
  *(_OWORD *)(v9 + 48) = v10;
  *(_QWORD *)(v9 + 64) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(v9 + 72) = v7;
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = v7;
  v14[5] = a2;
  sub_1001C6C28((uint64_t)&v16);
  sub_10014BA50((uint64_t)&v15);
  v11 = sub_1001C7DA4();
  v12 = v7;
  return Button.init(action:label:)(sub_1001C7D44, v9, sub_1001C7D98, v14, &type metadata for CollaborationParticipantView, v11);
}

_QWORD *sub_1001C359C@<X0>(void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t (*v11)(void);
  id v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  id v19;
  uint64_t v20;
  _QWORD *result;
  uint64_t v22;
  uint64_t v23;
  id v24;
  _QWORD v25[2];
  __int128 v26;
  __int128 v27;

  v10 = *((_QWORD *)a2 + 1);
  v11 = *(uint64_t (**)(void))(a4 + 96);
  swift_unknownObjectRetain(v10);
  v12 = a1;
  v13 = v11();
  swift_unknownObjectRelease(v10, v14);
  v15 = *a2;
  v26 = a2[1];
  v27 = v15;
  v16 = swift_allocObject(&unk_10055C870, 80, 7);
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  v17 = a2[1];
  *(_OWORD *)(v16 + 32) = *a2;
  *(_OWORD *)(v16 + 48) = v17;
  *(_QWORD *)(v16 + 64) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(v16 + 72) = v12;
  v18 = objc_allocWithZone((Class)UIView);
  v19 = v12;
  sub_1001C6C28((uint64_t)&v27);
  sub_10014BA50((uint64_t)&v26);
  v24 = objc_msgSend(v18, "init");
  v20 = sub_1000163BC(0, (unint64_t *)&qword_1005D8340, UIView_ptr);
  result = State.init(wrappedValue:)(v25, &v24, v20);
  v22 = v25[0];
  v23 = v25[1];
  *a5 = v19;
  a5[1] = v13;
  a5[2] = sub_1001C7E20;
  a5[3] = v16;
  a5[4] = v22;
  a5[5] = v23;
  return result;
}

uint64_t sub_1001C36CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_100012E18(&qword_1005D09E8);
  State.wrappedValue.getter(&v14);
  if (v14 != 1)
    return *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 8);
  v6 = a1 + 16;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v6 + 8);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v5 + 88);
  v8 = swift_unknownObjectRetain(v3);
  v9 = v7(v4, v5, v8);
  swift_unknownObjectRelease(v3, v10);
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v13 = v9;
    else
      v13 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v11 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease_n(v9, 2);
  }
  else
  {
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease(v9);
  }
  return v11;
}

uint64_t sub_1001C37A8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD *, __n128);
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, _QWORD *, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, _QWORD *, __n128);
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  __int128 v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int128 v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  id v88;
  NSString v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD *v106;
  char v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  double v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char v128;
  char v129;
  __int128 v130;
  __int128 v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  _OWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  _BYTE v155[26];
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  char v161;
  char v162;

  v150 = a4;
  v147 = sub_100012E18(&qword_1005D3140);
  __chkstk_darwin(v147);
  v148 = (_OWORD *)((char *)&v136 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v143 = sub_100012E18(&qword_1005D3148);
  __chkstk_darwin(v143);
  v144 = (uint64_t)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100012E18(&qword_1005D3150);
  __chkstk_darwin(v149);
  v146 = (char *)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100012E18(&qword_1005D3158);
  __chkstk_darwin(v141);
  v11 = (uint64_t *)((char *)&v136 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v142 = type metadata accessor for OpenURLAction(0);
  v12 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v14 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_100012E18(&qword_1005D3160);
  v15 = __chkstk_darwin(v151);
  v17 = (uint64_t *)((char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v145 = (uint64_t)&v136 - v18;
  v19 = *((_QWORD *)a1 + 1);
  v20 = (uint64_t (*)(uint64_t, _QWORD *, __n128))a3[7];
  v21 = swift_unknownObjectRetain(v19);
  v22 = a2;
  LOBYTE(v20) = v20(a2, a3, v21);
  swift_unknownObjectRelease(v19, v23);
  if ((v20 & 1) == 0)
  {
    v140 = sub_1001C6D0C();
    v139 = v44;
    v138 = v45;
    v137 = v46;
    v47 = ((uint64_t (*)(void))static Color.secondary.getter)();
    KeyPath = swift_getKeyPath(&unk_100458EF8, v48);
    v136 = swift_getKeyPath(&unk_100458F28, v50);
    v51 = a1[1];
    v156 = *a1;
    v152 = v51;
    v52 = swift_allocObject(&unk_10055C7A8, 72, 7);
    *(_QWORD *)(v52 + 16) = v22;
    *(_QWORD *)(v52 + 24) = a3;
    v53 = a1[1];
    *(_OWORD *)(v52 + 32) = *a1;
    *(_OWORD *)(v52 + 48) = v53;
    *(_QWORD *)(v52 + 64) = *((_QWORD *)a1 + 4);
    sub_1001C6C28((uint64_t)&v156);
    sub_10014BA50((uint64_t)&v152);
    OpenURLAction.init(handler:)(sub_1001C733C, v52);
    v54 = v142;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)v11 + *(int *)(v141 + 28), v14, v142);
    *v11 = v136;
    v141 = v12;
    sub_100012CE8((uint64_t)v11, (uint64_t)v17 + *(int *)(v151 + 36), &qword_1005D3158);
    v55 = v140;
    v56 = v139;
    *v17 = v140;
    v17[1] = v56;
    v57 = v138;
    v58 = v137;
    v17[2] = v138;
    v17[3] = v58;
    v17[4] = KeyPath;
    v17[5] = v47;
    sub_1001C7348(v55, v56, v57, v58);
    swift_retain(KeyPath);
    swift_retain(v47);
    sub_100012DDC((uint64_t)v11, &qword_1005D3158);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v14, v54);
    sub_1001C7378(v55, v56, v57, v58);
    swift_release(v47);
    swift_release(KeyPath);
    v59 = v145;
    sub_10014BD1C((uint64_t)v17, v145, &qword_1005D3160);
    v60 = v144;
    sub_100012CE8(v59, v144, &qword_1005D3160);
    v61 = v60;
    v62 = v143;
    v63 = 0;
LABEL_9:
    swift_storeEnumTagMultiPayload(v61, v62, v63);
    v82 = sub_1001C73A8();
    v83 = (uint64_t)v146;
    _ConditionalContent<>.init(storage:)(v60, v151, v151, v82, v82);
    v84 = v148;
    sub_100012CE8(v83, (uint64_t)v148, &qword_1005D3150);
    swift_storeEnumTagMultiPayload(v84, v147, 0);
    v85 = sub_100012E18(&qword_1005D31A8);
    v86 = sub_1001C750C();
    v87 = sub_1001C7570();
    _ConditionalContent<>.init(storage:)(v84, v149, v85, v86, v87);
    sub_100012DDC(v83, &qword_1005D3150);
    return sub_100012DDC(v59, &qword_1005D3160);
  }
  v140 = (uint64_t)v11;
  v24 = (uint64_t (*)(uint64_t, _QWORD *, __n128))a3[9];
  v25 = swift_unknownObjectRetain(v19);
  LOBYTE(v24) = v24(a2, a3, v25);
  swift_unknownObjectRelease(v19, v26);
  if ((v24 & 1) == 0)
  {
    v138 = sub_1001C7640();
    v139 = v64;
    v65 = a2;
    v137 = v66;
    v68 = v67;
    v69 = ((uint64_t (*)(void))static Color.secondary.getter)();
    v71 = swift_getKeyPath(&unk_100458EF8, v70);
    v136 = swift_getKeyPath(&unk_100458F28, v72);
    v73 = a1[1];
    v156 = *a1;
    v152 = v73;
    v74 = swift_allocObject(&unk_10055C7D0, 72, 7);
    *(_QWORD *)(v74 + 16) = v65;
    *(_QWORD *)(v74 + 24) = a3;
    v75 = a1[1];
    *(_OWORD *)(v74 + 32) = *a1;
    *(_OWORD *)(v74 + 48) = v75;
    *(_QWORD *)(v74 + 64) = *((_QWORD *)a1 + 4);
    sub_1001C6C28((uint64_t)&v156);
    sub_10014BA50((uint64_t)&v152);
    OpenURLAction.init(handler:)(sub_1001C7BDC, v74);
    v76 = (_QWORD *)v140;
    v77 = v142;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v140 + *(int *)(v141 + 28), v14, v142);
    *v76 = v136;
    sub_100012CE8((uint64_t)v76, (uint64_t)v17 + *(int *)(v151 + 36), &qword_1005D3158);
    v78 = v138;
    v79 = v139;
    *v17 = v138;
    v17[1] = v79;
    v80 = v137;
    v17[2] = v137;
    v17[3] = v68;
    v81 = v68;
    v17[4] = v71;
    v17[5] = v69;
    LOBYTE(v68) = v80;
    sub_1001C7348(v78, v79, v80, v81);
    swift_retain(v71);
    swift_retain(v69);
    sub_100012DDC((uint64_t)v76, &qword_1005D3158);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v77);
    sub_1001C7378(v78, v139, v68, v81);
    swift_release(v69);
    swift_release(v71);
    v59 = v145;
    sub_10014BD1C((uint64_t)v17, v145, &qword_1005D3160);
    v60 = v144;
    sub_100012CE8(v59, v144, &qword_1005D3160);
    v61 = v60;
    v62 = v143;
    v63 = 1;
    goto LABEL_9;
  }
  v27 = (uint64_t (*)(uint64_t, _QWORD *, __n128))a3[11];
  v28 = swift_unknownObjectRetain(v19);
  v29 = v27(a2, a3, v28);
  swift_unknownObjectRelease(v19, v30);
  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v135 = v29;
    else
      v135 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v29);
    v31 = _CocoaArrayWrapper.endIndex.getter(v135);
    swift_bridgeObjectRelease(v29);
  }
  else
  {
    v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v29);
  if (v31)
  {
    v154 = 0u;
    memset(v155, 0, 25);
    v152 = 0u;
    v153 = 0u;
    v155[25] = 1;
    v32 = sub_100012E18(&qword_1005D31C8);
    v33 = sub_1001C75DC();
    _ConditionalContent<>.init(storage:)(&v152, v32, &type metadata for EmptyView, v33, &protocol witness table for EmptyView);
    v34 = v160;
    v35 = v161;
    v36 = v162;
    v37 = v157;
    v38 = v148;
    *v148 = v156;
    v38[1] = v37;
    v39 = v159;
    v38[2] = v158;
    v38[3] = v39;
    *((_QWORD *)v38 + 8) = v34;
    *((_BYTE *)v38 + 72) = v35;
    *((_BYTE *)v38 + 73) = v36;
    swift_storeEnumTagMultiPayload(v38, v147, 1);
    v40 = sub_100012E18(&qword_1005D31A8);
    v41 = sub_1001C750C();
    v42 = sub_1001C7570();
    return _ConditionalContent<>.init(storage:)(v38, v149, v40, v41, v42);
  }
  else
  {
    v88 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v89 = String._bridgeToObjectiveC()();
    v90 = objc_msgSend(v88, "localizedStringForKey:value:table:", v89, 0, 0);

    v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
    v93 = v92;

    *(_QWORD *)&v156 = v91;
    *((_QWORD *)&v156 + 1) = v93;
    v94 = sub_1001452E8();
    v95 = Text.init<A>(_:)(&v156, &type metadata for String, v94);
    v97 = v96;
    v99 = v98;
    v101 = v100 & 1;
    v102 = static Font.subheadline.getter(v95);
    v103 = Text.font(_:)(v102, v95, v97, v101, v99);
    v105 = v104;
    v106 = v148;
    v108 = v107;
    v110 = v109;
    swift_release(v102);
    LOBYTE(v102) = v108 & 1;
    sub_10014BCF0(v95, v97, v101);
    v111 = swift_bridgeObjectRelease(v99);
    v112 = static Color.secondary.getter(v111);
    v113 = Text.foregroundColor(_:)(v112, v103, v105, v108 & 1, v110);
    v115 = v114;
    v117 = v116;
    v119 = v118;
    swift_release(v112);
    sub_10014BCF0(v103, v105, v102);
    v120 = swift_bridgeObjectRelease(v110);
    LOBYTE(v102) = static Edge.Set.vertical.getter(v120);
    v121 = EdgeInsets.init(_all:)(4.0);
    *(_QWORD *)&v152 = v113;
    *((_QWORD *)&v152 + 1) = v115;
    *(_QWORD *)&v153 = v117 & 1;
    *((_QWORD *)&v153 + 1) = v119;
    *(_QWORD *)&v154 = v102;
    *((double *)&v154 + 1) = v121;
    *(_QWORD *)v155 = v122;
    *(_QWORD *)&v155[8] = v123;
    *(_QWORD *)&v155[16] = v124;
    *(_WORD *)&v155[24] = 0;
    sub_10014BCE0(v113, v115, v117 & 1);
    swift_bridgeObjectRetain(v119);
    v125 = sub_100012E18(&qword_1005D31C8);
    v126 = sub_1001C75DC();
    _ConditionalContent<>.init(storage:)(&v152, v125, &type metadata for EmptyView, v126, &protocol witness table for EmptyView);
    v127 = v160;
    v128 = v161;
    v129 = v162;
    v130 = v157;
    *v106 = v156;
    v106[1] = v130;
    v131 = v159;
    v106[2] = v158;
    v106[3] = v131;
    *((_QWORD *)v106 + 8) = v127;
    *((_BYTE *)v106 + 72) = v128;
    *((_BYTE *)v106 + 73) = v129;
    swift_storeEnumTagMultiPayload(v106, v147, 1);
    v132 = sub_100012E18(&qword_1005D31A8);
    v133 = sub_1001C750C();
    v134 = sub_1001C7570();
    _ConditionalContent<>.init(storage:)(v106, v149, v132, v133, v134);
    sub_10014BCF0(v113, v115, v117 & 1);
    return swift_bridgeObjectRelease(v119);
  }
}

uint64_t sub_1001C4264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void (**)(uint64_t, uint64_t))(a4 + 64);
  swift_unknownObjectRetain(v6);
  v7(a3, a4);
  v9 = swift_unknownObjectRelease(v6, v8);
  return static OpenURLAction.Result.handled.getter(v9);
}

uint64_t sub_1001C42C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(void (**)(uint64_t, uint64_t))(a4 + 80);
  swift_unknownObjectRetain(v6);
  v7(a3, a4);
  v9 = swift_unknownObjectRelease(v6, v8);
  return static OpenURLAction.Result.handled.getter(v9);
}

uint64_t sub_1001C431C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  __int128 v49;

  v45 = a4;
  v46 = sub_100012E18(&qword_1005D31D0);
  v42 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100012E18(&qword_1005D31D8);
  __chkstk_darwin(v43);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005D31E0);
  __chkstk_darwin(v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_100012E18(&qword_1005D31E8);
  __chkstk_darwin(v44);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *((_QWORD *)a1 + 1);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 88);
  v17 = swift_unknownObjectRetain(v15);
  v18 = v16(a2, a3, v17);
  swift_unknownObjectRelease(v15, v19);
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v39 = v18;
    else
      v39 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v20 = _CocoaArrayWrapper.endIndex.getter(v39);
    swift_bridgeObjectRelease(v18);
  }
  else
  {
    v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v18);
  if (*((_QWORD *)a1 + 4) >= v20)
  {
    swift_storeEnumTagMultiPayload(v12, v10, 0);
    v29 = sub_100016638(&qword_1005D31F0, &qword_1005D31D0, (uint64_t)&protocol conformance descriptor for Button<A>);
    v30 = v46;
    _ConditionalContent<>.init(storage:)(v12, &type metadata for EmptyView, v46, &protocol witness table for EmptyView, v29);
    sub_100012CE8((uint64_t)v14, (uint64_t)v9, &qword_1005D31E8);
    swift_storeEnumTagMultiPayload(v9, v43, 0);
    v31 = sub_1001C7BE8();
    _ConditionalContent<>.init(storage:)(v9, v44, v30, v31, v29);
    return sub_100012DDC((uint64_t)v14, &qword_1005D31E8);
  }
  else
  {
    v48 = a1[1];
    v49 = v48;
    sub_100012E18(&qword_1005D09E8);
    State.wrappedValue.getter(&v47);
    v48 = *a1;
    if (v47 == 1)
    {
      v21 = swift_allocObject(&unk_10055C820, 72, 7);
      *(_QWORD *)(v21 + 16) = a2;
      *(_QWORD *)(v21 + 24) = a3;
      v22 = a1[1];
      *(_OWORD *)(v21 + 32) = *a1;
      *(_OWORD *)(v21 + 48) = v22;
      *(_QWORD *)(v21 + 64) = *((_QWORD *)a1 + 4);
      sub_1001C6C28((uint64_t)&v48);
      sub_10014BA50((uint64_t)&v49);
      v23 = v41;
      Button.init(action:label:)(sub_1001C7C98, v21, sub_1001C47F0, 0, &type metadata for Text, &protocol witness table for Text);
      v24 = v42;
      v25 = v46;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v12, v23, v46);
      swift_storeEnumTagMultiPayload(v12, v10, 1);
      v26 = sub_100016638(&qword_1005D31F0, &qword_1005D31D0, (uint64_t)&protocol conformance descriptor for Button<A>);
      _ConditionalContent<>.init(storage:)(v12, &type metadata for EmptyView, v25, &protocol witness table for EmptyView, v26);
      sub_100012CE8((uint64_t)v14, (uint64_t)v9, &qword_1005D31E8);
      swift_storeEnumTagMultiPayload(v9, v43, 0);
      v27 = sub_1001C7BE8();
      _ConditionalContent<>.init(storage:)(v9, v44, v25, v27, v26);
      sub_100012DDC((uint64_t)v14, &qword_1005D31E8);
      return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v25);
    }
    else
    {
      v32 = swift_allocObject(&unk_10055C7F8, 72, 7);
      *(_QWORD *)(v32 + 16) = a2;
      *(_QWORD *)(v32 + 24) = a3;
      v33 = a1[1];
      *(_OWORD *)(v32 + 32) = *a1;
      *(_OWORD *)(v32 + 48) = v33;
      *(_QWORD *)(v32 + 64) = *((_QWORD *)a1 + 4);
      sub_10014BA50((uint64_t)&v49);
      sub_1001C6C28((uint64_t)&v48);
      v34 = v41;
      Button.init(action:label:)(sub_1001C7C70, v32, sub_1001C4930, 0, &type metadata for Text, &protocol witness table for Text);
      v35 = v42;
      v36 = v46;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v9, v34, v46);
      swift_storeEnumTagMultiPayload(v9, v43, 1);
      v37 = sub_1001C7BE8();
      v38 = sub_100016638(&qword_1005D31F0, &qword_1005D31D0, (uint64_t)&protocol conformance descriptor for Button<A>);
      _ConditionalContent<>.init(storage:)(v9, v44, v36, v37, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v34, v36);
    }
  }
}

uint64_t sub_1001C47F0@<X0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v13[0] = v5;
  v13[1] = v7;
  v8 = sub_1001452E8();
  result = Text.init<A>(_:)(v13, &type metadata for String, v8);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_1001C48D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _QWORD v7[6];

  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  v5 = static Animation.default.getter();
  withAnimation<A>(_:_:)(v5, a4, v7, (char *)&type metadata for () + 8);
  return swift_release(v5);
}

uint64_t sub_1001C4930@<X0>(uint64_t a1@<X8>)
{
  id v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD v13[2];

  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, 0, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v13[0] = v5;
  v13[1] = v7;
  v8 = sub_1001452E8();
  result = Text.init<A>(_:)(v13, &type metadata for String, v8);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v10;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v12;
  return result;
}

uint64_t sub_1001C4A10(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v22[3];
  _QWORD v23[2];
  unsigned __int8 v24;
  _QWORD v25[2];

  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, 0, 0);

  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v25[0] = v9;
  v25[1] = v11;
  v13 = type metadata accessor for CollaborationPopoverDetailView(0, a2, a3, v12);
  v14 = ObservedObject.projectedValue.getter(*a1, a1[1], *(_QWORD *)(v13 + 16), *(_QWORD *)(*(_QWORD *)(v13 + 24) + 8));
  v22[0] = a2;
  v22[1] = a3;
  KeyPath = swift_getKeyPath(&unk_100458E68, v22);
  ObservedObject.Wrapper.subscript.getter(v23, KeyPath, v14, *(_QWORD *)(a3 + 8));
  swift_release(KeyPath);
  swift_unknownObjectRelease(v14, v16);
  v17 = v23[0];
  v18 = v23[1];
  v19 = v24;
  v20 = sub_1001452E8();
  return Toggle<>.init<A>(_:isOn:)(v25, v17, v18, v19, &type metadata for String, v20);
}

uint64_t sub_1001C4B74@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, _QWORD *, __n128);
  __n128 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, _QWORD *, __n128);
  __n128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, _QWORD *, __n128);
  __n128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  unint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  __n128 v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, _QWORD *, __n128);
  __n128 v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, _QWORD *, __n128);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  _OWORD v126[2];

  v116 = a4;
  v7 = sub_100012E18(&qword_1005D3348);
  v8 = __chkstk_darwin(v7);
  v117 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v115 = (uint64_t)&v107 - v10;
  v112 = sub_100012E18(&qword_1005D3350);
  __chkstk_darwin(v112);
  v12 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100012E18(&qword_1005D3330);
  __chkstk_darwin(v118);
  v120 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E18(&qword_1005D3320);
  v110 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v119 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100012E18(&qword_1005D3310);
  v113 = *(_QWORD *)(v122 - 8);
  v16 = __chkstk_darwin(v122);
  v109 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v107 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v107 - v21;
  v23 = sub_100012E18(&qword_1005D3358);
  v24 = __chkstk_darwin(v23);
  v114 = (uint64_t)&v107 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v121 = (uint64_t)&v107 - v26;
  v27 = *((_QWORD *)a1 + 1);
  v28 = (uint64_t (*)(uint64_t, _QWORD *, __n128))a3[2];
  v29 = swift_unknownObjectRetain(v27);
  v111 = v28;
  v30 = (void *)v28(a2, a3, v29);
  swift_unknownObjectRelease(v27, v31);
  if (v30
    && (v32 = objc_opt_self(ICFolder), v33 = swift_dynamicCastObjCClass(v30, v32), v30, v33))
  {
    v34 = (uint64_t (*)(uint64_t, _QWORD *, __n128))a3[18];
    v35 = swift_unknownObjectRetain(v27);
    LOBYTE(v34) = v34(a2, a3, v35);
    swift_unknownObjectRelease(v27, v36);
    v37 = *a1;
    v125 = a1[1];
    v126[0] = v37;
    if ((v34 & 1) != 0)
    {
      v38 = swift_allocObject(&unk_10055CA00, 72, 7);
      *(_QWORD *)(v38 + 16) = a2;
      *(_QWORD *)(v38 + 24) = a3;
      v39 = a1[1];
      *(_OWORD *)(v38 + 32) = *a1;
      *(_OWORD *)(v38 + 48) = v39;
      *(_QWORD *)(v38 + 64) = *((_QWORD *)a1 + 4);
      sub_1001C6C28((uint64_t)v126);
      sub_10014BA50((uint64_t)&v125);
      v40 = sub_100012E18(&qword_1005D0A20);
      v41 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      v42 = v119;
      Button.init(action:label:)(sub_1001C8334, v38, sub_1001C5630, 0, v40, v41);
      v43 = v110;
      v44 = v120;
      v108 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v108(v120, v42, v14);
      v45 = v44;
      v46 = v118;
      v47 = 0;
    }
    else
    {
      v69 = swift_allocObject(&unk_10055C9D8, 72, 7);
      *(_QWORD *)(v69 + 16) = a2;
      *(_QWORD *)(v69 + 24) = a3;
      v70 = a1[1];
      *(_OWORD *)(v69 + 32) = *a1;
      *(_OWORD *)(v69 + 48) = v70;
      *(_QWORD *)(v69 + 64) = *((_QWORD *)a1 + 4);
      sub_1001C6C28((uint64_t)v126);
      sub_10014BA50((uint64_t)&v125);
      v71 = sub_100012E18(&qword_1005D0A20);
      v72 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      v42 = v119;
      Button.init(action:label:)(sub_1001C82BC, v69, sub_1001C5728, 0, v71, v72);
      v43 = v110;
      v44 = v120;
      v108 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v108(v120, v42, v14);
      v45 = v44;
      v46 = v118;
      v47 = 1;
    }
    swift_storeEnumTagMultiPayload(v45, v46, v47);
    v73 = sub_100016638(&qword_1005D3318, &qword_1005D3320, (uint64_t)&protocol conformance descriptor for Button<A>);
    _ConditionalContent<>.init(storage:)(v44, v14, v14, v73, v73);
    v67 = *(void (**)(char *, uint64_t))(v43 + 8);
    v67(v42, v14);
    sub_100012CE8((uint64_t)v22, (uint64_t)v12, &qword_1005D3310);
    swift_storeEnumTagMultiPayload(v12, v112, 0);
    v74 = sub_1001C8204();
    _ConditionalContent<>.init(storage:)(v12, v122, v122, v74, v74);
  }
  else
  {
    v48 = (uint64_t (*)(uint64_t, _QWORD *, __n128))a3[18];
    v49 = swift_unknownObjectRetain(v27);
    LOBYTE(v48) = v48(a2, a3, v49);
    swift_unknownObjectRelease(v27, v50);
    v51 = *a1;
    v125 = a1[1];
    v126[0] = v51;
    if ((v48 & 1) != 0)
    {
      v52 = swift_allocObject(&unk_10055C9B0, 72, 7);
      *(_QWORD *)(v52 + 16) = a2;
      *(_QWORD *)(v52 + 24) = a3;
      v53 = a1[1];
      *(_OWORD *)(v52 + 32) = *a1;
      *(_OWORD *)(v52 + 48) = v53;
      *(_QWORD *)(v52 + 64) = *((_QWORD *)a1 + 4);
      sub_1001C6C28((uint64_t)v126);
      sub_10014BA50((uint64_t)&v125);
      v54 = sub_100012E18(&qword_1005D0A20);
      v55 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      v56 = v119;
      Button.init(action:label:)(sub_1001C8334, v52, sub_1001C5820, 0, v54, v55);
      v57 = v110;
      v58 = v120;
      v108 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v108(v120, v56, v14);
      v59 = v58;
      v60 = v118;
      v61 = 0;
    }
    else
    {
      v62 = swift_allocObject(&unk_10055C938, 72, 7);
      *(_QWORD *)(v62 + 16) = a2;
      *(_QWORD *)(v62 + 24) = a3;
      v63 = a1[1];
      *(_OWORD *)(v62 + 32) = *a1;
      *(_OWORD *)(v62 + 48) = v63;
      *(_QWORD *)(v62 + 64) = *((_QWORD *)a1 + 4);
      sub_1001C6C28((uint64_t)v126);
      sub_10014BA50((uint64_t)&v125);
      v64 = sub_100012E18(&qword_1005D0A20);
      v65 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      v56 = v119;
      Button.init(action:label:)(sub_1001C82BC, v62, sub_1001C5918, 0, v64, v65);
      v57 = v110;
      v58 = v120;
      v108 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
      v108(v120, v56, v14);
      v59 = v58;
      v60 = v118;
      v61 = 1;
    }
    swift_storeEnumTagMultiPayload(v59, v60, v61);
    v66 = sub_100016638(&qword_1005D3318, &qword_1005D3320, (uint64_t)&protocol conformance descriptor for Button<A>);
    _ConditionalContent<>.init(storage:)(v58, v14, v14, v66, v66);
    v67 = *(void (**)(char *, uint64_t))(v57 + 8);
    v67(v56, v14);
    sub_100012CE8((uint64_t)v20, (uint64_t)v12, &qword_1005D3310);
    swift_storeEnumTagMultiPayload(v12, v112, 1);
    v68 = sub_1001C8204();
    _ConditionalContent<>.init(storage:)(v12, v122, v122, v68, v68);
    v22 = v20;
  }
  sub_100012DDC((uint64_t)v22, &qword_1005D3310);
  v75 = swift_unknownObjectRetain(v27);
  v76 = (void *)v111(a2, a3, v75);
  swift_unknownObjectRelease(v27, v77);
  if (v76
    && (v78 = objc_opt_self(ICNote), v79 = swift_dynamicCastObjCClass(v76, v78), v76, v79))
  {
    v80 = (uint64_t (*)(uint64_t, _QWORD *, __n128))a3[20];
    v81 = swift_unknownObjectRetain(v27);
    LOBYTE(v80) = v80(a2, a3, v81);
    swift_unknownObjectRelease(v27, v82);
    v83 = *a1;
    v123 = a1[1];
    v124 = v83;
    if ((v80 & 1) != 0)
    {
      v84 = swift_allocObject(&unk_10055C988, 72, 7);
      *(_QWORD *)(v84 + 16) = a2;
      *(_QWORD *)(v84 + 24) = a3;
      v85 = a1[1];
      *(_OWORD *)(v84 + 32) = *a1;
      *(_OWORD *)(v84 + 48) = v85;
      *(_QWORD *)(v84 + 64) = *((_QWORD *)a1 + 4);
      sub_1001C6C28((uint64_t)&v124);
      sub_10014BA50((uint64_t)&v123);
      v86 = sub_100012E18(&qword_1005D0A20);
      v87 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      v88 = v119;
      Button.init(action:label:)(sub_1001C82D4, v84, sub_1001C5A10, 0, v86, v87);
      v89 = v120;
      v108(v120, v88, v14);
      v90 = v89;
      v91 = v118;
      v92 = 0;
    }
    else
    {
      v95 = swift_allocObject(&unk_10055C960, 72, 7);
      *(_QWORD *)(v95 + 16) = a2;
      *(_QWORD *)(v95 + 24) = a3;
      v96 = a1[1];
      *(_OWORD *)(v95 + 32) = *a1;
      *(_OWORD *)(v95 + 48) = v96;
      *(_QWORD *)(v95 + 64) = *((_QWORD *)a1 + 4);
      sub_1001C6C28((uint64_t)&v124);
      sub_10014BA50((uint64_t)&v123);
      v97 = sub_100012E18(&qword_1005D0A20);
      v98 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      v88 = v119;
      Button.init(action:label:)(sub_1001C82C8, v95, sub_1001C5B04, 0, v97, v98);
      v89 = v120;
      v108(v120, v88, v14);
      v90 = v89;
      v91 = v118;
      v92 = 1;
    }
    swift_storeEnumTagMultiPayload(v90, v91, v92);
    v99 = sub_100016638(&qword_1005D3318, &qword_1005D3320, (uint64_t)&protocol conformance descriptor for Button<A>);
    v100 = (uint64_t)v109;
    _ConditionalContent<>.init(storage:)(v89, v14, v14, v99, v99);
    v67(v88, v14);
    v94 = v115;
    sub_10014BD1C(v100, v115, &qword_1005D3310);
    v93 = 0;
  }
  else
  {
    v93 = 1;
    v94 = v115;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56))(v94, v93, 1, v122);
  v101 = v121;
  v102 = v114;
  sub_100012CE8(v121, v114, &qword_1005D3358);
  v103 = v117;
  sub_100012CE8(v94, v117, &qword_1005D3348);
  v104 = v116;
  sub_100012CE8(v102, v116, &qword_1005D3358);
  v105 = sub_100012E18(&qword_1005D3360);
  sub_100012CE8(v103, v104 + *(int *)(v105 + 48), &qword_1005D3348);
  sub_100012DDC(v94, &qword_1005D3348);
  sub_100012DDC(v101, &qword_1005D3358);
  sub_100012DDC(v103, &qword_1005D3348);
  return sub_100012DDC(v102, &qword_1005D3358);
}

uint64_t sub_1001C5630()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD00000000000001CLL, 0x8000000100480EB0, &type metadata for String, v6);
}

uint64_t sub_1001C5728()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD00000000000001CLL, 0x8000000100480EB0, &type metadata for String, v6);
}

uint64_t sub_1001C5820()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD00000000000001CLL, 0x8000000100480EB0, &type metadata for String, v6);
}

uint64_t sub_1001C5918()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD00000000000001CLL, 0x8000000100480EB0, &type metadata for String, v6);
}

uint64_t sub_1001C5A10()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD000000000000015, 0x8000000100480F10, &type metadata for String, v6);
}

uint64_t sub_1001C5B04()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD000000000000015, 0x8000000100480F10, &type metadata for String, v6);
}

uint64_t sub_1001C5BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v52 = a4;
  v48 = sub_100012E18(&qword_1005D3328);
  __chkstk_darwin(v48);
  v51 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100012E18(&qword_1005D3330);
  __chkstk_darwin(v47);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_100012E18(&qword_1005D3310);
  __chkstk_darwin(v49);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100012E18(&qword_1005D3320);
  v50 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 16);
  v17 = swift_unknownObjectRetain(v15);
  v18 = (void *)v16(a2, a3, v17);
  swift_unknownObjectRelease(v15, v19);
  if (v18
    && (v20 = objc_opt_self(ICNote), v21 = swift_dynamicCastObjCClass(v18, v20), v18, v21))
  {
    v22 = (_QWORD *)swift_allocObject(&unk_10055C8C0, 40, 7);
    v22[2] = a2;
    v22[3] = a3;
    v22[4] = v15;
    swift_unknownObjectRetain(v15);
    v23 = sub_100012E18(&qword_1005D0A20);
    v24 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    Button.init(action:label:)(sub_1001C8280, v22, sub_1001C60AC, 0, v23, v24);
    v25 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v9, v14, v12);
    v26 = v9;
    v27 = v47;
    v28 = 0;
  }
  else
  {
    v29 = swift_unknownObjectRetain(v15);
    v30 = (void *)v16(a2, a3, v29);
    swift_unknownObjectRelease(v15, v31);
    if (!v30
      || (v32 = objc_opt_self(ICFolder),
          v33 = swift_dynamicCastObjCClass(v30, v32),
          v30,
          !v33))
    {
      v40 = (_QWORD *)swift_allocObject(&unk_10055C910, 40, 7);
      v40[2] = a2;
      v40[3] = a3;
      v40[4] = v15;
      swift_unknownObjectRetain(v15);
      v41 = sub_100012E18(&qword_1005D0A20);
      v42 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
      Button.init(action:label:)(sub_1001C8280, v40, sub_1001C629C, 0, v41, v42);
      v25 = v50;
      v43 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v51, v14, v12);
      swift_storeEnumTagMultiPayload(v43, v48, 1);
      v44 = sub_1001C8204();
      v45 = sub_100016638(&qword_1005D3318, &qword_1005D3320, (uint64_t)&protocol conformance descriptor for Button<A>);
      _ConditionalContent<>.init(storage:)(v43, v49, v12, v44, v45);
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
    }
    v34 = (_QWORD *)swift_allocObject(&unk_10055C8E8, 40, 7);
    v34[2] = a2;
    v34[3] = a3;
    v34[4] = v15;
    swift_unknownObjectRetain(v15);
    v35 = sub_100012E18(&qword_1005D0A20);
    v36 = sub_100016638(&qword_1005D0A30, &qword_1005D0A20, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    Button.init(action:label:)(sub_1001C8280, v34, sub_1001C61A4, 0, v35, v36);
    v25 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v9, v14, v12);
    v26 = v9;
    v27 = v47;
    v28 = 1;
  }
  swift_storeEnumTagMultiPayload(v26, v27, v28);
  v37 = sub_100016638(&qword_1005D3318, &qword_1005D3320, (uint64_t)&protocol conformance descriptor for Button<A>);
  _ConditionalContent<>.init(storage:)(v9, v12, v12, v37, v37);
  v38 = v51;
  sub_100012CE8((uint64_t)v11, v51, &qword_1005D3310);
  swift_storeEnumTagMultiPayload(v38, v48, 0);
  v39 = sub_1001C8204();
  _ConditionalContent<>.init(storage:)(v38, v49, v12, v39, v37);
  sub_100012DDC((uint64_t)v11, &qword_1005D3310);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v12);
}

uint64_t sub_1001C60AC()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD000000000000022, 0x8000000100480E40, &type metadata for String, v6);
}

uint64_t sub_1001C61A4()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD000000000000022, 0x8000000100480E40, &type metadata for String, v6);
}

uint64_t sub_1001C629C()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, 0, 0);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v8[0] = v3;
  v8[1] = v5;
  v6 = sub_1001452E8();
  return Label<>.init<A>(_:systemImage:)(v8, 0xD000000000000022, 0x8000000100480E40, &type metadata for String, v6);
}

uint64_t sub_1001C638C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, char *a3@<X8>)
{
  return sub_1001C0BAC(a1, a2, a3);
}

uint64_t type metadata accessor for CollaborationPopoverDetailView.CollaborationListLabelStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014BDB0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CollaborationPopoverDetailView.CollaborationListLabelStyle);
}

unint64_t sub_1001C63D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3048;
  if (!qword_1005D3048)
  {
    v1 = sub_10001537C(&qword_1005D3040);
    sub_100016638(&qword_1005D3050, &qword_1005D3058, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3048);
  }
  return result;
}

uint64_t sub_1001C644C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t *v11;
  uint64_t v13;

  v2 = sub_100012E18(&qword_1005D33F8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static VerticalAlignment.center.getter(v3);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  v6 = sub_100012E18(&qword_1005D3400);
  v7 = sub_1001C6530(&v5[*(int *)(v6 + 44)]);
  v8 = static Color.primary.getter(v7);
  KeyPath = swift_getKeyPath(&unk_100458EF8, v9);
  sub_100012CE8((uint64_t)v5, a1, &qword_1005D33F8);
  v11 = (uint64_t *)(a1 + *(int *)(sub_100012E18(&qword_1005D3408) + 36));
  *v11 = KeyPath;
  v11[1] = v8;
  return sub_100012DDC((uint64_t)v5, &qword_1005D33F8);
}

uint64_t sub_1001C6530@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  _OWORD v60[3];

  v58 = a1;
  v1 = type metadata accessor for Image.Scale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LabelStyleConfiguration.Icon(0);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005D3410);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100012E18(&qword_1005D3418);
  __chkstk_darwin(v54);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100012E18(&qword_1005D3420);
  v13 = __chkstk_darwin(v57);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v56 = (uint64_t)&v50 - v16;
  v17 = type metadata accessor for LabelStyleConfiguration.Title(0);
  v55 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v53 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v50 = (char *)&v50 - v21;
  v22 = LabelStyleConfiguration.title.getter(v20);
  LabelStyleConfiguration.icon.getter(v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Image.Scale.large(_:), v1);
  KeyPath = swift_getKeyPath(&unk_100459058, v23);
  v25 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  v26 = sub_100012E18(&qword_1005D09D8);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v25 + *(int *)(v26 + 28), v4, v1);
  *v25 = KeyPath;
  v28 = v51;
  v27 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v10, v7, v52);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v7, v27);
  v30 = static Alignment.center.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v60, 0x403E000000000000, 0, 0, 1, v30, v31);
  sub_100012CE8((uint64_t)v10, (uint64_t)v12, &qword_1005D3410);
  v32 = &v12[*(int *)(v54 + 36)];
  v33 = v60[1];
  *(_OWORD *)v32 = v60[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v60[2];
  v34 = sub_100012DDC((uint64_t)v10, &qword_1005D3410);
  v35 = static Color.accentColor.getter(v34);
  v37 = swift_getKeyPath(&unk_100458EF8, v36);
  sub_100012CE8((uint64_t)v12, (uint64_t)v15, &qword_1005D3418);
  v38 = (uint64_t *)&v15[*(int *)(v57 + 36)];
  *v38 = v37;
  v38[1] = v35;
  sub_100012DDC((uint64_t)v12, &qword_1005D3418);
  v39 = v56;
  sub_10014BD1C((uint64_t)v15, v56, &qword_1005D3420);
  v40 = v55;
  v41 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v42 = v53;
  v43 = v50;
  v41(v53, v50, v17);
  v59 = 1;
  sub_100012CE8(v39, (uint64_t)v15, &qword_1005D3420);
  v44 = v58;
  v41(v58, v42, v17);
  v45 = sub_100012E18(&qword_1005D3428);
  v46 = &v44[*(int *)(v45 + 48)];
  v47 = v59;
  *(_QWORD *)v46 = 0;
  v46[8] = v47;
  sub_100012CE8((uint64_t)v15, (uint64_t)&v44[*(int *)(v45 + 64)], &qword_1005D3420);
  sub_100012DDC(v39, &qword_1005D3420);
  v48 = *(void (**)(char *, uint64_t))(v40 + 8);
  v48(v43, v17);
  sub_100012DDC((uint64_t)v15, &qword_1005D3420);
  return ((uint64_t (*)(char *, uint64_t))v48)(v42, v17);
}

uint64_t sub_1001C6940@<X0>(uint64_t a1@<X8>)
{
  return sub_1001C644C(a1);
}

uint64_t sub_1001C6954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001C697C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1001C69A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_1001C6A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001C6A48(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1001C6A70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 32), a2);
  return swift_deallocObject(v2, 40, 7);
}

uint64_t sub_1001C6A94()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 24))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001C6ABC()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_1001C6ADC()
{
  uint64_t v0;

  return sub_1001C4A10(*(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001C6AE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a2 + a1 - 8) + 120))(*(_QWORD *)(a2 + a1 - 16));
  *a3 = result & 1;
  return result;
}

uint64_t sub_1001C6B24(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a4 + a3 - 8) + 128))(*a1, *(_QWORD *)(a4 + a3 - 16));
}

uint64_t sub_1001C6B58()
{
  return 16;
}

__n128 sub_1001C6B64(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1001C6B70@<X0>(char *a1@<X8>)
{
  uint64_t *v1;

  return sub_1001C3004(v1[4], v1[2], v1[3], a1);
}

const char *sub_1001C6B7C()
{
  return "userIdentity";
}

id sub_1001C6B88@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "userIdentity");
  *a2 = result;
  return result;
}

id sub_1001C6BC0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setUserIdentity:", *a1);
}

const char *sub_1001C6BD4()
{
  return "userRecordID";
}

id sub_1001C6BE0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "userRecordID");
  *a2 = result;
  return result;
}

uint64_t sub_1001C6C1C(void **a1)
{
  uint64_t v1;

  return sub_1001C34D4(a1, (__int128 *)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1001C6C28(uint64_t a1)
{
  swift_unknownObjectRetain(*(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_1001C6C50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3118;
  if (!qword_1005D3118)
  {
    v1 = sub_10001537C(&qword_1005D3120);
    sub_1001C6CB4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3118);
  }
  return result;
}

unint64_t sub_1001C6CB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3128;
  if (!qword_1005D3128)
  {
    v1 = sub_1000163BC(255, &qword_1005DB1B0, CKRecordID_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3128);
  }
  return result;
}

uint64_t sub_1001C6D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString v20;
  id v21;
  unint64_t v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v0 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy(0);
  v75 = *(_QWORD *)(v0 - 8);
  v76 = v0;
  __chkstk_darwin(v0);
  v74 = (uint64_t)&v68 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax(0);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributedString.MarkdownParsingOptions(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005CEEA0);
  __chkstk_darwin(v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AttributedString(0);
  v77 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  v15 = __chkstk_darwin(v14);
  v68 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v70 = (char *)&v68 - v17;
  v18 = (void *)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v18, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v71 = v22;

  v23 = objc_msgSend(v18, "mainBundle");
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, 0, 0);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v79 = 0;
  v80 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease(v80);
  v79 = 91;
  v80 = 0xE100000000000000;
  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v28);
  v30._object = (void *)0x8000000100480D60;
  v30._countAndFlagsBits = 0xD00000000000002FLL;
  String.append(_:)(v30);
  v31 = v79;
  v32 = v80;
  v33 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v4, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v73);
  v34 = v74;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 104))(v74, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.throwError(_:), v76);
  AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)(0, v4, v34, 0, 0);
  AttributedString.init(markdown:options:baseURL:)(v31, v32, v7, v10);
  v36 = v69;
  v35 = v70;
  v38 = v77;
  v37 = v78;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v13, 0, 1, v78);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v13, 1, v37);
  v40 = v71;
  if (v39 == 1)
  {
    swift_bridgeObjectRelease(v71);
    sub_100012DDC((uint64_t)v13, &qword_1005CEEA0);
    return 0;
  }
  else
  {
    v42 = v78;
    v43 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v35, v13, v78);
    v79 = v36;
    v80 = v40;
    v44 = sub_1001452E8();
    v45 = Text.init<A>(_:)(&v79, &type metadata for String, v44);
    v47 = v46;
    v49 = v48;
    v51 = v50 & 1;
    v52 = ((uint64_t (*)(void))static Text.+ infix(_:_:))();
    v74 = v52;
    v54 = v53;
    v56 = v55;
    v76 = v55;
    LODWORD(v75) = v57 & 1;
    sub_10014BCF0(v45, v47, v51);
    swift_bridgeObjectRelease(v49);
    v58 = v68;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v68, v35, v42);
    v59 = Text.init(_:)(v58);
    v61 = v60;
    v63 = v62;
    v65 = v64 & 1;
    v66 = v52;
    LOBYTE(v52) = v75;
    v41 = static Text.+ infix(_:_:)(v66, v54, v75, v56, v59, v60, v65, v62);
    sub_10014BCF0(v59, v61, v65);
    swift_bridgeObjectRelease(v63);
    sub_10014BCF0(v74, v54, v52);
    swift_bridgeObjectRelease(v76);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v70, v78);
  }
  return v41;
}

uint64_t sub_1001C72A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001C72CC(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1001C72F4()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1001C7314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001C69A4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_1001C733C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C4264(a1, v1 + 32, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_1001C7348(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_10014BCE0(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001C7378(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10014BCF0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

unint64_t sub_1001C73A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3168;
  if (!qword_1005D3168)
  {
    v1 = sub_10001537C(&qword_1005D3160);
    sub_1001C742C();
    sub_100016638(&qword_1005D31A0, &qword_1005D3158, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3168);
  }
  return result;
}

unint64_t sub_1001C742C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3170;
  if (!qword_1005D3170)
  {
    v1 = sub_10001537C(&qword_1005D3178);
    sub_1001C74B0();
    sub_100016638(&qword_1005D3190, &qword_1005D3198, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3170);
  }
  return result;
}

unint64_t sub_1001C74B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3180;
  if (!qword_1005D3180)
  {
    v1 = sub_10001537C(&qword_1005D3188);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3180);
  }
  return result;
}

unint64_t sub_1001C750C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D31B0;
  if (!qword_1005D31B0)
  {
    v1 = sub_10001537C(&qword_1005D3150);
    sub_1001C73A8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D31B0);
  }
  return result;
}

unint64_t sub_1001C7570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D31B8;
  if (!qword_1005D31B8)
  {
    v1 = sub_10001537C(&qword_1005D31A8);
    sub_1001C75DC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D31B8);
  }
  return result;
}

unint64_t sub_1001C75DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D31C0;
  if (!qword_1005D31C0)
  {
    v1 = sub_10001537C(&qword_1005D31C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D31C0);
  }
  return result;
}

uint64_t sub_1001C7640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  NSString v20;
  id v21;
  unint64_t v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  Swift::String v29;
  Swift::String v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v0 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy(0);
  v75 = *(_QWORD *)(v0 - 8);
  v76 = v0;
  __chkstk_darwin(v0);
  v74 = (uint64_t)&v68 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax(0);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributedString.MarkdownParsingOptions(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18(&qword_1005CEFD0);
  __chkstk_darwin(v8);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005CEEA0);
  __chkstk_darwin(v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AttributedString(0);
  v77 = *(_QWORD *)(v14 - 8);
  v78 = v14;
  v15 = __chkstk_darwin(v14);
  v68 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v70 = (char *)&v68 - v17;
  v18 = (void *)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v18, "mainBundle");
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "localizedStringForKey:value:table:", v20, 0, 0);

  v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v71 = v22;

  v23 = objc_msgSend(v18, "mainBundle");
  v24 = String._bridgeToObjectiveC()();
  v25 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, 0, 0);

  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v79 = 0;
  v80 = 0xE000000000000000;
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease(v80);
  v79 = 91;
  v80 = 0xE100000000000000;
  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v28);
  v30._object = (void *)0x8000000100480D60;
  v30._countAndFlagsBits = 0xD00000000000002FLL;
  String.append(_:)(v30);
  v31 = v79;
  v32 = v80;
  v33 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v4, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v73);
  v34 = v74;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 104))(v74, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.throwError(_:), v76);
  AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)(0, v4, v34, 0, 0);
  AttributedString.init(markdown:options:baseURL:)(v31, v32, v7, v10);
  v36 = v69;
  v35 = v70;
  v38 = v77;
  v37 = v78;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v13, 0, 1, v78);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48))(v13, 1, v37);
  v40 = v71;
  if (v39 == 1)
  {
    swift_bridgeObjectRelease(v71);
    sub_100012DDC((uint64_t)v13, &qword_1005CEEA0);
    return 0;
  }
  else
  {
    v42 = v78;
    v43 = v77;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v35, v13, v78);
    v79 = v36;
    v80 = v40;
    v44 = sub_1001452E8();
    v45 = Text.init<A>(_:)(&v79, &type metadata for String, v44);
    v47 = v46;
    v49 = v48;
    v51 = v50 & 1;
    v52 = static Text.+ infix(_:_:)(v45, v46, v50 & 1, v48, 32, 0xE100000000000000, 0, _swiftEmptyArrayStorage);
    v74 = v52;
    v54 = v53;
    v56 = v55;
    v76 = v55;
    LODWORD(v75) = v57 & 1;
    sub_10014BCF0(v45, v47, v51);
    swift_bridgeObjectRelease(v49);
    v58 = v68;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v68, v35, v42);
    v59 = Text.init(_:)(v58);
    v61 = v60;
    v63 = v62;
    v65 = v64 & 1;
    v66 = v52;
    LOBYTE(v52) = v75;
    v41 = static Text.+ infix(_:_:)(v66, v54, v75, v56, v59, v60, v65, v62);
    sub_10014BCF0(v59, v61, v65);
    swift_bridgeObjectRelease(v63);
    sub_10014BCF0(v74, v54, v52);
    swift_bridgeObjectRelease(v76);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v70, v78);
  }
  return v41;
}

uint64_t sub_1001C7BDC(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C42C0(a1, v1 + 32, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1001C7BE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D31F8;
  if (!qword_1005D31F8)
  {
    v1 = sub_10001537C(&qword_1005D31E8);
    sub_100016638(&qword_1005D31F0, &qword_1005D31D0, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D31F8);
  }
  return result;
}

uint64_t sub_1001C7C70()
{
  uint64_t v0;

  return sub_1001C48D0(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)sub_1001C7CD4);
}

uint64_t sub_1001C7C98()
{
  uint64_t v0;

  return sub_1001C48D0(v0 + 32, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)sub_1001C7CBC);
}

uint64_t sub_1001C7CBC()
{
  return sub_1001C7CEC(0);
}

uint64_t sub_1001C7CD4()
{
  return sub_1001C7CEC(1);
}

uint64_t sub_1001C7CEC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  __int128 v5;

  v5 = *(_OWORD *)(*(_QWORD *)(v1 + 32) + 16);
  v4 = a1;
  v2 = sub_100012E18(&qword_1005D09E8);
  return State.wrappedValue.setter(&v4, v2);
}

uint64_t sub_1001C7D44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[9];
  v4 = v0[5];
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  swift_unknownObjectRetain(v4);
  v5(v3, v1, v2);
  return swift_unknownObjectRelease(v4, v6);
}

_QWORD *sub_1001C7D98@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001C359C(*(void **)(v1 + 32), *(__int128 **)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1001C7DA4()
{
  unint64_t result;

  result = qword_1005D3200;
  if (!qword_1005D3200)
  {
    result = swift_getWitnessTable(&unk_100465330, &type metadata for CollaborationParticipantView);
    atomic_store(result, (unint64_t *)&qword_1005D3200);
  }
  return result;
}

uint64_t sub_1001C7DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 40), a2);
  swift_release(*(_QWORD *)(v2 + 56));

  return swift_deallocObject(v2, 80, 7);
}

uint64_t sub_1001C7E20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[9];
  v6 = v1[5];
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 112);
  swift_unknownObjectRetain(v6);
  v7(v5, a1, v3, v4);
  return swift_unknownObjectRelease(v6, v8);
}

uint64_t sub_1001C7E7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1001C1950(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1001C7E88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3210;
  if (!qword_1005D3210)
  {
    v1 = sub_10001537C(&qword_1005D3208);
    sub_1001C7EF4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3210);
  }
  return result;
}

unint64_t sub_1001C7EF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3218;
  if (!qword_1005D3218)
  {
    v1 = sub_10001537C(&qword_1005D3220);
    sub_100016638(&qword_1005D3228, &qword_1005D3230, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100016638(&qword_1005D0958, &qword_1005D0948, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3218);
  }
  return result;
}

uint64_t sub_1001C7F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001C7FB8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_1001C7FE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D32D0;
  if (!qword_1005D32D0)
  {
    v1 = sub_10001537C(&qword_1005D32A8);
    sub_100016638(&qword_1005D31F0, &qword_1005D31D0, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100016638(&qword_1005D0958, &qword_1005D0948, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D32D0);
  }
  return result;
}

unint64_t sub_1001C807C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D32D8;
  if (!qword_1005D32D8)
  {
    v1 = type metadata accessor for BorderedProminentButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BorderedProminentButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1005D32D8);
  }
  return result;
}

uint64_t sub_1001C80C4()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1001C80E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001C69A4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_1001C8108()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_1001C8128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001C69A4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_1001C814C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 48))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001C8174@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1001C5BF8(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1001C8180()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3300;
  if (!qword_1005D3300)
  {
    v1 = sub_10001537C(&qword_1005D32F8);
    sub_1001C8204();
    sub_100016638(&qword_1005D3318, &qword_1005D3320, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3300);
  }
  return result;
}

unint64_t sub_1001C8204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3308;
  if (!qword_1005D3308)
  {
    v1 = sub_10001537C(&qword_1005D3310);
    sub_100016638(&qword_1005D3318, &qword_1005D3320, (uint64_t)&protocol conformance descriptor for Button<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3308);
  }
  return result;
}

uint64_t sub_1001C8284()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 176))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001C82AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001C4B74(*(__int128 **)(v1 + 32), *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_1001C82BC()
{
  return sub_1001C8370(1);
}

uint64_t sub_1001C82C8()
{
  return sub_1001C82DC(1);
}

uint64_t sub_1001C82D4()
{
  return sub_1001C82DC(0);
}

uint64_t sub_1001C82DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[5];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 168);
  swift_unknownObjectRetain(v5);
  v6(a1, v3, v4);
  return swift_unknownObjectRelease(v5, v7);
}

uint64_t sub_1001C8334()
{
  return sub_1001C8370(0);
}

uint64_t sub_1001C8344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectRelease(*(_QWORD *)(v2 + 40), a2);
  swift_release(*(_QWORD *)(v2 + 56));
  return swift_deallocObject(v2, 72, 7);
}

uint64_t sub_1001C8370(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[5];
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 152);
  swift_unknownObjectRetain(v5);
  v6(a1, v3, v4);
  return swift_unknownObjectRelease(v5, v7);
}

uint64_t sub_1001C83C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

void sub_1001C83CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1001C8894(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
  }
}

uint64_t *sub_1001C8434(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_100012E18(&qword_1005D3060);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v6 = v4;
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v7 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v12 = *a2;
      *a1 = *a2;
      swift_retain(v12);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1001C84FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100012E18(&qword_1005D3060);
  if (swift_getEnumCaseMultiPayload(a1, v2) != 1)
    return swift_release(*a1);
  v3 = type metadata accessor for ColorSchemeContrast(0);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t *sub_1001C8560(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_100012E18(&qword_1005D3060);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = a1;
    v7 = v4;
    v8 = 1;
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    swift_retain(v9);
    v6 = a1;
    v7 = v4;
    v8 = 0;
  }
  swift_storeEnumTagMultiPayload(v6, v7, v8);
  return a1;
}

uint64_t *sub_1001C85FC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_100012DDC((uint64_t)a1, &qword_1005D3060);
    v4 = sub_100012E18(&qword_1005D3060);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = a1;
      v7 = v4;
      v8 = 1;
    }
    else
    {
      v9 = *a2;
      *a1 = *a2;
      swift_retain(v9);
      v6 = a1;
      v7 = v4;
      v8 = 0;
    }
    swift_storeEnumTagMultiPayload(v6, v7, v8);
  }
  return a1;
}

void *sub_1001C86B0(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100012E18(&qword_1005D3060);
  if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
  {
    v5 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload(a1, v4, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_1001C8748(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_100012DDC((uint64_t)a1, &qword_1005D3060);
    v4 = sub_100012E18(&qword_1005D3060);
    if (swift_getEnumCaseMultiPayload(a2, v4) == 1)
    {
      v5 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      swift_storeEnumTagMultiPayload(a1, v4, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C87F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C8804);
}

uint64_t sub_1001C8804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(qword_1005D3368);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1001C8844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C8850);
}

uint64_t sub_1001C8850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(qword_1005D3368);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1001C8894(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D33F0)
  {
    v2 = type metadata accessor for ColorSchemeContrast(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D33F0);
  }
}

uint64_t sub_1001C88E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_10001537C(&qword_1005D3040);
  v5 = type metadata accessor for CollaborationPopoverDetailView.CollaborationListLabelStyle(255, v1, v2, v4);
  v6 = sub_1001C63D0();
  WitnessTable = swift_getWitnessTable(&unk_100459020, v5);
  v11 = v3;
  v12 = v5;
  v13 = v6;
  v14 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v11, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 0);
  v9 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, &type metadata for _AppearanceActionModifier);
  v11 = v3;
  v12 = v5;
  v13 = v6;
  v14 = WitnessTable;
  swift_getOpaqueTypeConformance2(&v11, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
}

uint64_t sub_1001C89D0(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1005041F4, 1);
}

unint64_t sub_1001C8A10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3430;
  if (!qword_1005D3430)
  {
    v1 = sub_10001537C(&qword_1005D3408);
    sub_100016638(&qword_1005D3438, &qword_1005D33F8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_100016638(&qword_1005D3190, &qword_1005D3198, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3430);
  }
  return result;
}

uint64_t sub_1001C8AF0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;
  _OWORD v9[2];

  swift_beginAccess(&unk_1005D3440, v9, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_1005D3440);
  swift_endAccess(v9);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v6, v1);
    swift_unknownObjectRelease(v1, v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1001CBB70((uint64_t)v6, (uint64_t)&v7);
  if (v8)
  {
    sub_1000160B8(&v7, v9);
    v3 = type metadata accessor for ICDebugStatusWindow();
    swift_dynamicCast(&v5, v9, (char *)&type metadata for Any + 8, v3, 7);
    return v5;
  }
  else
  {
    sub_1000160C8((uint64_t)&v7);
    return 0;
  }
}

void sub_1001C8C90()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  void *v10;
  id v11;
  _OWORD v12[2];

  v1 = v0;
  v2 = objc_msgSend(v0, "viewControllerManager");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "isAuxiliary");

    if ((v4 & 1) == 0)
    {
      swift_beginAccess(&unk_1005D3441, v12, 32, 0);
      v5 = objc_getAssociatedObject(v1, &unk_1005D3441);
      swift_endAccess(v12);
      if (v5)
      {
        _bridgeAnyObjectToAny(_:)(v12, v5);
        swift_unknownObjectRelease(v5, v6);
        sub_1000160C8((uint64_t)v12);
      }
      else
      {
        memset(v12, 0, sizeof(v12));
        sub_1000160C8((uint64_t)v12);
        *(_QWORD *)&v12[0] = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        KeyPath = swift_getKeyPath(&unk_100459118, v7);
        v9 = swift_allocObject(&unk_10055CB40, 24, 7);
        swift_unknownObjectUnownedInit(v9 + 16, v1);
        v10 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 5, sub_1001CBB68, v9, &protocol witness table for NSObject);
        swift_release(KeyPath);
        swift_release(v9);

        swift_beginAccess(&unk_1005D3441, v12, 32, 0);
        v11 = v10;
        objc_setAssociatedObject(v1, &unk_1005D3441, v11, (void *)1);
        swift_endAccess(v12);

      }
    }
  }
}

void sub_1001C8E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char **v5;
  void *Strong;
  uint64_t v7;

  v4 = sub_100012E18(&qword_1005D3508);
  NSKeyValueObservedChange.newValue.getter(&v7, v4);
  if (v7 != 2 && (v7 & 1) != 0)
    v5 = &selRef_showDebugStatusWindow_;
  else
    v5 = &selRef_hideDebugStatusWindow_;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a3 + 16);
  objc_msgSend(Strong, *v5, 0);

}

void sub_1001C8FB8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  if (ICDebugModeEnabled(a1, a2))
  {
    if ((objc_msgSend(v2, "isDebugWindowVisible") & 1) == 0)
    {
      v3 = objc_allocWithZone((Class)type metadata accessor for ICDebugStatusWindow());
      v4 = v2;
      v5 = sub_1001C91B0(v4);
      objc_msgSend(v5, "setHidden:", 0);
      v7 = v5;
      v6 = objc_msgSend(v4, "windowScene");
      objc_msgSend(v7, "setWindowScene:", v6);

      objc_msgSend(v4, "setDebugWindow:", v7);
    }
  }
}

id sub_1001C91B0(void *a1)
{
  void *v1;
  id v3;
  objc_class *v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  double v15;
  objc_super v16;
  objc_super v17;

  v17.receiver = v1;
  v17.super_class = (Class)swift_getObjectType(v1);
  v3 = objc_msgSendSuper2(&v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v4 = (objc_class *)type metadata accessor for ICDebugStatusRootViewController();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView] = 0;
  swift_unknownObjectUnownedInit(&v5[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_anchor], a1);
  v16.receiver = v5;
  v16.super_class = v4;
  v6 = v3;
  v7 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", 0, 0);
  objc_msgSend(v6, "setRootViewController:", v7);

  type metadata accessor for Level(0);
  v9 = v8;
  objc_msgSend(a1, "windowLevel");
  v14 = v10;
  v13 = 0x3FF0000000000000;
  v11 = sub_1001CBAAC();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v15, &v14, &v13, v9, v11);
  objc_msgSend(v6, "setWindowLevel:", v15);

  return v6;
}

uint64_t type metadata accessor for ICDebugStatusWindow()
{
  return objc_opt_self(_TtC11MobileNotes19ICDebugStatusWindow);
}

uint64_t sub_1001C93FC(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  char *v6;
  id v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t result;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  Class isa;
  id v35;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = &v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition] = 0;
  swift_unknownObjectUnownedInit(&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_anchor], a1);
  v5 = objc_allocWithZone((Class)UIView);
  v6 = v1;
  v7 = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container] = v7;

  v36.receiver = v6;
  v36.super_class = ObjectType;
  v8 = (char *)objc_msgSendSuper2(&v36, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container;
  v10 = *(void **)&v8[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container];
  v11 = v8;
  v12 = objc_msgSend(v10, "layer");
  LODWORD(v13) = 1058642330;
  objc_msgSend(v12, "setShadowOpacity:", v13);

  v14 = objc_msgSend(*(id *)&v8[v9], "layer");
  objc_msgSend(v14, "setShadowRadius:", 4.0);

  v15 = *(void **)&v8[v9];
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "addSubview:", v15);
  v16 = objc_msgSend(v15, "leftAnchor");
  v17 = objc_msgSend(v11, "leftAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  v19 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition;
  v20 = *(void **)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition];
  *(_QWORD *)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition] = v18;

  v21 = objc_msgSend(*(id *)&v8[v9], "topAnchor");
  v22 = objc_msgSend(v11, "topAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  v24 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition;
  v25 = *(void **)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition];
  *(_QWORD *)&v11[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition] = v23;

  sub_1001C9784();
  v26 = sub_100012E18(&qword_1005CF6F0);
  result = swift_allocObject(v26, 48, 7);
  *(_OWORD *)(result + 16) = xmmword_100451BF0;
  v28 = *(void **)&v11[v19];
  if (v28)
  {
    v29 = result;
    *(_QWORD *)(result + 32) = v28;
    v30 = *(void **)&v11[v24];
    if (v30)
    {
      v31 = (void *)objc_opt_self(NSLayoutConstraint);
      *(_QWORD *)(v29 + 40) = v30;
      specialized Array._endMutation()(v31);
      sub_1000163BC(0, (unint64_t *)&qword_1005D8F60, NSLayoutConstraint_ptr);
      v32 = v28;
      v33 = v30;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v29);
      objc_msgSend(v31, "activateConstraints:", isa);

      v35 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "initWithTarget:action:", v11, "handlePanGesture:");
      objc_msgSend(*(id *)&v8[v9], "addGestureRecognizer:", v35);
      sub_1001C9960();
      sub_1001C9A4C();

      return (uint64_t)v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1001C9784()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v17;
  id v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  double MinX;
  double MaxX;
  void *v25;
  void *v26;
  id v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v1 = objc_msgSend(v0, "safeAreaLayoutGuide");
  objc_msgSend(v1, "layoutFrame");
  v3 = v2;

  if (v3 >= 24.0)
  {
    v4 = objc_msgSend(v0, "safeAreaLayoutGuide");
    objc_msgSend(v4, "layoutFrame");
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;

    v28.origin.x = v6;
    v28.origin.y = v8;
    v28.size.width = v10;
    v28.size.height = v12;
    v29 = CGRectInset(v28, 12.0, 0.0);
    x = v29.origin.x;
    y = v29.origin.y;
    width = v29.size.width;
    height = v29.size.height;
    v17 = objc_msgSend(v0, "traitCollection");
    v18 = objc_msgSend(v17, "layoutDirection");

    v19 = x;
    v20 = y;
    v21 = width;
    v22 = height;
    if (v18)
    {
      MinX = CGRectGetMinX(*(CGRect *)&v19);
    }
    else
    {
      MaxX = CGRectGetMaxX(*(CGRect *)&v19);
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container], "frame");
      MinX = MaxX - CGRectGetWidth(v30);
      if (MinX <= 0.0)
        MinX = 0.0;
    }
    v25 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition];
    if (v25)
    {
      objc_msgSend(v25, "setConstant:", MinX);
      v26 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition];
      if (v26)
      {
        v27 = v26;
        v31.origin.x = x;
        v31.origin.y = y;
        v31.size.width = width;
        v31.size.height = height;
        objc_msgSend(v27, "setConstant:", CGRectGetMinY(v31));

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1001C9960()
{
  char *v0;
  id v1;
  id v2;
  unsigned int v3;
  void *v4;
  char **v5;
  id v6;
  id v7;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container], "layer");
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "ic_isDark");

  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_clearColor;
  if (!v3)
    v5 = &selRef_systemGrayColor;
  v6 = objc_msgSend(v4, *v5);
  v7 = objc_msgSend(v6, "CGColor");

  objc_msgSend(v1, "setShadowColor:", v7);
}

void sub_1001C9A4C()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double MaxX;
  double v7;
  double MaxY;
  double v9;
  id v10;
  CGRect v11;
  CGRect v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container];
  objc_msgSend(v1, "frame");
  v3 = v2;
  v5 = v4;
  objc_msgSend(v0, "bounds");
  MaxX = CGRectGetMaxX(v11);
  if (MaxX <= 1.0)
    MaxX = 1.0;
  v7 = v3 / MaxX;
  objc_msgSend(v0, "bounds");
  MaxY = CGRectGetMaxY(v12);
  if (MaxY <= 1.0)
    MaxY = 1.0;
  v9 = v5 / MaxY;
  v10 = objc_msgSend(v1, "layer");
  objc_msgSend(v10, "setShadowOffset:", v7 + v7, v9 * 3.0 + 1.0);

}

CGAffineTransform *sub_1001C9D7C(void *a1)
{
  uint64_t v1;
  CGAffineTransform *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  CGFloat v7;
  CGFloat v8;
  CGPoint v9;
  CGAffineTransform v10;

  if ((unint64_t)objc_msgSend(a1, "state") <= 1)
  {
    result = (CGAffineTransform *)objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container), "frame");
    v4 = v1 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart;
    *(_QWORD *)v4 = v5;
    *(_QWORD *)(v4 + 8) = v6;
    *(_BYTE *)(v4 + 16) = 0;
    return result;
  }
  objc_msgSend(a1, "translationInView:", v1);
  result = CGAffineTransformMakeTranslation(&v10, v7, v8);
  if ((*(_BYTE *)(v1
                 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart
                 + 16) & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = CGPointApplyAffineTransform(*(CGPoint *)(v1+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart), &v10);
  result = *(CGAffineTransform **)(v1
                                 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_xPosition);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  -[CGAffineTransform setConstant:](result, "setConstant:", v9.x);
  result = *(CGAffineTransform **)(v1
                                 + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition);
  if (result)
    return (CGAffineTransform *)-[CGAffineTransform setConstant:](result, "setConstant:", v9.y);
LABEL_9:
  __break(1u);
  return result;
}

void sub_1001C9F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _swift_stdlib_reportUnimplementedInitializer(a3, a4, a5, a6, 0);
  __break(1u);
}

uint64_t type metadata accessor for ICDebugStatusRootView()
{
  return objc_opt_self(_TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView);
}

void sub_1001CA070()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *Strong;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Class isa;
  id v53;
  void *v54;
  _QWORD v55[2];
  char v56;
  id (*v57)();
  uint64_t v58;
  char v59;

  v1 = v0;
  v2 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v2);
  v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(&v0[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_anchor]);
  v6 = objc_allocWithZone((Class)type metadata accessor for ICDebugStatusRootView());
  v7 = (void *)sub_1001C93FC(Strong);
  v8 = OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView;
  v9 = *(void **)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView] = v7;
  v10 = v7;

  objc_msgSend(v1, "setView:", *(_QWORD *)&v1[v8]);
  v11 = *(void **)&v1[v8];
  if (!v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  objc_msgSend(v11, "setAlpha:", 0.0);
  v55[0] = sub_100148D30;
  v55[1] = 0;
  v56 = 0;
  v57 = sub_100148D4C;
  v58 = 0;
  v59 = 0;
  v12 = objc_allocWithZone((Class)sub_100012E18(&qword_1005D34F8));
  v13 = (void *)UIHostingController.init(rootView:)(v55);
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v4);
  v14 = objc_msgSend(v13, "view");
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v15 = v14;
  v16 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  v17 = objc_msgSend(v13, "view");
  if (!v17)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18 = v17;
  objc_msgSend(v17, "setOpaque:", 0);

  objc_msgSend(v1, "addChildViewController:", v13);
  v19 = *(_QWORD *)&v1[v8];
  if (!v19)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v20 = objc_retain(*(id *)(v19
                          + OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container));
  v21 = objc_msgSend(v13, "view");
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v22 = v21;
  objc_msgSend(v20, "addSubview:", v21);

  v23 = sub_100012E18(&qword_1005CF6F0);
  v24 = swift_allocObject(v23, 64, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100451BE0;
  v25 = objc_msgSend(v13, "view");
  if (!v25)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v26 = v25;
  v27 = objc_msgSend(v25, "leadingAnchor");

  v28 = *(_QWORD *)&v1[v8];
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = objc_msgSend(*(id *)(v28+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container), "leadingAnchor");
  v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v24 + 32) = v30;
  v31 = objc_msgSend(v13, "view");
  if (!v31)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, "topAnchor");

  v34 = *(_QWORD *)&v1[v8];
  if (!v34)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v35 = objc_msgSend(*(id *)(v34+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container), "topAnchor");
  v36 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v24 + 40) = v36;
  v37 = objc_msgSend(v13, "view");
  if (!v37)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "trailingAnchor");

  v40 = *(_QWORD *)&v1[v8];
  if (!v40)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v41 = objc_msgSend(*(id *)(v40+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container), "trailingAnchor");
  v42 = objc_msgSend(v39, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v24 + 48) = v42;
  v43 = objc_msgSend(v13, "view");
  if (!v43)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v44 = v43;
  v45 = objc_msgSend(v43, "bottomAnchor");

  v46 = *(_QWORD *)&v1[v8];
  if (!v46)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v47 = (void *)objc_opt_self(NSLayoutConstraint);
  v48 = objc_msgSend(*(id *)(v46+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_container), "bottomAnchor");
  v49 = objc_msgSend(v45, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v24 + 56) = v49;
  v55[0] = v24;
  specialized Array._endMutation()(v50);
  v51 = v55[0];
  sub_1000163BC(0, (unint64_t *)&qword_1005D8F60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v51);
  objc_msgSend(v47, "activateConstraints:", isa);

  v53 = objc_msgSend(v13, "view");
  if (v53)
  {
    v54 = v53;
    objc_msgSend(v53, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

    objc_msgSend(v13, "didMoveToParentViewController:", v1);
    return;
  }
LABEL_29:
  __break(1u);
}

id sub_1001CA614(char a1)
{
  char *v1;
  id result;
  _BYTE *v4;
  void *v5;
  char *v6;
  char *v7;
  char *v8;
  void *v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v12, "viewDidAppear:", a1 & 1);
  result = (id)sub_1001CA764();
  if (!result)
    goto LABEL_10;
  v4 = *(_BYTE **)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v5 = result;
  if (v4[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_panStart + 16] != 1)
  {
LABEL_9:

LABEL_10:
    result = *(id *)&v1[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_rootView];
    if (result)
      return objc_msgSend(result, "setAlpha:", 1.0);
    __break(1u);
    goto LABEL_13;
  }
  v6 = v4;
  v7 = (char *)objc_msgSend(v5, "topViewController");
  if (!v7)
  {
LABEL_8:

    v5 = v6;
    goto LABEL_9;
  }
  v8 = v7;
  result = objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = result;
  objc_msgSend(result, "safeAreaInsets");
  v11 = v10;

  result = *(id *)&v6[OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC421ICDebugStatusRootView_yPosition];
  if (result)
  {
    objc_msgSend(result, "setConstant:", v11 + 8.0);

    v5 = v6;
    v6 = v8;
    goto LABEL_8;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1001CA764()
{
  uint64_t v0;
  void *Strong;
  id v2;
  uint64_t v3;
  _QWORD *inited;
  int64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  _BYTE v23[48];
  uint64_t v24[2];
  __int16 v25;
  _QWORD *(*v26)@<X0>(_QWORD *@<X0>, uint64_t@<X8>);
  uint64_t v27;
  char v28;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v0+ OBJC_IVAR____TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController_anchor);
  v2 = objc_msgSend(Strong, "rootViewController");

  if (v2)
  {
    v3 = sub_100012E18(&qword_1005D1950);
    inited = (_QWORD *)swift_initStackObject(v3, v23);
    *((_OWORD *)inited + 1) = xmmword_100451C20;
    inited[4] = v2;
    inited[5] = 0;
    v20 = v2;
    v5 = 1;
    while (1)
    {
      v6 = inited[5];
      v7 = (id)inited[4];
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(inited);
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t)(v5 - 1) > inited[3] >> 1)
        inited = sub_10016ABAC(isUniquelyReferenced_nonNull_native, v5, 1, inited);
      v9 = sub_100012E18(&qword_1005D1958);
      swift_arrayDestroy(inited + 4, 1, v9);
      v10 = inited[2];
      if (!v10)
        break;
      memmove(inited + 4, inited + 6, 16 * v10 - 16);
      inited[2] = v10 - 1;
      v22 = inited;
      v11 = objc_opt_self(UINavigationController);
      v12 = swift_dynamicCastObjCClass(v7, v11);
      if (v12)
      {
        v5 = v12;
LABEL_18:

        swift_bridgeObjectRelease(inited);
        return v5;
      }
      if (v6 > 2)
      {

        v5 = inited[2];
        if (!v5)
          goto LABEL_18;
      }
      else
      {
        v13 = swift_allocObject(&unk_10055CB18, 32, 7);
        *(_QWORD *)(v13 + 16) = sub_1001273CC;
        *(_QWORD *)(v13 + 24) = 0;
        v14 = objc_msgSend(v7, "childViewControllers");
        v15 = sub_1000163BC(0, &qword_1005D3D50, UIViewController_ptr);
        v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

        if (v16 < 0 || (v16 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain(v16);
          v17 = (uint64_t)sub_10016BEB0(v18);
          swift_bridgeObjectRelease(v16);
        }
        else
        {
          v17 = v16 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v16);
        }
        v21 = v17;
        sub_1001CAB40(&v21);
        swift_bridgeObjectRelease(v16);
        v24[0] = v21;
        v24[1] = v6 + 1;
        v25 = 256;
        v26 = sub_1001CBA28;
        v27 = v13;
        v28 = 0;
        swift_retain(v13);
        sub_1001D8B60(v24);
        swift_release(v13);

        inited = v22;
        v5 = v22[2];
        if (!v5)
          goto LABEL_18;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    result = swift_release(v21);
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ICDebugStatusRootViewController()
{
  return objc_opt_self(_TtC11MobileNotesP33_679C7337F26BC959ACC0954CE78EECC431ICDebugStatusRootViewController);
}

uint64_t sub_1001CAB40(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1001565E4(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_1001CABB8(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_1001CABB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  char *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  double MinX;
  double v25;
  Swift::Int v26;
  void *v27;
  double v28;
  double v29;
  Swift::Int v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t *v37;
  Swift::Int v38;
  Swift::Int v39;
  uint64_t *v40;
  uint64_t v41;
  Swift::Int v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  double v52;
  double v53;
  void *v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t *v116;
  uint64_t v117;
  Swift::Int v118;
  Swift::Int v119;
  Swift::Int v120;
  Swift::Int v121;
  void **__dst;
  _BOOL4 v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_152;
    if (v4)
      sub_1001CB494(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_160;
  v7 = v5;
  v121 = v4;
  v116 = a1;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v126 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      if (v14 < 2)
      {
LABEL_129:
        v114 = swift_bridgeObjectRelease(v11);
        *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()(v114);
        swift_bridgeObjectRelease(v126);
        return;
      }
LABEL_117:
      v108 = *v116;
      while (1)
      {
        v109 = v14 - 2;
        if (v14 < 2)
          goto LABEL_147;
        if (!v108)
          goto LABEL_159;
        v110 = *(_QWORD *)&v11[16 * v109 + 32];
        v111 = *(_QWORD *)&v11[16 * v14 + 24];
        sub_1001CB5FC((void **)(v108 + 8 * v110), (id *)(v108 + 8 * *(_QWORD *)&v11[16 * v14 + 16]), v108 + 8 * v111, __dst);
        if (v2)
          goto LABEL_129;
        if (v111 < v110)
          goto LABEL_148;
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_1001562F4((uint64_t)v11);
        if (v109 >= *((_QWORD *)v11 + 2))
          goto LABEL_149;
        v112 = &v11[16 * v109 + 32];
        *(_QWORD *)v112 = v110;
        *((_QWORD *)v112 + 1) = v111;
        v113 = *((_QWORD *)v11 + 2);
        if (v14 > v113)
          goto LABEL_150;
        memmove(&v11[16 * v14 + 16], &v11[16 * v14 + 32], 16 * (v113 - v14));
        *((_QWORD *)v11 + 2) = v113 - 1;
        v14 = v113 - 1;
        if (v113 <= 2)
          goto LABEL_129;
      }
    }
  }
  else
  {
    v8 = v6 >> 1;
    v9 = sub_1000163BC(0, &qword_1005D3D50, UIViewController_ptr);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v4 = v121;
    __dst = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v126 = v10;
  }
  v118 = v7;
  v12 = 0;
  v13 = *a1;
  v117 = *a1 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
LABEL_15:
  v15 = v12++;
  if (v12 < v4)
  {
    v16 = v11;
    v17 = *(void **)(v13 + 8 * v15);
    v18 = *(id *)(v13 + 8 * v12);
    v19 = v17;
    v20 = objc_msgSend(v18, "viewIfLoaded");
    if (v20)
    {
      v21 = v20;
      v22 = objc_msgSend(v19, "viewIfLoaded");
      if (v22)
      {
        v23 = v22;
        objc_msgSend(v21, "frame");
        MinX = CGRectGetMinX(v127);
        objc_msgSend(v23, "frame");
        v25 = CGRectGetMinX(v128);

        v123 = MinX < v25;
        v26 = v15 + 2;
        if (v15 + 2 < v121)
          goto LABEL_26;
LABEL_34:
        v11 = v16;
        if (!v123)
          goto LABEL_42;
        if (v26 < v15)
          goto LABEL_153;
LABEL_36:
        if (v15 < v26)
        {
          v37 = (uint64_t *)(v117 + 8 * v26);
          v38 = v26;
          v39 = v15;
          v40 = (uint64_t *)(v13 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13)
                goto LABEL_158;
              v41 = *v40;
              *v40 = *v37;
              *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
LABEL_42:
        v12 = v26;
LABEL_43:
        v4 = v121;
        goto LABEL_44;
      }

      v18 = v19;
    }
    else
    {
      v21 = v19;
    }

    v26 = v15 + 2;
    if (v15 + 2 >= v121)
    {
      v11 = v16;
      goto LABEL_36;
    }
    v123 = 1;
LABEL_26:
    while (1)
    {
      v31 = *(void **)(v13 + 8 * v12);
      v32 = *(id *)(v13 + 8 * v26);
      v33 = v31;
      v34 = objc_msgSend(v32, "viewIfLoaded");
      if (!v34)
        break;
      v35 = v34;
      v36 = objc_msgSend(v33, "viewIfLoaded");
      if (!v36)
      {

        v32 = v33;
        goto LABEL_30;
      }
      v27 = v36;
      objc_msgSend(v35, "frame");
      v28 = CGRectGetMinX(v129);
      objc_msgSend(v27, "frame");
      v29 = CGRectGetMinX(v130);

      if (((v123 ^ (v28 >= v29)) & 1) == 0)
        goto LABEL_34;
LABEL_25:
      v30 = v26 + 1;
      v12 = v26;
      v26 = v30;
      if (v30 >= v121)
      {
        v26 = v30;
        goto LABEL_34;
      }
    }
    v35 = v33;
LABEL_30:

    if (!v123)
    {
      v12 = v26;
      v11 = v16;
      goto LABEL_43;
    }
    goto LABEL_25;
  }
LABEL_44:
  if (v12 >= v4)
    goto LABEL_67;
  if (__OFSUB__(v12, v15))
    goto LABEL_151;
  if (v12 - v15 >= v118)
    goto LABEL_67;
  if (__OFADD__(v15, v118))
    goto LABEL_154;
  if (v15 + v118 >= v4)
    v42 = v4;
  else
    v42 = v15 + v118;
  if (v42 >= v15)
  {
    if (v12 == v42)
      goto LABEL_67;
    v115 = v11;
    v43 = v117 + 8 * v12;
    v119 = v42;
    v120 = v15;
LABEL_55:
    v44 = *(void **)(v13 + 8 * v12);
    v124 = v43;
    while (1)
    {
      v45 = *(void **)v43;
      v46 = v44;
      v47 = v45;
      v48 = objc_msgSend(v46, "viewIfLoaded");
      if (v48)
      {
        v49 = v48;
        v50 = objc_msgSend(v47, "viewIfLoaded");
        if (v50)
        {
          v51 = v50;
          objc_msgSend(v49, "frame");
          v52 = CGRectGetMinX(v131);
          objc_msgSend(v51, "frame");
          v53 = CGRectGetMinX(v132);

          if (v52 >= v53)
            goto LABEL_54;
          goto LABEL_63;
        }

        v46 = v47;
      }
      else
      {
        v49 = v47;
      }

LABEL_63:
      if (!v13)
        goto LABEL_156;
      v54 = *(void **)v43;
      v44 = *(void **)(v43 + 8);
      *(_QWORD *)v43 = v44;
      *(_QWORD *)(v43 + 8) = v54;
      v43 -= 8;
      if (v12 == ++v15)
      {
LABEL_54:
        ++v12;
        v43 = v124 + 8;
        v15 = v120;
        if (v12 != v119)
          goto LABEL_55;
        v12 = v119;
        v11 = v115;
LABEL_67:
        if (v12 < v15)
          goto LABEL_146;
        if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
          v11 = sub_100155E58(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v56 = *((_QWORD *)v11 + 2);
        v55 = *((_QWORD *)v11 + 3);
        v14 = v56 + 1;
        if (v56 >= v55 >> 1)
          v11 = sub_100155E58((char *)(v55 > 1), v56 + 1, 1, v11);
        *((_QWORD *)v11 + 2) = v14;
        v125 = v11 + 32;
        v57 = &v11[16 * v56 + 32];
        *(_QWORD *)v57 = v15;
        *((_QWORD *)v57 + 1) = v12;
        if (v56)
        {
          v58 = v11 + 32;
          while (1)
          {
            v59 = v14 - 1;
            if (v14 >= 4)
            {
              v64 = &v58[16 * v14];
              v65 = *((_QWORD *)v64 - 8);
              v66 = *((_QWORD *)v64 - 7);
              v70 = __OFSUB__(v66, v65);
              v67 = v66 - v65;
              if (v70)
                goto LABEL_135;
              v69 = *((_QWORD *)v64 - 6);
              v68 = *((_QWORD *)v64 - 5);
              v70 = __OFSUB__(v68, v69);
              v62 = v68 - v69;
              v63 = v70;
              if (v70)
                goto LABEL_136;
              v71 = v14 - 2;
              v72 = &v58[16 * v14 - 32];
              v74 = *(_QWORD *)v72;
              v73 = *((_QWORD *)v72 + 1);
              v70 = __OFSUB__(v73, v74);
              v75 = v73 - v74;
              if (v70)
                goto LABEL_138;
              v70 = __OFADD__(v62, v75);
              v76 = v62 + v75;
              if (v70)
                goto LABEL_141;
              if (v76 >= v67)
              {
                v94 = &v58[16 * v59];
                v96 = *(_QWORD *)v94;
                v95 = *((_QWORD *)v94 + 1);
                v70 = __OFSUB__(v95, v96);
                v97 = v95 - v96;
                if (v70)
                  goto LABEL_145;
                v87 = v62 < v97;
                goto LABEL_105;
              }
            }
            else
            {
              if (v14 != 3)
              {
                v88 = *((_QWORD *)v11 + 4);
                v89 = *((_QWORD *)v11 + 5);
                v70 = __OFSUB__(v89, v88);
                v81 = v89 - v88;
                v82 = v70;
                goto LABEL_99;
              }
              v61 = *((_QWORD *)v11 + 4);
              v60 = *((_QWORD *)v11 + 5);
              v70 = __OFSUB__(v60, v61);
              v62 = v60 - v61;
              v63 = v70;
            }
            if ((v63 & 1) != 0)
              goto LABEL_137;
            v71 = v14 - 2;
            v77 = &v58[16 * v14 - 32];
            v79 = *(_QWORD *)v77;
            v78 = *((_QWORD *)v77 + 1);
            v80 = __OFSUB__(v78, v79);
            v81 = v78 - v79;
            v82 = v80;
            if (v80)
              goto LABEL_140;
            v83 = &v58[16 * v59];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v70 = __OFSUB__(v84, v85);
            v86 = v84 - v85;
            if (v70)
              goto LABEL_143;
            if (__OFADD__(v81, v86))
              goto LABEL_144;
            if (v81 + v86 >= v62)
            {
              v87 = v62 < v86;
LABEL_105:
              if (v87)
                v59 = v71;
              goto LABEL_107;
            }
LABEL_99:
            if ((v82 & 1) != 0)
              goto LABEL_139;
            v90 = &v58[16 * v59];
            v92 = *(_QWORD *)v90;
            v91 = *((_QWORD *)v90 + 1);
            v70 = __OFSUB__(v91, v92);
            v93 = v91 - v92;
            if (v70)
              goto LABEL_142;
            if (v93 < v81)
              goto LABEL_14;
LABEL_107:
            v98 = v59 - 1;
            if (v59 - 1 >= v14)
            {
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
              goto LABEL_155;
            }
            v99 = v13;
            if (!v13)
              goto LABEL_157;
            v100 = v11;
            v101 = v58;
            v102 = &v58[16 * v98];
            v103 = *(_QWORD *)v102;
            v104 = &v101[16 * v59];
            v105 = *((_QWORD *)v104 + 1);
            v106 = v99;
            sub_1001CB5FC((void **)(v99 + 8 * *(_QWORD *)v102), (id *)(v99 + 8 * *(_QWORD *)v104), v99 + 8 * v105, __dst);
            if (v1)
            {
              v11 = v100;
              goto LABEL_129;
            }
            if (v105 < v103)
              goto LABEL_132;
            if (v59 > *((_QWORD *)v100 + 2))
              goto LABEL_133;
            *(_QWORD *)v102 = v103;
            v58 = v125;
            *(_QWORD *)&v125[16 * v98 + 8] = v105;
            v107 = *((_QWORD *)v100 + 2);
            if (v59 >= v107)
              goto LABEL_134;
            v11 = v100;
            v14 = v107 - 1;
            memmove(v104, v104 + 16, 16 * (v107 - 1 - v59));
            *((_QWORD *)v100 + 2) = v107 - 1;
            v13 = v106;
            if (v107 <= 2)
              goto LABEL_14;
          }
        }
        v14 = 1;
LABEL_14:
        v4 = v121;
        if (v12 >= v121)
        {
          v2 = v1;
          if (v14 < 2)
            goto LABEL_129;
          goto LABEL_117;
        }
        goto LABEL_15;
      }
    }
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1001CB494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  double MinX;
  double v17;
  void *v18;
  uint64_t v21;
  CGRect v22;
  CGRect v23;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = a1;
    v21 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, "viewIfLoaded");
      if (!v12)
        break;
      v13 = v12;
      v14 = objc_msgSend(v11, "viewIfLoaded");
      if (!v14)
      {

        v10 = v11;
        goto LABEL_12;
      }
      v15 = v14;
      objc_msgSend(v13, "frame");
      MinX = CGRectGetMinX(v22);
      objc_msgSend(v15, "frame");
      v17 = CGRectGetMinX(v23);

      if (MinX >= v17)
        goto LABEL_4;
LABEL_13:
      if (!v5)
      {
        __break(1u);
        return;
      }
      v18 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v18;
      v6 -= 8;
      if (v4 == ++v8)
      {
LABEL_4:
        ++v4;
        v6 = v21 + 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
    }
    v13 = v11;
LABEL_12:

    goto LABEL_13;
  }
}

uint64_t sub_1001CB5FC(void **__src, id *a2, unint64_t a3, void **__dst)
{
  void **v4;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  char **v15;
  void **v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char **v21;
  void *v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  id *v27;
  void **v28;
  id *v29;
  id *v30;
  void **v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  double MinX;
  double v40;
  uint64_t result;
  void **v42;
  void **v43;
  id *v44;
  id *v45;
  unint64_t v46;
  void **v47;
  void **v48;
  id *v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v49 = __src;
  v48 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_54;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v28 = &v4[v13];
    v47 = v28;
    v49 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_53:
      sub_100156128((void **)&v49, (const void **)&v48, &v47);
      return 1;
    }
    v29 = (id *)(a3 - 8);
    v30 = v6;
    v42 = v4;
    v44 = v7;
    while (1)
    {
      v45 = v29 + 1;
      v46 = (unint64_t)v28;
      v31 = v28 - 1;
      v32 = *--v30;
      v33 = *(v28 - 1);
      v34 = v32;
      v35 = objc_msgSend(v33, "viewIfLoaded");
      if (!v35)
        break;
      v36 = v35;
      v37 = objc_msgSend(v34, "viewIfLoaded");
      if (!v37)
      {

        v33 = v34;
        v4 = v42;
        goto LABEL_47;
      }
      v38 = v37;
      objc_msgSend(v36, "frame");
      MinX = CGRectGetMinX(v52);
      objc_msgSend(v38, "frame");
      v40 = CGRectGetMinX(v53);

      v4 = v42;
      if (MinX >= v40)
      {
        v47 = v31;
        if ((unint64_t)v45 < v46 || (unint64_t)v29 >= v46 || v45 != (id *)v46)
          *v29 = *v31;
        v30 = v6;
        v28 = v31;
        if (v6 <= v44)
          goto LABEL_53;
        goto LABEL_52;
      }
LABEL_48:
      if (v45 != v6 || v29 >= v6)
        *v29 = *v30;
      v49 = v30;
      v28 = (void **)v46;
      if (v30 <= v44)
        goto LABEL_53;
LABEL_52:
      --v29;
      v6 = v30;
      if (v28 <= v4)
        goto LABEL_53;
    }
    v36 = v34;
LABEL_47:

    goto LABEL_48;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v47 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      v15 = &selRef_updateHeaderViewMargins;
      while (1)
      {
        v16 = v4;
        v17 = *v4;
        v18 = *v6;
        v19 = v17;
        v20 = objc_msgSend(v18, v15[156]);
        if (!v20)
          break;
        v21 = v15;
        v22 = v20;
        v43 = v7;
        v23 = objc_msgSend(v19, v21[156]);
        if (!v23)
        {

          v18 = v19;
          goto LABEL_21;
        }
        v24 = v23;
        objc_msgSend(v22, "frame");
        v25 = CGRectGetMinX(v50);
        objc_msgSend(v24, "frame");
        v26 = CGRectGetMinX(v51);

        v4 = v16;
        v7 = v43;
        if (v25 < v26)
          goto LABEL_22;
        v15 = &selRef_updateHeaderViewMargins;
        if (v43 != v16)
          *v43 = *v16;
        v4 = v16 + 1;
        v48 = v16 + 1;
        v27 = v6;
LABEL_26:
        ++v7;
        if (v4 < v14)
        {
          v6 = v27;
          if ((unint64_t)v27 < a3)
            continue;
        }
        v49 = v7;
        goto LABEL_53;
      }
      v22 = v19;
LABEL_21:

      v4 = v16;
LABEL_22:
      v27 = v6 + 1;
      v15 = &selRef_updateHeaderViewMargins;
      if (v7 < v6 || v7 >= v27 || v7 != v6)
        *v7 = *v6;
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_54:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001CBA04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1001CBA28@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  char v6;
  _QWORD *(*v7)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = result;
  v5 = *result;
  v6 = *((_BYTE *)result + 8);
  if (*((_BYTE *)result + 9) == 1)
  {
    *((_BYTE *)result + 9) = 0;
  }
  else if ((result[1] & 1) != 0)
  {
    v6 = 1;
  }
  else
  {
    v7 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16);
    v8 = *result;
    result = v7(&v9, &v8);
    v5 = v9;
    v6 = v10;
    *v3 = v9;
    *((_BYTE *)v3 + 8) = v6;
  }
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v6;
  return result;
}

unint64_t sub_1001CBAAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3500;
  if (!qword_1005D3500)
  {
    type metadata accessor for Level(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UIWindowLevel, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3500);
  }
  return result;
}

const char *sub_1001CBAF4()
{
  return "_ICDebugWindowEnabled";
}

id sub_1001CBB00@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "_ICDebugWindowEnabled");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1001CBB30(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "set_ICDebugWindowEnabled:", *a1);
}

uint64_t sub_1001CBB44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_unknownObjectUnownedDestroy(v2 + 16, a2);
  return swift_deallocObject(v2, 24, 7);
}

void sub_1001CBB68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C8E44(a1, a2, v2);
}

uint64_t sub_1001CBB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18(&qword_1005CF190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CBBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t result;

  v0 = sub_100012E18(&qword_1005D0DD0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100454E90;
  v2 = sub_100012E18(&qword_1005CF6F0);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100451BF0;
  v4 = (void *)objc_opt_self(UITraitCollection);
  *(_QWORD *)(v3 + 32) = objc_msgSend(v4, "traitCollectionWithUserInterfaceStyle:", 1);
  v5 = objc_msgSend(v4, "traitCollectionWithUserInterfaceStyle:", 2);
  *(_QWORD *)(v3 + 40) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  v6 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100451BF0;
  *(_QWORD *)(v6 + 32) = objc_msgSend(v4, "traitCollectionWithAccessibilityContrast:", 0);
  v7 = objc_msgSend(v4, "traitCollectionWithAccessibilityContrast:", 1);
  *(_QWORD *)(v6 + 40) = v7;
  result = specialized Array._endMutation()(v7);
  *(_QWORD *)(v1 + 40) = v6;
  off_1005D3510 = (_UNKNOWN *)v1;
  return result;
}

uint64_t sub_1001CBD10()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  int64_t v27;
  _QWORD *v28;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Class isa;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char v62[48];

  v1 = *(_QWORD **)(v0
                  + OBJC_IVAR____TtC11MobileNotes33ICSystemPaperChromeLayerGenerator____lazy_storage___chromeLayerTraitCollections);
  if (v1)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0
                                       + OBJC_IVAR____TtC11MobileNotes33ICSystemPaperChromeLayerGenerator____lazy_storage___chromeLayerTraitCollections));
    return (uint64_t)v1;
  }
  v51 = OBJC_IVAR____TtC11MobileNotes33ICSystemPaperChromeLayerGenerator____lazy_storage___chromeLayerTraitCollections;
  v52 = v0;
  if (qword_1005CEA30 != -1)
    goto LABEL_64;
LABEL_4:
  v2 = off_1005D3510;
  v3 = sub_100012E18(&qword_1005D0DD0);
  inited = swift_initStackObject(v3, v62);
  *(_OWORD *)(inited + 16) = xmmword_100451C20;
  v5 = sub_100012E18(&qword_1005CF6F0);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100456F30;
  v7 = objc_msgSend(objc_allocWithZone((Class)UITraitCollection), "init", swift_bridgeObjectRetain(v2).n128_f64[0]);
  *(_QWORD *)(v6 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(inited + 32) = v6;
  v55 = v2[2];
  if (v55)
  {
    v54 = (char *)(v2 + 4);
    v50 = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(inited);
    v8 = 0;
    v9 = (_QWORD *)inited;
    v53 = inited;
    while (1)
    {
      v59 = v9[2];
      if (v59)
        break;
      swift_bridgeObjectRelease(v9);
      v9 = _swiftEmptyArrayStorage;
LABEL_7:
      if (++v8 == v55)
      {
        swift_bridgeObjectRelease(inited);
        swift_bridgeObjectRelease_n(v50, 2);
        inited = (uint64_t)v9;
        v39 = v9[2];
        if (v39)
          goto LABEL_51;
LABEL_55:
        swift_bridgeObjectRelease(inited);
        v1 = _swiftEmptyArrayStorage;
        goto LABEL_56;
      }
    }
    v10 = *(_QWORD *)&v54[8 * v8];
    v57 = v8;
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v38 = *(_QWORD *)&v54[8 * v8];
      else
        v38 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v10, 2);
      swift_bridgeObjectRetain(v9);
      v11 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v9);
    }
    v12 = 0;
    v56 = v9;
    v58 = v9 + 4;
    v13 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (__OFADD__(v12, 1))
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_once(&qword_1005CEA30, sub_1001CBBB8);
        goto LABEL_4;
      }
      v61 = v12 + 1;
      if (v11)
      {
        v60 = v13;
        v15 = v58[v12];
        swift_bridgeObjectRetain(v15);
        sub_100137108(0, v11 & ~(v11 >> 63), 0);
        if (v11 < 0)
          goto LABEL_61;
        for (i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
            v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
          else
            v17 = *(id *)(v10 + 8 * i + 32);
          v18 = v17;
          swift_bridgeObjectRetain(v15);
          v19 = v18;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
          v21 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v20 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v21 >= v20 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
          v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
          specialized Array._endMutation()(v22);

          v24 = _swiftEmptyArrayStorage[2];
          v23 = _swiftEmptyArrayStorage[3];
          if (v24 >= v23 >> 1)
            sub_100137108(v23 > 1, v24 + 1, 1);
          _swiftEmptyArrayStorage[2] = v24 + 1;
          _swiftEmptyArrayStorage[v24 + 4] = v15;
        }
        swift_bridgeObjectRelease(v15);
        v13 = v60;
      }
      v25 = _swiftEmptyArrayStorage[2];
      v26 = v13[2];
      v27 = v26 + v25;
      if (__OFADD__(v26, v25))
        goto LABEL_59;
      v28 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
      v30 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v27 <= v28[3] >> 1)
      {
        if (_swiftEmptyArrayStorage[2])
          goto LABEL_36;
      }
      else
      {
        if (v26 <= v27)
          v31 = v26 + v25;
        else
          v31 = v26;
        v30 = sub_10016ACB8((_QWORD *)isUniquelyReferenced_nonNull_native, v31, 1, v28);
        if (_swiftEmptyArrayStorage[2])
        {
LABEL_36:
          v32 = v30[2];
          if ((v30[3] >> 1) - v32 < v25)
            goto LABEL_62;
          v33 = &v30[v32 + 4];
          if (&_swiftEmptyArrayStorage[4] < &v33[v25] && v33 < &_swiftEmptyArrayStorage[v25 + 4])
          {
            result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
            __break(1u);
            return result;
          }
          v14 = v30;
          sub_100012E18(&qword_1005D0DD8);
          swift_arrayInitWithCopy(v33);
          if (v25)
          {
            v35 = v14[2];
            v36 = __OFADD__(v35, v25);
            v37 = v35 + v25;
            if (v36)
              goto LABEL_63;
            v14[2] = v37;
          }
          goto LABEL_13;
        }
      }
      v14 = v30;
      if (v25)
        goto LABEL_60;
LABEL_13:
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v12 = v61;
      v13 = v14;
      if (v61 == v59)
      {
        v9 = v14;
        swift_bridgeObjectRelease(v10);
        swift_bridgeObjectRelease_n(v56, 2);
        inited = v53;
        v8 = v57;
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease(v2);
  v39 = *(_QWORD *)(inited + 16);
  if (!v39)
    goto LABEL_55;
LABEL_51:
  specialized ContiguousArray.reserveCapacity(_:)(v39);
  v40 = (void *)objc_opt_self(UITraitCollection);
  sub_1001CCD84();
  v41 = 0;
  do
  {
    v42 = v41 + 1;
    v43 = *(_QWORD *)(inited + 8 * v41 + 32);
    swift_bridgeObjectRetain(v43);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v43);
    v45 = objc_msgSend(v40, "traitCollectionWithTraitsFromCollections:", isa);

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    v46 = _swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v46);
    v47 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v45);
    specialized ContiguousArray._endMutation()(v47);
    v41 = v42;
  }
  while (v39 != v42);
  v1 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(inited);
LABEL_56:
  v48 = *(_QWORD *)(v52 + v51);
  *(_QWORD *)(v52 + v51) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v48);
  return (uint64_t)v1;
}

void sub_1001CC314(void *a1, id a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;

  v3 = objc_msgSend(a2, "view");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "layer");

    v6 = objc_msgSend(a1, "CGContext");
    objc_msgSend(v5, "renderInContext:", v6);

  }
  else
  {
    __break(1u);
  }
}

void sub_1001CC3BC(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t type metadata accessor for ICSystemPaperChromeLayerGenerator()
{
  return objc_opt_self(_TtC11MobileNotes33ICSystemPaperChromeLayerGenerator);
}

void sub_1001CC538(uint64_t a1)
{
  char **v1;
  char *v2;
  id v3;
  void *v4;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  Class isa;
  id v15;
  void *v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t i;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  double v41;
  double v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  char *v48;
  id v49;
  id v50;
  _QWORD aBlock[5];
  uint64_t v52;

  if (!objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
  {
    __break(1u);
    goto LABEL_21;
  }
  v6 = objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
  if (!v6)
    goto LABEL_32;
  v7 = v6;
  v8 = objc_msgSend(v6, "managedObjectContext");

  if (!v8)
    goto LABEL_32;
  v9 = objc_msgSend((id)objc_opt_self(ICNote), "newEmptyNoteInContext:", v8);
  v10 = sub_100012E18(&qword_1005CF6F0);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451BF0;
  *(_QWORD *)(v11 + 32) = a1;
  v12 = (void *)objc_opt_self(UITraitCollection);
  v3 = (id)a1;
  v13 = objc_msgSend(v12, "traitCollectionWithUserInterfaceLevel:", 1);
  *(_QWORD *)(v11 + 40) = v13;
  aBlock[0] = v11;
  specialized Array._endMutation()(v13);
  sub_1001CCD84();
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v50 = objc_msgSend(v12, "traitCollectionWithTraitsFromCollections:", isa);

  v2 = (char *)sub_10032200C(0, (uint64_t)_swiftEmptyArrayStorage);
  v1 = &selRef_updateHeaderViewMargins;
  v15 = objc_msgSend(v2, "view");
  if (!v15)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v16 = v15;
  type metadata accessor for ThumbnailGeneratorSystemPaper(0);
  v17 = static ThumbnailGeneratorSystemPaper.chromeSize.getter();
  objc_msgSend(v16, "setBounds:", 0.0, 0.0, v17, v18);

  v19 = objc_msgSend(v2, "view");
  if (!v19)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v20 = v19;
  objc_msgSend(v19, "_setLocalOverrideTraitCollection:", v3);

  v21 = objc_msgSend(v2, "view");
  if (!v21)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v22 = v21;
  if (objc_msgSend(v3, "layoutDirection") == (id)1)
    v23 = 4;
  else
    v23 = 3;
  objc_msgSend(v22, "setSemanticContentAttribute:", v23);

  v24 = objc_msgSend(v2, "view");
  if (!v24)
    goto LABEL_36;
  v25 = v24;
  objc_msgSend(v24, "setNeedsLayout");

  v26 = objc_msgSend(v2, "view");
  if (!v26)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v27 = v26;
  objc_msgSend(v26, "layoutIfNeeded");

  v28 = sub_100312C38();
  a1 = v28;
  v49 = v8;
  v4 = v9;
  if (v28 >> 62)
  {
LABEL_21:
    if (a1 < 0)
      v33 = a1;
    else
      v33 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v29 = _CocoaArrayWrapper.endIndex.getter(v33);
    if (!v29)
      goto LABEL_25;
    goto LABEL_14;
  }
  v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v28);
  if (!v29)
    goto LABEL_25;
LABEL_14:
  if (v29 < 1)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  for (i = 0; i != v29; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v31 = *(id *)(a1 + 8 * i + 32);
    v32 = v31;
    objc_msgSend(v31, "setAlpha:", 0.0);

  }
LABEL_25:
  swift_bridgeObjectRelease_n(a1, 2);
  v34 = v4;
  sub_100318A54(v4, 0, 0, 0, 0);

  v35 = *(void **)&v2[OBJC_IVAR___ICSystemPaperViewController_currentNoteEditorViewController];
  if (!v35)
  {
LABEL_28:
    v40 = objc_msgSend((id)objc_opt_self(UIGraphicsImageRendererFormat), "formatForTraitCollection:", v3);
    v41 = static ThumbnailGeneratorSystemPaper.chromeSize.getter();
    v43 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v40, v41, v42);
    v44 = swift_allocObject(&unk_10055CB68, 24, 7);
    *(_QWORD *)(v44 + 16) = v2;
    v45 = swift_allocObject(&unk_10055CB90, 32, 7);
    *(_QWORD *)(v45 + 16) = sub_1001CCDE4;
    *(_QWORD *)(v45 + 24) = v44;
    aBlock[4] = sub_1000165D8;
    v52 = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001CC3BC;
    aBlock[3] = &unk_10055CBA8;
    v46 = _Block_copy(aBlock);
    v47 = v52;
    v48 = v2;
    swift_retain(v45);
    swift_release(v47);
    objc_msgSend(v43, "imageWithActions:", v46);

    _Block_release(v46);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation(v45, "", 117, 54, 31, 1);
    swift_release(v45);
    if ((v48 & 1) == 0)
    {
      objc_msgSend(v49, "deleteObject:", v34);
      swift_release(v44);

      return;
    }
    __break(1u);
    goto LABEL_31;
  }
  v36 = objc_msgSend(v35, v1[145]);
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    v39 = objc_msgSend(v38, "resolvedColorWithTraitCollection:", v50);

    objc_msgSend(v37, "setBackgroundColor:", v39);
    goto LABEL_28;
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1001CCB2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v2 = v1;
  v4 = type metadata accessor for URL(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = _swiftEmptyArrayStorage;
    if (!v7)
      return (uint64_t)v8;
    v29 = _swiftEmptyArrayStorage;
    result = sub_1001370D0(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v8 = v29;
    v26 = a1 & 0xC000000000000001;
    v10 = type metadata accessor for ThumbnailGeneratorSystemPaper(0);
    v24 = a1;
    v25 = v10;
    v11 = 0;
    v23 = v7;
    while (v7 != v11)
    {
      if (v26)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      static ThumbnailGeneratorSystemPaper.chromeBackdropImageUrl(for:)();
      sub_1001CC538((uint64_t)v13);
      v15 = v14;
      v16 = objc_msgSend(v14, "ic_PNGData");
      v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

      Data.write(to:options:)(v6, 0, v17, v19);
      if (v2)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
        sub_10013DD30(v17, v19);
        swift_release(v8);

        return (uint64_t)v8;
      }

      sub_10013DD30(v17, v19);
      v29 = v8;
      v21 = v8[2];
      v20 = v8[3];
      if (v21 >= v20 >> 1)
      {
        sub_1001370D0(v20 > 1, v21 + 1, 1);
        v8 = v29;
      }
      ++v11;
      v8[2] = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v21, v6, v28);
      v7 = v23;
      a1 = v24;
      if (v23 == v11)
        return (uint64_t)v8;
    }
    __break(1u);
LABEL_18:
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

unint64_t sub_1001CCD84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005CFF40;
  if (!qword_1005CFF40)
  {
    v1 = objc_opt_self(UITraitCollection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005CFF40);
  }
  return result;
}

uint64_t sub_1001CCDC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001CCDE4(void *a1)
{
  uint64_t v1;

  sub_1001CC314(a1, *(id *)(v1 + 16));
}

uint64_t sub_1001CCDEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CD108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  Class isa;
  NSString v6;
  _BYTE v8[24];

  v3 = v1 + OBJC_IVAR___ICQuotaExceededAlertController_lastShowDate;
  swift_beginAccess(v3, v8, 33, 0);
  sub_1001CE91C(a1, v3);
  swift_endAccess(v8);
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  isa = Date._bridgeToObjectiveC()().super.isa;
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setObject:forKey:", isa, v6);

  return sub_100012DDC(a1, (uint64_t *)&unk_1005D7B20);
}

uint64_t sub_1001CD34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  id v18;
  Class isa;
  NSString v20;
  _BYTE v22[24];
  _BYTE v23[24];

  v1 = v0;
  v2 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v3 = __chkstk_darwin(v2);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v22[-v6];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_ignoresDebouncing) & 1) == 0)
  {
    if ((*(_BYTE *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_didShowForRecord) & 1) != 0)
      return 0;
    *(_BYTE *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_didShowForRecord) = 1;
    v13 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR___ICQuotaExceededAlertController_recordID), "recordName"));
    if (!v13)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v15 = v14;
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
    }
    objc_msgSend((id)objc_opt_self(ICNote), "setDidShowExceededStorageQuotaAlert:forNoteWithIdentifier:", 1, v13);

    v16 = v1 + OBJC_IVAR___ICQuotaExceededAlertController_lastShowDate;
    swift_beginAccess(v1 + OBJC_IVAR___ICQuotaExceededAlertController_lastShowDate, v23, 0, 0);
    sub_1001CE8D4(v16, (uint64_t)v7);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_100012DDC((uint64_t)v7, (uint64_t *)&unk_1005D7B20);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
      v17 = Date.timeIntervalSince(_:)(v11);
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
      if (v17 < *(double *)(v1 + OBJC_IVAR___ICQuotaExceededAlertController_minimumLastShowDateInterval))
        return 0;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v5, v1 + OBJC_IVAR___ICQuotaExceededAlertController_date, v8);
    v12 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    swift_beginAccess(v16, v22, 33, 0);
    sub_1001CE91C((uint64_t)v5, v16);
    swift_endAccess(v22);
    v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Date._bridgeToObjectiveC()().super.isa;
    v20 = String._bridgeToObjectiveC()();
    objc_msgSend(v18, "setObject:forKey:", isa, v20);

    sub_100012DDC((uint64_t)v5, (uint64_t *)&unk_1005D7B20);
    return v12;
  }
  return 1;
}

uint64_t sub_1001CD724()
{
  char *v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v16[5];
  uint64_t v17;
  _QWORD v18[2];

  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, 0, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v18[0] = v4;
  v18[1] = v6;
  v7 = *(void **)&v0[OBJC_IVAR___ICQuotaExceededAlertController_managedObjectContext];
  if (!v7)
    return v4;
  v8 = (_QWORD *)swift_allocObject(&unk_10055CC08, 40, 7);
  v8[2] = v0;
  v8[3] = v7;
  v8[4] = v18;
  v9 = swift_allocObject(&unk_10055CC30, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1001CE884;
  *(_QWORD *)(v9 + 24) = v8;
  v16[4] = sub_1000165D0;
  v17 = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_100016618;
  v16[3] = &unk_10055CC48;
  v10 = _Block_copy(v16);
  v11 = v17;
  v12 = v7;
  v13 = v0;
  swift_retain(v9);
  swift_release(v11);
  objc_msgSend(v12, "performBlockAndWait:", v10);

  _Block_release(v10);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 109, 90, 45, 1);
  result = swift_release(v9);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v4 = v18[0];
    swift_release(v8);
    return v4;
  }
  __break(1u);
  return result;
}

void sub_1001CD908(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  id v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;

  v5 = *(_QWORD *)(a1 + OBJC_IVAR___ICQuotaExceededAlertController_recordID);
  v6 = *(id *)(a1 + OBJC_IVAR___ICQuotaExceededAlertController_cloudContext);
  v7 = String._bridgeToObjectiveC()();
  v8 = sub_100012E18(&qword_1005D0EF0);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100451C20;
  *(_QWORD *)(v9 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(ICCloudRecordTypeAccountData);
  *(_QWORD *)(v9 + 40) = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v25 = objc_msgSend(v6, "existingCloudObjectForRecordID:recordType:accountID:context:excludingRecordTypes:", v5, 0, v7, a2, isa);

  if (v25)
  {
    v12 = objc_opt_self(ICNote);
    v13 = (void *)swift_dynamicCastObjCClass(v25, v12);
    if (!v13)
      goto LABEL_8;
    v14 = v13;
    v15 = objc_msgSend(v13, "quotedTitle");
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v18 = v17;

    swift_bridgeObjectRelease(v18);
    v19 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0)
      v19 = v16 & 0xFFFFFFFFFFFFLL;
    if (v19)
    {
      v20 = objc_msgSend(v14, "quotedTitle");
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      v24 = a3[1];
      *a3 = v21;
      a3[1] = v23;
      swift_bridgeObjectRelease(v24);
    }
    else
    {
LABEL_8:

    }
  }
}

id sub_1001CDAFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  NSString v6;
  id v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  void *v15;
  id v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  void *v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  _QWORD v31[5];
  uint64_t v32;

  sub_1001CDE98();
  v2 = v1;
  sub_1001CDF88();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v7 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v5, v6, 1);

  LOBYTE(v6) = objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICQuotaExceededAlertController_recordID), "ic_isOwnedByCurrentUser");
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  if ((v6 & 1) != 0)
  {
    v10 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend(v9, "localizedStringForKey:value:table:", v10, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v15 = (void *)objc_opt_self(UIAlertAction);
    v16 = objc_msgSend(v15, "actionWithTitle:style:handler:", v14, 1, 0);

    v17 = objc_msgSend(v8, "mainBundle");
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v17, "localizedStringForKey:value:table:", v18, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v21 = v20;

    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    v31[4] = sub_1001CE198;
    v32 = 0;
    v31[0] = _NSConcreteStackBlock;
    v31[1] = 1107296256;
    v31[2] = sub_1002489AC;
    v31[3] = &unk_10055CBD0;
    v23 = _Block_copy(v31);
    swift_release(v32);
    v24 = objc_msgSend(v15, "actionWithTitle:style:handler:", v22, 0, v23);
    _Block_release(v23);

    objc_msgSend(v7, "addAction:", v16);
    objc_msgSend(v7, "addAction:", v24);

  }
  else
  {
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v9, "localizedStringForKey:value:table:", v25, 0, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v28 = v27;

    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v24 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v29, 1, 0);

    objc_msgSend(v7, "addAction:", v24);
  }

  return v7;
}

uint64_t sub_1001CDE98()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICQuotaExceededAlertController_recordID), "ic_isOwnedByCurrentUser");
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, 0, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

char *sub_1001CDF88()
{
  uint64_t v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _BYTE v19[72];

  if ((objc_msgSend(*(id *)(v0 + OBJC_IVAR___ICQuotaExceededAlertController_recordID), "ic_isOwnedByCurrentUser") & 1) != 0)
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = String._bridgeToObjectiveC()();
    v3 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, 0, 0);

    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    return (char *)v4;
  }
  else
  {
    v6 = sub_100012E18((uint64_t *)&unk_1005D5630);
    inited = swift_initStackObject(v6, v19);
    *(_OWORD *)(inited + 16) = xmmword_100451C20;
    v8 = sub_1001CD724();
    v10 = v9;
    *(_QWORD *)(inited + 56) = &type metadata for String;
    *(_QWORD *)(inited + 64) = sub_1001797EC();
    *(_QWORD *)(inited + 32) = v8;
    *(_QWORD *)(inited + 40) = v10;
    v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "localizedStringForKey:value:table:", v12, 0, 0);

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    swift_bridgeObjectRetain(v16);
    v17 = sub_10012CED4(inited, v14, v16);
    swift_bridgeObjectRelease_n(v16, 2);
    swift_setDeallocating(inited);
    v18 = sub_100012E18(&qword_1005CFE68);
    swift_arrayDestroy(inited + 32, 1, v18);
    return v17;
  }
}

id sub_1001CE198()
{
  return objc_msgSend((id)objc_opt_self(UIApplication), "ic_openICloudStorageSettings");
}

void sub_1001CE1EC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v4 = objc_msgSend(v3, "applicationState");

  if (v4 != (id)2)
  {
    v7 = sub_1001CDAFC();
    v5 = objc_msgSend(a2, "rootViewController");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "presentViewController:animated:completion:", v7, 1, 0);

    }
  }
}

uint64_t sub_1001CE394()
{
  return type metadata accessor for QuotaExceededAlertController(0);
}

uint64_t type metadata accessor for QuotaExceededAlertController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D3580;
  if (!qword_1005D3580)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for QuotaExceededAlertController);
  return result;
}

void sub_1001CE3D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v6[0] = &unk_100459190;
  v2 = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    v6[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[3] = &unk_1004591A8;
    v6[4] = &unk_1004591A8;
    sub_100019C18(319);
    if (v5 <= 0x3F)
    {
      v6[5] = *(_QWORD *)(v4 - 8) + 64;
      v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[7] = &unk_1004591C0;
      v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
      v6[9] = &unk_100459190;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

id sub_1001CE4A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  id v29;
  uint64_t v30;
  NSString v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  objc_class *ObjectType;
  uint64_t v44;
  objc_super v45;
  _OWORD v46[2];
  _BYTE v47[24];
  uint64_t v48;

  v5 = v4;
  v44 = a4;
  v40 = a3;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  v8 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR___ICQuotaExceededAlertController_ignoresDebouncing] = 0;
  v11 = &v4[OBJC_IVAR___ICQuotaExceededAlertController_lastShowDate];
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v42 = (uint64_t)v11;
  v41(v11, 1, 1, v12);
  v14 = OBJC_IVAR___ICQuotaExceededAlertController_cloudContext;
  v15 = (void *)objc_opt_self(ICCloudContext);
  v16 = v5;
  *(_QWORD *)&v5[v14] = objc_msgSend(v15, "sharedContext");
  v17 = objc_msgSend((id)objc_opt_self(ICNoteContext), "sharedContext");
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(v17, "snapshotManagedObjectContext");

  }
  else
  {
    v19 = 0;
  }
  *(_QWORD *)&v16[OBJC_IVAR___ICQuotaExceededAlertController_managedObjectContext] = v19;
  *(_QWORD *)&v16[OBJC_IVAR___ICQuotaExceededAlertController_minimumLastShowDateInterval] = 0x408C200000000000;
  v20 = &v16[OBJC_IVAR___ICQuotaExceededAlertController_lastShowDateKey];
  *(_QWORD *)v20 = 0xD000000000000028;
  *((_QWORD *)v20 + 1) = 0x8000000100481660;
  *(_QWORD *)&v16[OBJC_IVAR___ICQuotaExceededAlertController_recordID] = a1;
  v21 = &v16[OBJC_IVAR___ICQuotaExceededAlertController_accountID];
  v22 = v40;
  *(_QWORD *)v21 = a2;
  *((_QWORD *)v21 + 1) = v22;
  v23 = v13;
  v24 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(&v16[OBJC_IVAR___ICQuotaExceededAlertController_date], v44, v12);
  v25 = objc_msgSend(a1, "recordName");
  if (!v25)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v27 = v26;
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
  }
  v28 = objc_msgSend((id)objc_opt_self(ICNote), "didShowExceededStorageQuotaAlertForNoteWithIdentifier:", v25);

  v16[OBJC_IVAR___ICQuotaExceededAlertController_didShowForRecord] = v28;
  v29 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v30 = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain(v30);
  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  v32 = objc_msgSend(v29, "objectForKey:", v31);

  if (v32)
  {
    _bridgeAnyObjectToAny(_:)(v46, v32);
    swift_unknownObjectRelease(v32, v33);
  }
  else
  {
    memset(v46, 0, sizeof(v46));
  }
  sub_1001CBB70((uint64_t)v46, (uint64_t)v47);
  if (v48)
  {
    v34 = swift_dynamicCast(v10, v47, (char *)&type metadata for Any + 8, v12, 6) ^ 1;
    v35 = v10;
  }
  else
  {
    sub_100012DDC((uint64_t)v47, &qword_1005CF190);
    v35 = v10;
    v34 = 1;
  }
  v41(v35, v34, 1, v12);
  v36 = v42;
  swift_beginAccess(v42, v47, 33, 0);
  sub_1001CE964((uint64_t)v10, v36);
  swift_endAccess(v47);

  v45.receiver = v16;
  v45.super_class = ObjectType;
  v37 = objc_msgSendSuper2(&v45, "init");
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v12);
  return v37;
}

uint64_t sub_1001CE858()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1001CE884()
{
  uint64_t v0;

  sub_1001CD908(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1001CE890()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CE8A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001CE8CC()
{
  uint64_t v0;

  sub_1001CE1EC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001CE8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CE91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CE964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CE9BC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static TopLevelFolder.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static TopLevelFolder.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100481790);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Title for entity representing top-level Notes folders", 53, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t TopLevelFolder.typeDisplayRepresentation.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEA38 != -1)
    swift_once(&qword_1005CEA38, sub_1001CE9BC);
  v0 = type metadata accessor for TypeDisplayRepresentation(0);
  return sub_10012A0B0(v0, (uint64_t)static TopLevelFolder.typeDisplayRepresentation);
}

uint64_t static TopLevelFolder.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA38 != -1)
    swift_once(&qword_1005CEA38, sub_1001CE9BC);
  v2 = type metadata accessor for TypeDisplayRepresentation(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static TopLevelFolder.typeDisplayRepresentation);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t TopLevelFolder.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1001CECC4 + 4 * byte_1004591D8[a1]))(0x65746F4E6C6C6163, 0xE900000000000073);
}

uint64_t sub_1001CECC4()
{
  return 0x65746F4E6874616DLL;
}

uint64_t sub_1001CECD8()
{
  return 0x746F4E6B63697571;
}

uint64_t sub_1001CECF4()
{
  return 0x6957646572616873;
}

void sub_1001CED18(char *a1)
{
  sub_10021657C(*a1);
}

unint64_t sub_1001CED24@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s11MobileNotes14TopLevelFolderO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001CED50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1001CED84 + 4 * byte_1004591DC[*v0]))();
}

void sub_1001CED84(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x65746F4E6874616DLL;
  a1[1] = v1;
}

void sub_1001CED9C(_QWORD *a1@<X8>)
{
  *a1 = 0x746F4E6B63697571;
  a1[1] = 0xEA00000000007365;
}

void sub_1001CEDBC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "sharedWithYou");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1001CEDE4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1001CEE34()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x65746F4E6874616DLL, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

void sub_1001CEEB0()
{
  __asm { BR              X10 }
}

uint64_t sub_1001CEEF0(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, 0x65746F4E6874616DLL, v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_1001CEF58(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1001CEFA4()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x65746F4E6874616DLL, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

uint64_t sub_1001CF020(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100128358();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001CF058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _BYTE *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  unint64_t result;
  uint64_t v57;
  char *v58;
  char *v59;
  _BYTE *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  char *v70;
  char *v71;

  v0 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v0);
  v71 = (char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v70 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = v4;
  __chkstk_darwin(v4);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for LocalizedStringResource(0);
  v15 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100012E18((uint64_t *)&unk_1005D35F0);
  v19 = sub_100012E18(&qword_1005D0290);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v65 = v19;
  v66 = v21;
  v22 = *(unsigned __int8 *)(v20 + 80);
  v23 = (v22 + 32) & ~v22;
  v24 = swift_allocObject(v18, v23 + 4 * v21, v22 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100457CB0;
  v62 = v24;
  v63 = v24 + v23;
  *(_BYTE *)(v24 + v23) = 0;
  v25 = String.LocalizationValue.init(stringLiteral:)(0x636552206C6C6143, 0xEF73676E6964726FLL);
  static Locale.current.getter(v25);
  v61 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v64 = *(void (**)(char *))(v5 + 104);
  v26 = v6;
  v68 = v6;
  v64(v8);
  v27 = v14;
  v28 = v11;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Title of the top-level Call Notes folder", 40, 2);
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v29 = v70;
  v69(v70, 1, 1, v67);
  v30 = v71;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000019, 0x80000001004816C0, 0, 0);
  v31 = v17;
  DisplayRepresentation.init(title:subtitle:image:)(v17, v29, v30);
  v33 = v65;
  v32 = v66;
  v34 = v63;
  v60 = (_BYTE *)(v63 + v66 + *(int *)(v65 + 48));
  *(_BYTE *)(v63 + v66) = 1;
  v35 = v27;
  v58 = v27;
  v36 = String.LocalizationValue.init(stringLiteral:)(0x746F4E206874614DLL, 0xEA00000000007365);
  v37 = v28;
  static Locale.current.getter(v36);
  v38 = v8;
  v59 = v8;
  v39 = v8;
  v40 = v61;
  v41 = (void (*)(char *, uint64_t, uint64_t))v64;
  ((void (*)(char *, _QWORD, uint64_t))v64)(v39, v61, v26);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v35, 0, 0, v37, v38, "Title of the top-level Math Notes folder", 40, 2);
  v42 = v70;
  v43 = v67;
  v69(v70, 1, 1, v67);
  v44 = v71;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x74616C75636C6163, 0xEA0000000000726FLL, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v31, v42, v44);
  v45 = 2 * v32;
  v46 = (_BYTE *)(v34 + 2 * v32);
  v60 = &v46[*(int *)(v33 + 48)];
  *v46 = 2;
  v47 = v58;
  v48 = String.LocalizationValue.init(stringLiteral:)(0x6F4E206B63697551, 0xEB00000000736574);
  static Locale.current.getter(v48);
  v49 = v59;
  v50 = v40;
  v41(v59, v40, v68);
  v51 = v31;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v47, 0, 0, v37, v49, "Title of the top-level Quick Notes folder", 41, 2);
  v52 = v69;
  v53 = v70;
  v69(v70, 1, 1, v43);
  v54 = v71;
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0x746F6E6B63697571, 0xE900000000000065, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v51, v53, v54);
  *(_BYTE *)(v63 + v45 + v66) = 3;
  v55 = String.LocalizationValue.init(stringLiteral:)(0x646572616853, 0xE600000000000000);
  static Locale.current.getter(v55);
  ((void (*)(char *, uint64_t, uint64_t))v64)(v49, v50, v68);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v47, 0, 0, v37, v49, "Title of the top-level Shared folder", 36, 2);
  v52(v53, 1, 1, v43);
  DisplayRepresentation.Image.init(systemName:tintColor:symbolConfiguration:)(0xD000000000000012, 0x8000000100481770, 0, 0);
  DisplayRepresentation.init(title:subtitle:image:)(v51, v53, v54);
  result = sub_100136078(v62);
  static TopLevelFolder.caseDisplayRepresentations = result;
  return result;
}

uint64_t *TopLevelFolder.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1005CEA40 != -1)
    swift_once(&qword_1005CEA40, sub_1001CF058);
  return &static TopLevelFolder.caseDisplayRepresentations;
}

double static TopLevelFolder.caseDisplayRepresentations.getter()
{
  double result;

  if (qword_1005CEA40 != -1)
    swift_once(&qword_1005CEA40, sub_1001CF058);
  *(_QWORD *)&result = swift_bridgeObjectRetain(static TopLevelFolder.caseDisplayRepresentations).n128_u64[0];
  return result;
}

_UNKNOWN **static TopLevelFolder.allCases.getter()
{
  return &off_100555F50;
}

uint64_t sub_1001CF6B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001CF8FC();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1001CF6EC(_QWORD *a1@<X8>)
{
  *a1 = &off_1005558F0;
}

unint64_t _s11MobileNotes14TopLevelFolderO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100555ED0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_1001CF748()
{
  unint64_t result;

  result = qword_1005D3590;
  if (!qword_1005D3590)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D3590);
  }
  return result;
}

unint64_t sub_1001CF790()
{
  unint64_t result;

  result = qword_1005D3598;
  if (!qword_1005D3598)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D3598);
  }
  return result;
}

unint64_t sub_1001CF7D8()
{
  unint64_t result;

  result = qword_1005D35A0;
  if (!qword_1005D35A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35A0);
  }
  return result;
}

unint64_t sub_1001CF820()
{
  unint64_t result;

  result = qword_1005D35A8;
  if (!qword_1005D35A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35A8);
  }
  return result;
}

unint64_t sub_1001CF868()
{
  unint64_t result;

  result = qword_1005D35B0;
  if (!qword_1005D35B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35B0);
  }
  return result;
}

unint64_t sub_1001CF8B0()
{
  unint64_t result;

  result = qword_1005D35B8;
  if (!qword_1005D35B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35B8);
  }
  return result;
}

unint64_t sub_1001CF8FC()
{
  unint64_t result;

  result = qword_1005D35C0;
  if (!qword_1005D35C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35C0);
  }
  return result;
}

uint64_t sub_1001CF940(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100128358();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1001CF984()
{
  unint64_t result;

  result = qword_1005D35C8;
  if (!qword_1005D35C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35C8);
  }
  return result;
}

unint64_t sub_1001CF9CC()
{
  unint64_t result;

  result = qword_1005D35D0;
  if (!qword_1005D35D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35D0);
  }
  return result;
}

unint64_t sub_1001CFA14()
{
  unint64_t result;

  result = qword_1005D35D8;
  if (!qword_1005D35D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TopLevelFolder, &type metadata for TopLevelFolder);
    atomic_store(result, (unint64_t *)&qword_1005D35D8);
  }
  return result;
}

unint64_t sub_1001CFA5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D35E0;
  if (!qword_1005D35E0)
  {
    v1 = sub_10001537C(&qword_1005D35E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D35E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TopLevelFolder(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TopLevelFolder(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001CFB84 + 4 * byte_1004591F1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001CFBB8 + 4 * byte_1004591EC[v4]))();
}

uint64_t sub_1001CFBB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CFBC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001CFBC8);
  return result;
}

uint64_t sub_1001CFBD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001CFBDCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001CFBE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CFBE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TopLevelFolder()
{
  return &type metadata for TopLevelFolder;
}

void sub_1001CFD3C()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  void *v3;
  id v4;
  NSString v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSString v33;
  NSString v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  uint64_t v39;
  void *v40;
  id v41;
  NSString v42;
  NSString v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  uint64_t v48;
  void *v49;
  id v50;
  NSString v51;
  NSString v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_whyTagsExampleBodyTextView);
  if (!Strong)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = (void *)Strong;
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v4, "localizedStringForKey:value:table:", v5, v6, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v2, "setText:", v10);

  v11 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_usingTagsAndFoldersTogetherBodyTextView);
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v12 = (void *)v11;
  v13 = objc_msgSend(v3, "mainBundle");
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v18 = v17;

  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  objc_msgSend(v12, "setText:", v19);

  v20 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_addingTagsBodyTextView);
  if (!v20)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v21 = (void *)v20;
  v22 = (void *)objc_opt_self(UIDevice);
  objc_msgSend(v22, "ic_isVision");
  v23 = objc_msgSend(v3, "mainBundle");
  v24 = String._bridgeToObjectiveC()();
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v28 = v27;

  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  objc_msgSend(v21, "setText:", v29);

  v30 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowserBodyTextView);
  if (!v30)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v31 = (void *)v30;
  v32 = objc_msgSend(v3, "mainBundle");
  v33 = String._bridgeToObjectiveC()();
  v34 = String._bridgeToObjectiveC()();
  v35 = objc_msgSend(v32, "localizedStringForKey:value:table:", v33, v34, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  v37 = v36;

  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  objc_msgSend(v31, "setText:", v38);

  v39 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowser2BodyTextView);
  if (!v39)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v40 = (void *)v39;
  objc_msgSend(v22, "ic_isVision");
  v41 = objc_msgSend(v3, "mainBundle");
  v42 = String._bridgeToObjectiveC()();
  v43 = String._bridgeToObjectiveC()();
  v44 = objc_msgSend(v41, "localizedStringForKey:value:table:", v42, v43, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
  v46 = v45;

  v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v46);
  objc_msgSend(v40, "setText:", v47);

  v48 = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_smartFoldersBodyTextView);
  if (v48)
  {
    v49 = (void *)v48;
    v50 = objc_msgSend(v3, "mainBundle");
    v51 = String._bridgeToObjectiveC()();
    v52 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend(v50, "localizedStringForKey:value:table:", v51, v52, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
    v55 = v54;

    v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v55);
    objc_msgSend(v49, "setText:", v56);

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1001D03CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_100012E18((uint64_t *)&unk_1005D07B0);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100451C20;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_smartFoldersBodyTextView);
  if (result)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder + 8);
    *(_QWORD *)(v2 + 32) = result;
    *(_QWORD *)(v2 + 40) = v5;
    *(_QWORD *)(v2 + 48) = v4;
    *(_BYTE *)(v2 + 56) = 1;
    swift_bridgeObjectRetain(v4);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001D0450(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v7;
  NSString v8;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType(v3);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___ICLearnMoreTagsViewController_whyTagsExampleBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___ICLearnMoreTagsViewController_usingTagsAndFoldersTogetherBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___ICLearnMoreTagsViewController_addingTagsBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowserBodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowser2BodyTextView], 0);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___ICLearnMoreTagsViewController_smartFoldersBodyTextView], 0);
  v7 = &v3[OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder];
  *(_QWORD *)v7 = 0xD000000000000024;
  *((_QWORD *)v7 + 1) = 0x80000001004820B0;
  if (a2)
  {
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v8 = 0;
  }
  v11.receiver = v3;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, "initWithNibName:bundle:", v8, a3);

  return v9;
}

id sub_1001D05E4(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___ICLearnMoreTagsViewController_whyTagsExampleBodyTextView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___ICLearnMoreTagsViewController_usingTagsAndFoldersTogetherBodyTextView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___ICLearnMoreTagsViewController_addingTagsBodyTextView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowserBodyTextView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowser2BodyTextView], 0);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___ICLearnMoreTagsViewController_smartFoldersBodyTextView], 0);
  v4 = &v1[OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder];
  *(_QWORD *)v4 = 0xD000000000000024;
  *((_QWORD *)v4 + 1) = 0x80000001004820B0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

uint64_t sub_1001D0704()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_whyTagsExampleBodyTextView);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_usingTagsAndFoldersTogetherBodyTextView);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_addingTagsBodyTextView);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowserBodyTextView);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_tagBrowser2BodyTextView);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR___ICLearnMoreTagsViewController_smartFoldersBodyTextView);
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR___ICLearnMoreTagsViewController_learnMoreEllipsisPlaceholder
                                             + 8));
}

uint64_t type metadata accessor for LearnMoreTagsViewController()
{
  return objc_opt_self(ICLearnMoreTagsViewController);
}

uint64_t sub_1001D08E8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t Strong;
  void *v5;
  id v6;
  char v7;
  id v8;
  void *v9;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR___ICLearnMoreTagsViewController_smartFoldersBodyTextView]);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100148CAC();
    v6 = a1;
    v7 = static NSObject.== infix(_:_:)(v6);

    if ((v7 & 1) != 0)
    {
      v8 = objc_msgSend(v2, "presentingViewController");
      if (v8)
      {
        v9 = v8;
        type metadata accessor for LearnMoreSmartFoldersViewController();
        sub_1003E26A0(v9);

      }
    }
  }
  return 0;
}

double CreateChecklistItemIntent.init()@<D0>(uint64_t a1@<X8>)
{
  __int128 v2;
  double result;
  _OWORD v4[2];
  __int128 v5;
  char v6;

  sub_1001D25E8((uint64_t *)v4);
  v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  return result;
}

uint64_t CreateChecklistItemIntent.noteEntity.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v4, (uint64_t *)&unk_1005D0B60);
  IntentParameter.wrappedValue.setter(v4);
  return sub_100012DDC(a1, (uint64_t *)&unk_1005D0B60);
}

void *CreateChecklistItemIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static CreateChecklistItemIntent.persistentIdentifier;
}

unint64_t static CreateChecklistItemIntent.persistentIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1001D0AA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static CreateChecklistItemIntent.title);
  sub_10012A0B0(v10, (uint64_t)static CreateChecklistItemIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001004821F0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t CreateChecklistItemIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEA48 != -1)
    swift_once(&qword_1005CEA48, sub_1001D0AA0);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static CreateChecklistItemIntent.title);
}

uint64_t static CreateChecklistItemIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA48 != -1)
    swift_once(&qword_1005CEA48, sub_1001D0AA0);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static CreateChecklistItemIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static CreateChecklistItemIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100482100);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static CreateChecklistItemIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v17;

  v0 = sub_100012E18(&qword_1005D3660);
  __chkstk_darwin(v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D3668);
  __chkstk_darwin(v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1001B26D8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 2, &type metadata for CreateChecklistItemIntent, v6);
  v7._object = (void *)0x8000000100482130;
  v7._countAndFlagsBits = 0xD000000000000016;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1004594D0, v8);
  v10 = sub_100012E18(&qword_1005D3670);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 544175136;
  v11._object = (void *)0xE400000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_1004594F8, v12);
  v14 = sub_100012E18(&qword_1005D3678);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for CreateChecklistItemIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for CreateChecklistItemIntent, v6);
}

uint64_t SetChecklistItemsCheckedIntent.loggingConfiguration.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[4];

  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
  return AppDependency.wrappedValue.setter(v5);
}

uint64_t (*SetChecklistItemsCheckedIntent.loggingConfiguration.modify(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = AppDependency.wrappedValue.modify();
  return sub_10012A600;
}

uint64_t SetChecklistItemsCheckedIntent.$loggingConfiguration.getter()
{
  return AppDependency.projectedValue.getter();
}

uint64_t CreateChecklistItemIntent.perform()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v2[13] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[14] = v5;
  v2[15] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v2[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0);
  v2[18] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v2[19] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[20] = swift_task_alloc(v10);
  v2[21] = swift_task_alloc(v10);
  v11 = type metadata accessor for ChecklistItemEntity(0);
  v2[22] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[23] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[24] = swift_task_alloc(v13);
  v2[25] = swift_task_alloc(v13);
  v2[26] = swift_task_alloc(v13);
  v2[27] = swift_task_alloc(v13);
  v14 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005CF198) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[28] = swift_task_alloc(v14);
  v2[29] = swift_task_alloc(v14);
  v15 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  v2[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for NoteEntity(0);
  v2[31] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v2[32] = v17;
  v2[33] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001D12FC, 0, 0);
}

uint64_t sub_1001D12FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = **(_QWORD **)(v0 + 88);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 40));
  v2 = *(_QWORD *)(v0 + 48);
  if (!v2)
    goto LABEL_8;
  v3 = *(_QWORD *)(v0 + 40);
  v4 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v4 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
LABEL_8:
    v24 = *(_QWORD *)(v0 + 160);
    v23 = *(_QWORD *)(v0 + 168);
    v25 = *(_QWORD *)(v0 + 136);
    v62 = *(_QWORD *)(v0 + 152);
    v65 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 128);
    v29 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 112);
    v30 = *(_QWORD *)(v0 + 96);
    v31 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100482150);
    static Locale.current.getter(v31);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v27, enum case for LocalizedStringResource.BundleDescription.main(_:), v29);
    v32 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v25, 0, 0, v26, v27, "Checklist item content prompt when creating a checklist item via App Intents", 76, 2);
    v33 = IntentParameter.projectedValue.getter(v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v24, v23, v65);
    IntentDialog.init(_:)(v24);
    v34 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v30, 0, 1, v34);
    v35 = type metadata accessor for AppIntentError(0);
    v36 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v35, v36, 0, 0);
    IntentParameter.needsValueError(_:)(v30);
    swift_release(v33);
    v37 = sub_100012DDC(v30, (uint64_t *)&unk_1005CEE20);
    swift_willThrow(v37);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v23, v65);
    goto LABEL_9;
  }
  v5 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD **)(v0 + 240);
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 8);
  IntentParameter.wrappedValue.getter(v7);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    v9 = *(_QWORD *)(v0 + 240);
    v59 = *(_QWORD *)(v0 + 168);
    v61 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 136);
    v64 = *(_QWORD *)(v0 + 144);
    v67 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v15 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease(v2);
    sub_100012DDC(v9, (uint64_t *)&unk_1005D0B60);
    v16 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x80000001004821C0);
    static Locale.current.getter(v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
    v17 = LocalizedStringResource.init(_:table:locale:bundle:comment:)(v10, 0, 0, v12, v11, "Checklist item content prompt when creating a checklist item via App Intents", 76, 2);
    v18 = IntentParameter.projectedValue.getter(v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v67, v59, v64);
    IntentDialog.init(_:)(v67);
    v19 = type metadata accessor for IntentDialog(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 0, 1, v19);
    v20 = type metadata accessor for AppIntentError(0);
    v21 = sub_100019C6C((unint64_t *)&unk_1005D6AD0, (uint64_t (*)(uint64_t))&type metadata accessor for AppIntentError, (uint64_t)&protocol conformance descriptor for AppIntentError);
    swift_allocError(v20, v21, 0, 0);
    IntentParameter.needsValueError(_:)(v15);
    swift_release(v18);
    v22 = sub_100012DDC(v15, (uint64_t *)&unk_1005CEE20);
    swift_willThrow(v22);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v59, v64);
LABEL_9:
    v38 = *(_QWORD *)(v0 + 232);
    v39 = *(_QWORD *)(v0 + 240);
    v41 = *(_QWORD *)(v0 + 216);
    v40 = *(_QWORD *)(v0 + 224);
    v43 = *(_QWORD *)(v0 + 200);
    v42 = *(_QWORD *)(v0 + 208);
    v44 = *(_QWORD *)(v0 + 192);
    v45 = *(_QWORD *)(v0 + 160);
    v46 = *(_QWORD *)(v0 + 168);
    v58 = *(_QWORD *)(v0 + 136);
    v60 = *(_QWORD *)(v0 + 128);
    v63 = *(_QWORD *)(v0 + 120);
    v66 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v39);
    swift_task_dealloc(v38);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v46);
    swift_task_dealloc(v45);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v63);
    swift_task_dealloc(v66);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v48 = *(__int128 **)(v0 + 88);
  sub_10013B170(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 264), type metadata accessor for NoteEntity);
  v49 = *((_QWORD *)v48 + 2);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 56));
  v50 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 272) = v50;
  v51 = *((_QWORD *)v48 + 3);
  v52 = swift_allocObject(&unk_10055CEF8, 88, 7);
  *(_QWORD *)(v0 + 280) = v52;
  v54 = v48[1];
  v53 = v48[2];
  v55 = *v48;
  *(_BYTE *)(v52 + 64) = *((_BYTE *)v48 + 48);
  *(_OWORD *)(v52 + 32) = v54;
  *(_OWORD *)(v52 + 48) = v53;
  *(_OWORD *)(v52 + 16) = v55;
  *(_QWORD *)(v52 + 72) = v3;
  *(_QWORD *)(v52 + 80) = v2;
  v56 = unk_1005D0B34;
  v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1005D0B30 + dword_1005D0B30);
  swift_retain(v1);
  swift_retain(v8);
  swift_retain(v49);
  swift_retain(v51);
  v57 = (_QWORD *)swift_task_alloc(v56);
  *(_QWORD *)(v0 + 288) = v57;
  *v57 = v0;
  v57[1] = sub_1001D184C;
  return v68(*(_QWORD *)(v0 + 232), v50, (uint64_t)sub_1001D2DA0, v52);
}

uint64_t sub_1001D184C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 288);
  *(_QWORD *)(*v1 + 296) = v0;
  swift_task_dealloc(v3);
  v5 = v2 + 272;
  v4 = *(void **)(v2 + 272);
  swift_release(*(_QWORD *)(v5 + 8));

  if (v0)
    v6 = sub_1001D1C5C;
  else
    v6 = sub_1001D18BC;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001D18BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  sub_100012CE8(*(_QWORD *)(v0 + 232), v1, &qword_1005CF198);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 232);
    sub_100012DDC(*(_QWORD *)(v0 + 224), &qword_1005CF198);
    type metadata accessor for ICError(0);
    v7 = v6;
    *(_QWORD *)(v0 + 72) = 227;
    v8 = sub_100174AD0((uint64_t)_swiftEmptyArrayStorage);
    v9 = sub_100019C6C((unint64_t *)&qword_1005CF520, (uint64_t (*)(uint64_t))type metadata accessor for ICError, (uint64_t)&unk_100452864);
    v10 = _BridgedStoredNSError.init(_:userInfo:)((_QWORD *)(v0 + 64), v0 + 72, v8, v7, v9);
    swift_willThrow(v10);
    sub_100012DDC(v5, &qword_1005CF198);
    sub_100145264(v4, type metadata accessor for NoteEntity);
    v12 = *(_QWORD *)(v0 + 232);
    v11 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 216);
    v13 = *(_QWORD *)(v0 + 224);
    v16 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 208);
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 168);
    v38 = *(_QWORD *)(v0 + 136);
    v40 = *(_QWORD *)(v0 + 128);
    v42 = *(_QWORD *)(v0 + 120);
    v44 = *(_QWORD *)(v0 + 96);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v19);
    swift_task_dealloc(v18);
    swift_task_dealloc(v38);
    swift_task_dealloc(v40);
    swift_task_dealloc(v42);
    swift_task_dealloc(v44);
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 264);
    v35 = *(_QWORD *)(v0 + 224);
    v20 = *(_QWORD *)(v0 + 208);
    v21 = *(_QWORD *)(v0 + 216);
    v22 = *(_QWORD *)(v0 + 192);
    v23 = *(_QWORD *)(v0 + 200);
    v33 = *(_QWORD *)(v0 + 232);
    v32 = *(_QWORD *)(v0 + 176);
    v36 = *(_QWORD *)(v0 + 240);
    v37 = *(_QWORD *)(v0 + 168);
    v39 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 136);
    v43 = *(_QWORD *)(v0 + 128);
    v45 = *(_QWORD *)(v0 + 120);
    v46 = *(_QWORD *)(v0 + 96);
    sub_10013B170(v35, v21, type metadata accessor for ChecklistItemEntity);
    sub_100145220(v21, v20, type metadata accessor for ChecklistItemEntity);
    v24 = _s11MobileNotes23OpenChecklistItemIntentVACycfC_0();
    v26 = v25;
    v28 = v27;
    sub_100145220(v20, v23, type metadata accessor for ChecklistItemEntity);
    sub_100145220(v23, v22, type metadata accessor for ChecklistItemEntity);
    IntentParameter.wrappedValue.setter(v22);
    sub_100145264(v23, type metadata accessor for ChecklistItemEntity);
    sub_100145264(v20, type metadata accessor for ChecklistItemEntity);
    *(_QWORD *)(v0 + 16) = v24;
    *(_QWORD *)(v0 + 24) = v26;
    *(_QWORD *)(v0 + 32) = v28;
    v29 = sub_100019C6C(&qword_1005D8C00, type metadata accessor for ChecklistItemEntity, (uint64_t)&protocol conformance descriptor for ChecklistItemEntity);
    v30 = sub_100185A18();
    static IntentResult.result<A, B>(value:opensIntent:)(v21, v0 + 16, v32, &type metadata for OpenChecklistItemIntent, v29, v30);
    sub_100145264(v21, type metadata accessor for ChecklistItemEntity);
    sub_100012DDC(v33, &qword_1005CF198);
    sub_100145264(v34, type metadata accessor for NoteEntity);
    swift_release(v24);
    swift_release(v26);
    swift_release(v28);
    swift_task_dealloc(v34);
    swift_task_dealloc(v36);
    swift_task_dealloc(v33);
    swift_task_dealloc(v35);
    swift_task_dealloc(v21);
    swift_task_dealloc(v20);
    swift_task_dealloc(v23);
    swift_task_dealloc(v22);
    swift_task_dealloc(v37);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D1C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_100145264(*(_QWORD *)(v0 + 264), type metadata accessor for NoteEntity);
  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 200);
  v5 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 160);
  v9 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 128);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 264));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v9);
  swift_task_dealloc(v8);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001D1D5C(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  id v27;
  char v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  Class isa;
  id v35;
  Class v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t object;
  uint64_t v55;
  uint64_t inited;
  void *v57;
  void *v58;
  id v59;
  unint64_t v60;
  id v61;
  NSString v62;
  Class v63;
  id v64;
  id v65;
  uint64_t v66;
  id v67;
  void *v68;
  unsigned int v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  int v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  id v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  char v103[72];

  v98._countAndFlagsBits = a3;
  v98._object = a4;
  v9 = type metadata accessor for ChecklistItemID(0);
  v10 = __chkstk_darwin(v9);
  v97 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v99 = (uint64_t)&v89 - v12;
  v100 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v100 - 8);
  v14 = __chkstk_darwin(v100);
  v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v89 - v17;
  v19 = objc_opt_self(ICNote);
  v20 = swift_dynamicCastObjCClass(a1, v19);
  if (!v20)
  {
    v26 = type metadata accessor for ChecklistItemEntity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a5, 1, 1, v26);
    return;
  }
  v21 = (void *)v20;
  v22 = a1;
  if ((objc_msgSend(v21, "isPasswordProtectedAndLocked") & 1) != 0)
  {
    v23 = sub_10013F4E8();
    v24 = swift_allocError(&type metadata for AppIntentsError, v23, 0, 0);
    *v25 = 11;
    swift_willThrow(v24);
LABEL_9:

    return;
  }
  v27 = objc_msgSend(v21, "textStorage");
  v96 = v27;
  if (!v27)
  {
    v30 = type metadata accessor for ChecklistItemEntity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a5, 1, 1, v30);
    goto LABEL_9;
  }
  v89 = a5;
  v28 = *(_BYTE *)(a2 + 48);
  v90 = v5;
  v93 = v22;
  if ((v28 & 1) != 0)
  {
    v27 = objc_msgSend(v96, "length");
    v29 = v27;
    v91 = 0;
  }
  else
  {
    v31 = *(void **)(a2 + 32);
    v91 = *(_QWORD *)(a2 + 40);
    v29 = v31;
  }
  UUID.init()(v27);
  v32 = objc_msgSend((id)objc_opt_self(ICTTMutableParagraphStyle), "paragraphStyleNamed:", 103);
  UUID.init()(v32);
  v33 = objc_allocWithZone((Class)ICTTTodo);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v35 = objc_msgSend(v33, "initWithIdentifier:done:", isa, 0);

  v92 = *(void (**)(char *, uint64_t))(v13 + 8);
  v92(v16, v100);
  objc_msgSend(v32, "setTodo:", v35);

  v36 = UUID._bridgeToObjectiveC()().super.isa;
  v94 = v32;
  objc_msgSend(v32, "setUuid:", v36);

  v95 = v29;
  v37 = (uint64_t)v29 - 1;
  if (__OFSUB__(v29, 1))
    __break(1u);
  v38 = objc_msgSend(v96, "length");
  if (v37 < 0 || v37 >= (uint64_t)v38)
    goto LABEL_18;
  v39 = v96;
  v40 = objc_msgSend(v96, "string");
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  v101 = v41;
  v102 = v43;
  v44 = sub_1001452E8();
  v45 = String.Index.init<A>(utf16Offset:in:)(v37, &v101, &type metadata for String, v44);
  v46 = objc_msgSend(v39, "string");
  v47 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v49 = v48;

  v50 = String.subscript.getter(v45, v47, v49);
  v52 = v51;
  swift_bridgeObjectRelease(v49);
  if (v50 == 10 && v52 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease(0xE100000000000000);
LABEL_18:
    object = (unint64_t)v98._object;
    swift_bridgeObjectRetain(v98._object);
    goto LABEL_19;
  }
  v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, 10, 0xE100000000000000, 0);
  swift_bridgeObjectRelease(v52);
  if ((v53 & 1) != 0)
    goto LABEL_18;
  v101 = 10;
  v102 = 0xE100000000000000;
  String.append(_:)(v98);
  object = v102;
LABEL_19:
  v55 = sub_100012E18(&qword_1005D1B58);
  inited = swift_initStackObject(v55, v103);
  *(_OWORD *)(inited + 16) = xmmword_100451C20;
  v57 = (void *)ICTTAttributeNameParagraphStyle;
  *(_QWORD *)(inited + 32) = ICTTAttributeNameParagraphStyle;
  *(_QWORD *)(inited + 64) = sub_1001D3178();
  v58 = v94;
  *(_QWORD *)(inited + 40) = v94;
  v59 = v57;
  v98._object = v58;
  v60 = sub_100135F1C(inited);
  v61 = objc_allocWithZone((Class)NSAttributedString);
  v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  type metadata accessor for Key(0);
  sub_100019C6C((unint64_t *)&qword_1005CF5E0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100452820);
  v63 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v60);
  v64 = objc_msgSend(v61, "initWithString:attributes:", v62, v63);

  v65 = objc_msgSend(v64, "ic_range");
  objc_msgSend(v96, "ic_replaceCharactersInRange:withAttributedSubstring:fromRange:", v95, v91, v64, v65, v66);
  objc_msgSend(v21, "updateModificationDateAndChangeCount");
  v67 = objc_msgSend(v21, "managedObjectContext");
  if (v67)
  {
    v68 = v67;
    v101 = 0;
    v69 = objc_msgSend(v67, "save:", &v101);

    v70 = v101;
    if (!v69)
    {
      v85 = (id)v101;
      _convertNSErrorToError(_:)(v70);

      swift_willThrow(v86);
      v92(v18, v100);
      return;
    }
    v71 = (id)v101;
  }
  v72 = objc_msgSend(v21, "objectID", v89, v90);
  v73 = *(int *)(v9 + 20);
  v74 = v99;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v99 + v73, v18, v100);
  v75 = objc_msgSend(v72, "URIRepresentation");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v75);

  v76 = v97;
  sub_100145220(v74, v97, type metadata accessor for ChecklistItemID);
  v77 = objc_msgSend(v21, "objectID");
  v78 = objc_msgSend(v64, "string");
  v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
  v81 = v80;

  v82 = objc_msgSend(v98._object, "todo");
  if (v82)
  {
    v83 = v82;
    v84 = objc_msgSend(v82, "done");

  }
  else
  {
    v84 = 0;
  }
  v87 = v89;
  ChecklistItemEntity.init(id:managedObjectID:text:checked:)(v76, v77, v79, v81, v84, v89);

  sub_100145264(v99, type metadata accessor for ChecklistItemID);
  v92(v18, v100);
  v88 = type metadata accessor for ChecklistItemEntity(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v87, 0, 1, v88);
}

uint64_t sub_1001D2528(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  _QWORD *v5;

  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(v2 + 64) = *(_BYTE *)(v1 + 48);
  v5 = (_QWORD *)swift_task_alloc(dword_1005D3684);
  *(_QWORD *)(v2 + 72) = v5;
  *v5 = v2;
  v5[1] = sub_1001D25A0;
  return CreateChecklistItemIntent.perform()(a1);
}

uint64_t sub_1001D25A0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1001D25E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64x2_t v49;
  int16x8_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t result;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  unsigned int v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  void (*v70)(char *);
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  unsigned __int32 v86;

  v76 = a1;
  v1 = sub_100012E18((uint64_t *)&unk_1005D0B60);
  __chkstk_darwin(v1);
  v75 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for InputConnectionBehavior(0);
  v73 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v78 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v5 = __chkstk_darwin(v4);
  v74 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v72 = (char *)&v61 - v7;
  v8 = sub_100012E18(&qword_1005CEF00);
  __chkstk_darwin(v8);
  v71 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v10);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Locale(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocalizedStringResource(0);
  v24 = *(_QWORD *)(v23 - 8);
  v67 = v23;
  __chkstk_darwin(v23);
  v77 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100012E18(&qword_1005CEF08);
  v26 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v26);
  v27 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v63 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v65 = v13;
  v28(v16, enum case for LocalizedStringResource.BundleDescription.main(_:), v13);
  v64 = v28;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0, 0, v19, v16, "Parameter title for Append Checklist Item intent", 48, 2);
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000038, 0x80000001004773A0);
  static Locale.current.getter(v29);
  v28(v16, v27, v13);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0, 0, v19, v16, "Parameter description for name", 30, 2);
  v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v62 = v12;
  v66(v12, 0, 1, v23);
  v30 = type metadata accessor for String.IntentInputOptions(0);
  v82 = 0;
  v83 = 0;
  v31 = v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v71, 1, 1, v30);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v34 = v72;
  v33(v72, 1, 1, v32);
  v69 = enum case for InputConnectionBehavior.default(_:);
  v70 = *(void (**)(char *))(v73 + 104);
  v35 = v78;
  v70(v78);
  v73 = IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)(v77, v12, &v82, v31, v34, v35);
  v71 = (char *)sub_100012E18(&qword_1005CEEC8);
  v36 = String.LocalizationValue.init(stringLiteral:)(1702129486, 0xE400000000000000);
  static Locale.current.getter(v36);
  v37 = v63;
  v38 = v65;
  v39 = v64;
  v64(v16, v63, v65);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0, 0, v19, v16, "Parameter title for Append Checklist Item intent", 48, 2);
  v40 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000031, 0x80000001004773E0);
  static Locale.current.getter(v40);
  v39(v16, v37, v38);
  v41 = v62;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v22, 0, 0, v19, v16, "Parameter description for note", 30, 2);
  v42 = v41;
  v66(v41, 0, 1, v67);
  v43 = type metadata accessor for NoteEntity(0);
  v44 = v75;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v75, 1, 1, v43);
  v33(v34, 1, 1, v32);
  v45 = v74;
  v33(v74, 1, 1, v32);
  v82 = sub_1001E8EEC();
  v83 = v46;
  v84 = v47;
  v85 = v48 & 1;
  v49 = (uint64x2_t)vdupq_n_s64(v48);
  v50 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v49, (uint64x2_t)xmmword_100451C10), (int32x4_t)vshlq_u64(v49, (uint64x2_t)xmmword_100451C00));
  *(int8x8_t *)v50.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v50), (int8x8_t)0x1000100010001);
  v86 = vmovn_s16(v50).u32[0];
  v51 = v78;
  ((void (*)(char *, _QWORD, uint64_t))v70)(v78, v69, v79);
  v52 = sub_100127D40();
  v53 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:query:)(v77, v42, v44, v34, v45, v51, &v82, &type metadata for VisibleNotesQuery, v52);
  sub_100012E18(&qword_1005CEE50);
  v80 = 0xD000000000000021;
  v81 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(&v82, &v80, &type metadata for String, &protocol witness table for String);
  v54 = type metadata accessor for AppDependencyManager(0);
  v55 = static AppDependencyManager.shared.getter(v54);
  v56 = AppDependency.__allocating_init(key:manager:)(&v82, v55);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v80 = 0xD000000000000024;
  v81 = 0x8000000100476B40;
  v57 = AnyHashable.init<A>(_:)(&v82, &v80, &type metadata for String, &protocol witness table for String);
  v58 = static AppDependencyManager.shared.getter(v57);
  result = AppDependency.__allocating_init(key:manager:)(&v82, v58);
  v60 = v76;
  *v76 = v73;
  v60[1] = v53;
  v60[2] = v56;
  v60[3] = result;
  v60[4] = 0;
  v60[5] = 0;
  *((_BYTE *)v60 + 48) = 1;
  return result;
}

uint64_t sub_1001D2D0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001D2D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001D2D5C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

void sub_1001D2DA0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1001D1D5C(a1, v2 + 16, *(_QWORD *)(v2 + 72), *(void **)(v2 + 80), a2);
}

unint64_t sub_1001D2DC0()
{
  unint64_t result;

  result = qword_1005D3688;
  if (!qword_1005D3688)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateChecklistItemIntent, &type metadata for CreateChecklistItemIntent);
    atomic_store(result, (unint64_t *)&qword_1005D3688);
  }
  return result;
}

unint64_t sub_1001D2E0C()
{
  unint64_t result;

  result = qword_1005D3690;
  if (!qword_1005D3690)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateChecklistItemIntent, &type metadata for CreateChecklistItemIntent);
    atomic_store(result, (unint64_t *)&qword_1005D3690);
  }
  return result;
}

unint64_t sub_1001D2E54()
{
  unint64_t result;

  result = qword_1005D3698;
  if (!qword_1005D3698)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CreateChecklistItemIntent, &type metadata for CreateChecklistItemIntent);
    atomic_store(result, (unint64_t *)&qword_1005D3698);
  }
  return result;
}

uint64_t sub_1001D2E98(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of CreateChecklistItemIntent.perform()>>, 1)+ 8);
}

uint64_t sub_1001D2EBC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static CreateChecklistItemIntent.parameterSummary>>, 1);
}

uint64_t initializeWithCopy for CreateChecklistItemIntent(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  v6 = a2[3];
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for CreateChecklistItemIntent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[3];
  v11 = a1[3];
  a1[3] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *((_OWORD *)a2 + 2);
  *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
  *((_OWORD *)a1 + 2) = v12;
  return a1;
}

__n128 initializeWithTake for CreateChecklistItemIntent(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CreateChecklistItemIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  swift_release(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateChecklistItemIntent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateChecklistItemIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateChecklistItemIntent()
{
  return &type metadata for CreateChecklistItemIntent;
}

uint64_t sub_1001D30F4()
{
  return sub_100016638(&qword_1005D36A8, &qword_1005D36B0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1001D3120()
{
  return sub_100016638(&qword_1005D36B8, &qword_1005D36C0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_1001D314C()
{
  return sub_100016638(&qword_1005D36C8, &qword_1005D36C0, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

unint64_t sub_1001D3178()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D1B60;
  if (!qword_1005D1B60)
  {
    v1 = objc_opt_self(ICTTMutableParagraphStyle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D1B60);
  }
  return result;
}

uint64_t sub_1001D31B4()
{
  return sub_100019C6C(&qword_1005D36D0, _s3TagVMa, (uint64_t)&unk_10045970C);
}

uint64_t _s3TagVMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D3750;
  if (!qword_1005D3750)
    return swift_getSingletonMetadata(a1, &_s3TagVMn);
  return result;
}

uint64_t sub_1001D321C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001CE8D4(v2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    v11 = sub_100019C6C((unint64_t *)&unk_1005D89F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v12 = (uint64_t *)(v2 + *(int *)(_s3TagVMa(0) + 20));
  v13 = *v12;
  v14 = v12[1];
  swift_bridgeObjectRetain(v14);
  String.hash(into:)(a1, v13, v14);
  return swift_bridgeObjectRelease(v14);
}

uint64_t sub_1001D338C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v3 = v1;
  v5 = sub_100012E18(&qword_1005D37A8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10012D19C(a1, v9);
  v11 = sub_1001D3C84();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&_s3TagV10CodingKeysON, &_s3TagV10CodingKeysON, v11, v9, v10);
  v20 = 0;
  v12 = type metadata accessor for Date(0);
  v13 = sub_100019C6C(&qword_1005D37B0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    v14 = (uint64_t *)(v3 + *(int *)(_s3TagVMa(0) + 20));
    v15 = *v14;
    v16 = v14[1];
    v19 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v19, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int sub_1001D34E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[9];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v6);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v15, 0);
  sub_1001CE8D4(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    v9 = sub_100019C6C((unint64_t *)&unk_1005D89F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(v15, v2, v9);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v10 = (uint64_t *)(v1 + *(int *)(_s3TagVMa(0) + 20));
  v11 = *v10;
  v12 = v10[1];
  swift_bridgeObjectRetain(v12);
  String.hash(into:)(v15, v11, v12);
  swift_bridgeObjectRelease(v12);
  return Hasher._finalize()();
}

uint64_t sub_1001D3664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  char v31;

  v25 = a2;
  v3 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v3);
  v27 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100012E18(&qword_1005D36D8);
  v5 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s3TagVMa(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v13 = a1[3];
  v12 = a1[4];
  sub_10012D19C(a1, v13);
  v14 = sub_1001D3C84();
  v28 = v7;
  v15 = v29;
  dispatch thunk of Decoder.container<A>(keyedBy:)(&_s3TagV10CodingKeysON, &_s3TagV10CodingKeysON, v14, v13, v12);
  if (v15)
  {
    sub_1000153C0(a1);
    return sub_100012DDC((uint64_t)v10, (uint64_t *)&unk_1005D7B20);
  }
  else
  {
    v16 = v25;
    v31 = 0;
    v17 = sub_100019C6C(&qword_1005D36E8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v18 = v26;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v11, &v31, v26, v11, v17);
    sub_1001CE964(v27, (uint64_t)v10);
    v30 = 1;
    v19 = KeyedDecodingContainer.decode(_:forKey:)(&v30, v18);
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v18);
    v22 = (uint64_t *)&v10[*(int *)(v8 + 20)];
    *v22 = v19;
    v22[1] = v21;
    sub_1001D3CC8((uint64_t)v10, v16);
    sub_1000153C0(a1);
    return sub_1001D3D0C((uint64_t)v10);
  }
}

uint64_t sub_1001D38C8()
{
  _BYTE *v0;

  if (*v0)
    return 1954047348;
  else
    return 0x4164657461657263;
}

uint64_t sub_1001D3900@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001D48E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001D3924(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D3C84();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001D394C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D3C84();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001D3974@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D3664(a1, a2);
}

uint64_t sub_1001D3988(_QWORD *a1)
{
  return sub_1001D338C(a1);
}

Swift::Int sub_1001D39A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[9];

  v4 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v10);
  v12 = (char *)&v19[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v19, a1);
  sub_1001CE8D4(v4, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    Hasher._combine(_:)(1u);
    v13 = sub_100019C6C((unint64_t *)&unk_1005D89F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(v19, v6, v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v14 = (uint64_t *)(v4 + *(int *)(a2 + 20));
  v15 = *v14;
  v16 = v14[1];
  swift_bridgeObjectRetain(v16);
  String.hash(into:)(v19, v15, v16);
  swift_bridgeObjectRelease(v16);
  return Hasher._finalize()();
}

uint64_t sub_1001D3B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  _QWORD *v4;

  v0 = _s3TagVMa(0);
  sub_10012B334(v0, qword_1006017F8);
  v1 = sub_10012A0B0(v0, (uint64_t)qword_1006017F8);
  v2 = type metadata accessor for Date(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v4 = (_QWORD *)(v1 + *(int *)(v0 + 20));
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1001D3BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  if (qword_1005CEA50 != -1)
    swift_once(&qword_1005CEA50, sub_1001D3B34);
  v4 = sub_10012A0B0(a1, (uint64_t)qword_1006017F8);
  return sub_1001D3CC8(v4, a2);
}

uint64_t sub_1001D3C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 1, 1, v8);
  v9 = (_QWORD *)(a4 + *(int *)(a3 + 20));
  *v9 = a1;
  v9[1] = a2;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 0, 1, a3);
}

unint64_t sub_1001D3C84()
{
  unint64_t result;

  result = qword_1005D36E0;
  if (!qword_1005D36E0)
  {
    result = swift_getWitnessTable(&unk_1004598A8, &_s3TagV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1005D36E0);
  }
  return result;
}

uint64_t sub_1001D3CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s3TagVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D3D0C(uint64_t a1)
{
  uint64_t v2;

  v2 = _s3TagVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D3D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100012E18((uint64_t *)&unk_1005D3D30);
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v32 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v32 - v18;
  sub_1001CE8D4(a1, (uint64_t)&v32 - v18);
  v33 = a2;
  sub_1001CE8D4(a2, (uint64_t)v17);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1001CE8D4((uint64_t)v19, (uint64_t)v10);
  sub_1001CE8D4((uint64_t)v17, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) != 1)
  {
    sub_1001CE8D4((uint64_t)v10, (uint64_t)v14);
    if (v21(v20, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v20, v4);
      v22 = sub_100019C6C(&qword_1005D36F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v7, v4, v22);
      v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v7, v4);
      sub_100012DDC((uint64_t)v17, (uint64_t *)&unk_1005D7B20);
      sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D7B20);
      v24(v14, v4);
      sub_100012DDC((uint64_t)v10, (uint64_t *)&unk_1005D7B20);
      if ((v23 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      v30 = 0;
      return v30 & 1;
    }
    sub_100012DDC((uint64_t)v17, (uint64_t *)&unk_1005D7B20);
    sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D7B20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_100012DDC((uint64_t)v10, (uint64_t *)&unk_1005D3D30);
    goto LABEL_11;
  }
  sub_100012DDC((uint64_t)v17, (uint64_t *)&unk_1005D7B20);
  sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D7B20);
  if (v21(v20, 1, v4) != 1)
    goto LABEL_6;
  sub_100012DDC((uint64_t)v10, (uint64_t *)&unk_1005D7B20);
LABEL_8:
  v25 = *(int *)(_s3TagVMa(0) + 20);
  v26 = *(_QWORD *)(a1 + v25);
  v27 = *(_QWORD *)(a1 + v25 + 8);
  v28 = (_QWORD *)(v33 + v25);
  v29 = v28[1];
  if (v26 == *v28 && v27 == v29)
    v30 = 1;
  else
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, *v28, v29, 0);
  return v30 & 1;
}

uint64_t _s3TagV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001D40AC + 4 * byte_1004596C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001D40E0 + 4 * asc_1004596C0[v4]))();
}

uint64_t sub_1001D40E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D40E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D40F0);
  return result;
}

uint64_t sub_1001D40FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D4104);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001D4108(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D4110(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s3TagV10CodingKeysOMa()
{
  return &_s3TagV10CodingKeysON;
}

uint64_t *sub_1001D412C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100012E18((uint64_t *)&unk_1005D7B20);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (uint64_t *)((char *)a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain(v14);
  }
  return a1;
}

uint64_t sub_1001D4220(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
}

char *sub_1001D428C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100012E18((uint64_t *)&unk_1005D7B20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  swift_bridgeObjectRetain(v12);
  return a1;
}

char *sub_1001D4354(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100012E18((uint64_t *)&unk_1005D7B20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v16 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

char *sub_1001D447C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100012E18((uint64_t *)&unk_1005D7B20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1001D4538(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100012E18((uint64_t *)&unk_1005D7B20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t sub_1001D4650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001D465C);
}

uint64_t sub_1001D465C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1001D46E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001D46EC);
}

uint64_t sub_1001D46EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_1001D476C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100019C18(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_100459748;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

unint64_t sub_1001D47E0()
{
  unint64_t result;

  result = qword_1005D3788;
  if (!qword_1005D3788)
  {
    result = swift_getWitnessTable(&unk_100459818, &_s3TagV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1005D3788);
  }
  return result;
}

uint64_t sub_1001D4824()
{
  return sub_100019C6C(&qword_1005D3790, _s3TagVMa, (uint64_t)&unk_100459760);
}

unint64_t sub_1001D4854()
{
  unint64_t result;

  result = qword_1005D3798;
  if (!qword_1005D3798)
  {
    result = swift_getWitnessTable(&unk_100459788, &_s3TagV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1005D3798);
  }
  return result;
}

unint64_t sub_1001D489C()
{
  unint64_t result;

  result = qword_1005D37A0;
  if (!qword_1005D37A0)
  {
    result = swift_getWitnessTable(&unk_1004597B0, &_s3TagV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1005D37A0);
  }
  return result;
}

uint64_t sub_1001D48E0(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074)
  {
    v5 = 0xE900000000000074;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4164657461657263, 0xE900000000000074, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease(0xE400000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(1954047348, 0xE400000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_1001D4AC0(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___buttonHorizontalMargin];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView] = 0;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for FolderComposerJoinCell();
  v4 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);
  if (v4)
  {
    sub_1000163BC(0, (unint64_t *)&qword_1005CFF40, UITraitCollection_ptr);
    v5 = v4;
    v6 = static UITraitCollection.traitsAffectingSizeAndColor.getter();
    v7 = UIView.registerForTraitChanges(_:action:)(v6, "setNeedsUpdateConfiguration");

    swift_unknownObjectRelease(v7, v8);
    swift_bridgeObjectRelease(v6);
  }
  else
  {

  }
  return v4;
}

uint64_t sub_1001D4BC4()
{
  void *v0;
  void *v1;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  isEscapingClosureAtFileLocation = type metadata accessor for UIListContentConfiguration(0);
  v3 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  v4 = __chkstk_darwin(isEscapingClosureAtFileLocation);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static UIListContentConfiguration.cell()(v4);
  UIListContentConfiguration.directionalLayoutMargins.getter(v7);
  v9 = v8;
  objc_msgSend(v0, "layoutMargins");
  if (v9 <= v10)
    v9 = v10;
  v11 = sub_1001D5100();
  v12 = objc_msgSend(v11, "superview");

  if (v12)
    goto LABEL_6;
  v13 = objc_msgSend(v1, "contentView");
  v14 = sub_1001D5100();
  objc_msgSend(v13, "addSubview:", v14);

  v15 = sub_1001D5100();
  if (qword_1005CEA58 != -1)
    goto LABEL_8;
  while (1)
  {
    objc_msgSend(v15, "ic_addAnchorsToFillSuperviewWithHorizontalPadding:verticalPadding:usesSafeAreaLayoutGuide:", 1, v9, *(double *)&qword_1005D37B8);

LABEL_6:
    v16 = (void *)objc_opt_self(UIView);
    v15 = (_QWORD *)swift_allocObject(&unk_10055D220, 24, 7);
    v15[2] = v1;
    v17 = swift_allocObject(&unk_10055D248, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_1001D52AC;
    *(_QWORD *)(v17 + 24) = v15;
    aBlock[4] = sub_1000165D0;
    v23 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100016618;
    aBlock[3] = &unk_10055D260;
    v18 = _Block_copy(aBlock);
    v19 = v23;
    v20 = v1;
    swift_retain(v17);
    swift_release(v19);
    objc_msgSend(v16, "performWithoutAnimation:", v18);
    _Block_release(v18);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, isEscapingClosureAtFileLocation);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v17, "", 118, 48, 40, 1);
    swift_release(v15);
    result = swift_release(v17);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
LABEL_8:
    swift_once(&qword_1005CEA58, sub_1001D50F0);
  }
  return result;
}

void sub_1001D4E54(_QWORD *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  NSString *v8;
  id v9;
  uint64_t v10;
  void *v11;
  NSString *v12;
  id v13;
  unint64_t v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  uint64_t v19;

  v2 = sub_1001D5100();
  (*(void (**)(void))((swift_isaMask & *a1) + 0x80))();
  v4 = v3;
  v5 = sub_100012E18(&qword_1005D1B58);
  inited = swift_initStackObject(v5, &v19);
  *(_OWORD *)(inited + 16) = xmmword_100454E90;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v7 = (void *)objc_opt_self(UIFont);
  v8 = NSFontAttributeName;
  v9 = objc_msgSend(v7, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  v10 = sub_1000163BC(0, (unint64_t *)&unk_1005DBFC0, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
  v11 = (void *)objc_opt_self(UIColor);
  v12 = NSForegroundColorAttributeName;
  v13 = objc_msgSend(v11, "labelColor");
  *(_QWORD *)(inited + 104) = sub_1000163BC(0, &qword_1005CFF50, UIColor_ptr);
  *(_QWORD *)(inited + 80) = v13;
  v14 = sub_100135F1C(inited);
  v15 = objc_allocWithZone((Class)NSAttributedString);
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  type metadata accessor for Key(0);
  sub_1001797A4();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v18 = objc_msgSend(v15, "initWithString:attributes:", v16, isa);

  objc_msgSend(v2, "setAttributedText:", v18);
}

void sub_1001D50F0()
{
  qword_1005D37B8 = 0x4020000000000000;
}

id sub_1001D5100()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSString *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  v1 = OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView;
  v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView);
  if (v2)
  {
    v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC11MobileNotes22FolderComposerJoinCell____lazy_storage___textView);
  }
  else
  {
    v4 = v0;
    v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x78))();
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(ICFilterSelectionMenuReplacementSubstring);
    v8 = v7;
    v9 = (void *)objc_opt_self(UIColor);
    v10 = UIFontTextStyleSubheadline;
    v11 = objc_msgSend(v9, "labelColor");
    v12 = objc_allocWithZone((Class)type metadata accessor for InlineMenuButtonTextView());
    v13 = sub_1003DAA9C(v5, v6, v8, v10, 0x100000000, v11);
    v14 = *(void **)((char *)v4 + v1);
    *(_QWORD *)((char *)v4 + v1) = v13;
    v3 = v13;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

id sub_1001D5228()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FolderComposerJoinCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FolderComposerJoinCell()
{
  return objc_opt_self(_TtC11MobileNotes22FolderComposerJoinCell);
}

uint64_t sub_1001D5288()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001D52AC()
{
  uint64_t v0;

  sub_1001D4E54(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1001D52B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D52C4()
{
  return 2;
}

unint64_t sub_1001D52CC()
{
  return sub_1001D53A4();
}

uint64_t type metadata accessor for FolderComposerFilterCellDateEdited()
{
  return objc_opt_self(_TtC11MobileNotes34FolderComposerFilterCellDateEdited);
}

unint64_t sub_1001D53A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3820;
  if (!qword_1005D3820)
  {
    v1 = objc_opt_self(ICDateEditedFilterTypeSelection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D3820);
  }
  return result;
}

id sub_1001D53E0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  Class isa;
  Class v18;
  id v19;
  id v21;

  v1 = v0;
  v2 = *v0;
  IntentParameter.wrappedValue.getter(&v21);
  v3 = v21;
  v5 = v0[1];
  v4 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  swift_retain(v2);
  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v7);
  v8 = sub_1001D683C((uint64_t)v3);
  swift_bridgeObjectRelease(v3);
  swift_release(v7);
  swift_release(v6);
  swift_release(v4);
  swift_release(v5);
  swift_release(v2);
  v9 = sub_10020BAFC((uint64_t)v8);
  swift_bridgeObjectRelease(v8);
  IntentParameter.wrappedValue.getter(&v21);
  v10 = v21;
  swift_retain(v2);
  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v7);
  v11 = sub_1001D683C((uint64_t)v10);
  swift_bridgeObjectRelease(v10);
  swift_release(v7);
  swift_release(v6);
  swift_release(v4);
  swift_release(v5);
  swift_release(v2);
  v12 = sub_10020BAFC((uint64_t)v11);
  swift_bridgeObjectRelease(v11);
  AppDependency.wrappedValue.getter(&v21);
  v13 = v21;
  v14 = objc_msgSend(v21, "modernManagedObjectContext");

  IntentParameter.wrappedValue.getter(&v21);
  if ((_BYTE)v21)
    v15 = 1;
  else
    v15 = 2;
  v16 = objc_allocWithZone((Class)ICTagSelection);
  sub_1001D76F4();
  sub_100019C6C((unint64_t *)&qword_1005D3CC0, (uint64_t (*)(uint64_t))sub_1001D76F4, (uint64_t)&protocol conformance descriptor for NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v18 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v12);
  v19 = objc_msgSend(v16, "initWithManagedObjectContext:includedObjectIDs:excludedObjectIDs:tagOperator:", v14, isa, v18, v15);

  return v19;
}

double ChangeTagSelectionIntent.init()@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  _OWORD v4[2];
  uint64_t v5;

  sub_1001D6988((uint64_t *)v4);
  result = *(double *)v4;
  v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

uint64_t ChangeTagSelectionIntent.includedTags.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t ChangeTagSelectionIntent.includedTags.setter(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t SetChecklistItemsCheckedIntent.entities.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t SetChecklistItemsCheckedIntent.entities.setter(uint64_t a1)
{
  uint64_t v2;

  v2 = a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t ChangeTagSelectionIntent.selectionOperator.getter()
{
  uint64_t v1;

  IntentParameter.wrappedValue.getter(&v1);
  return v1;
}

uint64_t ChangeTagSelectionIntent.selectionOperator.setter(char a1)
{
  char v2;

  v2 = a1 & 1;
  return IntentParameter.wrappedValue.setter(&v2);
}

void *ChangeTagSelectionIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static ChangeTagSelectionIntent.persistentIdentifier;
}

unint64_t static ChangeTagSelectionIntent.persistentIdentifier.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_1001D57D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static ChangeTagSelectionIntent.title);
  sub_10012A0B0(v10, (uint64_t)static ChangeTagSelectionIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100482370);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t ChangeTagSelectionIntent.title.unsafeMutableAddressor()
{
  return sub_100171BF8(&qword_1005CEA60, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static ChangeTagSelectionIntent.title, (uint64_t)sub_1001D57D4);
}

uint64_t static ChangeTagSelectionIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100171C60(&qword_1005CEA60, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static ChangeTagSelectionIntent.title, (uint64_t)sub_1001D57D4, a1);
}

void *ChangeTagSelectionIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static ChangeTagSelectionIntent.openAppWhenRun;
}

uint64_t static ChangeTagSelectionIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002DLL, 0x80000001004822E0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static ChangeTagSelectionIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v20;

  v0 = sub_100012E18(&qword_1005D3830);
  __chkstk_darwin(v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100012E18(&qword_1005D3838);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100185C94();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 3, &type metadata for ChangeTagSelectionIntent, v6);
  v7._countAndFlagsBits = 0x207463656C6553;
  v7._object = (void *)0xE700000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100459980, v8);
  v10 = sub_100012E18(&qword_1005D3840);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v10);
  swift_release(KeyPath);
  v11._countAndFlagsBits = 0x6964756C636E6920;
  v11._object = (void *)0xEB0000000020676ELL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v11);
  v13 = swift_getKeyPath(&unk_1004599A8, v12);
  v14 = sub_100012E18(&qword_1005D3848);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v13, v3, v14);
  swift_release(v13);
  v15._countAndFlagsBits = 0x63786520646E6120;
  v15._object = (void *)0xEF20676E6964756CLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  v17 = swift_getKeyPath(&unk_1004599D0, v16);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v17, v3, v14);
  swift_release(v17);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for ChangeTagSelectionIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for ChangeTagSelectionIntent, v6);
}

uint64_t TagSelectionOperatorEnum.tagSelectionOperator.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 1;
  else
    return 2;
}

uint64_t sub_1001D5DD0@<X0>(uint64_t a1@<X8>)
{
  return sub_10017262C(&qword_1005CEA60, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)static ChangeTagSelectionIntent.title, (uint64_t)sub_1001D57D4, a1);
}

uint64_t sub_1001D5DFC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10012B334(v16, static TagSelectionOperatorEnum.typeDisplayRepresentation);
  sub_10012A0B0(v16, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x8000000100482310);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Title for enum representing tag selection operators", 51, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

uint64_t TagSelectionOperatorEnum.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_100171BF8(&qword_1005CEA68, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation, (uint64_t)sub_1001D5DFC);
}

uint64_t static TagSelectionOperatorEnum.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100171C60(&qword_1005CEA68, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation, (uint64_t)sub_1001D5DFC, a1);
}

unint64_t sub_1001D6058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  unint64_t result;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v0 = sub_100012E18((uint64_t *)&unk_1005D1070);
  __chkstk_darwin(v0);
  v42 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v41 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v39 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v35 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100012E18(&qword_1005D38D8);
  v17 = sub_100012E18(&qword_1005D0280);
  v18 = *(_QWORD *)(v17 - 8);
  v38 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v38, v19 | 7);
  v40 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_100454E90;
  v22 = v21 + v20;
  v36 = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(7958081, 0xE300000000000000);
  v24 = v8;
  static Locale.current.getter(v23);
  v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v39 = *(_QWORD *)(v39 + 104);
  ((void (*)(char *))v39)(v5);
  v25 = v8;
  v26 = v5;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v25, v5, "Link enum value", 15, 2);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v27 = v41;
  v34(v41, 1, 1, v12);
  v28 = type metadata accessor for DisplayRepresentation.Image(0);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v30 = v42;
  v29(v42, 1, 1, v28);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v27, v30);
  *(_BYTE *)(v22 + v38) = 1;
  v31 = String.LocalizationValue.init(stringLiteral:)(7105601, 0xE300000000000000);
  static Locale.current.getter(v31);
  ((void (*)(char *, _QWORD, uint64_t))v39)(v26, v37, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v24, v26, "Link enum value", 15, 2);
  v34(v27, 1, 1, v35);
  v29(v30, 1, 1, v28);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v27, v30);
  result = sub_10013622C(v40);
  static TagSelectionOperatorEnum.caseDisplayRepresentations = result;
  return result;
}

uint64_t *TagSelectionOperatorEnum.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_1005CEA70 != -1)
    swift_once(&qword_1005CEA70, sub_1001D6058);
  return &static TagSelectionOperatorEnum.caseDisplayRepresentations;
}

double static TagSelectionOperatorEnum.caseDisplayRepresentations.getter()
{
  double result;
  _BYTE v1[24];

  if (qword_1005CEA70 != -1)
    swift_once(&qword_1005CEA70, sub_1001D6058);
  swift_beginAccess(&static TagSelectionOperatorEnum.caseDisplayRepresentations, v1, 0, 0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(static TagSelectionOperatorEnum.caseDisplayRepresentations).n128_u64[0];
  return result;
}

uint64_t static TagSelectionOperatorEnum.caseDisplayRepresentations.setter(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[24];

  if (qword_1005CEA70 != -1)
    swift_once(&qword_1005CEA70, sub_1001D6058);
  swift_beginAccess(&static TagSelectionOperatorEnum.caseDisplayRepresentations, v4, 1, 0);
  v2 = static TagSelectionOperatorEnum.caseDisplayRepresentations;
  static TagSelectionOperatorEnum.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease(v2);
}

uint64_t (*static TagSelectionOperatorEnum.caseDisplayRepresentations.modify(uint64_t a1))(_QWORD)
{
  if (qword_1005CEA70 != -1)
    swift_once(&qword_1005CEA70, sub_1001D6058);
  swift_beginAccess(&static TagSelectionOperatorEnum.caseDisplayRepresentations, a1, 33, 0);
  return j__swift_endAccess;
}

BOOL TagSelectionOperatorEnum.init(tagSelectionOperator:)(uint64_t a1)
{
  return a1 != 2;
}

MobileNotes::TagSelectionOperatorEnum_optional __swiftcall TagSelectionOperatorEnum.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  MobileNotes::TagSelectionOperatorEnum_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100555FA0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = MobileNotes_TagSelectionOperatorEnum_all;
  else
    v4.value = MobileNotes_TagSelectionOperatorEnum_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

_UNKNOWN **static TagSelectionOperatorEnum.allCases.getter()
{
  return &off_100555FF0;
}

uint64_t TagSelectionOperatorEnum.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 7105633;
  else
    return 7958113;
}

uint64_t sub_1001D660C(char *a1, char *a2)
{
  return sub_1002154F0(*a1, *a2);
}

Swift::Int sub_1001D6618()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  if (v1)
    v2 = 7105633;
  else
    v2 = 7958113;
  String.hash(into:)(v4, v2, 0xE300000000000000);
  swift_bridgeObjectRelease(0xE300000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1001D667C(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 7105633;
  else
    v2 = 7958113;
  String.hash(into:)(a1, v2, 0xE300000000000000);
  return swift_bridgeObjectRelease(0xE300000000000000);
}

Swift::Int sub_1001D66B4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  if (v2)
    v3 = 7105633;
  else
    v3 = 7958113;
  String.hash(into:)(v5, v3, 0xE300000000000000);
  swift_bridgeObjectRelease(0xE300000000000000);
  return Hasher._finalize()();
}

uint64_t sub_1001D6714@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100555FA0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1001D6770(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 7958113;
  if (*v1)
    v2 = 7105633;
  *a1 = v2;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1001D6798@<X0>(uint64_t a1@<X8>)
{
  return sub_10017262C(&qword_1005CEA68, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static TagSelectionOperatorEnum.typeDisplayRepresentation, (uint64_t)sub_1001D5DFC, a1);
}

uint64_t sub_1001D67BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100127EF0();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1001D67F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001D7438();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_1001D682C(_QWORD *a1@<X8>)
{
  *a1 = &off_100555B20;
}

_QWORD *sub_1001D683C(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;

  result = _swiftEmptyArrayStorage;
  v18 = (unint64_t)_swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = type metadata accessor for TagEntity(0);
    v5 = *(_QWORD *)(v4 - 8);
    v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    v16 = a1;
    swift_bridgeObjectRetain(a1);
    do
    {
      AppDependency.wrappedValue.getter(&v17);
      v9 = v17;
      URL._bridgeToObjectiveC()((NSURL *)*(int *)(v4 + 20));
      v11 = v10;
      v12 = objc_msgSend(v9, "managedObjectIDForURIRepresentation:", v10);

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v15 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
        specialized Array._endMutation()(v8);
      }
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v16);
    return (_QWORD *)v18;
  }
  return result;
}

uint64_t sub_1001D6988@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t result;
  uint64_t *v57;
  uint64_t v58;
  char *v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  void (*v64)(char *);
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  unsigned int v71;
  void (*v72)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD v78[7];

  v63 = a1;
  v75 = type metadata accessor for InputConnectionBehavior(0);
  v68 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v70 = (char *)&v59 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100012E18((uint64_t *)&unk_1005CEE20);
  v3 = __chkstk_darwin(v2);
  v69 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v74 = (char *)&v59 - v5;
  v6 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100012E18(&qword_1005CEE68);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x646564756C636E49, 0xED00007367615420);
  static Locale.current.getter(v23);
  v24 = *(void (**)(char *))(v10 + 104);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v65 = v9;
  v24(v12);
  v64 = v24;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter title for Change Tag Selection intent", 47, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002BLL, 0x8000000100477450);
  static Locale.current.getter(v26);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v12, v25, v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter description for included tags", 39, 2);
  v72 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v67 = v19;
  v72(v8, 0, 1, v19);
  v78[0] = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v66 = v28;
  v29 = v74;
  v28(v74, 1, 1, v27);
  v30 = v69;
  v28(v69, 1, 1, v27);
  v71 = enum case for InputConnectionBehavior.default(_:);
  v68 = *(_QWORD *)(v68 + 104);
  v31 = v70;
  ((void (*)(char *))v68)(v70);
  v61 = sub_100019C6C((unint64_t *)&unk_1005CEE70, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  v59 = v22;
  v62 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v22, v8, v78, v29, v30, v31, v61);
  v32 = String.LocalizationValue.init(stringLiteral:)(0x646564756C637845, 0xED00007367615420);
  static Locale.current.getter(v32);
  v60 = v25;
  v33 = (void (*)(char *, uint64_t, uint64_t))v64;
  v34 = v65;
  ((void (*)(char *, uint64_t, uint64_t))v64)(v12, v25, v65);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter title for Change Tag Selection intent", 47, 2);
  v35 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000036, 0x80000001004774B0);
  static Locale.current.getter(v35);
  v33(v12, v25, v34);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter description for excluded tags", 39, 2);
  v36 = v8;
  v72(v8, 0, 1, v67);
  v78[0] = 0;
  v37 = v74;
  v38 = v66;
  v66(v74, 1, 1, v27);
  v39 = v69;
  v38(v69, 1, 1, v27);
  ((void (*)(char *, _QWORD, uint64_t))v68)(v31, v71, v75);
  v40 = v59;
  v73 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v59, v36, v78, v37, v39, v31, v61);
  v61 = sub_100012E18(&qword_1005CEF50);
  v41 = String.LocalizationValue.init(stringLiteral:)(0x6F697463656C6553, 0xE90000000000006ELL);
  static Locale.current.getter(v41);
  v42 = v60;
  v43 = (void (*)(char *, uint64_t, uint64_t))v64;
  v44 = v65;
  ((void (*)(char *, _QWORD, uint64_t))v64)(v12, v60, v65);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter Change Tag Selection intent", 37, 2);
  v45 = String.LocalizationValue.init(stringLiteral:)(0x10000000000000C7, 0x8000000100477550);
  static Locale.current.getter(v45);
  v43(v12, v42, v44);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Parameter description for selection operator", 44, 2);
  v72(v36, 0, 1, v67);
  LOBYTE(v78[0]) = 2;
  v46 = v74;
  v47 = v66;
  v66(v74, 1, 1, v27);
  v47(v39, 1, 1, v27);
  v48 = v70;
  ((void (*)(char *, _QWORD, uint64_t))v68)(v70, v71, v75);
  v49 = sub_100127EF0();
  v50 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v40, v36, v78, v46, v39, v48, &off_100555DE0, v49);
  sub_100012E18(&qword_1005CEE50);
  v76 = 0xD000000000000021;
  v77 = 0x8000000100476B70;
  AnyHashable.init<A>(_:)(v78, &v76, &type metadata for String, &protocol witness table for String);
  v51 = type metadata accessor for AppDependencyManager(0);
  v52 = static AppDependencyManager.shared.getter(v51);
  v53 = AppDependency.__allocating_init(key:manager:)(v78, v52);
  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v76 = 0xD000000000000024;
  v77 = 0x8000000100476B40;
  v54 = AnyHashable.init<A>(_:)(v78, &v76, &type metadata for String, &protocol witness table for String);
  v55 = static AppDependencyManager.shared.getter(v54);
  result = AppDependency.__allocating_init(key:manager:)(v78, v55);
  v57 = v63;
  v58 = v73;
  *v63 = v62;
  v57[1] = v58;
  v57[2] = v50;
  v57[3] = v53;
  v57[4] = result;
  return result;
}

uint64_t sub_1001D7158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001D7180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001D71A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1001D71D4()
{
  unint64_t result;

  result = qword_1005D3850;
  if (!qword_1005D3850)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeTagSelectionIntent, &type metadata for ChangeTagSelectionIntent);
    atomic_store(result, (unint64_t *)&qword_1005D3850);
  }
  return result;
}

unint64_t sub_1001D721C()
{
  unint64_t result;

  result = qword_1005D3858;
  if (!qword_1005D3858)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ChangeTagSelectionIntent, &type metadata for ChangeTagSelectionIntent);
    atomic_store(result, (unint64_t *)&qword_1005D3858);
  }
  return result;
}

uint64_t sub_1001D7260(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of ChangeTagSelectionIntent.perform()>>, 1);
}

uint64_t sub_1001D7270(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static ChangeTagSelectionIntent.parameterSummary>>, 1);
}

unint64_t sub_1001D7284()
{
  unint64_t result;

  result = qword_1005D3868;
  if (!qword_1005D3868)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D3868);
  }
  return result;
}

unint64_t sub_1001D72CC()
{
  unint64_t result;

  result = qword_1005D3870;
  if (!qword_1005D3870)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D3870);
  }
  return result;
}

unint64_t sub_1001D7314()
{
  unint64_t result;

  result = qword_1005D3878;
  if (!qword_1005D3878)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D3878);
  }
  return result;
}

unint64_t sub_1001D735C()
{
  unint64_t result;

  result = qword_1005D3880;
  if (!qword_1005D3880)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D3880);
  }
  return result;
}

unint64_t sub_1001D73A4()
{
  unint64_t result;

  result = qword_1005D3888;
  if (!qword_1005D3888)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D3888);
  }
  return result;
}

unint64_t sub_1001D73EC()
{
  unint64_t result;

  result = qword_1005D3890;
  if (!qword_1005D3890)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D3890);
  }
  return result;
}

unint64_t sub_1001D7438()
{
  unint64_t result;

  result = qword_1005D3898;
  if (!qword_1005D3898)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D3898);
  }
  return result;
}

uint64_t sub_1001D747C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100127EF0();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1001D74C0()
{
  unint64_t result;

  result = qword_1005D38A0;
  if (!qword_1005D38A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D38A0);
  }
  return result;
}

unint64_t sub_1001D7508()
{
  unint64_t result;

  result = qword_1005D38A8;
  if (!qword_1005D38A8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D38A8);
  }
  return result;
}

unint64_t sub_1001D7550()
{
  unint64_t result;

  result = qword_1005D38B0;
  if (!qword_1005D38B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TagSelectionOperatorEnum, &type metadata for TagSelectionOperatorEnum);
    atomic_store(result, (unint64_t *)&qword_1005D38B0);
  }
  return result;
}

uint64_t sub_1001D7594()
{
  return sub_100016638(&qword_1005D38B8, &qword_1005D38C0, (uint64_t)&protocol conformance descriptor for [A]);
}

ValueMetadata *type metadata accessor for ChangeTagSelectionIntent()
{
  return &type metadata for ChangeTagSelectionIntent;
}

uint64_t storeEnumTagSinglePayload for TagSelectionOperatorEnum(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001D761C + 4 * byte_100459955[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001D7650 + 4 * asc_100459950[v4]))();
}

uint64_t sub_1001D7650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D7658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D7660);
  return result;
}

uint64_t sub_1001D766C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D7674);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001D7678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D7680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TagSelectionOperatorEnum()
{
  return &type metadata for TagSelectionOperatorEnum;
}

uint64_t sub_1001D769C()
{
  return sub_100016638(&qword_1005D38C8, &qword_1005D38D0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1001D76C8()
{
  return sub_100016638((unint64_t *)&qword_1005D1B40, (uint64_t *)&unk_1005D0690, (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

unint64_t sub_1001D76F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2500;
  if (!qword_1005D2500)
  {
    v1 = objc_opt_self(NSManagedObjectID);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D2500);
  }
  return result;
}

void *TakePhotoIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static TakePhotoIntent.persistentIdentifier;
}

unint64_t static TakePhotoIntent.persistentIdentifier.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1001D7758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10012B334(v10, static TakePhotoIntent.title);
  sub_10012A0B0(v10, (uint64_t)static TakePhotoIntent.title);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x8000000100482420);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Intent title", 12, 2);
}

uint64_t TakePhotoIntent.title.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1005CEA78 != -1)
    swift_once(&qword_1005CEA78, sub_1001D7758);
  v0 = type metadata accessor for LocalizedStringResource(0);
  return sub_10012A0B0(v0, (uint64_t)static TakePhotoIntent.title);
}

uint64_t static TakePhotoIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA78 != -1)
    swift_once(&qword_1005CEA78, sub_1001D7758);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_10012A0B0(v2, (uint64_t)static TakePhotoIntent.title);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void *TakePhotoIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static TakePhotoIntent.openAppWhenRun;
}

uint64_t static TakePhotoIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[16];

  v2 = sub_100012E18(&qword_1005CEE30);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Locale(0);
  __chkstk_darwin(v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for LocalizedStringResource(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = String.LocalizationValue.init(stringLiteral:)(0x1000000000000042, 0x80000001004823B0);
  static Locale.current.getter(v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v11, v8, "Intent description", 18, 2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, 1, 1, v15);
  IntentDescription.init(_:categoryName:searchKeywords:)(v18, v4, _swiftEmptyArrayStorage);
  v20 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 0, 1, v20);
}

uint64_t static TakePhotoIntent.parameterSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  uint64_t v5;

  v0 = sub_100012E18(&qword_1005D38E8);
  __chkstk_darwin(v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100185F54();
  ParameterSummaryString.init(stringLiteral:)(0xD000000000000013, 0x8000000100482400, &type metadata for TakePhotoIntent, v3);
  return IntentParameterSummary.init(_:table:)(v2, 0, 0, &type metadata for TakePhotoIntent, v3);
}

uint64_t sub_1001D7C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = sub_100012E18(&qword_1005D38E8);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.init(stringLiteral:)(0xD000000000000013, 0x8000000100482400, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0, 0, a1, a2);
}

unint64_t sub_1001D7D10()
{
  unint64_t result;

  result = qword_1005D38F0;
  if (!qword_1005D38F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TakePhotoIntent, &type metadata for TakePhotoIntent);
    atomic_store(result, (unint64_t *)&qword_1005D38F0);
  }
  return result;
}

unint64_t sub_1001D7D58()
{
  unint64_t result;

  result = qword_1005D38F8;
  if (!qword_1005D38F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for TakePhotoIntent, &type metadata for TakePhotoIntent);
    atomic_store(result, (unint64_t *)&qword_1005D38F8);
  }
  return result;
}

uint64_t sub_1001D7D9C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of TakePhotoIntent.perform()>>, 1);
}

uint64_t sub_1001D7DAC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of static TakePhotoIntent.parameterSummary>>, 1);
}

ValueMetadata *type metadata accessor for TakePhotoIntent()
{
  return &type metadata for TakePhotoIntent;
}

uint64_t sub_1001D7DCC()
{
  return sub_100016638(&qword_1005D3908, (uint64_t *)&unk_1005D3910, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t VisibleNotesQuery.init(includeHTMLNotes:includeContents:)(uint64_t a1, uint64_t a2)
{
  return sub_1001DC44C(a1, a2, sub_1001E8EEC);
}

uint64_t sub_1001D7E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;

  v2 = v1;
  v4 = type metadata accessor for NoteID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v9 = _swiftEmptyArrayStorage;
    if (!v8)
      return (uint64_t)v9;
    v19 = _swiftEmptyArrayStorage;
    result = sub_100137124(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    v11 = 0;
    v9 = v19;
    v17 = v2;
    v18 = a1 & 0xC000000000000001;
    v2 = a1;
    while (v8 != v11)
    {
      if (v18)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v12 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id, v4);

      v19 = v9;
      v15 = v9[2];
      v14 = v9[3];
      if (v15 >= v14 >> 1)
      {
        sub_100137124(v14 > 1, v15 + 1, 1);
        v9 = v19;
      }
      ++v11;
      v9[2] = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v15, v7, v4);
      a1 = v2;
      if (v8 == v11)
        return (uint64_t)v9;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001D7FD4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v2)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_allocWithZone((Class)type metadata accessor for NoteSearchResult(0));
      v8 = v6;
      v9 = sub_1001EB77C(v8, v7, (unint64_t *)&qword_1005D39F0, ICNote_ptr);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v11 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
      specialized ContiguousArray._endMutation()(v12);
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_14:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  return result;
}

_QWORD *sub_1001D814C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD v23[2];
  uint64_t v24;

  v3 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  __chkstk_darwin(v3);
  v6 = (_QWORD *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
    return _swiftEmptyArrayStorage;
  v23[0] = a1;
  v23[1] = v1;
  v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9 = *(_QWORD *)(v4 + 72);
  swift_bridgeObjectRetain(a1);
  v10 = _swiftEmptyArrayStorage;
  v24 = v3;
  do
  {
    sub_100145220(v8, (uint64_t)v6, type metadata accessor for VisibleNotesQuery.Comparator);
    if (swift_getEnumCaseMultiPayload(v6, v3) == 3)
    {
      v11 = v6[1];
      v12 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0)
        v12 = *v6 & 0xFFFFFFFFFFFFLL;
      if (v12)
      {
        v13 = (void *)objc_opt_self(ICSearchQueryOperation);
        v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v11);
        v15 = objc_msgSend(v13, "prefixMatchingQueryStringForSearchString:", v14);

        v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        v18 = v17;

        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
          v10 = sub_10016ACE0(0, v10[2] + 1, 1, v10);
        v20 = v10[2];
        v19 = v10[3];
        if (v20 >= v19 >> 1)
          v10 = sub_10016ACE0((_QWORD *)(v19 > 1), v20 + 1, 1, v10);
        v10[2] = v20 + 1;
        v21 = &v10[2 * v20];
        v21[4] = v16;
        v21[5] = v18;
        v3 = v24;
      }
      else
      {
        swift_bridgeObjectRelease(v6[1]);
      }
    }
    else
    {
      sub_100145264((uint64_t)v6, type metadata accessor for VisibleNotesQuery.Comparator);
    }
    v8 += v9;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease(v23[0]);
  return v10;
}

uint64_t VisibleNotesQuery.init(nonPasswordProtectedOnly:includeHTMLNotes:includeContents:)()
{
  return sub_1001E93A0();
}

uint64_t sub_1001D8384(uint64_t a1)
{
  return swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

_QWORD *sub_1001D838C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001D83C4(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_1001D83F8(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_10016AA78(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_100012E18(&qword_1005D3DA0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy(v14);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D8564(uint64_t result)
{
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  int64_t v51;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;

  v4 = v2;
  v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    if (result >= 0)
      result &= 0xFFFFFFFFFFFFFF8uLL;
    result = __CocoaSet.count.getter(result);
    v6 = result;
  }
  else
  {
    v6 = *(_QWORD *)(result + 16);
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v7 < 0)
    v23 = *v4;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  result = swift_bridgeObjectRelease(v7);
  v9 = v24 + v6;
  if (__OFADD__(v24, v6))
    goto LABEL_30;
LABEL_8:
  v10 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v10;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v13 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v29 = v10;
    else
      v29 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v14 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v9)
    v14 = v9;
  swift_bridgeObjectRetain(v10);
  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v14, 1, v10);
  swift_bridgeObjectRelease(*v4);
  *v4 = v15;
  v13 = v15 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (*(_QWORD *)(v13 + 24) >> 1) - v16;
  result = (uint64_t)sub_1001E724C(&v58, (uint64_t **)(v13 + 8 * v16 + 32), v17, v5);
  if (result < v6)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (result >= 1)
  {
    v18 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v19 = __OFADD__(v18, result);
    v20 = v18 + result;
    if (v19)
    {
      __break(1u);
LABEL_42:
      v30 = __CocoaSet.Iterator.next()(result);
      if (!v30)
        goto LABEL_86;
      v31 = v30;
      v56 = v30;
      v32 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
      swift_unknownObjectRetain(v31);
      swift_dynamicCast(&v57, &v56, (char *)&type metadata for Swift.AnyObject + 8, v32, 7);
      v28 = v57;
      result = swift_unknownObjectRelease(v31, v33);
      while (2)
      {
        if (!v28)
        {
          v6 = v58;
LABEL_86:
          v21 = v6;
          goto LABEL_24;
        }
        while (1)
        {
          v34 = *v4 & 0xFFFFFFFFFFFFFF8;
          v35 = *(_QWORD *)(v34 + 0x18);
          if (v3 + 1 > (uint64_t)(v35 >> 1))
          {
            result = specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v3 + 1, 1);
            v34 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          v36 = *(_QWORD *)(v34 + 24) >> 1;
          if (v3 < v36)
            break;
LABEL_46:
          *(_QWORD *)(v34 + 16) = v3;
        }
        v37 = v34 + 32;
        while (1)
        {
          *(_QWORD *)(v37 + 8 * v3++) = v28;
          v38 = v58;
          v39 = v61;
          if ((v58 & 0x8000000000000000) == 0)
            break;
          v42 = __CocoaSet.Iterator.next()(result);
          if (!v42)
            goto LABEL_84;
          v43 = v42;
          v56 = v42;
          v44 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
          swift_unknownObjectRetain(v43);
          swift_dynamicCast(&v57, &v56, (char *)&type metadata for Swift.AnyObject + 8, v44, 7);
          v28 = v57;
          result = swift_unknownObjectRelease(v43, v45);
LABEL_58:
          if (!v28)
          {
            v38 = v58;
LABEL_84:
            *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v3;
            v21 = v38;
            goto LABEL_24;
          }
          if (v3 >= v36)
          {
            v34 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_46;
          }
        }
        if (v62)
        {
          v40 = (v62 - 1) & v62;
          v41 = __clz(__rbit64(v62)) | (v61 << 6);
LABEL_54:
          v28 = *(void **)(*(_QWORD *)(v58 + 48) + 8 * v41);
          result = v28;
LABEL_55:
          v61 = v39;
          v62 = v40;
          goto LABEL_58;
        }
        v46 = v61 + 1;
        if (__OFADD__(v61, 1))
        {
          __break(1u);
LABEL_109:
          v28 = 0;
          v26 = 0;
          v25 = v1;
LABEL_36:
          v61 = v25;
          v62 = v26;
          continue;
        }
        break;
      }
      v47 = (unint64_t)(v60 + 64) >> 6;
      if (v46 >= v47)
      {
        v28 = 0;
        v40 = 0;
        goto LABEL_55;
      }
      v48 = *(_QWORD *)(v59 + 8 * v46);
      if (v48)
      {
LABEL_64:
        v40 = (v48 - 1) & v48;
        v41 = __clz(__rbit64(v48)) + (v46 << 6);
        v39 = v46;
        goto LABEL_54;
      }
      v49 = v61 + 2;
      if (v61 + 2 < v47)
      {
        v48 = *(_QWORD *)(v59 + 8 * v49);
        if (v48)
        {
LABEL_68:
          v46 = v49;
          goto LABEL_64;
        }
        v1 = v61 + 3;
        if (v61 + 3 >= v47)
          goto LABEL_81;
        v48 = *(_QWORD *)(v59 + 8 * v1);
        if (v48)
        {
          v46 = v61 + 3;
          goto LABEL_64;
        }
        v49 = v61 + 4;
        if (v61 + 4 >= v47)
        {
          v28 = 0;
          v40 = 0;
          v39 = v61 + 3;
          goto LABEL_55;
        }
        v48 = *(_QWORD *)(v59 + 8 * v49);
        if (v48)
          goto LABEL_68;
        v46 = v61 + 5;
        if (v61 + 5 >= v47)
        {
LABEL_81:
          v28 = 0;
          v40 = 0;
          v39 = v49;
          goto LABEL_55;
        }
        v48 = *(_QWORD *)(v59 + 8 * v46);
        if (v48)
          goto LABEL_64;
        v46 = v47 - 1;
        v50 = v61 + 6;
        while (v47 != v50)
        {
          v48 = *(_QWORD *)(v59 + 8 * v50++);
          if (v48)
          {
            v46 = v50 - 1;
            goto LABEL_64;
          }
        }
      }
      v28 = 0;
      v40 = 0;
      v39 = v46;
      goto LABEL_55;
    }
    *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
  }
  if (result != v17)
  {
    v21 = v58;
LABEL_24:
    v22 = sub_1001452E0(v21);
    return specialized Array._endMutation()(v22);
  }
LABEL_32:
  v3 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v58;
  v25 = v61;
  if (v58 < 0)
    goto LABEL_42;
  if (v62)
  {
    v26 = (v62 - 1) & v62;
    v27 = __clz(__rbit64(v62)) | (v61 << 6);
LABEL_35:
    v28 = *(void **)(*(_QWORD *)(v58 + 48) + 8 * v27);
    result = v28;
    goto LABEL_36;
  }
  v51 = v61 + 1;
  if (!__OFADD__(v61, 1))
  {
    v52 = (unint64_t)(v60 + 64) >> 6;
    if (v51 >= v52)
    {
      v28 = 0;
      v26 = 0;
      goto LABEL_36;
    }
    v53 = *(_QWORD *)(v59 + 8 * v51);
    if (v53)
      goto LABEL_90;
    v54 = v61 + 2;
    if (v61 + 2 >= v52)
    {
LABEL_106:
      v28 = 0;
      v26 = 0;
      v25 = v51;
      goto LABEL_36;
    }
    v53 = *(_QWORD *)(v59 + 8 * v54);
    if (v53)
      goto LABEL_94;
    v1 = v61 + 3;
    if (v61 + 3 < v52)
    {
      v53 = *(_QWORD *)(v59 + 8 * v1);
      if (v53)
      {
        v51 = v61 + 3;
        goto LABEL_90;
      }
      v54 = v61 + 4;
      if (v61 + 4 >= v52)
        goto LABEL_109;
      v53 = *(_QWORD *)(v59 + 8 * v54);
      if (v53)
      {
LABEL_94:
        v51 = v54;
LABEL_90:
        v26 = (v53 - 1) & v53;
        v27 = __clz(__rbit64(v53)) + (v51 << 6);
        v25 = v51;
        goto LABEL_35;
      }
      v51 = v61 + 5;
      if (v61 + 5 < v52)
      {
        v53 = *(_QWORD *)(v59 + 8 * v51);
        if (!v53)
        {
          v51 = v52 - 1;
          v55 = v61 + 6;
          do
          {
            if (v52 == v55)
              goto LABEL_106;
            v53 = *(_QWORD *)(v59 + 8 * v55++);
          }
          while (!v53);
          v51 = v55 - 1;
        }
        goto LABEL_90;
      }
    }
    v28 = 0;
    v26 = 0;
    v25 = v54;
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D8B60(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v28[7];
  uint64_t v29;

  v2 = v1;
  v3 = *a1;
  v29 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v19 = v3 & 0xFFFFFFFFFFFFFF8;
    else
      v19 = v3;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v19);
    sub_1001948C4(&v29);
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = v4 & (v4 >> 63);
  v6 = (_QWORD *)*v1;
  v7 = *(_QWORD *)(*v1 + 16);
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v6[3] >> 1, v9 < v7 + v5))
  {
    v6 = sub_10016ABAC(isUniquelyReferenced_nonNull_native, v7, 1, v6);
    v9 = v6[3] >> 1;
  }
  v10 = v6[2];
  v11 = v9 - v10;
  v12 = sub_1001E7554((unint64_t)v28, &v6[2 * v10 + 4], v9 - v10);
  if (v12 < v5)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v12 >= 1)
  {
    v14 = v6[2];
    v15 = __OFADD__(v14, v12);
    v16 = v14 + v12;
    if (v15)
    {
      __break(1u);
      goto LABEL_29;
    }
    v6[2] = v16;
  }
  if (v12 == v11)
  {
LABEL_17:
    v11 = v6[2];
    v20 = sub_100335D2C(v12, v13);
    if (!v20)
      goto LABEL_11;
    while (1)
    {
      v22 = v6[3];
      v23 = v22 >> 1;
      if ((uint64_t)(v22 >> 1) < v11 + 1)
      {
        v25 = v20;
        v26 = v21;
        v27 = sub_10016ABAC((_QWORD *)(v22 > 1), v11 + 1, 1, v6);
        v21 = v26;
        v6 = v27;
        v20 = v25;
        v23 = v6[3] >> 1;
        if (v11 < v23)
        {
LABEL_22:
          v24 = &v6[2 * v11 + 5];
          while (1)
          {
            *(v24 - 1) = v20;
            *v24 = v21;
            ++v11;
            v20 = sub_100335D2C(v20, v21);
            if (!v20)
              break;
            v24 += 2;
            if (v23 == v11)
            {
              v11 = v23;
              goto LABEL_19;
            }
          }
LABEL_29:
          v6[2] = v11;
          break;
        }
      }
      else if (v11 < v23)
      {
        goto LABEL_22;
      }
LABEL_19:
      v6[2] = v11;
    }
  }
LABEL_11:
  v17 = v28[0];
  swift_release(v28[5]);
  result = swift_bridgeObjectRelease(v17);
  *v2 = v6;
  return result;
}

uint64_t sub_1001D8D34(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;
  char v26;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_10016B03C(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for CollaboratorStatus(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D8EA8(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10016B174(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (char *)v3 + v8 + 32;
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D8FEC(uint64_t a1)
{
  return sub_1001D9B28(a1, (unint64_t *)type metadata accessor for AttachmentSearchResult, &qword_1005D52D0, (uint64_t *)&unk_1005D3DB0, (uint64_t *)sub_1001E8D0C);
}

uint64_t sub_1001D9010(uint64_t a1)
{
  return sub_1001D9948(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1001E8280);
}

uint64_t sub_1001D901C(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_10016B2BC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  sub_100012E18(&qword_1005D3D80);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v17 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D9188(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  int64_t v18;
  int isUniquelyReferenced_nonNull_native;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  int64_t v44;
  BOOL v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  int64_t v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  unsigned int v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  int64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  unint64_t v75;

  v70 = _s3TagVMa(0);
  v4 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v69 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18(&qword_1005D3CD0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v68 = (uint64_t)&v58 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v58 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *v1;
  v17 = *(_QWORD *)(*v1 + 16);
  v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  *v1 = v16;
  if (!isUniquelyReferenced_nonNull_native || (v20 = *(_QWORD *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18)
      v21 = v17 + v15;
    else
      v21 = v17;
    v16 = sub_10016B5FC(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *v1 = v16;
    v20 = *(_QWORD *)(v16 + 24) >> 1;
  }
  v22 = *(_QWORD *)(v16 + 16);
  v2 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = *(_QWORD *)(v4 + 72);
  v23 = v20 - v22;
  v24 = sub_1001E7B84(&v71, v16 + v2 + v17 * v22, v20 - v22, a1);
  if (v24 < v15)
    goto LABEL_15;
  if (v24)
  {
    v26 = *(_QWORD *)(v16 + 16);
    v27 = __OFADD__(v26, v24);
    v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v16 + 16) = v28;
  }
  if (v24 != v23)
    return sub_1001452E0(v71);
LABEL_16:
  v16 = *(_QWORD *)(v16 + 16);
  v15 = v71;
  v25 = v73;
  v23 = v74;
  v66 = v73;
  v67 = v72;
  if (v75)
  {
    v65 = (v75 - 1) & v75;
    v30 = __clz(__rbit64(v75)) | (v74 << 6);
LABEL_18:
    sub_100145220(*(_QWORD *)(v15 + 48) + v30 * v17, (uint64_t)v14, _s3TagVMa);
    v31 = v15;
    v32 = v70;
    v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v59(v14, 0, 1, v70);
    v33 = v23;
    goto LABEL_42;
  }
LABEL_20:
  v34 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
LABEL_40:
    v15 = v12;
    goto LABEL_41;
  }
  v35 = (unint64_t)(v25 + 64) >> 6;
  v61 = v23;
  if (v34 < v35)
  {
    v36 = *(_QWORD *)(v67 + 8 * v34);
    if (v36)
    {
LABEL_23:
      v65 = (v36 - 1) & v36;
      v30 = __clz(__rbit64(v36)) + (v34 << 6);
      v23 = v34;
      goto LABEL_18;
    }
    v37 = v23 + 2;
    v61 = v23 + 1;
    if (v23 + 2 < v35)
    {
      v12 = v15;
      v36 = *(_QWORD *)(v67 + 8 * v37);
      if (v36)
      {
LABEL_26:
        v34 = v37;
        goto LABEL_23;
      }
      v61 = v23 + 2;
      if (v23 + 3 < v35)
      {
        v36 = *(_QWORD *)(v67 + 8 * (v23 + 3));
        if (v36)
        {
          v34 = v23 + 3;
          goto LABEL_23;
        }
        v37 = v23 + 4;
        v61 = v23 + 3;
        if (v23 + 4 < v35)
        {
          v36 = *(_QWORD *)(v67 + 8 * v37);
          if (v36)
            goto LABEL_26;
          v34 = v23 + 5;
          v61 = v23 + 4;
          if (v23 + 5 < v35)
          {
            v36 = *(_QWORD *)(v67 + 8 * v34);
            if (v36)
              goto LABEL_23;
            v61 = v35 - 1;
            v38 = v23 + 6;
            while (v35 != v38)
            {
              v36 = *(_QWORD *)(v67 + 8 * v38++);
              if (v36)
              {
                v34 = v38 - 1;
                goto LABEL_23;
              }
            }
            goto LABEL_40;
          }
        }
      }
    }
  }
LABEL_41:
  v31 = v15;
  v32 = v70;
  v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v59(v14, 1, 1, v70);
  v65 = 0;
  v33 = v61;
LABEL_42:
  v60 = v31;
  v61 = v33;
  v39 = v68;
  v71 = v31;
  v72 = v67;
  v73 = v66;
  v74 = v33;
  v75 = v65;
  sub_100012CE8((uint64_t)v14, v68, &qword_1005D3CD0);
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v64(v39, 1, v32) == 1)
  {
LABEL_43:
    sub_100012DDC((uint64_t)v14, &qword_1005D3CD0);
    sub_1001452E0(v60);
    return sub_100012DDC(v39, &qword_1005D3CD0);
  }
  v40 = v69;
  while (1)
  {
    sub_100012DDC(v39, &qword_1005D3CD0);
    v42 = *v1;
    v43 = *(_QWORD *)(*v1 + 24);
    v44 = v43 >> 1;
    if ((uint64_t)(v43 >> 1) < v16 + 1)
    {
      v42 = sub_10016B5FC(v43 > 1, v16 + 1, 1, *v1);
      *v1 = v42;
      v44 = *(_QWORD *)(v42 + 24) >> 1;
    }
    sub_100012CE8((uint64_t)v14, (uint64_t)v9, &qword_1005D3CD0);
    if (v64((uint64_t)v9, 1, v70) == 1)
    {
      v39 = v68;
LABEL_83:
      sub_100012DDC((uint64_t)v9, &qword_1005D3CD0);
      v41 = v70;
      goto LABEL_46;
    }
    v62 = v42 + v2;
    sub_10013B170((uint64_t)v9, v40, _s3TagVMa);
    v45 = v16 < v44;
    v46 = v16 <= v44 ? v44 : v16;
    v63 = v46;
    v47 = v66;
    if (v45)
      break;
LABEL_45:
    v66 = v47;
    sub_100145264(v40, _s3TagVMa);
    v16 = v63;
    v41 = v70;
    v39 = v68;
LABEL_46:
    *(_QWORD *)(*v1 + 16) = v16;
    sub_100012CE8((uint64_t)v14, v39, &qword_1005D3CD0);
    if (v64(v39, 1, v41) == 1)
      goto LABEL_43;
  }
  while (1)
  {
    sub_100012DDC((uint64_t)v14, &qword_1005D3CD0);
    result = sub_10013B170(v40, v62 + v16 * v17, _s3TagVMa);
    v48 = v71;
    v49 = v74;
    v66 = v73;
    v67 = v72;
    if (v75)
    {
      v65 = (v75 - 1) & v75;
      v50 = __clz(__rbit64(v75)) | (v74 << 6);
      goto LABEL_58;
    }
    v53 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
    v54 = (unint64_t)(v73 + 64) >> 6;
    v52 = v74;
    if (v53 < v54)
    {
      v55 = *(_QWORD *)(v67 + 8 * v53);
      if (v55)
        goto LABEL_62;
      v52 = v74 + 1;
      if (v74 + 2 < v54)
      {
        v55 = *(_QWORD *)(v67 + 8 * (v74 + 2));
        if (v55)
        {
          v53 = v74 + 2;
          goto LABEL_62;
        }
        v52 = v74 + 2;
        if (v74 + 3 < v54)
        {
          v55 = *(_QWORD *)(v67 + 8 * (v74 + 3));
          if (v55)
          {
            v53 = v74 + 3;
            goto LABEL_62;
          }
          v52 = v74 + 3;
          if (v74 + 4 < v54)
          {
            v55 = *(_QWORD *)(v67 + 8 * (v74 + 4));
            if (v55)
            {
              v53 = v74 + 4;
LABEL_62:
              v65 = (v55 - 1) & v55;
              v50 = __clz(__rbit64(v55)) + (v53 << 6);
              v49 = v53;
LABEL_58:
              sub_100145220(*(_QWORD *)(v71 + 48) + v50 * v17, (uint64_t)v14, _s3TagVMa);
              v51 = v70;
              v59(v14, 0, 1, v70);
              v52 = v49;
              goto LABEL_79;
            }
            v53 = v74 + 5;
            v52 = v74 + 4;
            if (v74 + 5 < v54)
            {
              v55 = *(_QWORD *)(v67 + 8 * v53);
              if (v55)
                goto LABEL_62;
              v52 = v54 - 1;
              v56 = v74 + 6;
              while (v54 != v56)
              {
                v55 = *(_QWORD *)(v67 + 8 * v56++);
                if (v55)
                {
                  v53 = v56 - 1;
                  goto LABEL_62;
                }
              }
            }
          }
        }
      }
    }
    v51 = v70;
    v59(v14, 1, 1, v70);
    v65 = 0;
LABEL_79:
    ++v16;
    v60 = v48;
    v71 = v48;
    v72 = v67;
    v47 = v66;
    v73 = v66;
    v74 = v52;
    v75 = v65;
    sub_100012CE8((uint64_t)v14, (uint64_t)v9, &qword_1005D3CD0);
    v57 = v64((uint64_t)v9, 1, v51);
    v61 = v52;
    if (v57 == 1)
    {
      v39 = v68;
      v40 = v69;
      goto LABEL_83;
    }
    v40 = v69;
    sub_10013B170((uint64_t)v9, v69, _s3TagVMa);
    if (v16 == v63)
      goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D9910(uint64_t a1)
{
  return sub_1001D9948(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1001E849C);
}

uint64_t sub_1001D991C(uint64_t a1)
{
  return sub_1001D9948(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1001E86B8);
}

uint64_t sub_1001D9928(uint64_t a1)
{
  return sub_1001D9D4C(a1, (uint64_t (*)(void))sub_10016B844, type metadata accessor for ChecklistItemEntity);
}

uint64_t sub_1001D993C(uint64_t a1)
{
  return sub_1001D9948(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1001E88D4);
}

uint64_t sub_1001D9948(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D9B04(uint64_t a1)
{
  return sub_1001D9B28(a1, (unint64_t *)type metadata accessor for TableSearchResult, &qword_1005D3D98, &qword_1005D3D90, (uint64_t *)sub_1001E8D0C);
}

uint64_t sub_1001D9B28(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_1001E8070(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    v23 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D9D38(uint64_t a1)
{
  return sub_1001D9D4C(a1, (uint64_t (*)(void))sub_10016B9A0, type metadata accessor for AccountEntity);
}

uint64_t sub_1001D9D4C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  char v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy(v16);
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D9EC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  void (*v48)(_QWORD *);
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  void (*v54)(uint64_t, char *, uint64_t);
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63[4];

  v61 = a2;
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v57 = (uint64_t)&v51 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v51 - v17;
  v58 = a4;
  v19 = a4 >> 1;
  v20 = __OFSUB__(a4 >> 1, a3);
  v21 = (a4 >> 1) - a3;
  if (v20)
  {
    __break(1u);
    goto LABEL_26;
  }
  v62 = a1;
  a1 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v5 = v22 + v21;
  if (__OFADD__(v22, v21))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v60 = v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
  *v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (v25 = *(_QWORD *)(a1 + 24) >> 1, v25 < v5))
  {
    if (v22 <= v5)
      v26 = v22 + v21;
    else
      v26 = v22;
    a1 = sub_10016B9B4(isUniquelyReferenced_nonNull_native, v26, 1, a1);
    *v4 = a1;
    v25 = *(_QWORD *)(a1 + 24) >> 1;
  }
  v27 = *(_QWORD *)(a1 + 16);
  v28 = v25 - v27;
  if (v19 == a3)
  {
    if (v21 <= 0)
    {
      v21 = 0;
      v5 = a3;
      goto LABEL_23;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v28 < v21)
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v21 < 0)
    goto LABEL_51;
  v29 = *(_QWORD *)(v10 + 72);
  v30 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)) + v29 * v27;
  v31 = v61 + v29 * a3;
  if (v31 >= v30 + v29 * v21 || v30 >= v31 + v29 * v21)
  {
    swift_arrayInitWithCopy(v30);
    if (!v21)
    {
LABEL_22:
      v5 = v19;
LABEL_23:
      if (v21 != v28)
        return swift_unknownObjectRelease(v62, v24);
LABEL_28:
      v21 = *(_QWORD *)(a1 + 16);
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v52(v18, 1, 1, v9);
      a1 = v57;
      sub_100012CE8((uint64_t)v18, v57, (uint64_t *)&unk_1005D7B20);
      v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (v56(a1, 1, v9) == 1)
      {
LABEL_29:
        sub_100012DDC((uint64_t)v18, (uint64_t *)&unk_1005D7B20);
        swift_unknownObjectRelease(v62, v35);
        return sub_100012DDC(a1, (uint64_t *)&unk_1005D7B20);
      }
      do
      {
LABEL_34:
        sub_100012DDC(a1, (uint64_t *)&unk_1005D7B20);
        v37 = *v4;
        v38 = *(_QWORD *)(*v4 + 24);
        if ((uint64_t)(v38 >> 1) < v21 + 1)
        {
          v39 = v5;
          v49 = sub_10016B9B4(v38 > 1, v21 + 1, 1, v37);
          *v4 = v49;
          v55 = v49;
          v51 = *(_QWORD *)(v49 + 24) >> 1;
        }
        else
        {
          v51 = v38 >> 1;
          v55 = v37;
          v39 = v5;
        }
        v40 = *(unsigned __int8 *)(v10 + 80);
        v41 = v60;
        sub_100012CE8((uint64_t)v18, v60, (uint64_t *)&unk_1005D7B20);
        if (v56(v41, 1, v9) == 1)
        {
          v42 = v60;
LABEL_38:
          sub_100012DDC(v42, (uint64_t *)&unk_1005D7B20);
          v36 = v21;
          v5 = v39;
        }
        else
        {
          v53 = v55 + ((v40 + 32) & ~v40);
          v43 = v51;
          if (v21 > v51)
            v43 = v21;
          v54 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
          v55 = v43;
          v44 = v59;
          v42 = v60;
          while (1)
          {
            v46 = v42;
            v47 = v54;
            v54((uint64_t)v44, (char *)v46, v9);
            if (v55 == v21)
              break;
            sub_100012DDC((uint64_t)v18, (uint64_t *)&unk_1005D7B20);
            v47(v53 + *(_QWORD *)(v10 + 72) * v21, v44, v9);
            if (v39 == v19)
            {
              v45 = 1;
              v39 = v19;
            }
            else
            {
              v48 = sub_100379654(v63, v39, v62, v61, a3, v58);
              (*(void (**)(char *))(v10 + 16))(v18);
              ((void (*)(uint64_t *, _QWORD))v48)(v63, 0);
              v20 = __OFADD__(v39++, 1);
              if (v20)
                goto LABEL_50;
              v45 = 0;
              v44 = v59;
            }
            v52(v18, v45, 1, v9);
            v42 = v60;
            sub_100012CE8((uint64_t)v18, v60, (uint64_t *)&unk_1005D7B20);
            ++v21;
            if (v56(v42, 1, v9) == 1)
              goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v44, v9);
          v36 = v55;
          v21 = v55;
          v5 = v39;
        }
        *(_QWORD *)(*v4 + 16) = v36;
        a1 = v57;
        sub_100012CE8((uint64_t)v18, v57, (uint64_t *)&unk_1005D7B20);
      }
      while (v56(a1, 1, v9) != 1);
      goto LABEL_29;
    }
    v33 = *(_QWORD *)(a1 + 16);
    v20 = __OFADD__(v33, v21);
    v34 = v33 + v21;
    if (!v20)
    {
      *(_QWORD *)(a1 + 16) = v34;
      goto LABEL_22;
    }
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_52;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1001DA458()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100012E18(&qword_1005D3938);
  sub_10012B334(v0, static ICNote.hasValidEntityIdentifier);
  sub_10012A0B0(v0, (uint64_t)static ICNote.hasValidEntityIdentifier);
  v2 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  return Predicate.init(_:)(sub_1001DA4E0, 0, 1, &v2);
}

uint64_t sub_1001DA4E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v34 = a2;
  v3 = sub_100012E18(&qword_1005D3F90);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D40A0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005D40A8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100012E18(&qword_1005D40B0);
  v35 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = sub_100016638(&qword_1005D40B8, &qword_1005D40A0, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v17, v7, v18);
  KeyPath = swift_getKeyPath(&unk_10045A568, v19);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v10, KeyPath, v7, v18);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = sub_100012E18(&qword_1005D3FB8);
  v22 = sub_100016638(&qword_1005D40C0, &qword_1005D40A8, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v23 = sub_100016638(&qword_1005D3FC8, &qword_1005D3FB8, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  static PredicateExpressions.build_flatMap<A, B, C, D>(_:_:)(v14, sub_1001DA83C, 0, v11, v21, &type metadata for String, &type metadata for Bool, v22, v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v38 = 0;
  v24 = sub_100012E18(&qword_1005D3FD0);
  static PredicateExpressions.build_Arg<A>(_:)(&v38, v24);
  v25 = sub_100012E18(&qword_1005D40C8);
  v26 = v34;
  v34[3] = v25;
  v26[4] = sub_1001EBE10(&qword_1005D40D0, &qword_1005D40C8, (void (*)(void))sub_1001EBE7C);
  sub_10012D160(v26);
  v27 = sub_100016638((unint64_t *)&unk_1005D40F0, &qword_1005D40B0, (uint64_t)&protocol conformance descriptor for PredicateExpressions.OptionalFlatMap<A, B, C, D>);
  v28 = sub_100016638(&qword_1005D4038, &qword_1005D3F90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v29 = sub_1001EBCF4(&qword_1005D4040, (uint64_t)&protocol witness table for Bool, (uint64_t)&protocol conformance descriptor for <A> A?);
  v30 = v33;
  v31 = v36;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v16, v6, v33, v36, v27, v28, v29);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v30);
}

uint64_t ICNote.hasValidEntityIdentifier.unsafeMutableAddressor()
{
  return sub_1001E412C(&qword_1005CEA80, &qword_1005D3938, (uint64_t)static ICNote.hasValidEntityIdentifier, (uint64_t)sub_1001DA458);
}

uint64_t static ICNote.hasValidEntityIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1005CEA80 != -1)
    swift_once(&qword_1005CEA80, sub_1001DA458);
  v2 = sub_100012E18(&qword_1005D3938);
  v3 = sub_10012A0B0(v2, (uint64_t)static ICNote.hasValidEntityIdentifier);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1001DA8D8()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_100012E18((uint64_t *)&unk_1005D3980);
  sub_10012B334(v0, qword_1005D3920);
  sub_10012A0B0(v0, (uint64_t)qword_1005D3920);
  v2 = sub_1000163BC(0, &qword_1005D3A00, NoteObject_ptr);
  return Predicate.init(_:)(sub_1001DA960, 0, 1, &v2);
}

uint64_t sub_1001DA960@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v34 = a2;
  v3 = sub_100012E18(&qword_1005D3F90);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  __chkstk_darwin(v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100012E18(&qword_1005D3F98);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100012E18(&qword_1005D3FA0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_100012E18(&qword_1005D3FA8);
  v35 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = sub_100016638(&qword_1005D3FB0, &qword_1005D3F98, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v17, v7, v18);
  KeyPath = swift_getKeyPath(&unk_10045A4E0, v19);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v10, KeyPath, v7, v18);
  swift_release(KeyPath);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v21 = sub_100012E18(&qword_1005D3FB8);
  v22 = sub_100016638(&qword_1005D3FC0, &qword_1005D3FA0, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  v23 = sub_100016638(&qword_1005D3FC8, &qword_1005D3FB8, (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  static PredicateExpressions.build_flatMap<A, B, C, D>(_:_:)(v14, sub_1001DA83C, 0, v11, v21, &type metadata for String, &type metadata for Bool, v22, v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v38 = 0;
  v24 = sub_100012E18(&qword_1005D3FD0);
  static PredicateExpressions.build_Arg<A>(_:)(&v38, v24);
  v25 = sub_100012E18(&qword_1005D3FD8);
  v26 = v34;
  v34[3] = v25;
  v26[4] = sub_1001EBE10(&qword_1005D3FE0, &qword_1005D3FD8, (void (*)(void))sub_1001EBB34);
  sub_10012D160(v26);
  v27 = sub_100016638(&qword_1005D4030, &qword_1005D3FA8, (uint64_t)&protocol conformance descriptor for PredicateExpressions.OptionalFlatMap<A, B, C, D>);
  v28 = sub_100016638(&qword_1005D4038, &qword_1005D3F90, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  v29 = sub_1001EBCF4(&qword_1005D4040, (uint64_t)&protocol witness table for Bool, (uint64_t)&protocol conformance descriptor for <A> A?);
  v30 = v33;
  v31 = v36;
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)(v16, v6, v33, v36, v27, v28, v29);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v30);
}

uint64_t sub_1001DACBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v10;

  v2 = sub_100012E18(&qword_1005D4010);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100016638(&qword_1005D4048, &qword_1005D4010, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(a1, v2, v6);
  KeyPath = swift_getKeyPath(&unk_10045A508, v7);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v5, KeyPath, v2, v6);
  swift_release(KeyPath);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1001DADA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v22;
  uint64_t v23;
  _BYTE v25[16];
  id v26;
  id *v27;

  v1 = v0;
  v2 = sub_100012E18((uint64_t *)&unk_1005D3980);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100012E18(&qword_1005D3938);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = objc_opt_self(ICNote);
  v11 = swift_dynamicCastObjCClass(v1, v10);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = qword_1005CEA80;
    swift_unknownObjectRetain(v1);
    if (v13 != -1)
      swift_once(&qword_1005CEA80, sub_1001DA458);
    v14 = sub_10012A0B0(v6, (uint64_t)static ICNote.hasValidEntityIdentifier);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
    v26 = v12;
    v27 = &v26;
    v15 = swift_unknownObjectRetain(v1);
    v22 = Predicate.evaluate(_:)(&v27, v6, v15);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
LABEL_10:
    swift_unknownObjectRelease(v1, v23);

    return v22 & 1;
  }
  v16 = objc_opt_self(NoteObject);
  v17 = swift_dynamicCastObjCClass(v1, v16);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = qword_1005CEA88;
    swift_unknownObjectRetain(v1);
    if (v19 != -1)
      swift_once(&qword_1005CEA88, sub_1001DA8D8);
    v20 = sub_10012A0B0(v2, (uint64_t)qword_1005D3920);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
    v26 = v18;
    v27 = &v26;
    v21 = swift_unknownObjectRetain(v1);
    v22 = Predicate.evaluate(_:)(&v27, v2, v21);
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    goto LABEL_10;
  }
  v22 = 0;
  return v22 & 1;
}

Class sub_1001DB080(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  Class isa;
  uint64_t v12;

  v5 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1 + *a3, (uint64_t)v7, (uint64_t *)&unk_1005D7B20);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  }
  return isa;
}

id sub_1001DB160(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  v3 = a1 + *a3;
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 8));
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

Swift::Int sub_1001DB1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _OWORD v24[4];
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v23 - v11;
  Hasher.init()(v24, v10);
  v13 = type metadata accessor for NoteID(0);
  v14 = sub_100019C6C((unint64_t *)&unk_1005D3D40, (uint64_t (*)(uint64_t))&type metadata accessor for NoteID, (uint64_t)&protocol conformance descriptor for NoteID);
  dispatch thunk of Hashable.hash(into:)(v24, v13, v14);
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title + 8);
  swift_bridgeObjectRetain(v16);
  String.hash(into:)(v24, v15, v16);
  swift_bridgeObjectRelease(v16);
  sub_100012CE8(v1 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate, (uint64_t)v12, (uint64_t *)&unk_1005D7B20);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v17(v12, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    Hasher._combine(_:)(1u);
    v18 = sub_100019C6C((unint64_t *)&unk_1005D89F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(v24, v2, v18);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_100012CE8(v1 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate, (uint64_t)v9, (uint64_t *)&unk_1005D7B20);
  if (v17(v9, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    Hasher._combine(_:)(1u);
    v19 = sub_100019C6C((unint64_t *)&unk_1005D89F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(v24, v2, v19);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v20 = *(_QWORD *)(v1
                  + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName
                  + 8);
  if (v20)
  {
    v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName);
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v20);
    String.hash(into:)(v24, v21, v20);
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(*(_BYTE *)(v1
                               + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote));
  v28 = v24[2];
  v29 = v24[3];
  v30 = v25;
  v26 = v24[0];
  v27 = v24[1];
  return Hasher.finalize()();
}

uint64_t sub_1001DB50C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  unsigned int v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  _BYTE v52[24];
  uint64_t v53;

  v2 = v1;
  ObjectType = swift_getObjectType(v1);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v10 = __chkstk_darwin(v9);
  v50 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - v12;
  v14 = sub_100012E18((uint64_t *)&unk_1005D3D30);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v46 - v18;
  sub_100012CE8(a1, (uint64_t)v52, &qword_1005CF190);
  if (!v53)
  {
    sub_100012DDC((uint64_t)v52, &qword_1005CF190);
    goto LABEL_23;
  }
  if ((swift_dynamicCast(&v51, v52, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) != 0)
  {
    v20 = v51;
    if ((static NoteID.== infix(_:_:)(&v51[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id], v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id) & 1) == 0)goto LABEL_22;
    v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title];
    v22 = *(_QWORD *)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title + 8];
    v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title);
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title + 8);
    if ((v21 != v23 || v22 != v24) && (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v23, v24, 0) & 1) == 0)
      goto LABEL_22;
    v49 = v20;
    v25 = (uint64_t)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate];
    v26 = v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate;
    v27 = (uint64_t)&v19[*(int *)(v14 + 48)];
    sub_100012CE8(v25, (uint64_t)v19, (uint64_t *)&unk_1005D7B20);
    v48 = v27;
    sub_100012CE8(v26, v27, (uint64_t *)&unk_1005D7B20);
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v28((uint64_t)v19, 1, v5) == 1)
    {
      v29 = v28(v48, 1, v5);
      v20 = v49;
      if (v29 == 1)
      {
        sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D7B20);
LABEL_15:
        v35 = v2 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate;
        v36 = (uint64_t)&v17[*(int *)(v14 + 48)];
        sub_100012CE8((uint64_t)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate], (uint64_t)v17, (uint64_t *)&unk_1005D7B20);
        sub_100012CE8(v35, v36, (uint64_t *)&unk_1005D7B20);
        if (v28((uint64_t)v17, 1, v5) == 1)
        {
          if (v28(v36, 1, v5) == 1)
          {
            sub_100012DDC((uint64_t)v17, (uint64_t *)&unk_1005D7B20);
LABEL_26:
            v43 = &v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName];
            v44 = *(_QWORD *)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName
                                + 8];
            v45 = (_QWORD *)(v2
                           + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName);
            v38 = *(_QWORD *)(v2
                            + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName
                            + 8);
            if (v44)
            {
              if (v38)
              {
                if (*(_QWORD *)v43 == *v45 && v44 == v38)
                {

                  LOBYTE(v38) = 1;
                  return v38 & 1;
                }
                LOBYTE(v38) = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v43, v44, *v45, v38, 0);
              }

              return v38 & 1;
            }
            swift_bridgeObjectRetain(v38);

            if (!v38)
            {
              LOBYTE(v38) = 1;
              return v38 & 1;
            }
            swift_bridgeObjectRelease(v38);
            goto LABEL_23;
          }
          goto LABEL_20;
        }
        v37 = v50;
        sub_100012CE8((uint64_t)v17, v50, (uint64_t *)&unk_1005D7B20);
        if (v28(v36, 1, v5) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v37, v5);
LABEL_20:
          v32 = (uint64_t)v17;
          goto LABEL_21;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v36, v5);
        v40 = sub_100019C6C(&qword_1005D36F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v41 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v8, v5, v40);
        v42 = *(void (**)(char *, uint64_t))(v6 + 8);
        v42(v8, v5);
        v42((char *)v37, v5);
        sub_100012DDC((uint64_t)v17, (uint64_t *)&unk_1005D7B20);
        if ((v41 & 1) != 0)
          goto LABEL_26;
LABEL_22:

        goto LABEL_23;
      }
    }
    else
    {
      sub_100012CE8((uint64_t)v19, (uint64_t)v13, (uint64_t *)&unk_1005D7B20);
      v30 = v28;
      v31 = v48;
      v47 = v30;
      if (v30(v48, 1, v5) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v31, v5);
        v33 = sub_100019C6C(&qword_1005D36F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        LODWORD(v48) = dispatch thunk of static Equatable.== infix(_:_:)(v13, v8, v5, v33);
        v34 = *(void (**)(char *, uint64_t))(v6 + 8);
        v34(v8, v5);
        v34(v13, v5);
        sub_100012DDC((uint64_t)v19, (uint64_t *)&unk_1005D7B20);
        v20 = v49;
        v28 = v47;
        if ((v48 & 1) == 0)
          goto LABEL_22;
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
      v20 = v49;
    }
    v32 = (uint64_t)v19;
LABEL_21:
    sub_100012DDC(v32, (uint64_t *)&unk_1005D3D30);
    goto LABEL_22;
  }
LABEL_23:
  LOBYTE(v38) = 0;
  return v38 & 1;
}

_QWORD *sub_1001DBB84(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;

  v13 = sub_100012E18(&qword_1005D3F68);
  v15 = sub_1001DBF08((void (*)(char *, char *))sub_1001DBD84, 0, a5, v13, (uint64_t)&type metadata for Never, a7, (uint64_t)&protocol witness table for Never, v14);
  v39 = v15;
  v16 = sub_100012E18(&qword_1005D3F70);
  v17 = *(_QWORD *)(a6 + 8);
  v18 = sub_100016638(&qword_1005D3F78, &qword_1005D3F70, (uint64_t)&protocol conformance descriptor for [A]);
  v19 = sub_100016638(&qword_1005D3F80, &qword_1005D3F68, (uint64_t)&protocol conformance descriptor for SortDescriptor<A>);
  v20 = (_QWORD *)Sequence.sorted<A, B>(using:)(&v39, a4, v16, v13, v17, v18, v19);
  swift_bridgeObjectRelease(v15);
  if ((a3 & 1) != 0)
    return v20;
  v21 = sub_10036EEF0(a2, (unint64_t)v20);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease(v20);
  if ((v27 & 1) == 0)
  {
LABEL_3:
    v20 = sub_10016BEBC(v21, v23, v25, v27);
LABEL_10:
    swift_unknownObjectRelease(v21, v29);
    return v20;
  }
  v30 = type metadata accessor for __ContiguousArrayStorageBase(0, v28);
  v31 = swift_unknownObjectRetain_n(v21, 2);
  v32 = (_QWORD *)swift_dynamicCastClass(v31, v30);
  if (!v32)
  {
    swift_unknownObjectRelease(v21, v33);
    v32 = _swiftEmptyArrayStorage;
  }
  v34 = v32[2];
  v35 = swift_release(v32);
  if (__OFSUB__(v27 >> 1, v25))
  {
    __break(1u);
    goto LABEL_13;
  }
  v35 = v21;
  if (v34 != (v27 >> 1) - v25)
  {
LABEL_13:
    swift_unknownObjectRelease(v35, v36);
    goto LABEL_3;
  }
  v20 = (_QWORD *)swift_dynamicCastClass(v21, v30);
  swift_unknownObjectRelease(v21, v37);
  if (!v20)
  {
    v20 = _swiftEmptyArrayStorage;
    goto LABEL_10;
  }
  return v20;
}

void sub_1001DBD84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for String.StandardComparator(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __asm { BR              X11 }
}

uint64_t sub_1001DBE1C@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;

  v6 = a2 & 1;
  KeyPath = swift_getKeyPath(&unk_10045A4B8, a1);
  ((void (*)(void))static String.StandardComparator.localizedStandard.getter)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v2);
  ((void (*)(uint64_t, uint64_t, uint64_t))SortDescriptor.init<A>(_:comparator:order:))(KeyPath, v4, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
}

uint64_t sub_1001DBF08(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  Swift::Int v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t result;
  uint64_t AssociatedConformanceWitness;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v50 = a8;
  v51 = a5;
  v9 = v8;
  v63 = a4;
  v64 = a1;
  v65 = a2;
  v49 = *(_QWORD *)(a5 - 8);
  v11 = __chkstk_darwin(a1);
  v62 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v61 = (char *)&v46 - v13;
  v55 = v14;
  v16 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v14);
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v48 = (char *)&v46 - v19;
  v20 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v52 = *(_QWORD *)(v20 - 8);
  v53 = v20;
  v21 = __chkstk_darwin(v20);
  v59 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v46 - v24;
  v26 = __chkstk_darwin(v23);
  v47 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v46 - v29;
  v58 = *((_QWORD *)v16 - 1);
  __chkstk_darwin(v28);
  v57 = (char *)&v46 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = swift_getAssociatedTypeWitness(0, a6);
  v54 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v56 = (char *)&v46 - v32;
  v33 = v16;
  v34 = dispatch thunk of Sequence.underestimatedCount.getter(v16, a6);
  v35 = v63;
  v67 = ContiguousArray.init()(v63);
  v63 = type metadata accessor for ContiguousArray(0, v35);
  ContiguousArray.reserveCapacity(_:)(v34);
  (*(void (**)(char *, _QWORD, _QWORD *))(v58 + 16))(v57, v60, v16);
  v36 = v56;
  v60 = v33;
  v37 = v33;
  v38 = v55;
  result = dispatch thunk of Sequence.makeIterator()(v37);
  if (v34 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v34)
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v38, v60, v66, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
    while (1)
    {
      dispatch thunk of IteratorProtocol.next()(v66, AssociatedConformanceWitness);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v25, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v64(v25, v62);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v66);
        swift_release(v67);
        (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v50, v62, v51);
        return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v25, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v25, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v30, v63);
      if (!--v34)
      {
        v41 = v59;
        v42 = v66;
        goto LABEL_9;
      }
    }
  }
  v42 = v66;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v38, v60, v66, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  v41 = v59;
LABEL_9:
  dispatch thunk of IteratorProtocol.next()(v42, AssociatedConformanceWitness);
  v62 = *(char **)(v18 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(v41, 1, AssociatedTypeWitness) == 1)
  {
    v43 = v59;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v66);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v53);
    return v67;
  }
  else
  {
    v60 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v44 = v47;
    v45 = v48;
    v43 = v59;
    while (1)
    {
      v60(v45, v43, AssociatedTypeWitness);
      v64(v45, v61);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v45, AssociatedTypeWitness);
      ContiguousArray.append(_:)(v44, v63);
      dispatch thunk of IteratorProtocol.next()(v66, AssociatedConformanceWitness);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(v43, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v45, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v66);
    swift_release(v67);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v50, v61, v51);
  }
}

uint64_t VisibleNotesQuery.init()()
{
  return sub_1001E964C();
}

uint64_t VisibleNotesQuery.init(pinnedOnly:includeContents:)(uint64_t a1, uint64_t a2)
{
  return sub_1001DC44C(a1, a2, sub_1001E9784);
}

uint64_t VisibleNotesQuery.init(passwordProtectedOnly:includeContents:)(uint64_t a1, uint64_t a2)
{
  return sub_1001DC44C(a1, a2, sub_1001E98EC);
}

uint64_t sub_1001DC44C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t VisibleNotesQuery.init(includeContents:)()
{
  return sub_1001E9508();
}

uint64_t VisibleNotesQuery.entities(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[4] = a3;
  v5[5] = a5;
  v5[3] = a1;
  return swift_task_switch(sub_1001DC4A8, 0, 0);
}

uint64_t sub_1001DC4A8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = v0[5];
  AppDependency.wrappedValue.getter(v0 + 2);
  v2 = v0[2];
  v0[6] = v2;
  v5 = (char *)&dword_1005D0270 + dword_1005D0270;
  v3 = (_QWORD *)swift_task_alloc(unk_1005D0274);
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_1001DC528;
  return ((uint64_t (*)(_QWORD, uint64_t, unint64_t))v5)(v0[3], v2, (v1 >> 8) & 1);
}

uint64_t sub_1001DC528(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(void **)(*v2 + 48);
  v4 = *(_QWORD *)(*v2 + 56);
  v6 = *v2;
  swift_task_dealloc(v4);

  if (!v1)
    v7 = a1;
  return (*(uint64_t (**)(uint64_t))(v6 + 8))(v7);
}

uint64_t VisibleNotesQuery.suggestedEntities()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[28] = a3;
  v4[29] = a4;
  v4[27] = a2;
  v5 = type metadata accessor for ManagedEntityContextType(0);
  v4[30] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[31] = v6;
  v4[32] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DC5EC, 0, 0);
}

uint64_t sub_1001DC5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t KeyPath;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 192));
  v4 = *(void **)(v0 + 192);
  v5 = objc_msgSend(v4, "modernManagedObjectContext");
  *(_QWORD *)(v0 + 264) = v5;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 184));
  v6 = *(void **)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for ManagedEntityContextType.html(_:), v3);
  v7 = ICUnifiedNoteContext.managedObjectContext(for:)(v1);
  *(_QWORD *)(v0 + 272) = v7;
  v8 = v7;
  v9 = *(_QWORD *)(v0 + 232);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));

  v10 = IntentParameterDependency.wrappedValue.getter();
  if (!v10)
  {
    v18 = HIDWORD(v9) & 1;
    v16 = (v9 >> 24) & 1;
    v19 = v9 & 1;
    goto LABEL_16;
  }
  v12 = v10;
  v13 = (_BYTE *)(v0 + 337);
  KeyPath = swift_getKeyPath(&unk_100459F10, v11);
  v15 = sub_1001B40AC();
  IntentProjection.subscript.getter(KeyPath, v15);
  swift_release(KeyPath);
  if (!*(_BYTE *)(v0 + 336))
  {
    v17 = 0xE300000000000000;
    v20 = 6579297;
LABEL_8:
    LOBYTE(v16) = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v17, 0x65766F6D6572, 0xE600000000000000, 0);
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + 336) != 1)
  {
    v17 = 0xE600000000000000;
    v20 = 0x656C67676F74;
    goto LABEL_8;
  }
  LOBYTE(v16) = 1;
  v17 = 0xE600000000000000;
LABEL_9:
  swift_bridgeObjectRelease(v17);
  v22 = swift_getKeyPath(&unk_100459F10, v21);
  IntentProjection.subscript.getter(v22, v15);
  swift_release(v22);
  if (*v13)
  {
    if (*v13 == 1)
      v23 = 0x65766F6D6572;
    else
      v23 = 0x656C67676F74;
    v24 = 0xE600000000000000;
    LOBYTE(v18) = _stringCompareWithSmolCheck(_:_:expecting:)(v23, 0xE600000000000000, 6579297, 0xE300000000000000, 0);
  }
  else
  {
    LOBYTE(v18) = 1;
    v24 = 0xE300000000000000;
  }
  swift_bridgeObjectRelease(v24);
  swift_release(v12);
  v19 = 0;
LABEL_16:
  v25 = v0 + 16;
  *(_BYTE *)(v0 + 338) = v19;
  v26 = (*(_QWORD *)(v0 + 232) >> 16) & 1;
  v27 = objc_msgSend(objc_allocWithZone((Class)ICRecentNotesCoreDataIndexer), "initWithLegacyManagedObjectContext:modernManagedObjectContext:", v8, v5);
  *(_QWORD *)(v0 + 280) = v27;
  objc_msgSend(v27, "setMaximumNumberOfNotesPerAccount:", 10);
  objc_msgSend(v27, "setPinnedOnly:", v26);
  objc_msgSend(v27, "setPasswordProtectedOnly:", v16 & 1);
  objc_msgSend(v27, "setNonPasswordProtectedOnly:", v18 & 1);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1001DC93C;
  v28 = swift_continuation_init(v0 + 16, 0);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v29 = (_QWORD *)(v0 + 80);
  v29[1] = 0x40000000;
  v29[2] = sub_1001D8384;
  v29[3] = &unk_10055D728;
  v29[4] = v28;
  objc_msgSend(v27, "reloadData:", v29);
  return swift_continuation_await(v25);
}

uint64_t sub_1001DC93C()
{
  return swift_task_switch(sub_1001DC988, 0, 0);
}

uint64_t sub_1001DC988()
{
  uint64_t v0;
  id v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, char);

  v1 = objc_msgSend(*(id *)(v0 + 280), "newSnapshotFromIndex");
  *(_QWORD *)(v0 + 288) = v1;
  v2 = objc_msgSend(v1, "itemIdentifiers");
  v3 = (char *)&type metadata for Any + 8;
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, (char *)&type metadata for Any + 8);

  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v0 + 120;
    v7 = (_QWORD *)(v0 + 152);
    v8 = (id *)(v0 + 200);
    v9 = v4;
    v10 = v4 + 32;
    v20 = v9;
    swift_bridgeObjectRetain(v9);
    while (1)
    {
      sub_100128424(v10, (uint64_t)v7);
      sub_100128424((uint64_t)v7, v6);
      v11 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
      if (swift_dynamicCast(v8, v6, v3, v11, 6))
      {
        v12 = *v8;
        if ((objc_msgSend(*v8, "ic_isNoteType") & 1) != 0
          && ((*(_BYTE *)(v0 + 338) & 1) != 0 || (objc_msgSend(v12, "ic_isModernNoteType") & 1) != 0))
        {
          v13 = sub_1000153C0(v7);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
          v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v15 >= v14 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
          v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
          specialized Array._endMutation()(v16);
          v3 = (char *)&type metadata for Any + 8;
          goto LABEL_5;
        }

      }
      sub_1000153C0(v7);
LABEL_5:
      v10 += 32;
      if (!--v5)
      {
        v4 = v20;
        swift_bridgeObjectRelease(v20);
        break;
      }
    }
  }
  *(_QWORD *)(v0 + 296) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v4);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 208));
  v17 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 304) = v17;
  v21 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1005D3958 + dword_1005D3958);
  v18 = (_QWORD *)swift_task_alloc(unk_1005D395C);
  *(_QWORD *)(v0 + 312) = v18;
  *v18 = v0;
  v18[1] = sub_1001DCBE8;
  return v21((uint64_t)_swiftEmptyArrayStorage, v17, 0);
}

uint64_t sub_1001DCBE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t (*v7)();
  uint64_t v8;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 312);
  *(_QWORD *)(*(_QWORD *)v2 + 320) = v1;
  swift_task_dealloc(v5);
  v6 = (void *)v4[38];
  if (v1)
  {

    v7 = sub_1001DCCD0;
  }
  else
  {
    v8 = v4[37];

    swift_bridgeObjectRelease(v8);
    v4[41] = a1;
    v7 = sub_1001DCC74;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_1001DCC74()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = *(void **)(v0 + 280);
  v1 = *(void **)(v0 + 288);
  v3 = *(void **)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 256);

  swift_task_dealloc(v4);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 328));
}

uint64_t sub_1001DCCD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 296);
  v3 = *(void **)(v0 + 280);
  v4 = *(void **)(v0 + 264);

  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(*(_QWORD *)(v0 + 256));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DCD30(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + 104) = a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  v4 = *(_QWORD *)(type metadata accessor for NoteEntity(0) - 8);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DCD90, 0, 0);
}

uint64_t sub_1001DCD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    *(_QWORD *)(v0 + 48) = v2;
    if (v2)
      goto LABEL_3;
LABEL_19:
    v23 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(_swiftEmptyArrayStorage);
  }
LABEL_15:
  if (v1 < 0)
    v21 = v1;
  else
    v21 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v22 = _CocoaArrayWrapper.endIndex.getter(v21);
  *(_QWORD *)(v0 + 48) = v22;
  if (!v22)
    goto LABEL_19;
LABEL_3:
  for (i = 0; ; i = *(_QWORD *)(v0 + 72))
  {
    *(_QWORD *)(v0 + 56) = _swiftEmptyArrayStorage;
    v4 = *(_QWORD *)(v0 + 16);
    if ((v4 & 0xC000000000000001) != 0)
      v1 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v1 = (uint64_t)*(id *)(v4 + 8 * i + 32);
    v5 = (void *)v1;
    *(_QWORD *)(v0 + 64) = v1;
    *(_QWORD *)(v0 + 72) = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    if ((objc_msgSend((id)v1, "isTemporaryID") & 1) == 0)
      break;
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 48);

    if (v6 == v7)
      goto LABEL_19;
  }
  v8 = objc_msgSend(*(id *)(v0 + 24), "managedObjectContextForObjectID:", v5);
  *(_QWORD *)(v0 + 80) = v8;
  if (v8)
  {
    v9 = v8;
    v10 = *(void **)(v0 + 24);
    v11 = dword_1005D7884;
    v12 = v5;
    v13 = v9;
    v14 = v10;
    v15 = (_QWORD *)swift_task_alloc(v11);
    *(_QWORD *)(v0 + 88) = v15;
    *v15 = v0;
    v15[1] = sub_1001DCFD0;
    return NoteEntity.init(for:in:includeContents:noteContext:)(*(_QWORD *)(v0 + 40), (uint64_t)v12, (uint64_t)v13, *(_BYTE *)(v0 + 104), (uint64_t)v14);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 16);
    v18 = swift_allocObject(&unk_10055D958, 24, 7);
    *(_QWORD *)(v18 + 16) = 0;
    v19 = v5;
    sub_10014F724(v18, 225, v19);

    v20 = swift_release(v18);
    swift_willThrow(v20);

    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_task_dealloc(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001DCFD0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
    v4 = sub_1001DD2B4;
  }
  else
  {
    v4 = sub_1001DD03C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001DD03C()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v0 + 56));
  v2 = *(_QWORD *)(v0 + 56);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
LABEL_16:
    v2 = sub_10016A824(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_10016A824(v3 > 1, v4 + 1, 1, v2);
  v5 = *(void **)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  sub_10013B170(v6, v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v4, type metadata accessor for NoteEntity);

  do
  {
    v8 = *(_QWORD *)(v0 + 72);
    v9 = *(_QWORD *)(v0 + 48);

    if (v8 == v9)
    {
      v23 = *(_QWORD *)(v0 + 40);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
      swift_task_dealloc(v23);
      return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
    }
    v10 = *(_QWORD *)(v0 + 72);
    *(_QWORD *)(v0 + 56) = v2;
    v11 = *(_QWORD *)(v0 + 16);
    if ((v11 & 0xC000000000000001) != 0)
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v11);
    else
      v12 = *(id *)(v11 + 8 * v10 + 32);
    v13 = v12;
    *(_QWORD *)(v0 + 64) = v12;
    *(_QWORD *)(v0 + 72) = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
  }
  while ((objc_msgSend(v12, "isTemporaryID") & 1) != 0);
  v14 = objc_msgSend(*(id *)(v0 + 24), "managedObjectContextForObjectID:", v13);
  *(_QWORD *)(v0 + 80) = v14;
  if (v14)
  {
    v15 = v14;
    v16 = *(void **)(v0 + 24);
    v17 = dword_1005D7884;
    v18 = v13;
    v19 = v15;
    v20 = v16;
    v21 = (_QWORD *)swift_task_alloc(v17);
    *(_QWORD *)(v0 + 88) = v21;
    *v21 = v0;
    v21[1] = sub_1001DCFD0;
    return NoteEntity.init(for:in:includeContents:noteContext:)(*(_QWORD *)(v0 + 40), (uint64_t)v18, (uint64_t)v19, *(_BYTE *)(v0 + 104), (uint64_t)v20);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 16);
    v25 = swift_allocObject(&unk_10055D958, 24, 7);
    *(_QWORD *)(v25 + 16) = 0;
    v26 = v13;
    sub_10014F724(v25, 225, v26);

    v27 = swift_release(v25);
    swift_willThrow(v27);

    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v2);
    swift_task_dealloc(*(_QWORD *)(v0 + 40));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001DD2B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 16);

  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

int8x8_t sub_1001DD304@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64x2_t v5;
  int16x8_t v6;
  int8x8_t result;

  *(_QWORD *)a1 = sub_1001E964C();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4 & 1;
  v5 = (uint64x2_t)vdupq_n_s64(v4);
  v6 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_100451C10), (int32x4_t)vshlq_u64(v5, (uint64x2_t)xmmword_100451C00));
  *(int8x8_t *)v6.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v6), (int8x8_t)0x1000100010001);
  result = vmovn_s16(v6);
  *(_DWORD *)(a1 + 25) = result.i32[0];
  return result;
}

uint64_t sub_1001DD368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  *(_BYTE *)(v2 + 56) = *(_BYTE *)(v1 + 25);
  return swift_task_switch(sub_1001DD38C, 0, 0);
}

uint64_t sub_1001DD38C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, char);

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 40) = v1;
  v4 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1005D0270 + dword_1005D0270);
  v2 = (_QWORD *)swift_task_alloc(unk_1005D0274);
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_100132748;
  return v4(*(_QWORD *)(v0 + 24), v1, *(_BYTE *)(v0 + 56));
}

uint64_t sub_1001DD408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const mach_header_64 *v16;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 24);
  v6 = *(unsigned __int8 *)(v1 + 25);
  v7 = *(unsigned __int8 *)(v1 + 26);
  v8 = *(unsigned __int8 *)(v1 + 27);
  v9 = *(unsigned __int8 *)(v1 + 28);
  v10 = (_QWORD *)swift_task_alloc(dword_1005D394C);
  *(_QWORD *)(v2 + 24) = v10;
  v11 = 256;
  if (!v6)
    v11 = 0;
  v12 = v11 | v5;
  v13 = 0x10000;
  if (!v7)
    v13 = 0;
  v14 = 0x1000000;
  if (!v8)
    v14 = 0;
  v15 = v12 | v13 | v14;
  v16 = &_mh_execute_header;
  if (!v9)
    v16 = 0;
  *v10 = v2;
  v10[1] = sub_10013B218;
  return VisibleNotesQuery.suggestedEntities()((uint64_t)v10, v3, v4, v15 | (unint64_t)v16);
}

uint64_t sub_1001DD4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100127D40();
  *v5 = v2;
  v5[1] = sub_100130768;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t VisibleNotesQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch(sub_1001DD554, 0, 0);
}

uint64_t sub_1001DD554()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = v0[2];
  v1 = v0[3];
  v3 = sub_100012E18(&qword_1005D3970);
  v4 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v3, v8 + v6, v7 | 7);
  v0[8] = v9;
  *(_OWORD *)(v9 + 16) = xmmword_100451C20;
  v10 = (uint64_t *)(v9 + v8);
  KeyPath = swift_getKeyPath(&unk_100459F48, v11);
  v14 = swift_getKeyPath(&unk_100459F70, v13);
  *v10 = KeyPath;
  v10[1] = v14;
  v10[2] = v2;
  v10[3] = v1;
  swift_storeEnumTagMultiPayload(v10, v4, 4);
  v15 = dword_1005D397C;
  swift_bridgeObjectRetain(v1);
  v16 = (_QWORD *)swift_task_alloc(v15);
  v0[9] = v16;
  *v16 = v0;
  v16[1] = sub_1001DD680;
  return VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(v9, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v0[4], v0[5], v0[6]);
}

uint64_t sub_1001DD680(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(*v2 + 72);
  v5 = *v2;
  *(_QWORD *)(v5 + 80) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_1001DD708, 0, 0);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 64));
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(a1);
}

uint64_t sub_1001DD708()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static VisibleNotesQuery.ComparatorKeyPath.title.getter(uint64_t a1, uint64_t a2)
{
  return sub_1001E37E4(a1, a2, (uint64_t)&unk_100459F48, (uint64_t)&unk_100459F70);
}

uint64_t VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  *(_QWORD *)(v8 + 2200) = v22;
  *(_QWORD *)(v8 + 2192) = a8;
  *(_QWORD *)(v8 + 2184) = a7;
  *(_QWORD *)(v8 + 2176) = a6;
  *(_BYTE *)(v8 + 2643) = a5;
  *(_QWORD *)(v8 + 2168) = a4;
  *(_QWORD *)(v8 + 2160) = a3;
  *(_BYTE *)(v8 + 2642) = a2;
  *(_QWORD *)(v8 + 2152) = a1;
  v9 = type metadata accessor for Logger(0);
  *(_QWORD *)(v8 + 2208) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 2216) = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 2224) = swift_task_alloc(v11);
  *(_QWORD *)(v8 + 2232) = swift_task_alloc(v11);
  *(_QWORD *)(v8 + 2240) = swift_task_alloc(v11);
  *(_QWORD *)(v8 + 2248) = swift_task_alloc(v11);
  v12 = sub_100012E18((uint64_t *)&unk_1005D3980);
  *(_QWORD *)(v8 + 2256) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 2264) = v13;
  *(_QWORD *)(v8 + 2272) = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100012E18(&qword_1005D3938);
  *(_QWORD *)(v8 + 2280) = v14;
  v15 = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v8 + 2288) = v15;
  *(_QWORD *)(v8 + 2296) = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for NoteID(0);
  *(_QWORD *)(v8 + 2304) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v8 + 2312) = v17;
  *(_QWORD *)(v8 + 2320) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (*(_QWORD *)(*(_QWORD *)(sub_100012E18(&qword_1005D1080) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 2328) = swift_task_alloc(v18);
  *(_QWORD *)(v8 + 2336) = swift_task_alloc(v18);
  v19 = type metadata accessor for ManagedEntityContextType(0);
  *(_QWORD *)(v8 + 2344) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v8 + 2352) = v20;
  *(_QWORD *)(v8 + 2360) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DD8D8, 0, 0);
}

uint64_t sub_1001DD8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  unsigned int v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void (*v31)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _UNKNOWN **v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  int64_t v50;
  void **v51;
  uint64_t v52;
  void *v53;
  Swift::String v54;
  Swift::String v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  unint64_t v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t result;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  Class isa;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  void *v89;
  uint64_t v90;
  id v91;
  id v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  Class v108;
  void *v109;
  id v110;
  uint64_t v111;
  void *v112;
  Class v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  void *v123;
  char v124;
  uint64_t v125;
  id v126;
  Class v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  _BOOL4 v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint8_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  void (*v150)(uint64_t, uint64_t);
  void *v151;
  void *v152;
  uint64_t v153;
  id v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  id v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  _QWORD *v164;
  id v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;

  v1 = *(_QWORD *)(v0 + 2360);
  v2 = *(_QWORD *)(v0 + 2352);
  v3 = *(_QWORD *)(v0 + 2344);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1848));
  v4 = *(void **)(v0 + 1848);
  *(_QWORD *)(v0 + 2368) = objc_msgSend(v4, "modernManagedObjectContext");

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 2144));
  v5 = *(void **)(v0 + 2144);
  v6 = enum case for ManagedEntityContextType.html(_:);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  v7(v1, enum case for ManagedEntityContextType.html(_:), v3);
  *(_QWORD *)(v0 + 2376) = ICUnifiedNoteContext.managedObjectContext(for:)(v1);
  v164 = (_QWORD *)(v0 + 1336);
  v8 = *(_QWORD *)(v0 + 2200);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 2352) + 8))(*(_QWORD *)(v0 + 2360), *(_QWORD *)(v0 + 2344));

  v9 = IntentParameterDependency.wrappedValue.getter();
  if (!v9)
  {
    v15 = (v8 >> 24) & 1;
    v17 = HIDWORD(v8) & 1;
    v18 = *(_BYTE *)(v0 + 2200) & 1;
    goto LABEL_16;
  }
  v11 = v9;
  v12 = (_BYTE *)(v0 + 2641);
  KeyPath = swift_getKeyPath(&unk_100459F10, v10);
  v14 = sub_1001B40AC();
  IntentProjection.subscript.getter(KeyPath, v14);
  swift_release(KeyPath);
  if (!*(_BYTE *)(v0 + 2640))
  {
    v16 = 0xE300000000000000;
    v19 = 6579297;
LABEL_8:
    LOBYTE(v15) = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v16, 0x65766F6D6572, 0xE600000000000000, 0);
    goto LABEL_9;
  }
  if (*(_BYTE *)(v0 + 2640) != 1)
  {
    v16 = 0xE600000000000000;
    v19 = 0x656C67676F74;
    goto LABEL_8;
  }
  LOBYTE(v15) = 1;
  v16 = 0xE600000000000000;
LABEL_9:
  swift_bridgeObjectRelease(v16);
  v21 = swift_getKeyPath(&unk_100459F10, v20);
  IntentProjection.subscript.getter(v21, v14);
  swift_release(v21);
  if (*v12)
  {
    if (*v12 == 1)
      v22 = 0x65766F6D6572;
    else
      v22 = 0x656C67676F74;
    v23 = 0xE600000000000000;
    LOBYTE(v17) = _stringCompareWithSmolCheck(_:_:expecting:)(v22, 0xE600000000000000, 6579297, 0xE300000000000000, 0);
  }
  else
  {
    LOBYTE(v17) = 1;
    v23 = 0xE300000000000000;
  }
  swift_bridgeObjectRelease(v23);
  swift_release(v11);
  v18 = 0;
LABEL_16:
  *(_BYTE *)(v0 + 2646) = v18;
  *(_BYTE *)(v0 + 2645) = v15 & 1;
  v166 = (_BYTE *)(v0 + 2644);
  *(_BYTE *)(v0 + 2644) = v17 & 1;
  v24 = *(_QWORD *)(v0 + 2352);
  v25 = *(_QWORD *)(v0 + 2344);
  v26 = *(_QWORD *)(v0 + 2336);
  v27 = *(_QWORD *)(v0 + 2328);
  v162 = *(_QWORD *)(v0 + 2160);
  v28 = *(_QWORD *)(v0 + 2152);
  v29 = *(_BYTE *)(v0 + 2642) & 1;
  v168 = v0;
  v30 = enum case for ManagedEntityContextType.modern(_:);
  v7(v26, enum case for ManagedEntityContextType.modern(_:), v25);
  v31 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56);
  v31(v26, 0, 1, v25);
  sub_100012CE8(v26, v27, &qword_1005D1080);
  swift_bridgeObjectRetain(v28);
  *(_QWORD *)(v0 + 2384) = sub_1001E5E48(v32, v29, v27, 0);
  sub_100012DDC(v26, &qword_1005D1080);
  v7(v26, v6, v25);
  v31(v26, 0, 1, v25);
  sub_100012CE8(v26, v27, &qword_1005D1080);
  swift_bridgeObjectRetain(v28);
  *(_QWORD *)(v0 + 2392) = sub_1001E5E48(v33, v29, v27, 0);
  sub_100012DDC(v26, &qword_1005D1080);
  v34 = v30;
  v35 = (_QWORD *)v0;
  v7(v26, v34, v25);
  v31(v26, 0, 1, v25);
  sub_100012CE8(v26, v27, &qword_1005D1080);
  swift_bridgeObjectRetain(v28);
  *(_QWORD *)(v0 + 2400) = sub_1001E5E48(v36, v29, v27, 1);
  sub_100012DDC(v26, &qword_1005D1080);
  v7(v26, v6, v25);
  v31(v26, 0, 1, v25);
  sub_100012CE8(v26, v27, &qword_1005D1080);
  swift_bridgeObjectRetain(v28);
  *(_QWORD *)(v0 + 2408) = sub_1001E5E48(v37, v29, v27, 1);
  sub_100012DDC(v26, &qword_1005D1080);
  if (*(_QWORD *)(v162 + 16))
  {
    v38 = *(void **)(v0 + 2160);
    v39 = sub_100012E18(&qword_1005D3990);
    v40 = sub_100016638(&qword_1005D3998, &qword_1005D3990, (uint64_t)&protocol conformance descriptor for LazyMapSequence<A, B>);
    v41 = (_UNKNOWN **)swift_allocObject(&unk_10055D750, 72, 7);
    v41[2] = v38;
    v41[3] = sub_1002CCAE4;
    v41[4] = 0;
    v41[5] = sub_1001E8EC4;
    v41[6] = 0;
    v41[7] = sub_1001E8ED4;
    v41[8] = 0;
    swift_bridgeObjectRetain(v38);
  }
  else
  {
    v39 = sub_100012E18(&qword_1005D3A58);
    v40 = sub_100016638(&qword_1005D3A60, &qword_1005D3A58, (uint64_t)&protocol conformance descriptor for [A]);
    v41 = &off_100556018;
  }
  v42 = *(_QWORD *)(v0 + 2152);
  *(_QWORD *)(v0 + 1360) = v39;
  *(_QWORD *)(v0 + 1368) = v40;
  *(_QWORD *)(v0 + 1336) = v41;
  sub_10012D19C(v164, v39);
  v43 = sub_1000163BC(0, &qword_1005D39A0, NSSortDescriptor_ptr);
  *(_QWORD *)(v0 + 2416) = v43;
  *(_QWORD *)(v0 + 2424) = sub_1001DBF08((void (*)(char *, char *))sub_1001E4200, 0, v39, v43, (uint64_t)&type metadata for Never, v40, (uint64_t)&protocol witness table for Never, v44);
  v45 = *(_QWORD *)(v0 + 1360);
  v46 = *(_QWORD *)(v0 + 1368);
  v47 = sub_10012D19C(v164, v45);
  *(_QWORD *)(v0 + 2432) = sub_1001DBF08((void (*)(char *, char *))sub_1001E4234, 0, v45, v43, (uint64_t)&type metadata for Never, v46, (uint64_t)&protocol witness table for Never, (uint64_t)v47);
  v48 = sub_1001D814C(v42);
  v49 = v48;
  v50 = v48[2];
  if (v50)
  {
    sub_100137028(0, v50, 0);
    v51 = (void **)(v49 + 5);
    do
    {
      v52 = (uint64_t)*(v51 - 1);
      v53 = *v51;
      v169 = 40;
      v170 = 0xE100000000000000;
      swift_bridgeObjectRetain(v53);
      v54._countAndFlagsBits = v52;
      v54._object = v53;
      String.append(_:)(v54);
      v55._countAndFlagsBits = 41;
      v55._object = (void *)0xE100000000000000;
      String.append(_:)(v55);
      swift_bridgeObjectRelease(v53);
      v57 = _swiftEmptyArrayStorage[2];
      v56 = _swiftEmptyArrayStorage[3];
      if (v57 >= v56 >> 1)
        sub_100137028(v56 > 1, v57 + 1, 1);
      _swiftEmptyArrayStorage[2] = v57 + 1;
      v58 = &_swiftEmptyArrayStorage[2 * v57];
      v58[4] = 40;
      v58[5] = 0xE100000000000000;
      v51 += 2;
      --v50;
    }
    while (v50);
    v59 = *(_BYTE *)(v168 + 2642);
    swift_bridgeObjectRelease(v49);
    *(_QWORD *)(v168 + 2136) = _swiftEmptyArrayStorage;
    v169 = 32;
    v170 = 0xE100000000000000;
    if ((v59 & 1) != 0)
      v60 = 31868;
    else
      v60 = 9766;
    v61 = 0xE200000000000000;
    String.append(_:)(*(Swift::String *)&v60);
    swift_bridgeObjectRelease(0xE200000000000000);
    v62._countAndFlagsBits = 32;
    v62._object = (void *)0xE100000000000000;
    String.append(_:)(v62);
    v63 = sub_100012E18(&qword_1005D39A8);
    v64 = sub_100016638((unint64_t *)&qword_1005D39B0, &qword_1005D39A8, (uint64_t)&protocol conformance descriptor for [A]);
    v65 = BidirectionalCollection<>.joined(separator:)(v169, v170, v63, v64);
    v67 = v66;
    swift_bridgeObjectRelease(v170);
    swift_release(_swiftEmptyArrayStorage);
    *(_QWORD *)(v168 + 2440) = v67;
    sub_1000163BC(0, (unint64_t *)&unk_1005D8C40, ICSearchQueryOperation_ptr);
    v68 = (_QWORD *)swift_task_alloc(async function pointer to static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)[1]);
    *(_QWORD *)(v168 + 2448) = v68;
    *v68 = v168;
    v68[1] = sub_1001DE9D4;
    return static ICSearchQueryOperation.searchResults(queryString:rankingQueries:)(v65, v67, _swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease(v48);
  v35[317] = 0;
  v70 = v35[269];
  v71 = *(_QWORD *)(v70 + 16);
  if (v71)
  {
    v72 = sub_1001D814C(v70);
    v73 = v72[2];
    swift_bridgeObjectRelease(v72);
    v74 = v73 < v71;
  }
  else
  {
    v74 = 1;
  }
  v166[3] = v74;
  v75 = v35[303];
  v76 = v35[296];
  v77 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  v78 = (void *)static NSObject<>.ic_fetchRequest()();
  v35[318] = v78;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v75);
  v163 = v78;
  objc_msgSend(v78, "setSortDescriptors:", isa);

  v80 = sub_100012E18(&qword_1005CF6F0);
  v81 = swift_allocObject(v80, 56, 7);
  *(_OWORD *)(v81 + 16) = xmmword_100454060;
  v82 = (void *)objc_opt_self(ICNote);
  *(_QWORD *)(v81 + 32) = objc_msgSend(v82, "predicateForVisibleNotesInContext:", v76);
  sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
  if (qword_1005CEA80 != -1)
    swift_once(&qword_1005CEA80, sub_1001DA458);
  v83 = v35[287];
  v84 = v35[286];
  v85 = v35[285];
  v86 = sub_10012A0B0(v85, (uint64_t)static ICNote.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v83, v86, v85);
  v87 = NSPredicate.init<A>(_:)(v83, v77);
  if (!v87)
  {
    v119 = swift_bridgeObjectRelease(0);
    __break(1u);
LABEL_58:
    result = swift_bridgeObjectRelease(v119);
    __break(1u);
    return result;
  }
  v88 = v35 + 265;
  v89 = (void *)v35[298];
  v90 = v35[275];
  *(_QWORD *)(v81 + 40) = v87;
  *(_QWORD *)(v81 + 48) = v89;
  v169 = v81;
  specialized Array._endMutation()(v87);
  v35[265] = v81;
  v91 = v89;
  if ((v90 & 0x10000) != 0)
  {
    v92 = objc_msgSend(v82, "predicateForPinnedNotes");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v92);
    v94 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v93 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v94 >= v93 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
    v95 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v92);
    specialized Array._endMutation()(v95);
  }
  if (v166[1] == 1)
  {
    v96 = objc_msgSend((id)objc_opt_self(ICCloudSyncingObject), "predicateForPasswordProtectedObjects");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
    v98 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v97 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v98 >= v97 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
    v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v96);
    specialized Array._endMutation()(v99);
  }
  v160 = v80;
  if (*v166 == 1)
  {
    v100 = objc_msgSend((id)objc_opt_self(ICCloudSyncingObject), "predicateForPasswordProtectedObjects");
    v101 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "notPredicateWithSubpredicate:", v100);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v102);
    v104 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v103 = *(_QWORD *)((*v88 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v104 >= v103 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v103 > 1, v104 + 1, 1);
    v105 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v104, v101);
    specialized Array._endMutation()(v105);
  }
  v106 = v35[304];
  v107 = v35[265];
  swift_bridgeObjectRetain(v107);
  v108 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v107);
  v109 = (void *)objc_opt_self(NSCompoundPredicate);
  v110 = objc_msgSend(v109, "andPredicateWithSubpredicates:", v108);

  objc_msgSend(v163, "setPredicate:", v110);
  v111 = sub_1000163BC(0, &qword_1005D3A00, NoteObject_ptr);
  v112 = (void *)static NSObject<>.ic_fetchRequest()();
  v35[319] = v112;
  v113 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v106);
  v165 = v112;
  objc_msgSend(v112, "setSortDescriptors:", v113);

  v114 = swift_allocObject(v160, 56, 7);
  *(_OWORD *)(v114 + 16) = xmmword_100454060;
  *(_QWORD *)(v114 + 32) = objc_msgSend((id)objc_opt_self(NoteObject), "predicateForVisibleNotes");
  if (qword_1005CEA88 != -1)
    swift_once(&qword_1005CEA88, sub_1001DA8D8);
  v115 = v35[284];
  v116 = v35[283];
  v117 = v35[282];
  v118 = sub_10012A0B0(v117, (uint64_t)qword_1005D3920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16))(v115, v118, v117);
  v119 = NSPredicate.init<A>(_:)(v115, v111);
  if (!v119)
    goto LABEL_58;
  v120 = v119;
  v121 = v35;
  v122 = v35 + 189;
  v123 = (void *)v35[299];
  v124 = v166[2];
  v125 = swift_bridgeObjectRelease(v121[265]);
  *(_QWORD *)(v114 + 40) = v120;
  *(_QWORD *)(v114 + 48) = v123;
  v169 = v114;
  specialized Array._endMutation()(v125);
  v126 = v123;
  v127 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v114);
  v128 = objc_msgSend(v109, "andPredicateWithSubpredicates:", v127);

  objc_msgSend(v165, "setPredicate:", v128);
  if ((v124 & 1) == 0)
  {
    v129 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithValue:", 0);
    objc_msgSend(v165, "setPredicate:", v129);

  }
  if ((*((_BYTE *)v121 + 2643) & 1) == 0)
  {
    v130 = v121[271];
    objc_msgSend(v163, "setFetchLimit:", v130);
    objc_msgSend(v165, "setFetchLimit:", v130);
  }
  v131 = v121[274];
  v132 = v121[273];
  v133 = v121[272];
  v134 = v121[269];
  swift_retain(v133);
  swift_retain(v132);
  swift_retain(v131);
  AppDependency.wrappedValue.getter(v122);
  Logger.init(subsystem:category:)(v121[189], v121[190], v121[191], v121[192]);
  swift_release(v133);
  swift_release(v132);
  swift_release(v131);
  v135 = swift_bridgeObjectRetain_n(v134, 2);
  v136 = Logger.logObject.getter(v135);
  v137 = static os_log_type_t.info.getter();
  v138 = os_log_type_enabled(v136, v137);
  v139 = v121[281];
  v140 = v121[277];
  v141 = v121[276];
  v142 = v121[269];
  if (v138)
  {
    v167 = v121[277];
    v143 = (uint8_t *)swift_slowAlloc(12, -1);
    v144 = swift_slowAlloc(32, -1);
    v169 = v144;
    *(_DWORD *)v143 = 136315138;
    v145 = type metadata accessor for VisibleNotesQuery.Comparator(0);
    swift_bridgeObjectRetain(v142);
    v147 = Array.description.getter(v146, v145);
    v161 = v139;
    v149 = v148;
    swift_bridgeObjectRelease(v142);
    *(_QWORD *)(v168 + 2096) = sub_1003A4190(v147, v149, &v169);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v121 + 262, v168 + 2104, v143 + 4);
    swift_bridgeObjectRelease(v149);
    swift_bridgeObjectRelease_n(v142, 2);
    _os_log_impl((void *)&_mh_execute_header, v136, v137, "VisibleNotesQuery: performing with filters %s", v143, 0xCu);
    swift_arrayDestroy(v144, 1, (char *)&type metadata for Any + 8);
    v121 = (_QWORD *)v168;
    swift_slowDealloc(v144, -1, -1);
    swift_slowDealloc(v143, -1, -1);

    v150 = *(void (**)(uint64_t, uint64_t))(v167 + 8);
    v150(v161, v141);
  }
  else
  {
    swift_bridgeObjectRelease_n(v121[269], 2);

    v150 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
    v150(v139, v141);
  }
  v121[320] = v150;
  v151 = (void *)v121[297];
  v152 = (void *)v121[296];
  v153 = swift_allocObject(&unk_10055D778, 32, 7);
  v121[321] = v153;
  *(_QWORD *)(v153 + 16) = v152;
  *(_QWORD *)(v153 + 24) = v163;
  v154 = v152;
  v155 = v163;
  swift_retain(v153);
  v156 = sub_10001537C(&qword_1005D3A18);
  swift_asyncLet_begin(v121 + 82, 0, v156, &unk_1005D3A10, v153, v121 + 249);
  v157 = swift_allocObject(&unk_10055D7A0, 32, 7);
  v121[322] = v157;
  *(_QWORD *)(v157 + 16) = v151;
  *(_QWORD *)(v157 + 24) = v165;
  v158 = v151;
  v159 = v165;
  swift_retain(v157);
  swift_asyncLet_begin(v121 + 2, 0, v156, &unk_1005D3A28, v157, v121 + 243);
  return swift_asyncLet_get_throwing(v121 + 82, v121 + 249, sub_1001E0880, v121 + 250);
}

uint64_t sub_1001DE9D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 2448);
  v3[307] = a1;
  v3[308] = v1;
  swift_task_dealloc(v4);
  v5 = v3[305];
  if (v1)
  {
    v6 = v3[304];
    v7 = v3[303];
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    v8 = sub_1001E1080;
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    v8 = sub_1001DEA68;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001DEA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Class v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  Class v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char v62;
  uint64_t v63;
  id v64;
  Class v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  void *v89;
  void *v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  id v100;
  id v101;
  uint64_t v102;

  v1 = *(_QWORD *)(v0 + 2456);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v7 = *(_QWORD *)(v0 + 2456);
    else
      v7 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 2456));
    v8 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v1);
    if (v8)
      goto LABEL_3;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v2 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 2472) = v2;
    *(_QWORD *)(v0 + 2480) = static MainActor.shared.getter(v2);
    v4 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v3);
    return swift_task_switch(sub_1001DF3F8, v4, v5);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 2456));
  *(_QWORD *)(v0 + 2536) = 0;
  v9 = *(_QWORD *)(v0 + 2152);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = sub_1001D814C(v9);
    v12 = v11[2];
    swift_bridgeObjectRelease(v11);
    v13 = v12 < v10;
  }
  else
  {
    v13 = 1;
  }
  *(_BYTE *)(v0 + 2647) = v13;
  v14 = *(_QWORD *)(v0 + 2424);
  v15 = *(_QWORD *)(v0 + 2368);
  v16 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  v17 = (void *)static NSObject<>.ic_fetchRequest()();
  *(_QWORD *)(v0 + 2544) = v17;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v100 = v17;
  objc_msgSend(v17, "setSortDescriptors:", isa);

  v19 = sub_100012E18(&qword_1005CF6F0);
  v20 = swift_allocObject(v19, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100454060;
  v21 = (void *)objc_opt_self(ICNote);
  *(_QWORD *)(v20 + 32) = objc_msgSend(v21, "predicateForVisibleNotesInContext:", v15);
  sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
  if (qword_1005CEA80 != -1)
    swift_once(&qword_1005CEA80, sub_1001DA458);
  v22 = *(_QWORD *)(v0 + 2296);
  v23 = *(_QWORD *)(v0 + 2288);
  v24 = *(_QWORD *)(v0 + 2280);
  v25 = sub_10012A0B0(v24, (uint64_t)static ICNote.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v25, v24);
  v26 = NSPredicate.init<A>(_:)(v22, v16);
  if (!v26)
  {
    v59 = swift_bridgeObjectRelease(0);
    __break(1u);
LABEL_38:
    result = swift_bridgeObjectRelease(v59);
    __break(1u);
    return result;
  }
  v27 = (_QWORD *)(v0 + 2120);
  v28 = *(void **)(v0 + 2384);
  v29 = *(_QWORD *)(v0 + 2200);
  *(_QWORD *)(v20 + 40) = v26;
  *(_QWORD *)(v20 + 48) = v28;
  v102 = v20;
  specialized Array._endMutation()(v26);
  *(_QWORD *)(v0 + 2120) = v20;
  v30 = v28;
  if ((v29 & 0x10000) != 0)
  {
    v31 = objc_msgSend(v21, "predicateForPinnedNotes");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v33 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v32 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
    specialized Array._endMutation()(v34);
  }
  if (*(_BYTE *)(v0 + 2645) == 1)
  {
    v35 = objc_msgSend((id)objc_opt_self(ICCloudSyncingObject), "predicateForPasswordProtectedObjects");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);
  }
  v39 = v19;
  if (*(_BYTE *)(v0 + 2644) == 1)
  {
    v40 = objc_msgSend((id)objc_opt_self(ICCloudSyncingObject), "predicateForPasswordProtectedObjects");
    v41 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "notPredicateWithSubpredicate:", v40);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
    v44 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v43 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v44 >= v43 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
    v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v41);
    specialized Array._endMutation()(v45);
  }
  v46 = *(_QWORD *)(v0 + 2432);
  v47 = *(_QWORD *)(v0 + 2120);
  swift_bridgeObjectRetain(v47);
  v48 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  v49 = (void *)objc_opt_self(NSCompoundPredicate);
  v50 = objc_msgSend(v49, "andPredicateWithSubpredicates:", v48);

  objc_msgSend(v100, "setPredicate:", v50);
  v51 = sub_1000163BC(0, &qword_1005D3A00, NoteObject_ptr);
  v52 = (void *)static NSObject<>.ic_fetchRequest()();
  *(_QWORD *)(v0 + 2552) = v52;
  v53 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  v101 = v52;
  objc_msgSend(v52, "setSortDescriptors:", v53);

  v54 = swift_allocObject(v39, 56, 7);
  *(_OWORD *)(v54 + 16) = xmmword_100454060;
  *(_QWORD *)(v54 + 32) = objc_msgSend((id)objc_opt_self(NoteObject), "predicateForVisibleNotes");
  if (qword_1005CEA88 != -1)
    swift_once(&qword_1005CEA88, sub_1001DA8D8);
  v55 = *(_QWORD *)(v0 + 2272);
  v56 = *(_QWORD *)(v0 + 2264);
  v57 = *(_QWORD *)(v0 + 2256);
  v58 = sub_10012A0B0(v57, (uint64_t)qword_1005D3920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
  v59 = NSPredicate.init<A>(_:)(v55, v51);
  if (!v59)
    goto LABEL_38;
  v60 = v59;
  v61 = *(void **)(v0 + 2392);
  v62 = *(_BYTE *)(v0 + 2646);
  v63 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 2120));
  *(_QWORD *)(v54 + 40) = v60;
  *(_QWORD *)(v54 + 48) = v61;
  v102 = v54;
  specialized Array._endMutation()(v63);
  v64 = v61;
  v65 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v54);
  v66 = objc_msgSend(v49, "andPredicateWithSubpredicates:", v65);

  objc_msgSend(v101, "setPredicate:", v66);
  if ((v62 & 1) == 0)
  {
    v67 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithValue:", 0);
    objc_msgSend(v101, "setPredicate:", v67);

  }
  if ((*(_BYTE *)(v0 + 2643) & 1) == 0)
  {
    v68 = *(_QWORD *)(v0 + 2168);
    objc_msgSend(v100, "setFetchLimit:", v68);
    objc_msgSend(v101, "setFetchLimit:", v68);
  }
  v69 = *(_QWORD *)(v0 + 2192);
  v70 = *(_QWORD *)(v0 + 2184);
  v71 = *(_QWORD *)(v0 + 2176);
  v72 = *(_QWORD *)(v0 + 2152);
  swift_retain(v71);
  swift_retain(v70);
  swift_retain(v69);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1512));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 1512), *(_QWORD *)(v0 + 1520), *(_QWORD *)(v0 + 1528), *(_QWORD *)(v0 + 1536));
  swift_release(v71);
  swift_release(v70);
  swift_release(v69);
  v73 = swift_bridgeObjectRetain_n(v72, 2);
  v74 = Logger.logObject.getter(v73);
  v75 = static os_log_type_t.info.getter();
  v76 = os_log_type_enabled(v74, v75);
  v77 = *(_QWORD *)(v0 + 2248);
  v78 = *(_QWORD *)(v0 + 2216);
  v79 = *(_QWORD *)(v0 + 2208);
  v80 = *(_QWORD *)(v0 + 2152);
  if (v76)
  {
    v99 = *(_QWORD *)(v0 + 2248);
    v98 = *(_QWORD *)(v0 + 2216);
    v81 = (uint8_t *)swift_slowAlloc(12, -1);
    v82 = swift_slowAlloc(32, -1);
    v102 = v82;
    *(_DWORD *)v81 = 136315138;
    v83 = type metadata accessor for VisibleNotesQuery.Comparator(0);
    swift_bridgeObjectRetain(v80);
    v85 = Array.description.getter(v84, v83);
    v87 = v86;
    swift_bridgeObjectRelease(v80);
    *(_QWORD *)(v0 + 2096) = sub_1003A4190(v85, v87, &v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2096, v0 + 2104, v81 + 4);
    swift_bridgeObjectRelease(v87);
    swift_bridgeObjectRelease_n(v80, 2);
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "VisibleNotesQuery: performing with filters %s", v81, 0xCu);
    swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v82, -1, -1);
    swift_slowDealloc(v81, -1, -1);

    v88 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v88(v99, v79);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 2152), 2);

    v88 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
    v88(v77, v79);
  }
  *(_QWORD *)(v0 + 2560) = v88;
  v89 = *(void **)(v0 + 2376);
  v90 = *(void **)(v0 + 2368);
  v91 = swift_allocObject(&unk_10055D778, 32, 7);
  *(_QWORD *)(v0 + 2568) = v91;
  *(_QWORD *)(v91 + 16) = v90;
  *(_QWORD *)(v91 + 24) = v100;
  v92 = v90;
  v93 = v100;
  swift_retain(v91);
  v94 = sub_10001537C(&qword_1005D3A18);
  swift_asyncLet_begin(v0 + 656, 0, v94, &unk_1005D3A10, v91, v0 + 1992);
  v95 = swift_allocObject(&unk_10055D7A0, 32, 7);
  *(_QWORD *)(v0 + 2576) = v95;
  *(_QWORD *)(v95 + 16) = v89;
  *(_QWORD *)(v95 + 24) = v101;
  v96 = v89;
  v97 = v101;
  swift_retain(v95);
  swift_asyncLet_begin(v0 + 16, 0, v94, &unk_1005D3A28, v95, v0 + 1944);
  return swift_asyncLet_get_throwing(v0 + 656, v0 + 1992, sub_1001E0880, v0 + 2000);
}

void sub_1001DF3F8()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  id v3;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  Class v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = (void *)v0[297];
  v2 = (void *)v0[296];
  swift_release(v0[310]);
  v3 = objc_msgSend((id)objc_opt_self(ICSearchIndexer), "sharedIndexer");
  sub_1000163BC(0, (unint64_t *)&unk_1005D39C0, CSSearchableItem_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = sub_100012E18(&qword_1005CF6F0);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100451BF0;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v1;
  v31 = v6;
  specialized Array._endMutation()(v6);
  sub_1000163BC(0, (unint64_t *)&unk_1005D39D0, NSManagedObjectContext_ptr);
  v7 = v2;
  v8 = v1;
  v9 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v31);
  v10 = objc_msgSend(v3, "objectsForSearchableItems:inContexts:", isa, v9);

  v11 = sub_100012E18((uint64_t *)&unk_1005D39E0);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v12);
    if (v13)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease(v12);
    v0[311] = _swiftEmptyArrayStorage;
    v30 = v0[307];
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v30);
    swift_task_switch(sub_1001DF78C, 0, 0);
    return;
  }
  if (v12 < 0)
    v29 = v12;
  else
    v29 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v12);
  v13 = _CocoaArrayWrapper.endIndex.getter(v29);
  if (!v13)
    goto LABEL_26;
LABEL_3:
  if (v13 >= 1)
  {
    v14 = 0;
    v15 = v0 + 266;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
      }
      else
      {
        v16 = *(_QWORD *)(v12 + 8 * v14 + 32);
        swift_unknownObjectRetain(v16);
      }
      *v15 = &OBJC_PROTOCOL___ICSearchIndexableNote;
      v17 = swift_dynamicCastObjCProtocolConditional(v16, 1, v15);
      if (!v17)
        goto LABEL_5;
      v19 = (void *)v17;
      ObjectType = swift_getObjectType(v16);
      v21 = sub_1000163BC(0, (unint64_t *)&qword_1005D6460, NSManagedObject_ptr);
      if (!swift_dynamicCastMetatype(ObjectType, v21))
        v19 = 0;
      if (v19)
      {
        v22 = swift_getObjectType(v19);
        swift_unknownObjectRetain(v16);
        if ((sub_1001DADA0() & 1) == 0
          || (objc_msgSend(v19, "isHiddenFromSearch") & 1) != 0
          || (objc_msgSend(v19, "isDeletedOrInTrash") & 1) != 0)
        {
          swift_unknownObjectRelease_n(v16, 2);
        }
        else
        {
          v23 = objc_allocWithZone((Class)type metadata accessor for NoteSearchResult(0));
          v24 = sub_1001E9040(v19, v23, v22);
          v25 = swift_unknownObjectRelease_n(v16, 2);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v27 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v27 >= v26 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
          v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v24);
          specialized Array._endMutation()(v28);
        }
      }
      else
      {
LABEL_5:
        swift_unknownObjectRelease(v16, v18);
      }
      ++v14;
    }
    while (v13 != v14);
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1001DF78C(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Class v48;
  void *v49;
  id v50;
  uint64_t v51;
  void *v52;
  Class v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char v62;
  uint64_t v63;
  id v64;
  Class v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  _BOOL4 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void (*v88)(uint64_t, uint64_t);
  void *v89;
  void *v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  uint64_t v103;

  if ((static EntityQueryComparatorMode.== infix(_:_:)(*(_BYTE *)(v1 + 2642) & 1, 0, a1) & 1) != 0)
  {
    v2 = *(_QWORD *)(v1 + 2472);
    v3 = *(_QWORD *)(v1 + 2432);
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 2424));
    v4 = swift_bridgeObjectRelease(v3);
    *(_QWORD *)(v1 + 2496) = static MainActor.shared.getter(v4);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor, v5);
    return swift_task_switch(sub_1001E00FC, v6, v7);
  }
  v98 = *(_QWORD *)(v1 + 2488);
  *(_QWORD *)(v1 + 2536) = v98;
  v9 = *(_QWORD *)(v1 + 2152);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = sub_1001D814C(v9);
    v12 = v11[2];
    swift_bridgeObjectRelease(v11);
    v13 = v12 < v10;
  }
  else
  {
    v13 = 1;
  }
  *(_BYTE *)(v1 + 2647) = v13;
  v14 = *(_QWORD *)(v1 + 2424);
  v15 = *(_QWORD *)(v1 + 2368);
  v16 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  v17 = (void *)static NSObject<>.ic_fetchRequest()();
  *(_QWORD *)(v1 + 2544) = v17;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v101 = v17;
  objc_msgSend(v17, "setSortDescriptors:", isa);

  v19 = sub_100012E18(&qword_1005CF6F0);
  v20 = swift_allocObject(v19, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100454060;
  v21 = (void *)objc_opt_self(ICNote);
  *(_QWORD *)(v20 + 32) = objc_msgSend(v21, "predicateForVisibleNotesInContext:", v15);
  sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
  if (qword_1005CEA80 != -1)
    swift_once(&qword_1005CEA80, sub_1001DA458);
  v22 = *(_QWORD *)(v1 + 2296);
  v23 = *(_QWORD *)(v1 + 2288);
  v24 = *(_QWORD *)(v1 + 2280);
  v25 = sub_10012A0B0(v24, (uint64_t)static ICNote.hasValidEntityIdentifier);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v25, v24);
  v26 = NSPredicate.init<A>(_:)(v22, v16);
  if (!v26)
  {
    swift_bridgeObjectRelease(v98);
    __break(1u);
LABEL_33:
    result = swift_bridgeObjectRelease(v98);
    __break(1u);
    return result;
  }
  v27 = (_QWORD *)(v1 + 2120);
  v28 = *(void **)(v1 + 2384);
  v29 = *(_QWORD *)(v1 + 2200);
  *(_QWORD *)(v20 + 40) = v26;
  *(_QWORD *)(v20 + 48) = v28;
  v103 = v20;
  specialized Array._endMutation()(v26);
  *(_QWORD *)(v1 + 2120) = v20;
  v30 = v28;
  if ((v29 & 0x10000) != 0)
  {
    v31 = objc_msgSend(v21, "predicateForPinnedNotes");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v33 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v32 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
    specialized Array._endMutation()(v34);
  }
  if (*(_BYTE *)(v1 + 2645) == 1)
  {
    v35 = objc_msgSend((id)objc_opt_self(ICCloudSyncingObject), "predicateForPasswordProtectedObjects");
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
    v37 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v36 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v37 >= v36 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v36 > 1, v37 + 1, 1);
    v38 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v37, v35);
    specialized Array._endMutation()(v38);
  }
  v39 = v19;
  if (*(_BYTE *)(v1 + 2644) == 1)
  {
    v40 = objc_msgSend((id)objc_opt_self(ICCloudSyncingObject), "predicateForPasswordProtectedObjects");
    v41 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "notPredicateWithSubpredicate:", v40);

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
    v44 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v43 = *(_QWORD *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v44 >= v43 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
    v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v41);
    specialized Array._endMutation()(v45);
  }
  v46 = *(_QWORD *)(v1 + 2432);
  v47 = *(_QWORD *)(v1 + 2120);
  swift_bridgeObjectRetain(v47);
  v48 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  v49 = (void *)objc_opt_self(NSCompoundPredicate);
  v50 = objc_msgSend(v49, "andPredicateWithSubpredicates:", v48);

  objc_msgSend(v101, "setPredicate:", v50);
  v51 = sub_1000163BC(0, &qword_1005D3A00, NoteObject_ptr);
  v52 = (void *)static NSObject<>.ic_fetchRequest()();
  *(_QWORD *)(v1 + 2552) = v52;
  v53 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v46);
  v102 = v52;
  objc_msgSend(v52, "setSortDescriptors:", v53);

  v54 = swift_allocObject(v39, 56, 7);
  *(_OWORD *)(v54 + 16) = xmmword_100454060;
  *(_QWORD *)(v54 + 32) = objc_msgSend((id)objc_opt_self(NoteObject), "predicateForVisibleNotes");
  if (qword_1005CEA88 != -1)
    swift_once(&qword_1005CEA88, sub_1001DA8D8);
  v55 = *(_QWORD *)(v1 + 2272);
  v56 = *(_QWORD *)(v1 + 2264);
  v57 = *(_QWORD *)(v1 + 2256);
  v58 = sub_10012A0B0(v57, (uint64_t)qword_1005D3920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v58, v57);
  v59 = NSPredicate.init<A>(_:)(v55, v51);
  if (!v59)
    goto LABEL_33;
  v60 = v59;
  v61 = *(void **)(v1 + 2392);
  v62 = *(_BYTE *)(v1 + 2646);
  v63 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 2120));
  *(_QWORD *)(v54 + 40) = v60;
  *(_QWORD *)(v54 + 48) = v61;
  v103 = v54;
  specialized Array._endMutation()(v63);
  v64 = v61;
  v65 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v54);
  v66 = objc_msgSend(v49, "andPredicateWithSubpredicates:", v65);

  objc_msgSend(v102, "setPredicate:", v66);
  if ((v62 & 1) == 0)
  {
    v67 = objc_msgSend((id)objc_opt_self(NSPredicate), "predicateWithValue:", 0);
    objc_msgSend(v102, "setPredicate:", v67);

  }
  if ((*(_BYTE *)(v1 + 2643) & 1) == 0)
  {
    v68 = *(_QWORD *)(v1 + 2168);
    objc_msgSend(v101, "setFetchLimit:", v68);
    objc_msgSend(v102, "setFetchLimit:", v68);
  }
  v69 = *(_QWORD *)(v1 + 2192);
  v70 = *(_QWORD *)(v1 + 2184);
  v71 = *(_QWORD *)(v1 + 2176);
  v72 = *(_QWORD *)(v1 + 2152);
  swift_retain(v71);
  swift_retain(v70);
  swift_retain(v69);
  AppDependency.wrappedValue.getter((_QWORD *)(v1 + 1512));
  Logger.init(subsystem:category:)(*(_QWORD *)(v1 + 1512), *(_QWORD *)(v1 + 1520), *(_QWORD *)(v1 + 1528), *(_QWORD *)(v1 + 1536));
  swift_release(v71);
  swift_release(v70);
  swift_release(v69);
  v73 = swift_bridgeObjectRetain_n(v72, 2);
  v74 = Logger.logObject.getter(v73);
  v75 = static os_log_type_t.info.getter();
  v76 = os_log_type_enabled(v74, v75);
  v77 = *(_QWORD *)(v1 + 2248);
  v78 = *(_QWORD *)(v1 + 2216);
  v79 = *(_QWORD *)(v1 + 2208);
  v80 = *(_QWORD *)(v1 + 2152);
  if (v76)
  {
    v100 = *(_QWORD *)(v1 + 2248);
    v99 = *(_QWORD *)(v1 + 2216);
    v81 = (uint8_t *)swift_slowAlloc(12, -1);
    v82 = swift_slowAlloc(32, -1);
    v103 = v82;
    *(_DWORD *)v81 = 136315138;
    v83 = type metadata accessor for VisibleNotesQuery.Comparator(0);
    swift_bridgeObjectRetain(v80);
    v85 = Array.description.getter(v84, v83);
    v87 = v86;
    swift_bridgeObjectRelease(v80);
    *(_QWORD *)(v1 + 2096) = sub_1003A4190(v85, v87, &v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 2096, v1 + 2104, v81 + 4);
    swift_bridgeObjectRelease(v87);
    swift_bridgeObjectRelease_n(v80, 2);
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "VisibleNotesQuery: performing with filters %s", v81, 0xCu);
    swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v82, -1, -1);
    swift_slowDealloc(v81, -1, -1);

    v88 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
    v88(v100, v79);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v1 + 2152), 2);

    v88 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
    v88(v77, v79);
  }
  *(_QWORD *)(v1 + 2560) = v88;
  v89 = *(void **)(v1 + 2376);
  v90 = *(void **)(v1 + 2368);
  v91 = swift_allocObject(&unk_10055D778, 32, 7);
  *(_QWORD *)(v1 + 2568) = v91;
  *(_QWORD *)(v91 + 16) = v90;
  *(_QWORD *)(v91 + 24) = v101;
  v92 = v90;
  v93 = v101;
  swift_retain(v91);
  v94 = sub_10001537C(&qword_1005D3A18);
  swift_asyncLet_begin(v1 + 656, 0, v94, &unk_1005D3A10, v91, v1 + 1992);
  v95 = swift_allocObject(&unk_10055D7A0, 32, 7);
  *(_QWORD *)(v1 + 2576) = v95;
  *(_QWORD *)(v95 + 16) = v89;
  *(_QWORD *)(v95 + 24) = v102;
  v96 = v89;
  v97 = v102;
  swift_retain(v95);
  swift_asyncLet_begin(v1 + 16, 0, v94, &unk_1005D3A28, v95, v1 + 1944);
  return swift_asyncLet_get_throwing(v1 + 656, v1 + 1992, sub_1001E0880, v1 + 2000);
}

void sub_1001E00FC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  unsigned __int8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v1 = *(_QWORD *)(v0 + 2488);
  swift_release(*(_QWORD *)(v0 + 2496));
  v2 = *(_QWORD *)(v0 + 2488);
  if (v1 >> 62)
  {
    if (v2 < 0)
      v37 = *(_QWORD *)(v0 + 2488);
    else
      v37 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (!v3)
      goto LABEL_27;
  }
  else
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (!v3)
      goto LABEL_27;
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_44;
  }
  v4 = 0;
  v5 = v0 + 1416;
  v6 = (_QWORD *)(v0 + 1480);
  v57 = (_QWORD *)(v0 + 1576);
  v7 = v1 & 0xC000000000000001;
  v58 = v0 + 1544;
  v59 = *(_QWORD *)(v0 + 2488) + 32;
  v60 = v1 & 0xC000000000000001;
  do
  {
    if (v7)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 2488));
    else
      v8 = *(id *)(v59 + 8 * v4);
    v9 = v8;
    v10 = OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote;
    if (*((_BYTE *)v8 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote) == 1)
    {
      *(_QWORD *)(v0 + 1440) = type metadata accessor for NoteSearchResult(0);
      *(_QWORD *)(v0 + 1416) = v9;
      sub_100012CE8(v5, (uint64_t)v6, &qword_1005CF190);
      v11 = *(_QWORD *)(v0 + 1504);
      if (v11)
      {
        v12 = sub_10012D19C(v6, *(_QWORD *)(v0 + 1504));
        v13 = v3;
        v14 = v5;
        v15 = *(_QWORD *)(v11 - 8);
        v16 = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v15 + 16))(v16, v12, v11);
        v17 = v9;
        v18 = _bridgeAnythingToObjectiveC<A>(_:)(v16, v11);
        v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v5 = v14;
        v3 = v13;
        v6 = (_QWORD *)(v0 + 1480);
        v19(v16, v11);
        v20 = v16;
        v7 = v60;
        swift_task_dealloc(v20);
        sub_1000153C0((_QWORD *)(v0 + 1480));
      }
      else
      {
        v21 = v9;
        v18 = 0;
      }
      v22 = objc_msgSend(*(id *)(v0 + 2400), "evaluateWithObject:", v18);
      swift_unknownObjectRelease(v18, v23);
      v24 = sub_100012DDC(v5, &qword_1005CF190);
      if ((v22 & 1) != 0)
        goto LABEL_21;
    }
    if ((*(_BYTE *)(v0 + 2200) & 1) == 0 || *((_BYTE *)v9 + v10) == 1)
      goto LABEL_5;
    *(_QWORD *)(v0 + 1568) = type metadata accessor for NoteSearchResult(0);
    *(_QWORD *)(v0 + 1544) = v9;
    sub_100012CE8(v58, (uint64_t)v57, &qword_1005CF190);
    v25 = *(_QWORD *)(v0 + 1600);
    if (v25)
    {
      v26 = sub_10012D19C(v57, *(_QWORD *)(v0 + 1600));
      v27 = *(_QWORD *)(v25 - 8);
      v28 = swift_task_alloc((*(_QWORD *)(v27 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v27 + 16))(v28, v26, v25);
      v29 = v9;
      v30 = _bridgeAnythingToObjectiveC<A>(_:)(v28, v25);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v25);
      v31 = v28;
      v7 = v60;
      swift_task_dealloc(v31);
      sub_1000153C0(v57);
    }
    else
    {
      v32 = v9;
      v30 = 0;
    }
    v33 = objc_msgSend(*(id *)(v0 + 2408), "evaluateWithObject:", v30);
    swift_unknownObjectRelease(v30, v34);
    v24 = sub_100012DDC(v58, &qword_1005CF190);
    if ((v33 & 1) != 0)
    {
LABEL_21:
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v35 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v35);
      v36 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v9);
      specialized ContiguousArray._endMutation()(v36);
    }
    else
    {
LABEL_5:

    }
    ++v4;
  }
  while (v3 != v4);
LABEL_27:
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 2488));
  v38 = *(_QWORD *)(v0 + 2168);
  v39 = *(_BYTE *)(v0 + 2643) & 1;
  v40 = *(_QWORD *)(v0 + 1360);
  v41 = *(_QWORD *)(v0 + 1368);
  v42 = sub_10012D19C((_QWORD *)(v0 + 1336), v40);
  *(_QWORD *)(v0 + 2104) = _swiftEmptyArrayStorage;
  v43 = sub_100012E18(&qword_1005D3A18);
  v44 = sub_100016638(&qword_1005D3A40, &qword_1005D3A18, (uint64_t)&protocol conformance descriptor for [A]);
  v45 = (uint64_t)sub_1001DBB84((uint64_t)v42, v38, v39, v43, v40, v44, v41);
  swift_release(_swiftEmptyArrayStorage);
  if (!((unint64_t)v45 >> 62))
  {
    v46 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v46)
      goto LABEL_29;
LABEL_42:
    v56 = *(_QWORD *)(v0 + 2488);
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v56);
    *(_QWORD *)(v0 + 2504) = _swiftEmptyArrayStorage;
    swift_task_switch(sub_1001E064C, 0, 0);
    return;
  }
  if (v45 < 0)
    v55 = v45;
  else
    v55 = v45 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v45);
  v46 = _CocoaArrayWrapper.endIndex.getter(v55);
  swift_bridgeObjectRelease(v45);
  if (!v46)
    goto LABEL_42;
LABEL_29:
  sub_100137124(0, v46 & ~(v46 >> 63), 0);
  if ((v46 & 0x8000000000000000) == 0)
  {
    v47 = 0;
    v48 = *(_QWORD *)(v0 + 2312);
    do
    {
      if ((v45 & 0xC000000000000001) != 0)
        v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v45);
      else
        v49 = *(id *)(v45 + 8 * v47 + 32);
      v50 = v49;
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v48 + 16))(*(_QWORD *)(v0 + 2320), (uint64_t)v49 + OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id, *(_QWORD *)(v0 + 2304));

      v52 = _swiftEmptyArrayStorage[2];
      v51 = _swiftEmptyArrayStorage[3];
      if (v52 >= v51 >> 1)
        sub_100137124(v51 > 1, v52 + 1, 1);
      v53 = *(_QWORD *)(v0 + 2320);
      v54 = *(_QWORD *)(v0 + 2304);
      ++v47;
      _swiftEmptyArrayStorage[2] = v52 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v52, v53, v54);
    }
    while (v46 != v47);
    goto LABEL_42;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_1001E064C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v5;

  v1 = v0[275];
  AppDependency.wrappedValue.getter(v0 + 264);
  v2 = v0[264];
  v0[314] = v2;
  v5 = (char *)&dword_1005D0270 + dword_1005D0270;
  v3 = (_QWORD *)swift_task_alloc(unk_1005D0274);
  v0[315] = v3;
  *v3 = v0;
  v3[1] = sub_1001E06D0;
  return ((uint64_t (*)(_QWORD, uint64_t, unint64_t))v5)(v0[313], v2, (v1 >> 8) & 1);
}

uint64_t sub_1001E06D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t (*v6)();
  uint64_t v7;

  v3 = (_QWORD *)*v2;
  v3[209] = v2;
  v3[210] = a1;
  v3[211] = v1;
  v4 = v3[315];
  v3[316] = v1;
  swift_task_dealloc(v4);
  v5 = (void *)v3[314];
  if (v1)
  {

    v6 = sub_1001E1184;
  }
  else
  {
    v7 = v3[313];

    swift_bridgeObjectRelease(v7);
    v6 = sub_1001E0758;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001E0758()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 2408);
  v2 = *(void **)(v0 + 2400);
  v3 = *(void **)(v0 + 2392);
  v4 = *(void **)(v0 + 2384);
  v5 = *(void **)(v0 + 2376);

  v6 = *(_QWORD *)(v0 + 2360);
  v7 = *(_QWORD *)(v0 + 2336);
  v8 = *(_QWORD *)(v0 + 2328);
  v9 = *(_QWORD *)(v0 + 2320);
  v10 = *(_QWORD *)(v0 + 2296);
  v11 = *(_QWORD *)(v0 + 2272);
  v12 = *(_QWORD *)(v0 + 2248);
  v13 = *(_QWORD *)(v0 + 2240);
  v15 = *(_QWORD *)(v0 + 2232);
  v16 = *(_QWORD *)(v0 + 2224);
  v17 = *(_QWORD *)(v0 + 1680);
  sub_1000153C0((_QWORD *)(v0 + 1336));
  sub_100012C50(0, 0);
  sub_100012C50(0, 0);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
}

uint64_t sub_1001E0880()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;

  v1[323] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease(v1[317]);
    return swift_asyncLet_finish(v1 + 2, v1 + 243, sub_1001E1294, v1 + 162);
  }
  else
  {
    v3 = v1[249];
    v1[324] = v3;
    swift_bridgeObjectRetain(v3);
    return swift_asyncLet_get_throwing(v1 + 2, v1 + 243, sub_1001E0914, v1 + 220);
  }
}

uint64_t sub_1001E0914()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[325] = v0;
  if (!v0)
    return swift_task_switch(sub_1001E09A0, 0, 0);
  v2 = v1[317];
  swift_bridgeObjectRelease(v1[324]);
  swift_bridgeObjectRelease(v2);
  return swift_asyncLet_finish(v1 + 2, v1 + 243, sub_1001E15F8, v1 + 212);
}

uint64_t sub_1001E09A0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, char);
  uint64_t v41;

  v1 = *(_BYTE *)(v0 + 2647);
  v41 = *(_QWORD *)(v0 + 2592);
  v2 = *(_QWORD *)(v0 + 2536);
  v37 = *(_QWORD *)(v0 + 2192);
  v3 = *(_QWORD *)(v0 + 2184);
  v4 = *(_QWORD *)(v0 + 2176);
  v5 = *(_QWORD *)(v0 + 2168);
  v6 = *(_BYTE *)(v0 + 2642) & 1;
  v7 = *(_BYTE *)(v0 + 2643) & 1;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 1944));
  sub_1001D9B28(v8, (unint64_t *)type metadata accessor for NoteSearchResult, &qword_1005D3A40, &qword_1005D3A18, (uint64_t *)sub_1001E8D64);
  v9 = v41;
  v11 = sub_1001E485C(v1, v41, v6, v2, (_QWORD *)(v0 + 1336), v5, v7, v10);
  *(_QWORD *)(v0 + 2608) = v11;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v2);
  swift_retain(v4);
  swift_retain(v3);
  swift_retain(v37);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1608));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 1608), *(_QWORD *)(v0 + 1616), *(_QWORD *)(v0 + 1624), *(_QWORD *)(v0 + 1632));
  swift_release(v4);
  swift_release(v3);
  swift_release(v37);
  swift_bridgeObjectRetain(v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    *(_QWORD *)(v0 + 2088) = *(_QWORD *)(v11 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2088, v0 + 2096, v15 + 4);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "VisibleNotesQuery: found %ld matching note(s)", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(v11);
  }

  v16 = *(_QWORD *)(v0 + 2192);
  v17 = *(_QWORD *)(v0 + 2184);
  v18 = *(_QWORD *)(v0 + 2176);
  (*(void (**)(_QWORD, _QWORD))(v0 + 2560))(*(_QWORD *)(v0 + 2240), *(_QWORD *)(v0 + 2208));
  swift_retain(v18);
  swift_retain(v17);
  swift_retain(v16);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1640));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 1640), *(_QWORD *)(v0 + 1648), *(_QWORD *)(v0 + 1656), *(_QWORD *)(v0 + 1664));
  swift_release(v18);
  swift_release(v17);
  swift_release(v16);
  v19 = swift_bridgeObjectRetain_n(v11, 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  v22 = os_log_type_enabled(v20, v21);
  v23 = *(void (**)(uint64_t, uint64_t))(v0 + 2560);
  if (v22)
  {
    v24 = *(_QWORD *)(v0 + 2304);
    v38 = *(_QWORD *)(v0 + 2208);
    v39 = *(_QWORD *)(v0 + 2232);
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v41 = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain(v11);
    v28 = Array.description.getter(v27, v24);
    v30 = v29;
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)(v0 + 2040) = sub_1003A4190(v28, v30, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2040, v0 + 2048, v25 + 4);
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease_n(v11, 2);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "VisibleNotesQuery: matching note IDs: %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    v23(v39, v38);
  }
  else
  {
    v31 = *(_QWORD *)(v0 + 2232);
    v32 = *(_QWORD *)(v0 + 2208);
    swift_bridgeObjectRelease_n(v11, 2);

    v23(v31, v32);
  }
  v33 = *(_QWORD *)(v0 + 2200);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1800));
  v34 = *(_QWORD *)(v0 + 1800);
  *(_QWORD *)(v0 + 2616) = v34;
  v40 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1005D0270 + dword_1005D0270);
  v35 = (_QWORD *)swift_task_alloc(unk_1005D0274);
  *(_QWORD *)(v0 + 2624) = v35;
  *v35 = v0;
  v35[1] = sub_1001E0DEC;
  return v40(v11, v34, BYTE1(v33) & 1);
}

uint64_t sub_1001E0DEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = *v2;
  *(_QWORD *)(v3 + 1736) = v2;
  *(_QWORD *)(v3 + 1744) = a1;
  *(_QWORD *)(v3 + 1752) = v1;
  v4 = *(_QWORD *)(v3 + 2624);
  *(_QWORD *)(v3 + 2632) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {

    return swift_task_switch(sub_1001E195C, 0, 0);
  }
  else
  {
    v6 = v3 + 16;
    v7 = v3 + 1944;
    v8 = v3 + 1904;
    v9 = *(void **)(v3 + 2616);
    v10 = *(_QWORD *)(v3 + 2608);

    swift_bridgeObjectRelease(v10);
    return swift_asyncLet_finish(v6, v7, sub_1001E0EA8, v8);
  }
}

uint64_t sub_1001E0EA8()
{
  return swift_task_switch(sub_1001E0EBC, 0, 0);
}

uint64_t sub_1001E0EBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2576));
  return swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_1001E0F10, v0 + 1808);
}

uint64_t sub_1001E0F10()
{
  return swift_task_switch(sub_1001E0F24, 0, 0);
}

uint64_t sub_1001E0F24()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 2568);
  v2 = *(void **)(v0 + 2552);
  v3 = *(void **)(v0 + 2544);
  v4 = *(void **)(v0 + 2408);
  v5 = *(void **)(v0 + 2400);
  v6 = *(void **)(v0 + 2392);
  v7 = *(void **)(v0 + 2384);
  v8 = *(void **)(v0 + 2376);

  swift_release(v1);
  v22 = *(_QWORD *)(v0 + 1744);
  v9 = *(_QWORD *)(v0 + 2576);
  v10 = *(_QWORD *)(v0 + 2568);
  v11 = *(_QWORD *)(v0 + 2360);
  v12 = *(_QWORD *)(v0 + 2336);
  v13 = *(_QWORD *)(v0 + 2328);
  v14 = *(_QWORD *)(v0 + 2320);
  v15 = *(_QWORD *)(v0 + 2296);
  v16 = *(_QWORD *)(v0 + 2272);
  v17 = *(_QWORD *)(v0 + 2248);
  v19 = *(_QWORD *)(v0 + 2240);
  v20 = *(_QWORD *)(v0 + 2232);
  v21 = *(_QWORD *)(v0 + 2224);
  sub_1000153C0((_QWORD *)(v0 + 1336));
  sub_100012C50((uint64_t)&unk_1005D3A10, v10);
  sub_100012C50((uint64_t)&unk_1005D3A28, v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v22);
}

uint64_t sub_1001E1080()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 2408);
  v2 = *(void **)(v0 + 2400);
  v3 = *(void **)(v0 + 2392);
  v4 = *(void **)(v0 + 2384);
  v5 = *(void **)(v0 + 2376);

  sub_1000153C0((_QWORD *)(v0 + 1336));
  v6 = *(_QWORD *)(v0 + 2336);
  v7 = *(_QWORD *)(v0 + 2328);
  v8 = *(_QWORD *)(v0 + 2320);
  v9 = *(_QWORD *)(v0 + 2296);
  v10 = *(_QWORD *)(v0 + 2272);
  v11 = *(_QWORD *)(v0 + 2248);
  v12 = *(_QWORD *)(v0 + 2240);
  v13 = *(_QWORD *)(v0 + 2232);
  v14 = *(_QWORD *)(v0 + 2224);
  swift_task_dealloc(*(_QWORD *)(v0 + 2360));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E1184()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 2504);
  v2 = *(void **)(v0 + 2408);
  v3 = *(void **)(v0 + 2400);
  v4 = *(void **)(v0 + 2392);
  v5 = *(void **)(v0 + 2384);
  v6 = *(void **)(v0 + 2376);

  swift_bridgeObjectRelease(v1);
  sub_1000153C0((_QWORD *)(v0 + 1336));
  v7 = *(_QWORD *)(v0 + 2336);
  v8 = *(_QWORD *)(v0 + 2328);
  v9 = *(_QWORD *)(v0 + 2320);
  v10 = *(_QWORD *)(v0 + 2296);
  v11 = *(_QWORD *)(v0 + 2272);
  v12 = *(_QWORD *)(v0 + 2248);
  v13 = *(_QWORD *)(v0 + 2240);
  v14 = *(_QWORD *)(v0 + 2232);
  v15 = *(_QWORD *)(v0 + 2224);
  swift_task_dealloc(*(_QWORD *)(v0 + 2360));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E1294()
{
  return swift_task_switch(sub_1001E12A8, 0, 0);
}

uint64_t sub_1001E12A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2576));
  return swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_1001E12FC, v0 + 2048);
}

uint64_t sub_1001E12FC()
{
  return swift_task_switch(sub_1001E1310, 0, 0);
}

uint64_t sub_1001E1310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 2584);
  v2 = *(_QWORD *)(v0 + 2192);
  v3 = *(_QWORD *)(v0 + 2184);
  v4 = *(_QWORD *)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2568));
  swift_retain(v4);
  swift_retain(v3);
  swift_retain(v2);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1448));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 1448), *(_QWORD *)(v0 + 1456), *(_QWORD *)(v0 + 1464), *(_QWORD *)(v0 + 1472));
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.error.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    v11 = _convertErrorToNSError(_:)(v1);
    *(_QWORD *)(v0 + 1896) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1896, v0 + 1904, v9 + 4);
    *v10 = v11;
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "VisibleNotesQuery: error fetching notes: %@", v9, 0xCu);
    v12 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
  }
  v13 = v6;
  v37 = *(_QWORD *)(v0 + 2576);
  v36 = *(_QWORD *)(v0 + 2568);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 2560);
  v34 = *(void **)(v0 + 2544);
  v35 = *(void **)(v0 + 2552);
  v15 = *(void **)(v0 + 2408);
  v16 = *(void **)(v0 + 2400);
  v17 = *(void **)(v0 + 2392);
  v18 = *(void **)(v0 + 2384);
  v19 = *(void **)(v0 + 2376);
  v20 = *(void **)(v0 + 2368);
  v21 = *(_QWORD *)(v0 + 2224);
  v22 = *(_QWORD *)(v0 + 2208);

  v23 = v14(v21, v22);
  swift_willThrow(v23);

  sub_1000153C0((_QWORD *)(v0 + 1336));
  swift_release(v36);
  swift_release(v37);
  v24 = *(_QWORD *)(v0 + 2336);
  v25 = *(_QWORD *)(v0 + 2328);
  v26 = *(_QWORD *)(v0 + 2320);
  v27 = *(_QWORD *)(v0 + 2296);
  v28 = *(_QWORD *)(v0 + 2272);
  v29 = *(_QWORD *)(v0 + 2248);
  v30 = *(_QWORD *)(v0 + 2240);
  v31 = *(_QWORD *)(v0 + 2232);
  v32 = *(_QWORD *)(v0 + 2224);
  swift_task_dealloc(*(_QWORD *)(v0 + 2360));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E15F8()
{
  return swift_task_switch(sub_1001E160C, 0, 0);
}

uint64_t sub_1001E160C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2576));
  return swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_1001E1660, v0 + 1952);
}

uint64_t sub_1001E1660()
{
  return swift_task_switch(sub_1001E1674, 0, 0);
}

uint64_t sub_1001E1674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 2600);
  v2 = *(_QWORD *)(v0 + 2192);
  v3 = *(_QWORD *)(v0 + 2184);
  v4 = *(_QWORD *)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2568));
  swift_retain(v4);
  swift_retain(v3);
  swift_retain(v2);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1448));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 1448), *(_QWORD *)(v0 + 1456), *(_QWORD *)(v0 + 1464), *(_QWORD *)(v0 + 1472));
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.error.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    v11 = _convertErrorToNSError(_:)(v1);
    *(_QWORD *)(v0 + 1896) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1896, v0 + 1904, v9 + 4);
    *v10 = v11;
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "VisibleNotesQuery: error fetching notes: %@", v9, 0xCu);
    v12 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
  }
  v13 = v6;
  v37 = *(_QWORD *)(v0 + 2576);
  v36 = *(_QWORD *)(v0 + 2568);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 2560);
  v34 = *(void **)(v0 + 2544);
  v35 = *(void **)(v0 + 2552);
  v15 = *(void **)(v0 + 2408);
  v16 = *(void **)(v0 + 2400);
  v17 = *(void **)(v0 + 2392);
  v18 = *(void **)(v0 + 2384);
  v19 = *(void **)(v0 + 2376);
  v20 = *(void **)(v0 + 2368);
  v21 = *(_QWORD *)(v0 + 2224);
  v22 = *(_QWORD *)(v0 + 2208);

  v23 = v14(v21, v22);
  swift_willThrow(v23);

  sub_1000153C0((_QWORD *)(v0 + 1336));
  swift_release(v36);
  swift_release(v37);
  v24 = *(_QWORD *)(v0 + 2336);
  v25 = *(_QWORD *)(v0 + 2328);
  v26 = *(_QWORD *)(v0 + 2320);
  v27 = *(_QWORD *)(v0 + 2296);
  v28 = *(_QWORD *)(v0 + 2272);
  v29 = *(_QWORD *)(v0 + 2248);
  v30 = *(_QWORD *)(v0 + 2240);
  v31 = *(_QWORD *)(v0 + 2232);
  v32 = *(_QWORD *)(v0 + 2224);
  swift_task_dealloc(*(_QWORD *)(v0 + 2360));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E195C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 2608));
  return swift_asyncLet_finish(v0 + 16, v0 + 1944, sub_1001E19B0, v0 + 1376);
}

uint64_t sub_1001E19B0()
{
  return swift_task_switch(sub_1001E19C4, 0, 0);
}

uint64_t sub_1001E19C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 2576));
  return swift_asyncLet_finish(v0 + 656, v0 + 1992, sub_1001E1A18, v0 + 1856);
}

uint64_t sub_1001E1A18()
{
  return swift_task_switch(sub_1001E1A2C, 0, 0);
}

uint64_t sub_1001E1A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 2632);
  v2 = *(_QWORD *)(v0 + 2192);
  v3 = *(_QWORD *)(v0 + 2184);
  v4 = *(_QWORD *)(v0 + 2176);
  swift_release(*(_QWORD *)(v0 + 2568));
  swift_retain(v4);
  swift_retain(v3);
  swift_retain(v2);
  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 1448));
  Logger.init(subsystem:category:)(*(_QWORD *)(v0 + 1448), *(_QWORD *)(v0 + 1456), *(_QWORD *)(v0 + 1464), *(_QWORD *)(v0 + 1472));
  swift_release(v4);
  swift_release(v3);
  swift_release(v2);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v8 = static os_log_type_t.error.getter(v6, v7);
  if (os_log_type_enabled(v6, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    v11 = _convertErrorToNSError(_:)(v1);
    *(_QWORD *)(v0 + 1896) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1896, v0 + 1904, v9 + 4);
    *v10 = v11;
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v8, "VisibleNotesQuery: error fetching notes: %@", v9, 0xCu);
    v12 = sub_100012E18(&qword_1005D3A30);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
  }
  v13 = v6;
  v37 = *(_QWORD *)(v0 + 2576);
  v36 = *(_QWORD *)(v0 + 2568);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 2560);
  v34 = *(void **)(v0 + 2544);
  v35 = *(void **)(v0 + 2552);
  v15 = *(void **)(v0 + 2408);
  v16 = *(void **)(v0 + 2400);
  v17 = *(void **)(v0 + 2392);
  v18 = *(void **)(v0 + 2384);
  v19 = *(void **)(v0 + 2376);
  v20 = *(void **)(v0 + 2368);
  v21 = *(_QWORD *)(v0 + 2224);
  v22 = *(_QWORD *)(v0 + 2208);

  v23 = v14(v21, v22);
  swift_willThrow(v23);

  sub_1000153C0((_QWORD *)(v0 + 1336));
  swift_release(v36);
  swift_release(v37);
  v24 = *(_QWORD *)(v0 + 2336);
  v25 = *(_QWORD *)(v0 + 2328);
  v26 = *(_QWORD *)(v0 + 2320);
  v27 = *(_QWORD *)(v0 + 2296);
  v28 = *(_QWORD *)(v0 + 2272);
  v29 = *(_QWORD *)(v0 + 2248);
  v30 = *(_QWORD *)(v0 + 2240);
  v31 = *(_QWORD *)(v0 + 2232);
  v32 = *(_QWORD *)(v0 + 2224);
  swift_task_dealloc(*(_QWORD *)(v0 + 2360));
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E1D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = *(_OWORD *)v3;
  *(_QWORD *)(v4 + 56) = *(_QWORD *)(v3 + 16);
  *(_BYTE *)(v4 + 88) = *(_BYTE *)(v3 + 24);
  *(_BYTE *)(v4 + 89) = *(_BYTE *)(v3 + 25);
  *(_BYTE *)(v4 + 90) = *(_BYTE *)(v3 + 26);
  *(_BYTE *)(v4 + 91) = *(_BYTE *)(v3 + 27);
  *(_BYTE *)(v4 + 92) = *(_BYTE *)(v3 + 28);
  return swift_task_switch(sub_1001E1D68, 0, 0);
}

uint64_t sub_1001E1D68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v2 = v0[3];
  v1 = v0[4];
  v3 = sub_100012E18(&qword_1005D3970);
  v4 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v3, v8 + v6, v7 | 7);
  v0[8] = v9;
  *(_OWORD *)(v9 + 16) = xmmword_100451C20;
  v10 = (uint64_t *)(v9 + v8);
  KeyPath = swift_getKeyPath(&unk_100459F48, v11);
  v14 = swift_getKeyPath(&unk_100459F70, v13);
  *v10 = KeyPath;
  v10[1] = v14;
  v10[2] = v2;
  v10[3] = v1;
  swift_storeEnumTagMultiPayload(v10, v4, 4);
  v15 = dword_1005D397C;
  swift_bridgeObjectRetain(v1);
  v16 = (_QWORD *)swift_task_alloc(v15);
  v0[9] = v16;
  *v16 = v0;
  v16[1] = sub_1001E1EF0;
  return VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(v9, 0, (uint64_t)_swiftEmptyArrayStorage, 0, 1, v0[5], v0[6], v0[7]);
}

uint64_t sub_1001E1EF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v4 = *(_QWORD *)(*v2 + 72);
  v5 = *v2;
  *(_QWORD *)(v5 + 80) = v1;
  swift_task_dealloc(v4);
  if (v1)
    return swift_task_switch(sub_1001DD708, 0, 0);
  v7 = *(_QWORD **)(v5 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 64));
  *v7 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1001E1F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100012E18(&qword_1005D3A68);
  sub_10012B334(v0, static VisibleNotesQuery.sortingOptions);
  sub_10012A0B0(v0, (uint64_t)static VisibleNotesQuery.sortingOptions);
  v1 = type metadata accessor for NoteEntity(0);
  v2 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  return EntityQuerySortingOptions.init(content:)(sub_1001E200C, 0, v1, v2);
}

uint64_t sub_1001E200C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;

  v0 = sub_100012E18(&qword_1005D3F40);
  v45 = *(_QWORD *)(v0 - 8);
  v1 = v45;
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v42 - v6;
  v8 = __chkstk_darwin(v5);
  v46 = (char *)&v42 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v42 - v11;
  __chkstk_darwin(v10);
  v47 = (char *)&v42 - v13;
  KeyPath = swift_getKeyPath(&unk_10045A430, v14);
  v16 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v17 = sub_100016638(&qword_1005D3F48, (uint64_t *)&unk_1005CEEB0, (uint64_t)&protocol conformance descriptor for EntityProperty<A>);
  EntityQuerySortableByProperty.init<A>(_:)(KeyPath, v16, v17);
  v18 = type metadata accessor for NoteEntity(0);
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)(v12);
  v19 = *(void (**)(char *, uint64_t))(v1 + 8);
  v19(v12, v0);
  v21 = swift_getKeyPath(&unk_10045A368, v20);
  v22 = sub_100016638(&qword_1005D3F50, &qword_1005CF130, (uint64_t)&protocol conformance descriptor for EntityProperty<A>);
  v23 = v46;
  EntityQuerySortableByProperty.init<A>(_:)(v21, v16, v22);
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)(v23);
  v19(v23, v0);
  v25 = swift_getKeyPath(&unk_10045A3B8, v24);
  EntityQuerySortableByProperty.init<A>(_:)(v25, v16, v22);
  v44 = v18;
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)(v7);
  v43 = v7;
  v19(v7, v0);
  v27 = swift_getKeyPath(&unk_10045A390, v26);
  v28 = sub_100016638(&qword_1005D3F58, (uint64_t *)&unk_1005CF120, (uint64_t)&protocol conformance descriptor for EntityProperty<A>);
  EntityQuerySortableByProperty.init<A>(_:)(v27, v16, v28);
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)(v4);
  v19(v4, v0);
  v29 = sub_100012E18(&qword_1005D3F60);
  v30 = *(_QWORD *)(v45 + 72);
  v31 = *(unsigned __int8 *)(v45 + 80);
  v32 = v45;
  v33 = (v31 + 32) & ~v31;
  v34 = swift_allocObject(v29, v33 + 4 * v30, v31 | 7);
  *(_OWORD *)(v34 + 16) = xmmword_100457CB0;
  v35 = v34 + v33;
  v36 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 16);
  v36(v35, v47, v0);
  v37 = v12;
  v36(v35 + v30, v12, v0);
  v38 = v46;
  v36(v35 + 2 * v30, v46, v0);
  v39 = v43;
  v36(v35 + 3 * v30, v43, v0);
  v40 = static EntityQuerySortingOptionsBuilder.buildBlock(_:)(v34, v44, v16);
  swift_bridgeObjectRelease(v34);
  v19(v39, v0);
  v19(v38, v0);
  v19(v37, v0);
  v19(v47, v0);
  return v40;
}

uint64_t sub_1001E2390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001E23D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001E2410@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001E2450@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t VisibleNotesQuery.sortingOptions.unsafeMutableAddressor()
{
  return sub_1001E412C(&qword_1005CEA90, &qword_1005D3A68, (uint64_t)static VisibleNotesQuery.sortingOptions, (uint64_t)sub_1001E1F80);
}

uint64_t static VisibleNotesQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E4194(&qword_1005CEA90, &qword_1005D3A68, (uint64_t)static VisibleNotesQuery.sortingOptions, (uint64_t)sub_1001E1F80, a1);
}

uint64_t sub_1001E24D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_100012E18((uint64_t *)&unk_1005D3A70);
  sub_10012B334(v0, static VisibleNotesQuery.properties);
  sub_10012A0B0(v0, (uint64_t)static VisibleNotesQuery.properties);
  v1 = type metadata accessor for NoteEntity(0);
  v2 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v3 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  return EntityQueryProperties.init(properties:)(sub_1001E2580, 0, v1, v2, v3);
}

uint64_t sub_1001E2580()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  sub_100012E18(&qword_1005D3DC0);
  KeyPath = swift_getKeyPath(&unk_10045A368, v0);
  v2 = EntityQueryProperty.__allocating_init<>(_:comparators:)(KeyPath, sub_1001E2878, 0);
  v3 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  v4 = static EntityQueryPropertiesBuilder.buildExpression(_:)(v2, v3);
  swift_release(v2);
  sub_100012E18(&qword_1005D3DC8);
  v6 = swift_getKeyPath(&unk_10045A390, v5);
  swift_retain(v4);
  v7 = EntityQueryProperty.__allocating_init<>(_:comparators:)(v6, sub_1001E3044, 0);
  v8 = static EntityQueryPropertiesBuilder.buildExpression(_:)(v7, v3);
  swift_release(v7);
  v10 = swift_getKeyPath(&unk_10045A3B8, v9);
  swift_retain(v8);
  v11 = EntityQueryProperty.__allocating_init<>(_:comparators:)(v10, sub_1001E3244, 0);
  v12 = static EntityQueryPropertiesBuilder.buildExpression(_:)(v11, v3);
  swift_release(v11);
  sub_100012E18(&qword_1005D3DD0);
  v14 = swift_getKeyPath(&unk_10045A3E0, v13);
  swift_retain(v12);
  v15 = EntityQueryProperty.__allocating_init<>(_:comparators:)(v14, sub_1001E3994, 0);
  v16 = static EntityQueryPropertiesBuilder.buildExpression(_:)(v15, v3);
  swift_release(v15);
  sub_100012E18(&qword_1005D3DD8);
  v18 = swift_getKeyPath(&unk_10045A408, v17);
  swift_retain(v16);
  v19 = EntityQueryProperty.__allocating_init<>(_:comparators:)(v18, sub_1001E3C3C, 0);
  v20 = static EntityQueryPropertiesBuilder.buildExpression(_:)(v19, v3);
  swift_release(v19);
  sub_100012E18(&qword_1005D3DE0);
  v22 = swift_getKeyPath(&unk_10045A430, v21);
  swift_retain(v20);
  v23 = EntityQueryProperty.__allocating_init<>(_:comparators:)(v22, sub_1001E3EF0, 0);
  v24 = static EntityQueryPropertiesBuilder.buildExpression(_:)(v23, v3);
  swift_release(v23);
  v25 = sub_100012E18(&qword_1005CF6F0);
  v26 = swift_allocObject(v25, 80, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10045A590;
  *(_QWORD *)(v26 + 32) = v4;
  *(_QWORD *)(v26 + 40) = v8;
  *(_QWORD *)(v26 + 48) = v12;
  *(_QWORD *)(v26 + 56) = v16;
  *(_QWORD *)(v26 + 64) = v20;
  *(_QWORD *)(v26 + 72) = v24;
  v31 = v26;
  specialized Array._endMutation()(v26);
  v27 = type metadata accessor for NoteEntity(0);
  v28 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  swift_retain(v24);
  v29 = static EntityQueryPropertiesBuilder.buildBlock(_:)(v31, v27, v28, v3);
  swift_bridgeObjectRelease(v31);
  swift_release(v4);
  swift_release(v8);
  swift_release(v12);
  swift_release(v16);
  swift_release(v20);
  swift_release(v24);
  return v29;
}

uint64_t sub_1001E2878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;

  v0 = sub_100012E18(&qword_1005D3E98);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v55 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v52 = (char *)&v50 - v5;
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v50 - v7;
  v9 = __chkstk_darwin(v6);
  v53 = (char *)&v50 - v10;
  v11 = __chkstk_darwin(v9);
  v54 = (char *)&v50 - v12;
  v13 = __chkstk_darwin(v11);
  v56 = (char *)&v50 - v14;
  __chkstk_darwin(v13);
  v57 = (char *)&v50 - v15;
  v16 = sub_100012E18(&qword_1005D3EA0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = EqualToComparator.init(mappingTransform:)(sub_1001E2DEC, 0);
  v18 = type metadata accessor for NoteEntity(0);
  v19 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)(v17, v18, v18, v19, v19);
  swift_release(v17);
  v20 = sub_100012E18(&qword_1005D3EA8);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = IsBetweenComparator.init(mappingTransform:)(sub_1001E2E18, 0);
  v22 = sub_100016638(&qword_1005D3EB0, (uint64_t *)&unk_1005D7B20, (uint64_t)&protocol conformance descriptor for A?);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v21, v18, v18, v19, v19, v22);
  swift_release(v21);
  v23 = sub_100012E18(&qword_1005D3EB8);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v24 = NotEqualToComparator.init(mappingTransform:)(sub_1001E2E2C, 0);
  static EntityQueryComparatorsBuilder.buildExpression(_:)(v24, v18, v18, v19, v19);
  swift_release(v24);
  v25 = sub_100012E18(&qword_1005D3EC0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = GreaterThanComparator.init(mappingTransform:)(sub_1001E2F14, 0);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v26, v18, v18, v19, v19, v22);
  swift_release(v26);
  v27 = sub_100012E18(&qword_1005D3EC8);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = GreaterThanOrEqualToComparator.init(mappingTransform:)(sub_1001E2F2C, 0);
  v29 = v8;
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v28, v18, v18, v19, v19, v22);
  swift_release(v28);
  v30 = sub_100012E18(&qword_1005D3ED0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = LessThanComparator.init(mappingTransform:)(sub_1001E3014, 0);
  v32 = v52;
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v31, v18, v18, v19, v19, v22);
  swift_release(v31);
  v33 = sub_100012E18(&qword_1005D3ED8);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = LessThanOrEqualToComparator.init(mappingTransform:)(sub_1001E302C, 0);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v34, v18, v18, v19, v19, v22);
  swift_release(v34);
  v35 = sub_100012E18((uint64_t *)&unk_1005D3EE0);
  v36 = *(_QWORD *)(v1 + 72);
  v37 = *(unsigned __int8 *)(v1 + 80);
  v51 = v1;
  v38 = (v37 + 32) & ~v37;
  v39 = swift_allocObject(v35, v38 - v36 + 8 * v36, v37 | 7);
  *(_OWORD *)(v39 + 16) = xmmword_100457CC0;
  v40 = v39 + v38;
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
  v41(v40, v57, v0);
  v41(v40 + v36, v56, v0);
  v41(v40 + 2 * v36, v54, v0);
  v41(v40 + 3 * v36, v53, v0);
  v41(v40 + 4 * v36, v29, v0);
  v41(v40 + 5 * v36, v32, v0);
  v42 = v55;
  v41(v40 + 6 * v36, v55, v0);
  v43 = sub_100012E18(&qword_1005CF130);
  v44 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v45 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v46 = sub_1001EB6E8();
  v47 = static EntityQueryComparatorsBuilder.buildBlock(_:)(v39, v18, v18, v43, v44, v45, v19, v19, v46);
  swift_bridgeObjectRelease(v39);
  v48 = *(void (**)(char *, uint64_t))(v51 + 8);
  v48(v42, v0);
  v48(v32, v0);
  v48(v29, v0);
  v48(v53, v0);
  v48(v54, v0);
  v48(v56, v0);
  v48(v57, v0);
  return v47;
}

uint64_t sub_1001E2DEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2E44(a1, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8, 5, a2);
}

uint64_t static VisibleNotesQuery.ComparatorKeyPath.creationDate.getter(uint64_t a1, uint64_t a2)
{
  return sub_1001E37E4(a1, a2, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8);
}

uint64_t sub_1001E2E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1001E3830(a1, a2, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8, a3);
}

uint64_t sub_1001E2E2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2E44(a1, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8, 6, a2);
}

uint64_t sub_1001E2E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  KeyPath = swift_getKeyPath(a2, a2);
  v11 = swift_getKeyPath(a3, v10);
  a5[3] = sub_100012E18(&qword_1005D3F00);
  a5[4] = sub_100016638(&qword_1005D3F08, &qword_1005D3F00, (uint64_t)&protocol conformance descriptor for VisibleNotesQuery.ComparatorKeyPath<A>);
  *a5 = KeyPath;
  a5[1] = v11;
  a5[8] = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v12 = sub_10012D160(a5 + 5);
  sub_100012CE8(a1, (uint64_t)v12, (uint64_t *)&unk_1005D7B20);
  v13 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  return swift_storeEnumTagMultiPayload(a5, v13, a4);
}

uint64_t sub_1001E2F14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8, 9, a2);
}

uint64_t sub_1001E2F2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8, 10, a2);
}

uint64_t sub_1001E2F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  KeyPath = swift_getKeyPath(a2, a2);
  v11 = swift_getKeyPath(a3, v10);
  a5[3] = sub_100012E18(&qword_1005D3F00);
  a5[4] = sub_100016638(&qword_1005D3F08, &qword_1005D3F00, (uint64_t)&protocol conformance descriptor for VisibleNotesQuery.ComparatorKeyPath<A>);
  *a5 = KeyPath;
  a5[1] = v11;
  v12 = type metadata accessor for Date(0);
  a5[8] = v12;
  v13 = sub_10012D160(a5 + 5);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v13, a1, v12);
  v14 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  return swift_storeEnumTagMultiPayload(a5, v14, a4);
}

uint64_t sub_1001E3014@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8, 7, a2);
}

uint64_t sub_1001E302C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_100459FB0, (uint64_t)&unk_100459FD8, 8, a2);
}

uint64_t sub_1001E3044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = sub_100012E18(&qword_1005D3F10);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D3F18);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = EqualToComparator.init(mappingTransform:)(sub_1001E3204, 0);
  v6 = type metadata accessor for NoteEntity(0);
  v7 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)(v5, v6, v6, v7, v7);
  swift_release(v5);
  v8 = sub_100012E18((uint64_t *)&unk_1005D3F20);
  v9 = *(unsigned __int8 *)(v1 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v8, v10 + *(_QWORD *)(v1 + 72), v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v11 + v10, v3, v0);
  v12 = sub_100012E18((uint64_t *)&unk_1005CF120);
  v13 = sub_100012E18(&qword_1005D1EB0);
  v14 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v15 = sub_1001B3974();
  v16 = static EntityQueryComparatorsBuilder.buildBlock(_:)(v11, v6, v6, v12, v13, v14, v7, v7, v15);
  swift_bridgeObjectRelease(v11);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v16;
}

uint64_t sub_1001E3204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  sub_100012CE8(a1, a2, &qword_1005D1EB0);
  v3 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  return swift_storeEnumTagMultiPayload(a2, v3, 0);
}

uint64_t sub_1001E3244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;

  v0 = sub_100012E18(&qword_1005D3E98);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v55 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v52 = (char *)&v50 - v5;
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v50 - v7;
  v9 = __chkstk_darwin(v6);
  v53 = (char *)&v50 - v10;
  v11 = __chkstk_darwin(v9);
  v54 = (char *)&v50 - v12;
  v13 = __chkstk_darwin(v11);
  v56 = (char *)&v50 - v14;
  __chkstk_darwin(v13);
  v57 = (char *)&v50 - v15;
  v16 = sub_100012E18(&qword_1005D3EA0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v17 = EqualToComparator.init(mappingTransform:)(sub_1001E37B8, 0);
  v18 = type metadata accessor for NoteEntity(0);
  v19 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)(v17, v18, v18, v19, v19);
  swift_release(v17);
  v20 = sub_100012E18(&qword_1005D3EA8);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = IsBetweenComparator.init(mappingTransform:)(sub_1001E381C, 0);
  v22 = sub_100016638(&qword_1005D3EB0, (uint64_t *)&unk_1005D7B20, (uint64_t)&protocol conformance descriptor for A?);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v21, v18, v18, v19, v19, v22);
  swift_release(v21);
  v23 = sub_100012E18(&qword_1005D3EB8);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v24 = NotEqualToComparator.init(mappingTransform:)(sub_1001E391C, 0);
  static EntityQueryComparatorsBuilder.buildExpression(_:)(v24, v18, v18, v19, v19);
  swift_release(v24);
  v25 = sub_100012E18(&qword_1005D3EC0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = GreaterThanComparator.init(mappingTransform:)(sub_1001E3934, 0);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v26, v18, v18, v19, v19, v22);
  swift_release(v26);
  v27 = sub_100012E18(&qword_1005D3EC8);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = GreaterThanOrEqualToComparator.init(mappingTransform:)(sub_1001E394C, 0);
  v29 = v8;
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v28, v18, v18, v19, v19, v22);
  swift_release(v28);
  v30 = sub_100012E18(&qword_1005D3ED0);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  v31 = LessThanComparator.init(mappingTransform:)(sub_1001E3964, 0);
  v32 = v52;
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v31, v18, v18, v19, v19, v22);
  swift_release(v31);
  v33 = sub_100012E18(&qword_1005D3ED8);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  v34 = LessThanOrEqualToComparator.init(mappingTransform:)(sub_1001E397C, 0);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v34, v18, v18, v19, v19, v22);
  swift_release(v34);
  v35 = sub_100012E18((uint64_t *)&unk_1005D3EE0);
  v36 = *(_QWORD *)(v1 + 72);
  v37 = *(unsigned __int8 *)(v1 + 80);
  v51 = v1;
  v38 = (v37 + 32) & ~v37;
  v39 = swift_allocObject(v35, v38 - v36 + 8 * v36, v37 | 7);
  *(_OWORD *)(v39 + 16) = xmmword_100457CC0;
  v40 = v39 + v38;
  v41 = *(void (**)(uint64_t, char *, uint64_t))(v1 + 16);
  v41(v40, v57, v0);
  v41(v40 + v36, v56, v0);
  v41(v40 + 2 * v36, v54, v0);
  v41(v40 + 3 * v36, v53, v0);
  v41(v40 + 4 * v36, v29, v0);
  v41(v40 + 5 * v36, v32, v0);
  v42 = v55;
  v41(v40 + 6 * v36, v55, v0);
  v43 = sub_100012E18(&qword_1005CF130);
  v44 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v45 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v46 = sub_1001EB6E8();
  v47 = static EntityQueryComparatorsBuilder.buildBlock(_:)(v39, v18, v18, v43, v44, v45, v19, v19, v46);
  swift_bridgeObjectRelease(v39);
  v48 = *(void (**)(char *, uint64_t))(v51 + 8);
  v48(v42, v0);
  v48(v32, v0);
  v48(v29, v0);
  v48(v53, v0);
  v48(v54, v0);
  v48(v56, v0);
  v48(v57, v0);
  return v47;
}

uint64_t sub_1001E37B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2E44(a1, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040, 5, a2);
}

uint64_t static VisibleNotesQuery.ComparatorKeyPath.modificationDate.getter(uint64_t a1, uint64_t a2)
{
  return sub_1001E37E4(a1, a2, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040);
}

uint64_t sub_1001E37E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v6;

  KeyPath = swift_getKeyPath(a3, a2);
  swift_getKeyPath(a4, v6);
  return KeyPath;
}

uint64_t sub_1001E381C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1001E3830(a1, a2, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040, a3);
}

uint64_t sub_1001E3830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v16;

  KeyPath = swift_getKeyPath(a3, a2);
  v11 = swift_getKeyPath(a4, v10);
  a5[3] = sub_100012E18(&qword_1005D3F00);
  a5[4] = sub_100016638(&qword_1005D3F08, &qword_1005D3F00, (uint64_t)&protocol conformance descriptor for VisibleNotesQuery.ComparatorKeyPath<A>);
  *a5 = KeyPath;
  a5[1] = v11;
  v12 = type metadata accessor for Date(0);
  a5[8] = v12;
  v13 = sub_10012D160(a5 + 5);
  v14 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v13, a1, v12);
  a5[12] = v12;
  v15 = sub_10012D160(a5 + 9);
  v14(v15, a2, v12);
  v16 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  return swift_storeEnumTagMultiPayload(a5, v16, 11);
}

uint64_t sub_1001E391C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2E44(a1, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040, 6, a2);
}

uint64_t sub_1001E3934@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040, 9, a2);
}

uint64_t sub_1001E394C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040, 10, a2);
}

uint64_t sub_1001E3964@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040, 7, a2);
}

uint64_t sub_1001E397C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E2F44(a1, (uint64_t)&unk_10045A018, (uint64_t)&unk_10045A040, 8, a2);
}

uint64_t sub_1001E3994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v0 = sub_100012E18(&qword_1005D3E50);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D3E58);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = sub_100016638((unint64_t *)&unk_1005D3E60, &qword_1005CEEA0, (uint64_t)&protocol conformance descriptor for A?);
  v6 = ContainsComparator.init<>(mappingTransform:)(sub_1001E3B7C, 0, v5);
  v7 = type metadata accessor for NoteEntity(0);
  v8 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression<>(_:)(v6, v7, v7, v8, v8, v5);
  swift_release(v6);
  v9 = sub_100012E18((uint64_t *)&unk_1005D3E70);
  v10 = *(unsigned __int8 *)(v1 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v9, v11 + *(_QWORD *)(v1 + 72), v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100451C20;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v12 + v11, v3, v0);
  v13 = sub_100012E18((uint64_t *)&unk_1005D7860);
  v14 = sub_100012E18(&qword_1005CEEA0);
  v15 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v16 = sub_1001EB66C();
  v17 = static EntityQueryComparatorsBuilder.buildBlock(_:)(v12, v7, v7, v13, v14, v15, v8, v8, v16);
  swift_bridgeObjectRelease(v12);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v17;
}

uint64_t sub_1001E3B7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for AttributedString.CharacterView(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  AttributedString.characters.getter(v3);
  v6 = sub_100019C6C(&qword_1005D3E90, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView, (uint64_t)&protocol conformance descriptor for AttributedString.CharacterView);
  *a1 = String.init<A>(_:)(v5, v2, v6);
  a1[1] = v7;
  v8 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  return swift_storeEnumTagMultiPayload(a1, v8, 3);
}

uint64_t sub_1001E3C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v0 = sub_100012E18(&qword_1005D3E00);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D3E08);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = sub_1001EB5CC();
  v6 = sub_100016638(&qword_1005D3E28, &qword_1005D00D0, (uint64_t)&protocol conformance descriptor for [A]);
  v7 = sub_100019C6C(&qword_1005D3E30, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
  v8 = ContainsComparator.init<>(mappingTransform:)(sub_1001E3E4C, 0, v5, v6, v7);
  v9 = type metadata accessor for NoteEntity(0);
  v10 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression<A>(_:)(v8, v9, v9, v10, v10);
  swift_release(v8);
  v11 = sub_100012E18(&qword_1005D3E38);
  v12 = *(unsigned __int8 *)(v1 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = swift_allocObject(v11, v13 + *(_QWORD *)(v1 + 72), v12 | 7);
  *(_OWORD *)(v14 + 16) = xmmword_100451C20;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v14 + v13, v3, v0);
  v15 = sub_100012E18((uint64_t *)&unk_1005D3E40);
  v16 = sub_100012E18(&qword_1005D00D0);
  v17 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v18 = sub_1001B2FF8();
  v19 = static EntityQueryComparatorsBuilder.buildBlock(_:)(v14, v9, v9, v15, v16, v17, v10, v10, v18);
  swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v19;
}

double sub_1001E3E4C@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v4 = swift_allocObject(&unk_10055D8B8, 32, 7);
  v5 = (_QWORD *)(a1 + *(int *)(type metadata accessor for TagEntity(0) + 24));
  v6 = v5[1];
  *(_QWORD *)(v4 + 16) = *v5;
  *(_QWORD *)(v4 + 24) = v6;
  *a2 = v4;
  v7 = enum case for ICQueryType.tag(_:);
  v8 = type metadata accessor for ICQueryType(0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a2, v7, v8);
  v9 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  swift_storeEnumTagMultiPayload(a2, v9, 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v6).n128_u64[0];
  return result;
}

uint64_t sub_1001E3EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v0 = sub_100012E18(&qword_1005D3DE8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100012E18(&qword_1005D3DF0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = ContainsComparator.init<>(mappingTransform:)(sub_1001E409C, 0);
  v6 = type metadata accessor for NoteEntity(0);
  v7 = sub_100019C6C((unint64_t *)&qword_1005D0B70, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
  static EntityQueryComparatorsBuilder.buildExpression(_:)(v5, v6, v6, v7, v7);
  swift_release(v5);
  v8 = sub_100012E18(&qword_1005D3DF8);
  v9 = *(unsigned __int8 *)(v1 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(v8, v10 + *(_QWORD *)(v1 + 72), v9 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_100451C20;
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v11 + v10, v3, v0);
  v12 = sub_100012E18((uint64_t *)&unk_1005CEEB0);
  v13 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v14 = sub_1001B2FAC();
  v15 = static EntityQueryComparatorsBuilder.buildBlock(_:)(v11, v6, v6, v12, &type metadata for String, v13, v7, v7, v14);
  swift_bridgeObjectRelease(v11);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v15;
}

double sub_1001E409C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  KeyPath = swift_getKeyPath(&unk_100459F48, a2);
  v8 = swift_getKeyPath(&unk_100459F70, v7);
  *a3 = KeyPath;
  a3[1] = v8;
  a3[2] = a1;
  a3[3] = a2;
  v9 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  swift_storeEnumTagMultiPayload(a3, v9, 4);
  *(_QWORD *)&result = swift_bridgeObjectRetain(a2).n128_u64[0];
  return result;
}

uint64_t VisibleNotesQuery.properties.unsafeMutableAddressor()
{
  return sub_1001E412C(&qword_1005CEA98, (uint64_t *)&unk_1005D3A70, (uint64_t)static VisibleNotesQuery.properties, (uint64_t)sub_1001E24D8);
}

uint64_t sub_1001E412C(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  if (*a1 != -1)
    swift_once(a1, a4);
  v6 = sub_100012E18(a2);
  return sub_10012A0B0(v6, a3);
}

uint64_t static VisibleNotesQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E4194(&qword_1005CEA98, (uint64_t *)&unk_1005D3A70, (uint64_t)static VisibleNotesQuery.properties, (uint64_t)sub_1001E24D8, a1);
}

uint64_t sub_1001E4194@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = sub_100012E18(a2);
  v9 = sub_10012A0B0(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_1001E4200@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E4268(a1, &qword_1005D4058, (void (*)(uint64_t))sub_1002C5858, (unint64_t *)&qword_1005D39F0, ICNote_ptr, a2);
}

uint64_t sub_1001E4234@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1001E4268(a1, &qword_1005D4050, (void (*)(uint64_t))sub_1002C587C, &qword_1005D3A00, NoteObject_ptr, a2);
}

uint64_t sub_1001E4268@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X2>, void (*a3)(uint64_t)@<X3>, unint64_t *a4@<X4>, _QWORD *a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v11 = sub_100012E18(a2);
  __chkstk_darwin(v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  sub_1000163BC(0, &qword_1005D39A0, NSSortDescriptor_ptr);
  a3(v14);
  v15 = sub_1000163BC(0, a4, a5);
  result = NSSortDescriptor.init<A>(_:)(v13, v15);
  *a6 = result;
  return result;
}

uint64_t sub_1001E433C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1001E4358, 0, 0);
}

uint64_t sub_1001E4358()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = (void *)v0[3];
  v1 = (void *)v0[4];
  v3 = swift_allocObject(&unk_10055D908, 32, 7);
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v5 = v2;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v4);
  v0[6] = v7;
  v8 = sub_100012E18(&qword_1005D3A18);
  *v7 = v0;
  v7[1] = sub_1001E43FC;
  return NSManagedObjectContext.perform<A>(_:)(v0[2], sub_1001EBAF4, v3, v8);
}

uint64_t sub_1001E43FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001E4470, 0, 0);
  swift_release(*(_QWORD *)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1001E4470()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E44A4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD *v8;

  v5 = sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
  result = NSManagedObjectContext.fetch<A>(_:)(a1, v5);
  if (!v2)
  {
    v7 = result;
    v8 = sub_1001D7FD4(result);
    result = swift_bridgeObjectRelease(v7);
    *a2 = v8;
  }
  return result;
}

uint64_t sub_1001E4538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1001E4554, 0, 0);
}

uint64_t sub_1001E4554()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = (void *)v0[3];
  v1 = (void *)v0[4];
  v3 = swift_allocObject(&unk_10055D8E0, 32, 7);
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = async function pointer to NSManagedObjectContext.perform<A>(_:)[1];
  v5 = v2;
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v4);
  v0[6] = v7;
  v8 = sub_100012E18(&qword_1005D3A18);
  *v7 = v0;
  v7[1] = sub_1001E45F8;
  return NSManagedObjectContext.perform<A>(_:)(v0[2], sub_1001EB764, v3, v8);
}

uint64_t sub_1001E45F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 48);
  v3 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001EBF28, 0, 0);
  swift_release(*(_QWORD *)(v3 + 40));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_1001E466C(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v5 = sub_1000163BC(0, &qword_1005D3A00, NoteObject_ptr);
  v6 = NSManagedObjectContext.fetch<A>(_:)(a1, v5);
  if (!v2)
  {
    v7 = v6;
    if ((unint64_t)v6 >> 62)
    {
      if (v6 < 0)
        v18 = v6;
      else
        v18 = v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v8 = _CocoaArrayWrapper.endIndex.getter(v18);
      if (v8)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v6);
      if (v8)
      {
LABEL_4:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        v19 = 0;
        v20 = a2;
        for (i = 0; i != v8; ++i)
        {
          if ((v7 & 0xC000000000000001) != 0)
            v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
          else
            v10 = *(id *)(v7 + 8 * i + 32);
          v11 = v10;
          if (objc_msgSend(v10, "isHiddenFromSearch", v19, v20))
          {

          }
          else
          {
            v12 = objc_allocWithZone((Class)type metadata accessor for NoteSearchResult(0));
            v13 = sub_1001EB77C(v11, v12, &qword_1005D3A00, NoteObject_ptr);

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
            v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v15 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v16 >= v15 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
            v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v13);
            specialized Array._endMutation()(v17);
          }
        }
        swift_bridgeObjectRelease(v7);
        a2 = v20;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease(v7);
LABEL_21:
    swift_bridgeObjectRelease(v7);
    *a2 = _swiftEmptyArrayStorage;
  }
}

uint64_t sub_1001E485C(char a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5, uint64_t a6, char a7, __n128 a8)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;

  v13 = a3 & 1;
  if ((a1 & 1) != 0)
  {
    a8 = swift_bridgeObjectRetain(a2);
    v14 = (_QWORD *)a2;
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  if ((static EntityQueryComparatorMode.== infix(_:_:)(v13, 1, a8) & 1) != 0 && a4)
  {
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    sub_1001D9B28(a2, (unint64_t *)type metadata accessor for NoteSearchResult, &qword_1005D3A40, &qword_1005D3A18, (uint64_t *)sub_1001E8D64);
    v15 = sub_10020BBCC(a4);
    swift_bridgeObjectRelease(a4);
    v14 = sub_10016C054(v15);
    swift_bridgeObjectRelease(v15);
  }
  v16 = a5[3];
  v17 = a5[4];
  v18 = sub_10012D19C(a5, v16);
  v19 = sub_100012E18(&qword_1005D3A18);
  v20 = sub_100016638(&qword_1005D3A40, &qword_1005D3A18, (uint64_t)&protocol conformance descriptor for [A]);
  v21 = sub_1001DBB84((uint64_t)v18, a6, a7 & 1, v19, v16, v20, v17);
  swift_bridgeObjectRelease(v14);
  v22 = sub_1001D7E04((uint64_t)v21);
  swift_bridgeObjectRelease(v21);
  return v22;
}

uint64_t sub_1001E49E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E4A30(&qword_1005CEA98, (uint64_t *)&unk_1005D3A70, (uint64_t)static VisibleNotesQuery.properties, (uint64_t)sub_1001E24D8, a1);
}

uint64_t sub_1001E4A0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E4A30(&qword_1005CEA90, &qword_1005D3A68, (uint64_t)static VisibleNotesQuery.sortingOptions, (uint64_t)sub_1001E1F80, a1);
}

uint64_t sub_1001E4A30@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = sub_100012E18(a2);
  v9 = sub_10012A0B0(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_1001E4AA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  _QWORD *v12;
  uint64_t v14;

  *(_QWORD *)(v7 + 16) = a1;
  v8 = v6[1];
  v14 = *v6;
  v9 = v6[2];
  v10 = a3 & 1;
  v11 = a6 & 1;
  v12 = (_QWORD *)swift_task_alloc(dword_1005D397C);
  *(_QWORD *)(v7 + 24) = v12;
  *v12 = v7;
  v12[1] = sub_100136FB0;
  return VisibleNotesQuery.entities(matching:mode:sortedBy:limit:)(a2, v10, a4, a5, v11, v14, v8, v9);
}

void sub_1001E4BA0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001E4BAC(a1, (SEL *)&selRef_title, a2);
}

void sub_1001E4BAC(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1001E4C0C(uint64_t a1, void **a2)
{
  void *v2;
  NSString v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = String._bridgeToObjectiveC()();
  else
    v3 = 0;
  v4 = v3;
  objc_msgSend(v2, "setTitle:");

}

uint64_t sub_1001E4C68@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_creationDate, a2);
}

void sub_1001E4C74(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1001E4D18(a1, a2, a3, a4, (SEL *)&selRef_setCreationDate_);
}

uint64_t sub_1001E4C80@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_modificationDate, a2);
}

uint64_t sub_1001E4C8C@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v6 = type metadata accessor for Date(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 0;
  }
  else
  {
    v6 = type metadata accessor for Date(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

void sub_1001E4D0C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1001E4D18(a1, a2, a3, a4, (SEL *)&selRef_setModificationDate_);
}

void sub_1001E4D18(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;

  v8 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v10, (uint64_t *)&unk_1005D7B20);
  v11 = *a2;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, isa);

}

uint64_t sub_1001E4DFC()
{
  _QWORD *v0;

  return swift_retain(*v0);
}

uint64_t sub_1001E4E04()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

void sub_1001E4E0C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[22];

  v5 = type metadata accessor for ICQueryType(0);
  v20[4] = *(_QWORD *)(v5 - 8);
  v20[5] = v5;
  __chkstk_darwin(v5);
  v20[3] = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FolderEntity(0);
  __chkstk_darwin(v7);
  v20[2] = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100012E18(&qword_1005D1080);
  v10 = __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  v20[1] = (char *)v20 - v11;
  v12 = sub_100012E18((uint64_t *)&unk_1005D4070);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v15[*(int *)(v13 + 48)];
  v17 = *(int *)(v13 + 64);
  sub_100145220(v2, (uint64_t)v15, type metadata accessor for VisibleNotesQuery.Comparator);
  v20[6] = a1;
  v20[7] = v16;
  sub_100012CE8(a1, v16, &qword_1005D1080);
  v15[v17] = a2;
  v18 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v19 = (char *)&loc_1001E4F98 + *((int *)qword_1001E5CC0 + swift_getEnumCaseMultiPayload(v15, v18));
  __asm { BR              X10 }
}

uint64_t sub_1001E4FA8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v0, 1, v3) == 1)
  {
    v11 = 0;
    goto LABEL_5;
  }
  if ((v2 & 1) == 0)
  {
    v14 = type metadata accessor for ManagedEntityContextType(0);
    v15 = *(_QWORD *)(v14 - 8);
    v12 = *(_QWORD *)(v4 - 200);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    {
      v16 = *(_QWORD *)(v4 - 248);
      sub_100012CE8(v12, v16, &qword_1005D1080);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v15 + 88))(v16, v14) == enum case for ManagedEntityContextType.html(_:))
      {
        v17 = *(_QWORD *)(v4 - 240);
        sub_10013B170(v0, v17, type metadata accessor for FolderEntity);
        sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
        v18 = sub_100012E18((uint64_t *)&unk_1005D5630);
        v19 = swift_allocObject(v18, 72, 7);
        *(_OWORD *)(v19 + 16) = xmmword_100451C20;
        v20 = FolderID.managedIdentifier.getter();
        v22 = v21;
        *(_QWORD *)(v19 + 56) = &type metadata for String;
        *(_QWORD *)(v19 + 64) = sub_1001797EC();
        *(_QWORD *)(v19 + 32) = v20;
        *(_QWORD *)(v19 + 40) = v22;
        v23 = 0xD00000000000001ELL;
        v24 = "store.externalIdentifier == %@";
LABEL_12:
        v11 = NSPredicate.init(format:_:)(v23, (unint64_t)(v24 - 32) | 0x8000000000000000, v19);
        sub_100145264(v17, type metadata accessor for FolderEntity);
        goto LABEL_6;
      }
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
    }
    v17 = *(_QWORD *)(v4 - 240);
    sub_10013B170(v0, v17, type metadata accessor for FolderEntity);
    sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
    v25 = sub_100012E18((uint64_t *)&unk_1005D5630);
    v19 = swift_allocObject(v25, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100451C20;
    v26 = FolderID.managedIdentifier.getter();
    v28 = v27;
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_1001797EC();
    *(_QWORD *)(v19 + 32) = v26;
    *(_QWORD *)(v19 + 40) = v28;
    v23 = 0xD000000000000017;
    v24 = "folder.identifier == %@";
    goto LABEL_12;
  }
  v5 = *(_QWORD *)(v4 - 240);
  sub_10013B170(v0, v5, type metadata accessor for FolderEntity);
  sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
  v6 = sub_100012E18((uint64_t *)&unk_1005D5630);
  v7 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100451C20;
  v8 = FolderID.managedIdentifier.getter();
  v10 = v9;
  *(_QWORD *)(v7 + 56) = &type metadata for String;
  *(_QWORD *)(v7 + 64) = sub_1001797EC();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  v11 = NSPredicate.init(format:_:)(0xD00000000000001DLL, 0x80000001004825B0, v7);
  sub_100145264(v5, type metadata accessor for FolderEntity);
LABEL_5:
  v12 = *(_QWORD *)(v4 - 200);
LABEL_6:
  sub_100012DDC(v12, &qword_1005D1080);
  return v11;
}

uint64_t sub_1001E5CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_100012E18(&qword_1005D1080);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100012CE8(a1, (uint64_t)v8, &qword_1005D1080);
  v9 = type metadata accessor for ManagedEntityContextType(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    v11 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v8, v9);
    if (v11 != enum case for ManagedEntityContextType.modern(_:))
    {
      if (v11 == enum case for ManagedEntityContextType.html(_:))
      {
        v16 = swift_retain(a3);
        v8 = (char *)dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v16);
        v9 = v17;
        swift_release(a3);
        if (v9)
          return (uint64_t)v8;
        __break(1u);
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
      return 0;
    }
  }
  v12 = swift_retain(a2);
  v8 = (char *)dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v12);
  v14 = v13;
  result = swift_release(a2);
  if (v14)
    return (uint64_t)v8;
  __break(1u);
  return result;
}

id sub_1001E5E48(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  NSArray v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  uint64_t v68;
  char *v70;
  uint64_t v71;
  uint64_t *v72;
  int v73;
  uint64_t v74;
  int v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;

  v75 = a4;
  v73 = a2;
  v74 = a1;
  v81 = type metadata accessor for ICQueryType(0);
  v5 = *(_QWORD *)(v81 - 8);
  v6 = __chkstk_darwin(v81);
  v72 = (uint64_t *)((char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __chkstk_darwin(v6);
  v80 = (char *)&v70 - v9;
  __chkstk_darwin(v8);
  v79 = (char *)&v70 - v10;
  v78 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  v71 = *(_QWORD *)(v78 - 8);
  v11 = __chkstk_darwin(v78);
  v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v70 - v14;
  v16 = type metadata accessor for ManagedEntityContextType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v70 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100012E18((uint64_t *)&unk_1005D4060);
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100012E18(&qword_1005D1080);
  v23 = __chkstk_darwin(v22);
  v77 = (uint64_t)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v70 - v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))((char *)&v70 - v25, enum case for ManagedEntityContextType.html(_:), v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
  v27 = (uint64_t)&v21[*(int *)(v19 + 48)];
  v76 = (char *)a3;
  sub_100012CE8(a3, (uint64_t)v21, &qword_1005D1080);
  sub_100012CE8((uint64_t)v26, v27, &qword_1005D1080);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v28((uint64_t)v21, 1, v16) == 1)
  {
    sub_100012DDC((uint64_t)v26, &qword_1005D1080);
    if (v28(v27, 1, v16) == 1)
    {
      v29 = sub_100012DDC((uint64_t)v21, &qword_1005D1080);
LABEL_26:
      __chkstk_darwin(v29);
      v46 = (uint64_t)v76;
      *(&v70 - 2) = v76;
      *((_BYTE *)&v70 - 8) = v75 & 1;
      v60 = v74;
      v61 = sub_100349718((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1001EBD7C, (uint64_t)(&v70 - 4), v74);
      sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
      v62.super.isa = Array._bridgeToObjectiveC()().super.isa;
      v63 = (void *)objc_opt_self(NSCompoundPredicate);
      if ((v73 & 1) != 0)
        v64 = objc_msgSend(v63, "orPredicateWithSubpredicates:", v62.super.isa);
      else
        v64 = objc_msgSend(v63, "andPredicateWithSubpredicates:", v62.super.isa);
      v67 = v64;
      v68 = v60;
      goto LABEL_35;
    }
    goto LABEL_6;
  }
  v30 = v77;
  sub_100012CE8((uint64_t)v21, v77, &qword_1005D1080);
  if (v28(v27, 1, v16) == 1)
  {
    sub_100012DDC((uint64_t)v26, &qword_1005D1080);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v30, v16);
LABEL_6:
    sub_100012DDC((uint64_t)v21, (uint64_t *)&unk_1005D4060);
    goto LABEL_7;
  }
  v56 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v70, v27, v16);
  v57 = sub_100019C6C(&qword_1005D5610, (uint64_t (*)(uint64_t))&type metadata accessor for ManagedEntityContextType, (uint64_t)&protocol conformance descriptor for ManagedEntityContextType);
  v58 = dispatch thunk of static Equatable.== infix(_:_:)(v30, v56, v16, v57);
  v59 = *(void (**)(char *, uint64_t))(v17 + 8);
  v59(v56, v16);
  sub_100012DDC((uint64_t)v26, &qword_1005D1080);
  v59((char *)v30, v16);
  v29 = sub_100012DDC((uint64_t)v21, &qword_1005D1080);
  if ((v58 & 1) != 0)
    goto LABEL_26;
LABEL_7:
  v31 = (char *)_swiftEmptyArrayStorage;
  v82 = (unint64_t)_swiftEmptyArrayStorage;
  v32 = v74;
  v33 = *(_QWORD *)(v74 + 16);
  if (v33)
  {
    v34 = v74 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
    v77 = *(_QWORD *)(v71 + 72);
    swift_bridgeObjectRetain(v74);
    do
    {
      sub_100145220(v34, (uint64_t)v15, type metadata accessor for VisibleNotesQuery.Comparator);
      sub_100145220((uint64_t)v15, (uint64_t)v13, type metadata accessor for VisibleNotesQuery.Comparator);
      if (swift_getEnumCaseMultiPayload(v13, v78) == 1)
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v37 = v79;
        v38 = v81;
        v36(v79, v13, v81);
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v80, v37, v38);
        if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
          v31 = (char *)sub_10016ACCC(0, *((_QWORD *)v31 + 2) + 1, 1, (unint64_t)v31);
        v40 = *((_QWORD *)v31 + 2);
        v39 = *((_QWORD *)v31 + 3);
        if (v40 >= v39 >> 1)
          v31 = (char *)sub_10016ACCC(v39 > 1, v40 + 1, 1, (unint64_t)v31);
        *((_QWORD *)v31 + 2) = v40 + 1;
        v35 = v81;
        v36(&v31[((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v40], v80, v81);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v79, v35);
      }
      else
      {
        sub_100145264((uint64_t)v13, type metadata accessor for VisibleNotesQuery.Comparator);
        sub_1001E4E0C((uint64_t)v76, v75 & 1);
        if (v41)
        {
          v42 = v41;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
          v44 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v43 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v44 >= v43 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
          v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v42);
          specialized Array._endMutation()(v45);

        }
      }
      sub_100145264((uint64_t)v15, type metadata accessor for VisibleNotesQuery.Comparator);
      v34 += v77;
      --v33;
    }
    while (v33);
    v32 = v74;
    swift_bridgeObjectRelease(v74);
  }
  v46 = (uint64_t)v76;
  if (*((_QWORD *)v31 + 2))
  {
    v47 = swift_allocObject(&unk_10055D930, 24, 7);
    *(_QWORD *)(v47 + 16) = v31;
    v48 = v72;
    *v72 = v47;
    v49 = v81;
    v50 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v48, enum case for ICQueryType.and(_:), v81);
    v51 = ICQueryType.predicate.getter(v50);
    v52 = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v48, v49);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    v54 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v53 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v54 >= v53 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1);
    v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v51);
    specialized Array._endMutation()(v55);
  }
  else
  {
    swift_bridgeObjectRelease(v31);
  }
  v61 = (_QWORD *)v82;
  sub_1000163BC(0, &qword_1005D5230, NSPredicate_ptr);
  swift_bridgeObjectRetain(v61);
  v62.super.isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v61);
  v65 = (void *)objc_opt_self(NSCompoundPredicate);
  if ((v73 & 1) != 0)
    v66 = objc_msgSend(v65, "orPredicateWithSubpredicates:", v62.super.isa);
  else
    v66 = objc_msgSend(v65, "andPredicateWithSubpredicates:", v62.super.isa);
  v67 = v66;
  v68 = v32;
LABEL_35:
  swift_bridgeObjectRelease(v68);
  swift_bridgeObjectRelease(v61);

  sub_100012DDC(v46, &qword_1005D1080);
  return v67;
}

void VisibleNotesQuery.Comparator.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  char *v10;
  _QWORD v11[22];

  v1 = type metadata accessor for ICQueryType(0);
  v11[0] = *(_QWORD *)(v1 - 8);
  v11[1] = v1;
  __chkstk_darwin(v1);
  v2 = type metadata accessor for FolderEntity(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = sub_100012E18(&qword_1005D1EB0);
  v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v6 = type metadata accessor for VisibleNotesQuery.Comparator(0);
  __chkstk_darwin(v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100145220(v0, (uint64_t)v8, v9);
  v10 = (char *)sub_1001E6768 + 4 * word_100459EC4[swift_getEnumCaseMultiPayload(v8, v6)];
  __asm { BR              X10 }
}

uint64_t sub_1001E6768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;

  sub_10014BD1C(v5, v3, &qword_1005D1EB0);
  sub_100012CE8(v3, v6, &qword_1005D1EB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v0) == 1)
  {
    v8 = (void *)0xE300000000000000;
    v9 = 7104878;
  }
  else
  {
    sub_10013B170(v6, v1, type metadata accessor for FolderEntity);
    sub_100145220(v1, v4, type metadata accessor for FolderEntity);
    v9 = String.init<A>(describing:)(v4, v0);
    v8 = v11;
    sub_100145264(v1, type metadata accessor for FolderEntity);
  }
  strcpy((char *)(v7 - 128), "containedIn(");
  *(_BYTE *)(v7 - 115) = 0;
  *(_WORD *)(v7 - 114) = -5120;
  v12._countAndFlagsBits = v9;
  v12._object = v8;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v8);
  v13._countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14 = *(_QWORD *)(v7 - 128);
  sub_100012DDC(v3, &qword_1005D1EB0);
  return v14;
}

int64_t *sub_1001E6E50(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64x2_t v14;
  int64x2_t *v15;
  int64x2_t v16;
  _QWORD *v17;
  int64_t v18;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0)
    goto LABEL_31;
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4)
    goto LABEL_32;
  if (a5 > a4)
  {
    v5 = a4 + 1;
    *a2 = a4;
    v6 = a3 - 1;
    if (a3 == 1)
      goto LABEL_7;
    v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5))
      v7 = ~a4 + a5;
    if (v7 < v6)
      v6 = v7;
    v8 = v6 + 1;
    if (v8 > 4)
    {
      v11 = v8 & 3;
      if ((v8 & 3) == 0)
        v11 = 4;
      v12 = v8 - v11;
      v9 = v8 - v11 + 1;
      v13 = v5 + v12;
      v10 = &a2[v12];
      v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_10045A5A0);
      v15 = (int64x2_t *)(a2 + 3);
      v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *v15 = vaddq_s64(v14, v16);
        v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      v5 = v13;
    }
    else
    {
      v9 = 1;
      v10 = a2;
    }
    v17 = v10 + 1;
    v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5)
        goto LABEL_30;
      ++v9;
      v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9)
        goto LABEL_7;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001E6F80(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_100012E18(&qword_1005D3DA0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 32);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t *sub_1001E724C(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t **v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    v14 = 0;
    v29 = -1 << *(_BYTE *)(a4 + 32);
    v12 = a4 + 56;
    v13 = ~v29;
    v30 = -v29;
    if (v30 < 64)
      v31 = ~(-1 << v30);
    else
      v31 = -1;
    v15 = v31 & *(_QWORD *)(a4 + 56);
    v33 = result;
    if (a2)
      goto LABEL_6;
LABEL_39:
    v16 = 0;
    goto LABEL_49;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  v9 = __CocoaSet.makeIterator()(v8);
  v10 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v11 = sub_100167280();
  result = (uint64_t *)Set.Iterator.init(_cocoa:)(v9, v10, v11);
  v4 = v36[1];
  v12 = v36[2];
  v13 = v36[3];
  v14 = v36[4];
  v15 = v36[5];
  v33 = v7;
  if (!v6)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v16 = 0;
    goto LABEL_49;
  }
  if (a3 < 0)
    goto LABEL_51;
  v16 = 0;
  v34 = (unint64_t)(v13 + 64) >> 6;
  v32 = v13;
  while (1)
  {
    if (v4 < 0)
    {
      v23 = v12;
      v24 = __CocoaSet.Iterator.next()(result);
      if (!v24)
        goto LABEL_48;
      v25 = v24;
      v35 = v24;
      v26 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
      swift_unknownObjectRetain(v25);
      swift_dynamicCast(v36, &v35, (char *)&type metadata for Swift.AnyObject + 8, v26, 7);
      v19 = (uint64_t *)v36[0];
      result = (uint64_t *)swift_unknownObjectRelease(v25, v27);
      v12 = v23;
      if (!v19)
        goto LABEL_48;
      goto LABEL_11;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_10;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      return result;
    }
    if (v20 >= v34)
    {
      v15 = 0;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_26;
    v22 = v14 + 2;
    if (v14 + 2 >= v34)
    {
      v15 = 0;
      ++v14;
      goto LABEL_48;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v34)
        goto LABEL_45;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_26;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v34)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_48;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
        break;
    }
    v20 = v22;
LABEL_26:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v4 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_48;
LABEL_11:
    ++v16;
    *v6++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_48:
      v13 = v32;
      goto LABEL_49;
    }
  }
  v20 = v14 + 5;
  if (v14 + 5 >= v34)
  {
LABEL_45:
    v15 = 0;
    v14 = v22;
    goto LABEL_48;
  }
  v21 = *(_QWORD *)(v12 + 8 * v20);
  if (v21)
    goto LABEL_26;
  v28 = v14 + 6;
  while (v34 != v28)
  {
    v21 = *(_QWORD *)(v12 + 8 * v28++);
    if (v21)
    {
      v20 = v28 - 1;
      goto LABEL_26;
    }
  }
  v15 = 0;
  v14 = v34 - 1;
  v13 = v32;
LABEL_49:
  *v33 = v4;
  v33[1] = v12;
  v33[2] = v13;
  v33[3] = v14;
  v33[4] = v15;
  return (uint64_t *)v16;
}

unint64_t sub_1001E7554(unint64_t result, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  void (*v13)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v14;
  char v15;
  unint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  __int128 v38;
  char v39;
  char v40;
  uint64_t v41;

  v6 = result;
  v41 = *(_QWORD *)v3;
  v7 = v41;
  v8 = v41 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)v41 >> 62)
  {
    if (v41 >= 0)
      v19 = v41 & 0xFFFFFFFFFFFFFF8;
    else
      v19 = v41;
    swift_bridgeObjectRetain(v41);
    v9 = _CocoaArrayWrapper.endIndex.getter(v19);
    result = (unint64_t)sub_1001948C4(&v41);
  }
  else
  {
    v9 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = *(_QWORD *)(v3 + 8);
  v11 = *(_BYTE *)(v3 + 16);
  v12 = *(_BYTE *)(v3 + 17);
  v13 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v3 + 24);
  v14 = *(_QWORD *)(v3 + 32);
  v15 = *(_BYTE *)(v3 + 40);
  v33 = v7;
  v35 = v10;
  v36 = v11;
  v37 = v12;
  *(_QWORD *)&v38 = v13;
  *((_QWORD *)&v38 + 1) = v14;
  v39 = v15;
  v40 = 0;
  if (!a2)
  {
    a3 = 0;
    *(_QWORD *)v6 = v7;
    *(_QWORD *)(v6 + 8) = v9;
    *(_QWORD *)(v6 + 16) = v10;
    *(_BYTE *)(v6 + 24) = v11;
    *(_BYTE *)(v6 + 25) = v12;
    *(_QWORD *)(v6 + 32) = v13;
    *(_QWORD *)(v6 + 40) = v14;
    *(_BYTE *)(v6 + 48) = v15;
    *(_BYTE *)(v6 + 49) = 0;
    return a3;
  }
  if (!a3)
  {
    v18 = 0;
LABEL_15:
    *(_QWORD *)v6 = v7;
    *(_QWORD *)(v6 + 8) = v9;
    *(_QWORD *)(v6 + 16) = v10;
    *(_BYTE *)(v6 + 24) = v11;
    *(_BYTE *)(v6 + 25) = v12;
    *(_QWORD *)(v6 + 32) = v13;
    *(_QWORD *)(v6 + 40) = v14;
    *(_BYTE *)(v6 + 48) = v15;
    *(_BYTE *)(v6 + 49) = v18;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (!v9)
  {
LABEL_21:
    v16 = 0;
LABEL_40:
    v25 = v35;
    v26 = v36;
    v27 = v37;
    *(_QWORD *)v6 = v7;
    *(_QWORD *)(v6 + 8) = v16;
    *(_QWORD *)(v6 + 16) = v25;
    *(_BYTE *)(v6 + 24) = v26;
    *(_BYTE *)(v6 + 25) = v27;
    *(_OWORD *)(v6 + 32) = v38;
    *(_BYTE *)(v6 + 48) = v15;
    a3 = v9;
    *(_BYTE *)(v6 + 49) = 1;
    return a3;
  }
  v16 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
LABEL_23:
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 1, v7);
    if ((v15 & 1) != 0)
      goto LABEL_12;
LABEL_24:
    swift_retain(v14);
    v13(&v31, &v35);
    result = swift_release(v14);
    if ((v32 & 1) != 0)
    {
      v9 = 0;
LABEL_38:

      goto LABEL_39;
    }
    v20 = a3;
    v21 = 0;
    v28 = v20;
    v22 = 1 - v20;
    while (1)
    {
      v24 = v31;
      *a2 = v17;
      a2[1] = v24;
      if (v22 == v21)
      {
        v7 = v33;
        v9 = v34;
        v10 = v35;
        v11 = v36;
        v12 = v37;
        v14 = *((_QWORD *)&v38 + 1);
        v13 = (void (*)(uint64_t *__return_ptr, uint64_t *))v38;
        v15 = v39;
        v18 = v40;
        a3 = v28;
        goto LABEL_15;
      }
      if (v9 + v21 == 1)
      {
        v16 = 0;
        v15 = v39;
        goto LABEL_40;
      }
      if (!(v9 + 0x7FFFFFFFFFFFFFFFLL + v21))
        break;
      result = v9 + v21 - 2;
      v34 = result;
      if (v30)
      {
        v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v7);
      }
      else
      {
        if ((result & 0x8000000000000000) != 0)
          goto LABEL_44;
        if (result >= *(_QWORD *)(v29 + 16))
          goto LABEL_45;
        v23 = *(id *)(v7 + 8 * v9 + 16 + 8 * v21);
      }
      v17 = v23;
      swift_retain(v14);
      v13(&v31, &v35);
      result = swift_release(v14);
      --v21;
      a2 += 2;
      if ((v32 & 1) != 0)
      {
        v16 = v9 + v21 - 1;
        v9 = -v21;
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v34 = v9 - 1;
  v30 = v7 & 0xC000000000000001;
  v29 = v8;
  if ((v7 & 0xC000000000000001) != 0)
    goto LABEL_23;
  if ((v16 & 0x8000000000000000) != 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v16 < *(_QWORD *)(v8 + 16))
  {
    v17 = *(id *)(v7 + 8 * v16 + 32);
    if ((v15 & 1) != 0)
    {
LABEL_12:

      v9 = 0;
LABEL_39:
      v15 = 1;
      goto LABEL_40;
    }
    goto LABEL_24;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t *sub_1001E786C(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E7894(a1, a2, a3, a4, type metadata accessor for NoteSearchResult, &qword_1005D3F88);
}

uint64_t *sub_1001E7880(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E7894(a1, a2, a3, a4, type metadata accessor for AttachmentSearchResult, &qword_1005D3DA8);
}

uint64_t *sub_1001E7894(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6)
{
  uint64_t v6;
  uint64_t **v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v39;
  _QWORD v40[6];

  v6 = a4;
  v8 = a2;
  v36 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v11 = a4;
    else
      v11 = a4 & 0xFFFFFFFFFFFFFF8;
    v12 = __CocoaSet.makeIterator()(v11);
    v13 = a5(0);
    v14 = sub_100019C6C(a6, a5, (uint64_t)&protocol conformance descriptor for NSObject);
    result = (uint64_t *)Set.Iterator.init(_cocoa:)(v12, v13, v14);
    v6 = v40[1];
    v15 = v40[2];
    v16 = v40[3];
    v17 = v40[4];
    v18 = v40[5];
    if (v8)
      goto LABEL_6;
LABEL_39:
    v19 = 0;
    goto LABEL_41;
  }
  v17 = 0;
  v31 = -1 << *(_BYTE *)(a4 + 32);
  v15 = a4 + 56;
  v16 = ~v31;
  v32 = -v31;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  else
    v33 = -1;
  v18 = v33 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
  {
    v19 = 0;
LABEL_41:
    v34 = v36;
LABEL_44:
    *v34 = v6;
    v34[1] = v15;
    v34[2] = v16;
    v34[3] = v17;
    v34[4] = v18;
    return (uint64_t *)v19;
  }
  if (a3 < 0)
    goto LABEL_51;
  v19 = 0;
  v37 = (unint64_t)(v16 + 64) >> 6;
  v35 = v16;
  while (1)
  {
    if (v6 < 0)
    {
      v26 = __CocoaSet.Iterator.next()(result);
      if (!v26)
        goto LABEL_43;
      v27 = v26;
      v39 = v26;
      v28 = a5(0);
      swift_unknownObjectRetain(v27);
      swift_dynamicCast(v40, &v39, (char *)&type metadata for Swift.AnyObject + 8, v28, 7);
      v22 = (uint64_t *)v40[0];
      result = (uint64_t *)swift_unknownObjectRelease(v27, v29);
      if (!v22)
        goto LABEL_43;
      goto LABEL_11;
    }
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_10;
    }
    v23 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v23 >= v37)
    {
      v18 = 0;
      goto LABEL_43;
    }
    v24 = *(_QWORD *)(v15 + 8 * v23);
    if (v24)
      goto LABEL_26;
    v25 = v17 + 2;
    if (v17 + 2 >= v37)
    {
      v18 = 0;
      ++v17;
      goto LABEL_43;
    }
    v24 = *(_QWORD *)(v15 + 8 * v25);
    if (!v24)
    {
      if (v17 + 3 >= v37)
        goto LABEL_47;
      v24 = *(_QWORD *)(v15 + 8 * (v17 + 3));
      if (v24)
      {
        v23 = v17 + 3;
        goto LABEL_26;
      }
      v25 = v17 + 4;
      if (v17 + 4 >= v37)
      {
        v18 = 0;
        v17 += 3;
        goto LABEL_43;
      }
      v24 = *(_QWORD *)(v15 + 8 * v25);
      if (!v24)
      {
        v23 = v17 + 5;
        if (v17 + 5 >= v37)
        {
LABEL_47:
          v18 = 0;
          v17 = v25;
          goto LABEL_43;
        }
        v24 = *(_QWORD *)(v15 + 8 * v23);
        if (!v24)
        {
          v30 = v17 + 6;
          while (v37 != v30)
          {
            v24 = *(_QWORD *)(v15 + 8 * v30++);
            if (v24)
            {
              v23 = v30 - 1;
              goto LABEL_26;
            }
          }
          v18 = 0;
          v17 = v37 - 1;
          goto LABEL_43;
        }
        goto LABEL_26;
      }
    }
    v23 = v25;
LABEL_26:
    v18 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v23 << 6);
    v17 = v23;
LABEL_10:
    result = (uint64_t *)*(id *)(*(_QWORD *)(v6 + 48) + 8 * v21);
    v22 = result;
    if (!result)
      goto LABEL_43;
LABEL_11:
    ++v19;
    *v8++ = v22;
    if (v19 == a3)
    {
      v19 = a3;
LABEL_43:
      v16 = v35;
      v34 = v36;
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1001E7B84(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = _s3TagVMa(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v31 - v14;
  v36 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v35 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v30 = v35;
    *a1 = v36;
    a1[1] = v30;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v32 = -1 << *(_BYTE *)(v17 - 24);
  v33 = a1;
  v22 = 0;
  v23 = 0;
  v34 = (unint64_t)(63 - v19) >> 6;
  v31 = v34 - 1;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    sub_100145220(*(_QWORD *)(v36 + 48) + v29 * v25, (uint64_t)v12, _s3TagVMa);
    sub_10013B170((uint64_t)v12, (uint64_t)v15, _s3TagVMa);
    result = sub_10013B170((uint64_t)v15, a2, _s3TagVMa);
    if (v23 == a3)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v34)
      goto LABEL_32;
    v27 = *(_QWORD *)(v35 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v34)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v34)
    goto LABEL_32;
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v35 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v35 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v34)
    {
      v21 = 0;
      v22 = v31;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v35 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t *sub_1001E7E40(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  return sub_1001E7894(a1, a2, a3, a4, type metadata accessor for TableSearchResult, &qword_1005D3D88);
}

uint64_t sub_1001E7E54(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100016638((unint64_t *)&unk_1005D3D60, &qword_1005D3D58, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100012E18(&qword_1005D3D58);
          v13 = sub_1001E8D0C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000163BC(0, &qword_1005D3D50, UIViewController_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001E8070(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_100016638(a5, a6, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_100012E18(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001E8280(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100016638(&qword_1005D3D28, &qword_1005D3D20, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100012E18(&qword_1005D3D20);
          v13 = sub_1001E8D0C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000163BC(0, (unint64_t *)&unk_1005CF6E0, UIAction_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001E849C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100016638((unint64_t *)&unk_1005D3CE0, &qword_1005D3CD8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100012E18(&qword_1005D3CD8);
          v13 = sub_1001E8D0C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000163BC(0, (unint64_t *)&qword_1005D39F0, ICNote_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001E86B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100016638(&qword_1005D3CF8, &qword_1005D3CF0, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100012E18(&qword_1005D3CF0);
          v13 = sub_1001E8D0C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000163BC(0, (unint64_t *)&unk_1005D90A0, ICFolder_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001E88D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100016638((unint64_t *)&unk_1005D3D10, &qword_1005D3D08, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100012E18(&qword_1005D3D08);
          v13 = sub_1001E8D0C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000163BC(0, (unint64_t *)&qword_1005D3D00, NSObject_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001E8AF0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100016638(&qword_1005D3D78, &qword_1005D3D70, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100012E18(&qword_1005D3D70);
          v13 = sub_1001E8D0C(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000163BC(0, &qword_1005D8540, CKShareParticipant_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_1001E8D0C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1001E8DE4(v6, a2, a3);
  return sub_1001E8D60;
}

void (*sub_1001E8D64(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1001E8E50(v6, a2, a3);
  return sub_1001E8D60;
}

void sub_1001E8DB8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1001E8DE4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1001EBF38;
  }
  __break(1u);
  return result;
}

void (*sub_1001E8E50(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_1001E8EBC;
  }
  __break(1u);
  return result;
}

void sub_1001E8EBC(id *a1)
{

}

BOOL sub_1001E8EC4(unsigned __int8 *a1)
{
  return *a1 < 0xFEu;
}

unsigned __int8 *sub_1001E8ED4@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  unsigned int v2;

  v2 = *result;
  if (v2 > 0xFD)
    __break(1u);
  else
    *a2 = v2;
  return result;
}

uint64_t sub_1001E8EEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[5];

  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v7 = 0xD000000000000024;
  v8 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v9, &v7, &type metadata for String, &protocol witness table for String);
  type metadata accessor for AppDependencyManager(0);
  v0 = ((uint64_t (*)(void))static AppDependencyManager.shared.getter)();
  v1 = AppDependency.__allocating_init(key:manager:)(v9, v0);
  sub_100012E18(&qword_1005CEE50);
  v7 = 0xD000000000000021;
  v8 = 0x8000000100476B70;
  v2 = AnyHashable.init<A>(_:)(v9, &v7, &type metadata for String, &protocol witness table for String);
  v3 = static AppDependencyManager.shared.getter(v2);
  AppDependency.__allocating_init(key:manager:)(v9, v3);
  sub_100012E18((uint64_t *)&unk_1005CEF60);
  KeyPath = swift_getKeyPath(&unk_10045A538, v4);
  IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  return v1;
}

id sub_1001E9040(void *a1, void *a2, uint64_t a3)
{
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unsigned __int8 v45;
  objc_super v47;

  ObjectType = (objc_class *)swift_getObjectType(a2);
  v7 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v47 - v11;
  v13 = type metadata accessor for NoteID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2;
  ICSearchIndexableNote<>.entityIdentifier.getter(a3);
  (*(void (**)(_BYTE *, char *, uint64_t))(v14 + 32))(&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id], v16, v13);
  v18 = objc_msgSend(a1, "title");
  if (v18)
  {
    v19 = v18;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v22 = v21;

  }
  else
  {
    v20 = 0;
    v22 = 0xE000000000000000;
  }
  v23 = (uint64_t *)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title];
  *v23 = v20;
  v23[1] = v22;
  v24 = objc_msgSend(a1, "creationDate");
  if (v24)
  {
    v25 = v24;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v26 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 0, 1, v26);
  }
  else
  {
    v27 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 1, 1, v27);
  }
  sub_10014BD1C((uint64_t)v12, (uint64_t)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate], (uint64_t *)&unk_1005D7B20);
  v28 = objc_msgSend(a1, "modificationDate");
  if (v28)
  {
    v29 = v28;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

    v30 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v10, 0, 1, v30);
  }
  else
  {
    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 1, 1, v31);
  }
  sub_10014BD1C((uint64_t)v10, (uint64_t)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate], (uint64_t *)&unk_1005D7B20);
  v32 = objc_msgSend(a1, "folder");
  v33 = (uint64_t)v32;
  if (v32)
  {
    v34 = objc_msgSend(v32, "localizedTitle");
    swift_unknownObjectRelease(v33, v35);
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

  }
  else
  {
    v37 = 0;
  }
  v38 = (uint64_t *)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName];
  *v38 = v33;
  v38[1] = v37;
  v39 = objc_msgSend(a1, "folderManagedIdentifier");
  if (v39)
  {
    v40 = v39;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v43 = v42;

  }
  else
  {
    v41 = 0;
    v43 = 0;
  }
  v44 = (uint64_t *)&v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderManagedIdentifier];
  *v44 = v41;
  v44[1] = v43;
  v45 = objc_msgSend(a1, "isModernNote");
  v17[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote] = v45;

  v47.receiver = v17;
  v47.super_class = ObjectType;
  return objc_msgSendSuper2(&v47, "init");
}

uint64_t sub_1001E93A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v8 = 0xD000000000000024;
  v9 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v0 = type metadata accessor for AppDependencyManager(0);
  v1 = static AppDependencyManager.shared.getter(v0);
  v2 = AppDependency.__allocating_init(key:manager:)(v10, v1);
  sub_100012E18(&qword_1005CEE50);
  v8 = 0xD000000000000021;
  v9 = 0x8000000100476B70;
  v3 = AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v4 = static AppDependencyManager.shared.getter(v3);
  AppDependency.__allocating_init(key:manager:)(v10, v4);
  sub_100012E18((uint64_t *)&unk_1005CEF60);
  KeyPath = swift_getKeyPath(&unk_10045A538, v5);
  IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  return v2;
}

uint64_t sub_1001E9508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v8 = 0xD000000000000024;
  v9 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v0 = type metadata accessor for AppDependencyManager(0);
  v1 = static AppDependencyManager.shared.getter(v0);
  v2 = AppDependency.__allocating_init(key:manager:)(v10, v1);
  sub_100012E18(&qword_1005CEE50);
  v8 = 0xD000000000000021;
  v9 = 0x8000000100476B70;
  v3 = AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v4 = static AppDependencyManager.shared.getter(v3);
  AppDependency.__allocating_init(key:manager:)(v10, v4);
  sub_100012E18((uint64_t *)&unk_1005CEF60);
  KeyPath = swift_getKeyPath(&unk_10045A538, v5);
  IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  return v2;
}

uint64_t sub_1001E964C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v8 = 0xD000000000000024;
  v9 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v0 = type metadata accessor for AppDependencyManager(0);
  v1 = static AppDependencyManager.shared.getter(v0);
  v2 = AppDependency.__allocating_init(key:manager:)(v10, v1);
  sub_100012E18(&qword_1005CEE50);
  v8 = 0xD000000000000021;
  v9 = 0x8000000100476B70;
  v3 = AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v4 = static AppDependencyManager.shared.getter(v3);
  AppDependency.__allocating_init(key:manager:)(v10, v4);
  sub_100012E18((uint64_t *)&unk_1005CEF60);
  KeyPath = swift_getKeyPath(&unk_10045A538, v5);
  IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  return v2;
}

uint64_t sub_1001E9784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v8 = 0xD000000000000024;
  v9 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v0 = type metadata accessor for AppDependencyManager(0);
  v1 = static AppDependencyManager.shared.getter(v0);
  v2 = AppDependency.__allocating_init(key:manager:)(v10, v1);
  sub_100012E18(&qword_1005CEE50);
  v8 = 0xD000000000000021;
  v9 = 0x8000000100476B70;
  v3 = AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v4 = static AppDependencyManager.shared.getter(v3);
  AppDependency.__allocating_init(key:manager:)(v10, v4);
  sub_100012E18((uint64_t *)&unk_1005CEF60);
  KeyPath = swift_getKeyPath(&unk_10045A538, v5);
  IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  return v2;
}

uint64_t sub_1001E98EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  sub_100012E18((uint64_t *)&unk_1005D06C0);
  v8 = 0xD000000000000024;
  v9 = 0x8000000100476B40;
  AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v0 = type metadata accessor for AppDependencyManager(0);
  v1 = static AppDependencyManager.shared.getter(v0);
  v2 = AppDependency.__allocating_init(key:manager:)(v10, v1);
  sub_100012E18(&qword_1005CEE50);
  v8 = 0xD000000000000021;
  v9 = 0x8000000100476B70;
  v3 = AnyHashable.init<A>(_:)(v10, &v8, &type metadata for String, &protocol witness table for String);
  v4 = static AppDependencyManager.shared.getter(v3);
  AppDependency.__allocating_init(key:manager:)(v10, v4);
  sub_100012E18((uint64_t *)&unk_1005CEF60);
  KeyPath = swift_getKeyPath(&unk_10045A538, v5);
  IntentParameterDependency.__allocating_init<A, B>(_:)(KeyPath);
  return v2;
}

_QWORD *sub_1001E9A54@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1001E9A8C(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t type metadata accessor for VisibleNotesQuery.Comparator(uint64_t a1)
{
  return sub_100010414(a1, (uint64_t *)&unk_1005D3C80, (uint64_t)&nominal type descriptor for VisibleNotesQuery.Comparator);
}

const char *sub_1001E9AD4()
{
  return "title";
}

void sub_1001E9AE0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001E4BAC(a1, (SEL *)&selRef_title, a2);
}

void sub_1001E9AFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001E4BAC(a1, (SEL *)&selRef_title, a2);
}

uint64_t sub_1001E9B1C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001E9B58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E9B84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1005D3A0C);
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_100130768;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch(sub_1001E4358, 0, 0);
}

uint64_t sub_1001E9BEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc(dword_1005D3A24);
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_100145358;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch(sub_1001E4554, 0, 0);
}

uint64_t type metadata accessor for NoteSearchResult(uint64_t a1)
{
  return sub_100010414(a1, qword_1005D3B78, (uint64_t)&nominal type descriptor for NoteSearchResult);
}

const char *sub_1001E9C68()
{
  return "creationDate";
}

uint64_t sub_1001E9C74@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_creationDate, a2);
}

uint64_t sub_1001E9C90@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_creationDate, a2);
}

void sub_1001E9CAC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1001E4D18(a1, a2, a3, a4, (SEL *)&selRef_setCreationDate_);
}

const char *sub_1001E9CC8()
{
  return "modificationDate";
}

uint64_t sub_1001E9CD4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_modificationDate, a2);
}

uint64_t sub_1001E9CF0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001E4C8C(a1, (SEL *)&selRef_modificationDate, a2);
}

void sub_1001E9D0C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1001E4D18(a1, a2, a3, a4, (SEL *)&selRef_setModificationDate_);
}

unint64_t sub_1001E9D2C()
{
  unint64_t result;

  result = qword_1005D3A90;
  if (!qword_1005D3A90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VisibleNotesQuery, &type metadata for VisibleNotesQuery);
    atomic_store(result, (unint64_t *)&qword_1005D3A90);
  }
  return result;
}

unint64_t sub_1001E9D74()
{
  unint64_t result;

  result = qword_1005D3A98[0];
  if (!qword_1005D3A98[0])
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VisibleNotesQuery, &type metadata for VisibleNotesQuery);
    atomic_store(result, qword_1005D3A98);
  }
  return result;
}

unint64_t sub_1001E9DBC()
{
  unint64_t result;

  result = qword_1005D3AB8;
  if (!qword_1005D3AB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for VisibleNotesQuery, &type metadata for VisibleNotesQuery);
    atomic_store(result, (unint64_t *)&qword_1005D3AB8);
  }
  return result;
}

uint64_t sub_1001E9E00()
{
  return sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
}

unint64_t sub_1001E9E30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3AC8;
  if (!qword_1005D3AC8)
  {
    v1 = sub_10001537C(qword_1005D3AD0);
    sub_100019C6C((unint64_t *)&qword_1005D0A80, type metadata accessor for NoteEntity, (uint64_t)&protocol conformance descriptor for NoteEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D3AC8);
  }
  return result;
}

uint64_t sub_1001E9EB0(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_1001E9EB8()
{
  return type metadata accessor for NoteSearchResult(0);
}

void sub_1001E9EC0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v2 = type metadata accessor for NoteID(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_10045A278;
    v6[2] = &unk_10045A290;
    sub_100018C7C(319, (unint64_t *)&qword_1005DA840, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
    if (v5 <= 0x3F)
    {
      v7 = *(_QWORD *)(v4 - 8) + 64;
      v8 = v7;
      v9 = &unk_10045A2A8;
      v10 = &unk_10045A2A8;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

uint64_t initializeWithCopy for VisibleNotesQuery(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

uint64_t *assignWithCopy for VisibleNotesQuery(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a2[2];
  v9 = a1[2];
  a1[2] = v8;
  swift_retain(v8);
  swift_release(v9);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
  *((_BYTE *)a1 + 26) = *((_BYTE *)a2 + 26);
  *((_BYTE *)a1 + 27) = *((_BYTE *)a2 + 27);
  *((_BYTE *)a1 + 28) = *((_BYTE *)a2 + 28);
  return a1;
}

__n128 initializeWithTake for VisibleNotesQuery(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VisibleNotesQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibleNotesQuery(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 29))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibleNotesQuery(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 29) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibleNotesQuery()
{
  return &type metadata for VisibleNotesQuery;
}

uint64_t type metadata accessor for VisibleNotesQuery.ComparatorKeyPath(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10014BDB0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VisibleNotesQuery.ComparatorKeyPath);
}

uint64_t initializeBufferWithCopyOfBuffer for VisibleNotesQuery.Comparator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1001EA1FC + 4 * byte_100459EDC[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain(v6);
  return v7;
}

uint64_t destroy for VisibleNotesQuery.Comparator(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v4;
  int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 0:
      v5 = (int *)type metadata accessor for FolderEntity(0);
      result = (*(uint64_t (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(a1, 1, v5);
      if (!(_DWORD)result)
      {
        v6 = type metadata accessor for FolderID(0);
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
        v7 = (char *)a1 + v5[5];
        v8 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
        swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + v5[6] + 8));
        v9 = *(_QWORD *)((char *)a1 + v5[7] + 8);
        return swift_bridgeObjectRelease(v9);
      }
      return result;
    case 1:
      v10 = type metadata accessor for ICQueryType(0);
      return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
    case 2:
      v9 = *a1;
      return swift_bridgeObjectRelease(v9);
    case 3:
      v9 = a1[1];
      return swift_bridgeObjectRelease(v9);
    case 4:
      swift_release(*a1);
      swift_release(a1[1]);
      v9 = a1[3];
      return swift_bridgeObjectRelease(v9);
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      sub_1000153C0(a1);
      v4 = a1 + 5;
      goto LABEL_3;
    case 11:
      sub_1000153C0(a1);
      sub_1000153C0(a1 + 5);
      v4 = a1 + 9;
LABEL_3:
      result = sub_1000153C0(v4);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for VisibleNotesQuery.Comparator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;

  v3 = (char *)sub_1001EA7B4 + 4 * byte_100459EF4[swift_getEnumCaseMultiPayload(a2, a3)];
  __asm { BR              X10 }
}

char *sub_1001EA7B4()
{
  char *v0;
  uint64_t v1;
  char *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, int *, __n128);
  __n128 v20;

  v3 = (int *)type metadata accessor for FolderEntity(0);
  v4 = *((_QWORD *)v3 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v4 + 48))(v2, 1, v3))
  {
    v5 = sub_100012E18(&qword_1005D1EB0);
    memcpy(v0, v2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for FolderID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v0, v2, v6);
    v7 = v3[5];
    v8 = &v0[v7];
    v9 = &v2[v7];
    v10 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = v3[6];
    v12 = &v0[v11];
    v13 = &v2[v11];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = v3[7];
    v16 = &v0[v15];
    v17 = &v2[v15];
    v18 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v18;
    v0[v3[8]] = v2[v3[8]];
    v0[v3[9]] = v2[v3[9]];
    v19 = *(void (**)(char *, _QWORD, uint64_t, int *, __n128))(v4 + 56);
    swift_bridgeObjectRetain(v14);
    v20 = swift_bridgeObjectRetain(v18);
    v19(v0, 0, 1, v3, v20);
  }
  swift_storeEnumTagMultiPayload(v0, v1, 0);
  return v0;
}

uint64_t assignWithCopy for VisibleNotesQuery.Comparator(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v5;

  if (result != a2)
  {
    sub_100145264(result, type metadata accessor for VisibleNotesQuery.Comparator);
    v5 = (char *)&loc_1001EAC0C + 4 * byte_100459F00[swift_getEnumCaseMultiPayload(a2, a3)];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for VisibleNotesQuery.Comparator(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v10 = type metadata accessor for ICQueryType(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = a1;
    v12 = a3;
    v13 = 1;
LABEL_9:
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = (int *)type metadata accessor for FolderEntity(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100012E18(&qword_1005D1EB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for FolderID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = v7[5];
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
      a1[v7[8]] = a2[v7[8]];
      a1[v7[9]] = a2[v7[9]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a1;
    v12 = a3;
    v13 = 0;
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for VisibleNotesQuery.Comparator(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_100145264((uint64_t)a1, type metadata accessor for VisibleNotesQuery.Comparator);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for ICQueryType(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = a1;
      v12 = a3;
      v13 = 1;
LABEL_10:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = (int *)type metadata accessor for FolderEntity(0);
      v8 = *((_QWORD *)v7 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
      {
        v9 = sub_100012E18(&qword_1005D1EB0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v14 = type metadata accessor for FolderID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        v15 = v7[5];
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = type metadata accessor for URL(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
        *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
        a1[v7[8]] = a2[v7[8]];
        a1[v7[9]] = a2[v7[9]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
      }
      v11 = a1;
      v12 = a3;
      v13 = 0;
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1001EB37C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  sub_100018C7C(319, (unint64_t *)&qword_1005D3C90, type metadata accessor for FolderEntity);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for ICQueryType(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[3] = &unk_10045A290;
      v6[4] = " ";
      v6[5] = &unk_10045A338;
      v6[6] = &unk_10045A338;
      v6[7] = &unk_10045A338;
      v6[8] = &unk_10045A338;
      v6[9] = &unk_10045A338;
      v6[10] = &unk_10045A338;
      v6[11] = &unk_10045A350;
      swift_initEnumMetadataMultiPayload(a1, 256, 12, v6);
    }
  }
}

uint64_t sub_1001EB44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EB48C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EB4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EB50C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EB54C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EB58C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for NoteEntity(0);
  result = EntityProperty.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1001EB5CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3E10;
  if (!qword_1005D3E10)
  {
    v1 = sub_10001537C(&qword_1005D00D0);
    sub_100019C6C(&qword_1005D3E20, type metadata accessor for TagEntity, (uint64_t)&protocol conformance descriptor for TagEntity);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D3E10);
  }
  return result;
}

uint64_t sub_1001EB648()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001EB66C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3E80;
  if (!qword_1005D3E80)
  {
    v1 = sub_10001537C(&qword_1005CEEA0);
    sub_100019C6C(&qword_1005D26E8, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t)&protocol conformance descriptor for AttributedString);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3E80);
  }
  return result;
}

unint64_t sub_1001EB6E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3EF0;
  if (!qword_1005D3EF0)
  {
    v1 = sub_10001537C((uint64_t *)&unk_1005D7B20);
    sub_100019C6C(&qword_1005D3EF8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3EF0);
  }
  return result;
}

void sub_1001EB764(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_1001E466C(*(_QWORD *)(v1 + 24), a1);
}

id sub_1001EB77C(void *a1, void *a2, unint64_t *a3, _QWORD *a4)
{
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BYTE *v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  unsigned __int8 v48;
  objc_super v50;

  ObjectType = (objc_class *)swift_getObjectType(a2);
  v9 = sub_100012E18((uint64_t *)&unk_1005D7B20);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v50 - v13;
  v15 = type metadata accessor for NoteID(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1000163BC(0, a3, a4);
  v20 = a2;
  ICSearchIndexableNote<>.entityIdentifier.getter(v19);
  (*(void (**)(_BYTE *, char *, uint64_t))(v16 + 32))(&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_id], v18, v15);
  v21 = objc_msgSend(a1, "title");
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0xE000000000000000;
  }
  v26 = (uint64_t *)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_title];
  *v26 = v23;
  v26[1] = v25;
  v27 = objc_msgSend(a1, "creationDate");
  if (v27)
  {
    v28 = v27;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

    v29 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v14, 0, 1, v29);
  }
  else
  {
    v30 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v14, 1, 1, v30);
  }
  sub_10014BD1C((uint64_t)v14, (uint64_t)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_creationDate], (uint64_t *)&unk_1005D7B20);
  v31 = objc_msgSend(a1, "modificationDate");
  if (v31)
  {
    v32 = v31;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v31);

    v33 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 0, 1, v33);
  }
  else
  {
    v34 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v12, 1, 1, v34);
  }
  sub_10014BD1C((uint64_t)v12, (uint64_t)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_modificationDate], (uint64_t *)&unk_1005D7B20);
  v35 = objc_msgSend(a1, "folder");
  v36 = (uint64_t)v35;
  if (v35)
  {
    v37 = objc_msgSend(v35, "localizedTitle");
    swift_unknownObjectRelease(v36, v38);
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
    v40 = v39;

  }
  else
  {
    v40 = 0;
  }
  v41 = (uint64_t *)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderName];
  *v41 = v36;
  v41[1] = v40;
  v42 = objc_msgSend(a1, "folderManagedIdentifier");
  if (v42)
  {
    v43 = v42;
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v46 = v45;

  }
  else
  {
    v44 = 0;
    v46 = 0;
  }
  v47 = (uint64_t *)&v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_folderManagedIdentifier];
  *v47 = v44;
  v47[1] = v46;
  v48 = objc_msgSend(a1, "isModernNote");
  v20[OBJC_IVAR____TtC11MobileNotesP33_10D1876D3C9D5070F0B0F84A41ABC8CB16NoteSearchResult_isModernNote] = v48;

  v50.receiver = v20;
  v50.super_class = ObjectType;
  return objc_msgSendSuper2(&v50, "init");
}

uint64_t sub_1001EBAF4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001E44A4(*(_QWORD *)(v1 + 24), a1);
}

const char *sub_1001EBB0C()
{
  return "guid";
}

void sub_1001EBB18(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001E4BAC(a1, (SEL *)&selRef_guid, a2);
}

unint64_t sub_1001EBB34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3FE8;
  if (!qword_1005D3FE8)
  {
    v1 = sub_10001537C(&qword_1005D3FA8);
    sub_1001EBBE0(&qword_1005D3FF0, &qword_1005D3FA0, &qword_1005D3FF8, &qword_1005D3F98);
    sub_1001EBBE0(&qword_1005D4000, &qword_1005D3FB8, &qword_1005D4008, &qword_1005D4010);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.OptionalFlatMap<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3FE8);
  }
  return result;
}

uint64_t sub_1001EBBE0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_10001537C(a2);
    sub_100016638(a3, a4, (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.KeyPath<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001EBC58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D4018;
  if (!qword_1005D4018)
  {
    v1 = sub_10001537C(&qword_1005D3F90);
    sub_1001EBCF4(&qword_1005D4020, (uint64_t)&protocol witness table for Bool, (uint64_t)&protocol conformance descriptor for <A> A?);
    sub_1001EBCF4(&qword_1005D4028, (uint64_t)&protocol witness table for Bool, (uint64_t)&protocol conformance descriptor for <A> A?);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D4018);
  }
  return result;
}

uint64_t sub_1001EBCF4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10001537C(&qword_1005D3FD0);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EBD58()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001EBD7C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_1001E4E0C(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
  *a1 = v3;
}

uint64_t sub_1001EBDC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

const char *sub_1001EBDE8()
{
  return "identifier";
}

void sub_1001EBDF4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001E4BAC(a1, (SEL *)&selRef_identifier, a2);
}

uint64_t sub_1001EBE10(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10001537C(a2);
    a3();
    sub_1001EBC58();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Equal<A, B>, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001EBE7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D40D8;
  if (!qword_1005D40D8)
  {
    v1 = sub_10001537C(&qword_1005D40B0);
    sub_1001EBBE0(&qword_1005D40E0, &qword_1005D40A8, &qword_1005D40E8, &qword_1005D40A0);
    sub_1001EBBE0(&qword_1005D4000, &qword_1005D3FB8, &qword_1005D4008, &qword_1005D4010);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.OptionalFlatMap<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_1005D40D8);
  }
  return result;
}

_QWORD *sub_1001EBF3C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  void (*v27)(_BYTE *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[32];
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  _QWORD *v34;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
    goto LABEL_8;
  if (a1 < 0)
    v3 = a1;
  else
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
  v4 = __CocoaSet.count.getter(v3);
  result = _swiftEmptyArrayStorage;
  if (!v4)
    return result;
  v34 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v4);
  v31 = __CocoaSet.startIndex.getter(v3);
  v32 = v6;
  v33 = 1;
  if (v4 < 0)
  {
    __break(1u);
LABEL_8:
    v4 = *(_QWORD *)(a1 + 16);
    result = _swiftEmptyArrayStorage;
    if (!v4)
      return result;
    v34 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    v31 = sub_100242B90(a1);
    v32 = v7;
    v33 = v8 & 1;
  }
  v9 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0)
    v9 = a1;
  v29 = v9;
  while (1)
  {
    while (1)
    {
      v15 = v31;
      v16 = v32;
      v17 = v33;
      sub_100242F20(v31, v32, v33, a1);
      v19 = v18;
      v20 = objc_msgSend(v18, "objectID");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v22 = v34[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
      v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
      result = (_QWORD *)specialized ContiguousArray._endMutation()(v23);
      if (v2)
        break;
      v10 = sub_1003CCBC0(v15, v16, v17, a1);
      v12 = v11;
      v14 = v13;
      sub_1001EDA28(v15, v16, v17);
      v31 = v10;
      v32 = v12;
      v33 = v14 & 1;
      if (!--v4)
        goto LABEL_20;
    }
    if ((v17 & 1) == 0)
      break;
    v24 = __CocoaSet.Index.handleBitPattern.getter(v15, v16);
    if (v24)
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v24);
    else
      isUniquelyReferenced_nonNull_native = 1;
    v26 = sub_100012E18(&qword_1005D4168);
    v27 = (void (*)(_BYTE *, _QWORD))Set.Index._asCocoa.modify(v30, v26);
    __CocoaSet.formIndex(after:isUnique:)(v28, isUniquelyReferenced_nonNull_native, v29);
    v27(v30, 0);
    if (!--v4)
    {
LABEL_20:
      sub_1001EDA28(v31, v32, v33);
      return v34;
    }
  }
  __break(1u);
  return result;
}

char *sub_1001EC15C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView;
  v2 = *(void **)&v0[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView];
  }
  else
  {
    v4 = v0;
    v5 = *(void **)&v0[OBJC_IVAR___ICTagAssignmentViewController_managedObjectContext];
    v6 = swift_allocObject(&unk_10055DB70, 24, 7);
    *(_QWORD *)(v6 + 16) = v4;
    objc_allocWithZone((Class)type metadata accessor for TagAssignmentCollectionView());
    v7 = v5;
    v8 = v4;
    v9 = sub_1003548B0(v5, (uint64_t)sub_1001ED538, v6);
    v10 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

void sub_1001EC218(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  _QWORD *v19;
  id v20;
  _QWORD aBlock[5];
  _QWORD *v22;
  char v23[24];

  v3 = *(_QWORD **)(v1 + OBJC_IVAR___ICTagAssignmentViewController_model);
  v4 = v3[5];
  swift_bridgeObjectRetain(v4);
  v6 = sub_1001EBF3C(v5);
  swift_bridgeObjectRelease(v4);
  v7 = sub_10020BAFC((uint64_t)v6);
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend(a1, "includedObjectIDs");
  v9 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v10 = sub_1001452A0((unint64_t *)&qword_1005D3CC0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v8, v9, v10);

  sub_1001ED558(v7, v11);
  LOBYTE(v8) = v12;
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  v13 = sub_1001EC434(&OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___doneBarButtonItem, &selRef_dismissAndSaveActionWithSender_, 0);
  objc_msgSend(v13, "setEnabled:", (v8 & 1) == 0);

  swift_beginAccess(v3 + 2, v23, 1, 0);
  v14 = v3[2];
  v3[2] = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v14);
  v15 = (void *)v3[4];
  v16 = swift_allocObject(&unk_10055DB98, 24, 7);
  swift_weakInit(v16 + 16, v3);
  v17 = (_QWORD *)swift_allocObject(&unk_10055DBC0, 48, 7);
  v17[2] = a1;
  v17[3] = v16;
  v17[4] = 0;
  v17[5] = 0;
  aBlock[4] = sub_1001EDA1C;
  v22 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100206734;
  aBlock[3] = &unk_10055DBD8;
  v18 = _Block_copy(aBlock);
  v19 = v22;
  v20 = a1;
  swift_release(v19);
  objc_msgSend(v15, "performBlock:", v18);
  _Block_release(v18);
}

id sub_1001EC434(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", a3, v3, *a2);
    v8 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

id sub_1001EC534(uint64_t a1, void *a2, uint64_t a3, _QWORD *a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  char *v15;
  uint64_t v16;
  id v17;
  char *v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  objc_super v24;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  *(_QWORD *)&v5[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___cancelBarButtonItem] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___doneBarButtonItem] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___ICTagAssignmentViewController_selectedNotes] = a1;
  *(_QWORD *)&v5[OBJC_IVAR___ICTagAssignmentViewController_managedObjectContext] = a2;
  v11 = &v5[OBJC_IVAR___ICTagAssignmentViewController_completion];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v12 = type metadata accessor for TagAssignmentModel();
  v13 = (_QWORD *)swift_allocObject(v12, 48, 7);
  v13[2] = &_swiftEmptySetSingleton;
  v13[3] = a1;
  v13[4] = a2;
  swift_bridgeObjectRetain_n(a1, 2);
  v14 = a2;
  v15 = v5;
  swift_retain(a4);
  v16 = sub_1003385CC(a1, (uint64_t)v14);
  swift_bridgeObjectRelease(a1);
  v13[5] = v16;
  *(_QWORD *)&v15[OBJC_IVAR___ICTagAssignmentViewController_model] = v13;

  v24.receiver = v15;
  v24.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v24, "initWithNibName:bundle:", 0, 0);
  v18 = sub_1001EC15C();
  v19 = *(void **)&v18[OBJC_IVAR____TtC11MobileNotes27TagAssignmentCollectionView_tagAssignmentDataSource];
  if (v19)
  {
    v20 = swift_allocObject(&unk_10055DC38, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16, v18);
    v21 = (_QWORD *)swift_allocObject(&unk_10055DC60, 40, 7);
    v21[3] = 0;
    v21[4] = 0;
    v21[2] = v20;
    v22 = v19;
    swift_retain(v20);
    sub_1002A871C(0, (uint64_t)sub_1001EDA8C, (uint64_t)v21);

    swift_release(a4);
    swift_release(v20);
    a4 = v21;
  }
  else
  {

  }
  swift_release(a4);

  return v17;
}

void sub_1001EC7D8()
{
  void *v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  char *v13;
  char *v14;
  objc_super v15;

  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v15, "viewDidLoad");
  v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, 0, 0);

  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v0, "setTitle:", v6);

  v7 = objc_msgSend(v0, "navigationItem");
  v8 = sub_1001EC434(&OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___cancelBarButtonItem, &selRef_dismissActionWithSender_, 1);
  objc_msgSend(v7, "setLeftBarButtonItem:", v8);

  v9 = objc_msgSend(v0, "navigationItem");
  v10 = sub_1001EC434(&OBJC_IVAR___ICTagAssignmentViewController____lazy_storage___doneBarButtonItem, &selRef_dismissAndSaveActionWithSender_, 0);
  objc_msgSend(v9, "setRightBarButtonItem:", v10);

  v11 = objc_msgSend(v0, "view");
  if (v11)
  {
    v12 = v11;
    v13 = sub_1001EC15C();
    objc_msgSend(v12, "addSubview:", v13);

    v14 = sub_1001EC15C();
    objc_msgSend(v14, "ic_addAnchorsToFillSuperview");

  }
  else
  {
    __break(1u);
  }
}

void sub_1001ECA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  Class isa;
  char *v43;
  uint64_t v44;
  char *v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  char *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  id v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD aBlock[5];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;

  v1 = sub_100012E18((uint64_t *)&unk_1005D6350);
  __chkstk_darwin(v1);
  v73 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for IndexPath(0);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  __chkstk_darwin(v3);
  v72 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v0;
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___ICTagAssignmentViewController_model) + 40);
  if ((v5 & 0xC000000000000001) != 0)
  {
    if (v5 < 0)
      v6 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR___ICTagAssignmentViewController_model) + 40);
    else
      v6 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v7 = __CocoaSet.makeIterator()(v6);
    v8 = sub_1000163BC(0, (unint64_t *)&qword_1005D86F0, ICHashtag_ptr);
    v9 = sub_1001452A0(&qword_1005D4160, (unint64_t *)&qword_1005D86F0, ICHashtag_ptr);
    v10 = Set.Iterator.init(_cocoa:)(v7, v8, v9);
    v5 = v83;
    v76 = v84;
    v11 = v85;
    v12 = v86;
    v13 = v87;
  }
  else
  {
    v14 = -1 << *(_BYTE *)(v5 + 32);
    v15 = *(_QWORD *)(v5 + 56);
    v76 = v5 + 56;
    v11 = ~v14;
    v16 = -v14;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v13 = v17 & v15;
    swift_bridgeObjectRetain(v5);
    v12 = 0;
  }
  v74 = v5 & 0x7FFFFFFFFFFFFFFFLL;
  v69 = v11;
  v75 = (unint64_t)(v11 + 64) >> 6;
  v71 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    v18 = v12;
    if (v5 < 0)
    {
      v21 = __CocoaSet.Iterator.next()(v10);
      if (!v21)
        goto LABEL_52;
      v22 = v21;
      v80 = v21;
      v23 = sub_1000163BC(0, (unint64_t *)&qword_1005D86F0, ICHashtag_ptr);
      swift_unknownObjectRetain(v22);
      swift_dynamicCast(aBlock, &v80, v71, v23, 7);
      v24 = (id)aBlock[0];
      swift_unknownObjectRelease(v22, v25);
      if (!v24)
        goto LABEL_52;
      goto LABEL_33;
    }
    if (!v13)
      break;
    v19 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v20 = v19 | (v12 << 6);
LABEL_32:
    v24 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v20);
    if (!v24)
      goto LABEL_52;
LABEL_33:
    v29 = objc_msgSend(v24, "standardizedContent");
    if (v29)
    {
      v30 = v29;
      v31 = v5;
      v32 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v34 = v33;

      v35 = sub_1001EC15C();
      v36 = *(void **)&v35[OBJC_IVAR____TtC11MobileNotes27TagAssignmentCollectionView_tagAssignmentDataSource];
      if (!v36)
      {

        swift_bridgeObjectRelease(v34);
        v37 = v35;
        goto LABEL_51;
      }
      v70 = v32;
      v37 = v36;
      v38 = (uint64_t)v73;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v37);
      v40 = v77;
      v39 = v78;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v38, 1, v78) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v72, v38, v39);
        v41 = *(void **)&v37[qword_1005D6F50];
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v43 = (char *)objc_msgSend(v41, "cellForItemAtIndexPath:", isa);

        if (v43)
        {
          v44 = type metadata accessor for TagContainerCell();
          if (swift_dynamicCastClass(v43, v44))
          {
            v45 = sub_100228DBC();
            v46 = *(void **)&v45[OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource];
            if (v46)
            {
              v67 = OBJC_IVAR____TtC11MobileNotes17TagCollectionView_tagDataSource;
              v47 = objc_msgSend(v46, "indexer");
              if (v47)
              {
                v48 = v47;
                v49 = objc_opt_self(ICTagCoreDataIndexer);
                v66 = v48;
                v50 = swift_dynamicCastObjCClass(v48, v49);
                v68 = v45;
                if (v50)
                {
                  v51 = *(void **)&v68[v67];
                  if (v51)
                  {
                    v52 = (void *)v50;
                    v53 = v51;
                    v54 = objc_msgSend(v52, "objectIDs");
                    v55 = sub_1000163BC(0, (unint64_t *)&qword_1005D2500, NSManagedObjectID_ptr);
                    v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

                    v65 = v53;
                    v64 = *(void **)&v53[OBJC_IVAR____TtC11MobileNotes13TagDataSource_modernViewContext];
                    v56 = swift_allocObject(&unk_10055DAF8, 24, 7);
                    swift_unknownObjectWeakInit(v56 + 16, v68);
                    v57 = swift_allocObject(&unk_10055DB20, 88, 7);
                    v58 = v67;
                    *(_QWORD *)(v57 + 16) = v56;
                    *(_QWORD *)(v57 + 24) = v58;
                    v59 = v64;
                    v60 = v70;
                    *(_QWORD *)(v57 + 32) = v64;
                    *(_QWORD *)(v57 + 40) = v60;
                    *(_QWORD *)(v57 + 48) = v34;
                    *(_QWORD *)(v57 + 56) = v53;
                    *(_BYTE *)(v57 + 64) = 0;
                    *(_QWORD *)(v57 + 72) = 0;
                    *(_QWORD *)(v57 + 80) = 0;
                    aBlock[4] = sub_1001ED4E0;
                    v82 = v57;
                    aBlock[0] = _NSConcreteStackBlock;
                    aBlock[1] = 1107296256;
                    aBlock[2] = sub_100206734;
                    aBlock[3] = &unk_10055DB38;
                    v61 = _Block_copy(aBlock);
                    v67 = v82;
                    v62 = v59;
                    v70 = v65;
                    v45 = (char *)v62;
                    swift_bridgeObjectRetain(v34);
                    swift_release(v67);
                    objc_msgSend(v45, "performBlock:", v61);
                    _Block_release(v61);

                    goto LABEL_48;
                  }
                }

                v43 = v68;
                v45 = (char *)v66;
              }
            }

LABEL_48:
          }
          else
          {

          }
        }
        (*(void (**)(char *, uint64_t))(v77 + 8))(v72, v78);
        goto LABEL_50;
      }
      sub_10012D210(v38);
LABEL_50:

      swift_bridgeObjectRelease(v34);
LABEL_51:
      v5 = v31;

    }
    else
    {

    }
  }
  v26 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v26 >= v75)
      goto LABEL_52;
    v27 = *(_QWORD *)(v76 + 8 * v26);
    ++v12;
    if (!v27)
    {
      v12 = v18 + 2;
      if (v18 + 2 >= v75)
        goto LABEL_52;
      v27 = *(_QWORD *)(v76 + 8 * v12);
      if (!v27)
      {
        v12 = v18 + 3;
        if (v18 + 3 >= v75)
          goto LABEL_52;
        v27 = *(_QWORD *)(v76 + 8 * v12);
        if (!v27)
        {
          v12 = v18 + 4;
          if (v18 + 4 >= v75)
            goto LABEL_52;
          v27 = *(_QWORD *)(v76 + 8 * v12);
          if (!v27)
          {
            v28 = v18 + 5;
            while (v75 != v28)
            {
              v27 = *(_QWORD *)(v76 + 8 * v28++);
              if (v27)
              {
                v12 = v28 - 1;
                goto LABEL_31;
              }
            }
LABEL_52:
            sub_1001452E0(v5);
            return;
          }
        }
      }
    }
LABEL_31:
    v13 = (v27 - 1) & v27;
    v20 = __clz(__rbit64(v27)) + (v12 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

