uint64_t sub_100198DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  Class isa;
  id v27;
  uint64_t v29;
  Swift::String v30;

  v4 = sub_100008B04((uint64_t *)&unk_10149E730);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04(&qword_10149E750);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DateComponents(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = round((double)(unint64_t)a1 / 60.0);
  if ((~*(_QWORD *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if ((uint64_t)v15 <= 1)
    a1 = 1;
  else
    a1 = (uint64_t)v15;
  v16 = round((double)(unint64_t)a2 / 60.0);
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
    goto LABEL_22;
  if (v16 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  a2 = (uint64_t)v16;
  if (__OFSUB__((uint64_t)v16, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((uint64_t)v16 - a1 >= 2)
  {
    if (qword_101490ED0 == -1)
    {
LABEL_13:
      v30._countAndFlagsBits = 0xD000000000000047;
      v30._object = (void *)0x8000000100E4E670;
      v17._object = (void *)0x8000000100E4E630;
      v17._countAndFlagsBits = 0xD000000000000034;
      v18._countAndFlagsBits = 0x25202D2064243125;
      v18._object = (void *)0xEF6E696D20642432;
      v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v18, v30);
      v20 = sub_100008B04((uint64_t *)&unk_10149A4F0);
      v21 = swift_allocObject(v20, 112, 7);
      *(_OWORD *)(v21 + 16) = xmmword_100E22F70;
      *(_QWORD *)(v21 + 56) = &type metadata for Int;
      *(_QWORD *)(v21 + 64) = &protocol witness table for Int;
      *(_QWORD *)(v21 + 32) = a1;
      *(_QWORD *)(v21 + 96) = &type metadata for Int;
      *(_QWORD *)(v21 + 104) = &protocol witness table for Int;
      *(_QWORD *)(v21 + 72) = a2;
      v22 = String.init(format:_:)(v19._countAndFlagsBits, v19._object, v21);
      swift_bridgeObjectRelease(v19._object);
      return v22;
    }
LABEL_26:
    swift_once(&qword_101490ED0, sub_10011833C);
    goto LABEL_13;
  }
  v23 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
  objc_msgSend(v23, "setUnitsStyle:", 2);
  objc_msgSend(v23, "setAllowedUnits:", 64);
  v24 = type metadata accessor for Calendar(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v10, 1, 1, v24);
  v25 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v10, v6, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1);
  DateComponents.minute.setter(a1, 0);
  isa = DateComponents._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(v23, "stringFromDateComponents:", isa);

  if (v27)
  {
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);

  }
  else
  {

    v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v22;
}

uint64_t destroy for NearbyTransitGroupViewModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[5]);
}

uint64_t initializeWithCopy for NearbyTransitGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for NearbyTransitGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for NearbyTransitGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitGroupViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitGroupViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitGroupViewModel()
{
  return &type metadata for NearbyTransitGroupViewModel;
}

BOOL sub_100199488(id a1, GEOTransitIncidentEntity *a2, GEOTransitIncidentEntity *a3)
{
  unint64_t v5;
  GEOTransitIncidentEntity *v6;
  GEOTransitIncidentEntity *v7;
  GEOTransitIncidentEntity *v8;
  GEOTransitIncidentEntity *v9;
  GEOTransitIncidentEntity *v10;
  unsigned __int8 v11;
  BOOL v12;
  char v13;
  BOOL v14;
  id v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v5 = (unint64_t)a2 | (unint64_t)a3;
  v6 = a2;
  v7 = a3;
  v8 = v6;
  v9 = v7;
  v10 = v9;
  if (v5)
  {
    v11 = 0;
    if (v8)
      v12 = a3 == 0;
    else
      v12 = 0;
    v13 = v12;
    if (v9)
      v14 = a2 == 0;
    else
      v14 = 0;
    if (!v14 && (v13 & 1) == 0)
    {
      v15 = -[GEOTransitIncidentEntity muid](v8, "muid");
      if (v15 == -[GEOTransitIncidentEntity muid](v10, "muid")
        && (v16 = -[GEOTransitIncidentEntity hasNextStopIDs](v8, "hasNextStopIDs"),
            v16 == -[GEOTransitIncidentEntity hasNextStopIDs](v10, "hasNextStopIDs")))
      {
        v17 = objc_claimAutoreleasedReturnValue(-[GEOTransitIncidentEntity nextStopIDs](v8, "nextStopIDs"));
        v18 = objc_claimAutoreleasedReturnValue(-[GEOTransitIncidentEntity nextStopIDs](v10, "nextStopIDs"));
        v19 = v17 | v18;
        v20 = (id)v17;
        v21 = (id)v18;
        if (v19)
          v11 = objc_msgSend(v20, "isEqual:", v21);
        else
          v11 = 1;

      }
      else
      {
        v11 = 0;
      }
    }
  }
  else
  {
    v11 = 1;
  }

  return v11;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitTransitShields()
{
  return &type metadata for PlaceSummaryUnitTransitShields;
}

id sub_1001996A4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ServerEvaluationStatusMapsSync()), "init");
  qword_1014D4EF8 = (uint64_t)result;
  return result;
}

id sub_10019974C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ServerEvaluationStatusMapsSync();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ServerEvaluationStatusMapsSync()
{
  return objc_opt_self(_TtC4Maps30ServerEvaluationStatusMapsSync);
}

uint64_t sub_1001997A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  _QWORD *v9;

  *(_BYTE *)(v8 + 161) = a8;
  *(_BYTE *)(v8 + 160) = a7;
  *(_QWORD *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 104) = a6;
  v9 = (_QWORD *)swift_task_alloc(dword_10149E7BC);
  *(_QWORD *)(v8 + 112) = v9;
  *v9 = v8;
  v9[1] = sub_100199804;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_100199804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100199860, 0, 0);
}

uint64_t sub_100199860()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  void (*v9)(id);
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  unint64_t v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    v2 = *(unsigned __int8 *)(v0 + 161);
    dispatch thunk of ServerEvaluationStatus.arpStatus.setter(*(unsigned __int8 *)(v0 + 160));
    dispatch thunk of ServerEvaluationStatus.reliabilityStatus.setter(v2);
    type metadata accessor for MapsSyncStore(0);
    *(_QWORD *)(v0 + 128) = static MapsSyncStore.sharedStore.getter();
    v3 = sub_100008B04((uint64_t *)&unk_101493B10);
    v4 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v4 + 32) = v1;
    v20 = v4;
    specialized Array._endMutation()(v4);
    *(_QWORD *)(v0 + 136) = v20;
    v5 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:) + 1);
    v19 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    v6 = v1;
    v7 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 144) = v7;
    *v7 = v0;
    v7[1] = sub_100199AB4;
    return v19(v20);
  }
  else
  {
    v9 = *(void (**)(id))(v0 + 96);
    if (v9)
    {
      if (qword_101491060 != -1)
        swift_once(&qword_101491060, sub_10019A784);
      v10 = unk_10149E760;
      v11 = sub_100008B04(&qword_10149BAF0);
      inited = swift_initStackObject(v11, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100E22F40;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
      *(_QWORD *)(inited + 40) = v13;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = 0xD000000000000012;
      *(_QWORD *)(inited + 56) = 0x8000000100E4E7C0;
      swift_bridgeObjectRetain(v10);
      v14 = sub_100009624(inited);
      v15 = objc_allocWithZone((Class)NSError);
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v18 = objc_msgSend(v15, "initWithDomain:code:userInfo:", v16, -1, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

      v9(v18);
    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100199AB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100199B68;
  }
  else
  {
    v5 = *(void **)(v2 + 128);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 136));

    v4 = sub_100199B24;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100199B24()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  void *v2;

  v1 = *(void (**)(_QWORD))(v0 + 96);
  v2 = *(void **)(v0 + 120);
  if (v1)
    v1(0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100199B68()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));

  v4 = *(_QWORD *)(v0 + 152);
  if (v3)
  {
    v5 = *(void (**)(uint64_t))(v0 + 96);
    swift_errorRetain(*(_QWORD *)(v0 + 152));
    v5(v4);
    swift_errorRelease(v4);
  }
  swift_errorRelease(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100199D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v7 = (_QWORD *)swift_task_alloc(dword_10149E7BC);
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_100199D80;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_100199D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100199DDC, 0, 0);
}

uint64_t sub_100199DDC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, _QWORD);
  char v3;
  char v4;

  v1 = *(void **)(v0 + 40);
  v2 = *(void (**)(_QWORD, _QWORD))(v0 + 16);
  if (v1)
  {
    if (v2)
    {
      v3 = dispatch thunk of ServerEvaluationStatus.arpStatus.getter();
      v4 = dispatch thunk of ServerEvaluationStatus.reliabilityStatus.getter();
      v2(v3 & 1, v4 & 1);
    }

  }
  else if (v2)
  {
    v2(0, 0);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100199F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  _QWORD *v9;

  *(_BYTE *)(v8 + 161) = a8;
  *(_BYTE *)(v8 + 160) = a7;
  *(_QWORD *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 104) = a6;
  v9 = (_QWORD *)swift_task_alloc(dword_10149E7BC);
  *(_QWORD *)(v8 + 112) = v9;
  *v9 = v8;
  v9[1] = sub_100199FFC;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_100199FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10019A058, 0, 0);
}

uint64_t sub_10019A058()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  void (*v9)(id);
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  unint64_t v14;
  id v15;
  NSString v16;
  Class isa;
  id v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;

  v1 = *(void **)(v0 + 120);
  if (v1)
  {
    v2 = *(unsigned __int8 *)(v0 + 161);
    dispatch thunk of ServerEvaluationStatus.rapStatus.setter(*(unsigned __int8 *)(v0 + 160));
    dispatch thunk of ServerEvaluationStatus.reliabilityStatus.setter(v2);
    type metadata accessor for MapsSyncStore(0);
    *(_QWORD *)(v0 + 128) = static MapsSyncStore.sharedStore.getter();
    v3 = sub_100008B04((uint64_t *)&unk_101493B10);
    v4 = swift_allocObject(v3, 40, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v4 + 32) = v1;
    v20 = v4;
    specialized Array._endMutation()(v4);
    *(_QWORD *)(v0 + 136) = v20;
    v5 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:) + 1);
    v19 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    v6 = v1;
    v7 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 144) = v7;
    *v7 = v0;
    v7[1] = sub_10019A2AC;
    return v19(v20);
  }
  else
  {
    v9 = *(void (**)(id))(v0 + 96);
    if (v9)
    {
      if (qword_101491060 != -1)
        swift_once(&qword_101491060, sub_10019A784);
      v10 = unk_10149E760;
      v11 = sub_100008B04(&qword_10149BAF0);
      inited = swift_initStackObject(v11, v0 + 16);
      *(_OWORD *)(inited + 16) = xmmword_100E22F40;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
      *(_QWORD *)(inited + 40) = v13;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = 0xD000000000000012;
      *(_QWORD *)(inited + 56) = 0x8000000100E4E7C0;
      swift_bridgeObjectRetain(v10);
      v14 = sub_100009624(inited);
      v15 = objc_allocWithZone((Class)NSError);
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v18 = objc_msgSend(v15, "initWithDomain:code:userInfo:", v16, -1, isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

      v9(v18);
    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10019A2AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10019B448;
  }
  else
  {
    v5 = *(void **)(v2 + 128);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 136));

    v4 = sub_10019B460;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10019A464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;

  v6[2] = a5;
  v6[3] = a6;
  v7 = (_QWORD *)swift_task_alloc(dword_10149E7BC);
  v6[4] = v7;
  *v7 = v6;
  v7[1] = sub_10019A4C0;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_10019A4C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  *(_QWORD *)(*(_QWORD *)v1 + 40) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10019A51C, 0, 0);
}

uint64_t sub_10019A51C()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, _QWORD);
  char v3;
  char v4;

  v1 = *(void **)(v0 + 40);
  v2 = *(void (**)(_QWORD, _QWORD))(v0 + 16);
  if (v1)
  {
    if (v2)
    {
      v3 = dispatch thunk of ServerEvaluationStatus.rapStatus.getter();
      v4 = dispatch thunk of ServerEvaluationStatus.reliabilityStatus.getter();
      v2(v3 & 1, v4 & 1);
    }

  }
  else if (v2)
  {
    v2(0, 0);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10019A6D8()
{
  return sub_10019B360(56);
}

uint64_t sub_10019A6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc(dword_10149E7AC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DD08;
  v4[2] = v2;
  v4[3] = v3;
  v5 = (_QWORD *)swift_task_alloc(dword_10149E7BC);
  v4[4] = v5;
  *v5 = v4;
  v5[1] = sub_10019A4C0;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_10019A768(char a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 + 16) + 16))(*(_QWORD *)(v2 + 16), a1 & 1, a2 & 1);
}

void sub_10019A784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for ServerEvaluationStatusMapsSync();
  v0 = sub_100008B04(&qword_10149E7C0);
  v1 = String.init<A>(describing:)(&v5, v0);
  v3 = v2;
  v5 = v1;
  v6 = v2;
  swift_bridgeObjectRetain(v2);
  v4._countAndFlagsBits = 0x6D6F44726F727245;
  v4._object = (void *)0xEB000000006E6961;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  qword_10149E758 = v5;
  unk_10149E760 = v6;
}

uint64_t sub_10019A810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for Logger(0);
  sub_10000E930(v0, qword_10149E768);
  sub_10000E918(v0, (uint64_t)qword_10149E768);
  v5 = type metadata accessor for ServerEvaluationStatusMapsSync();
  v1 = sub_100008B04(&qword_10149E7C0);
  v2 = String.init<A>(describing:)(&v5, v1);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEE007370614D2E65, v2, v3);
}

uint64_t sub_10019A8AC()
{
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_10019A8C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  uint64_t (*v13)(void *);

  v1 = sub_100008B04((uint64_t *)&unk_101493B10);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E23F50;
  v3 = objc_allocWithZone((Class)NSSortDescriptor);
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "initWithKey:ascending:", v4, 0);

  *(_QWORD *)(v2 + 32) = v5;
  specialized Array._endMutation()(v6);
  v7 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
  v8 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(0, v2, 0);
  v0[4] = v8;
  type metadata accessor for ServerEvaluationStatusRequest(0);
  v0[5] = ServerEvaluationStatusRequest.__allocating_init()();
  v9 = *((unsigned int *)&async function pointer to dispatch thunk of ServerEvaluationStatusRequest.fetch(options:) + 1);
  v13 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of ServerEvaluationStatusRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of ServerEvaluationStatusRequest.fetch(options:));
  v10 = v8;
  v11 = (_QWORD *)swift_task_alloc(v9);
  v0[6] = v11;
  *v11 = v0;
  v11[1] = sub_10019A9FC;
  return v13(v8);
}

uint64_t sub_10019A9FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 48);
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10019AE20;
  }
  else
  {
    v6 = *(void **)(v3 + 40);

    v5 = sub_10019AA74;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_10019AA74()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);

  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = (unint64_t)v1 >> 62;
  if (!((unint64_t)v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (v3)
      goto LABEL_3;
LABEL_10:
    v4 = 0;
    goto LABEL_11;
  }
  if (v1 < 0)
    v5 = v1;
  else
    v5 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v1, 2);
  v6 = _CocoaArrayWrapper.endIndex.getter(v5);
  swift_bridgeObjectRelease(v1);
  if (!v6)
    goto LABEL_10;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 56));
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_28;
    }
    v4 = *(id *)(*(_QWORD *)(v0 + 56) + 32);
  }
LABEL_11:
  *(_QWORD *)(v0 + 72) = v4;
  v7 = *(_QWORD *)(v0 + 56);
  if (!v2)
  {
    v8 = v1 & 0xFFFFFFFFFFFFFF8;
    v9 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    if (v9 <= 1)
    {
LABEL_25:
      v18 = *(void **)(v0 + 32);
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

      (*(void (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
      return;
    }
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_21;
    __break(1u);
  }
  if (v1 < 0)
    v11 = v7;
  else
    v11 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v12 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease_n(v7, 2);
  if (v12 < 2)
    goto LABEL_25;
  v13 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain(v13);
  v14 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v13);
  if (!v14)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v15 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain(v15);
  v8 = _CocoaArrayWrapper.endIndex.getter(v11);
  swift_bridgeObjectRelease(v15);
  if (!v8)
  {
    __break(1u);
    goto LABEL_43;
  }
LABEL_21:
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    v16 = *(id *)(*(_QWORD *)(v0 + 56) + 32);
    if (!v2)
      goto LABEL_24;
    goto LABEL_29;
  }
LABEL_28:
  v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 56));
  if (!v2)
  {
LABEL_24:
    v17 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_33;
  }
LABEL_29:
  v19 = *(_QWORD *)(v0 + 56);
  if (v1 < 0)
    v20 = *(_QWORD *)(v0 + 56);
  else
    v20 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  v17 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v19);
LABEL_33:
  if (v17)
  {
    sub_10020E88C(0, 1);

    type metadata accessor for MapsSyncStore(0);
    *(_QWORD *)(v0 + 80) = static MapsSyncStore.sharedStore.getter();
    v8 = *(_QWORD *)(v0 + 16);
    if (!((unint64_t)v8 >> 62))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v21);
      type metadata accessor for MapsSyncObject(0, v22);
      v23 = v8;
LABEL_36:
      *(_QWORD *)(v0 + 88) = v23;
      swift_bridgeObjectRelease(v8);
      v27 = (void (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                         + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
      v24 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                       + 1));
      *(_QWORD *)(v0 + 96) = v24;
      *v24 = v0;
      v24[1] = sub_10019AD7C;
      v27(v23);
      return;
    }
LABEL_38:
    if (v8 < 0)
      v25 = v8;
    else
      v25 = v8 & 0xFFFFFFFFFFFFFF8;
    v26 = type metadata accessor for MapsSyncObject(0, v10);
    swift_bridgeObjectRetain(v8);
    v23 = _bridgeCocoaArray<A>(_:)(v25, v26);
    swift_bridgeObjectRelease(v8);
    goto LABEL_36;
  }
LABEL_44:
  __break(1u);
}

uint64_t sub_10019AD7C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_QWORD *)(*v1 + 104) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10019B008;
  }
  else
  {
    v5 = *(void **)(v2 + 80);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 88));

    v4 = sub_10019ADEC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10019ADEC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 72));
}

uint64_t sub_10019AE20()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *log;

  v1 = *(void **)(v0 + 40);

  v2 = *(_QWORD *)(v0 + 64);
  if (qword_101491068 != -1)
    swift_once(&qword_101491068, sub_10019A810);
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_10149E768);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    log = v5;
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    swift_errorRetain(v2);
    v9 = _swift_stdlib_bridgeErrorToNSError(v2);
    *(_QWORD *)(v0 + 24) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v7 + 4, v7 + 12);
    *v8 = v9;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "FetchEvaluationStatus Error:%@", v7, 0xCu);
    v10 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v2);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10019B008()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *log;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(void **)(v0 + 72);

  swift_bridgeObjectRelease(v2);
  v4 = *(_QWORD *)(v0 + 104);

  if (qword_101491068 != -1)
    swift_once(&qword_101491068, sub_10019A810);
  v5 = type metadata accessor for Logger(0);
  sub_10000E918(v5, (uint64_t)qword_10149E768);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    log = v7;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v4);
    v11 = _swift_stdlib_bridgeErrorToNSError(v4);
    *(_QWORD *)(v0 + 24) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, log, v8, "FetchEvaluationStatus Error:%@", v9, 0xCu);
    v12 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10019B1FC()
{
  return sub_10019B360(58);
}

uint64_t sub_10019B204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 56);
  v5 = *(_BYTE *)(v0 + 57);
  v6 = swift_task_alloc(dword_10149E7CC);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_10000DD08;
  *(_BYTE *)(v6 + 161) = v5;
  *(_BYTE *)(v6 + 160) = v4;
  *(_QWORD *)(v6 + 96) = v2;
  *(_QWORD *)(v6 + 104) = v3;
  v7 = (uint64_t *)swift_task_alloc(dword_10149E7BC);
  *(_QWORD *)(v6 + 112) = v7;
  *v7 = v6;
  v7[1] = (uint64_t)sub_100199FFC;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_10019B2A4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019B2C8()
{
  return sub_10019B360(56);
}

uint64_t sub_10019B2D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (_QWORD *)swift_task_alloc(dword_10149E7DC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DD08;
  v4[2] = v2;
  v4[3] = v3;
  v5 = (_QWORD *)swift_task_alloc(dword_10149E7BC);
  v4[4] = v5;
  *v5 = v4;
  v5[1] = sub_100199D80;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

uint64_t sub_10019B358()
{
  return sub_10019B360(58);
}

uint64_t sub_10019B360(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectRelease(*(_QWORD *)(v1 + 16));

  if (*(_QWORD *)(v1 + 40))
    swift_release(*(_QWORD *)(v1 + 48));
  return swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10019B3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_BYTE *)(v0 + 56);
  v5 = *(_BYTE *)(v0 + 57);
  v6 = swift_task_alloc(dword_10149E7EC);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_10000C0E0;
  *(_BYTE *)(v6 + 161) = v5;
  *(_BYTE *)(v6 + 160) = v4;
  *(_QWORD *)(v6 + 96) = v2;
  *(_QWORD *)(v6 + 104) = v3;
  v7 = (uint64_t *)swift_task_alloc(dword_10149E7BC);
  *(_QWORD *)(v6 + 112) = v7;
  *v7 = v6;
  v7[1] = (uint64_t)sub_100199804;
  return swift_task_switch(sub_10019A8C0, 0, 0);
}

void sub_10019B464(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

double sub_10019B4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, __n128);
  uint64_t v4;
  __n128 v5;
  double result;

  v2 = a2;
  v3 = *(void (**)(uint64_t, __n128))(a1 + 32);
  if (a2)
  {
    v4 = sub_10000E4BC(0, &qword_10149E858, &off_101197E38);
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v4);
  }
  v5 = swift_retain();
  v3(v2, v5);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

id sub_10019B534()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FeedbackCommunityIDManager()), "init");
  qword_1014D4F00 = (uint64_t)result;
  return result;
}

id sub_10019B618()
{
  return sub_1000227F8(type metadata accessor for FeedbackCommunityIDManager.Result);
}

id sub_10019B6D4()
{
  return sub_1000227F8(type metadata accessor for FeedbackCommunityIDManager);
}

uint64_t type metadata accessor for FeedbackCommunityIDManager()
{
  return objc_opt_self(_TtC4Maps26FeedbackCommunityIDManager);
}

uint64_t type metadata accessor for FeedbackCommunityIDManager.Result()
{
  return objc_opt_self(FeedbackCommunityIDManagerResult);
}

double sub_10019B730(char a1, id a2, void (*a3)(id, _QWORD), uint64_t a4, uint64_t a5, char a6)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  uint64_t *v15;
  id v16;
  double result;
  objc_super v18;

  if ((a1 & 1) == 0 || !a2)
    goto LABEL_7;
  v9 = objc_msgSend(a2, "communityIdentifier");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  if (String.count.getter(v10, v12) < 1)
  {
    swift_bridgeObjectRelease(v12);
LABEL_7:
    sub_10019B84C(1, a6 & 1, (uint64_t)a3, a4);
    return result;
  }
  if (a3)
  {
    v13 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
    v14 = (char *)objc_allocWithZone(v13);
    v15 = (uint64_t *)&v14[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
    *v15 = v10;
    v15[1] = v12;
    v18.receiver = v14;
    v18.super_class = v13;
    v16 = objc_msgSendSuper2(&v18, "init");
    a3(v16, 0);

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_10019B84C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD v17[6];

  v5 = v4;
  v10 = swift_allocObject(&unk_1011A7FB8, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = swift_allocObject(&unk_1011A8030, 41, 7);
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  *(_QWORD *)(v11 + 32) = v10;
  *(_BYTE *)(v11 + 40) = a2;
  v12 = *(void **)(v5 + OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache);
  v13 = swift_allocObject(&unk_1011A7FB8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = (_QWORD *)swift_allocObject(&unk_1011A8058, 48, 7);
  v14[2] = sub_10019C368;
  v14[3] = v11;
  v14[4] = v13;
  v14[5] = a1;
  v17[4] = sub_10019CAA4;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10019CAB0;
  v17[3] = &unk_1011A8070;
  v15 = _Block_copy(v17);
  sub_10000C128(a3, a4);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, "fetchAllAvailableCommunityIDsWithCompletion:", v15);
  _Block_release(v15);
  swift_release();
  return swift_release();
}

void sub_10019BB70(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  void *v6;
  NSString v7;
  _QWORD v8[6];

  v6 = a3;
  if (!a2)
  {
    v7 = 0;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = String._bridgeToObjectiveC()();
  if (v6)
  {
LABEL_3:
    v8[4] = v6;
    v8[5] = a4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1000142F0;
    v8[3] = &unk_1011A8110;
    v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
LABEL_4:
  objc_msgSend(v4, "fetchAuthenticationInfoForRAPReportWithReportID:shouldIncreaseCount:completion:", v7, 1, v6);
  _Block_release(v6);

}

void sub_10019BCF4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  if (a2)
  {
    v8 = (void *)objc_opt_self(RAPRecordManager);
    v9 = String._bridgeToObjectiveC()();
    v10 = swift_allocObject(&unk_1011A7FB8, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = swift_allocObject(&unk_1011A7FE0, 48, 7);
    *(_QWORD *)(v11 + 16) = v10;
    *(_BYTE *)(v11 + 24) = a3 & 1;
    *(_QWORD *)(v11 + 32) = a4;
    *(_QWORD *)(v11 + 40) = a5;
    v13[4] = sub_10019C190;
    v13[5] = v11;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_10019B4C4;
    v13[3] = &unk_1011A7FF8;
    v12 = _Block_copy(v13);
    sub_10000C128(a4, a5);
    swift_release();
    objc_msgSend(v8, "fetchRAPRecordsMatchingProblemId:completion:", v9, v12);
    _Block_release(v12);

  }
  else
  {
    sub_10019B84C(0, a3 & 1, a4, a5);
  }
}

void sub_10019BE58(uint64_t a1, uint64_t a2, char a3, void (*a4)(id, _QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  uint64_t *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t Strong;
  void *v30;
  id v31;
  objc_super v32;
  char v33[24];

  if (!a1)
    goto LABEL_17;
  v10 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v27 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v27 = a1;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v27))
      goto LABEL_4;
LABEL_16:
    swift_bridgeObjectRelease(a1);
    goto LABEL_17;
  }
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v11)
    goto LABEL_16;
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)(v10 + 16))
    {
      __break(1u);
      return;
    }
    v12 = *(id *)(a1 + 32);
  }
  v31 = v12;
  v13 = objc_msgSend(v12, "communityIdentifier", swift_bridgeObjectRelease(a1).n128_f64[0]);
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = String.count.getter(v14, v16);
  *(_QWORD *)&v18 = swift_bridgeObjectRelease(v16).n128_u64[0];
  if (v17 >= 1)
  {
    if (a4)
    {
      v19 = objc_msgSend(v31, "communityIdentifier", v18);
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v23 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
      v24 = (char *)objc_allocWithZone(v23);
      v25 = (uint64_t *)&v24[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
      *v25 = v20;
      v25[1] = v22;
      v32.receiver = v24;
      v32.super_class = v23;
      v26 = objc_msgSendSuper2(&v32, "init");
      a4(v26, 0);

    }
    else
    {

    }
    return;
  }

LABEL_17:
  v28 = a2 + 16;
  swift_beginAccess(v28, v33, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v28);
  if (Strong)
  {
    v30 = (void *)Strong;
    sub_10019B84C(0, a3 & 1, (uint64_t)a4, a5);

  }
}

uint64_t sub_10019C114()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019C138()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019C15C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10019C190(uint64_t a1)
{
  uint64_t v1;

  sub_10019BE58(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(void (**)(id, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

double sub_10019C1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10019C1B0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10019C1B8(void *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t Strong;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  char *v19;
  char *v20;
  id v21;
  objc_super v22;
  _BYTE v23[24];

  if (a2)
  {
    if (a3)
LABEL_3:
      a3(0);
  }
  else
  {
    v10 = a5 + 16;
    swift_beginAccess(a5 + 16, v23, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v10);
    if (Strong)
    {
      v12 = (char *)Strong;
      if (a1)
      {
        v13 = a1;
        v14 = dispatch thunk of CommunityID.communityIdentifier.getter();
        if (v15)
        {
          v16 = v14;
          v17 = v15;
          if ((sub_10019C4D0((uint64_t)v13) & 1) != 0)
          {
            if ((a6 & 1) != 0)
              objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache], "increaseUsedCountWithMsCommunityID:completion:", v13, 0);
            if (a3)
            {
              v18 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
              v19 = (char *)objc_allocWithZone(v18);
              v20 = &v19[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
              *(_QWORD *)v20 = v16;
              *((_QWORD *)v20 + 1) = v17;
              v22.receiver = v19;
              v22.super_class = v18;
              v21 = objc_msgSendSuper2(&v22, "init");
              ((void (*)(id, _QWORD))a3)(v21, 0);

            }
            else
            {

              swift_bridgeObjectRelease(v17);
            }
            return;
          }

          swift_bridgeObjectRelease(v17);
        }
        else
        {

        }
      }
      sub_10019C378((uint64_t)a3, a4);

      return;
    }
    if (a3)
      goto LABEL_3;
  }
}

uint64_t sub_10019C334()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 41, 7);
}

void sub_10019C368(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10019C1B8(a1, a2, *(void (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

void sub_10019C378(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSString v16;
  _QWORD *v17;
  void *v18;
  _QWORD aBlock[6];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = UUID.init()(v10);
  v12 = UUID.uuidString.getter(v11);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = *(void **)(v3 + OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache);
  v16 = String._bridgeToObjectiveC()();
  v17 = (_QWORD *)swift_allocObject(&unk_1011A80A8, 48, 7);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = v12;
  v17[5] = v14;
  aBlock[4] = sub_10019CC44;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10019CAB0;
  aBlock[3] = &unk_1011A80C0;
  v18 = _Block_copy(aBlock);
  sub_10000C128(a1, a2);
  swift_release();
  objc_msgSend(v15, "storeCommunityIDWithIdentifier:completion:", v16, v18);
  _Block_release(v18);

}

uint64_t sub_10019C4D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  double v20;
  uint64_t v22;
  unint64_t UInteger;
  uint64_t v24;

  v2 = v1;
  v4 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v24 - v13;
  dispatch thunk of MapsSyncObject.createTime.getter(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10019CB2C((uint64_t)v6);
  }
  else
  {
    v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v14, v6, v7);
    v16 = static Date.now.getter(v15);
    v17 = Date.timeIntervalSince1970.getter(v16);
    v18 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    v19 = v18(v10, v7);
    v20 = v17 - Date.timeIntervalSince1970.getter(v19);
    if (v20 < GEOConfigGetDouble(MapsConfig_RAPCommunityIDRolloverMinTime, off_1014B4CD8)
      || GEOConfigGetDouble(MapsConfig_RAPCommunityIDRolloverMaxTime, off_1014B4CE8) >= v20
      && ((v22 = dispatch thunk of CommunityID.usedCount.getter(),
           UInteger = GEOConfigGetUInteger(MapsConfig_RAPCommunityIDSubmissionMaxCount, off_1014B4CF8),
           v22 < 1)
       || UInteger >= v22))
    {
      v18(v14, v7);
      return 1;
    }
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC4Maps26FeedbackCommunityIDManager_syncCache), "setExpiredWithMsCommunityID:completion:", a1, 0);
    v18(v14, v7);
  }
  return 0;
}

void sub_10019C6C4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  if (a2
    || (v10 = a5 + 16, swift_beginAccess(a5 + 16, v35, 0, 0), (Strong = swift_unknownObjectWeakLoadStrong(v10)) == 0))
  {
    a3(0);
    return;
  }
  v12 = (void *)Strong;
  if (!a1)
  {
    ((void (*)(_QWORD, _QWORD))a3)(0, 0);

    return;
  }
  if (!a6)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        a6 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        a6 = a1;
      swift_bridgeObjectRetain(a1);
      v23 = _CocoaArrayWrapper.endIndex.getter(a6);
      if (!v23)
        goto LABEL_41;
    }
    else
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (!v23)
      {
LABEL_41:
        swift_bridgeObjectRelease(a1);
        goto LABEL_42;
      }
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    }
    else
    {
      if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_81;
      }
      v24 = *(id *)(a1 + 32);
    }
    v6 = v24;
    a6 = dispatch thunk of CommunityID.fetchRapRecords()();
    if (!((unint64_t)a6 >> 62))
    {
      v25 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_39;
    }
LABEL_81:
    if (a6 < 0)
      v33 = a6;
    else
      v33 = a6 & 0xFFFFFFFFFFFFFF8;
    v25 = _CocoaArrayWrapper.endIndex.getter(v33);
LABEL_39:
    swift_bridgeObjectRelease(a6);
    if (v25)
    {

      if (v23 == 1)
        goto LABEL_41;
      v13 = 5;
      while (1)
      {
        v26 = v13 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a1);
        }
        else
        {
          if (v26 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_62;
          v27 = *(id *)(a1 + 8 * v13);
        }
        v6 = v27;
        v28 = v13 - 3;
        if (__OFADD__(v26, 1))
          goto LABEL_60;
        v29 = dispatch thunk of CommunityID.fetchRapRecords()();
        v30 = v29;
        if ((unint64_t)v29 >> 62)
        {
          if (v29 >= 0)
            v29 &= 0xFFFFFFFFFFFFFF8uLL;
          v31 = _CocoaArrayWrapper.endIndex.getter(v29);
        }
        else
        {
          v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v30);
        if (!v31)
          break;

        ++v13;
        if (v28 == v23)
          goto LABEL_41;
      }
    }
LABEL_57:
    swift_bridgeObjectRelease(a1);
    goto LABEL_58;
  }
  if (a6 == 1)
  {
    v13 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)a1 >> 62)
      goto LABEL_63;
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v14)
    {
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)(v13 + 16))
          {
            __break(1u);
LABEL_75:
            if (a6 < 0)
              v32 = a6;
            else
              v32 = a6 & 0xFFFFFFFFFFFFFF8;
            v16 = _CocoaArrayWrapper.endIndex.getter(v32);
            goto LABEL_14;
          }
          v15 = *(id *)(a1 + 32);
        }
        v6 = v15;
        a6 = dispatch thunk of CommunityID.fetchRapRecords()();
        if ((unint64_t)a6 >> 62)
          goto LABEL_75;
        v16 = *(_QWORD *)((a6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
        swift_bridgeObjectRelease(a6);
        if (!v16)
          goto LABEL_57;
        v34 = v13;

        if (v14 != 1)
        {
          v13 = 5;
          while (1)
          {
            v17 = v13 - 4;
            if ((a1 & 0xC000000000000001) != 0)
            {
              v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13 - 4, a1);
            }
            else
            {
              if (v17 >= *(_QWORD *)(v34 + 16))
                goto LABEL_61;
              v18 = *(id *)(a1 + 8 * v13);
            }
            v6 = v18;
            v19 = v13 - 3;
            if (__OFADD__(v17, 1))
              break;
            v20 = dispatch thunk of CommunityID.fetchRapRecords()();
            v21 = v20;
            if ((unint64_t)v20 >> 62)
            {
              if (v20 >= 0)
                v20 &= 0xFFFFFFFFFFFFFF8uLL;
              v22 = _CocoaArrayWrapper.endIndex.getter(v20);
            }
            else
            {
              v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease(v21);
            if (!v22)
              goto LABEL_57;

            ++v13;
            if (v19 == v14)
              goto LABEL_41;
          }
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          a6 = a1 >= 0 ? v13 : a1;
          swift_bridgeObjectRetain(a1);
          v14 = _CocoaArrayWrapper.endIndex.getter(a6);
          if (v14)
            continue;
        }
        goto LABEL_41;
      }
    }
    goto LABEL_41;
  }
LABEL_42:
  v6 = 0;
LABEL_58:
  ((void (*)(void *, _QWORD))a3)(v6, 0);

}

uint64_t sub_10019CA78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10019CAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10019C6C4(a1, a2, *(void (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10019CAB0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = type metadata accessor for CommunityID(0);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_10019CB2C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008B04((uint64_t *)&unk_10149E140);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10019CB6C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v9;
  char *v10;
  char *v11;
  double v12;
  id v13;
  objc_super v14;

  if (a2)
  {
    if (a3)
      a3(0);
  }
  else if (a3)
  {
    v9 = (objc_class *)type metadata accessor for FeedbackCommunityIDManager.Result();
    v10 = (char *)objc_allocWithZone(v9);
    v11 = &v10[OBJC_IVAR___FeedbackCommunityIDManagerResult_anonymousId];
    *(_QWORD *)v11 = a5;
    *((_QWORD *)v11 + 1) = a6;
    v14.receiver = v10;
    v14.super_class = v9;
    *(_QWORD *)&v12 = swift_bridgeObjectRetain(a6).n128_u64[0];
    v13 = objc_msgSendSuper2(&v14, "init", v12);
    ((void (*)(id, _QWORD))a3)(v13, 0);

  }
}

uint64_t sub_10019CC10()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10019CC44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10019CB6C(a1, a2, *(void (**)(_QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_10019CC50()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 41, 7);
}

double sub_10019CC84(char a1, void *a2)
{
  uint64_t v2;

  return sub_10019B730(a1, a2, *(void (**)(id, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40));
}

uint64_t sub_10019CCBC()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_100008B04(&qword_10149C128);
  sub_10000E930(v0, qword_1014D4F08);
  sub_10000E918(v0, (uint64_t)qword_1014D4F08);
  v1 = sub_10019D218();
  return UICollectionView.CellRegistration.init(handler:)(sub_10019CD2C, 0, v1, &type metadata for HomeListFooterCellModel);
}

void sub_10019CD2C(void *a1, uint64_t a2, double *a3)
{
  id v5;
  uint64_t Strong;
  uint64_t v7;
  __objc2_prot *v8;

  v5 = objc_msgSend(objc_allocWithZone((Class)HomeActionFooterViewModel), "init");
  objc_msgSend(v5, "setTopMargin:", *a3);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + 1);
  if (!Strong)
    goto LABEL_4;
  v8 = &OBJC_PROTOCOL___HomeActionFooterViewDelegate;
  v7 = swift_dynamicCastObjCProtocolConditional(Strong, 1, &v8);
  if (!v7)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Maps/HashableWrappers.swift", 27, 2, 83, 0);
    __break(1u);
LABEL_4:
    v7 = 0;
  }
  objc_msgSend(v5, "setDelegate:", v7);
  swift_unknownObjectRelease(v7);
  objc_msgSend(a1, "setViewModel:", v5);

}

Swift::Int sub_10019CE28()
{
  Swift::UInt64 *v0;
  Swift::UInt64 *v1;
  Swift::UInt64 v2;
  uint64_t Strong;
  Swift::UInt v4;
  Swift::UInt v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD v11[2];
  uint64_t v12;
  _QWORD v13[9];

  Hasher.init(_seed:)(v13, 0);
  v1 = v0 + 1;
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v0;
  else
    v2 = 0;
  Hasher._combine(_:)(v2);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong
    && (v7 = Strong,
        (swift_dynamicCast(&v8, &v7, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for AnyHashable, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v9 + 1))
    {
      v11[0] = v8;
      v11[1] = v9;
      v12 = v10;
      AnyHashable.hash(into:)(v13);
      sub_100012C48((uint64_t)v11);
      return Hasher._finalize()();
    }
  }
  else
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
  }
  sub_100012C08((uint64_t)&v8);
  v4 = swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    v5 = v4;
    Hasher._combine(_:)(v4);
    swift_unknownObjectRelease(v5);
  }
  return Hasher._finalize()();
}

uint64_t sub_10019CF0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101491078 != -1)
    swift_once(&qword_101491078, sub_10019CCBC);
  v2 = sub_100008B04(&qword_10149C128);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4F08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

Swift::UInt sub_10019CF84(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 *v3;
  Swift::UInt64 v4;
  uint64_t Strong;
  Swift::UInt result;
  Swift::UInt v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  v3 = v1 + 1;
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v4 = *v1;
  else
    v4 = 0;
  Hasher._combine(_:)(v4);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong
    && (v8 = Strong,
        (swift_dynamicCast(&v9, &v8, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for AnyHashable, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v10 + 1))
    {
      v12[0] = v9;
      v12[1] = v10;
      v13 = v11;
      AnyHashable.hash(into:)(a1);
      return sub_100012C48((uint64_t)v12);
    }
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
  }
  sub_100012C08((uint64_t)&v9);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v7 = result;
    Hasher._combine(_:)(result);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

Swift::Int sub_10019D064(uint64_t a1)
{
  Swift::UInt64 *v1;
  Swift::UInt64 *v2;
  Swift::UInt64 v3;
  uint64_t Strong;
  Swift::UInt v5;
  Swift::UInt v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;
  _QWORD v14[9];

  Hasher.init(_seed:)(v14, a1);
  v2 = v1 + 1;
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v3 = *v1;
  else
    v3 = 0;
  Hasher._combine(_:)(v3);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong
    && (v8 = Strong,
        (swift_dynamicCast(&v9, &v8, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for AnyHashable, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v10 + 1))
    {
      v12[0] = v9;
      v12[1] = v10;
      v13 = v11;
      AnyHashable.hash(into:)(v14);
      sub_100012C48((uint64_t)v12);
      return Hasher._finalize()();
    }
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
  }
  sub_100012C08((uint64_t)&v9);
  v5 = swift_unknownObjectWeakLoadStrong(v2);
  if (v5)
  {
    v6 = v5;
    Hasher._combine(_:)(v5);
    swift_unknownObjectRelease(v6);
  }
  return Hasher._finalize()();
}

uint64_t sub_10019D144(double *a1, double *a2)
{
  if (*a1 == *a2)
    return sub_100012C7C(a1 + 1, a2 + 1);
  else
    return 0;
}

unint64_t sub_10019D16C()
{
  unint64_t result;

  result = qword_10149E860;
  if (!qword_10149E860)
  {
    result = swift_getWitnessTable("an7", &type metadata for HomeListFooterCellModel);
    atomic_store(result, (unint64_t *)&qword_10149E860);
  }
  return result;
}

unint64_t sub_10019D1B0(uint64_t a1)
{
  unint64_t result;

  result = sub_10019D1D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10019D1D4()
{
  unint64_t result;

  result = qword_10149E8A0;
  if (!qword_10149E8A0)
  {
    result = swift_getWitnessTable("In7", &type metadata for HomeListFooterCellModel);
    atomic_store(result, (unint64_t *)&qword_10149E8A0);
  }
  return result;
}

unint64_t sub_10019D218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149E8B0;
  if (!qword_10149E8B0)
  {
    v1 = objc_opt_self(HomeActionFooterCell);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10149E8B0);
  }
  return result;
}

uint64_t destroy for HomeListFooterCellModel(uint64_t a1)
{
  return swift_unknownObjectWeakDestroy(a1 + 8);
}

_QWORD *initializeWithCopy for HomeListFooterCellModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyInit(a1 + 1, a2 + 1);
  return a1;
}

_QWORD *assignWithCopy for HomeListFooterCellModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyAssign(a1 + 1, a2 + 1);
  return a1;
}

_QWORD *assignWithTake for HomeListFooterCellModel(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeAssign(a1 + 1, a2 + 1);
  return a1;
}

ValueMetadata *type metadata accessor for HomeListFooterCellModel()
{
  return &type metadata for HomeListFooterCellModel;
}

void sub_10019D368(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t KeyPath;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - v15;
  if (a1)
  {
    v17 = qword_101490EA8;
    v18 = a1;
    if (v17 != -1)
      swift_once(&qword_101490EA8, sub_1001147B8);
    v19 = type metadata accessor for Logger(0);
    sub_10000E918(v19, (uint64_t)qword_1014D4B08);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a5, v10);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(12, -1);
      v47 = v18;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v50 = v25;
      v48 = a6;
      *(_DWORD *)v24 = 136315138;
      v26 = URL.absoluteString.getter();
      v28 = v27;
      v49 = sub_1000C28FC(v26, v27, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v28);
      a6 = v48;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "[Place Summary] Finished fetching image at url %s.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      v29 = v24;
      v18 = v47;
      swift_slowDealloc(v29, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }

    v39 = v18;
    v40 = Image.init(uiImage:)(v39);
    KeyPath = swift_getKeyPath(&unk_100E31588);
    v42 = swift_getKeyPath(&unk_100E315B0);
    v50 = v40;
    swift_retain();
    static Published.subscript.setter(&v50, a6, KeyPath, v42);

  }
  else
  {
    if (qword_101490EA8 != -1)
      swift_once(&qword_101490EA8, sub_1001147B8);
    v30 = type metadata accessor for Logger(0);
    sub_10000E918(v30, (uint64_t)qword_1014D4B08);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, a5, v10);
    swift_errorRetain(a4);
    v31 = swift_errorRetain(a4);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc(22, -1);
      v47 = (uint64_t *)swift_slowAlloc(8, -1);
      v48 = swift_slowAlloc(32, -1);
      v50 = v48;
      *(_DWORD *)v34 = 136315394;
      v35 = URL.absoluteString.getter();
      v37 = v36;
      v49 = sub_1000C28FC(v35, v36, &v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v34 + 4, v34 + 12);
      swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      *(_WORD *)(v34 + 12) = 2112;
      if (a4)
      {
        swift_errorRetain(a4);
        v38 = _swift_stdlib_bridgeErrorToNSError(a4);
        v49 = v38;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v34 + 14, v34 + 22);
      }
      else
      {
        v49 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v34 + 14, v34 + 22);
        v38 = 0;
      }
      v43 = v47;
      *v47 = v38;
      swift_errorRelease(a4);
      swift_errorRelease(a4);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "[Place Summary] Couldn't fetch image at url: %s, error:%@", (uint8_t *)v34, 0x16u);
      v44 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v43, 1, v44);
      swift_slowDealloc(v43, -1, -1);
      v45 = v48;
      swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      swift_errorRelease(a4);
      swift_errorRelease(a4);
    }

  }
}

void sub_10019D860(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t, void *);
  id v11;
  id v12;

  v10 = *(void (**)(void *, uint64_t, uint64_t, void *))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  swift_retain(v9);
  v12 = a2;
  v11 = a5;
  v10(a2, a3, a4, a5);
  swift_release(v9);

}

void sub_10019D8EC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  __n128 v29;
  void *v30;
  _BOOL8 v31;
  id v32;
  double v33;
  double v34;
  id v35;
  Class isa;
  id v37;
  id v38;
  void *v39;
  _QWORD aBlock[6];

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04((uint64_t *)&unk_10149AA90);
  *(_QWORD *)&v9 = __chkstk_darwin(v8).n128_u64[0];
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = a1;
    v13 = Image.init(uiImage:)(v12);
    KeyPath = swift_getKeyPath(&unk_100E314A0);
    v15 = swift_getKeyPath(&unk_100E314C8);
    aBlock[0] = v13;
    swift_retain();
    static Published.subscript.setter(aBlock, a2, KeyPath, v15);
    v16 = swift_getKeyPath(&unk_100E314E8);
    v17 = swift_getKeyPath(&unk_100E31510);
    LOBYTE(aBlock[0]) = 1;
    swift_retain();
    static Published.subscript.setter(aBlock, a2, v16, v17);

  }
  v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                              + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem), "_geoMapItem", v9));
  if (!v18)
  {
    __break(1u);
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
    goto LABEL_11;
  }
  v19 = v18;
  v20 = sub_10000E4BC(0, &qword_10149E8F8, GEORouteBuilder_PlaceDataCuratedHike_ptr);
  v21 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v20)), "initWithMapItem:", v19);
  swift_unknownObjectRelease(v19);
  v22 = objc_msgSend(v21, "buildRoute");
  if (!v22)
  {
LABEL_8:

    return;
  }
  v23 = v22;
  v24 = (void *)objc_opt_self(UIScreen);
  v25 = objc_msgSend(v24, "mainScreen");
  v26 = objc_msgSend(v25, "traitCollection");

  v27 = objc_msgSend(v26, "userInterfaceStyle");
  v28 = objc_msgSend(v23, "uniqueRouteID");
  if (!v28)
    goto LABEL_10;
  v30 = v28;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v7, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
  {
    v31 = v27 == (id)2;
    v32 = objc_msgSend(v24, "mainScreen");
    objc_msgSend(v32, "scale");
    v34 = v33;

    v35 = objc_allocWithZone((Class)MURouteSnapshotKey);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    v37 = objc_msgSend(v35, "initWithIdentifier:width:height:scale:padding:darkMode:", isa, v31, 100.0, 100.0, v34, 10.0, 10.0, 10.0, 10.0);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    v38 = objc_msgSend((id)objc_opt_self(MURouteSnapshotManager), "sharedInstance");
    aBlock[4] = sub_1001A2A18;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10019DDF4;
    aBlock[3] = &unk_1011A8298;
    v39 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v38, "getSnapshotForKey:route:completion:", v37, v23, v39);
    _Block_release(v39);

    v21 = v38;
    goto LABEL_8;
  }
LABEL_11:
  __break(1u);
}

void sub_10019DD18(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a2)
  {
    if (!a1)
    {
      KeyPath = swift_getKeyPath(&unk_100E314E8);
      v6 = swift_getKeyPath(&unk_100E31510);
      v13 = 0;
      v7 = a2;
      swift_retain(a3);
      static Published.subscript.setter(&v13, a3, KeyPath, v6);
      v8 = v7;
      v9 = Image.init(uiImage:)(v8);
      v10 = swift_getKeyPath(&unk_100E314A0);
      v11 = swift_getKeyPath(&unk_100E314C8);
      v12 = v9;
      swift_retain(a3);
      static Published.subscript.setter(&v12, a3, v10, v11);

    }
  }
}

void sub_10019DDF4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  v8 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_10019DE68(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    v4 = a1;
  }
  else
  {
    if (!a3)
      return;
    v4 = a3;
  }
  v5 = v4;
  v6 = Image.init(uiImage:)(v5);
  KeyPath = swift_getKeyPath(&unk_100E31588);
  v8 = swift_getKeyPath(&unk_100E315B0);
  v9 = v6;
  swift_retain(a2);
  static Published.subscript.setter(&v9, a2, KeyPath, v8);

}

uint64_t sub_10019DF04(uint64_t result, uint64_t a2)
{
  void *v2;
  _QWORD *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  if (result)
  {
    v2 = (void *)result;
    v3 = (_QWORD *)(a2 + 16);
    swift_beginAccess(a2 + 16, v8, 33, 0);
    v4 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    v6 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v5 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v6 >= v5 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
    v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
    specialized Array._endMutation()(v7);
    return swift_endAccess(v8);
  }
  return result;
}

void sub_10019DF9C(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  __int128 v52;
  uint64_t v53;
  double v54;
  NSObject *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  id v68;
  uint64_t *v69;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  void *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  double *v116;
  void *v117;
  id v118;
  void *v119;
  const void *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  char *v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  void *v131;
  id v132;
  uint64_t (*v133)(uint64_t, char *, uint64_t);
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  void (*v143)(char *, char *, uint64_t);
  NSURL *v144;
  uint64_t v145;
  char *v146;
  unint64_t v147;
  id v148;
  NSObject *v149;
  uint64_t v150;
  uint64_t aBlock;
  _QWORD v152[6];
  NSURL v153;

  v6 = sub_100008B04((uint64_t *)&unk_101499B30);
  __chkstk_darwin(v6);
  v8 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v122 - v10;
  v145 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v145 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v145);
  v127 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  v146 = (char *)&v122 - v19;
  if (a1)
  {
    v135 = v18;
    v125 = v17;
    v20 = swift_allocObject(&unk_1011A82D0, 24, 7);
    v21 = sub_10000BD1C(_swiftEmptyArrayStorage);
    v128 = v20;
    *(_QWORD *)(v20 + 16) = v21;
    v134 = (uint64_t *)(v20 + 16);
    v22 = qword_101490EA8;
    swift_retain();
    if (v22 != -1)
      swift_once(&qword_101490EA8, sub_1001147B8);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_10000E918(v23, (uint64_t)qword_1014D4B08);
    v25 = swift_retain_n(a1, 2);
    v140 = v24;
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.debug.getter();
    v28 = os_log_type_enabled(v26, v27);
    v136 = a1;
    v141 = v11;
    v142 = v8;
    if (v28)
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      v150 = v30;
      *(_DWORD *)v29 = 136315138;
      v31 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                  + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_mapItem), "name"));
      if (v31)
      {
        v32 = v31;
        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v35 = v34;

      }
      else
      {
        v33 = 0;
        v35 = 0xE000000000000000;
      }
      aBlock = v33;
      v152[0] = v35;
      v41 = String.init<A>(_:)(&aBlock, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v43 = v42;
      aBlock = sub_1000C28FC(v41, v42, &v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v152, v29 + 4, v29 + 12);
      a1 = v136;
      swift_release_n(v136, 2);
      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Place Summary] Starting to fetch images for %s", v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

      v11 = v141;
      v8 = v142;
      v40 = v145;
    }
    else
    {

      swift_release_n(a1, 2);
      v40 = v145;
    }
    v44 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_mapItem), "_searchResultPhotoCarousel");
    if (!v44)
    {
      __break(1u);
      return;
    }
    v45 = v44;
    v46 = a1;
    v47 = v12;
    v48 = sub_100008B04(&qword_101495C28);
    v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v48);

    if ((unint64_t)v49 >> 62)
    {
      if (v49 < 0)
        v121 = v49;
      else
        v121 = v49 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v49);
      v50 = _CocoaArrayWrapper.endIndex.getter(v121);
      swift_bridgeObjectRelease(v49);
      v51 = (_QWORD *)&unk_100E24000;
      if (v50)
        goto LABEL_17;
    }
    else
    {
      v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
      v51 = &unk_100E24000;
      if (v50)
      {
LABEL_17:
        v148 = (id)objc_opt_self(GEOMapItemPhotoOptions);
        if (v50 >= 1)
        {
          v53 = 0;
          v139 = OBJC_IVAR____TtC4Maps27PlaceSummaryImageDownloader_photoCarouselImageCache;
          v147 = v49 & 0xC000000000000001;
          v124 = v13 + 7;
          *(_QWORD *)&v52 = v51[284];
          v126 = v52;
          v122 = (char *)&type metadata for Any + 8;
          v54 = a2 / 3.0;
          v138 = v49;
          v137 = v50;
          v123 = v47;
          while (1)
          {
            if (v147)
            {
              v55 = specialized _ArrayBuffer._getElementSlowPath(_:)(v53, v49);
            }
            else
            {
              v55 = *(NSObject **)(v49 + 8 * v53 + 32);
              swift_unknownObjectRetain(v55);
            }
            v56 = objc_msgSend(v148, "defaultPhotoOptionsWithAllowSmaller:", 1, v122);
            v149 = v55;
            v57 = -[NSObject bestPhotoForFrameSize:displayScale:options:](v55, "bestPhotoForFrameSize:displayScale:options:", v56, v54, v54, a3);

            if (v57)
            {
              v58 = objc_msgSend(v57, "url");
              if (v58)
              {
                v59 = v58;
                static URL._unconditionallyBridgeFromObjectiveC(_:)(v58);

                v60 = 0;
              }
              else
              {
                v60 = 1;
              }
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v8, v60, 1, v40);
              sub_1001A2A94((uint64_t)v8, (uint64_t)v11);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v11, 1, v40) != 1)
              {
                v61 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
                v62 = v146;
                v61(v146, v11, v40);
                v63 = *(Class *)((char *)&v144->super.isa + v139);
                v64 = v47;
                URL._bridgeToObjectiveC()(v144);
                v66 = v65;
                v67 = v40;
                v68 = objc_msgSend(v63, "objectForKey:", v65);

                if (v68)
                {
                  v69 = v134;
                  swift_beginAccess(v134, &aBlock, 33, 0);
                  v143 = (void (*)(char *, char *, uint64_t))v68;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v69);
                  v150 = *v69;
                  *v69 = 0x8000000000000000;
                  sub_1001A0488((uint64_t)v68, v53, isUniquelyReferenced_nonNull_native);
                  v71 = *v69;
                  *v69 = v150;
                  swift_bridgeObjectRelease(v71);
                  swift_endAccess(&aBlock);
                  v72 = *v69;
                  KeyPath = swift_getKeyPath(&unk_100E31538);
                  v74 = swift_getKeyPath(&unk_100E31560);
                  aBlock = v72;
                  swift_retain();
                  swift_bridgeObjectRetain(v72);
                  v75 = v67;
                  v76 = v146;
                  static Published.subscript.setter(&aBlock, v46, KeyPath, v74);
                  v77 = v64;
                  v78 = v135;
                  v79 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 16))(v135, v76, v75);
                  v80 = Logger.logObject.getter(v79);
                  v81 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v80, v81))
                  {
                    v82 = v78;
                    v83 = swift_slowAlloc(12, -1);
                    v84 = swift_slowAlloc(32, -1);
                    aBlock = v84;
                    *(_DWORD *)v83 = v126;
                    v85 = URL.absoluteString.getter();
                    v87 = v86;
                    *(_QWORD *)(v83 + 4) = sub_1000C28FC(v85, v86, &aBlock);
                    swift_bridgeObjectRelease(v87);
                    v88 = v77;
                    v89 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
                    v90 = v82;
                    v46 = v136;
                    v91 = v145;
                    v89(v90, v145);
                    _os_log_impl((void *)&_mh_execute_header, v80, v81, "-- [Place Summary] Using cached image at url %s", (uint8_t *)v83, 0xCu);
                    swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v84, -1, -1);
                    swift_slowDealloc(v83, -1, -1);
                    swift_unknownObjectRelease(v57);

                    swift_unknownObjectRelease(v149);
                    v89((uint64_t)v146, v91);
                    v11 = v141;
                    v8 = v142;
                    v40 = v91;
                    v47 = v88;
                  }
                  else
                  {
                    swift_unknownObjectRelease(v149);

                    v104 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
                    v40 = v145;
                    v104(v78, v145);
                    swift_unknownObjectRelease(v57);

                    v104((uint64_t)v76, v40);
                    v11 = v141;
                    v8 = v142;
                    v47 = v77;
                  }
                }
                else
                {
                  v143 = v61;
                  v92 = v125;
                  v133 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v64 + 16);
                  v93 = v133(v125, v62, v67);
                  v94 = Logger.logObject.getter(v93);
                  v95 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v94, (os_log_type_t)v95))
                  {
                    v96 = swift_slowAlloc(12, -1);
                    v97 = v64;
                    v98 = swift_slowAlloc(32, -1);
                    aBlock = v98;
                    *(_DWORD *)v96 = v126;
                    v99 = URL.absoluteString.getter();
                    v101 = v100;
                    *(_QWORD *)(v96 + 4) = sub_1000C28FC(v99, v100, &aBlock);
                    swift_bridgeObjectRelease(v101);
                    v129 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
                    v129(v92, v67);
                    _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v95, "- [Place Summary] Starting to fetch image at url %s", (uint8_t *)v96, 0xCu);
                    swift_arrayDestroy(v98, 1, v122);
                    v102 = v98;
                    v64 = v97;
                    swift_slowDealloc(v102, -1, -1);
                    v103 = v96;
                    v62 = v146;
                    swift_slowDealloc(v103, -1, -1);
                  }
                  else
                  {
                    v129 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
                    v129(v92, v67);
                  }

                  v105 = v67;
                  v132 = objc_msgSend((id)objc_opt_self(MKAppImageManager), "sharedImageManager");
                  URL._bridgeToObjectiveC()(&v153);
                  v131 = v106;
                  v130 = swift_allocObject(&unk_1011A82F8, 24, 7);
                  swift_unknownObjectWeakInit(v130 + 16, v144);
                  v107 = v127;
                  v133((uint64_t)v127, v62, v105);
                  v108 = *(unsigned __int8 *)(v64 + 80);
                  v109 = (v108 + 16) & ~v108;
                  v110 = (v124 + v109) & 0xFFFFFFFFFFFFFFF8;
                  v111 = (v110 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v112 = (v111 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v113 = (v112 + 23) & 0xFFFFFFFFFFFFFFF8;
                  v114 = (v113 + 15) & 0xFFFFFFFFFFFFFFF8;
                  v115 = swift_allocObject(&unk_1011A8320, v114 + 8, v108 | 7);
                  v143((char *)(v115 + v109), v107, v145);
                  *(_QWORD *)(v115 + v110) = v128;
                  *(_QWORD *)(v115 + v111) = v53;
                  v116 = (double *)(v115 + v112);
                  *v116 = v54;
                  v116[1] = v54;
                  *(_QWORD *)(v115 + v113) = v130;
                  v46 = v136;
                  *(_QWORD *)(v115 + v114) = v136;
                  v152[3] = sub_1001A2BAC;
                  v152[4] = v115;
                  aBlock = (uint64_t)_NSConcreteStackBlock;
                  v152[0] = 1107296256;
                  v152[1] = sub_10019D860;
                  v152[2] = &unk_1011A8338;
                  v117 = _Block_copy(&aBlock);
                  swift_retain();
                  swift_retain();
                  swift_release();
                  v118 = v132;
                  v119 = v131;
                  objc_msgSend(v132, "loadAppImageAtURL:completionHandler:", v131, v117);
                  v120 = v117;
                  v40 = v145;
                  _Block_release(v120);
                  swift_unknownObjectRelease(v57);
                  swift_unknownObjectRelease(v149);

                  v129((uint64_t)v146, v40);
                  v11 = v141;
                  v8 = v142;
                  v47 = v123;
                }
                v49 = v138;
                v50 = v137;
                goto LABEL_21;
              }
              swift_unknownObjectRelease(v57);
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v11, 1, 1, v40);
            }
            swift_unknownObjectRelease(v149);
            sub_1000CD5C4((uint64_t)v11);
LABEL_21:
            if (v50 == ++v53)
              goto LABEL_44;
          }
        }
        __break(1u);
        goto LABEL_46;
      }
    }
LABEL_44:
    swift_release();
    swift_bridgeObjectRelease(v49);
    swift_release();
    return;
  }
  if (qword_101490EA8 != -1)
LABEL_46:
    swift_once(&qword_101490EA8, sub_1001147B8);
  v36 = type metadata accessor for Logger(0);
  v37 = sub_10000E918(v36, (uint64_t)qword_1014D4B08);
  v149 = Logger.logObject.getter(v37);
  v38 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v149, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v149, v38, "[Place Summary] No view model to fetch photos for.", v39, 2u);
    swift_slowDealloc(v39, -1, -1);
  }

}

void sub_10019EC58(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  id v29;
  double v30;
  double v31;
  DataSource *v32;
  Swift::OpaquePointer v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  uint64_t Strong;
  void *v73;
  id v74;
  NSURL *v75;
  void *v76;
  void *v77;
  id v78;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v80;
  uint64_t v81;
  uint64_t KeyPath;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint8_t *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t aBlock[6];
  uint64_t v104;
  uint64_t v105;
  _BYTE v106[16];

  v102 = a9;
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v20 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v95 - v22;
  __chkstk_darwin(v24);
  v27 = (char *)&v95 - v26;
  v101 = a8;
  v28 = a8 + 2;
  if (v25)
  {
    v100 = a10;
    v98 = (uint64_t)v25;
    v29 = v25;
    objc_msgSend(v29, "size");
    if (v30 <= a1 && (objc_msgSend(v29, "size"), v31 <= a2))
    {
      v101 = v29;
      v59 = v100 + 16;
      if (qword_101490EA8 != -1)
        swift_once(&qword_101490EA8, sub_1001147B8);
      v60 = type metadata accessor for Logger(0);
      sub_10000E918(v60, (uint64_t)qword_1014D4B08);
      v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v100 = a7;
      v62 = v61(v20, a7, v17);
      v63 = Logger.logObject.getter(v62);
      v64 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc(12, -1);
        v99 = (_QWORD *)v17;
        v66 = (uint8_t *)v65;
        v67 = swift_slowAlloc(32, -1);
        aBlock[0] = v67;
        v97 = v59;
        *(_DWORD *)v66 = 136315138;
        v96 = v66 + 4;
        v68 = URL.absoluteString.getter();
        v70 = v69;
        v105 = sub_1000C28FC(v68, v69, aBlock);
        v59 = v97;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v96, v66 + 12);
        swift_bridgeObjectRelease(v70);
        (*(void (**)(char *, _QWORD *))(v18 + 8))(v20, v99);
        _os_log_impl((void *)&_mh_execute_header, v63, v64, "- [Place Summary] Finished fetching image at url %s", v66, 0xCu);
        swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v67, -1, -1);
        swift_slowDealloc(v66, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      }

      v71 = v101;
      swift_beginAccess(v59, aBlock, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v59);
      if (Strong)
      {
        v73 = (void *)Strong;
        v74 = *(id *)(Strong + OBJC_IVAR____TtC4Maps27PlaceSummaryImageDownloader_photoCarouselImageCache);

        URL._bridgeToObjectiveC()(v75);
        v71 = v101;
        v77 = v76;
        objc_msgSend(v74, "setObject:forKey:", v101, v76);

      }
      swift_beginAccess(v28, &v105, 33, 0);
      v78 = v71;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v28);
      v104 = *v28;
      *v28 = 0x8000000000000000;
      sub_1001A0488(v98, v102, isUniquelyReferenced_nonNull_native);
      v80 = *v28;
      *v28 = v104;
      swift_bridgeObjectRelease(v80);
      swift_endAccess(&v105);
      swift_beginAccess(v28, &v105, 0, 0);
      v81 = *v28;
      KeyPath = swift_getKeyPath(&unk_100E31538);
      v83 = swift_getKeyPath(&unk_100E31560);
      v104 = v81;
      swift_retain();
      swift_bridgeObjectRetain(v81);
      static Published.subscript.setter(&v104, a11, KeyPath, v83);

    }
    else
    {
      objc_msgSend(v29, "size");
      objc_msgSend(v29, "size");
      objc_msgSend(v29, "size");
      objc_msgSend(v29, "size");
      v32 = (DataSource *)objc_msgSend(v29, "size");
      CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:)(v32, v33);
      v35 = v34;
      v37 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v23, a7, v17);
      v38 = *(unsigned __int8 *)(v18 + 80);
      v39 = (v38 + 16) & ~v38;
      v40 = (v19 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
      v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
      v98 = a11;
      v99 = (_QWORD *)v17;
      v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
      v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
      v44 = v18;
      v45 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
      v46 = swift_allocObject(&unk_1011A8370, v45 + 8, v38 | 7);
      (*(void (**)(uint64_t, char *, _QWORD *))(v44 + 32))(v46 + v39, v23, v99);
      v47 = v101;
      *(_QWORD *)(v46 + v40) = v100;
      *(_QWORD *)(v46 + v41) = v29;
      *(_QWORD *)(v46 + v42) = v47;
      *(_QWORD *)(v46 + v43) = v102;
      *(_QWORD *)(v46 + v45) = v98;
      aBlock[4] = (uint64_t)sub_1001A2D2C;
      aBlock[5] = v46;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000B3780;
      aBlock[3] = (uint64_t)&unk_1011A8388;
      v48 = _Block_copy(aBlock);
      v49 = v29;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v49, "prepareThumbnailOfSize:completionHandler:", v48, v35, v37);

      _Block_release(v48);
    }
  }
  else
  {
    v101 = v28;
    if (qword_101490EA8 != -1)
      swift_once(&qword_101490EA8, sub_1001147B8);
    v50 = type metadata accessor for Logger(0);
    sub_10000E918(v50, (uint64_t)qword_1014D4B08);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v27, a7, v17);
    swift_errorRetain(a6);
    v51 = swift_errorRetain(a6);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc(22, -1);
      v99 = (_QWORD *)swift_slowAlloc(8, -1);
      v100 = swift_slowAlloc(32, -1);
      aBlock[0] = v100;
      *(_DWORD *)v54 = 136315394;
      v55 = URL.absoluteString.getter();
      v57 = v56;
      v105 = sub_1000C28FC(v55, v56, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v54 + 4, v54 + 12);
      swift_bridgeObjectRelease(v57);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
      *(_WORD *)(v54 + 12) = 2112;
      if (a6)
      {
        swift_errorRetain(a6);
        v58 = _swift_stdlib_bridgeErrorToNSError(a6);
        v105 = v58;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v54 + 14, v54 + 22);
      }
      else
      {
        v105 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, v106, v54 + 14, v54 + 22);
        v58 = 0;
      }
      v84 = v99;
      *v99 = v58;
      swift_errorRelease(a6);
      swift_errorRelease(a6);
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "- [Place Summary] Couldn't carousel fetch image at url %s error:%@", (uint8_t *)v54, 0x16u);
      v85 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v84, 1, v85);
      swift_slowDealloc(v84, -1, -1);
      v86 = v100;
      swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v86, -1, -1);
      swift_slowDealloc(v54, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
      swift_errorRelease(a6);
      swift_errorRelease(a6);
    }

    v87 = v101;
    swift_beginAccess(v101, aBlock, 33, 0);
    v88 = sub_1000C163C(v102);
    if ((v89 & 1) != 0)
    {
      v90 = v88;
      v91 = swift_isUniquelyReferenced_nonNull_native(*v87);
      v92 = *v87;
      v105 = *v87;
      *v87 = 0x8000000000000000;
      if ((v91 & 1) == 0)
      {
        sub_1001A1468();
        v92 = v105;
      }
      v93 = *(void **)(*(_QWORD *)(v92 + 56) + 8 * v90);
      sub_10019FE88(v90, v92);
      v94 = *v87;
      *v87 = v92;
      swift_bridgeObjectRelease(v94);

    }
    swift_endAccess(aBlock);
  }
}

uint64_t sub_10019F4EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  void *v49;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t aBlock[7];

  v59 = a5;
  v60 = a7;
  v56 = a6;
  v57 = a3;
  v58 = a4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  __chkstk_darwin(v8);
  v64 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  __chkstk_darwin(v10);
  v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v55 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v51 - v16;
  if (qword_101490EA8 != -1)
    swift_once(&qword_101490EA8, sub_1001147B8);
  v18 = type metadata accessor for Logger(0);
  sub_10000E918(v18, (uint64_t)qword_1014D4B08);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v20 = v19(v17, a2, v12);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc(12, -1);
    v53 = v14;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc(32, -1);
    v54 = a2;
    v26 = v25;
    aBlock[0] = v25;
    *(_DWORD *)v24 = 136315138;
    v52 = v19;
    v27 = URL.absoluteString.getter();
    v29 = v28;
    v67 = sub_1000C28FC(v27, v28, aBlock);
    v19 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, aBlock, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "-- [Place Summary] Finished resizing image for url %s", v24, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    v30 = v26;
    a2 = v54;
    swift_slowDealloc(v30, -1, -1);
    v31 = v24;
    v14 = v53;
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }

  sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v54 = static OS_dispatch_queue.main.getter();
  v32 = v55;
  v19(v55, a2, v12);
  v33 = *(unsigned __int8 *)(v13 + 80);
  v34 = (v33 + 32) & ~v33;
  v35 = (v14 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = swift_allocObject(&unk_1011A83C0, v37 + 8, v33 | 7);
  v39 = v58;
  *(_QWORD *)(v38 + 16) = v57;
  *(_QWORD *)(v38 + 24) = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v38 + v34, v32, v12);
  *(_QWORD *)(v38 + v35) = v59;
  *(_QWORD *)(v38 + v36) = v56;
  *(_QWORD *)(v38 + v37) = v60;
  aBlock[4] = (uint64_t)sub_1001A2E5C;
  aBlock[5] = v38;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001BB8D4;
  aBlock[3] = (uint64_t)&unk_1011A83D8;
  v40 = _Block_copy(aBlock);
  swift_retain();
  v41 = v39;
  swift_retain();
  swift_retain();
  v42 = swift_release();
  v43 = v61;
  static DispatchQoS.unspecified.getter(v42);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v44 = sub_10000E540();
  v45 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v46 = sub_10000E588();
  v47 = v64;
  v48 = v66;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v45, v46, v66, v44);
  v49 = (void *)v54;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v47, v40);
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v43, v63);
}

uint64_t sub_10019F954(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v26, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *(id *)(Strong + OBJC_IVAR____TtC4Maps27PlaceSummaryImageDownloader_photoCarouselImageCache);

    URL._bridgeToObjectiveC()(v14);
    v16 = v15;
    objc_msgSend(v13, "setObject:forKey:", a2, v15);

  }
  swift_beginAccess(a4 + 16, v25, 33, 0);
  v17 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a4 + 16));
  v24 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = 0x8000000000000000;
  sub_1001A0488((uint64_t)a2, a5, isUniquelyReferenced_nonNull_native);
  v19 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(a4 + 16) = v24;
  swift_bridgeObjectRelease(v19);
  swift_endAccess(v25);
  swift_beginAccess(a4 + 16, v25, 0, 0);
  v20 = *(_QWORD *)(a4 + 16);
  KeyPath = swift_getKeyPath(&unk_100E31538);
  v22 = swift_getKeyPath(&unk_100E31560);
  v24 = v20;
  swift_bridgeObjectRetain(v20);
  swift_retain();
  return static Published.subscript.setter(&v24, a6, KeyPath, v22);
}

id sub_10019FAC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryImageDownloader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaceSummaryImageDownloader()
{
  return objc_opt_self(_TtC4Maps27PlaceSummaryImageDownloader);
}

uint64_t sub_10019FB28@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E314A0, (uint64_t)&unk_100E314C8, a2);
}

uint64_t sub_10019FB3C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10019FC64(a1, a2, a3, a4, (uint64_t)&unk_100E314A0, (uint64_t)&unk_100E314C8);
}

uint64_t sub_10019FB50@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E314E8);
  v5 = swift_getKeyPath(&unk_100E31510);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10019FBCC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E314E8);
  v5 = swift_getKeyPath(&unk_100E31510);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10019FC3C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E31588, (uint64_t)&unk_100E315B0, a2);
}

uint64_t sub_10019FC50(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10019FC64(a1, a2, a3, a4, (uint64_t)&unk_100E31588, (uint64_t)&unk_100E315B0);
}

uint64_t sub_10019FC64(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v7);
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

void sub_10019FCD8(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = _HashTable.previousHole(before:)(a1, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(a2 + 40);
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * v3);
            v21 = (_QWORD *)(v19 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 1))
            {
              *v20 = *v21;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10019FE88(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1001A001C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1001A01F0(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  uint64_t v24;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1000C1A60((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1001A10E0();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1000DA138(v12, a3 & 1);
  v17 = sub_1000C1A60((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  v24 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v24);
  __break(1u);
}

_OWORD *sub_1001A0350(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1000C1804(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_QWORD *)(v16[7] + 32 * v10);
        sub_10000BEAC(v17);
        return sub_10000BE60(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1001A1284();
      goto LABEL_7;
    }
    sub_1000DA408(v13, a3 & 1);
    v19 = sub_1000C1804(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_100035DEC(a2, (uint64_t)v21);
      return sub_1001A071C(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
  __break(1u);
  return result;
}

void sub_1001A0488(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1000C163C(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1001A1468();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v20 = 8 * v10;
    *(_QWORD *)(v16[6] + v20) = a2;
    *(_QWORD *)(v16[7] + v20) = a1;
    v21 = v16[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1000DA71C(v13, a3 & 1);
  v18 = sub_1000C163C(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_1001A05C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1000C17A0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1001A1A28();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain(a3);
      return;
    }
    goto LABEL_14;
  }
  sub_1000DB2F4(v15, a4 & 1);
  v20 = sub_1000C17A0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

_OWORD *sub_1001A071C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_10000BE60(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

void *sub_1001A0794()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100008B04((uint64_t *)&unk_10149A290);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001A0934()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  sub_100008B04(&qword_1014918A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_100084C44(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_10000BE48(v22, *(_QWORD *)(v4 + 56) + v18);
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001A0AFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  __int128 v23;
  unsigned __int8 v24;
  _OWORD *v25;
  id v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  __int128 v31;
  __int128 v32;

  v1 = v0;
  sub_100008B04(&qword_101491BE8);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = (__int128 *)(*(_QWORD *)(v2 + 56) + v16);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    v31 = *v21;
    v23 = *v21;
    v32 = v21[1];
    v24 = *(_BYTE *)(v17 + 24);
    *(_QWORD *)v22 = *(_QWORD *)v17;
    *(_QWORD *)(v22 + 8) = v19;
    *(_QWORD *)(v22 + 16) = v20;
    *(_BYTE *)(v22 + 24) = v24;
    v25 = (_OWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v25 = v23;
    v25[1] = v32;
    v26 = v18;
    sub_10000BE70(v19, v20, v24);
    v27 = (id)v31;
    swift_bridgeObjectRetain(*((_QWORD *)&v31 + 1));
    swift_bridgeObjectRetain(v32);
    result = (void *)swift_bridgeObjectRetain(*((_QWORD *)&v32 + 1));
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001A0D10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  sub_100008B04((uint64_t *)&unk_10149A2B0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain(v18);
    result = (id)v24;
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001A0ED0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  int64_t v30;
  _OWORD v31[2];
  uint64_t v32;

  sub_100008B04((uint64_t *)&unk_10149A2D0);
  v28 = v0;
  v1 = *v0;
  v2 = static _DictionaryStorage.copy(original:)(*v0);
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v28 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v29 = v1 + 64;
  v30 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    v25 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v30)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v7;
    if (!v26)
    {
      v7 = v25 + 1;
      if (v25 + 1 >= v30)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v7);
      if (!v26)
        break;
    }
LABEL_25:
    v10 = (v26 - 1) & v26;
    v12 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_12:
    v13 = 32 * v12;
    v14 = *(_QWORD *)(v1 + 48) + 32 * v12;
    v15 = *(void **)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    v18 = *(_BYTE *)(v14 + 24);
    v19 = 40 * v12;
    sub_1000DE5AC(*(_QWORD *)(v1 + 56) + 40 * v12, (uint64_t)v31);
    v20 = *(_QWORD *)(v3 + 48) + v13;
    *(_QWORD *)v20 = v15;
    *(_QWORD *)(v20 + 8) = v16;
    *(_QWORD *)(v20 + 16) = v17;
    *(_BYTE *)(v20 + 24) = v18;
    v21 = *(_QWORD *)(v3 + 56) + v19;
    v22 = v32;
    v23 = v31[1];
    *(_OWORD *)v21 = v31[0];
    *(_OWORD *)(v21 + 16) = v23;
    *(_QWORD *)(v21 + 32) = v22;
    v24 = v15;
    result = (void *)sub_10000BE70(v16, v17, v18);
  }
  v27 = v25 + 2;
  if (v27 >= v30)
    goto LABEL_26;
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v7 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v7 >= v30)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v7);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001A10E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100008B04(&qword_101491BF0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1001A1284()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  sub_100008B04((uint64_t *)&unk_10149E920);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_100035DEC(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_100011E20(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_10000BE60(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001A1468()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100008B04(&qword_101491A30);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1001A1608()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_100008B04(&qword_101491AB0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = *(_QWORD *)(v2 + 56) + v16;
    v22 = *(void **)v20;
    v21 = *(void **)(v20 + 8);
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v18;
    v23[1] = v19;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v22;
    v24[1] = v21;
    v25 = v21;
    swift_bridgeObjectRetain(v19);
    result = v22;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1001A17CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = type metadata accessor for Handle(0);
  v1 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04((uint64_t *)&unk_10149E910);
  v31 = v0;
  v4 = *v0;
  v5 = static _DictionaryStorage.copy(original:)(*v0);
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return;
  }
  v7 = v5;
  v8 = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)v8 >= v4 + 64 + 8 * v9)
  {
    memmove(v8, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    swift_bridgeObjectRetain(v20);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

id sub_1001A1A28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_100008B04((uint64_t *)&unk_10149E900);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain(v18);
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1001A1BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  id v24;
  NSURL *v25;
  void *v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t aBlock[6];

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  if (qword_101490EA8 != -1)
    swift_once(&qword_101490EA8, sub_1001147B8);
  v10 = type metadata accessor for Logger(0);
  sub_10000E918(v10, (uint64_t)qword_1014D4B08);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12 = v11(v9, a1, v4);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v34 = v11;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v36 = a1;
    v18 = v17;
    aBlock[0] = v17;
    v37 = a2;
    *(_DWORD *)v16 = 136315138;
    v35 = v6;
    v19 = URL.absoluteString.getter();
    v21 = v20;
    v39 = sub_1000C28FC(v19, v20, aBlock);
    v6 = v35;
    a2 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, aBlock, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Place Summary] Starting to fetch image at url %s.", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v22 = v18;
    a1 = v36;
    swift_slowDealloc(v22, -1, -1);
    v23 = v16;
    v11 = v34;
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }

  v24 = objc_msgSend((id)objc_opt_self(MKAppImageManager), "sharedImageManager");
  URL._bridgeToObjectiveC()(v25);
  v27 = v26;
  v28 = v38;
  v11(v38, a1, v4);
  v29 = *(unsigned __int8 *)(v5 + 80);
  v30 = (v29 + 16) & ~v29;
  v31 = (v6 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject(&unk_1011A84B0, v31 + 8, v29 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v32 + v30, v28, v4);
  *(_QWORD *)(v32 + v31) = a2;
  aBlock[4] = (uint64_t)sub_1001A3040;
  aBlock[5] = v32;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10019D860;
  aBlock[3] = (uint64_t)&unk_1011A84C8;
  v33 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v24, "loadAppImageAtURL:completionHandler:", v27, v33);
  _Block_release(v33);

}

void sub_1001A1F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  id v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD aBlock[6];

  v2 = type metadata accessor for URL(0);
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  __chkstk_darwin(v2);
  v37 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)a1 >> 62)
    {
LABEL_20:
      if (a1 >= 0)
        v33 = v7;
      else
        v33 = a1;
      swift_bridgeObjectRetain(a1);
      v8 = _CocoaArrayWrapper.endIndex.getter(v33);
      if (v8)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v8)
      {
LABEL_4:
        v41 = a1 & 0xC000000000000001;
        v9 = 4;
        v40 = v8;
        v35 = v4;
        v36 = a1;
        while (1)
        {
          v14 = v9 - 4;
          if (v41)
          {
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
            v16 = v9 - 3;
            if (__OFADD__(v14, 1))
              goto LABEL_19;
          }
          else
          {
            v15 = *(_QWORD *)(a1 + 8 * v9);
            swift_retain();
            v16 = v9 - 3;
            if (__OFADD__(v14, 1))
            {
LABEL_19:
              __break(1u);
              goto LABEL_20;
            }
          }
          sub_1001A2F54(v15 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, (uint64_t)v6);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              v18 = *v6;
              v19 = Image.init(uiImage:)(v18);
              KeyPath = swift_getKeyPath(&unk_100E31588);
              v21 = swift_getKeyPath(&unk_100E315B0);
              aBlock[0] = v19;
              static Published.subscript.setter(aBlock, v15, KeyPath, v21);

            }
            else
            {
              v22 = swift_projectBox(*v6);
              v24 = *(void **)v22;
              v23 = *(void **)(v22 + 8);
              v25 = (void *)objc_opt_self(MapsUIImageCache);
              v26 = v23;
              v27 = v24;
              v28 = objc_msgSend(v25, "sharedCache");
              if (!v28)
              {
                __break(1u);
                return;
              }
              v29 = v28;
              v30 = swift_allocObject(&unk_1011A8460, 32, 7);
              *(_QWORD *)(v30 + 16) = v15;
              *(_QWORD *)(v30 + 24) = v23;
              aBlock[4] = sub_1001A2FC4;
              aBlock[5] = v30;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_1000B3780;
              aBlock[3] = &unk_1011A8478;
              v31 = _Block_copy(aBlock);
              v32 = v26;
              swift_retain();
              swift_release();
              objc_msgSend(v29, "getImageForSpec:loadImageOnBackgroundQueue:completion:", v27, 0, v31);
              _Block_release(v31);
              swift_release();

              swift_release();
              v4 = v35;
              a1 = v36;
              v8 = v40;
            }
          }
          else
          {
            v11 = (uint64_t)v37;
            v10 = v38;
            v12 = v39;
            (*(void (**)(char *, id *, uint64_t))(v38 + 32))(v37, v6, v39);
            sub_1001A1BD8(v11, v15);
            swift_release();
            v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
            v8 = v40;
            v13(v11, v12);
          }
          ++v9;
          if (v16 == v8)
          {
            swift_bridgeObjectRelease(a1);
            return;
          }
        }
      }
    }
    swift_bridgeObjectRelease(a1);
  }
}

void sub_1001A2284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD aBlock[6];

  v45 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v45);
  v44 = (uint64_t *)((char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1)
    return;
  v3 = swift_allocObject(&unk_1011A8410, 24, 7);
  v46 = v3;
  *(_QWORD *)(v3 + 16) = _swiftEmptyArrayStorage;
  v42 = (uint64_t *)(v3 + 16);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps33PlaceSummaryStackedImageViewModel_imageSpecs);
  v41 = a1;
  if ((unint64_t)v4 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v4, 2);
  swift_retain();
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v36))
  {
    v43 = (id)objc_opt_self(MapsUIImageCache);
    v6 = 4;
    v7 = v46;
    while (1)
    {
      v8 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v4)
         : *(id *)(v4 + 8 * v6);
      v9 = v8;
      v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v11 = objc_msgSend(v43, "sharedCache");
      if (!v11)
        goto LABEL_34;
      v12 = v11;
      aBlock[4] = sub_1001A2EB8;
      aBlock[5] = v7;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000B3780;
      aBlock[3] = &unk_1011A8428;
      v13 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v12, "getImageForSpec:loadImageOnBackgroundQueue:completion:", v9, 0, v13);
      _Block_release(v13);

      ++v6;
      if (v10 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_21:
    if (v4 < 0)
      v36 = v4;
    else
      v36 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v4, 2);
    swift_retain();
  }
LABEL_11:
  swift_bridgeObjectRelease_n(v4, 2);
  v14 = v42;
  swift_beginAccess(v42, aBlock, 0, 0);
  v15 = *v14;
  if ((unint64_t)*v14 >> 62)
  {
    if (v15 < 0)
      v37 = *v14;
    else
      v37 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v16 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v16)
      goto LABEL_13;
LABEL_30:
    swift_bridgeObjectRelease(v15);
    v35 = _swiftEmptyArrayStorage;
LABEL_31:
    KeyPath = swift_getKeyPath(&unk_100E315D0);
    v39 = swift_getKeyPath(&unk_100E315F8);
    v48 = v35;
    v40 = v41;
    swift_retain();
    static Published.subscript.setter(&v48, v40, KeyPath, v39);
    swift_release();
    swift_release();
    return;
  }
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*v14);
  if (!v16)
    goto LABEL_30;
LABEL_13:
  v48 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v16);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = 0;
    do
    {
      if ((v15 & 0xC000000000000001) != 0)
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
      else
        v18 = *(id *)(v15 + 8 * v17 + 32);
      v19 = v18;
      ++v17;
      v21 = (uint64_t)v44;
      v20 = v45;
      *v44 = v18;
      swift_storeEnumTagMultiPayload(v21, v20, 1);
      v22 = type metadata accessor for PlaceSummaryImageViewModel(0);
      v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
      v47 = 0;
      v24 = v19;
      v25 = sub_100008B04((uint64_t *)&unk_101497210);
      v26 = Published.init(initialValue:)(&v47, v25);
      UUID.init()(v26);
      sub_1001A2EC0(v21, v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type);
      v27 = v23 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius;
      *(_QWORD *)v27 = 0;
      *(_BYTE *)(v27 + 8) = 1;
      v28 = v24;
      v29 = Image.init(uiImage:)(v28);
      v30 = swift_getKeyPath(&unk_100E31588);
      v31 = swift_getKeyPath(&unk_100E315B0);
      v47 = v29;
      swift_retain();
      static Published.subscript.setter(&v47, v23, v30, v31);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v32);
      v33 = v48[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v33);
      v34 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v23);
      specialized ContiguousArray._endMutation()(v34);
    }
    while (v16 != v17);
    v35 = v48;
    swift_bridgeObjectRelease(v15);
    goto LABEL_31;
  }
  __break(1u);
LABEL_34:
  __break(1u);
}

id sub_1001A2708(id result)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  _QWORD aBlock[6];

  if (!result)
    return result;
  v1 = (uint64_t)result;
  v2 = (void *)objc_opt_self(UIScreen);
  swift_bridgeObjectRetain(v1);
  v3 = objc_msgSend(v2, "mainScreen");
  v4 = objc_msgSend(v3, "traitCollection");

  v20 = objc_msgSend(v4, "userInterfaceStyle");
  v5 = v1 & 0xFFFFFFFFFFFFFF8;
  if (!((unint64_t)v1 >> 62))
  {
    v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_4;
    return (id)swift_bridgeObjectRelease(v1);
  }
LABEL_15:
  if (v1 >= 0)
    v18 = v5;
  else
    v18 = v1;
  swift_bridgeObjectRetain(v1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v18);
  swift_bridgeObjectRelease(v1);
  if (!v6)
    return (id)swift_bridgeObjectRelease(v1);
LABEL_4:
  v7 = (void *)objc_opt_self(MapsUIImageCache);
  v19 = v1 & 0xC000000000000001;
  for (i = 4; ; ++i)
  {
    v9 = i - 4;
    if (v19)
    {
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v1);
      v11 = i - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_14;
    }
    else
    {
      v10 = *(_QWORD *)(v1 + 8 * i);
      swift_retain();
      v11 = i - 3;
      if (__OFADD__(v9, 1))
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    v12 = v1;
    v13 = objc_msgSend(objc_allocWithZone((Class)MapsUIImageGEOFeatureSpec), "init");
    objc_msgSend(v13, "setSize:", 4);
    v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v10
                                                                + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem), "_styleAttributes"));
    objc_msgSend(v13, "setStyle:", v14);

    objc_msgSend(v13, "setNightMode:", v20 == (id)2);
    objc_msgSend(v13, "setTransparent:", 1);
    result = objc_msgSend(v7, "sharedCache");
    if (!result)
      break;
    v15 = result;
    aBlock[4] = sub_1001A29F8;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000B3780;
    aBlock[3] = &unk_1011A8270;
    v16 = _Block_copy(aBlock);
    v17 = v13;
    swift_retain();
    swift_release();
    objc_msgSend(v15, "getImageForSpec:loadImageOnBackgroundQueue:completion:", v17, 0, v16);
    _Block_release(v16);
    swift_release();

    v1 = v12;
    if (v11 == v6)
      return (id)swift_bridgeObjectRelease(v12);
  }
  __break(1u);
  return result;
}

void sub_1001A29F8(void *a1)
{
  uint64_t v1;

  sub_10019D8EC(a1, v1);
}

double sub_1001A2A00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001A2A10(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001A2A18(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_10019DD18(a1, a2, v2);
}

uint64_t sub_1001A2A20@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E314A0, (uint64_t)&unk_100E314C8, a2);
}

uint64_t sub_1001A2A44(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10019FC64(a1, a2, a3, a4, (uint64_t)&unk_100E314A0, (uint64_t)&unk_100E314C8);
}

uint64_t sub_1001A2A70()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A2A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_101499B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A2ADC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A2B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_1001A2BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v9 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_10019EC58(*(double *)(v4 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v4 + ((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), a1, a2, a3, a4, v4 + v10, *(_QWORD **)(v4 + v11), *(_QWORD *)(v4 + v12), *(_QWORD *)(v4 + ((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001A2C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));

  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v5);
}

uint64_t sub_1001A2D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_10019F4EC(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void **)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1+ ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001A2DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1001A2E5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10019F954(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001A2EB8(uint64_t a1)
{
  uint64_t v1;

  return sub_10019DF04(a1, v1);
}

uint64_t sub_1001A2EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A2F04@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E31588, (uint64_t)&unk_100E315B0, a2);
}

uint64_t sub_1001A2F28(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10019FC64(a1, a2, a3, a4, (uint64_t)&unk_100E31588, (uint64_t)&unk_100E315B0);
}

uint64_t sub_1001A2F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A2F98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001A2FC4(void *a1)
{
  uint64_t v1;

  sub_10019DE68(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001A2FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1001A3040(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_10019D368(a1, a2, a3, a4, v4 + v10, *(_QWORD *)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001A30F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id CuratedCollectionItemLibraryCoordinator.__allocating_init(initialMapItem:dataOperationsProvider:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  _BYTE *v5;
  objc_super v7;

  v5 = objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary] = 0;
  v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_initialMapItem] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_dataOperationsProvider] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, "init");
}

id CuratedCollectionItemLibraryCoordinator.init(initialMapItem:dataOperationsProvider:)(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  objc_super v4;

  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary] = 0;
  v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_initialMapItem] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_dataOperationsProvider] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CuratedCollectionItemLibraryCoordinator();
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t type metadata accessor for CuratedCollectionItemLibraryCoordinator()
{
  return objc_opt_self(_TtC4Maps39CuratedCollectionItemLibraryCoordinator);
}

BOOL CuratedCollectionItemLibraryCoordinator.isPlaceInLibrary.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary) & 1) != 0
      || *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary) != 0;
}

uint64_t CuratedCollectionItemLibraryCoordinator.determineSavedState(completion:)(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;

  v5 = *(void **)(v2 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_initialMapItem);
  v6 = swift_allocObject(&unk_1011A8528, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  swift_retain();
  sub_1001B83A8(v5, v6, a1, a2);
  swift_release();
  return swift_release();
}

uint64_t sub_1001A3388()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001A33AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_1001A3854(a1, a3, a4);
}

Swift::Void __swiftcall CuratedCollectionItemLibraryCoordinator.addPlaceToLibrary(refinedMapItem:)(MKMapItem refinedMapItem)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  id v5;
  objc_class *v6;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary) = 1;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_dataOperationsProvider);
  v4 = swift_allocObject(&unk_1011A8528, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = v3;
  v6 = refinedMapItem.super.isa;
  swift_retain();
  sub_1001B7FC0(v6, (uint64_t)sub_1001A38EC, v4, v5, v6, 0, 0, 0, 0);
  swift_release_n(v4, 2);

}

void sub_1001A352C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (_BYTE *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary) = a1;
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRelease(v7);
    v6[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;

  }
}

Swift::Void __swiftcall CuratedCollectionItemLibraryCoordinator.deletePlaceFromLibrary(viewControllerForPresentingAlert:)(UIViewController viewControllerForPresentingAlert)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary);
  if (v2)
  {
    v4 = swift_allocObject(&unk_1011A8528, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16);
    swift_unknownObjectRetain(v2);
    swift_retain();
    sub_1001B1370(v2, viewControllerForPresentingAlert.super.super.isa, (uint64_t)sub_1001A38F4, v4);
    swift_unknownObjectRelease(v2);
    swift_release_n(v4, 2);
  }
}

void sub_1001A36B0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *Strong;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v8, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    if ((a1 & 1) != 0 || a2)
    {

    }
    else
    {
      v7 = *(_QWORD *)&Strong[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary];
      *(_QWORD *)&Strong[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary] = 0;

      swift_unknownObjectRelease(v7);
    }
  }
}

void CuratedCollectionItemLibraryCoordinator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.CuratedCollectionItemLibraryCoordinator", 44, "init()", 6, 0);
  __break(1u);
}

id CuratedCollectionItemLibraryCoordinator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CuratedCollectionItemLibraryCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1001A3854(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t Strong;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (_BYTE *)Strong;
    v8 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary) = a1;
    swift_unknownObjectRetain(a1);
    v9 = swift_unknownObjectRelease(v8);
    v7[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
    a3(v9);

  }
}

void sub_1001A38EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A352C(a1, a2, v2);
}

void sub_1001A38F4(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A36B0(a1, a2, v2);
}

uint64_t sub_1001A38FC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A3920()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

id sub_1001A3A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  _BYTE *v15;
  id v20;
  objc_super v22;

  *(double *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gapWidth] = a9;
  *(double *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barWidth] = a10;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor] = a1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_dotStrokeColor] = a2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barHighlightColor] = a3;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barElapsedColor] = a4;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gradientColors] = a5;
  sub_1001A4AC8(a6, (uint64_t)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_blendMode]);
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor] = a7;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_xAxisFont] = a8;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridColor] = a12;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridHighlightColor] = a13;
  *(double *)&v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridLineWidth] = a11;
  v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle] = a14;
  v15[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition] = a15;
  v22.receiver = v15;
  v22.super_class = (Class)type metadata accessor for MapsElevationChartStyle(0);
  v20 = objc_msgSendSuper2(&v22, "init");
  sub_1001A4B10(a6);
  return v20;
}

id sub_1001A3B9C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id result;
  _QWORD aBlock[6];

  v0 = sub_100008B04(&qword_101496880);
  __chkstk_darwin(v0);
  v2 = (char *)aBlock - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "labelColor");
  v5 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_1001A3DE4;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001A4B50;
  aBlock[3] = &unk_1011A85F8;
  v6 = _Block_copy(aBlock);
  v7 = objc_msgSend(v5, "initWithDynamicProvider:", v6);
  _Block_release(v6);
  swift_release();
  v8 = sub_100008B04((uint64_t *)&unk_101493B10);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100E250A0;
  v10 = objc_msgSend(v3, "labelColor");
  v11 = objc_msgSend(v10, "colorWithAlphaComponent:", 0.16);

  *(_QWORD *)(v9 + 32) = v11;
  v12 = objc_msgSend(v3, "labelColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v9 + 40) = v13;
  aBlock[0] = v9;
  specialized Array._endMutation()(v14);
  v15 = aBlock[0];
  v16 = type metadata accessor for BlendMode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v2, 1, 1, v16);
  v17 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle(0));
  result = sub_1001A3A48((uint64_t)v4, (uint64_t)v7, 0, 0, v15, (uint64_t)v2, 0, 0, 1.0, 3.0, 0.5, 0, 0, 5, 0);
  qword_1014D4F20 = (uint64_t)result;
  return result;
}

id sub_1001A3DE4(void *a1)
{
  id v1;
  void *v2;
  char **v3;

  v1 = objc_msgSend(a1, "userInterfaceStyle");
  v2 = (void *)objc_opt_self(UIColor);
  v3 = &selRef_secondarySystemGroupedBackgroundColor;
  if (v1 != (id)2)
    v3 = &selRef_systemWhiteColor;
  return objc_msgSend(v2, *v3);
}

id sub_1001A3E58()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id result;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_100008B04(&qword_101496880);
  __chkstk_darwin(v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "secondaryLabelColor");
  v5 = sub_100008B04((uint64_t *)&unk_101493B10);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E250A0;
  v7 = objc_msgSend(v3, "systemBlackColor");
  v8 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.16);

  *(_QWORD *)(v6 + 32) = v8;
  v9 = objc_msgSend(v3, "systemBlackColor");
  v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 0.0);

  *(_QWORD *)(v6 + 40) = v10;
  v17 = v6;
  specialized Array._endMutation()(v11);
  v12 = v17;
  v13 = type metadata accessor for BlendMode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v2, 1, 1, v13);
  v14 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle(0));
  result = sub_1001A3A48((uint64_t)v4, 0, 0, 0, v12, (uint64_t)v2, 0, 0, 1.0, 2.0, 1.5, 0, 0, 4, 0);
  qword_1014D4F28 = (uint64_t)result;
  return result;
}

id sub_1001A4040()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  id v5;
  id result;
  uint64_t v7;

  v0 = sub_100008B04(&qword_101496880);
  __chkstk_darwin(v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v4 = type metadata accessor for BlendMode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  v5 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle(0));
  result = sub_1001A3A48((uint64_t)v3, 0, 0, 0, 0, (uint64_t)v2, 0, 0, 1.0, 2.0, 1.5, 0, 0, 0, 0);
  qword_1014D4F30 = (uint64_t)result;
  return result;
}

id sub_1001A4150()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id result;
  uint64_t v10;

  v0 = sub_100008B04(&qword_101496880);
  __chkstk_darwin(v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "systemTealColor");
  v5 = type metadata accessor for BlendMode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  v6 = objc_msgSend(v3, "secondaryLabelColor");
  v7 = objc_msgSend(v3, "systemGray5Color");
  v8 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle(0));
  result = sub_1001A3A48((uint64_t)v4, 0, 0, 0, 0, (uint64_t)v2, (uint64_t)v6, 0, 1.0, 2.0, 1.5, (uint64_t)v7, 0, 1, 0);
  qword_1014D4F38 = (uint64_t)result;
  return result;
}

id sub_1001A42B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id result;
  uint64_t v14;

  v0 = sub_100008B04(&qword_101496880);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "systemTealColor");
  v5 = objc_msgSend(v3, "systemTealColor");
  v6 = objc_msgSend(v5, "colorWithAlphaComponent:", 0.5);

  v7 = type metadata accessor for BlendMode(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  v8 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.8, 1.0);
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:weight:", 11.0, UIFontWeightRegular);
  v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.8, 1.0);
  v11 = objc_msgSend(v3, "whiteColor");
  v12 = objc_allocWithZone((Class)type metadata accessor for MapsElevationChartStyle(0));
  result = sub_1001A3A48((uint64_t)v4, 0, 0, (uint64_t)v6, 0, (uint64_t)v2, (uint64_t)v8, (uint64_t)v9, 1.0, 4.0, 1.5, (uint64_t)v10, (uint64_t)v11, 2, 1);
  qword_1014D4F40 = (uint64_t)result;
  return result;
}

id sub_1001A44BC(uint64_t a1, uint64_t a2, _QWORD *a3, id *a4, uint64_t a5)
{
  if (*a3 != -1)
    swift_once(a3, a5);
  return *a4;
}

_QWORD *sub_1001A4518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gradientColors);
  if (!v1)
    goto LABEL_19;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v15 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gradientColors);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gradientColors));
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    if ((v2 & 0x8000000000000000) == 0)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v4 = 0;
        do
        {
          v5 = v4 + 1;
          v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
          v7 = Color.init(_:)(v6);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v8 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
          v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
          specialized ContiguousArray._endMutation()(v9);
          v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        v10 = (void **)(v1 + 32);
        do
        {
          v11 = *v10++;
          v12 = Color.init(_:)(v11);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v13 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
          v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
          specialized ContiguousArray._endMutation()(v14);
          --v2;
        }
        while (v2);
      }
      return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_19:
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x8000000100E4EF00, "Maps/MapsElevationChartStyle.swift", 34, 2, 176, 0);
    __break(1u);
  }
  return result;
}

id sub_1001A46E4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsElevationChartStyle(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001A47D0()
{
  return type metadata accessor for MapsElevationChartStyle(0);
}

uint64_t type metadata accessor for MapsElevationChartStyle(uint64_t a1)
{
  uint64_t result;

  result = qword_10149E9E8;
  if (!qword_10149E9E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MapsElevationChartStyle);
  return result;
}

void sub_1001A4814(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = "\b";
  v4[4] = "\b";
  v4[5] = "\b";
  v4[6] = "\b";
  sub_1001A48D0(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    v4[8] = "\b";
    v4[9] = "\b";
    v4[10] = "\b";
    v4[11] = "\b";
    v4[12] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[13] = &unk_100E316A0;
    v4[14] = &unk_100E316B8;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

void sub_1001A48D0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10149E9F8)
  {
    v2 = type metadata accessor for BlendMode(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10149E9F8);
  }
}

uint64_t getEnumTagSinglePayload for MapsElevationChartStyle.ContextStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MapsElevationChartStyle.ContextStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1001A4A00 + 4 * byte_100E31665[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1001A4A34 + 4 * byte_100E31660[v4]))();
}

uint64_t sub_1001A4A34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A4A3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001A4A44);
  return result;
}

uint64_t sub_1001A4A50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001A4A58);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1001A4A5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001A4A64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapsElevationChartStyle.ContextStyle()
{
  return &type metadata for MapsElevationChartStyle.ContextStyle;
}

unint64_t sub_1001A4A84()
{
  unint64_t result;

  result = qword_10149EA00;
  if (!qword_10149EA00)
  {
    result = swift_getWitnessTable(")o7", &type metadata for MapsElevationChartStyle.ContextStyle);
    atomic_store(result, (unint64_t *)&qword_10149EA00);
  }
  return result;
}

uint64_t sub_1001A4AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_101496880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A4B10(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008B04(&qword_101496880);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1001A4B50(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

double sub_1001A4BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001A4BB0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id CarEVChargingAvailabilityViewController.__allocating_init(viewModal:)(void *a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  id v5;
  objc_super v7;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps39CarEVChargingAvailabilityViewController_viewModal] = a1;
  v7.receiver = v3;
  v7.super_class = v1;
  v4 = a1;
  v5 = objc_msgSendSuper2(&v7, "initWithNibName:bundle:", 0, 0);
  swift_unknownObjectWeakAssign(&v4[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_observer], v5);

  return v5;
}

id CarEVChargingAvailabilityViewController.init(viewModal:)(void *a1)
{
  char *v1;
  char *v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps39CarEVChargingAvailabilityViewController_viewModal] = a1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CarEVChargingAvailabilityViewController();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v6, "initWithNibName:bundle:", 0, 0);
  swift_unknownObjectWeakAssign(&v3[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_observer], v4);

  return v4;
}

uint64_t type metadata accessor for CarEVChargingAvailabilityViewController()
{
  return objc_opt_self(_TtC4Maps39CarEVChargingAvailabilityViewController);
}

Swift::Void __swiftcall CarEVChargingAvailabilityViewController.loadView()()
{
  void *v0;
  uint64_t v1;
  id v2;

  v1 = type metadata accessor for CarEVChargingAvailabilityView();
  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v1)), "init");
  objc_msgSend(v0, "setView:", v2);

}

uint64_t type metadata accessor for CarEVChargingAvailabilityView()
{
  return objc_opt_self(_TtC4Maps29CarEVChargingAvailabilityView);
}

Swift::Void __swiftcall CarEVChargingAvailabilityViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for CarEVChargingAvailabilityViewController();
  objc_msgSendSuper2(&v6, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for CarEVChargingAvailabilityView();
    if (swift_dynamicCastClass(v2, v3))
    {
      v4 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC4Maps39CarEVChargingAvailabilityViewController_viewModal]
                     + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_sections);
      swift_bridgeObjectRetain(v4);
      sub_1001A4F4C(v5);

      swift_bridgeObjectRelease(v4);
    }
    else
    {

    }
  }
}

void sub_1001A4F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSString v33;
  id v34;
  id v35;
  unint64_t v36;
  __n128 v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  id v57;
  id v58;
  char *v59;
  id v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  Class isa;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v76 = a1;
  v88 = sub_100008B04(&qword_101494828);
  v82 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v87 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v86 = (char *)&v76 - v4;
  __chkstk_darwin(v5);
  v85 = (char *)&v76 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v76 - v8;
  v10 = sub_100008B04(&qword_10149EB40);
  v93 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v81 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04(&qword_10149EB48);
  __chkstk_darwin(v12);
  v90 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v89 = (char *)&v76 - v15;
  v94 = v1;
  v16 = sub_1001A5A50();
  v17 = objc_msgSend(v16, "arrangedSubviews");

  v18 = sub_10000E4BC(0, (unint64_t *)&qword_101493C30, UIView_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v25 = v19;
    else
      v25 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v20 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v19);
    if (!v20)
      goto LABEL_13;
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v20)
      goto LABEL_13;
  }
  if (v20 < 1)
  {
LABEL_31:
    __break(1u);
    return;
  }
  v21 = 0;
  do
  {
    if ((v19 & 0xC000000000000001) != 0)
      v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v19);
    else
      v22 = *(id *)(v19 + 8 * v21 + 32);
    v23 = v22;
    ++v21;
    v24 = sub_1001A5A50();
    objc_msgSend(v24, "_maps_removeArrangedSubview:", v23);

  }
  while (v20 != v21);
LABEL_13:
  swift_bridgeObjectRelease(v19);
  v78 = *(_QWORD *)(v76 + 16);
  if (v78)
  {
    v77 = v76 + 32;
    swift_bridgeObjectRetain(v76);
    v26 = 0;
    v84 = xmmword_100E250A0;
    v28 = (uint64_t *)v89;
    v27 = (unint64_t *)v90;
    v83 = v10;
    while (2)
    {
      v29 = v77 + 24 * v26;
      v31 = *(_QWORD *)(v29 + 16);
      v79 = *(_QWORD *)(v29 + 8);
      v30 = v79;
      swift_bridgeObjectRetain(v31);
      if (v30)
      {
        swift_bridgeObjectRetain(v30);
        v32 = sub_1001A67C0();
        v33 = String._bridgeToObjectiveC()();
        objc_msgSend(v32, "setText:", v33);

        v34 = sub_1001A5A50();
        objc_msgSend(v34, "addArrangedSubview:", v32);

        v35 = sub_1001A5A50();
        objc_msgSend(v35, "setCustomSpacing:afterView:", v32, 4.0);

      }
      v80 = v26 + 1;
      v36 = *(_QWORD *)(v31 + 16);
      v37 = swift_bridgeObjectRetain(v31);
      v38 = 0;
      v91 = v36;
      v92 = v31;
      while (1)
      {
        if (v38 == v36)
        {
          v39 = 1;
          v38 = v36;
        }
        else
        {
          if (v38 >= *(_QWORD *)(v31 + 16))
          {
            __break(1u);
            goto LABEL_31;
          }
          v40 = (uint64_t)&v81[*(int *)(v10 + 48)];
          sub_1001A6CAC(v31+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v38, v40);
          v41 = (uint64_t)v27 + *(int *)(v10 + 48);
          *v27 = v38;
          sub_1000207BC(v40, v41, &qword_101494828);
          v39 = 0;
          ++v38;
        }
        v42 = v93;
        (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t, __n128))(v93 + 56))(v27, v39, 1, v10, v37);
        sub_1000207BC((uint64_t)v27, (uint64_t)v28, &qword_10149EB48);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v42 + 48))(v28, 1, v10) == 1)
          break;
        v95 = *v28;
        v43 = (char *)v28 + *(int *)(v10 + 48);
        v44 = v88;
        v45 = *(int *)(v88 + 48);
        v46 = *(void **)&v43[v45];
        v47 = type metadata accessor for AttributedString(0);
        v48 = *(_QWORD *)(v47 - 8);
        v49 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
        v50 = v85;
        v49(v85, v43, v47);
        *(_QWORD *)&v50[v45] = v46;
        v51 = *(int *)(v44 + 48);
        v49(v9, v50, v47);
        *(_QWORD *)&v9[v51] = v46;
        v52 = *(int *)(v44 + 48);
        v53 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
        v54 = (uint64_t)v86;
        v53(v86, v9, v47);
        *(_QWORD *)(v54 + v52) = v46;
        v55 = *(int *)(v44 + 48);
        v56 = v87;
        v53(v87, v9, v47);
        *(_QWORD *)&v56[v55] = v46;
        v57 = objc_allocWithZone((Class)type metadata accessor for CarEVChargingRowView(0));
        v58 = v46;
        v59 = sub_1001A6930(v54, v58);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v56, v47);
        objc_msgSend(v59, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v60 = sub_1001A5A50();
        objc_msgSend(v60, "addArrangedSubview:", v59);

        v61 = (void *)objc_opt_self(NSLayoutConstraint);
        v62 = sub_100008B04((uint64_t *)&unk_101493B10);
        v63 = swift_allocObject(v62, 48, 7);
        *(_OWORD *)(v63 + 16) = v84;
        v64 = objc_msgSend(v59, "leadingAnchor");
        v65 = sub_1001A5A50();
        v66 = objc_msgSend(v65, "leadingAnchor");

        v67 = objc_msgSend(v64, "constraintEqualToAnchor:", v66);
        *(_QWORD *)(v63 + 32) = v67;
        v68 = objc_msgSend(v59, "trailingAnchor");
        v69 = sub_1001A5A50();
        v70 = objc_msgSend(v69, "trailingAnchor");

        v71 = objc_msgSend(v68, "constraintEqualToAnchor:", v70);
        *(_QWORD *)(v63 + 40) = v71;
        v96 = v63;
        v31 = v92;
        specialized Array._endMutation()(v72);
        v73 = v96;
        sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v61, "activateConstraints:", isa, swift_bridgeObjectRelease(v73).n128_f64[0]);

        if (v95 == *(_QWORD *)(v31 + 16) - 1)
        {
          v75 = sub_1001A5A50();
          objc_msgSend(v75, "setCustomSpacing:afterView:", v59, 8.0);

          sub_1001A6CF4((uint64_t)v9);
        }
        else
        {
          sub_1001A6CF4((uint64_t)v9);

        }
        v10 = v83;
        v28 = (uint64_t *)v89;
        v27 = (unint64_t *)v90;
        v36 = v91;
      }
      swift_bridgeObjectRelease_n(v31, 2);
      swift_bridgeObjectRelease(v79);
      v26 = v80;
      if (v80 != v78)
        continue;
      break;
    }
    swift_bridgeObjectRelease(v76);
  }
}

void CarEVChargingAvailabilityViewController.evChargingViewModelDidUpdate(_:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = objc_msgSend(v0, "view");
  if (v4)
  {
    v1 = type metadata accessor for CarEVChargingAvailabilityView();
    if (swift_dynamicCastClass(v4, v1))
    {
      v2 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC4Maps39CarEVChargingAvailabilityViewController_viewModal]
                     + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_sections);
      swift_bridgeObjectRetain(v2);
      sub_1001A4F4C(v3);

      swift_bridgeObjectRelease(v2);
    }
    else
    {

    }
  }
}

Swift::Void __swiftcall CarEVChargingAvailabilityViewController.configureForModalPresentation()()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setDirectionalLayoutMargins:", 16.0, 16.0, 16.0, 16.0);

  }
  else
  {
    __break(1u);
  }
}

void CarEVChargingAvailabilityViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.CarEVChargingAvailabilityViewController", 44, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id CarEVChargingAvailabilityViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarEVChargingAvailabilityViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1001A5A50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
    objc_msgSend(v4, "setAxis:", 1);
    objc_msgSend(v4, "setSpacing:", 2.0);
    objc_msgSend(v4, "setAlignment:", 1);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setLayoutMarginsRelativeArrangement:", 1);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void sub_1001A5B24()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;

  v1 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E2A2C0;
  v4 = sub_1001A5A50();
  v5 = objc_msgSend(v4, "leadingAnchor");

  v6 = objc_msgSend(v0, "layoutMarginsGuide");
  v7 = objc_msgSend(v6, "leadingAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = sub_1001A5A50();
  v10 = objc_msgSend(v9, "topAnchor");

  v11 = objc_msgSend(v0, "layoutMarginsGuide");
  v12 = objc_msgSend(v11, "topAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v3 + 40) = v13;
  v14 = sub_1001A5A50();
  v15 = objc_msgSend(v14, "trailingAnchor");

  v16 = objc_msgSend(v0, "layoutMarginsGuide");
  v17 = objc_msgSend(v16, "trailingAnchor");

  v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v3 + 48) = v18;
  v19 = sub_1001A5A50();
  v20 = objc_msgSend(v19, "bottomAnchor");

  v21 = objc_msgSend(v0, "layoutMarginsGuide");
  v22 = objc_msgSend(v21, "bottomAnchor");

  v23 = objc_msgSend(v20, "constraintLessThanOrEqualToAnchor:", v22);
  *(_QWORD *)(v3 + 56) = v23;
  specialized Array._endMutation()(v24);
  sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

id CarEVChargingAvailabilityView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

void CarEVChargingAvailabilityView.init(coder:)()
{
  char *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E41970, "Maps/CarEVChargingAvailabilityViewController.swift", 50, 2, 81, 0);
  __break(1u);
}

id sub_1001A5F3C()
{
  id v0;
  NSString v1;
  double v2;
  double v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v1);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 0, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 0, v3);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "_mapsCar_fontForTextStyle:weight:", UIFontTextStyleCaption1, UIFontWeightRegular);
  objc_msgSend(v0, "setFont:", v4);

  v5 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v0, "setTextColor:", v5);

  return v0;
}

id sub_1001A609C()
{
  id v0;
  NSString v1;
  double v2;
  double v3;
  id v4;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v1);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 0, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 0, v3);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "_mapsCar_fontForTextStyle:weight:", UIFontTextStyleCaption1, UIFontWeightRegular);
  objc_msgSend(v0, "setFont:", v4);

  objc_msgSend(v0, "setTextAlignment:", 2);
  return v0;
}

void sub_1001A61D8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  Class isa;

  v33 = (void *)objc_opt_self(NSLayoutConstraint);
  v1 = sub_100008B04((uint64_t *)&unk_101493B10);
  v2 = swift_allocObject(v1, 88, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E31750;
  v3 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1001A5F3C);
  v4 = objc_msgSend(v3, "leadingAnchor");

  v5 = objc_msgSend(v0, "leadingAnchor");
  v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1001A5F3C);
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = objc_msgSend(v0, "topAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v2 + 40) = v10;
  v11 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1001A5F3C);
  v12 = objc_msgSend(v11, "bottomAnchor");

  v13 = objc_msgSend(v0, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v2 + 48) = v14;
  v15 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1001A5F3C);
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1001A609C);
  v18 = objc_msgSend(v17, "leadingAnchor");

  v19 = objc_msgSend(v16, "constraintLessThanOrEqualToAnchor:constant:", v18, 8.0);
  *(_QWORD *)(v2 + 56) = v19;
  v20 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1001A609C);
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = objc_msgSend(v0, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v2 + 64) = v23;
  v24 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1001A609C);
  v25 = objc_msgSend(v24, "topAnchor");

  v26 = objc_msgSend(v0, "topAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v2 + 72) = v27;
  v28 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1001A609C);
  v29 = objc_msgSend(v28, "bottomAnchor");

  v30 = objc_msgSend(v0, "bottomAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v2 + 80) = v31;
  specialized Array._endMutation()(v32);
  sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v33, "activateConstraints:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

}

uint64_t sub_1001A66F8()
{
  return type metadata accessor for CarEVChargingRowView(0);
}

uint64_t type metadata accessor for CarEVChargingRowView(uint64_t a1)
{
  uint64_t result;

  result = qword_10149EB18;
  if (!qword_10149EB18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CarEVChargingRowView);
  return result;
}

uint64_t sub_1001A673C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for AttributedString(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = "\b";
    v4[3] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_1001A67C0()
{
  id v0;
  NSString v1;
  double v2;
  double v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v1);

  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 0, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, "setContentCompressionResistancePriority:forAxis:", 0, v3);
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "_mapsCar_fontForTextStyle:weight:", UIFontTextStyleFootnote, UIFontWeightBold);
  objc_msgSend(v0, "setFont:", v4);

  v5 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v0, "setTextColor:", v5);

  objc_msgSend(v0, "setTextAlignment:", 0);
  return v0;
}

char *sub_1001A6930(uint64_t a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  id v12;
  id v13;
  char *v14;
  NSString v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;

  v23 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = type metadata accessor for AttributedString(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel] = 0;
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
  v11(&v2[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_leadingText], a1, v6, v8);
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_trailingText] = a2;
  v24.receiver = v2;
  v24.super_class = ObjectType;
  v12 = a2;
  v13 = objc_msgSendSuper2(&v24, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setDirectionalLayoutMargins:", 0.0, 8.0, 0.0, 8.0);
  v14 = (char *)v13;
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccessibilityIdentifier:", v15);

  v16 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1001A5F3C);
  objc_msgSend(v14, "addSubview:", v16);

  v17 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1001A609C);
  objc_msgSend(v14, "addSubview:", v17);

  sub_1001A61D8();
  v18 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___leadingLabel, (uint64_t (*)(void))sub_1001A5F3C);
  sub_10000E4BC(0, (unint64_t *)&unk_101494830, NSAttributedString_ptr);
  ((void (*)(char *, char *, uint64_t))v11)(v10, &v14[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_leadingText], v6);
  v19 = (void *)NSAttributedString.init(_:)(v10);
  objc_msgSend(v18, "setAttributedText:", v19);

  v20 = sub_1000BB954(&OBJC_IVAR____TtC4Maps20CarEVChargingRowView____lazy_storage___trailingLabel, (uint64_t (*)(void))sub_1001A609C);
  objc_msgSend(v20, "setAttributedText:", *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps20CarEVChargingRowView_trailingText]);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
  return v14;
}

id sub_1001A6BC0()
{
  char *v0;
  objc_class *ObjectType;
  id v2;
  NSString v3;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps29CarEVChargingAvailabilityView____lazy_storage___stackView] = 0;
  v6.receiver = v0;
  v6.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v6, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setAccessibilityIdentifier:", v3);

  objc_msgSend(v2, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  v4 = sub_1001A5A50();
  objc_msgSend(v2, "addSubview:", v4);

  sub_1001A5B24();
  return v2;
}

uint64_t sub_1001A6CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_101494828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A6CF4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008B04(&qword_101494828);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001A6D38()
{
  unint64_t result;

  result = qword_10149EBB0;
  if (!qword_10149EBB0)
  {
    result = swift_getWitnessTable("\to7", &type metadata for TransitPreferCommuterRailEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149EBB0);
  }
  return result;
}

uint64_t sub_1001A6D7C()
{
  return sub_100010D70(&qword_10149EBB8, &qword_10149EBC0, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1001A6DA8()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4F88);
  sub_10000E918(v20, (uint64_t)qword_1014D4F88);
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x8000000100E4F160);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "A setting to choose travel by rail as a transit preference", 58, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_1001A6FBC(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4FA0);
  sub_10000E918(v1, (uint64_t)qword_1014D4FA0);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E4F2A0);
}

uint64_t sub_1001A701C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4FB8);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4FB8);
  IntentDescription.init(stringLiteral:)(0xD00000000000003DLL, 0x8000000100E4F260);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_1001A70A4()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E31D40);
  qword_1014D4FD0 = result;
  return result;
}

uint64_t sub_1001A70C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_1001A70E4, 0, 0);
}

uint64_t sub_1001A70E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_1014910C0 != -1)
    swift_once(&qword_1014910C0, sub_1001A70A4);
  v2 = qword_1014D4FD0;
  *(_QWORD *)(v0 + 80) = qword_1014D4FD0;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149ECC0, &qword_10149ECC8, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_1001A71E4;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_1001A71E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_1001A7264;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001A7264()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4FD0;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_1001A72F8()
{
  double result;

  if (qword_1014910C0 != -1)
    swift_once(&qword_1014910C0, sub_1001A70A4);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_1001A733C()
{
  unint64_t result;

  result = qword_10149EBC8;
  if (!qword_10149EBC8)
  {
    result = swift_getWitnessTable(byte_100E31900, &type metadata for TransitPreferCommuterRailEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149EBC8);
  }
  return result;
}

unint64_t sub_1001A7384()
{
  unint64_t result;

  result = qword_10149EBD0;
  if (!qword_10149EBD0)
  {
    result = swift_getWitnessTable(byte_100E31928, &type metadata for TransitPreferCommuterRailEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149EBD0);
  }
  return result;
}

uint64_t sub_1001A73C8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10106AD54, 1) + 8);
}

uint64_t sub_1001A73EC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1001A6D38();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_1001A742C@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_1014910B0, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4FA0, (uint64_t)sub_1001A6FBC, a1);
}

uint64_t sub_1001A7450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1014910B8 != -1)
    swift_once(&qword_1014910B8, sub_1001A701C);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4FB8);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_1001A74B0(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149ECDC);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_1001A70E4, 0, 0);
}

uint64_t sub_1001A7518@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1001A8010();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001A753C()
{
  return 0xD000000000000030;
}

unint64_t sub_1001A755C()
{
  unint64_t result;

  result = qword_10149EBE0;
  if (!qword_10149EBE0)
  {
    result = swift_getWitnessTable(byte_100E31974, &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EBE0);
  }
  return result;
}

unint64_t sub_1001A75A4()
{
  unint64_t result;

  result = qword_10149EBE8;
  if (!qword_10149EBE8)
  {
    result = swift_getWitnessTable(byte_100E31B6C, &type metadata for TransitPreferCommuterRailQuery);
    atomic_store(result, (unint64_t *)&qword_10149EBE8);
  }
  return result;
}

unint64_t sub_1001A75EC()
{
  unint64_t result;

  result = qword_10149EBF0;
  if (!qword_10149EBF0)
  {
    result = swift_getWitnessTable(byte_100E319CC, &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EBF0);
  }
  return result;
}

unint64_t sub_1001A7634()
{
  unint64_t result;

  result = qword_10149EBF8;
  if (!qword_10149EBF8)
  {
    result = swift_getWitnessTable("}n7", &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EBF8);
  }
  return result;
}

unint64_t sub_1001A767C()
{
  unint64_t result;

  result = qword_10149EC00;
  if (!qword_10149EC00)
  {
    result = swift_getWitnessTable("en7", &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EC00);
  }
  return result;
}

unint64_t sub_1001A76C4()
{
  unint64_t result;

  result = qword_10149EC08;
  if (!qword_10149EC08)
  {
    result = swift_getWitnessTable(byte_100E31BE4, &type metadata for TransitPreferCommuterRailQuery);
    atomic_store(result, (unint64_t *)&qword_10149EC08);
  }
  return result;
}

uint64_t sub_1001A7708(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001A7720, 0, 0);
}

uint64_t sub_1001A7720()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  id v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)TransitMutablePreferences), "initWithDefaults:", v2);

  LOBYTE(v2) = objc_msgSend(v3, "isModeDisabled:", 4);
  *v1 = v2 ^ 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A77C4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_1001A77E0, 0, 0);
}

uint64_t sub_1001A77E0()
{
  uint64_t v0;
  char v1;
  id v2;
  id v3;
  int BOOL;

  v1 = *(_BYTE *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)TransitMutablePreferences), "initWithDefaults:", v2);

  objc_msgSend(v3, "setMode:disabled:", 4, (v1 & 1) == 0);
  objc_msgSend(v3, "synchronize");
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001A78BC()
{
  unint64_t result;

  result = qword_10149EC10;
  if (!qword_10149EC10)
  {
    result = swift_getWitnessTable(byte_100E31A6C, &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EC10);
  }
  return result;
}

unint64_t sub_1001A7904()
{
  unint64_t result;

  result = qword_10149EC18;
  if (!qword_10149EC18)
  {
    result = swift_getWitnessTable("%n7", &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EC18);
  }
  return result;
}

unint64_t sub_1001A794C()
{
  unint64_t result;

  result = qword_10149EC20;
  if (!qword_10149EC20)
  {
    result = swift_getWitnessTable("\rn7", &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EC20);
  }
  return result;
}

unint64_t sub_1001A7994()
{
  unint64_t result;

  result = qword_10149EC28;
  if (!qword_10149EC28)
  {
    result = swift_getWitnessTable(byte_100E31B14, &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EC28);
  }
  return result;
}

uint64_t sub_1001A79D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1001A7BA0();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1001A7A14@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_1014910A8, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4F88, (uint64_t)sub_1001A6DA8, a1);
}

uint64_t sub_1001A7A38()
{
  return sub_100010D70(&qword_10149EC30, &qword_10149EC38, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1001A7A64(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001A755C();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001A7AA0()
{
  unint64_t result;

  result = qword_10149EC40;
  if (!qword_10149EC40)
  {
    result = swift_getWitnessTable(byte_100E31B44, &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, (unint64_t *)&qword_10149EC40);
  }
  return result;
}

uint64_t sub_1001A7AE4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001A7BA0();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1001A7B1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001A7994();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001A7B58()
{
  unint64_t result;

  result = qword_10149EC48;
  if (!qword_10149EC48)
  {
    result = swift_getWitnessTable(byte_100E31BAC, &type metadata for TransitPreferCommuterRailQuery);
    atomic_store(result, (unint64_t *)&qword_10149EC48);
  }
  return result;
}

unint64_t sub_1001A7BA0()
{
  unint64_t result;

  result = qword_10149EC50[0];
  if (!qword_10149EC50[0])
  {
    result = swift_getWitnessTable(byte_100E31944, &type metadata for TransitPreferCommuterRailEntity);
    atomic_store(result, qword_10149EC50);
  }
  return result;
}

uint64_t sub_1001A7BE4(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001A7C3C, 0, 0);
}

uint64_t sub_1001A7C3C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149EBC0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x8000000100E4F160);
  v3 = sub_100010D70(&qword_10149ECC0, &qword_10149ECC8, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149ECB0, 0, &unk_10149ECB8, 0, &type metadata for TransitPreferCommuterRailEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001A7CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1001A75A4();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001A7D64()
{
  unint64_t result;

  result = qword_10149EC68;
  if (!qword_10149EC68)
  {
    result = swift_getWitnessTable("}m7", &type metadata for TransitPreferCommuterRailQuery);
    atomic_store(result, (unint64_t *)&qword_10149EC68);
  }
  return result;
}

unint64_t sub_1001A7DAC()
{
  unint64_t result;

  result = qword_10149EC70[0];
  if (!qword_10149EC70[0])
  {
    result = swift_getWitnessTable("Uk7", &type metadata for TransitPreferCommuterRailQuery);
    atomic_store(result, qword_10149EC70);
  }
  return result;
}

uint64_t sub_1001A7DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1001A75A4();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001A7E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1001A75A4();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1001A7EC8()
{
  unint64_t result;

  result = qword_10149EC88;
  if (!qword_10149EC88)
  {
    result = swift_getWitnessTable("=k7", &type metadata for TransitPreferCommuterRailQuery);
    atomic_store(result, (unint64_t *)&qword_10149EC88);
  }
  return result;
}

unint64_t sub_1001A7F10()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149EC90;
  if (!qword_10149EC90)
  {
    v1 = sub_10000E5D4(qword_10149EC98);
    v2 = sub_1001A794C();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149EC90);
  }
  return result;
}

uint64_t sub_1001A7F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1001A76C4();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransitPreferCommuterRailQuery()
{
  return &type metadata for TransitPreferCommuterRailQuery;
}

ValueMetadata *type metadata accessor for TransitPreferCommuterRailEntity.UpdateIntent_value()
{
  return &type metadata for TransitPreferCommuterRailEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for TransitPreferCommuterRailEntity()
{
  return &type metadata for TransitPreferCommuterRailEntity;
}

uint64_t sub_1001A8010()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149ECD0);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100E4F200);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_1001A755C();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000036, 0x8000000100E4F220);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_1001A8334@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

id PlaceNoteEditViewController.__allocating_init(note:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return PlaceNoteEditViewController.init(note:)(a1, a2);
}

uint64_t sub_1001A8380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;

  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a3)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = swift_retain(v4);
  v5(a2, v6, v8, v9);
  swift_release(v4);
  return swift_bridgeObjectRelease(v8);
}

void sub_1001A83F4(char a1, uint64_t a2, NSString a3, uint64_t a4)
{
  id v6;

  if (a3)
    a3 = String._bridgeToObjectiveC()();
  v6 = a3;
  (*(void (**)(uint64_t, _QWORD))(a4 + 16))(a4, a1 & 1);

}

void sub_1001A8448()
{
  char *v0;
  char *v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  id v5;

  v1 = &v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8];
  if (v2)
  {
    v3 = *(_QWORD *)v1 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v3 = HIBYTE(v2) & 0xF;
    if (!v3)
    {
      *(_QWORD *)v1 = 0;
      *((_QWORD *)v1 + 1) = 0;
      swift_bridgeObjectRelease(v2);
    }
  }
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v4 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
    v5 = objc_msgSend(v4, "trailingButton");

    objc_msgSend(v5, "setEnabled:", *((_QWORD *)v1 + 1) != 0);
  }
}

uint64_t PlaceNoteEditViewController.dismissHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler, v4, 0, 0);
  v2 = *v1;
  sub_10000C128(*v1, v1[1]);
  return v2;
}

uint64_t PlaceNoteEditViewController.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10000BF74(v6, v7);
}

uint64_t (*PlaceNoteEditViewController.dismissHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_1001A875C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  NSString v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSString v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v2 = objc_msgSend((id)objc_opt_self(ModalCardHeaderConfiguration), "defaultModalCardHeaderConfiguration");
  v3 = objc_msgSend(objc_allocWithZone((Class)ModalCardHeaderView), "initWithConfiguration:", v2);

  objc_msgSend(v3, "setUseAdaptiveFont:", 1);
  v4 = objc_msgSend(v3, "bottomHairline");
  objc_msgSend(v4, "setHidden:", 1);

  v5 = objc_msgSend(v3, "leadingButton");
  v6 = sub_1009A98D8();
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  objc_msgSend(v5, "setTitle:forState:", v6, 0, v7);

  v10 = objc_msgSend(v3, "leadingButton");
  objc_msgSend(v10, "addTarget:action:forControlEvents:", a1, "cancelTapped", 64);

  v11 = objc_msgSend(v3, "trailingButton");
  v12 = sub_1009A992C();
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v15 = v14;
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  objc_msgSend(v11, "setTitle:forState:", v12, 0, v13);

  v16 = objc_msgSend(v3, "trailingButton");
  objc_msgSend(v16, "addTarget:action:forControlEvents:", a1, "doneTapped", 64);

  return v3;
}

id sub_1001A8958()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView);
  }
  else
  {
    v4 = sub_1001251F0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id PlaceNoteEditViewController.init(note:)(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id result;
  void *v17;
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_defaultPadding] = 0x4030000000000000;
  v7 = &v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView] = 0;
  if (a2)
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  else
    v9 = 0;
  if (a2)
    v10 = a2;
  else
    v10 = 0xE000000000000000;
  v11 = v3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v10);
  v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v12 = v9;
  if (!v12)
  {
    swift_bridgeObjectRelease(a2);
    a1 = 0;
    a2 = 0;
  }
  v13 = &v11[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_originalNote];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v14 = *((_QWORD *)v7 + 1);
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  swift_bridgeObjectRetain(a2);

  swift_bridgeObjectRelease(v14);
  v18.receiver = v11;
  v18.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  result = objc_msgSend(v15, "cardPresentationController");
  if (result)
  {
    v17 = result;
    objc_msgSend(result, "setTakesAvailableHeight:", 1);

    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall PlaceNoteEditViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v12, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = objc_msgSend(v0, "cardPresentationController");
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v4, "setTakesAvailableHeight:", 1);

  v6 = objc_msgSend(v0, "cardPresentationController");
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  objc_msgSend(v6, "setPresentedModally:", 1);

  v8 = objc_msgSend(v0, "cardPresentationController");
  if (!v8)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v9 = v8;
  objc_msgSend(v8, "setAllowsSwipeToDismiss:", 0);

  sub_1001A8D5C();
  sub_1001A9370();
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v10 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
    v11 = objc_msgSend(v10, "trailingButton");

    objc_msgSend(v11, "setEnabled:", *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8] != 0);
  }
}

void sub_1001A8D5C()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char **v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  void *v15;
  id v16;
  NSString v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  NSString v22;
  uint64_t v23;
  void *v24;
  id v25;
  NSString v26;
  id v27;
  NSString v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  Class isa;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  double v54;
  uint64_t v55;
  NSString v56;
  _QWORD v57[6];

  v1 = v0;
  v2 = objc_msgSend(v0, "headerView");
  if (!v2)
    return;
  v3 = v2;
  v4 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
  objc_msgSend(v3, "addSubview:", v4);

  v5 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
  v6 = &v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8];
  v8 = (void *)objc_opt_self(MapsUILocalizationBridge);
  v9 = &selRef_addANoteTitle;
  if (v7)
    v9 = &selRef_editNoteTitle;
  v10 = objc_msgSend(v8, *v9);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setTitle:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v14 = objc_msgSend(objc_allocWithZone((Class)FooterContaineeAction), "init");
  v15 = (void *)objc_opt_self(MapsUILocalizationBridge);
  v16 = v14;
  v17 = objc_msgSend(v15, "deleteNoteButtonLabel");
  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v20 = v19;
    v17 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  objc_msgSend(v16, "setTitle:", v17, v18);

  v21 = v16;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setGlyph:", v22);

  objc_msgSend(v21, "setStyle:", 1);
  v23 = swift_allocObject(&unk_1011A8A68, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16);
  v57[4] = sub_1001AA558;
  v57[5] = v23;
  v57[0] = _NSConcreteStackBlock;
  v57[1] = 1107296256;
  v57[2] = sub_100136AFC;
  v57[3] = &unk_1011A8A80;
  v24 = _Block_copy(v57);
  swift_release();
  objc_msgSend(v21, "setActionBlock:", v24);
  _Block_release(v24);
  v25 = v21;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setAccessibilityIdentifier:", v26);

  v27 = v25;
  v28 = objc_msgSend(v27, "title");
  if (!v28)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v31 = v30;
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v31).n128_u64[0];
  }
  objc_msgSend(v27, "setAccessibilityLabel:", v28, v29);

  v32 = objc_msgSend(objc_allocWithZone((Class)MUActionGroupSectionView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v33 = v32;
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v33, "setAccessibilityIdentifier:", v34);

  v35 = sub_100008B04((uint64_t *)&unk_101493B10);
  v36 = swift_allocObject(v35, 40, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v36 + 32) = v27;
  v57[0] = v36;
  specialized Array._endMutation()(v36);
  v37 = v57[0];
  v38 = v27;
  sub_100008B04((uint64_t *)&unk_10149EDC0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v33, "setViewModels:", isa, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v40 = objc_msgSend((id)objc_opt_self(MUPlaceSectionView), "cardShadowSectionViewForContentView:sectionHeaderViewModel:", v33, 0);
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v41 = *(void **)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView] = v40;
  v42 = v40;

  v43 = objc_msgSend(v1, "view");
  if (!v43)
  {
    __break(1u);
    goto LABEL_17;
  }
  v44 = v43;
  objc_msgSend(v43, "addSubview:", v42);

  v45 = objc_msgSend(v1, "view");
  if (!v45)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v46 = v45;
  v47 = sub_1001A8958();
  objc_msgSend(v46, "addSubview:", v47);

  v48 = sub_1001A8958();
  v49 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
  objc_msgSend(v48, "addSubview:", v49);

  v50 = objc_msgSend(v1, "view");
  if (!v50)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v51 = v50;
  v52 = objc_msgSend(v50, "keyboardLayoutGuide");

  objc_msgSend(v52, "setFollowsUndockedKeyboard:", 1);
  v53 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
  v55 = *((_QWORD *)v6 + 1);
  if (v55)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v6 + 1));
    v56 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v54 = swift_bridgeObjectRelease(v55).n128_u64[0];
  }
  else
  {
    v56 = 0;
  }
  objc_msgSend(v53, "setText:", v56, v54);

}

void sub_1001A9370()
{
  char *v0;
  char *v1;
  Class v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  Class isa;
  id v78;
  id v79;
  id v80;
  id v81;
  NSString v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  NSString v90;
  double v91;
  id v92;
  void *v93;
  id v94;
  uint64_t v95;
  id v96;
  id v97;
  Class v98;
  uint64_t v99;
  id v100;
  Class v101;
  uint64_t v102;
  id v103;
  id v104;
  Class v105;
  uint64_t v106;
  uint64_t v107;

  v1 = v0;
  v2 = (Class)objc_msgSend(v0, "headerView");
  if (v2)
  {
    v3 = *(void **)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView];
    if (!v3)
    {
LABEL_11:

      return;
    }
    v105 = v2;
    v102 = sub_100008B04((uint64_t *)&unk_101493B10);
    v4 = swift_allocObject(v102, 144, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100E31D70;
    v5 = v3;
    v6 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
    v7 = objc_msgSend(v6, "leadingAnchor");

    v8 = -[objc_class leadingAnchor](v105, "leadingAnchor");
    v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

    *(_QWORD *)(v4 + 32) = v9;
    v10 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
    v11 = objc_msgSend(v10, "topAnchor");

    v12 = -[objc_class topAnchor](v105, "topAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v4 + 40) = v13;
    v14 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
    v15 = objc_msgSend(v14, "trailingAnchor");

    v16 = -[objc_class trailingAnchor](v105, "trailingAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v4 + 48) = v17;
    v18 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView, (uint64_t (*)(uint64_t))sub_1001A875C);
    v19 = objc_msgSend(v18, "bottomAnchor");

    v20 = -[objc_class bottomAnchor](v105, "bottomAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    *(_QWORD *)(v4 + 56) = v21;
    v22 = objc_msgSend(v5, "leadingAnchor");
    v23 = objc_msgSend(v1, "view");
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, "leadingAnchor");

      v26 = objc_msgSend(v22, "constraintEqualToAnchor:", v25);
      *(_QWORD *)(v4 + 64) = v26;
      v27 = objc_msgSend(v5, "bottomAnchor");
      v28 = objc_msgSend(v1, "view");
      if (v28)
      {
        v29 = v28;
        v30 = objc_msgSend(v28, "layoutMarginsGuide");

        v31 = objc_msgSend(v30, "bottomAnchor");
        v32 = objc_msgSend(v27, "constraintEqualToAnchor:", v31);

        *(_QWORD *)(v4 + 72) = v32;
        v33 = objc_msgSend(v5, "trailingAnchor");
        v34 = objc_msgSend(v1, "view");
        if (v34)
        {
          v35 = v34;
          v36 = objc_msgSend(v34, "trailingAnchor");

          v37 = objc_msgSend(v33, "constraintEqualToAnchor:", v36);
          *(_QWORD *)(v4 + 80) = v37;
          v38 = sub_1001A8958();
          v39 = objc_msgSend(v38, "leadingAnchor");

          v40 = objc_msgSend(v1, "view");
          if (v40)
          {
            v41 = v40;
            v104 = v5;
            v42 = objc_msgSend(v40, "layoutMarginsGuide");

            v43 = objc_msgSend(v42, "leadingAnchor");
            v44 = objc_msgSend(v39, "constraintEqualToAnchor:", v43);

            *(_QWORD *)(v4 + 88) = v44;
            v45 = sub_1001A8958();
            v46 = objc_msgSend(v45, "topAnchor");

            v47 = -[objc_class bottomAnchor](v105, "bottomAnchor");
            v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

            *(_QWORD *)(v4 + 96) = v48;
            v49 = sub_1001A8958();
            v50 = objc_msgSend(v49, "trailingAnchor");

            v51 = objc_msgSend(v1, "view");
            if (v51)
            {
              v52 = v51;
              v103 = (id)objc_opt_self(NSLayoutConstraint);
              v53 = objc_msgSend(v52, "layoutMarginsGuide");

              v54 = objc_msgSend(v53, "trailingAnchor");
              v55 = objc_msgSend(v50, "constraintEqualToAnchor:", v54);

              *(_QWORD *)(v4 + 104) = v55;
              v56 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
              v57 = objc_msgSend(v56, "leadingAnchor");

              v58 = sub_1001A8958();
              v59 = objc_msgSend(v58, "leadingAnchor");

              v60 = objc_msgSend(v57, "constraintEqualToAnchor:", v59);
              *(_QWORD *)(v4 + 112) = v60;
              v61 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
              v62 = objc_msgSend(v61, "topAnchor");

              v63 = sub_1001A8958();
              v64 = objc_msgSend(v63, "topAnchor");

              v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);
              *(_QWORD *)(v4 + 120) = v65;
              v66 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
              v67 = objc_msgSend(v66, "trailingAnchor");

              v68 = sub_1001A8958();
              v69 = objc_msgSend(v68, "trailingAnchor");

              v70 = objc_msgSend(v67, "constraintEqualToAnchor:", v69);
              *(_QWORD *)(v4 + 128) = v70;
              v71 = sub_100125600(&OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
              v72 = objc_msgSend(v71, "bottomAnchor");

              v73 = sub_1001A8958();
              v74 = objc_msgSend(v73, "bottomAnchor");

              v75 = objc_msgSend(v72, "constraintEqualToAnchor:", v74);
              *(_QWORD *)(v4 + 136) = v75;
              specialized Array._endMutation()(v76);
              sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
              isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v103, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

              v78 = sub_1001A8958();
              v79 = objc_msgSend(v78, "bottomAnchor");

              v80 = objc_msgSend(v104, "topAnchor");
              v81 = objc_msgSend(v79, "constraintLessThanOrEqualToAnchor:constant:", v80, -200.0);

              v82 = String._bridgeToObjectiveC()();
              objc_msgSend(v81, "setIdentifier:", v82);

              v83 = objc_msgSend(v1, "view");
              if (v83)
              {
                v84 = v83;
                v85 = objc_msgSend(v83, "keyboardLayoutGuide");

                v86 = objc_msgSend(v85, "topAnchor");
                v87 = sub_1001A8958();
                v88 = objc_msgSend(v87, "bottomAnchor");

                v89 = objc_msgSend(v86, "constraintEqualToAnchor:constant:", v88, *(double *)&v1[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_defaultPadding]);
                v90 = String._bridgeToObjectiveC()();
                objc_msgSend(v89, "setIdentifier:", v90);

                LODWORD(v91) = 1132068864;
                objc_msgSend(v89, "setPriority:", v91);
                v92 = objc_msgSend(v1, "view");
                if (v92)
                {
                  v93 = v92;
                  v94 = objc_msgSend(v92, "keyboardLayoutGuide");

                  v95 = swift_allocObject(v102, 48, 7);
                  *(_OWORD *)(v95 + 16) = xmmword_100E250A0;
                  *(_QWORD *)(v95 + 32) = v89;
                  *(_QWORD *)(v95 + 40) = v81;
                  v106 = v95;
                  specialized Array._endMutation()(v95);
                  v96 = v89;
                  v97 = v81;
                  v98 = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v94, "setConstraints:activeWhenAwayFromEdge:", v98, 1, swift_bridgeObjectRelease(v106).n128_f64[0]);

                  v99 = swift_allocObject(v102, 40, 7);
                  *(_OWORD *)(v99 + 16) = xmmword_100E23F50;
                  *(_QWORD *)(v99 + 32) = v97;
                  v107 = v99;
                  specialized Array._endMutation()(v99);
                  v100 = v97;
                  v101 = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v103, "activateConstraints:", v101, swift_bridgeObjectRelease(v107).n128_f64[0]);

                  v2 = v101;
                  goto LABEL_11;
                }
                goto LABEL_19;
              }
LABEL_18:
              __break(1u);
LABEL_19:
              __break(1u);
              return;
            }
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

void sub_1001A9EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, _QWORD, __n128);
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = Strong + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler;
    swift_beginAccess(Strong + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler, &v9, 0, 0);
    v6 = *(void (**)(uint64_t, _QWORD, _QWORD, __n128))v5;
    if (*(_QWORD *)v5)
    {
      v7 = *(_QWORD *)(v5 + 8);
      v8 = swift_retain();
      v6(1, 0, 0, v8);
      sub_10000BF74((uint64_t)v6, v7);
    }

  }
}

double sub_1001AA018()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  void (*v3)(BOOL, uint64_t, uint64_t, __n128);
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  __n128 v12;
  _BYTE v13[24];

  v1 = v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler;
  *(_QWORD *)&result = swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler, v13, 0, 0).n128_u64[0];
  v3 = *(void (**)(BOOL, uint64_t, uint64_t, __n128))v1;
  if (*(_QWORD *)v1)
  {
    v4 = *(_QWORD *)(v1 + 8);
    v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_originalNote);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_originalNote + 8);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8);
    v9 = (v6 | v7) == 0;
    if (v6)
      v10 = v7 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      if (*v5 == v8 && v6 == v7)
        v9 = 1;
      else
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(*v5, v6, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note), *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8), 0);
    }
    sub_10000C128((uint64_t)v3, v4);
    v12 = swift_bridgeObjectRetain(v7);
    v3((v9 & 1) == 0, v8, v7, v12);
    sub_10000BF74((uint64_t)v3, v4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall PlaceNoteEditViewController.textViewDidChange(_:)(UITextView a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v2 = -[objc_class text](a1.super.super.super.super.isa, "text");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note + 8);
  *v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease(v8);
  sub_1001A8448();
}

void PlaceNoteEditViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.PlaceNoteEditViewController", 32, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t type metadata accessor for PlaceNoteEditViewController()
{
  return objc_opt_self(_TtC4Maps27PlaceNoteEditViewController);
}

void sub_1001AA43C()
{
  char *v0;
  char *v1;
  char *v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_defaultPadding] = 0x4030000000000000;
  v1 = &v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_note];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_dismissHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___modalHeaderView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27PlaceNoteEditViewController_deleteSectionView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E41970, "Maps/PlaceNotesEditViewController.swift", 39, 2, 83, 0);
  __break(1u);
}

uint64_t sub_1001AA4F8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001AA51C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001AA52C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001AA534()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001AA558(uint64_t a1)
{
  uint64_t v1;

  sub_1001A9EE4(a1, v1);
}

id sub_1001AA594()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryMetadata();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaceSummaryMetadata()
{
  return objc_opt_self(_TtC4Maps20PlaceSummaryMetadata);
}

id sub_1001AA61C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  unint64_t *v12;
  _QWORD *v13;
  char *v14;
  char **v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id result;
  void *v23;
  id v24;
  char *v25;
  uint64_t v26;
  char **v27;
  _QWORD *v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  NSObject *v41;
  int v42;
  _BOOL4 v43;
  char **v44;
  _DWORD *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  Swift::String v53;
  void *object;
  __int128 v55;
  unint64_t v56;
  unint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  double v62;
  unsigned int v63;
  unint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t ObjectType;
  unsigned int v81;
  unsigned __int8 v82;
  id v83;
  id v84;
  uint64_t v85;
  NSObject *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  char *v93;
  char *v94;
  _QWORD *v95;
  unint64_t v96;
  void *v97;
  _QWORD v98[4];
  _OWORD v99[2];
  __int128 v100;
  uint64_t v101;

  v3 = type metadata accessor for NSFastEnumerationIterator(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v94 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v85 - v7;
  v9 = v1;
  v10 = objc_msgSend(a1, "layoutTemplatePairs");
  if (!v10)
  {

    goto LABEL_64;
  }
  v89 = v4;
  v90 = a1;
  v92 = v9;
  v11 = v10;
  NSArray.makeIterator()();
  v91 = v11;

  v96 = sub_1000125FC();
  dispatch thunk of IteratorProtocol.next()(&v100, v3, v96);
  if (!v101)
  {
    v95 = _swiftEmptyArrayStorage;
LABEL_27:
    v89 = *(_QWORD *)(v89 + 8);
    ((void (*)(char *, uint64_t))v89)(v8, v3);
    if (qword_101490EA8 != -1)
      swift_once(&qword_101490EA8, sub_1001147B8);
    v38 = type metadata accessor for Logger(0);
    sub_10000E918(v38, (uint64_t)qword_1014D4B08);
    v39 = v95;
    swift_bridgeObjectRetain_n(v95, 2);
    v40 = (char *)v90;
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.info.getter();
    v43 = os_log_type_enabled(v41, (os_log_type_t)v42);
    v44 = &selRef_templateId;
    v9 = v92;
    v93 = v40;
    if (v43)
    {
      v88 = v42;
      v45 = (_DWORD *)swift_slowAlloc(22, -1);
      v87 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v99[0] = v87;
      v90 = v45;
      *v45 = 136315394;
      v46 = v39[2];
      v47 = _swiftEmptyArrayStorage;
      if (v46)
      {
        v86 = v41;
        v98[0] = _swiftEmptyArrayStorage;
        sub_1001323FC(0, v46, 0);
        v47 = (_QWORD *)v98[0];
        v48 = v39 + 6;
        do
        {
          v50 = *(v48 - 2);
          v49 = (void *)*(v48 - 1);
          v51 = *v48;
          *(_QWORD *)&v100 = 0;
          *((_QWORD *)&v100 + 1) = 0xE000000000000000;
          swift_bridgeObjectRetain(v51);
          swift_bridgeObjectRetain(v50);
          v52 = v49;
          _StringGuts.grow(_:)(18);
          swift_bridgeObjectRelease(*((_QWORD *)&v100 + 1));
          *(_QWORD *)&v100 = 0xD000000000000010;
          *((_QWORD *)&v100 + 1) = 0x8000000100E4F4A0;
          v53._countAndFlagsBits = sub_1000120A4();
          object = v53._object;
          String.append(_:)(v53);
          swift_bridgeObjectRelease(v51);

          swift_bridgeObjectRelease(v50);
          swift_bridgeObjectRelease(object);
          v55 = v100;
          v98[0] = v47;
          v57 = v47[2];
          v56 = v47[3];
          if (v57 >= v56 >> 1)
          {
            sub_1001323FC(v56 > 1, v57 + 1, 1);
            v47 = (_QWORD *)v98[0];
          }
          v48 += 3;
          v47[2] = v57 + 1;
          *(_OWORD *)&v47[2 * v57 + 4] = v55;
          --v46;
        }
        while (v46);
        v9 = v92;
        v40 = v93;
        v44 = &selRef_templateId;
        v41 = v86;
      }
      v58 = (uint8_t *)v90;
      v59 = Array.description.getter(v47, &type metadata for String);
      v61 = v60;
      swift_bridgeObjectRelease(v47);
      *(_QWORD *)&v100 = sub_1000C28FC(v59, v61, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, (char *)&v100 + 8, v58 + 4, v58 + 12);
      swift_bridgeObjectRelease_n(v95, 2);
      *(_QWORD *)&v62 = swift_bridgeObjectRelease(v61).n128_u64[0];
      *((_WORD *)v58 + 6) = 2080;
      v63 = objc_msgSend(v40, v44[308], v62);
      v64 = 0xE700000000000000;
      v65 = 0x6E776F6E6B6E55;
      if (v63 == 2)
      {
        v65 = 0x686372616553;
        v64 = 0xE600000000000000;
      }
      v66 = v63 == 1;
      if (v63 == 1)
        v67 = 0x706D6F636F747541;
      else
        v67 = v65;
      if (v66)
        v68 = 0xEC0000006574656CLL;
      else
        v68 = v64;
      *(_QWORD *)&v100 = sub_1000C28FC(v67, v68, (uint64_t *)v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v100, (char *)&v100 + 8, v58 + 14, v58 + 22);

      swift_bridgeObjectRelease(v68);
      _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v88, "[Place Summary] Template pairs: %s, useCase: %s", v58, 0x16u);
      v69 = v87;
      swift_arrayDestroy(v87, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v58, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v39, 2);
    }
    v70 = objc_msgSend(v40, "dyanmicContextServerOverrides");
    v71 = v70;
    if (v70)
    {
      v90 = v70;
      NSArray.makeIterator()();
      dispatch thunk of IteratorProtocol.next()(&v100, v3, v96);
      if (v101)
      {
        v72 = _swiftEmptyArrayStorage;
        do
        {
          sub_10000BE60(&v100, v99);
          sub_100011E20((uint64_t)v99, (uint64_t)v98);
          v74 = sub_10000E4BC(0, &qword_10149EE18, GEOPDPlaceSummaryDynamicContextServerOverride_ptr);
          swift_dynamicCast(&v97, v98, (char *)&type metadata for Any + 8, v74, 7);
          v75 = sub_1000A5194(v97);
          v77 = v76;
          sub_10000BEAC(v99);
          if (v75)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v72) & 1) == 0)
              v72 = sub_1000A8D30(0, v72[2] + 1, 1, v72);
            v79 = v72[2];
            v78 = v72[3];
            if (v79 >= v78 >> 1)
              v72 = sub_1000A8D30((_QWORD *)(v78 > 1), v79 + 1, 1, v72);
            v72[2] = v79 + 1;
            v73 = &v72[2 * v79];
            v73[4] = v75;
            v73[5] = v77;
          }
          dispatch thunk of IteratorProtocol.next()(&v100, v3, v96);
        }
        while (v101);
      }
      else
      {
        v72 = _swiftEmptyArrayStorage;
      }
      ((void (*)(char *, uint64_t))v89)(v94, v3);

      v9 = v92;
      v40 = v93;
      v44 = &selRef_templateId;
    }
    else
    {
      v72 = 0;
    }
    ObjectType = swift_getObjectType();

    v81 = objc_msgSend(v40, v44[308]);
    if (v81 == 2)
      v82 = 2;
    else
      v82 = v81 == 1;
    v83 = sub_1001AB298(v82, (uint64_t)v95, (uint64_t)v72);

    v84 = v83;
    if (v83)
    {

LABEL_65:
      swift_deallocPartialClassInstance(v9, ObjectType, 32, 7);
      return v83;
    }
LABEL_64:
    ObjectType = swift_getObjectType();
    v83 = 0;
    goto LABEL_65;
  }
  v95 = _swiftEmptyArrayStorage;
  v12 = (unint64_t *)&unk_10149EE20;
  v13 = GEOPDPlaceSummaryResultLayoutTemplatePair_ptr;
  v14 = (char *)&type metadata for Any + 8;
  v15 = &selRef_templateId;
  v93 = v8;
  while (1)
  {
    sub_10000BE60(&v100, v99);
    sub_100011E20((uint64_t)v99, (uint64_t)v98);
    v16 = sub_10000E4BC(0, v12, v13);
    swift_dynamicCast(&v97, v98, v14, v16, 7);
    v17 = v97;
    v18 = objc_msgSend(v97, v15[114]);
    if (!v18)
      goto LABEL_5;
    v19 = v18;
    v20 = sub_10000E4BC(0, (unint64_t *)&qword_10149AA00, GEOMapItemIdentifier_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    result = objc_msgSend(v17, "layoutTemplate");
    if (!result)
      break;
    v23 = result;
    v24 = sub_1000123EC(result);

    if (!v24)
    {
      swift_bridgeObjectRelease(v21);
LABEL_5:

      goto LABEL_6;
    }
    v25 = v14;
    v26 = v3;
    v27 = v15;
    v28 = v13;
    v29 = v12;
    sub_100037500(v17);
    v31 = v30;
    if ((unint64_t)v21 >> 62)
    {
      if (v21 < 0)
        v37 = v21;
      else
        v37 = v21 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v21);
      v32 = _CocoaArrayWrapper.endIndex.getter(v37);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      v32 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }

    if (v32 > 0)
    {
      sub_10000BEAC(v99);
      if ((swift_isUniquelyReferenced_nonNull_native(v95) & 1) != 0)
        v33 = v95;
      else
        v33 = sub_1000A8E3C(0, v95[2] + 1, 1, v95);
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
        v33 = sub_1000A8E3C((_QWORD *)(v34 > 1), v35 + 1, 1, v33);
      v33[2] = v35 + 1;
      v95 = v33;
      v36 = &v33[3 * v35];
      v36[4] = v21;
      v36[5] = v24;
      v36[6] = v31;
      v12 = v29;
      v13 = v28;
      v15 = v27;
      v3 = v26;
      v14 = v25;
      v8 = v93;
      goto LABEL_7;
    }
    swift_bridgeObjectRelease(v21);

    swift_bridgeObjectRelease(v31);
    v12 = v29;
    v13 = v28;
    v15 = v27;
    v3 = v26;
    v14 = v25;
    v8 = v93;
LABEL_6:
    sub_10000BEAC(v99);
LABEL_7:
    dispatch thunk of IteratorProtocol.next()(&v100, v3, v96);
    if (!v101)
      goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryMetadata.UseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001AAFE8 + 4 * byte_100E31DC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001AB01C + 4 * byte_100E31DC0[v4]))();
}

uint64_t sub_1001AB01C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001AB024(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001AB02CLL);
  return result;
}

uint64_t sub_1001AB038(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001AB040);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001AB044(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001AB04C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryMetadata.UseCase()
{
  return &type metadata for PlaceSummaryMetadata.UseCase;
}

unint64_t sub_1001AB06C()
{
  unint64_t result;

  result = qword_10149EE10;
  if (!qword_10149EE10)
  {
    result = swift_getWitnessTable("1m7", &type metadata for PlaceSummaryMetadata.UseCase);
    atomic_store(result, (unint64_t *)&qword_10149EE10);
  }
  return result;
}

_QWORD *sub_1001AB0B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *result;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs);
  v18 = *(_QWORD *)(v1 + 16);
  if (!v18)
    return 0;
  v20 = v1 + 32;
  result = (_QWORD *)swift_bridgeObjectRetain(v1);
  v3 = 0;
  v19 = result;
  do
  {
    if (v3 >= result[2])
      goto LABEL_26;
    v4 = (uint64_t *)(v20 + 24 * v3);
    v5 = *v4;
    v6 = (char *)v4[1];
    v7 = (_QWORD *)v4[2];
    v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries];
    v21 = *v4;
    v22 = v7;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v15 = *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries];
      else
        v15 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain_n(v8, 2);
      swift_bridgeObjectRetain(v5);
      v16 = v6;
      v9 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (v9)
      {
LABEL_7:
        v11 = 4;
        while (1)
        {
          result = (v8 & 0xC000000000000001) != 0
                 ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v8)
                 : *(id *)(v8 + 8 * v11);
          v12 = result;
          v13 = v11 - 3;
          if (__OFADD__(v11 - 4, 1))
            break;
          v14 = objc_msgSend(result, "containsPhotoCarouselUnit");

          if (v14)
          {
            swift_bridgeObjectRelease(v19);

            swift_bridgeObjectRelease(v21);
            swift_bridgeObjectRelease_n(v8, 2);
            v17 = 1;
            result = v22;
            goto LABEL_21;
          }
          ++v11;
          if (v13 == v9)
            goto LABEL_3;
        }
        __break(1u);
LABEL_26:
        __break(1u);
        return result;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain_n(v8, 2);
      swift_bridgeObjectRetain(v5);
      v10 = v6;
      if (v9)
        goto LABEL_7;
    }
LABEL_3:
    ++v3;
    swift_bridgeObjectRelease_n(v8, 2);

    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v22);
    result = v19;
  }
  while (v3 != v18);
  v17 = 0;
LABEL_21:
  swift_bridgeObjectRelease(result);
  return (_QWORD *)v17;
}

id sub_1001AB298(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  int v6;
  objc_class *v7;
  _BYTE *v8;
  _BYTE *v9;
  objc_super v11;

  v6 = a1;
  v7 = (objc_class *)type metadata accessor for PlaceSummaryMetadata();
  v8 = objc_allocWithZone(v7);
  v9 = v8;
  if (v6 && *(_QWORD *)(a2 + 16))
  {
    v8[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_useCase] = a1;
    *(_QWORD *)&v8[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs] = a2;
    *(_QWORD *)&v8[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_serverOverrides] = a3;
    v11.receiver = v8;
    v11.super_class = v7;
    return objc_msgSendSuper2(&v11, "init");
  }
  else
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    swift_deallocPartialClassInstance(v9, v7, 32, 7);
    return 0;
  }
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikeRouteType()
{
  return &type metadata for PlaceSummaryUnitHikeRouteType;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitCuratedGuides()
{
  return &type metadata for PlaceSummaryUnitCuratedGuides;
}

uint64_t sub_1001AB378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];

  if (!a2
    && a1
    && *(_QWORD *)(a1 + 16)
    && (sub_100011E20(a1 + 32, (uint64_t)v21),
        v5 = sub_10000E4BC(0, &qword_101493E78, MKMapItem_ptr),
        (swift_dynamicCast(&v20, v21, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0))
  {
    v6 = v20;
    KeyPath = swift_getKeyPath(&unk_100E31EC0);
    v8 = swift_getKeyPath(&unk_100E31EE8);
    v21[0] = v6;
    swift_retain();
    return static Published.subscript.setter(v21, a3, KeyPath, v8);
  }
  else
  {
    sub_10000E4BC(0, (unint64_t *)&qword_10149E3A0, OS_os_log_ptr);
    v10 = (void *)static OS_os_log.default.getter();
    v11 = static os_log_type_t.debug.getter();
    v12 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v13 = swift_allocObject(v12, 112, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100E22F70;
    v14 = *(void **)(a3 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier);
    *(_QWORD *)(v13 + 56) = sub_10000E4BC(0, &qword_10149A2F0, MKMapItemIdentifier_ptr);
    *(_QWORD *)(v13 + 64) = sub_1001AB980();
    *(_QWORD *)(v13 + 32) = v14;
    v21[0] = a2;
    v15 = v14;
    v16 = sub_100008B04(&qword_10149EE58);
    v17 = Optional.debugDescription.getter(v16);
    v19 = v18;
    *(_QWORD *)(v13 + 96) = &type metadata for String;
    *(_QWORD *)(v13 + 104) = sub_10000D8E0();
    *(_QWORD *)(v13 + 72) = v17;
    *(_QWORD *)(v13 + 80) = v19;
    os_log(_:dso:log:type:_:)("[Place Summary] Couldn't fetch MKMapItem with identifier %@. Error: %@", 70, 2, &_mh_execute_header, v10, v11, v13);

    return swift_bridgeObjectRelease(v13);
  }
}

id sub_1001AB588()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryMapItemDownloader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaceSummaryMapItemDownloader()
{
  return objc_opt_self(_TtC4Maps29PlaceSummaryMapItemDownloader);
}

uint64_t sub_1001AB5D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E31EC0);
  v5 = swift_getKeyPath(&unk_100E31EE8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001AB654(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E31EC0);
  v5 = swift_getKeyPath(&unk_100E31EE8);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

unint64_t sub_1001AB6C8(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  Class isa;
  id v17;
  uint64_t v18;
  __int128 v19;
  _QWORD aBlock[6];

  if (!result)
    return result;
  v1 = result;
  v2 = result & 0xFFFFFFFFFFFFFF8;
  if (!(result >> 62))
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(result);
    if (v3)
      goto LABEL_4;
    return swift_bridgeObjectRelease(v1);
  }
LABEL_18:
  if (v1 >= 0)
    v18 = v2;
  else
    v18 = v1;
  swift_bridgeObjectRetain(v1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v3)
    return swift_bridgeObjectRelease(v1);
LABEL_4:
  v4 = (void *)objc_opt_self(MKMapService);
  v5 = 4;
  v19 = xmmword_100E23F50;
  while (1)
  {
    v7 = v5 - 4;
    if ((v1 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v1);
      v9 = v5 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_17;
    }
    else
    {
      v8 = *(_QWORD *)(v1 + 8 * v5);
      swift_retain();
      v9 = v5 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    result = (unint64_t)objc_msgSend(v4, "sharedService", v19);
    if (!result)
      break;
    v10 = (void *)result;
    v11 = sub_100008B04((uint64_t *)&unk_101493B10);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = v19;
    v13 = *(void **)(v8 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier);
    *(_QWORD *)(v12 + 32) = v13;
    aBlock[0] = v12;
    specialized Array._endMutation()(v12);
    v14 = aBlock[0];
    sub_10000E4BC(0, &qword_10149A2F0, MKMapItemIdentifier_ptr);
    v15 = v13;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    v17 = objc_msgSend(v10, "ticketForIdentifiers:traits:", isa, 0);

    if (v17)
    {
      aBlock[4] = sub_1001AB960;
      aBlock[5] = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100028E50;
      aBlock[3] = &unk_1011A8BB8;
      v6 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v17, "submitWithHandler:networkActivity:", v6, 0);
      _Block_release(v6);
      swift_release();
      swift_unknownObjectRelease(v17);
    }
    else
    {
      swift_release();
    }
    ++v5;
    if (v9 == v3)
      return swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001AB960(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001AB378(a1, a2, v2);
}

double sub_1001AB968(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001AB978(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_1001AB980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149EE50;
  if (!qword_10149EE50)
  {
    v1 = sub_10000E4BC(255, &qword_10149A2F0, MKMapItemIdentifier_ptr);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10149EE50);
  }
  return result;
}

uint64_t PlatformController.currentNavigationSession.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void **p_cache;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v1 = objc_msgSend(v0, "sessionStack");
  v2 = sub_100008B04((uint64_t *)&unk_10149EE60);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  p_cache = LocalSearchViewController.cache;
  if (!v4)
  {
LABEL_11:
    v10 = 0;
    goto LABEL_13;
  }
  while (1)
  {
    while (__OFSUB__(v4--, 1))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (v3 < 0)
        v13 = v3;
      else
        v13 = v3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v3);
      v4 = _CocoaArrayWrapper.endIndex.getter(v13);
      swift_bridgeObjectRelease(v3);
      p_cache = (void **)(LocalSearchViewController + 16);
      if (!v4)
        goto LABEL_11;
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v3);
      goto LABEL_9;
    }
    if ((v4 & 0x8000000000000000) != 0)
      goto LABEL_19;
    if (v4 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_20;
    v7 = *(_QWORD *)(v3 + 32 + 8 * v4);
    swift_unknownObjectRetain(v7);
LABEL_9:
    v8 = objc_opt_self(p_cache + 208);
    v9 = swift_dynamicCastObjCClass(v7, v8);
    swift_unknownObjectRelease(v7);
    if (v9)
      break;
    if (!v4)
      goto LABEL_11;
  }
  v10 = sub_1001ABBB0(v4, v3);
LABEL_13:
  swift_bridgeObjectRelease(v3);
  if (!v10)
    return 0;
  v11 = objc_opt_self(p_cache + 208);
  result = swift_dynamicCastObjCClass(v10, v11);
  if (!result)
  {
    swift_unknownObjectRelease(v10);
    return 0;
  }
  return result;
}

unint64_t sub_1001ABBB0(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return specialized _ArrayBuffer._getElementSlowPath(_:)(result, a2);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return swift_unknownObjectRetain(*(_QWORD *)(a2 + 8 * result + 32));
  }
  __break(1u);
  return result;
}

_QWORD *sub_1001ABC08(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) != 0)
    return 0;
  v7 = a3;
  result = a1(&v6, &v7);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

_QWORD *sub_1001ABC60(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) != 0)
    return 0;
  v7 = a3;
  result = a1(&v6, &v7);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

_QWORD *sub_1001ABCC4(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;

  if ((a4 & 1) != 0)
    return 0;
  v6 = a3;
  result = a1(&v7, &v6);
  if (!v4)
    return (_QWORD *)v7;
  return result;
}

unint64_t sub_1001ABD18@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t result;

  result = sub_1001ABBB0(*a1, *a2);
  if (!v3)
    *a3 = result;
  return result;
}

void sub_1001ABD54()
{
  void *v0;
  id v1;
  uint64_t v2;

  if (qword_1014910E0 != -1)
    swift_once(&qword_1014910E0, sub_1001CBA20);
  v0 = (void *)static LibraryItemsCountManager.shared;
  v1 = objc_allocWithZone((Class)type metadata accessor for UserProfileLinkLibraryProvider());
  UserProfileLinkLibraryProvider.init(countsManager:)((char *)v0);
  static UserProfileLinkLibraryProvider.shared = v2;
}

void UserProfileLinkLibraryProvider.__allocating_init(countsManager:)(char *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  UserProfileLinkLibraryProvider.init(countsManager:)(a1);
}

uint64_t *UserProfileLinkLibraryProvider.shared.unsafeMutableAddressor()
{
  if (qword_1014910C8 != -1)
    swift_once(&qword_1014910C8, sub_1001ABD54);
  return &static UserProfileLinkLibraryProvider.shared;
}

id static UserProfileLinkLibraryProvider.shared.getter()
{
  if (qword_1014910C8 != -1)
    swift_once(&qword_1014910C8, sub_1001ABD54);
  return (id)static UserProfileLinkLibraryProvider.shared;
}

id UserProfileLinkLibraryProvider.observers.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_observers);
}

void UserProfileLinkLibraryProvider.init(countsManager:)(char *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  char *v8;
  void *v9;
  char *v10;
  char *v11;
  char IsEnabled_HikingiOS;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  objc_super v23;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v5 = OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_observers;
  v6 = objc_allocWithZone((Class)GEOObserverHashTable);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "initWithProtocol:queue:", &OBJC_PROTOCOL___UserProfileLinkDataProvidingObserver, 0);
  v8 = &v7[OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount];
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_countsManager] = a1;
  v9 = *(void **)&a1[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts];
  if (!v9)
  {
LABEL_7:
    v19 = a1;
    v18 = 0;
LABEL_9:
    *(_QWORD *)v8 = v18;
    v8[8] = v9 == 0;

    v23.receiver = v7;
    v23.super_class = ObjectType;
    v20 = objc_msgSendSuper2(&v23, "init");
    v21 = *(void **)&a1[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers];
    v22 = v20;
    objc_msgSend(v21, "registerObserver:", v22);

    return;
  }
  v10 = a1;
  v11 = v9;
  IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS();
  v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount];
  v14 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
  if ((IsEnabled_HikingiOS & 1) != 0)
  {
    v15 = __OFADD__(v13, v14);
    v16 = v13 + v14;
    if (!v15)
    {
      v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount];

      v18 = v16 + v17;
      if (!__OFADD__(v16, v17))
        goto LABEL_9;
      __break(1u);
      goto LABEL_7;
    }
    __break(1u);
  }
  else
  {

    v18 = v13 + v14;
    if (!__OFADD__(v13, v14))
      goto LABEL_9;
  }
  __break(1u);
}

void __swiftcall UserProfileLinkLibraryProvider.createUserProfileLink()(UserProfileLink *__return_ptr retstr)
{
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  NSString v5;
  id v6;
  id v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  id v12;
  id v13;
  NSString v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSString v21;
  Swift::String v22;

  v2 = objc_msgSend((id)objc_opt_self(UIFontDescriptor), "preferredFontDescriptorWithTextStyle:", UIFontTextStyleSubheadline);
  v3 = objc_msgSend(v2, "fontDescriptorWithSymbolicTraits:", 2);

  if (!v3)
    v3 = objc_msgSend(objc_allocWithZone((Class)UIFontDescriptor), "init");
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v3, 11.0);

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v5);

  if (v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v4);
    v8 = objc_msgSend(v6, "imageWithConfiguration:", v7);

  }
  else
  {
    v8 = 0;
  }
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v22._countAndFlagsBits = 0xD000000000000038;
  v22._object = (void *)0x8000000100E4F5C0;
  v9._countAndFlagsBits = 0x207972617262694CLL;
  v9._object = (void *)0xEE006E6F74747562;
  v10._countAndFlagsBits = 0x7972617262694CLL;
  v10._object = (void *)0xE700000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v10, v22)._object;
  v12 = objc_allocWithZone((Class)UserProfileLink);
  v13 = v8;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "initWithTitle:icon:", v14, v13, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v15, "setUserProfileLinkType:", 0);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount + 8) & 1) != 0)
  {
    v16 = 0xE000000000000000;
  }
  else
  {
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount);
    v18 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100E22F40;
    *(_QWORD *)(v19 + 56) = &type metadata for Int;
    *(_QWORD *)(v19 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v19 + 32) = v17;
    static String.localizedStringWithFormat(_:_:)(25637, 0xE200000000000000, v19);
    v16 = v20;
    swift_bridgeObjectRelease(v19);
  }
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setSubtitle:", v21, swift_bridgeObjectRelease(v16).n128_f64[0]);

}

Swift::String __swiftcall UserProfileLinkLibraryProvider.retrieveSubtitleText()()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  Swift::String result;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount + 8) & 1) != 0)
  {
    v1 = 0;
    v2 = 0xE000000000000000;
  }
  else
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount);
    v4 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v5 = swift_allocObject(v4, 72, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100E22F40;
    *(_QWORD *)(v5 + 56) = &type metadata for Int;
    *(_QWORD *)(v5 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v5 + 32) = v3;
    v1 = static String.localizedStringWithFormat(_:_:)(25637, 0xE200000000000000, v5);
    v2 = v6;
    swift_bridgeObjectRelease(v5);
  }
  v7 = v1;
  v8 = (void *)v2;
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

double sub_1001AC4B0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  double result;
  id v8;
  _BYTE v9[32];

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_observers), "allObservers"));
  v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8);

  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = v2 + 32;
    do
    {
      sub_100011E20(v4, (uint64_t)v9);
      v5 = sub_100008B04(&qword_10149EF18);
      if ((swift_dynamicCast(&v8, v9, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
      {
        v6 = v8;
        if ((objc_msgSend(v8, "respondsToSelector:", "dataDidUpdateForUserProfileLinkType:") & 1) != 0)
          objc_msgSend(v6, "dataDidUpdateForUserProfileLinkType:", 0);
        swift_unknownObjectRelease(v6);
      }
      v4 += 32;
      --v3;
    }
    while (v3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  }
  return result;
}

void UserProfileLinkLibraryProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.UserProfileLinkLibraryProvider", 35, "init()", 6, 0);
  __break(1u);
}

void _s4Maps30UserProfileLinkLibraryProviderC24libraryItemsCountManager_15didUpdateCountsyAA0ehiJ0C_AA0ehI0CtF_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  int IsEnabled_HikingiOS;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  char v18;
  char *v19;
  __n128 v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_countsManager);
  v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps30UserProfileLinkLibraryProvider_lastTotalCount + 8);
  v4 = OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts;
  v5 = *(void **)(v2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
  if (!v5)
    goto LABEL_7;
  v6 = *v1;
  v7 = v5;
  IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS(v8);
  v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount];
  v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
  if (!IsEnabled_HikingiOS)
  {

    v15 = v10 + v11;
    if (!__OFADD__(v10, v11))
      goto LABEL_10;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v12 = __OFADD__(v10, v11);
  v13 = v10 + v11;
  if (v12)
  {
    __break(1u);
    goto LABEL_26;
  }
  v14 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount];

  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_7:
    if ((v3 & 1) != 0)
      return;
    v16 = 0;
    v17 = 1;
LABEL_24:
    *v1 = (uint64_t)v16;
    *((_BYTE *)v1 + 8) = v17;
    sub_1001AC4B0();
    return;
  }
LABEL_10:
  if (v6 == v15)
    v18 = v3;
  else
    v18 = 1;
  if ((v18 & 1) == 0)
    return;
  v16 = *(void **)(v2 + v4);
  if (!v16)
  {
    v17 = 1;
    goto LABEL_24;
  }
  v19 = v16;
  v21 = MapsFeature_IsEnabled_HikingiOS(v20);
  v22 = *(_QWORD *)&v19[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount];
  v23 = *(_QWORD *)&v19[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
  if (!v21)
  {

    v16 = (void *)(v22 + v23);
    if (!__OFADD__(v22, v23))
    {
LABEL_23:
      v17 = 0;
      goto LABEL_24;
    }
    goto LABEL_28;
  }
  v12 = __OFADD__(v22, v23);
  v24 = v22 + v23;
  if (v12)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  v25 = *(_QWORD *)&v19[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount];

  v16 = (void *)(v24 + v25);
  if (!__OFADD__(v24, v25))
    goto LABEL_23;
  __break(1u);
}

uint64_t type metadata accessor for UserProfileLinkLibraryProvider()
{
  return objc_opt_self(_TtC4Maps30UserProfileLinkLibraryProvider);
}

void sub_1001AC984(char *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v2 = *(void **)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
  v3 = objc_msgSend(v2, "publisherAttribution");
  if (!v3)
  {
    if (qword_101490E80 != -1)
      swift_once(&qword_101490E80, sub_1001146E8);
    v7 = type metadata accessor for Logger(0);
    sub_10000E918(v7, (uint64_t)qword_1014D4A90);
    v8 = a1;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v11 = 138412290;
      v15 = v2;
      v13 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v11 + 4, v11 + 12);
      *v12 = v2;

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Missing publisher attribution for : %@.", v11, 0xCu);
      v14 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v12, 1, v14);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

    }
    goto LABEL_9;
  }
  v4 = v3;
  v5 = objc_msgSend(objc_allocWithZone((Class)MapsUIImagePublisherSpec), "initWithIconIdentifier:", objc_msgSend(v3, "iconIdentifier"));
  if (v5)
  {
    v6 = v5;
    sub_1001AD914((uint64_t)v5, a1);
    swift_unknownObjectRelease(v4);

LABEL_9:
    sub_1001ACE34(a1);
    return;
  }
  __break(1u);
}

void sub_1001ACBA8(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v24 = v10;
    sub_10009729C();
    v23 = v5;
    v13 = a1;
    v14 = (void *)static OS_dispatch_queue.main.getter();
    v15 = swift_allocObject(&unk_1011A8CE8, 32, 7);
    *(_QWORD *)(v15 + 16) = a2;
    *(_QWORD *)(v15 + 24) = v13;
    aBlock[4] = sub_1001ADADC;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BB8D4;
    aBlock[3] = &unk_1011A8D00;
    v16 = _Block_copy(aBlock);
    v17 = v13;
    v18 = a2;
    v19 = swift_release();
    static DispatchQoS.unspecified.getter(v19);
    aBlock[0] = _swiftEmptyArrayStorage;
    v20 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = sub_100008B04((uint64_t *)&unk_101492FB0);
    v22 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v4, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v24);
  }
}

uint64_t sub_1001ACDC0(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v3 = Image.init(uiImage:)(a2);
  KeyPath = swift_getKeyPath(&unk_100E31FD0);
  v5 = swift_getKeyPath(&unk_100E31FF8);
  v7 = v3;
  return static Published.subscript.setter(&v7, a1, KeyPath, v5);
}

void sub_1001ACE34(char *a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v13[6];

  KeyPath = swift_getKeyPath(&unk_100E31F88);
  v4 = swift_getKeyPath(&unk_100E31FB0);
  static Published.subscript.getter(v13, a1, KeyPath, v4);
  swift_release();
  swift_release();
  v5 = v13[0];
  swift_release();
  if (!v5)
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC4Maps35CuratedGuideViewModelDataDownloader_coverPhotoDownloader);
    v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    v8 = sub_1000D4C00();
    v9 = sub_1000D4CFC();
    v10 = swift_allocObject(&unk_1011A8BF8, 24, 7);
    *(_QWORD *)(v10 + 16) = a1;
    v13[4] = sub_1001AD8EC;
    v13[5] = v10;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_1001AD68C;
    v13[3] = &unk_1011A8C10;
    v11 = _Block_copy(v13);
    v12 = a1;
    swift_release();
    objc_msgSend(v6, "loadGradientCoverImageWithCuratedCollection:size:contentSizeCategory:usingImageSource:completion:", v7, 0, 11, v11, v8, v9);
    _Block_release(v11);
  }
}

void sub_1001ACF90(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  void ***v33;
  void **v34;
  void **v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  void **aBlock;
  _QWORD v40[5];

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(NSObject **)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0 && a1 && !a2)
  {
    sub_10009729C();
    v17 = (void *)static OS_dispatch_queue.main.getter();
    v18 = swift_allocObject(&unk_1011A8C48, 32, 7);
    *(_QWORD *)(v18 + 16) = a5;
    *(_QWORD *)(v18 + 24) = a1;
    v40[3] = sub_1001AD90C;
    v40[4] = v18;
    aBlock = _NSConcreteStackBlock;
    v40[0] = 1107296256;
    v40[1] = sub_1001BB8D4;
    v40[2] = &unk_1011A8C60;
    v19 = _Block_copy(&aBlock);
    v38 = v10;
    v20 = v19;
    v21 = a1;
    v22 = a5;
    v23 = swift_release();
    static DispatchQoS.unspecified.getter(v23);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v24 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_100008B04((uint64_t *)&unk_101492FB0);
    v26 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v25, v26, v9, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v20);
    _Block_release(v20);

    ((void (*)(char *, uint64_t))v38[1].isa)(v12, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    if (qword_101490E80 != -1)
      swift_once(&qword_101490E80, sub_1001146E8);
    v27 = type metadata accessor for Logger(0);
    sub_10000E918(v27, (uint64_t)qword_1014D4A90);
    v28 = a5;
    swift_errorRetain(a2);
    v29 = (char *)v28;
    v30 = swift_errorRetain(a2);
    v38 = Logger.logObject.getter(v30);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v31))
    {
      v32 = swift_slowAlloc(22, -1);
      v33 = (void ***)swift_slowAlloc(16, -1);
      *(_DWORD *)v32 = 138412546;
      v34 = *(void ***)&v29[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
      aBlock = v34;
      v35 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v40, v32 + 4, v32 + 12);
      *v33 = v34;

      *(_WORD *)(v32 + 12) = 2112;
      if (a2)
      {
        swift_errorRetain(a2);
        v36 = _swift_stdlib_bridgeErrorToNSError(a2);
        aBlock = (void **)v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v40, v32 + 14, v32 + 22);
      }
      else
      {
        aBlock = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v40, v32 + 14, v32 + 22);
        v36 = 0;
      }
      v33[1] = (void **)v36;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v38, v31, "Unable to download image for collection: %@. %@.", (uint8_t *)v32, 0x16u);
      v37 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v33, 2, v37);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);

    }
    else
    {

      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

uint64_t sub_1001AD3F4(uint64_t result, void *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    v2 = (void *)result;
    v3 = Image.init(uiImage:)(a2);
    KeyPath = swift_getKeyPath(&unk_100E31F88);
    v5 = swift_getKeyPath(&unk_100E31FB0);
    v6 = v3;
    return static Published.subscript.setter(&v6, v2, KeyPath, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001AD470(__n128 a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;
  _QWORD *v24;

  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0, a1);
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC4Maps35CuratedGuideViewModelDataDownloader_coverPhotoDownloader;
  v12 = (void *)objc_opt_self(MKPlaceCollectionImageProvider);
  v13 = v1;
  *(_QWORD *)&v1[v11] = objc_msgSend(v12, "sharedInstance");
  v14 = OBJC_IVAR____TtC4Maps35CuratedGuideViewModelDataDownloader_imageLoadingQueue;
  sub_10009729C();
  static DispatchQoS.userInitiated.getter();
  v24 = _swiftEmptyArrayStorage;
  v15 = sub_10000BC84((unint64_t *)&unk_10149AB40, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_100008B04((uint64_t *)&unk_101499CA0);
  v17 = sub_1000D00AC((unint64_t *)&unk_10149AB50, (uint64_t *)&unk_101499CA0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v16, v17, v5, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  *(_QWORD *)&v13[v14] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000035, 0x8000000100E4F7A0, v10, v7, v4, 0);

  v18 = (objc_class *)type metadata accessor for CuratedGuideViewModelDataDownloader();
  v23.receiver = v13;
  v23.super_class = v18;
  return objc_msgSendSuper2(&v23, "init");
}

void sub_1001AD68C(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void (*v10)(void *, void *, uint64_t, uint64_t);
  id v11;
  id v12;

  v10 = *(void (**)(void *, void *, uint64_t, uint64_t))(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  swift_retain(v9);
  v12 = a2;
  v11 = a3;
  v10(a2, a3, a4, a5);
  swift_release(v9);

}

id sub_1001AD738()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CuratedGuideViewModelDataDownloader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for CuratedGuideViewModelDataDownloader()
{
  return objc_opt_self(_TtC4Maps35CuratedGuideViewModelDataDownloader);
}

uint64_t sub_1001AD7C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E31FD0, (uint64_t)&unk_100E31FF8, a2);
}

uint64_t sub_1001AD7D4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AD834(a1, a2, a3, a4, (uint64_t)&unk_100E31FD0, (uint64_t)&unk_100E31FF8);
}

uint64_t sub_1001AD7E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E31F88, (uint64_t)&unk_100E31FB0, a2);
}

uint64_t sub_1001AD7FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E31F88, (uint64_t)&unk_100E31FB0, a2);
}

uint64_t sub_1001AD820(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AD834(a1, a2, a3, a4, (uint64_t)&unk_100E31F88, (uint64_t)&unk_100E31FB0);
}

uint64_t sub_1001AD834(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v7);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1001AD8A4(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AD834(a1, a2, a3, a4, (uint64_t)&unk_100E31F88, (uint64_t)&unk_100E31FB0);
}

uint64_t sub_1001AD8C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001AD8EC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  sub_1001ACF90(a1, a2, a3, a4, *(void **)(v4 + 16));
}

double sub_1001AD8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001AD904(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001AD90C()
{
  uint64_t v0;

  return sub_1001AD3F4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001AD914(uint64_t a1, void *a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  KeyPath = swift_getKeyPath(&unk_100E31FD0);
  v5 = swift_getKeyPath(&unk_100E31FF8);
  static Published.subscript.getter(v12, a2, KeyPath, v5);
  swift_release();
  swift_release();
  v6 = v12[0];
  swift_release();
  if (!v6)
  {
    v7 = objc_msgSend((id)objc_opt_self(MapsUIImageCache), "sharedCache");
    if (v7)
    {
      v8 = v7;
      v9 = swift_allocObject(&unk_1011A8C98, 24, 7);
      *(_QWORD *)(v9 + 16) = a2;
      v12[4] = sub_1001ADAA8;
      v12[5] = v9;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      v12[2] = sub_1000B3780;
      v12[3] = &unk_1011A8CB0;
      v10 = _Block_copy(v12);
      v11 = a2;
      swift_release();
      objc_msgSend(v8, "getImageForSpec:loadImageOnBackgroundQueue:completion:", a1, 1, v10);
      _Block_release(v10);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1001ADA60@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10008D748(a1, (uint64_t)&unk_100E31FD0, (uint64_t)&unk_100E31FF8, a2);
}

uint64_t sub_1001ADA84(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AD834(a1, a2, a3, a4, (uint64_t)&unk_100E31FD0, (uint64_t)&unk_100E31FF8);
}

void sub_1001ADAA8(void *a1)
{
  uint64_t v1;

  sub_1001ACBA8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001ADAB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001ADADC()
{
  uint64_t v0;

  return sub_1001ACDC0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001ADB04(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  NSString v46;
  NSString v47;
  double v48;
  void *v49;
  void *v50;
  id v51;
  _QWORD *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  NSString v59;
  Class isa;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  id v70;
  _QWORD *v71;
  id v72;
  uint64_t v73;
  unint64_t v74;

  v3 = v2;
  v6 = type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for RefinementsBarButtonViewModel(0);
  v11 = *(_QWORD *)(a1 + v10[9]);
  swift_unknownObjectRetain(v11);
  v12 = objc_opt_self(GEOResultRefinement);
  v13 = (void *)swift_dynamicCastObjCClass(v11, v12);
  v14 = v13;
  if (v13)
  {
    v15 = objc_msgSend(v13, "type");
    if (v15 == (id)3)
    {
      v18 = objc_msgSend(v14, "sort");
      if (v18)
      {
        v19 = a1 + v10[5];
        if ((*(_BYTE *)(v19 + 16) & 1) == 0)
        {
          v20 = (uint64_t *)(a1 + v10[8]);
          v21 = *v20;
          if (*v20)
          {
            v71 = a2;
            v72 = v18;
            v23 = *(_QWORD *)v19;
            v22 = *(_QWORD *)(v19 + 8);
            v24 = v20[1];
            v68 = v20[2];
            v74 = (unint64_t)_swiftEmptyArrayStorage;
            v25 = *(_QWORD *)(v21 + 16);
            v73 = v11;
            v69 = (id)v22;
            v70 = (id)v23;
            if (v25)
            {
              v66 = v24;
              v67 = v3;
              v26 = v21;
              v27 = v21 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
              swift_bridgeObjectRetain(v26);
              sub_10002126C(v23, v22);
              v28 = *(_QWORD *)(v7 + 72);
              v65 = v26;
              swift_bridgeObjectRetain(v26);
              do
              {
                sub_1000202AC(v27, (uint64_t)v9, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                v29 = *(_QWORD *)&v9[*(int *)(v6 + 24)];
                swift_unknownObjectRetain(v29);
                v30 = objc_opt_self(GEOResultRefinementSortElement);
                v31 = swift_dynamicCastObjCClass(v29, v30);
                if (v31)
                {
                  v32 = v31;
                  v33 = sub_1000202F0((uint64_t)v9, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
                  v35 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v34 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v35 >= v34 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
                  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v32);
                  specialized Array._endMutation()(v36);
                }
                else
                {
                  swift_unknownObjectRelease(v29);
                  sub_1000202F0((uint64_t)v9, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                }
                v27 += v28;
                --v25;
              }
              while (v25);
              v21 = v65;
              swift_bridgeObjectRelease(v65);
              v52 = (_QWORD *)v74;
              v24 = v66;
            }
            else
            {
              sub_10002126C(v23, v22);
              swift_bridgeObjectRetain(v21);
              v52 = _swiftEmptyArrayStorage;
            }
            swift_bridgeObjectRelease(v21);
            a2 = v71;
            if ((v68 & 1) != 0)
              v53 = 0;
            else
              v53 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v24);
            v54 = v53;
            v55 = objc_msgSend(v72, "defaultSelectedElementIndex");
            v56 = objc_allocWithZone((Class)GEOResultRefinementSort);
            v58 = (uint64_t)v69;
            v57 = (uint64_t)v70;
            v59 = String._bridgeToObjectiveC()();
            sub_1000212D8(v57, v58);
            sub_10000E4BC(0, &qword_10149B2F0, GEOResultRefinementSortElement_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            v61 = objc_msgSend(v56, "initWithDisplayName:sorts:selectedElementIndex:defaultSelectedElementIndex:", v59, isa, v54, v55, swift_bridgeObjectRelease(v52).n128_f64[0]);

            if (v61)
            {
              v14 = objc_msgSend(objc_allocWithZone((Class)GEOResultRefinement), "initWithSort:", v61);

              swift_unknownObjectRelease(v73);
              goto LABEL_28;
            }

            swift_unknownObjectRelease(v73);
            goto LABEL_27;
          }
        }

      }
      swift_unknownObjectRelease(v11);
LABEL_27:
      v14 = 0;
      goto LABEL_28;
    }
    if (v15 == (id)1)
    {
      v16 = a1 + v10[10];
      v17 = *(_BYTE *)(v16 + 8);
      v73 = v11;
      if ((v17 & 1) != 0)
        v72 = 0;
      else
        v72 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", *(_QWORD *)v16);
      v37 = objc_msgSend(v14, "toggle");
      if (v37)
      {
        v38 = v37;
        v39 = a1 + v10[5];
        if ((*(_BYTE *)(v39 + 16) & 1) == 0)
        {
          v40 = *(_QWORD *)v39;
          v41 = *(_QWORD *)(v39 + 8);
          LODWORD(v71) = *(unsigned __int8 *)(a1 + v10[6]);
          v70 = objc_msgSend(v37, "metadata", swift_bridgeObjectRetain(v41).n128_f64[0]);
          v69 = objc_msgSend(v38, "toggleType");
          LODWORD(v68) = objc_msgSend(v38, "evChargingConnectorType");
          v67 = v72;
          LODWORD(v66) = objc_msgSend(v38, "selectionFromView");
          v42 = objc_msgSend(v38, "refinementKey");
          v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
          v44 = v43;

          LOBYTE(v42) = objc_msgSend(v38, "showAsSelected");
          v45 = objc_allocWithZone((Class)GEOResultRefinementToggle);
          v46 = String._bridgeToObjectiveC()();
          sub_1000212D8(v40, v41);
          v47 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v48 = swift_bridgeObjectRelease(v44).n128_u64[0];
          LOBYTE(v63) = (_BYTE)v42;
          v49 = v67;
          LOBYTE(v62) = v66;
          v50 = v70;
          v51 = objc_msgSend(v45, "initWithDisplayName:isSelected:metadata:toggleType:evChargingConnectorType:selectionSequenceNumber:selectionFromView:refinementKey:showAsSelected:", v46, v71, v70, v69, v68, v67, v48, v62, v47, v63);

          if (v51)
          {
            v14 = objc_msgSend(objc_allocWithZone((Class)GEOResultRefinement), "initWithToggle:", v51);
            swift_unknownObjectRelease(v73);

            goto LABEL_28;
          }
        }

      }
      swift_unknownObjectRelease(v73);

      goto LABEL_27;
    }
  }
  else
  {
    swift_unknownObjectRelease(v11);
  }
LABEL_28:
  *a2 = v14;
}

uint64_t sub_1001AE180(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v1 = objc_msgSend(a1, "sections");
  v2 = sub_100008B04((uint64_t *)&unk_10149B2C0);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  v21 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  while (v4)
  {
    v5 = 4;
    while (1)
    {
      v7 = v5 - 4;
      if ((v3 & 0xC000000000000001) == 0)
        break;
      v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3);
      v9 = v5 - 3;
      if (__OFADD__(v7, 1))
        goto LABEL_15;
LABEL_11:
      v20 = v8;
      sub_1001AE3B0(&v20, &v19);
      v10 = swift_unknownObjectRelease(v8);
      v11 = v19;
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v13 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v6);
      }
      ++v5;
      if (v9 == v4)
      {
        swift_bridgeObjectRelease(v3);
        v14 = v21;
        goto LABEL_21;
      }
    }
    v8 = *(void **)(v3 + 8 * v5);
    swift_unknownObjectRetain(v8);
    v9 = v5 - 3;
    if (!__OFADD__(v7, 1))
      goto LABEL_11;
LABEL_15:
    __break(1u);
LABEL_16:
    if (v3 < 0)
      v15 = v3;
    else
      v15 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v15);
  }
  swift_bridgeObjectRelease(v3);
  v14 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease(v3);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v17 = v14;
    else
      v17 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v18 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v14);
    if (!v18)
      goto LABEL_23;
  }
  else if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_23:
    swift_bridgeObjectRelease(v14);
    return 0;
  }
  return v14;
}

void sub_1001AE3B0(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char **v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSString v26;
  NSString v27;
  id v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  void *v52;
  id v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  NSString v63;
  double v64;
  id v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  NSString v77;
  id v78;
  Class isa;
  uint64_t v80;
  unint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  NSString v86;
  id v87;
  Class v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  char v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  NSString v119;
  id v120;
  Class v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  id v127;
  unint64_t v128;
  uint64_t v129;
  id v130;
  id v131;
  unsigned __int8 v133;
  unint64_t v134;
  id v135;
  uint64_t v136;
  unsigned int v137;
  id v138;
  id v139;
  id v140;
  id v141;
  unsigned int v142;
  unsigned int v143;
  _BOOL8 v144;
  uint64_t v145;
  void *v146;
  _QWORD v147[5];
  uint64_t v148;

  v2 = *a1;
  v3 = objc_msgSend(*a1, "type");
  if (v3 == (id)2)
  {
    if (MapsFeature_IsEnabled_SearchAndDiscovery(2))
    {
      v34 = objc_opt_self(AllRefinementsViewModelSectionOpenOption);
      v35 = (id)swift_dynamicCastObjCClass(v2, v34);
      if (!v35)
      {
LABEL_90:
        *a2 = v35;
        return;
      }
      swift_unknownObjectRetain(v2);
      v36 = sub_1001AF498(v35);
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v35, "displayName");
        if (v38)
        {
          v39 = v38;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
          v41 = v40;

        }
        else
        {
          v41 = 0;
        }
        v74 = sub_100008B04((uint64_t *)&unk_101493B10);
        v75 = swift_allocObject(v74, 40, 7);
        *(_OWORD *)(v75 + 16) = xmmword_100E23F50;
        *(_QWORD *)(v75 + 32) = v37;
        v147[0] = v75;
        specialized Array._endMutation()(v75);
        v76 = v37;
        if (v41)
        {
          v77 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v41);
        }
        else
        {
          v77 = 0;
        }
        v78 = objc_allocWithZone((Class)GEOResultRefinementSection);
        sub_10000E4BC(0, &qword_10149A658, GEOResultRefinement_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v35 = objc_msgSend(v78, "initWithSectionHeader:resultRefinements:", v77, isa, swift_bridgeObjectRelease(v147[0]).n128_f64[0]);
        swift_unknownObjectRelease(v2);

        goto LABEL_90;
      }
      v73 = v2;
      goto LABEL_88;
    }
    goto LABEL_89;
  }
  if (v3 == (id)1)
  {
    v42 = objc_opt_self(AllRefinementsViewModelSectionMultiSelect);
    v43 = swift_dynamicCastObjCClass(v2, v42);
    if (v43)
    {
      v44 = (void *)v43;
      v127 = v2;
      swift_unknownObjectRetain(v2);
      v131 = v44;
      v45 = objc_msgSend(v44, "elements");
      v46 = sub_10000E4BC(0, &qword_10149B2E0, off_101195E08);
      v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

      v148 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v47 >> 62)
      {
        if (v47 < 0)
          v89 = v47;
        else
          v89 = v47 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v47);
        v48 = _CocoaArrayWrapper.endIndex.getter(v89);
        if (v48)
          goto LABEL_29;
      }
      else
      {
        v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v47);
        if (v48)
        {
LABEL_29:
          if (v48 < 1)
          {
            __break(1u);
            goto LABEL_92;
          }
          v49 = 0;
          v50 = v47 & 0xC000000000000001;
          v134 = v47 & 0xC000000000000001;
          v136 = v47;
          do
          {
            if (v50)
              v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v47);
            else
              v51 = *(id *)(v47 + 8 * v49 + 32);
            v52 = v51;
            v53 = objc_msgSend(v51, "data");
            _bridgeAnyObjectToAny(_:)(v147);
            swift_unknownObjectRelease(v53);
            v54 = sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
            if (swift_dynamicCast(&v146, v147, (char *)&type metadata for Any + 8, v54, 6))
            {
              v55 = v146;
              v56 = objc_msgSend(v52, "displayName");
              static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
              v58 = v57;

              v143 = objc_msgSend(v52, "isSelected");
              v140 = objc_msgSend(v55, "metadata");
              v138 = objc_msgSend(v55, "elementType");
              v59 = objc_msgSend(v55, "evChargingConnectorType");
              v60 = objc_msgSend(v52, "selectionSequenceNumber");
              v61 = objc_allocWithZone((Class)GEOResultRefinementMultiSelectElement);
              v62 = v48;
              v63 = String._bridgeToObjectiveC()();
              *(_QWORD *)&v64 = swift_bridgeObjectRelease(v58).n128_u64[0];
              v65 = v59;
              v47 = v136;
              v66 = objc_msgSend(v61, "initWithDisplayName:isSelected:metadata:elementType:evChargingConnectorType:selectionSequenceNumber:", v63, v143, v140, v138, v65, v60, v64);

              v48 = v62;
              v50 = v134;

              if (v66)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v67);
                v69 = *(_QWORD *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10);
                v68 = *(_QWORD *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x18);
                if (v69 >= v68 >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v68 > 1, v69 + 1, 1);
                v70 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v69, v66);
                specialized Array._endMutation()(v70);
              }
            }
            else
            {

            }
            ++v49;
          }
          while (v48 != v49);
          swift_bridgeObjectRelease(v47);
          v72 = (_QWORD *)v148;
LABEL_65:
          v145 = (uint64_t)v72;
          v144 = objc_msgSend(v131, "clauseType", swift_bridgeObjectRelease(v47).n128_f64[0]) == (id)1;
          v90 = objc_msgSend(v131, "displayName");
          if (v90)
          {
            v91 = v90;
            v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
            v94 = v93;

          }
          else
          {
            v92 = 0;
            v94 = 0;
          }
          v95 = objc_msgSend(v131, "maximumNumberOfSelectableElements");
          v96 = objc_msgSend(v131, "showEqualWidthButtonsOnFilterView");
          v97 = objc_msgSend(v131, "displayNameForMultiSelected");
          if (v97)
          {
            v98 = v97;
            v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
            v101 = v100;

          }
          else
          {
            v99 = 0;
            v101 = 0;
          }
          v102 = objc_msgSend(v131, "multiSelectIdentifier");
          if (v102)
          {
            v103 = v102;
            v104 = static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
            v106 = v105;

          }
          else
          {
            v104 = 0;
            v106 = 0;
          }
          v107 = objc_allocWithZone((Class)GEOResultRefinementMultiSelect);
          v108 = sub_1001AF1B0(v92, v94, v145, (uint64_t)v95, v144, v96, v99, v101, v104, v106);
          if (v108)
          {
            v109 = v108;
            v110 = objc_msgSend(objc_allocWithZone((Class)GEOResultRefinement), "initWithMultiSelect:", v108);
            v111 = objc_msgSend(v131, "displayName");
            if (v111)
            {
              v112 = v111;
              static String._unconditionallyBridgeFromObjectiveC(_:)(v111);
              v114 = v113;

            }
            else
            {
              v114 = 0;
            }
            v115 = sub_100008B04((uint64_t *)&unk_101493B10);
            v116 = swift_allocObject(v115, 40, 7);
            *(_OWORD *)(v116 + 16) = xmmword_100E23F50;
            *(_QWORD *)(v116 + 32) = v110;
            v147[0] = v116;
            specialized Array._endMutation()(v116);
            v117 = v147[0];
            v118 = v110;
            if (v114)
            {
              v119 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v114);
            }
            else
            {
              v119 = 0;
            }
            v120 = objc_allocWithZone((Class)GEOResultRefinementSection);
            sub_10000E4BC(0, &qword_10149A658, GEOResultRefinement_ptr);
            v121 = Array._bridgeToObjectiveC()().super.isa;
            v35 = objc_msgSend(v120, "initWithSectionHeader:resultRefinements:", v119, v121, swift_bridgeObjectRelease(v117).n128_f64[0]);

            swift_unknownObjectRelease(v127);
          }
          else
          {
            swift_unknownObjectRelease(v127);
            v35 = 0;
          }
          goto LABEL_90;
        }
      }
      swift_bridgeObjectRelease(v47);
      v72 = _swiftEmptyArrayStorage;
      goto LABEL_65;
    }
LABEL_89:
    v35 = 0;
    goto LABEL_90;
  }
  if (v3)
    goto LABEL_89;
  v4 = objc_opt_self(AllRefinementsViewModelSectionToggles);
  v5 = swift_dynamicCastObjCClass(v2, v4);
  if (!v5)
    goto LABEL_89;
  v6 = (void *)v5;
  swift_unknownObjectRetain(v2);
  v7 = objc_msgSend(v6, "toggles");
  v8 = sub_10000E4BC(0, &qword_10149EF90, off_101195E10);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  v148 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v9);
    v126 = v2;
    if (v10)
      goto LABEL_7;
LABEL_53:
    swift_bridgeObjectRelease(v9);
    v71 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_54:
    v81 = swift_bridgeObjectRelease(v9).n128_u64[0];
    if ((unint64_t)v71 >> 62)
    {
      if (v71 < 0)
        v122 = v71;
      else
        v122 = v71 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v71);
      v123 = _CocoaArrayWrapper.endIndex.getter(v122);
      v81 = swift_bridgeObjectRelease(v71).n128_u64[0];
      if (v123)
        goto LABEL_56;
    }
    else if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_56:
      v82 = objc_msgSend(v126, "displayName", *(double *)&v81);
      if (v82)
      {
        v83 = v82;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
        v85 = v84;

        v86 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v85);
      }
      else
      {
        v86 = 0;
      }
      v87 = objc_allocWithZone((Class)GEOResultRefinementSection);
      sub_10000E4BC(0, &qword_10149A658, GEOResultRefinement_ptr);
      v88 = Array._bridgeToObjectiveC()().super.isa;
      v35 = objc_msgSend(v87, "initWithSectionHeader:resultRefinements:", v86, v88, swift_bridgeObjectRelease(v71).n128_f64[0]);
      swift_unknownObjectRelease(v126);

      goto LABEL_90;
    }
    swift_bridgeObjectRelease(v71);
    v73 = v126;
LABEL_88:
    swift_unknownObjectRelease(v73);
    goto LABEL_89;
  }
  if (v9 < 0)
    v80 = v9;
  else
    v80 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v80);
  v126 = v2;
  if (!v10)
    goto LABEL_53;
LABEL_7:
  if (v10 >= 1)
  {
    v11 = 0;
    v12 = v9 & 0xC000000000000001;
    v13 = &selRef_currentInterruptionKind;
    v129 = v10;
    v130 = (id)v9;
    v128 = v9 & 0xC000000000000001;
    do
    {
      if (v12)
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
      else
        v14 = *(id *)(v9 + 8 * v11 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, v13[204]);
      _bridgeAnyObjectToAny(_:)(v147);
      swift_unknownObjectRelease(v16);
      v17 = sub_10000E4BC(0, &qword_10149EF98, GEOResultRefinementToggle_ptr);
      if (swift_dynamicCast(&v146, v147, (char *)&type metadata for Any + 8, v17, 6))
      {
        v18 = v146;
        v19 = objc_msgSend(v15, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
        v21 = v20;

        v142 = objc_msgSend(v15, "isSelected");
        v141 = objc_msgSend(v18, "metadata");
        v139 = objc_msgSend(v18, "toggleType");
        v137 = objc_msgSend(v18, "evChargingConnectorType");
        v135 = objc_msgSend(v15, "selectionSequenceNumber");
        v133 = objc_msgSend(v18, "selectionFromView");
        v22 = objc_msgSend(v18, "refinementKey");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v24 = v23;

        LOBYTE(v22) = objc_msgSend(v18, "showAsSelected");
        v25 = objc_allocWithZone((Class)GEOResultRefinementToggle);
        v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v21);
        v27 = String._bridgeToObjectiveC()();
        LOBYTE(v125) = (_BYTE)v22;
        LOBYTE(v124) = v133;
        v28 = objc_msgSend(v25, "initWithDisplayName:isSelected:metadata:toggleType:evChargingConnectorType:selectionSequenceNumber:selectionFromView:refinementKey:showAsSelected:", v26, v142, v141, v139, v137, v135, swift_bridgeObjectRelease(v24).n128_f64[0], v124, v27, v125);

        if (v28)
        {
          v29 = objc_msgSend(objc_allocWithZone((Class)GEOResultRefinement), "initWithToggle:", v28);

          v10 = v129;
          v9 = (uint64_t)v130;
          v12 = v128;
          v13 = &selRef_currentInterruptionKind;
          if (v29)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v30);
            v32 = *(_QWORD *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v31 = *(_QWORD *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v32 >= v31 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
            v33 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
            specialized Array._endMutation()(v33);
          }
        }
        else
        {

          v10 = v129;
          v9 = (uint64_t)v130;
          v12 = v128;
          v13 = &selRef_currentInterruptionKind;
        }
      }
      else
      {

      }
      ++v11;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease(v9);
    v71 = v148;
    goto LABEL_54;
  }
LABEL_92:
  __break(1u);
}

id sub_1001AF160()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GEORefinementsFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for GEORefinementsFactory()
{
  return objc_opt_self(_TtC4Maps21GEORefinementsFactory);
}

id sub_1001AF1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  NSString v17;
  NSArray v18;
  unint64_t v19;
  NSString v20;
  NSString v21;
  id v22;

  if (a2)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = 0;
  }
  sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
  v18.super.isa = Array._bridgeToObjectiveC()().super.isa;
  v19 = swift_bridgeObjectRelease(a3).n128_u64[0];
  if (!a8)
  {
    v20 = 0;
    if (a10)
      goto LABEL_6;
LABEL_8:
    v21 = 0;
    goto LABEL_9;
  }
  v20 = String._bridgeToObjectiveC()();
  v19 = swift_bridgeObjectRelease(a8).n128_u64[0];
  if (!a10)
    goto LABEL_8;
LABEL_6:
  v21 = String._bridgeToObjectiveC()();
  v19 = swift_bridgeObjectRelease(a10).n128_u64[0];
LABEL_9:
  v22 = objc_msgSend(v10, "initWithDisplayName:multiSelect:maximumNumberOfSelectElements:clauseType:showEqualWidthButtonsOnFilterView:displayNameForMultiSelected:multiSelectIdentifier:", v17, v18.super.isa, a4, a5, a6 & 1, v20, *(double *)&v19, v21);

  return v22;
}

_QWORD *sub_1001AF2E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t KeyPath;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v2 = type metadata accessor for RefinementsBarButtonViewModel(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100E32040);
  v7 = swift_getKeyPath(&unk_100E32068);
  static Published.subscript.getter(&v21, a1, KeyPath, v7);
  swift_release();
  swift_release();
  v8 = v21;
  v9 = _swiftEmptyArrayStorage;
  v21 = (unint64_t)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(v8 + 16);
  if (v10)
  {
    v11 = v8 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain(v8);
    do
    {
      sub_1000202AC(v11, (uint64_t)v5, type metadata accessor for RefinementsBarButtonViewModel);
      sub_1001ADB04((uint64_t)v5, &v20);
      v14 = sub_1000202F0((uint64_t)v5, type metadata accessor for RefinementsBarButtonViewModel);
      v15 = v20;
      if (v20)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v17 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v13);
      }
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease(v8);
    v9 = (_QWORD *)v21;
  }
  swift_bridgeObjectRelease(v8);
  return v9;
}

id sub_1001AF498(void *a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  NSString v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  id v31;
  id v32;
  id v33;
  id v35;
  id v36;
  NSString v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  NSString v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  unsigned int v52;
  id v53;
  id v54;
  void *v55;
  unsigned int v56;
  id v57;
  id v58;
  _QWORD v59[4];

  v2 = objc_msgSend(a1, "openNow");
  if (!v2)
    return 0;
  v3 = v2;
  v4 = objc_msgSend(a1, "openNow");
  if (!v4
    || (v5 = v4,
        v6 = objc_msgSend(v4, "data"),
        v5,
        _bridgeAnyObjectToAny(_:)(v59),
        swift_unknownObjectRelease(v6),
        v7 = sub_10000E4BC(0, &qword_10149EF98, GEOResultRefinementToggle_ptr),
        (swift_dynamicCast(&v58, v59, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0))
  {

    return 0;
  }
  v8 = v58;
  v9 = objc_msgSend(v58, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v11 = v10;

  v56 = objc_msgSend(v3, "isSelected");
  v54 = objc_msgSend(v8, "metadata");
  v53 = objc_msgSend(v8, "toggleType");
  v52 = objc_msgSend(v8, "evChargingConnectorType");
  v12 = objc_msgSend(v3, "selectionSequenceNumber");
  v51 = objc_msgSend(v8, "selectionFromView");
  v13 = objc_msgSend(v8, "refinementKey");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

  LOBYTE(v13) = objc_msgSend(v8, "showAsSelected");
  v16 = v3;
  v17 = objc_allocWithZone((Class)GEOResultRefinementToggle);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v19 = String._bridgeToObjectiveC()();
  LOBYTE(v50) = (_BYTE)v13;
  LOBYTE(v49) = v51;
  v20 = objc_msgSend(v17, "initWithDisplayName:isSelected:metadata:toggleType:evChargingConnectorType:selectionSequenceNumber:selectionFromView:refinementKey:showAsSelected:", v18, v56, v54, v53, v52, v12, swift_bridgeObjectRelease(v15).n128_f64[0], v49, v19, v50);

  if (!v20)
  {

    return 0;
  }
  v55 = v8;
  v57 = v16;
  v21 = objc_msgSend(a1, "openAt");
  if (!v21)
  {

LABEL_17:
    return 0;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "data");
  _bridgeAnyObjectToAny(_:)(v59);
  swift_unknownObjectRelease(v23);
  v24 = sub_10000E4BC(0, (unint64_t *)&unk_10149EFA0, GEOResultRefinementTime_ptr);
  if ((swift_dynamicCast(&v58, v59, (char *)&type metadata for Any + 8, v24, 6) & 1) == 0)
  {

    goto LABEL_17;
  }
  v25 = v58;
  v26 = objc_msgSend(v58, "displayName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v28 = v27;

  v29 = 0.0;
  if ((objc_msgSend(v57, "isSelected") & 1) == 0)
  {
    objc_msgSend(v22, "timeStamp");
    v29 = v30;
  }
  v31 = objc_msgSend(v25, "metadata");
  if ((objc_msgSend(v57, "isSelected") & 1) != 0)
    v32 = 0;
  else
    v32 = objc_msgSend(v22, "isSelected");
  v35 = objc_msgSend(v25, "isNextDay");
  v36 = objc_allocWithZone((Class)GEOResultRefinementTime);
  v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  v38 = objc_msgSend(v36, "initWithDisplayName:timeStamp:metadata:isSelected:isNextDay:", v37, v31, v32, v35, v29);

  if (v38)
  {
    v39 = objc_msgSend(a1, "displayName");
    if (v39)
    {
      v40 = v39;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v42 = v41;

      v43 = v20;
      v44 = v38;
      v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v42);
    }
    else
    {
      v46 = v20;
      v47 = v38;
      v45 = 0;
    }
    v48 = objc_msgSend(objc_allocWithZone((Class)GEOResultRefinementOpenOptions), "initWithDisplayName:openNow:openAt:", v45, v20, v38);

    if (v48)
    {
      v33 = objc_msgSend(objc_allocWithZone((Class)GEOResultRefinement), "initWithOpenOptions:", v48);

      return v33;
    }

  }
  else
  {

  }
  return 0;
}

void sub_1001AFA18(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char **v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char **v18;
  id v19;
  id v20;
  id v21;
  NSString v22;
  double v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  id v55;
  unsigned int v56;
  uint64_t v57;
  _QWORD *v58;
  void *v59;
  _QWORD v60[4];
  unint64_t v61;

  v1 = a1;
  v2 = objc_msgSend(a1, "elements");
  v3 = sub_10000E4BC(0, &qword_10149B2E0, off_101195E08);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  v61 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v30 = v4;
    else
      v30 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v57 = _CocoaArrayWrapper.endIndex.getter(v30);
    if (v57)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease(v4);
    v58 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  v57 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v4);
  if (!v57)
    goto LABEL_20;
LABEL_3:
  if (v57 < 1)
  {
    __break(1u);
    return;
  }
  v52 = v1;
  v5 = 0;
  v6 = v4 & 0xC000000000000001;
  v7 = &selRef_currentInterruptionKind;
  v8 = (char *)&type metadata for Any + 8;
  v53 = v4 & 0xC000000000000001;
  v54 = v4;
  do
  {
    if (v6)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v4);
    else
      v9 = *(id *)(v4 + 8 * v5 + 32);
    v10 = v9;
    v11 = objc_msgSend(v9, v7[204]);
    _bridgeAnyObjectToAny(_:)(v60);
    swift_unknownObjectRelease(v11);
    v12 = sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
    if (swift_dynamicCast(&v59, v60, v8, v12, 6))
    {
      v13 = v59;
      v14 = objc_msgSend(v10, "displayName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v16 = v15;

      v56 = objc_msgSend(v10, "isSelected");
      v17 = objc_msgSend(v13, "metadata");
      v55 = objc_msgSend(v13, "elementType");
      v18 = v7;
      v19 = objc_msgSend(v13, "evChargingConnectorType");
      v20 = objc_msgSend(v10, "selectionSequenceNumber");
      v21 = objc_allocWithZone((Class)GEOResultRefinementMultiSelectElement);
      v22 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v23 = swift_bridgeObjectRelease(v16).n128_u64[0];
      v24 = v19;
      v7 = v18;
      v25 = objc_msgSend(v21, "initWithDisplayName:isSelected:metadata:elementType:evChargingConnectorType:selectionSequenceNumber:", v22, v56, v17, v55, v24, v20, v23);

      v6 = v53;
      v8 = (char *)&type metadata for Any + 8;

      v4 = v54;
      if (v25)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
        v28 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v27 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v28 >= v27 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
        v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v25);
        specialized Array._endMutation()(v29);
      }
    }
    else
    {

    }
    ++v5;
  }
  while (v57 != v5);
  swift_bridgeObjectRelease(v4);
  v58 = (_QWORD *)v61;
  v1 = v52;
LABEL_21:
  v31 = objc_msgSend(v1, "clauseType", swift_bridgeObjectRelease(v4).n128_f64[0]) == (id)1;
  v32 = objc_msgSend(v1, "displayName");
  if (v32)
  {
    v33 = v32;
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v36 = v35;

  }
  else
  {
    v34 = 0;
    v36 = 0;
  }
  v37 = objc_msgSend(v1, "maximumNumberOfSelectableElements");
  v38 = objc_msgSend(v1, "showEqualWidthButtonsOnFilterView");
  v39 = objc_msgSend(v1, "displayNameForMultiSelected");
  if (v39)
  {
    v40 = v39;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v43 = v42;

  }
  else
  {
    v41 = 0;
    v43 = 0;
  }
  v44 = objc_msgSend(v1, "multiSelectIdentifier");
  if (v44)
  {
    v45 = v44;
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v48 = v47;

  }
  else
  {
    v46 = 0;
    v48 = 0;
  }
  v49 = objc_allocWithZone((Class)GEOResultRefinementMultiSelect);
  v50 = sub_1001AF1B0(v34, v36, (uint64_t)v58, (uint64_t)v37, v31, v38, v41, v43, v46, v48);
  if (v50)
  {
    v51 = v50;
    objc_msgSend(objc_allocWithZone((Class)GEOResultRefinement), "initWithMultiSelect:", v50);

  }
}

uint64_t sub_1001AFEE4(uint64_t (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char v9;
  __int128 v11;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  v7 = a3 + 32;
  while (1)
  {
    v11 = *(_OWORD *)(v7 + 16 * v6);
    v8 = (id)v11;
    v9 = a1(&v11);

    if (v3 || (v9 & 1) != 0)
      break;
    if (v4 == ++v6)
      return 0;
  }
  return v6;
}

_QWORD *sub_1001AFFA0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSString v8;
  id v9;
  double v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;

  sub_1000AB280((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, &v14);
  v3 = (void *)swift_unknownObjectWeakLoadStrong(&v16);
  sub_1000AB2BC((uint64_t)&v14);
  if (v3)
  {
    sub_1001B0410(v1, (uint64_t)v3);
    v5 = v4;
    swift_unknownObjectRelease(v3);
    if (v5)
    {
      v6 = type metadata accessor for HomeListCuratedCollectionsSectionController();
      v3 = (void *)swift_dynamicCastClass(v5, v6);
      if (!v3)

    }
    else
    {
      v3 = 0;
    }
  }
  v7 = sub_1001FD8EC();
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "identifierPathByAppendingIdentifier:", v8);

  if (v3)
  {

    v10 = 16.0 + -5.0;
  }
  else
  {
    v10 = 20.0;
  }
  v14 = v10;
  swift_unknownObjectWeakInit(&v13);
  swift_unknownObjectWeakAssign(&v13, v1);
  sub_1001B0B1C((uint64_t)&v13, (uint64_t)&v15);
  a1[4] = &type metadata for HomeListFooterCellModel;
  a1[5] = sub_1001B0B64();
  v11 = swift_allocObject(&unk_1011A8D98, 32, 7);
  a1[1] = v11;
  result = sub_1001B0BCC(&v14, (_QWORD *)(v11 + 16));
  *a1 = v9;
  return result;
}

void sub_1001B0128()
{
  uint64_t v0;

}

id sub_1001B0138()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListFooterSectionController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomeListFooterSectionController()
{
  return objc_opt_self(_TtC4Maps31HomeListFooterSectionController);
}

uint64_t sub_1001B0198()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100008B04((uint64_t *)&unk_10149A2E0);
  v1 = swift_allocObject(v0, 80, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F40;
  sub_1001AFFA0((_QWORD *)(v1 + 32));
  return v1;
}

void sub_1001B0258(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *v7;
  id v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  sub_1000AB280((uint64_t)a1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v10);
  v7 = (void *)swift_unknownObjectWeakLoadStrong(&v11);
  v8 = a3;
  v9 = a1;
  sub_1000AB2BC((uint64_t)v10);
  if (v7)
  {
    objc_msgSend(v7, *a4);

    swift_unknownObjectRelease(v7);
  }
  else
  {

  }
}

uint64_t *sub_1001B03C0@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  __int128 v5;

  v3 = *result;
  if (*result >= a2[2] && v3 < a2[3] >> 1)
  {
    v5 = *(_OWORD *)(a2[1] + 16 * v3);
    *a3 = v5;
    return (uint64_t *)(id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001B0410(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t (*v26)(void);
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  _QWORD v43[2];
  _QWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  char v48[32];
  char v49[24];

  v4 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  v5 = *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  if (v5)
  {
    v6 = *(_QWORD **)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    v6 = sub_100138ADC();
    v7 = *(_QWORD *)(a2 + v4);
    *(_QWORD *)(a2 + v4) = v6;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRelease(v7);
    v8 = *(_QWORD *)(a2 + v4);
    if (v8)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + v4));
      sub_10013C97C(v9);
      v10 = v8;
    }
    else
    {
      v11 = *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
      *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v11);
      v12 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v13 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers, v49, 1, 0);
      v10 = *v13;
      *v13 = v12;
    }
    swift_bridgeObjectRelease(v10);
  }
  swift_bridgeObjectRetain(v5);
  v14 = v6[2];
  if (v14)
  {
    v43[1] = v43;
    v44 = (_QWORD *)v4;
    v15 = 0;
    while (1)
    {
      v45 = *(_OWORD *)&v6[2 * v15 + 4];
      v16 = (id)v45;
      v17 = sub_10013E1C0((_QWORD **)&v45, a1);

      if ((v17 & 1) != 0)
        break;
      if (v14 == ++v15)
      {
        v15 = 0;
        break;
      }
    }
    v18 = v17 ^ 1;
    v4 = (uint64_t)v44;
  }
  else
  {
    v15 = 0;
    v18 = 1;
  }
  v19 = v18 & 1;
  swift_bridgeObjectRelease(v6);
  if ((v19 & 1) != 0)
    return;
  v20 = *(_QWORD *)(a2 + v4);
  if (!v20)
  {
    v21 = sub_100138ADC();
    v36 = *(_QWORD *)(a2 + v4);
    *(_QWORD *)(a2 + v4) = v21;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease(v36);
    v37 = *(_QWORD *)(a2 + v4);
    if (v37)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + v4));
      sub_10013C97C(v38);
      swift_bridgeObjectRelease(v37);
      if ((v15 & 0x8000000000000000) == 0)
        goto LABEL_17;
    }
    else
    {
      v39 = *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
      *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v39);
      v40 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v41 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess(v41, v48, 1, 0);
      v42 = *v41;
      *v41 = v40;
      swift_bridgeObjectRelease(v42);
      if ((v15 & 0x8000000000000000) == 0)
        goto LABEL_17;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v21 = *(_QWORD **)(a2 + v4);
  if (v15 < 0)
    goto LABEL_32;
LABEL_17:
  if (v21[2] < (unint64_t)v15)
  {
LABEL_34:
    __break(1u);
    return;
  }
  v22 = 1;
  *(_QWORD *)&v45 = v21;
  *((_QWORD *)&v45 + 1) = v21 + 4;
  v46 = 0;
  v47 = (2 * v15) | 1;
  swift_bridgeObjectRetain(v20);
  if (v15)
  {
    v24 = v15 - 1;
    v44 = v21;
    v25 = (id *)&v21[2 * v15 + 2];
    while (v24 < v15)
    {
      v26 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*v25) + 0xF0);
      v27 = *v25;
      v28 = (void *)v26();
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v35 = *(_QWORD *)(v29 + 16);

      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v30);

      v22 = v35 == 0;
      if (v35)
        goto LABEL_24;
      --v24;
      v25 -= 2;
      if (v24 == -1)
      {
        v24 = 0;
LABEL_24:
        v21 = v44;
        goto LABEL_30;
      }
    }
    goto LABEL_33;
  }
  v24 = 0;
LABEL_30:
  __chkstk_darwin(v23);
  v43[-2] = &v45;
  sub_1001ABC08((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_100142250, (uint64_t)&v43[-4], v24, v22);
  swift_bridgeObjectRelease(v21);
}

id sub_1001B0790()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  id v11;
  uint64_t v13;

  v0 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v1 = objc_msgSend(v0, "fractionalWidthDimension:", 1.0);
  v2 = objc_msgSend(v0, "estimatedDimension:", 200.0);
  v3 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSize), "sizeWithWidthDimension:heightDimension:", v1, v2);

  v4 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v3);
  v5 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v6 = sub_100008B04((uint64_t *)&unk_101493B10);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v7 + 32) = v4;
  v13 = v7;
  specialized Array._endMutation()(v7);
  sub_1001B0940();
  v8 = v4;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v5, "verticalGroupWithLayoutSize:subitems:", v3, isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v11 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v10);
  return v11;
}

unint64_t sub_1001B0940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101498C50;
  if (!qword_101498C50)
  {
    v1 = objc_opt_self(NSCollectionLayoutItem);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_101498C50);
  }
  return result;
}

id sub_1001B097C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD v11[5];
  uint64_t v12;

  if ((MapsFeature_IsEnabled_RAPCommunityID() & 1) == 0)
  {
    sub_1000AB280(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v11);
    v1 = (void *)swift_unknownObjectWeakLoadStrong(&v12);
    sub_1000AB2BC((uint64_t)v11);
    if (v1)
    {
      objc_msgSend(v1, "homeDidTapReportAProblem");
      swift_unknownObjectRelease(v1);
    }
  }
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration), "_maps_mapsSceneDelegate");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "rapPresenter");

    LODWORD(v3) = objc_msgSend(v4, "presentOfflineAlertIfNecessaryWithCompletion:", 0);
    if ((_DWORD)v3)
    {
      if (qword_101490E98 != -1)
        swift_once(&qword_101490E98, sub_100114760);
      v5 = type metadata accessor for Logger(0);
      v6 = sub_10000E918(v5, (uint64_t)qword_1014D4AD8);
      v7 = Logger.logObject.getter(v6);
      v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "can't present RAP menu because Maps is offline", v9, 2u);
        swift_slowDealloc(v9, -1, -1);
      }

    }
  }
  return objc_msgSend((id)objc_opt_self(HomeAnalyticsManager), "captureRAPAction");
}

uint64_t sub_1001B0B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_10149EFE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001B0B64()
{
  unint64_t result;

  result = qword_10149EFF0;
  if (!qword_10149EFF0)
  {
    result = swift_getWitnessTable("1n7", &type metadata for HomeListFooterCellModel);
    atomic_store(result, (unint64_t *)&qword_10149EFF0);
  }
  return result;
}

uint64_t sub_1001B0BA8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 24);
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1001B0BCC(_QWORD *a1, _QWORD *a2)
{
  initializeWithTake for HomeListCuratedCollectionsCellModel(a2, a1);
  return a2;
}

uint64_t sub_1001B0C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_100010CC4(a1, &qword_101494070);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1011A9598, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_10149AAB0, v16);
}

uint64_t sub_1001B0D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100010CC4(a1, &qword_101494070);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1011A9458, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = sub_100008B04(&qword_10149F1A8);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  else
  {
    v19 = 0;
  }
  return swift_task_create(v9, v19, v18, &unk_10149F1F0, v17);
}

int64_t sub_1001B0EAC(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

id CollectionPlaceItem.updatedMapItemStorage()()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;

  v1 = objc_msgSend(v0, "mapItemStorage");
  if (v1)
  {
    v2 = objc_msgSend(v0, "customName");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v1, "userValues");

      if (!v4)
      {
        v5 = objc_msgSend(objc_allocWithZone((Class)GEOMapItemStorageUserValues), "init");
        objc_msgSend(v1, "setUserValues:", v5);

      }
      v6 = objc_msgSend(v1, "userValues");
      objc_msgSend(v6, "setName:", v3);

    }
  }
  return v1;
}

id LibraryDataOperationsProvider.__allocating_init(mapsSyncStore:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, "init");
}

void LibraryDataOperationsProvider.existingPlaceItem(forMapItem:completion:)(void *a1, void (*a2)(_QWORD, id), uint64_t a3)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  objc_class *Predicate;
  id v18;
  void *v19;
  void *v20;
  objc_class *v21;
  id v22;
  id v23;
  uint64_t v24;
  objc_class *Options;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;

  v6 = sub_100008B04(&qword_101494070);
  *(_QWORD *)&v7 = __chkstk_darwin(v6).n128_u64[0];
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a1, "_geoMapItem", v7);
  if (!v10)
  {
    v44 = sub_1001B794C();
    a2(0, v44);

    return;
  }
  v11 = v10;
  swift_unknownObjectRetain(v10);
  v12 = objc_msgSend(a1, "_geoMapItemStorageForPersistence");
  v13 = v12;
  v45 = (void (*)(_QWORD, _QWORD))a2;
  v46 = a3;
  if (!v12)
  {
    v14 = 0;
    goto LABEL_10;
  }
  v14 = objc_msgSend(v12, "userValues");

  if (!v14)
  {
LABEL_9:
    v13 = 0;
    goto LABEL_10;
  }
  v15 = objc_msgSend(v14, "name");

  if (!v15)
  {
    v14 = 0;
    goto LABEL_9;
  }
  v14 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v13 = v16;

LABEL_10:
  Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate(0);
  v18 = objc_allocWithZone(Predicate);
  v19 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)(v11, v14, v13);
  v20 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
  v21 = (objc_class *)type metadata accessor for MapsSyncRange(0);
  v22 = objc_allocWithZone(v21);
  v23 = v19;
  v24 = MapsSyncRange.init(offset:limit:)(0, 1);
  Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
  v26 = objc_allocWithZone(Options);
  v27 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v19, 0, v24);
  v28 = sub_100008B04((uint64_t *)&unk_101493B10);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100E250A0;
  *(_QWORD *)(v29 + 32) = v23;
  *(_QWORD *)(v29 + 40) = v20;
  v47 = v29;
  specialized Array._endMutation()(v29);
  v30 = v47;
  v31 = objc_allocWithZone(Predicate);
  v32 = v23;
  v33 = v20;
  v34 = MapsSyncQueryPredicate.init(and:)(v30);
  v35 = objc_allocWithZone(v21);
  v36 = MapsSyncRange.init(offset:limit:)(0, 1);
  v37 = objc_allocWithZone(Options);
  v38 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v34, 0, v36);
  v39 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v9, 1, 1, v39);
  v40 = (_QWORD *)swift_allocObject(&unk_1011A8DD8, 64, 7);
  v40[2] = 0;
  v40[3] = 0;
  v40[4] = v38;
  v40[5] = v27;
  v41 = v46;
  v40[6] = v45;
  v40[7] = v41;
  v42 = v38;
  v43 = v27;
  swift_retain();
  sub_1001B0C08((uint64_t)v9, (uint64_t)&unk_10149F030, (uint64_t)v40);
  swift_unknownObjectRelease(v11);
  swift_release();

}

uint64_t sub_1001B1370(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v19;

  v5 = v4;
  ObjectType = swift_getObjectType(v5);
  v11 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v11);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject(&unk_1011A9570, 80, 7);
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v5;
  v15[5] = a1;
  v15[6] = a3;
  v15[7] = a4;
  v15[8] = a2;
  v15[9] = ObjectType;
  v16 = v5;
  swift_unknownObjectRetain(a1);
  sub_10000C128(a3, a4);
  v17 = a2;
  sub_1001B0C08((uint64_t)v13, (uint64_t)&unk_10149F220, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1001B147C(uint64_t a1, NSString a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = type metadata accessor for CollectionPlaceItem(0);
  v7 = swift_dynamicCastClass(a3, v6);
  if (v7)
  {
    v9 = (void *)v7;
    swift_bridgeObjectRetain(a2);
    swift_unknownObjectRetain(a3);
    dispatch thunk of CollectionPlaceItem.placeItemNote.setter(a1, a2);
LABEL_7:
    v12 = sub_100008B04((uint64_t *)&unk_101493B10);
    v13 = swift_allocObject(v12, 40, 7);
    *(_OWORD *)(v13 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v13 + 32) = v9;
    v15 = v13;
    specialized Array._endMutation()(v13);
    swift_unknownObjectRetain(a3);
    dispatch thunk of MapsSyncStore.save(_:)(v15);
    swift_unknownObjectRelease(a3);
    swift_bridgeObjectRelease(v15);
    return 1;
  }
  v10 = type metadata accessor for FavoriteItem(0, v8);
  v11 = swift_dynamicCastClass(a3, v10);
  if (v11)
  {
    v9 = (void *)v11;
    swift_unknownObjectRetain(a3);
    if (a2)
      a2 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setPlaceItemNote:", a2);

    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_1001B15E0()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;
  Swift::String v4;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v0._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x8000000100E50260;
  v0._object = (void *)0x8000000100E50230;
  v1._countAndFlagsBits = 0x65766F6D6552;
  v1._object = (void *)0xE600000000000000;
  v4._countAndFlagsBits = 0xD000000000000017;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v1, v4);
  result = v3._countAndFlagsBits;
  xmmword_10149F000 = (__int128)v3;
  return result;
}

uint64_t sub_1001B1688()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;
  Swift::String v4;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v0._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x8000000100E50210;
  v0._object = (void *)0x8000000100E501E0;
  v1._countAndFlagsBits = 0x6C65636E6143;
  v1._object = (void *)0xE600000000000000;
  v4._countAndFlagsBits = 0xD000000000000017;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v1, v4);
  result = v3._countAndFlagsBits;
  xmmword_10149F010 = (__int128)v3;
  return result;
}

id LibraryDataOperationsProvider.init(mapsSyncStore:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t sub_1001B1964(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSString v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;

  v8 = v7;
  v32 = a6;
  v14 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CollectionPlaceItem(0);
  v17 = MapsSyncObject.__allocating_init()();
  if (a3)
  {
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setName:", v18);

  }
  v19 = objc_msgSend(a1, "name");
  if (v19)
  {
    v20 = v19;
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  dispatch thunk of CollectionPlaceItem.customName.setter(v21, v23);
  v24 = objc_msgSend(a1, "_geoMapItem");
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend((id)objc_opt_self(GEOMapItemStorage), "mapItemStorageForGEOMapItem:", v24);
    dispatch thunk of CollectionPlaceItem.mapItemStorage.setter(v26);
    swift_unknownObjectRelease(v25);
  }
  swift_bridgeObjectRetain(a5);
  dispatch thunk of CollectionPlaceItem.placeItemNote.setter(a4, a5);
  v27 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, 1, 1, v27);
  v28 = (_QWORD *)swift_allocObject(&unk_1011A94D0, 64, 7);
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v8;
  v28[5] = v17;
  v28[6] = v32;
  v28[7] = a7;
  v29 = v8;
  swift_retain();
  sub_1001B0C08((uint64_t)v16, (uint64_t)&unk_10149F208, (uint64_t)v28);
  return swift_release();
}

uint64_t sub_1001B1C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  return swift_task_switch(sub_1001B1C90, 0, 0);
}

uint64_t sub_1001B1C90()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  v1 = (void *)v0[4];
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v3 + 32) = v1;
  v9 = v3;
  specialized Array._endMutation()(v3);
  v0[7] = v9;
  v4 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:) + 1);
  v8 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  v5 = v1;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v0[8] = v6;
  *v6 = v0;
  v6[1] = sub_1001B1D54;
  return v8(v9);
}

uint64_t sub_1001B1D54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001B1EFC;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));
    v4 = sub_1001B1DC0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001B1DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B1E28, v2, v3);
}

uint64_t sub_1001B1E28()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);
  uint64_t v2;

  v1 = *(void (**)(uint64_t, _QWORD))(v0 + 40);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 80));
  v1(v2, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B1E74()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, uint64_t);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void (**)(_QWORD, uint64_t))(v0 + 40);
  swift_release();
  v2(0, v1);
  return swift_task_switch(sub_1001B1ECC, 0, 0);
}

uint64_t sub_1001B1ECC()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B1EFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease(v0[7]);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v1 = v0[9];
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[9];
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    v0[2] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "LibraryDataOperationsProvider: saveMapItem() Error saving :%@", v8, 0xCu);
    v11 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(v0[9]);
    swift_errorRelease(v7);
  }

  v12 = type metadata accessor for MainActor(0);
  v0[11] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B1E74, v13, v14);
}

uint64_t sub_1001B20FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;

  v8[6] = a8;
  v8[7] = v13;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v12 = (uint64_t (*)(uint64_t))((char *)&dword_10149F0A8 + dword_10149F0A8);
  v10 = (_QWORD *)swift_task_alloc(unk_10149F0AC);
  v8[8] = v10;
  *v10 = v8;
  v10[1] = sub_1001B216C;
  return v12(a5);
}

uint64_t sub_1001B216C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = a2;
  swift_task_dealloc(v4);
  return swift_task_switch(sub_1001B21C8, 0, 0);
}

uint64_t sub_1001B21C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B2230, v2, v3);
}

uint64_t sub_1001B2230()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[10];
  v2 = v0[9];
  v3 = (void *)v0[6];
  v5 = v0[4];
  v4 = v0[5];
  v7 = v0[2];
  v6 = v0[3];
  swift_release();
  sub_1001B22CC(v2, v1, v7, v6, v5, v4, v3);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1000C1008, 0, 0);
}

void sub_1001B22CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  NSString v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  uint64_t v32;
  void **aBlock;
  uint64_t v35;
  void (*v36)(uint64_t, void *);
  void *v37;
  void *v38;
  _QWORD *v39;
  _BYTE v40[40];
  Swift::String v41;

  if (a2)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v11._countAndFlagsBits = 0xD000000000000021;
    v41._countAndFlagsBits = 0xD00000000000003ELL;
    v41._object = (void *)0x8000000100E4FCA0;
    v11._object = (void *)0x8000000100E4FC50;
    v12._object = (void *)0x8000000100E4FC80;
    v12._countAndFlagsBits = 0xD000000000000012;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v12, v41)._object;
    swift_bridgeObjectRetain(a2);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v16 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v14, v15, 0);

    if (qword_1014910D0 != -1)
      swift_once(&qword_1014910D0, sub_1001B15E0);
    v17 = *((_QWORD *)&xmmword_10149F000 + 1);
    v18 = swift_allocObject(&unk_1011A8E20, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (_QWORD *)swift_allocObject(&unk_1011A8F38, 48, 7);
    v19[2] = v18;
    v19[3] = a4;
    v19[4] = a5;
    v19[5] = a6;
    swift_unknownObjectRetain(a4);
    sub_10000C128(a5, a6);
    swift_bridgeObjectRetain(v17);
    swift_retain();
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v38 = sub_1001BA344;
    v39 = v19;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100136AFC;
    v37 = &unk_1011A8F50;
    v21 = _Block_copy(&aBlock);
    swift_release();
    v22 = (void *)objc_opt_self(UIAlertAction);
    v23 = objc_msgSend(v22, "actionWithTitle:style:handler:", v20, 2, v21);
    _Block_release(v21);

    swift_release();
    objc_msgSend(v16, "addAction:", v23);
    if (qword_1014910D8 != -1)
      swift_once(&qword_1014910D8, sub_1001B1688);
    v24 = *((_QWORD *)&xmmword_10149F010 + 1);
    v25 = swift_allocObject(&unk_1011A8F88, 32, 7);
    *(_QWORD *)(v25 + 16) = a5;
    *(_QWORD *)(v25 + 24) = a6;
    sub_10000C128(a5, a6);
    swift_bridgeObjectRetain(v24);
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
    v38 = sub_1001B7B74;
    v39 = (_QWORD *)v25;
    aBlock = _NSConcreteStackBlock;
    v35 = 1107296256;
    v36 = sub_100136AFC;
    v37 = &unk_1011A8FA0;
    v27 = _Block_copy(&aBlock);
    swift_release();
    v28 = objc_msgSend(v22, "actionWithTitle:style:handler:", v26, 1, v27);
    _Block_release(v27);

    objc_msgSend(v16, "addAction:", v28);
    objc_msgSend(a7, "_maps_topMostPresentViewController:animated:completion:", v16, 1, 0);

  }
  else
  {
    v29 = sub_100008B04((uint64_t *)&unk_101493B10);
    inited = swift_initStackObject(v29, v40);
    *(_OWORD *)(inited + 16) = xmmword_100E23F50;
    *(_QWORD *)(inited + 32) = a4;
    aBlock = (void **)inited;
    specialized Array._endMutation()(inited);
    v31 = (uint64_t)aBlock;
    v32 = swift_allocObject(&unk_1011A8F10, 32, 7);
    *(_QWORD *)(v32 + 16) = a5;
    *(_QWORD *)(v32 + 24) = a6;
    swift_unknownObjectRetain(a4);
    sub_10000C128(a5, a6);
    sub_1001B285C(v31, (void (*)(_QWORD, __n128))sub_1001BA2EC, v32);
    swift_release();
    swift_bridgeObjectRelease(v31);
  }
}

void sub_1001B2760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];
  _BYTE v16[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = sub_100008B04((uint64_t *)&unk_101493B10);
    inited = swift_initStackObject(v11, v15);
    *(_OWORD *)(inited + 16) = xmmword_100E23F50;
    *(_QWORD *)(inited + 32) = a3;
    v14 = inited;
    specialized Array._endMutation()(inited);
    v13 = swift_allocObject(&unk_1011A8FD8, 32, 7);
    *(_QWORD *)(v13 + 16) = a4;
    *(_QWORD *)(v13 + 24) = a5;
    swift_unknownObjectRetain(a3);
    sub_10000C128(a4, a5);
    sub_1001B285C(v14, (void (*)(_QWORD, __n128))sub_1001BA2EC, v13);
    swift_release();
    swift_bridgeObjectRelease(v14);

  }
}

void sub_1001B285C(uint64_t a1, void (*a2)(_QWORD, __n128), uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t j;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  void *v39;
  uint64_t v40;

  v4 = v3;
  v8 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v31 = a1;
    else
      v31 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v31);
    if (!v11)
      goto LABEL_23;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v11)
      goto LABEL_23;
  }
  if (v11 < 1)
  {
    __break(1u);
    return;
  }
  if ((a1 & 0xC000000000000001) == 0)
  {
    v39 = v4;
    v22 = type metadata accessor for MapsSyncObject(0, v12);
    for (i = 0; i != v11; ++i)
    {
      v25 = *(_QWORD *)(a1 + 8 * i + 32);
      v26 = swift_dynamicCastClass(v25, v22);
      if (v26)
      {
        v27 = v26;
        v28 = swift_unknownObjectRetain(v25);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
        v30 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v29 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v30 >= v29 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
        v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v27);
        specialized Array._endMutation()(v24);
      }
    }
    swift_bridgeObjectRelease(a1);
    v4 = v39;
    goto LABEL_24;
  }
  for (j = 0; j != v11; ++j)
  {
    v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, a1);
    v16 = type metadata accessor for MapsSyncObject(0, v15);
    v17 = swift_dynamicCastClass(v14, v16);
    if (v17)
    {
      v18 = v17;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      v20 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v19 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v20 >= v19 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
      v21 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
      specialized Array._endMutation()(v21);
    }
    else
    {
      swift_unknownObjectRelease(v14);
    }
  }
LABEL_23:
  swift_bridgeObjectRelease(a1);
LABEL_24:
  v32 = v40;
  if ((unint64_t)v40 >> 62)
  {
    if (v40 < 0)
      v36 = v40;
    else
      v36 = v40 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v40);
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v32);
    if (v37 > 0)
      goto LABEL_26;
  }
  else if (*(uint64_t *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
  {
LABEL_26:
    v33 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
    v34 = (_QWORD *)swift_allocObject(&unk_1011A9000, 64, 7);
    v34[2] = 0;
    v34[3] = 0;
    v34[4] = v32;
    v34[5] = v4;
    v34[6] = a2;
    v34[7] = a3;
    v35 = v4;
    sub_10000C128((uint64_t)a2, a3);
    sub_1001B0C08((uint64_t)v10, (uint64_t)&unk_10149F0B8, (uint64_t)v34);
    swift_release();
    return;
  }
  v38 = swift_bridgeObjectRelease(v32);
  if (a2)
    a2(0, v38);
}

void sub_1001B2CC4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = _convertErrorToNSError(_:)(a2);
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

void sub_1001B2D1C(uint64_t a1, void *a2, void (*a3)(uint64_t, _QWORD, __n128), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSBundle v24;
  Swift::String v25;
  Swift::String v26;
  void *object;
  Swift::String v28;
  Swift::String v29;
  void *v30;
  NSString v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  NSString v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  void **aBlock;
  uint64_t v49;
  void (*v50)(uint64_t, void *);
  void *v51;
  void *v52;
  _QWORD *v53;
  Swift::String v54;
  Swift::String v55;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = sub_100008B04(&qword_101494070);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v21 = a1;
    else
      v21 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    v12 = swift_bridgeObjectRelease(a1);
    if (v22)
    {
      swift_bridgeObjectRetain(a1);
      v23 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(a1);
      if (v23 == 1)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      if (v15 == 1)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
          goto LABEL_7;
        }
        if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v16 = *(_QWORD *)(a1 + 32);
          swift_unknownObjectRetain(v16);
LABEL_7:
          v17 = type metadata accessor for TaskPriority(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 1, 1, v17);
          v18 = (_QWORD *)swift_allocObject(&unk_1011A8EE8, 80, 7);
          v18[2] = 0;
          v18[3] = 0;
          v18[4] = v5;
          v18[5] = v16;
          v18[6] = a3;
          v18[7] = a4;
          v18[8] = a2;
          v18[9] = ObjectType;
          v19 = v5;
          swift_unknownObjectRetain(v16);
          sub_10000C128((uint64_t)a3, a4);
          v20 = a2;
          sub_1001B0C08((uint64_t)v14, (uint64_t)&unk_10149F0A0, (uint64_t)v18);
          swift_release();
          swift_unknownObjectRelease(v16);
          return;
        }
        __break(1u);
        goto LABEL_24;
      }
LABEL_13:
      v47 = a2;
      if (qword_101490ED0 == -1)
      {
LABEL_14:
        v24.super.isa = (Class)qword_1014D4B80;
        v25._countAndFlagsBits = 0xD000000000000024;
        v54._countAndFlagsBits = 0xD000000000000037;
        v26._countAndFlagsBits = 0xD000000000000069;
        v54._object = (void *)0x8000000100E4FB50;
        v25._object = (void *)0x8000000100E4FAB0;
        v26._object = (void *)0x8000000100E4FAE0;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v26, v54)._object;
        v28._countAndFlagsBits = 0xD000000000000022;
        v55._countAndFlagsBits = 0xD000000000000046;
        v55._object = (void *)0x8000000100E4FBE0;
        v28._object = (void *)0x8000000100E4FB90;
        v29._object = (void *)0x8000000100E4FBC0;
        v29._countAndFlagsBits = 0xD000000000000014;
        v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, v24, v29, v55)._object;
        v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v30);
        v32 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(object);
        v33 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v31, v32, 0);

        if (qword_1014910D0 != -1)
          swift_once(&qword_1014910D0, sub_1001B15E0);
        v34 = *((_QWORD *)&xmmword_10149F000 + 1);
        v35 = swift_allocObject(&unk_1011A8E20, 24, 7);
        swift_unknownObjectWeakInit(v35 + 16);
        v36 = (_QWORD *)swift_allocObject(&unk_1011A8E48, 48, 7);
        v36[2] = v35;
        v36[3] = a1;
        v36[4] = a3;
        v36[5] = a4;
        swift_bridgeObjectRetain(a1);
        sub_10000C128((uint64_t)a3, a4);
        swift_bridgeObjectRetain(v34);
        swift_retain();
        v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v34);
        v52 = sub_1001B7B4C;
        v53 = v36;
        aBlock = _NSConcreteStackBlock;
        v49 = 1107296256;
        v50 = sub_100136AFC;
        v51 = &unk_1011A8E60;
        v38 = _Block_copy(&aBlock);
        swift_release();
        v39 = (void *)objc_opt_self(UIAlertAction);
        v40 = objc_msgSend(v39, "actionWithTitle:style:handler:", v37, 2, v38);
        _Block_release(v38);

        swift_release();
        objc_msgSend(v33, "addAction:", v40);
        if (qword_1014910D8 != -1)
          swift_once(&qword_1014910D8, sub_1001B1688);
        v41 = *((_QWORD *)&xmmword_10149F010 + 1);
        v42 = swift_allocObject(&unk_1011A8E98, 32, 7);
        *(_QWORD *)(v42 + 16) = a3;
        *(_QWORD *)(v42 + 24) = a4;
        sub_10000C128((uint64_t)a3, a4);
        swift_bridgeObjectRetain(v41);
        v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v41);
        v52 = sub_1001B7B74;
        v53 = (_QWORD *)v42;
        aBlock = _NSConcreteStackBlock;
        v49 = 1107296256;
        v50 = sub_100136AFC;
        v51 = &unk_1011A8EB0;
        v44 = _Block_copy(&aBlock);
        swift_release();
        v45 = objc_msgSend(v39, "actionWithTitle:style:handler:", v43, 1, v44);
        _Block_release(v44);

        objc_msgSend(v33, "addAction:", v45);
        objc_msgSend(v47, "_maps_topMostPresentViewController:animated:completion:", v33, 1, 0);

        return;
      }
LABEL_24:
      swift_once(&qword_101490ED0, sub_10011833C);
      goto LABEL_14;
    }
  }
  if (a3)
    a3(1, 0, v12);
}

void sub_1001B32DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];

  v8 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = swift_allocObject(&unk_1011A9040, 32, 7);
    *(_QWORD *)(v11 + 16) = a4;
    *(_QWORD *)(v11 + 24) = a5;
    sub_10000C128(a4, a5);
    sub_1001B285C(a3, (void (*)(_QWORD, __n128))sub_1001BA2EC, v11);
    swift_release();

  }
}

uint64_t sub_1001B3460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return swift_task_switch(sub_1001B347C, 0, 0);
}

uint64_t sub_1001B347C()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t (*v32)(uint64_t);

  v4 = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 136) = v4;
  v5 = (objc_class *)(v0 + 136);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v28 = v4;
    else
      v28 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v4, 2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v28);
    *(_QWORD *)(v0 + 184) = v6;
    if (v6)
    {
LABEL_3:
      if (v6 < 1)
      {
        __break(1u);
      }
      else
      {
        v7 = 0;
        while (1)
        {
          *(_QWORD *)(v0 + 192) = 0;
          *(_QWORD *)(v0 + 200) = v7;
          v8 = *(_QWORD *)(v0 + 152);
          v9 = (v8 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v8)
             : *(id *)(v8 + 8 * v7 + 32);
          v11 = v9;
          *(_QWORD *)(v0 + 208) = v9;
          v12 = type metadata accessor for FavoriteItem(0, v10);
          v13 = swift_dynamicCastClass(v11, v12);
          if (v13)
            break;
          v14 = v11;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
          v16 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v15 = *(_QWORD *)((*(_QWORD *)v5 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v16 >= v15 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
          v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
          specialized Array._endMutation()(v17);

          v7 = *(_QWORD *)(v0 + 200) + 1;
          if (v7 == *(_QWORD *)(v0 + 184))
            goto LABEL_20;
        }
        v6 = v13;
        v5 = (objc_class *)type metadata accessor for MapsFavoriteItem();
        v18 = objc_allocWithZone(v5);
        v19 = &v18[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
        *v19 = 0;
        v19[1] = 0;
        v18[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
        v20 = &v18[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
        *v20 = 0x6966654472657355;
        v20[1] = 0xEB0000000064656ELL;
        *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
        v18[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
        v18[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
        v18[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
        v3 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
        v21 = qword_101490E18;
        v2 = v11;
        v1 = v18;
        if (v21 == -1)
          goto LABEL_14;
      }
      swift_once(&qword_101490E18, sub_1000F987C);
LABEL_14:
      v1[v3] = byte_1014D4998;
      *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
      v22 = v0 + 16;
      *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v6;
      v23 = v2;

      *(_QWORD *)(v0 + 120) = v1;
      *(_QWORD *)(v0 + 128) = v5;
      v24 = objc_msgSendSuper2((objc_super *)(v0 + 120), "init");
      *(_QWORD *)(v0 + 248) = v24;

      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1001B3874;
      v25 = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
      v26 = (_QWORD *)(v0 + 80);
      v26[1] = 0x40000000;
      v26[2] = sub_100205D48;
      v26[3] = &unk_1011A9018;
      v26[4] = v25;
      objc_msgSend(v24, "deleteWithDeleteFromLibrary:completionHandler:", 1, v26);
      return swift_continuation_await(v22);
    }
  }
  else
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v4, 2);
    *(_QWORD *)(v0 + 184) = v6;
    if (v6)
      goto LABEL_3;
  }
  v5 = (objc_class *)(v0 + 152);
LABEL_20:
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
  v29 = *(_QWORD *)v5;
  *(_QWORD *)(v0 + 216) = *(_QWORD *)v5;
  *(_QWORD *)(v0 + 224) = 0;
  v30 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:) + 1);
  v32 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
  swift_bridgeObjectRetain(v29);
  v31 = (_QWORD *)swift_task_alloc(v30);
  *(_QWORD *)(v0 + 232) = v31;
  *v31 = v0;
  v31[1] = sub_1001B37FC;
  return v32(v29);
}

uint64_t sub_1001B37FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 232);
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  v4 = *(_QWORD *)(v2 + 216);
  swift_bridgeObjectRelease(v4);
  if (v0)
  {
    swift_bridgeObjectRelease(v4);
    v5 = sub_1001B43F4;
  }
  else
  {
    v5 = sub_1001B3C14;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001B3874()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 256) = v1;
  if (v1)
    v2 = sub_1001B3F48;
  else
    v2 = sub_1001B38D4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001B38D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  _BYTE *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _BYTE *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t (*v33)(uint64_t);

  v1 = *(void **)(v0 + 208);

  v2 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200) + 1;
  if (v3 == *(_QWORD *)(v0 + 184))
  {
LABEL_2:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
    v4 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)(v0 + 216) = v4;
    *(_QWORD *)(v0 + 224) = v2;
    v5 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:) + 1);
    v33 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
    swift_bridgeObjectRetain(v4);
    v6 = (_QWORD *)swift_task_alloc(v5);
    *(_QWORD *)(v0 + 232) = v6;
    *v6 = v0;
    v6[1] = sub_1001B37FC;
    return v33(v4);
  }
  else
  {
    v8 = (_QWORD *)(v0 + 136);
    while (1)
    {
      *(_QWORD *)(v0 + 192) = v2;
      *(_QWORD *)(v0 + 200) = v3;
      v9 = *(_QWORD *)(v0 + 152);
      v10 = (v9 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v9)
          : *(id *)(v9 + 8 * v3 + 32);
      v12 = v10;
      *(_QWORD *)(v0 + 208) = v10;
      v13 = type metadata accessor for FavoriteItem(0, v11);
      v14 = swift_dynamicCastClass(v12, v13);
      if (v14)
        break;
      v15 = v12;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
      specialized Array._endMutation()(v18);

      v3 = *(_QWORD *)(v0 + 200) + 1;
      if (v3 == *(_QWORD *)(v0 + 184))
        goto LABEL_2;
    }
    v19 = v14;
    v20 = (objc_class *)type metadata accessor for MapsFavoriteItem();
    v21 = objc_allocWithZone(v20);
    v22 = &v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
    *v22 = 0;
    v22[1] = 0;
    v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
    v23 = &v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
    *v23 = 0x6966654472657355;
    v23[1] = 0xEB0000000064656ELL;
    *(_QWORD *)&v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
    v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
    v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
    v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
    v24 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
    v25 = qword_101490E18;
    v26 = v12;
    v27 = v21;
    if (v25 != -1)
      swift_once(&qword_101490E18, sub_1000F987C);
    v27[v24] = byte_1014D4998;
    *(_QWORD *)&v27[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
    v28 = v0 + 16;
    *(_QWORD *)&v27[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v19;
    v29 = v26;

    *(_QWORD *)(v0 + 120) = v27;
    *(_QWORD *)(v0 + 128) = v20;
    v30 = objc_msgSendSuper2((objc_super *)(v0 + 120), "init");
    *(_QWORD *)(v0 + 248) = v30;

    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1001B3874;
    v31 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v32 = (_QWORD *)(v0 + 80);
    v32[1] = 0x40000000;
    v32[2] = sub_100205D48;
    v32[3] = &unk_1011A9018;
    v32[4] = v31;
    objc_msgSend(v30, "deleteWithDeleteFromLibrary:completionHandler:", 1, v32);
    return swift_continuation_await(v28);
  }
}

uint64_t sub_1001B3C14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;

  v1 = v0[28];
  if (v1)
  {
    v2 = v0[27];
    swift_errorRetain(v0[28]);
    swift_bridgeObjectRelease(v2);
    swift_willThrow(v3);
    swift_errorRelease(v1);
    v0[34] = v1;
    if (qword_101490E88 != -1)
      swift_once(&qword_101490E88, sub_10011470C);
    v4 = type metadata accessor for Logger(0);
    sub_10000E918(v4, (uint64_t)qword_1014D4AA8);
    swift_errorRetain(v1);
    v5 = swift_errorRetain(v1);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.error.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v8 = 138412290;
      swift_errorRetain(v1);
      v10 = _swift_stdlib_bridgeErrorToNSError(v1);
      v0[18] = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 18, v0 + 19, v8 + 4, v8 + 12);
      *v9 = v10;
      swift_errorRelease(v1);
      swift_errorRelease(v1);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "LibraryDataOperationsProvider: deleteFromLibrary() Error deleting :%@", v8, 0xCu);
      v11 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v9, 1, v11);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {
      swift_errorRelease(v1);
      swift_errorRelease(v1);
    }

    v17 = type metadata accessor for MainActor(0);
    v0[35] = static MainActor.shared.getter(v17);
    v13 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
    v15 = v18;
    v16 = sub_1001B3EC8;
  }
  else
  {
    v12 = type metadata accessor for MainActor(0);
    v0[33] = static MainActor.shared.getter(v12);
    v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
    v15 = v14;
    v16 = sub_1001B3E70;
  }
  return swift_task_switch(v16, v13, v15);
}

uint64_t sub_1001B3E70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  if (v1)
    (*(void (**)(_QWORD))(v0 + 168))(0);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  return swift_task_switch(sub_1000C1008, 0, 0);
}

uint64_t sub_1001B3EC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  if (v1)
    (*(void (**)(_QWORD))(v0 + 168))(*(_QWORD *)(v0 + 272));
  return swift_task_switch(sub_1001B3F18, 0, 0);
}

uint64_t sub_1001B3F18()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 272));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B3F48(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *v34;
  _BYTE *v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _BYTE *v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t (*v47)(uint64_t);

  v2 = *(void **)(v1 + 248);
  swift_willThrow(a1);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v3 = *(_QWORD *)(v1 + 256);
  v4 = type metadata accessor for Logger(0);
  sub_10000E918(v4, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v1 + 256);
  v10 = *(void **)(v1 + 208);
  if (v8)
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    swift_errorRetain(v9);
    v13 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(_QWORD *)(v11 + 4) = v13;
    *v12 = v13;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "LibraryDataOperationsProvider: deleteFromLibrary() Error deleting favorite :%@", (uint8_t *)v11, 0xCu);
    v14 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

  }
  else
  {

    swift_errorRelease(v9);
    swift_errorRelease(v9);
  }
  v15 = *(_QWORD *)(v1 + 192);

  v16 = *(_QWORD *)(v1 + 256);
  if (v15)
  {
    swift_errorRelease(*(_QWORD *)(v1 + 256));
    v16 = *(_QWORD *)(v1 + 192);
  }
  v17 = *(_QWORD *)(v1 + 200) + 1;
  if (v17 == *(_QWORD *)(v1 + 184))
  {
LABEL_9:
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 152));
    v18 = *(_QWORD *)(v1 + 136);
    *(_QWORD *)(v1 + 216) = v18;
    *(_QWORD *)(v1 + 224) = v16;
    v19 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:) + 1);
    v47 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                          + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
    swift_bridgeObjectRetain(v18);
    v20 = (_QWORD *)swift_task_alloc(v19);
    *(_QWORD *)(v1 + 232) = v20;
    *v20 = v1;
    v20[1] = sub_1001B37FC;
    return v47(v18);
  }
  else
  {
    v22 = (_QWORD *)(v1 + 136);
    while (1)
    {
      *(_QWORD *)(v1 + 192) = v16;
      *(_QWORD *)(v1 + 200) = v17;
      v23 = *(_QWORD *)(v1 + 152);
      v24 = (v23 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v23)
          : *(id *)(v23 + 8 * v17 + 32);
      v26 = v24;
      *(_QWORD *)(v1 + 208) = v24;
      v27 = type metadata accessor for FavoriteItem(0, v25);
      v28 = swift_dynamicCastClass(v26, v27);
      if (v28)
        break;
      v29 = v26;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
      v31 = *(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v30 = *(_QWORD *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v31 >= v30 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
      v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
      specialized Array._endMutation()(v32);

      v17 = *(_QWORD *)(v1 + 200) + 1;
      if (v17 == *(_QWORD *)(v1 + 184))
        goto LABEL_9;
    }
    v33 = v28;
    v34 = (objc_class *)type metadata accessor for MapsFavoriteItem();
    v35 = objc_allocWithZone(v34);
    v36 = &v35[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
    *v36 = 0;
    v36[1] = 0;
    v35[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
    v37 = &v35[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
    *v37 = 0x6966654472657355;
    v37[1] = 0xEB0000000064656ELL;
    *(_QWORD *)&v35[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
    v35[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
    v35[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
    v35[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
    v38 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
    v39 = qword_101490E18;
    v40 = v26;
    v41 = v35;
    if (v39 != -1)
      swift_once(&qword_101490E18, sub_1000F987C);
    v41[v38] = byte_1014D4998;
    *(_QWORD *)&v41[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
    v42 = v1 + 16;
    *(_QWORD *)&v41[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = v33;
    v43 = v40;

    *(_QWORD *)(v1 + 120) = v41;
    *(_QWORD *)(v1 + 128) = v34;
    v44 = objc_msgSendSuper2((objc_super *)(v1 + 120), "init");
    *(_QWORD *)(v1 + 248) = v44;

    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_1001B3874;
    v45 = swift_continuation_init(v1 + 16, 1);
    *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
    v46 = (_QWORD *)(v1 + 80);
    v46[1] = 0x40000000;
    v46[2] = sub_100205D48;
    v46[3] = &unk_1011A9018;
    v46[4] = v45;
    objc_msgSend(v44, "deleteWithDeleteFromLibrary:completionHandler:", 1, v46);
    return swift_continuation_await(v42);
  }
}

uint64_t sub_1001B43F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_errorRelease(v0[28]);
  v1 = v0[30];
  v0[34] = v1;
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[18] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 18, v0 + 19, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "LibraryDataOperationsProvider: deleteFromLibrary() Error deleting :%@", v6, 0xCu);
    v9 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = type metadata accessor for MainActor(0);
  v0[35] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B3EC8, v11, v12);
}

void sub_1001B46BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  _QWORD v6[6];

  if (a3)
  {
    v6[4] = a3;
    v6[5] = a4;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_1000B3780;
    v6[3] = &unk_1011A9358;
    v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend((id)objc_opt_self(MapsSavedRoutesManager), "deleteRoute:completion:", a2, v5);
  _Block_release(v5);
}

uint64_t sub_1001B482C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  return swift_task_switch(sub_1001B4848, 0, 0);
}

uint64_t sub_1001B4848()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  v1 = v0[3];
  type metadata accessor for FavoriteItemRequest(0);
  v0[7] = FavoriteItemRequest.__allocating_init()();
  v4 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                  + 1));
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_1001B48C4;
  return v4(v1);
}

uint64_t sub_1001B48C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v5 = *(void **)(*v2 + 56);
  v4 = *(_QWORD *)(*v2 + 64);
  *(_QWORD *)(v3 + 72) = a1;
  *(_QWORD *)(v3 + 80) = v1;
  swift_task_dealloc(v4);

  if (v1)
    v6 = sub_1001B4D34;
  else
    v6 = sub_1001B4934;
  return swift_task_switch(v6, 0, 0);
}

void sub_1001B4934()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD *v12;
  void (*v13)(uint64_t);

  v1 = v0[9];
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v8 = v0[9];
    else
      v8 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v0[9]);
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v1);
    if (v9)
      goto LABEL_3;
LABEL_11:
    v10 = v0[4];
    v11 = swift_bridgeObjectRelease(v0[9]);
    type metadata accessor for CollectionPlaceItemRequest(0, v11);
    v0[11] = CollectionPlaceItemRequest.__allocating_init()();
    v13 = (void (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
    v12 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                     + 1));
    v0[12] = v12;
    *v12 = v0;
    v12[1] = sub_1001B4AA8;
    v13(v10);
    return;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0[9]);
    v2 = v0[9];
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = v0[9];
    v3 = *(id *)(v2 + 32);
LABEL_6:
    swift_bridgeObjectRelease(v2);
    v0[15] = v3;
    v4 = type metadata accessor for MainActor(0);
    v5 = swift_unknownObjectRetain(v3);
    v0[16] = static MainActor.shared.getter(v5);
    v6 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    swift_task_switch(sub_1001B4C28, v6, v7);
    return;
  }
  __break(1u);
}

uint64_t sub_1001B4AA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v5 = *(void **)(*v2 + 88);
  v4 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc(v4);

  if (v1)
    v6 = sub_1001B4F28;
  else
    v6 = sub_1001B4B18;
  return swift_task_switch(v6, 0, 0);
}

void sub_1001B4B18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[13];
  if (!((unint64_t)v1 >> 62))
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(v0[13]);
    v3 = 0;
    goto LABEL_12;
  }
  if (v1 < 0)
    v4 = v0[13];
  else
    v4 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v0[13]);
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v1);
  if (!v5)
    goto LABEL_11;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v0[13]);
    v2 = v0[13];
    goto LABEL_6;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v2 = v0[13];
    v3 = *(id *)(v2 + 32);
LABEL_6:
    swift_bridgeObjectRelease(v2);
LABEL_12:
    v0[15] = v3;
    v6 = type metadata accessor for MainActor(0);
    v7 = swift_unknownObjectRetain(v3);
    v0[16] = static MainActor.shared.getter(v7);
    v8 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
    swift_task_switch(sub_1001B4C28, v8, v9);
    return;
  }
  __break(1u);
}

uint64_t sub_1001B4C28()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 40);
  swift_release();
  v2(v1, 0);
  return swift_task_switch(sub_1001B4C7C, 0, 0);
}

uint64_t sub_1001B4C7C()
{
  uint64_t v0;

  swift_unknownObjectRelease_n(*(_QWORD *)(v0 + 120), 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B4CB0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD, uint64_t);

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(void (**)(_QWORD, uint64_t))(v0 + 40);
  swift_release();
  v2(0, v1);
  return swift_task_switch(sub_1001B4D04, 0, 0);
}

uint64_t sub_1001B4D04()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 136));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B4D34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[10];
  v0[17] = v1;
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[2] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "LibraryDataOperationsProvider: existingPlaceItem() Error fetching :%@", v6, 0xCu);
    v9 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B4CB0, v11, v12);
}

uint64_t sub_1001B4F28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0[14];
  v0[17] = v1;
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    v0[2] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "LibraryDataOperationsProvider: existingPlaceItem() Error fetching :%@", v6, 0xCu);
    v9 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  v10 = type metadata accessor for MainActor(0);
  v0[18] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001B4CB0, v11, v12);
}

uint64_t sub_1001B52C0(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = unk_10149F16C;
  v11 = (uint64_t (*)(uint64_t))((char *)&dword_10149F168 + dword_10149F168);
  v7 = a1;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_1001B534C;
  return v11((uint64_t)v7);
}

uint64_t sub_1001B534C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  void *v12;
  void (**v13)(_QWORD, _QWORD, _QWORD);

  v3 = v1;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 40);
  v8 = *(void **)(*v2 + 16);
  v7 = *(void **)(*v2 + 24);
  v9 = *v2;
  swift_task_dealloc(v6);

  if (v3)
  {
    v10 = _convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    isa = 0;
    v12 = (void *)v10;
  }
  else
  {
    sub_100008B04(&qword_10149B560);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
    v10 = 0;
    v12 = isa;
  }
  v13 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 32);
  ((void (**)(_QWORD, Class, uint64_t))v13)[2](v13, isa, v10);

  _Block_release(v13);
  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t sub_1001B5428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v11 = (uint64_t (*)(uint64_t))((char *)&dword_10149F168 + dword_10149F168);
  v9 = (_QWORD *)swift_task_alloc(unk_10149F16C);
  v7[11] = v9;
  *v9 = v7;
  v9[1] = sub_1001B5490;
  return v11(a5);
}

uint64_t sub_1001B5490(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1001B5A78;
  else
    v5 = sub_1001B54FC;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001B54FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t (*v53)(_QWORD *);

  v1 = *(_QWORD *)(v0 + 96);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v50 = *(_QWORD *)(v0 + 96);
    else
      v50 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 96));
    v2 = _CocoaArrayWrapper.endIndex.getter(v50);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
    if (qword_101490E88 != -1)
      swift_once(&qword_101490E88, sub_10011470C);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_10000E918(v11, (uint64_t)qword_1014D4AA8);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "LibraryDataOperationsProvider: updateSavedPlaceItems(): Found no matching items to update", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 112) = sub_10000E918(v4, (uint64_t)qword_1014D4AA8);
  swift_bridgeObjectRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 96);
  v51 = v0;
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v10 = 134217984;
    *(_QWORD *)(v0 + 48) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "LibraryDataOperationsProvider: updateSavedPlaceItems(): Found %ld matching items to update", v10, 0xCu);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(v9);
  }

  v17 = *(_QWORD *)(v0 + 96);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v40 = *(_QWORD *)(v0 + 96);
    else
      v40 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (v18)
      goto LABEL_16;
LABEL_46:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
    *(_QWORD *)(v0 + 120) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
    v53 = (uint64_t (*)(_QWORD *))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                           + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
    v49 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                     + 1));
    *(_QWORD *)(v0 + 128) = v49;
    *v49 = v0;
    v49[1] = sub_1001B5C3C;
    return v53(_swiftEmptyArrayStorage);
  }
  v18 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v17);
  if (!v18)
    goto LABEL_46;
LABEL_16:
  result = objc_opt_self(GEOMapItemStorage);
  if (v18 >= 1)
  {
    v19 = (void *)result;
    v20 = 0;
    v52 = v1 & 0xC000000000000001;
    v21 = (_QWORD *)(*(_QWORD *)(v0 + 96) + 32);
    do
    {
      if (v52)
      {
        v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, *(_QWORD *)(v0 + 96));
      }
      else
      {
        v23 = (void *)v21[v20];
        swift_unknownObjectRetain(v23);
      }
      v24 = objc_msgSend(v19, "mapItemStorageForGEOMapItem:", *(_QWORD *)(v0 + 72), v51);
      v25 = v24;
      if (v24)
      {
        v26 = v24;
        v27 = objc_msgSend(v23, "mapItemStorage");
        if (v27)
        {
          v28 = v27;
          v22 = objc_msgSend(v27, "_clientAttributes");

        }
        else
        {
          v22 = 0;
        }
        objc_msgSend(v26, "setClientAttributes:", v22);

        v0 = v51;
      }
      ++v20;
      objc_msgSend(v23, "setMapItemStorage:", v25);

      swift_unknownObjectRelease(v23);
    }
    while (v18 != v20);
    v29 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRetain(v29);
    if (v52)
    {
      for (i = 0; i != v18; ++i)
      {
        v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, *(_QWORD *)(v0 + 96));
        v34 = type metadata accessor for MapsSyncObject(0, v33);
        v35 = swift_dynamicCastClass(v32, v34);
        if (v35)
        {
          v36 = v35;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v35);
          v38 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v37 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v38 >= v37 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
          v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
          specialized Array._endMutation()(v39);
        }
        else
        {
          swift_unknownObjectRelease(v32);
        }
      }
    }
    else
    {
      v41 = type metadata accessor for MapsSyncObject(0, v30);
      do
      {
        v43 = *v21;
        v44 = swift_dynamicCastClass(*v21, v41);
        if (v44)
        {
          v45 = v44;
          v46 = swift_unknownObjectRetain(v43);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
          v48 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v47 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v48 >= v47 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
          v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v45);
          specialized Array._endMutation()(v42);
        }
        ++v21;
        --v18;
      }
      while (v18);
    }
    goto LABEL_46;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B5A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 104);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "LibraryDataOperationsProvider: updateSavedPlaceItems() Error :%@", v6, 0xCu);
    v9 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B5C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001B5EB8;
  else
    v3 = sub_1001B5CA0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001B5CA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(void **)(v0 + 80);
  v3 = *(id *)(v0 + 64);
  v4 = v2;
  v5 = v3;
  v6 = v4;
  v7 = swift_bridgeObjectRetain(v1);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_QWORD *)(v0 + 120);
  if (v10)
  {
    v24 = v0 + 40;
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v12 = 134218496;
    if (v11 >> 62)
    {
      v22 = *(_QWORD *)(v0 + 120);
      if (v22 < 0)
        v23 = *(_QWORD *)(v0 + 120);
      else
        v23 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 120));
      v13 = _CocoaArrayWrapper.endIndex.getter(v23);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v14 = *(_QWORD *)(v0 + 120);
    v15 = *(void **)(v0 + 80);
    v16 = *(void **)(v0 + 64);
    swift_bridgeObjectRelease(v14);
    *(_QWORD *)(v0 + 24) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v12 + 12) = 2048;
    v17 = objc_msgSend(v16, "_muid");

    *(_QWORD *)(v0 + 32) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v24, v12 + 14, v12 + 22);

    *(_WORD *)(v12 + 22) = 2048;
    v18 = objc_msgSend(v15, "_muid");

    *(_QWORD *)(v0 + 40) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v24, v0 + 48, v12 + 24, v12 + 32);

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "LibraryDataOperationsProvider: updateSavedPlaceItems(): updated %ld items. Old id: %llu | New id:%llu", (uint8_t *)v12, 0x20u);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    v19 = *(void **)(v0 + 80);
    v20 = *(void **)(v0 + 64);

    swift_bridgeObjectRelease_n(v11, 2);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B5EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  v1 = *(_QWORD *)(v0 + 136);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "LibraryDataOperationsProvider: updateSavedPlaceItems() Error :%@", v6, 0xCu);
    v9 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B61E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 120) = a1;
  *(_QWORD *)(v4 + 128) = a4;
  return swift_task_switch(sub_1001B61F8, 0, 0);
}

uint64_t sub_1001B61F8()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;

  v1 = v0;
  v2 = v0 + 2;
  v3 = (void *)v1[16];
  v4 = objc_allocWithZone((Class)type metadata accessor for MapsFavoriteItem());
  v5 = v3;
  v6 = sub_10020E76C(v5);
  v1[17] = v6;

  v1[2] = v1;
  v1[3] = sub_1001B62B8;
  v7 = swift_continuation_init(v2, 1);
  v1[10] = _NSConcreteStackBlock;
  v1 += 10;
  v1[1] = 0x40000000;
  v1[2] = sub_100205D48;
  v1[3] = &unk_1011A9188;
  v1[4] = v7;
  objc_msgSend(v6, "deleteWithCompletionHandler:", v1);
  return swift_continuation_await(v2);
}

uint64_t sub_1001B62B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 144) = v1;
  if (v1)
    v2 = sub_1001B6358;
  else
    v2 = sub_1001B6318;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001B6318()
{
  uint64_t v0;
  uint64_t v1;
  BOOL *v2;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(BOOL **)(v0 + 120);

  *v2 = v1 != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL *v3;

  v1 = *(_QWORD *)(v0 + 144);
  swift_willThrow();
  swift_errorRelease(v1);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(BOOL **)(v0 + 120);

  *v3 = v2 != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B63F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 128) = a4;
  *(_QWORD *)(v5 + 136) = a5;
  return swift_task_switch(sub_1001B6410, 0, 0);
}

uint64_t sub_1001B6410()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v3 = objc_allocWithZone((Class)type metadata accessor for MapsFavoriteItem());
  v4 = sub_1002061AC(v2);
  v0[18] = v4;
  v0[2] = v0;
  v0[3] = sub_1001B64C4;
  v5 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_100205D48;
  v6[3] = &unk_1011A9120;
  v6[4] = v5;
  objc_msgSend(v4, "moveToBackWithCompletionHandler:", v6);
  return swift_continuation_await(v1);
}

uint64_t sub_1001B64C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    v2 = sub_1001B66A0;
  else
    v2 = sub_1001B6524;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001B6524()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  v1 = v0[18];
  v2 = (void *)v0[16];
  v3 = sub_100008B04((uint64_t *)&unk_101493B10);
  v4 = swift_allocObject(v3, 48, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100E250A0;
  *(_QWORD *)(v4 + 32) = v2;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  *(_QWORD *)(v4 + 40) = v5;
  v12 = v4;
  specialized Array._endMutation()(v4);
  v0[20] = v12;
  v6 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:) + 1);
  v11 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  v7 = v2;
  v8 = v5;
  v9 = (_QWORD *)swift_task_alloc(v6);
  v0[21] = v9;
  *v9 = v0;
  v9[1] = sub_1001B6604;
  return v11(v12);
}

uint64_t sub_1001B6604()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001B6870;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 160));
    v4 = sub_1001B6670;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001B6670()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B66A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(void **)(v1 + 144);
  swift_willThrow(a1);

  v3 = *(_QWORD *)(v1 + 152);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v4 = type metadata accessor for Logger(0);
  sub_10000E918(v4, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v3);
    v10 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v1 + 120) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 120, v1 + 128, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "LibraryDataOperationsProvider: saveAsFavorite() Error saving :%@", v8, 0xCu);
    v11 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v3);
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    swift_errorRelease(v3);

  }
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001B6870()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 144);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));

  v2 = *(_QWORD *)(v0 + 176);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    swift_errorRetain(v2);
    v9 = _swift_stdlib_bridgeErrorToNSError(v2);
    *(_QWORD *)(v0 + 120) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v7 + 4, v7 + 12);
    *v8 = v9;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "LibraryDataOperationsProvider: saveAsFavorite() Error saving :%@", v7, 0xCu);
    v10 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    swift_errorRelease(v2);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void LibraryDataOperationsProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.LibraryDataOperationsProvider", 34, "init()", 6, 0);
  __break(1u);
}

id sub_1001B6B94(id a1, SEL a2)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id result;

  v2 = a1;
  v3 = (void *)dispatch thunk of CollectionPlaceItem.mapItemStorage.getter();
  if (v3
    && (v4 = v3, v5 = objc_msgSend(v3, "_styleAttributes"), v4, v5)
    || (result = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "markerStyleAttributes"),
        (v5 = result) != 0))
  {

    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id CollectionPlaceItem.styleAttributes.getter()
{
  void *v0;
  void *v1;
  id v2;
  id result;

  v0 = (void *)dispatch thunk of CollectionPlaceItem.mapItemStorage.getter();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, "_styleAttributes");

    if (v2)
      return v2;
  }
  result = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "markerStyleAttributes");
  v2 = result;
  if (result)
    return v2;
  __break(1u);
  return result;
}

id sub_1001B6C90(id a1, SEL a2)
{
  id v2;
  id v3;

  v2 = a1;
  v3 = FavoriteItem.styleAttributes.getter();

  return v3;
}

id FavoriteItem.styleAttributes.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;

  switch((unsigned __int16)dispatch thunk of FavoriteItem.type.getter())
  {
    case 0u:
    case 1u:
      v0 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
      if (!v0
        || (v1 = v0, v2 = objc_msgSend(v0, "_styleAttributes"),
                     v1,
                     !v2))
      {
        v2 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "markerStyleAttributes");
        if (!v2)
        {
          __break(1u);
          goto LABEL_6;
        }
      }
      return v2;
    case 2u:
LABEL_6:
      v2 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "homeStyleAttributes");
      if (!v2)
      {
        __break(1u);
        goto LABEL_8;
      }
      return v2;
    case 3u:
LABEL_8:
      v2 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "workStyleAttributes");
      if (!v2)
      {
        __break(1u);
        goto LABEL_10;
      }
      return v2;
    case 5u:
      goto LABEL_14;
    case 6u:
      goto LABEL_16;
    default:
LABEL_10:
      v3 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter();
      if (v3)
      {
        v4 = v3;
        v2 = objc_msgSend(v3, "_styleAttributes");

        if (v2)
          return v2;
      }
      v2 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "markerStyleAttributes");
      if (v2)
        return v2;
      __break(1u);
LABEL_14:
      v2 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "schoolStyleAttributes");
      if (v2)
        return v2;
      __break(1u);
LABEL_16:
      v2 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "nearbyTransitStyleAttributes");
      if (!v2)
      {
        __break(1u);
        JUMPOUT(0x1001B6E64);
      }
      return v2;
  }
}

MKMapItem_optional __swiftcall LibraryPlaceItemCompatible.createMapItemFromStorage()()
{
  void *v0;
  id v1;
  Swift::Bool v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  objc_class *v7;
  objc_class *v8;
  MKMapItem_optional result;

  v1 = objc_msgSend(v0, "mapItemStorage");
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v0, "customName");
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(objc_allocWithZone((Class)GEOMapItemStorageUserValues), "init");
      objc_msgSend(v6, "setName:", v5);

      objc_msgSend(v3, "setUserValues:", v6);
    }
    v7 = (objc_class *)objc_msgSend((id)objc_opt_self(MKMapItem), "_itemWithGeoMapItem:", v3);

  }
  else
  {
    v7 = 0;
  }
  v8 = v7;
  result.value.super.isa = v8;
  result.is_nil = v2;
  return result;
}

id sub_1001B6F68(id a1, SEL a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  type metadata accessor for MapsSyncQueryPredicate(0);
  v2 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v3 + 56) = &type metadata for Int16;
  *(_QWORD *)(v3 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v3 + 32) = 6;
  v4 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000032, 0x8000000100E4F890, v3);
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t static CollectionPlaceItem.excludeShadowItemsPredicate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for MapsSyncQueryPredicate(0);
  v0 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v1 = swift_allocObject(v0, 72, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v1 + 56) = &type metadata for Int16;
  *(_QWORD *)(v1 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v1 + 32) = 6;
  v2 = static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000032, 0x8000000100E4F890, v1);
  swift_bridgeObjectRelease(v1);
  return v2;
}

id sub_1001B7098(id a1, SEL a2)
{
  id v2;
  id v3;

  v2 = a1;
  v3 = CollectionPlaceItem.updatedMapItemStorage()();

  return v3;
}

uint64_t sub_1001B7418(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = unk_10149F0AC;
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_10149F0A8 + dword_10149F0A8);
  swift_unknownObjectRetain(a1);
  v7 = a3;
  v8 = (_QWORD *)swift_task_alloc(v6);
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_1001B74A4;
  return v10(a1);
}

uint64_t sub_1001B74A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSString v9;
  void (**v10)(_QWORD, _QWORD);

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 40);
  v6 = *(_QWORD *)(*v2 + 16);
  v7 = *(void **)(*v2 + 24);
  v8 = *v2;
  swift_task_dealloc(v5);

  swift_unknownObjectRelease(v6);
  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  v10 = *(void (***)(_QWORD, _QWORD))(v4 + 32);
  ((void (**)(_QWORD, NSString))v10)[2](v10, v9);

  _Block_release(v10);
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_1001B7554(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1001B75BC;
  return v5(v2 + 32);
}

uint64_t sub_1001B75BC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1001B760C(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v15);
  result = swift_bridgeObjectRelease(v2);
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
    if (v10 < 0)
      goto LABEL_37;
    swift_bridgeObjectRetain(v2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
    v11 = 0;
    do
    {
      v12 = v11 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v11);
      v11 = v12;
    }
    while (v7 != v12);
  }
  if (v4)
  {
    if (v2 < 0)
      v14 = v2;
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v13 = _CocoaArrayWrapper.subscript.getter(0, v7, v14);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  return v13;
}

uint64_t sub_1001B77B4(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v2 < 0)
    v15 = v2;
  else
    v15 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v15);
  result = swift_bridgeObjectRelease(v2);
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
    if (v10 < 0)
      goto LABEL_37;
    swift_bridgeObjectRetain(v2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for Collection(0);
    v11 = 0;
    do
    {
      v12 = v11 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v11);
      v11 = v12;
    }
    while (v7 != v12);
  }
  if (v4)
  {
    if (v2 < 0)
      v14 = v2;
    else
      v14 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v13 = _CocoaArrayWrapper.subscript.getter(0, v7, v14);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  return v13;
}

id sub_1001B794C()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  unint64_t v3;
  id v4;
  NSString v5;
  Class isa;
  id v7;
  uint64_t v9;

  v0 = sub_100008B04(&qword_10149BAF0);
  inited = swift_initStackObject(v0, &v9);
  *(_OWORD *)(inited + 16) = xmmword_100E22F40;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSDebugDescriptionErrorKey);
  *(_QWORD *)(inited + 40) = v2;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = 0xD000000000000011;
  *(_QWORD *)(inited + 56) = 0x8000000100E50360;
  v3 = sub_100009624(inited);
  v4 = objc_allocWithZone((Class)NSError);
  v5 = String._bridgeToObjectiveC()();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v4, "initWithDomain:code:userInfo:", v5, 0, isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  return v7;
}

uint64_t sub_1001B7A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = swift_task_alloc(dword_10149F02C);
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000DD08;
  *(_OWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v3;
  return swift_task_switch(sub_1001B4848, 0, 0);
}

uint64_t type metadata accessor for LibraryDataOperationsProvider()
{
  return objc_opt_self(_TtC4Maps29LibraryDataOperationsProvider);
}

ValueMetadata *type metadata accessor for CollectionPlaceItem.MapsPredicate()
{
  return &type metadata for CollectionPlaceItem.MapsPredicate;
}

uint64_t type metadata accessor for MapsSyncPlaceItemMapStorageUpdater()
{
  return objc_opt_self(_TtC4Maps34MapsSyncPlaceItemMapStorageUpdater);
}

uint64_t sub_1001B7B1C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B7B40()
{
  return sub_1001BA2FC((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1001B7B4C(uint64_t a1)
{
  uint64_t *v1;

  sub_1001B32DC(a1, v1[2], v1[3], v1[4], v1[5]);
}

double sub_1001B7B58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001B7B68(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001B7B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t *v8;
  uint64_t (*v10)(uint64_t);

  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = swift_task_alloc(dword_10149F09C);
  v7 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_10000DD08;
  *(_OWORD *)(v6 + 48) = v7;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v2;
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_10149F0A8 + dword_10149F0A8);
  v8 = (uint64_t *)swift_task_alloc(unk_10149F0AC);
  *(_QWORD *)(v6 + 64) = v8;
  *v8 = v6;
  v8[1] = (uint64_t)sub_1001B216C;
  return v10(v2);
}

void sub_1001B7C24(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t Strong;
  void *v17;
  _QWORD *v18;
  objc_class *Predicate;
  id v20;
  void *v21;
  void *v22;
  objc_class *v23;
  id v24;
  id v25;
  uint64_t v26;
  objc_class *Options;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  id v44;
  uint64_t v45;
  char *v46;
  char v47[24];
  uint64_t v48[3];

  v4 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "_geoMapItem", swift_retain().n128_f64[0]);
  if (v7)
  {
    v8 = v7;
    swift_unknownObjectRetain(v7);
    v9 = objc_msgSend(a1, "_geoMapItemStorageForPersistence");
    v46 = v6;
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "userValues");

      if (!v11)
      {
LABEL_9:
        v14 = 0;
        goto LABEL_10;
      }
      v12 = objc_msgSend(v11, "name");

      if (v12)
      {
        v11 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v14 = v13;

LABEL_10:
        Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate(0);
        v20 = objc_allocWithZone(Predicate);
        v21 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)(v8, v11, v14);
        v22 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
        v23 = (objc_class *)type metadata accessor for MapsSyncRange(0);
        v24 = objc_allocWithZone(v23);
        v25 = v21;
        v26 = MapsSyncRange.init(offset:limit:)(0, 1);
        Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
        v28 = objc_allocWithZone(Options);
        v29 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v21, 0, v26);
        v30 = sub_100008B04((uint64_t *)&unk_101493B10);
        v31 = swift_allocObject(v30, 48, 7);
        *(_OWORD *)(v31 + 16) = xmmword_100E250A0;
        *(_QWORD *)(v31 + 32) = v25;
        *(_QWORD *)(v31 + 40) = v22;
        v48[0] = v31;
        specialized Array._endMutation()(v31);
        v32 = v48[0];
        v33 = objc_allocWithZone(Predicate);
        v15 = v25;
        v34 = v22;
        v35 = MapsSyncQueryPredicate.init(and:)(v32);
        v36 = objc_allocWithZone(v23);
        v37 = MapsSyncRange.init(offset:limit:)(0, 1);
        v38 = objc_allocWithZone(Options);
        v39 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v35, 0, v37);
        v40 = type metadata accessor for TaskPriority(0);
        v41 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v46, 1, 1, v40);
        v42 = (_QWORD *)swift_allocObject(&unk_1011A9548, 64, 7);
        v42[2] = 0;
        v42[3] = 0;
        v42[4] = v39;
        v42[5] = v29;
        v42[6] = sub_1001BB7EC;
        v42[7] = a2;
        v43 = v39;
        v44 = v29;
        swift_retain();
        sub_1001B0C08(v41, (uint64_t)&unk_10149F218, (uint64_t)v42);
        swift_release();
        swift_unknownObjectRelease(v8);
        swift_release();

        goto LABEL_11;
      }
    }
    v11 = 0;
    goto LABEL_9;
  }
  v15 = sub_1001B794C();
  swift_beginAccess(a2 + 16, v48, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v17 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_hasOperationInProgress) = 0;
    v18 = (_QWORD *)(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace);
    swift_beginAccess(Strong + OBJC_IVAR____TtC4Maps37PlaceCardLibraryOperationsCoordinator_savedStateOfPlace, v47, 1, 0);
    *v18 = 0;
    sub_10010DEA8();
    swift_release();

    v15 = v17;
  }
  else
  {
    swift_release();
  }
LABEL_11:

}

uint64_t sub_1001B7FC0(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  objc_class *Predicate;
  id v31;
  void *v32;
  void *v33;
  objc_class *v34;
  id v35;
  id v36;
  uint64_t v37;
  objc_class *Options;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v17 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v17);
  v59 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD *)swift_allocObject(&unk_1011A9480, 80, 7);
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v19[5] = a5;
  v19[6] = a6;
  v19[7] = a7;
  v58 = a8;
  v19[8] = a8;
  v19[9] = a9;
  swift_bridgeObjectRetain(a9);
  swift_retain();
  a4;
  v20 = a5;
  swift_bridgeObjectRetain(a7);
  v21 = objc_msgSend(a1, "_geoMapItem");
  if (!v21)
  {
    v28 = sub_1001B794C();
    sub_1001B1964(v20, a6, a7, v58, a9, a2, a3);

    return swift_release();
  }
  v22 = v21;
  swift_unknownObjectRetain(v21);
  v23 = objc_msgSend(a1, "_geoMapItemStorageForPersistence");
  v24 = v23;
  if (!v23)
  {
    v25 = 0;
    goto LABEL_10;
  }
  v25 = objc_msgSend(v23, "userValues");

  if (!v25)
  {
LABEL_9:
    v24 = 0;
    goto LABEL_10;
  }
  v26 = objc_msgSend(v25, "name");

  if (!v26)
  {
    v25 = 0;
    goto LABEL_9;
  }
  v25 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v24 = v27;

LABEL_10:
  Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate(0);
  v31 = objc_allocWithZone(Predicate);
  v57 = v22;
  v32 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)(v22, v25, v24);
  v33 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
  v34 = (objc_class *)type metadata accessor for MapsSyncRange(0);
  v35 = objc_allocWithZone(v34);
  v36 = v32;
  v37 = MapsSyncRange.init(offset:limit:)(0, 1);
  Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
  v39 = objc_allocWithZone(Options);
  v40 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v32, 0, v37);
  v41 = sub_100008B04((uint64_t *)&unk_101493B10);
  v42 = swift_allocObject(v41, 48, 7);
  *(_OWORD *)(v42 + 16) = xmmword_100E250A0;
  *(_QWORD *)(v42 + 32) = v36;
  *(_QWORD *)(v42 + 40) = v33;
  v60 = v42;
  specialized Array._endMutation()(v42);
  v43 = v60;
  v44 = objc_allocWithZone(Predicate);
  v45 = v36;
  v46 = v33;
  v47 = MapsSyncQueryPredicate.init(and:)(v43);
  v48 = objc_allocWithZone(v34);
  v49 = MapsSyncRange.init(offset:limit:)(0, 1);
  v50 = objc_allocWithZone(Options);
  v51 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v47, 0, v49);
  v52 = type metadata accessor for TaskPriority(0);
  v53 = (uint64_t)v59;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v59, 1, 1, v52);
  v54 = (_QWORD *)swift_allocObject(&unk_1011A94A8, 64, 7);
  v54[2] = 0;
  v54[3] = 0;
  v54[4] = v51;
  v54[5] = v40;
  v54[6] = sub_1001BB6FC;
  v54[7] = v19;
  v55 = v51;
  v56 = v40;
  swift_retain();
  sub_1001B0C08(v53, (uint64_t)&unk_10149F1F8, (uint64_t)v54);

  swift_release();
  swift_unknownObjectRelease(v57);
  return swift_release();
}

void sub_1001B83A8(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t Strong;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *Predicate;
  id v26;
  void *v27;
  void *v28;
  objc_class *v29;
  id v30;
  id v31;
  uint64_t v32;
  objc_class *Options;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  id v49;
  id v50;
  char *v51;
  uint64_t v52[3];

  v8 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v8);
  v10 = (char *)&v52[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)swift_allocObject(&unk_1011A94F8, 40, 7);
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  swift_retain();
  v12 = objc_msgSend(a1, "_geoMapItem", swift_retain().n128_f64[0]);
  if (v12)
  {
    v13 = v12;
    swift_unknownObjectRetain(v12);
    v14 = objc_msgSend(a1, "_geoMapItemStorageForPersistence");
    v51 = v10;
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, "userValues");

      if (!v16)
      {
LABEL_9:
        v19 = 0;
        goto LABEL_10;
      }
      v17 = objc_msgSend(v16, "name");

      if (v17)
      {
        v16 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v19 = v18;

LABEL_10:
        Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate(0);
        v26 = objc_allocWithZone(Predicate);
        v27 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)(v13, v16, v19);
        v28 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
        v29 = (objc_class *)type metadata accessor for MapsSyncRange(0);
        v30 = objc_allocWithZone(v29);
        v31 = v27;
        v32 = MapsSyncRange.init(offset:limit:)(0, 1);
        Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
        v34 = objc_allocWithZone(Options);
        v35 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v27, 0, v32);
        v36 = sub_100008B04((uint64_t *)&unk_101493B10);
        v37 = swift_allocObject(v36, 48, 7);
        *(_OWORD *)(v37 + 16) = xmmword_100E250A0;
        *(_QWORD *)(v37 + 32) = v31;
        *(_QWORD *)(v37 + 40) = v28;
        v52[0] = v37;
        specialized Array._endMutation()(v37);
        v38 = v52[0];
        v39 = objc_allocWithZone(Predicate);
        v20 = v31;
        v40 = v28;
        v41 = MapsSyncQueryPredicate.init(and:)(v38);
        v42 = objc_allocWithZone(v29);
        v43 = MapsSyncRange.init(offset:limit:)(0, 1);
        v44 = objc_allocWithZone(Options);
        v45 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v41, 0, v43);
        v46 = type metadata accessor for TaskPriority(0);
        v47 = (uint64_t)v51;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v51, 1, 1, v46);
        v48 = (_QWORD *)swift_allocObject(&unk_1011A9520, 64, 7);
        v48[2] = 0;
        v48[3] = 0;
        v48[4] = v45;
        v48[5] = v35;
        v48[6] = sub_1001BB7DC;
        v48[7] = v11;
        v49 = v45;
        v50 = v35;
        swift_retain();
        sub_1001B0C08(v47, (uint64_t)&unk_10149F210, (uint64_t)v48);
        swift_release();
        swift_unknownObjectRelease(v13);
        swift_release();

        goto LABEL_11;
      }
    }
    v16 = 0;
    goto LABEL_9;
  }
  v20 = sub_1001B794C();
  swift_beginAccess(a2 + 16, v52, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v22 = (_BYTE *)Strong;
    v23 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary);
    *(_QWORD *)&v22[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_placeItemInLibrary] = 0;
    v24 = swift_unknownObjectRelease(v23);
    v22[OBJC_IVAR____TtC4Maps39CuratedCollectionItemLibraryCoordinator_isAddingToLibrary] = 0;
    a3(v24);
    swift_release();

    v20 = v22;
  }
  else
  {
    swift_release();
  }
LABEL_11:

}

void sub_1001B8760(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  objc_class *Predicate;
  id v18;
  void *v19;
  void *v20;
  objc_class *v21;
  id v22;
  id v23;
  uint64_t v24;
  objc_class *Options;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;

  v4 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_allocObject(&unk_1011A9250, 24, 7);
  *(_QWORD *)(v7 + 16) = a2;
  _Block_copy(a2);
  v8 = objc_msgSend(a1, "_geoMapItem");
  if (!v8)
  {
    v16 = sub_1001B794C();
    v44 = (id)_convertErrorToNSError(_:)(v16);
    ((void (**)(_QWORD, _QWORD, id))a2)[2](a2, 0, v44);
    swift_release();

    return;
  }
  v9 = v8;
  swift_unknownObjectRetain(v8);
  v10 = objc_msgSend(a1, "_geoMapItemStorageForPersistence");
  v44 = v6;
  if (!v10)
    goto LABEL_7;
  v11 = v10;
  v12 = objc_msgSend(v10, "userValues");

  if (!v12)
  {
LABEL_8:
    v15 = 0;
    goto LABEL_9;
  }
  v13 = objc_msgSend(v12, "name");

  if (!v13)
  {
LABEL_7:
    v12 = 0;
    goto LABEL_8;
  }
  v12 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v15 = v14;

LABEL_9:
  Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate(0);
  v18 = objc_allocWithZone(Predicate);
  v19 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)(v9, v12, v15);
  v20 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
  v21 = (objc_class *)type metadata accessor for MapsSyncRange(0);
  v22 = objc_allocWithZone(v21);
  v23 = v19;
  v24 = MapsSyncRange.init(offset:limit:)(0, 1);
  Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
  v26 = objc_allocWithZone(Options);
  v27 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v19, 0, v24);
  v28 = sub_100008B04((uint64_t *)&unk_101493B10);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_100E250A0;
  *(_QWORD *)(v29 + 32) = v23;
  *(_QWORD *)(v29 + 40) = v20;
  v45 = v29;
  specialized Array._endMutation()(v29);
  v30 = v45;
  v31 = objc_allocWithZone(Predicate);
  v32 = v23;
  v33 = v20;
  v34 = MapsSyncQueryPredicate.init(and:)(v30);
  v35 = objc_allocWithZone(v21);
  v36 = MapsSyncRange.init(offset:limit:)(0, 1);
  v37 = objc_allocWithZone(Options);
  v38 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v34, 0, v36);
  v39 = type metadata accessor for TaskPriority(0);
  v40 = (uint64_t)v44;
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v44, 1, 1, v39);
  v41 = (_QWORD *)swift_allocObject(&unk_1011A9278, 64, 7);
  v41[2] = 0;
  v41[3] = 0;
  v41[4] = v38;
  v41[5] = v27;
  v41[6] = sub_1000B4E3C;
  v41[7] = v7;
  v42 = v38;
  v43 = v27;
  swift_retain();
  sub_1001B0C08(v40, (uint64_t)&unk_10149F1D8, (uint64_t)v41);
  swift_release();
  swift_unknownObjectRelease(v9);
  swift_release();

}

uint64_t sub_1001B8AE4(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[10] = a1;
  v2 = (*(_QWORD *)(*(_QWORD *)(sub_100008B04((uint64_t *)&unk_10149AA90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[11] = swift_task_alloc(v2);
  v1[12] = swift_task_alloc(v2);
  v3 = type metadata accessor for UUID(0);
  v1[13] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[14] = v4;
  v1[15] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001B8B78, 0, 0);
}

uint64_t sub_1001B8B78()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  int v12;
  _QWORD *v13;
  uint64_t v14;
  void *countAndFlagsBits;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  void *v26;
  __n128 v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD *v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  NSBundle v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  Swift::String v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *object;
  id *v83;
  _QWORD *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  NSBundle v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  const char *v102;
  Swift::String v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  id v108;
  _BOOL4 v109;
  int v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v1 = v0;
  v2 = objc_msgSend(*(id *)(v0 + 80), "placeItemNote");
  *(_QWORD *)(v0 + 128) = v2;
  if (v2)

  v4 = *(_QWORD *)(v0 + 80);
  v5 = type metadata accessor for FavoriteItem(0, v3);
  if (swift_dynamicCastClass(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 112);
    v8 = *(_QWORD *)(v1 + 96);
    v9 = swift_unknownObjectRetain(v4);
    dispatch thunk of MapsSyncObject.identifier.getter(v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 112) + 32))(*(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
      type metadata accessor for MapsSyncQueryPredicate(0);
      v23 = sub_100008B04((uint64_t *)&unk_10149A4F0);
      v24 = swift_allocObject(v23, 72, 7);
      *(_OWORD *)(v24 + 16) = xmmword_100E22F40;
      isa = UUID._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)(v24 + 56) = sub_10000E4BC(0, &qword_10149F0C8, NSUUID_ptr);
      *(_QWORD *)(v24 + 64) = sub_1001BA488();
      *(_QWORD *)(v24 + 32) = isa;
      v26 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000018, 0x8000000100E501C0, v24);
      *(_QWORD *)(v1 + 136) = v26;
      v27 = swift_bridgeObjectRelease(v24);
      type metadata accessor for CollectionPlaceItemRequest(0, v27);
      *(_QWORD *)(v1 + 144) = CollectionPlaceItemRequest.__allocating_init()();
      v28 = objc_allocWithZone((Class)type metadata accessor for MapsSyncRange(0));
      v29 = v26;
      v30 = MapsSyncRange.init(offset:limit:)(0, 1);
      v31 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
      v32 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v26, 0, v30);
      *(_QWORD *)(v1 + 152) = v32;
      v113 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                             + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
      v33 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + 1));
      *(_QWORD *)(v1 + 160) = v33;
      *v33 = v1;
      v33[1] = sub_1001B9610;
      return v113(v32);
    }
    v10 = *(_QWORD *)(v1 + 96);
    swift_unknownObjectRelease(*(_QWORD *)(v1 + 80));
    sub_100010CC4(v10, (uint64_t *)&unk_10149AA90);
    v11 = 0;
    v12 = 1;
    v13 = _swiftEmptyArrayStorage;
  }
  else
  {
    v14 = type metadata accessor for CollectionPlaceItem(0);
    countAndFlagsBits = (void *)swift_dynamicCastClass(v4, v14);
    if (!countAndFlagsBits)
    {
LABEL_84:
      object = 0;
      goto LABEL_85;
    }
    v16 = *(_QWORD *)(v0 + 104);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v1 + 88);
    v19 = swift_unknownObjectRetain(v4);
    dispatch thunk of CollectionPlaceItem.originalIdentifier.getter(v19);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16);
    v21 = sub_100010CC4(v18, (uint64_t *)&unk_10149AA90);
    v22 = v20 != 1 && (unsigned __int16)dispatch thunk of CollectionPlaceItem.type.getter(v21) == 2;
    v11 = countAndFlagsBits;
    v109 = v22;
    if ((dispatch thunk of CollectionPlaceItem.type.getter(v11) & 1) != 0)
    {
      if (qword_101491110 != -1)
        swift_once(&qword_101491110, sub_1001DCC98);
      swift_beginAccess(&static FavoriteCollectionHandler.title, v1 + 16, 0, 0);
      v35 = static FavoriteCollectionHandler.title;
      swift_bridgeObjectRetain(*((_QWORD *)&static FavoriteCollectionHandler.title + 1));
      v13 = _swiftEmptyArrayStorage;
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        v13 = sub_1000A89A8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
      v37 = v13[2];
      v36 = v13[3];
      if (v37 >= v36 >> 1)
        v13 = sub_1000A89A8((_QWORD *)(v36 > 1), v37 + 1, 1, v13);
      v13[2] = v37 + 1;
      *(_OWORD *)&v13[2 * v37 + 4] = v35;
    }
    else
    {
      v13 = _swiftEmptyArrayStorage;
    }
    v38 = dispatch thunk of CollectionItem.fetchCollections()();
    if (v13[2])
      v39 = 2;
    else
      v39 = 3;
    v40 = sub_1001B77B4(v39, v38);
    v42 = v41;
    v44 = v43;
    v46 = v45;
    swift_bridgeObjectRelease(v38);
    v47 = (v46 >> 1) - v44;
    if (v46 >> 1 != v44)
    {
      if ((uint64_t)(v46 >> 1) <= v44)
      {
        __break(1u);
        goto LABEL_87;
      }
      v83 = (id *)(v42 + 8 * v44);
      do
      {
        v85 = *v83;
        v86 = dispatch thunk of Collection.title.getter();
        if (v87)
        {
          v88 = v86;
          v89 = v87;
          swift_bridgeObjectRetain(v87);
          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_1000A89A8(0, v13[2] + 1, 1, v13);
          v91 = v13[2];
          v90 = v13[3];
          v92 = v13;
          if (v91 >= v90 >> 1)
            v92 = sub_1000A89A8((_QWORD *)(v90 > 1), v91 + 1, 1, v13);
          v92[2] = v91 + 1;
          v13 = v92;
          v84 = &v92[2 * v91];
          v84[4] = v88;
          v84[5] = v89;
          swift_bridgeObjectRelease(v89);
        }

        ++v83;
        --v47;
      }
      while (v47);
    }
    v48 = *(_QWORD *)(v1 + 128);
    swift_unknownObjectRelease(v40);

    v12 = v109;
    if (v48)
      v49 = 1;
    else
      v49 = v109;
    if ((v49 & 1) == 0)
    {
      if (!v13[2])
      {

        v101 = v13;
LABEL_83:
        swift_bridgeObjectRelease(v101);
        countAndFlagsBits = 0;
        goto LABEL_84;
      }
      v12 = 0;
    }
  }
  v50 = v13;
  v51 = v13[2];
  v111 = v50;
  if (v51)
  {
    v108 = v11;
    v110 = v12;
    v112 = v1 + 56;
    v114 = v1 + 40;
    swift_bridgeObjectRetain(v50);
    sub_1001323FC(0, v51, 0);
    v52 = v50 + 5;
    do
    {
      v53 = *(v52 - 1);
      v54 = *v52;
      v55 = swift_bridgeObjectRetain(*v52);
      v56 = String._mapsui_quotedForLocale.getter(v53, v54, v55);
      v58 = v57;
      *(_QWORD *)(v1 + 40) = v56;
      *(_QWORD *)(v1 + 48) = v57;
      *(_QWORD *)(v1 + 56) = 8237;
      v59 = v1;
      *(_QWORD *)(v1 + 64) = 0xE200000000000000;
      v115 = String.init<A>(_:)(v112, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v116 = v60;
      String.append<A>(contentsOf:)(v114, &type metadata for String, &protocol witness table for String);
      swift_bridgeObjectRelease(v58);
      swift_bridgeObjectRelease(v54);
      v62 = _swiftEmptyArrayStorage[2];
      v61 = _swiftEmptyArrayStorage[3];
      if (v62 >= v61 >> 1)
        sub_1001323FC(v61 > 1, v62 + 1, 1);
      _swiftEmptyArrayStorage[2] = v62 + 1;
      v63 = &_swiftEmptyArrayStorage[2 * v62];
      v63[4] = v115;
      v63[5] = v116;
      v52 += 2;
      --v51;
      v1 = v59;
    }
    while (v51);
    swift_bridgeObjectRelease(v111);
    v11 = v108;
    v12 = v110;
  }
  v13 = &type metadata for String;
  v64 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v1 + 72) = _swiftEmptyArrayStorage;
  v65 = sub_100008B04((uint64_t *)&unk_101492C00);
  v66 = sub_1001BA43C();
  v40 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v65, v66);
  v42 = v67;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  if (v64)
  {
    v68 = HIBYTE(v42) & 0xF;
    if ((v42 & 0x2000000000000000) == 0)
      v68 = v40 & 0xFFFFFFFFFFFFLL;
    if (v68)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v69.super.isa = (Class)qword_1014D4B80;
      v70 = 0xD00000000000002FLL;
      v71 = 0xD00000000000004DLL;
      v72 = 0xD000000000000063;
      v106 = 0x8000000100E50170;
      v73 = 0x8000000100E500D0;
      v74 = "Removing place from your library will delete your attached note and remove it from these guides:\n%@";
      goto LABEL_50;
    }
  }
  v75 = HIBYTE(v42) & 0xF;
  if ((v12 & 1) == 0
    || ((v42 & 0x2000000000000000) != 0 ? (v76 = HIBYTE(v42) & 0xF) : (v76 = v40 & 0xFFFFFFFFFFFFLL), !v76))
  {
    if ((v42 & 0x2000000000000000) == 0)
      v75 = v40 & 0xFFFFFFFFFFFFLL;
    if (v75)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v69.super.isa = (Class)qword_1014D4B80;
      v70 = 0xD000000000000024;
      v71 = 0xD00000000000003DLL;
      v106 = 0x8000000100E4FD60;
      v73 = 0x8000000100E4FCE0;
      v77 = 0x8000000100E4FD10;
      v72 = 0xD00000000000004ALL;
      goto LABEL_57;
    }
    swift_bridgeObjectRelease(v42);
    v93 = *(_QWORD *)(v1 + 128);
    if (v12)
    {
      v94 = v111;
      if (v93)
      {
        if (qword_101490ED0 != -1)
          swift_once(&qword_101490ED0, sub_10011833C);
        v95.super.isa = (Class)qword_1014D4B80;
        v96 = 0xD00000000000002CLL;
        v97 = 0xD00000000000004DLL;
        v107 = 0x8000000100E4FF90;
        v98 = 0x8000000100E4FF10;
        v99 = 0x8000000100E4FF40;
        v100 = 0xD00000000000004ALL;
        goto LABEL_81;
      }
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v95.super.isa = (Class)qword_1014D4B80;
      v96 = 0xD000000000000021;
      v97 = 0xD000000000000034;
      v100 = 0xD00000000000003CLL;
      v107 = 0x8000000100E4FED0;
      v98 = 0x8000000100E4FE60;
      v102 = "Removing place from your library will also unpin it.";
LABEL_80:
      v99 = (unint64_t)(v102 - 32) | 0x8000000000000000;
LABEL_81:
      v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v96, (Swift::String_optional)0, v95, *(Swift::String *)&v97, *(Swift::String *)&v100);
      countAndFlagsBits = (void *)v103._countAndFlagsBits;
      object = v103._object;

      swift_bridgeObjectRelease(v94);
      goto LABEL_85;
    }
    v94 = v111;
    if (v93)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v95.super.isa = (Class)qword_1014D4B80;
      v96 = 0xD000000000000020;
      v100 = 0xD00000000000003FLL;
      v97 = 0xD000000000000045;
      v107 = 0x8000000100E4FE20;
      v98 = 0x8000000100E4FDA0;
      v102 = "Removing place from your library will also delete your attached note.";
      goto LABEL_80;
    }

    v101 = v111;
    goto LABEL_83;
  }
  if (qword_101490ED0 != -1)
LABEL_87:
    swift_once(&qword_101490ED0, sub_10011833C);
  v69.super.isa = (Class)qword_1014D4B80;
  v70 = 0xD000000000000030;
  v71 = 0xD00000000000004ELL;
  v72 = 0xD000000000000052;
  v106 = 0x8000000100E50080;
  v73 = 0x8000000100E4FFE0;
  v74 = "Removing place from your library will unpin it and remove it from these guides:\n%@";
LABEL_50:
  v77 = (unint64_t)(v74 - 32) | 0x8000000000000000;
LABEL_57:
  v78 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v70, (Swift::String_optional)0, v69, *(Swift::String *)&v72, *(Swift::String *)&v71);
  v79 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v80 = swift_allocObject(v79, 72, 7);
  *(_OWORD *)(v80 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v80 + 56) = v13;
  *(_QWORD *)(v80 + 64) = sub_10000D8E0();
  *(_QWORD *)(v80 + 32) = v40;
  *(_QWORD *)(v80 + 40) = v42;
  countAndFlagsBits = (void *)String.init(format:_:)(v78._countAndFlagsBits, v78._object, v80);
  object = v81;

  swift_bridgeObjectRelease(v78._object);
  swift_bridgeObjectRelease(v111);
LABEL_85:
  v104 = *(_QWORD *)(v1 + 88);
  v105 = *(_QWORD *)(v1 + 96);
  swift_task_dealloc(*(_QWORD *)(v1 + 120));
  swift_task_dealloc(v105);
  swift_task_dealloc(v104);
  return (*(uint64_t (**)(void *, void *))(v1 + 8))(countAndFlagsBits, object);
}

uint64_t sub_1001B9610(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(*v2 + 168) = a1;
  swift_task_dealloc(v4);
  v7 = v3 + 144;
  v5 = *(void **)(v3 + 144);
  v6 = *(void **)(v7 + 8);
  if (v1)
  {
    swift_errorRelease(v1);

    v8 = sub_1001B9E34;
  }
  else
  {

    v8 = sub_1001B96A0;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001B96A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  id *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  _QWORD *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSBundle v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  Swift::String v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t countAndFlagsBits;
  void *v73;
  void *object;
  NSBundle v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  Swift::String v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;

  v4 = *(_QWORD *)(v0 + 168);
  if (v4 >> 62)
  {
    if ((v4 & 0x8000000000000000) != 0)
      v36 = *(_QWORD *)(v0 + 168);
    else
      v36 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 168));
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v4);
    if (v37)
      goto LABEL_3;
LABEL_33:
    v38 = *(_QWORD *)(v0 + 168);
    v39 = *(void **)(v0 + 136);
    v41 = *(_QWORD *)(v0 + 112);
    v40 = *(_QWORD *)(v0 + 120);
    v42 = *(_QWORD *)(v0 + 104);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));

    v43 = swift_bridgeObjectRelease(v38);
    (*(void (**)(uint64_t, uint64_t, __n128))(v41 + 8))(v40, v42, v43);
    v3 = 0;
    v12 = _swiftEmptyArrayStorage;
    goto LABEL_34;
  }
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_33;
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)(v0 + 168));
    v5 = *(_QWORD *)(v0 + 168);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_64;
    }
    v5 = *(_QWORD *)(v0 + 168);
    v6 = *(id *)(v5 + 32);
  }
  v7 = *(void **)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 120);
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRelease(v5);
  swift_unknownObjectRelease(v11);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  v3 = v6;
  if ((dispatch thunk of CollectionPlaceItem.type.getter() & 1) != 0)
  {
    if (qword_101491110 != -1)
      swift_once(&qword_101491110, sub_1001DCC98);
    swift_beginAccess(&static FavoriteCollectionHandler.title, v0 + 16, 0, 0);
    v13 = static FavoriteCollectionHandler.title;
    swift_bridgeObjectRetain(*((_QWORD *)&static FavoriteCollectionHandler.title + 1));
    v12 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v12 = sub_1000A89A8(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v15 = v12[2];
    v14 = v12[3];
    if (v15 >= v14 >> 1)
      v12 = sub_1000A89A8((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
    v12[2] = v15 + 1;
    *(_OWORD *)&v12[2 * v15 + 4] = v13;
  }
  else
  {
    v12 = _swiftEmptyArrayStorage;
  }
  v16 = dispatch thunk of CollectionItem.fetchCollections()();
  if (v12[2])
    v17 = 2;
  else
    v17 = 3;
  v18 = sub_1001B77B4(v17, v16);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease(v16);
  v25 = (v24 >> 1) - v22;
  if (v24 >> 1 != v22)
  {
    if ((uint64_t)(v24 >> 1) <= v22)
    {
      __break(1u);
      goto LABEL_66;
    }
    v26 = (id *)(v20 + 8 * v22);
    do
    {
      v28 = *v26;
      v29 = dispatch thunk of Collection.title.getter();
      if (v30)
      {
        v31 = v29;
        v32 = v30;
        swift_bridgeObjectRetain(v30);
        if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
          v12 = sub_1000A89A8(0, v12[2] + 1, 1, v12);
        v34 = v12[2];
        v33 = v12[3];
        v35 = v12;
        if (v34 >= v33 >> 1)
          v35 = sub_1000A89A8((_QWORD *)(v33 > 1), v34 + 1, 1, v12);
        v35[2] = v34 + 1;
        v12 = v35;
        v27 = &v35[2 * v34];
        v27[4] = v31;
        v27[5] = v32;
        swift_bridgeObjectRelease(v32);
      }

      ++v26;
      --v25;
    }
    while (v25);
  }
  swift_unknownObjectRelease(v18);

LABEL_34:
  v44 = v12;
  v45 = v12[2];
  v87 = v44;
  if (v45)
  {
    swift_bridgeObjectRetain(v44);
    sub_1001323FC(0, v45, 0);
    v46 = v44 + 5;
    do
    {
      v47 = *(v46 - 1);
      v48 = *v46;
      v49 = swift_bridgeObjectRetain(*v46);
      v50 = String._mapsui_quotedForLocale.getter(v47, v48, v49);
      v52 = v51;
      *(_QWORD *)(v0 + 40) = v50;
      *(_QWORD *)(v0 + 48) = v51;
      *(_QWORD *)(v0 + 56) = 8237;
      *(_QWORD *)(v0 + 64) = 0xE200000000000000;
      v88 = String.init<A>(_:)(v0 + 56, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v89 = v53;
      String.append<A>(contentsOf:)(v0 + 40, &type metadata for String, &protocol witness table for String);
      swift_bridgeObjectRelease(v52);
      swift_bridgeObjectRelease(v48);
      v55 = _swiftEmptyArrayStorage[2];
      v54 = _swiftEmptyArrayStorage[3];
      if (v55 >= v54 >> 1)
        sub_1001323FC(v54 > 1, v55 + 1, 1);
      _swiftEmptyArrayStorage[2] = v55 + 1;
      v56 = &_swiftEmptyArrayStorage[2 * v55];
      v56[4] = v88;
      v56[5] = v89;
      v46 += 2;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease(v87);
  }
  v2 = &type metadata for String;
  v57 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 72) = _swiftEmptyArrayStorage;
  v58 = sub_100008B04((uint64_t *)&unk_101492C00);
  v59 = sub_1001BA43C();
  v1 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v58, v59);
  v4 = v60;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v61 = HIBYTE(v4) & 0xF;
  if (!v57 || ((v4 & 0x2000000000000000) != 0 ? (v62 = HIBYTE(v4) & 0xF) : (v62 = v1 & 0xFFFFFFFFFFFFLL), !v62))
  {
    v22 = 0xD00000000000004DLL;
    if ((v4 & 0x2000000000000000) == 0)
      v61 = v1 & 0xFFFFFFFFFFFFLL;
    if (v61)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v63.super.isa = (Class)qword_1014D4B80;
      v64 = 0xD000000000000030;
      v68 = 0xD00000000000004ELL;
      v65 = 0xD000000000000052;
      v85 = 0x8000000100E50080;
      v66 = 0x8000000100E4FFE0;
      v67 = 0x8000000100E50020;
      goto LABEL_53;
    }
    swift_bridgeObjectRelease(v4);
    if (!*(_QWORD *)(v0 + 128))
    {
      v25 = (int64_t)v87;
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v75.super.isa = (Class)qword_1014D4B80;
      v76 = 0xD000000000000021;
      v80 = 0xD000000000000034;
      v77 = 0xD00000000000003CLL;
      v86 = 0x8000000100E4FED0;
      v78 = 0x8000000100E4FE60;
      v79 = 0x8000000100E4FE90;
      goto LABEL_60;
    }
    v25 = (int64_t)v87;
    if (qword_101490ED0 == -1)
    {
LABEL_56:
      v75.super.isa = (Class)qword_1014D4B80;
      v76 = v22 - 33;
      v77 = v22 - 3;
      v86 = 0x8000000100E4FF90;
      v78 = 0x8000000100E4FF10;
      v79 = 0x8000000100E4FF40;
      v80 = 0xD00000000000004DLL;
LABEL_60:
      v81 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v76, (Swift::String_optional)0, v75, *(Swift::String *)&v80, *(Swift::String *)&v77);
      countAndFlagsBits = v81._countAndFlagsBits;
      object = v81._object;

      goto LABEL_61;
    }
LABEL_66:
    swift_once(&qword_101490ED0, sub_10011833C);
    goto LABEL_56;
  }
  if (qword_101490ED0 != -1)
LABEL_64:
    swift_once(&qword_101490ED0, sub_10011833C);
  v63.super.isa = (Class)qword_1014D4B80;
  v64 = 0xD00000000000002FLL;
  v65 = 0xD000000000000063;
  v85 = 0x8000000100E50170;
  v66 = 0x8000000100E500D0;
  v67 = 0x8000000100E50100;
  v68 = 0xD00000000000004DLL;
LABEL_53:
  v69 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v64, (Swift::String_optional)0, v63, *(Swift::String *)&v65, *(Swift::String *)&v68);
  v70 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v71 = swift_allocObject(v70, 72, 7);
  *(_OWORD *)(v71 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v71 + 56) = v2;
  *(_QWORD *)(v71 + 64) = sub_10000D8E0();
  *(_QWORD *)(v71 + 32) = v1;
  *(_QWORD *)(v71 + 40) = v4;
  countAndFlagsBits = String.init(format:_:)(v69._countAndFlagsBits, v69._object, v71);
  object = v73;

  swift_bridgeObjectRelease(v69._object);
  v25 = (int64_t)v87;
LABEL_61:
  swift_bridgeObjectRelease(v25);
  v83 = *(_QWORD *)(v0 + 88);
  v82 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v82);
  swift_task_dealloc(v83);
  return (*(uint64_t (**)(uint64_t, void *))(v0 + 8))(countAndFlagsBits, object);
}

uint64_t sub_1001B9E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSBundle v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t countAndFlagsBits;
  void *v35;
  void *object;
  NSBundle v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);

  swift_unknownObjectRelease(v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  v5 = _swiftEmptyArrayStorage[2];
  if (v5)
  {
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_1001323FC(0, v5, 0);
    v6 = &_swiftEmptyArrayStorage[5];
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v9 = swift_bridgeObjectRetain(*v6);
      v10 = String._mapsui_quotedForLocale.getter(v8, v7, v9);
      v12 = v11;
      *(_QWORD *)(v0 + 40) = v10;
      *(_QWORD *)(v0 + 48) = v11;
      *(_QWORD *)(v0 + 56) = 8237;
      *(_QWORD *)(v0 + 64) = 0xE200000000000000;
      v49 = String.init<A>(_:)(v0 + 56, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v50 = v13;
      String.append<A>(contentsOf:)(v0 + 40, &type metadata for String, &protocol witness table for String);
      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v7);
      v15 = _swiftEmptyArrayStorage[2];
      v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1)
        sub_1001323FC(v14 > 1, v15 + 1, 1);
      _swiftEmptyArrayStorage[2] = v15 + 1;
      v16 = &_swiftEmptyArrayStorage[2 * v15];
      v16[4] = v49;
      v16[5] = v50;
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  v17 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 72) = _swiftEmptyArrayStorage;
  v18 = sub_100008B04((uint64_t *)&unk_101492C00);
  v19 = sub_1001BA43C();
  v20 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v18, v19);
  v22 = v21;
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v23 = HIBYTE(v22) & 0xF;
  if (v17)
  {
    if ((v22 & 0x2000000000000000) != 0 ? HIBYTE(v22) & 0xF : v20 & 0xFFFFFFFFFFFFLL)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v25.super.isa = (Class)qword_1014D4B80;
      v26 = 0xD00000000000002FLL;
      v27 = 0xD000000000000063;
      v47 = 0x8000000100E50170;
      v28 = 0x8000000100E500D0;
      v29 = 0x8000000100E50100;
      v30 = 0xD00000000000004DLL;
LABEL_21:
      v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v26, (Swift::String_optional)0, v25, *(Swift::String *)&v27, *(Swift::String *)&v30);
      v32 = sub_100008B04((uint64_t *)&unk_10149A4F0);
      v33 = swift_allocObject(v32, 72, 7);
      *(_OWORD *)(v33 + 16) = xmmword_100E22F40;
      *(_QWORD *)(v33 + 56) = &type metadata for String;
      *(_QWORD *)(v33 + 64) = sub_10000D8E0();
      *(_QWORD *)(v33 + 32) = v20;
      *(_QWORD *)(v33 + 40) = v22;
      countAndFlagsBits = String.init(format:_:)(v31._countAndFlagsBits, v31._object, v33);
      object = v35;
      swift_bridgeObjectRelease(v31._object);
      goto LABEL_30;
    }
  }
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v20 & 0xFFFFFFFFFFFFLL;
  if (v23)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v25.super.isa = (Class)qword_1014D4B80;
    v26 = 0xD000000000000030;
    v30 = 0xD00000000000004ELL;
    v27 = 0xD000000000000052;
    v47 = 0x8000000100E50080;
    v28 = 0x8000000100E4FFE0;
    v29 = 0x8000000100E50020;
    goto LABEL_21;
  }
  swift_bridgeObjectRelease(v22);
  if (*(_QWORD *)(v0 + 128))
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v37.super.isa = (Class)qword_1014D4B80;
    v38 = 0xD00000000000002CLL;
    v39 = 0xD00000000000004ALL;
    v48 = 0x8000000100E4FF90;
    v40 = 0x8000000100E4FF10;
    v41 = 0x8000000100E4FF40;
    v42 = 0xD00000000000004DLL;
  }
  else
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v37.super.isa = (Class)qword_1014D4B80;
    v38 = 0xD000000000000021;
    v42 = 0xD000000000000034;
    v39 = 0xD00000000000003CLL;
    v48 = 0x8000000100E4FED0;
    v40 = 0x8000000100E4FE60;
    v41 = 0x8000000100E4FE90;
  }
  v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v38, (Swift::String_optional)0, v37, *(Swift::String *)&v42, *(Swift::String *)&v39);
  countAndFlagsBits = v43._countAndFlagsBits;
  object = v43._object;
LABEL_30:
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v45 = *(_QWORD *)(v0 + 88);
  v44 = *(_QWORD *)(v0 + 96);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  return (*(uint64_t (**)(uint64_t, void *))(v0 + 8))(countAndFlagsBits, object);
}

uint64_t sub_1001BA2F0()
{
  return sub_1001BA2FC((void (*)(_QWORD))&_swift_unknownObjectRelease);
}

uint64_t sub_1001BA2FC(void (*a1)(_QWORD))
{
  _QWORD *v1;

  swift_release(v1[2]);
  a1(v1[3]);
  if (v1[4])
    swift_release(v1[5]);
  return swift_deallocObject(v1, 48, 7);
}

void sub_1001BA344(uint64_t a1)
{
  uint64_t *v1;

  sub_1001B2760(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001BA354()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, _QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(uint64_t, _QWORD))(v0 + 16);
  if (v1)
    return v1(1, 0);
  return result;
}

uint64_t sub_1001BA388()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001BA3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_10149F0B4);
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10000C0E0;
  *(_QWORD *)(v4 + 168) = v2;
  *(_QWORD *)(v4 + 176) = v3;
  *(_OWORD *)(v4 + 152) = v5;
  return swift_task_switch(sub_1001B347C, 0, 0);
}

unint64_t sub_1001BA43C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149A590;
  if (!qword_10149A590)
  {
    v1 = sub_10000E5D4((uint64_t *)&unk_101492C00);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10149A590);
  }
  return result;
}

unint64_t sub_1001BA488()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149F0D0;
  if (!qword_10149F0D0)
  {
    v1 = sub_10000E4BC(255, &qword_10149F0C8, NSUUID_ptr);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10149F0D0);
  }
  return result;
}

uint64_t sub_1001BA4E4(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD, uint64_t);

  v2 = *(uint64_t (**)(_QWORD, uint64_t))(v1 + 16);
  if (v2)
    return v2(0, result);
  return result;
}

uint64_t sub_1001BA514()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001BA548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10149F0DC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000DD08;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_10149F0D8 + dword_10149F0D8))(v2, v3, v4);
}

uint64_t sub_1001BA5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  __int128 v7;
  uint64_t (*v8)(_QWORD);

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_10149F0FC);
  v7 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_QWORD *)(v4 + 80) = v3;
  *(_OWORD *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 56) = v2;
  v8 = (uint64_t (*)(_QWORD))((char *)&dword_10149F168 + dword_10149F168);
  v5 = (uint64_t *)swift_task_alloc(unk_10149F16C);
  *(_QWORD *)(v4 + 88) = v5;
  *v5 = v4;
  v5[1] = (uint64_t)sub_1001B5490;
  return v8(v7);
}

void sub_1001BA66C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  char **v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  NSString v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  void *v40;
  id v41;
  void **aBlock;
  uint64_t v44;
  void (*v45)(uint64_t, void *);
  void *v46;
  void *v47;
  _QWORD *v48;
  Swift::String v49;

  v7 = objc_msgSend(a1, "userProvidedName");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = String.count.getter(v8, v10);
  *(_QWORD *)&v12 = swift_bridgeObjectRelease(v10).n128_u64[0];
  v13 = &selRef_routeName;
  if (v11 > 0)
    v13 = &selRef_userProvidedName;
  v14 = objc_msgSend(a1, *v13, v12);
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v17 = v16;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v18._countAndFlagsBits = 0xD00000000000002DLL;
  v49._countAndFlagsBits = 0xD000000000000042;
  v49._object = (void *)0x8000000100E502E0;
  v19._object = (void *)0x8000000100E50280;
  v18._object = (void *)0x8000000100E502B0;
  v19._countAndFlagsBits = 0xD000000000000022;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v18, v49);
  v21 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100E22F40;
  v23 = String._mapsui_quotedForLocale.getter(v15, v17, (__n128)xmmword_100E22F40);
  v25 = v24;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_10000D8E0();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v25;
  String.init(format:_:)(v20._countAndFlagsBits, v20._object, v22);
  v27 = v26;
  swift_bridgeObjectRelease(v20._object);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v27);
  v29 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v28, 0, 0);

  if (qword_1014910D0 != -1)
    swift_once(&qword_1014910D0, sub_1001B15E0);
  v30 = *((_QWORD *)&xmmword_10149F000 + 1);
  v31 = (_QWORD *)swift_allocObject(&unk_1011A92C8, 40, 7);
  v31[2] = a1;
  v31[3] = a3;
  v31[4] = a4;
  swift_bridgeObjectRetain(v30);
  v32 = a1;
  sub_10000C128(a3, a4);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  v47 = sub_1001BB5DC;
  v48 = v31;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_100136AFC;
  v46 = &unk_1011A92E0;
  v34 = _Block_copy(&aBlock);
  swift_release();
  v35 = (void *)objc_opt_self(UIAlertAction);
  v36 = objc_msgSend(v35, "actionWithTitle:style:handler:", v33, 2, v34);
  _Block_release(v34);

  objc_msgSend(v29, "addAction:", v36);
  if (qword_1014910D8 != -1)
    swift_once(&qword_1014910D8, sub_1001B1688);
  v37 = *((_QWORD *)&xmmword_10149F010 + 1);
  v38 = swift_allocObject(&unk_1011A9318, 32, 7);
  *(_QWORD *)(v38 + 16) = a3;
  *(_QWORD *)(v38 + 24) = a4;
  sub_10000C128(a3, a4);
  swift_bridgeObjectRetain(v37);
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v37);
  v47 = sub_1001BB5EC;
  v48 = (_QWORD *)v38;
  aBlock = _NSConcreteStackBlock;
  v44 = 1107296256;
  v45 = sub_100136AFC;
  v46 = &unk_1011A9330;
  v40 = _Block_copy(&aBlock);
  swift_release();
  v41 = objc_msgSend(v35, "actionWithTitle:style:handler:", v39, 1, v40);
  _Block_release(v40);

  objc_msgSend(v29, "addAction:", v41);
  objc_msgSend(a2, "_maps_topMostPresentViewController:animated:completion:", v29, 1, 0);

}

uint64_t sub_1001BAAE4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001BAAFC, 0, 0);
}

uint64_t sub_1001BAAFC()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_class *Predicate;
  id v13;
  void *v14;
  void *v15;
  objc_class *Options;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  uint64_t (*v30)(void *);
  uint64_t v31;

  v1 = objc_msgSend(*(id *)(v0 + 16), "_geoMapItem");
  *(_QWORD *)(v0 + 24) = v1;
  if (!v1)
  {
    v10 = sub_1001B794C();
    swift_willThrow(v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = v1;
  v3 = *(void **)(v0 + 16);
  swift_unknownObjectRetain(v1);
  v4 = objc_msgSend(v3, "_geoMapItemStorageForPersistence");
  v5 = v4;
  if (!v4)
    goto LABEL_8;
  v6 = objc_msgSend(v4, "userValues");

  if (!v6 || (v7 = objc_msgSend(v6, "name"), v6, !v7))
  {
    v5 = 0;
LABEL_8:
    v9 = 0;
    goto LABEL_9;
  }
  v5 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

LABEL_9:
  Predicate = (objc_class *)type metadata accessor for MapsSyncQueryPredicate(0);
  v13 = objc_allocWithZone(Predicate);
  v14 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)(v2, v5, v9);
  *(_QWORD *)(v0 + 32) = v14;
  v15 = (void *)static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
  *(_QWORD *)(v0 + 40) = v15;
  Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
  v17 = objc_allocWithZone(Options);
  v18 = v14;
  *(_QWORD *)(v0 + 48) = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v14, 0, 0);
  v19 = sub_100008B04((uint64_t *)&unk_101493B10);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100E250A0;
  *(_QWORD *)(v20 + 32) = v18;
  *(_QWORD *)(v20 + 40) = v15;
  v31 = v20;
  specialized Array._endMutation()(v20);
  v21 = objc_allocWithZone(Predicate);
  v22 = v18;
  v23 = v15;
  v24 = MapsSyncQueryPredicate.init(and:)(v31);
  v25 = objc_allocWithZone(Options);
  v26 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v24, 0, 0);
  *(_QWORD *)(v0 + 56) = v26;
  type metadata accessor for FavoriteItemRequest(0);
  *(_QWORD *)(v0 + 64) = FavoriteItemRequest.__allocating_init()();
  v27 = *((unsigned int *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:) + 1);
  v30 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
  v28 = v26;
  v29 = (_QWORD *)swift_task_alloc(v27);
  *(_QWORD *)(v0 + 72) = v29;
  *v29 = v0;
  v29[1] = sub_1001BAD6C;
  return v30(v26);
}

uint64_t sub_1001BAD6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 72);
  *(_QWORD *)(v3 + 80) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001BB03C;
  }
  else
  {
    v6 = *(void **)(v3 + 64);

    v5 = sub_1001BADE4;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001BADE4(__n128 a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  uint64_t (*v7)(void *);

  v2 = (void *)v1[6];
  type metadata accessor for CollectionPlaceItemRequest(0, a1);
  v1[12] = CollectionPlaceItemRequest.__allocating_init()();
  v3 = *((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:) + 1);
  v7 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                      + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  v4 = v2;
  v5 = (_QWORD *)swift_task_alloc(v3);
  v1[13] = v5;
  *v5 = v1;
  v5[1] = sub_1001BAE6C;
  return v7(v2);
}

uint64_t sub_1001BAE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 104);
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001BB0A4;
  }
  else
  {
    v6 = *(void **)(v3 + 96);

    v5 = sub_1001BAEE8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001BAEE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 80);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v16 = *(_QWORD *)(v0 + 80);
    else
      v16 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
    v17 = sub_100008B04(&qword_10149B560);
    v4 = _bridgeCocoaArray<A>(_:)(v16, v17);
    swift_bridgeObjectRelease(v1);
    v3 = *(_QWORD *)(v0 + 80);
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    v3 = *(_QWORD *)(v0 + 80);
    v4 = v3;
  }
  v5 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRelease(v3);
  v6 = *(_QWORD *)(v0 + 112);
  if (v5 >> 62)
  {
    if (v6 < 0)
      v18 = *(_QWORD *)(v0 + 112);
    else
      v18 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 112));
    v19 = sub_100008B04(&qword_10149B560);
    v9 = _bridgeCocoaArray<A>(_:)(v18, v19);
    swift_bridgeObjectRelease(v6);
    v8 = *(_QWORD *)(v0 + 112);
  }
  else
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 112));
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v7);
    v8 = *(_QWORD *)(v0 + 112);
    v9 = v8;
  }
  v11 = *(void **)(v0 + 48);
  v10 = *(void **)(v0 + 56);
  v13 = *(void **)(v0 + 32);
  v12 = *(void **)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRelease(v8);
  sub_1001205A0(v9);

  swift_unknownObjectRelease(v14);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1001BB03C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v2 = *(void **)(v0 + 56);
  v1 = *(void **)(v0 + 64);
  v4 = *(void **)(v0 + 40);
  v3 = *(void **)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(void **)(v0 + 32);

  swift_unknownObjectRelease(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001BB0A4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(void **)(v0 + 48);
  v3 = *(void **)(v0 + 56);
  v6 = *(void **)(v0 + 32);
  v5 = *(void **)(v0 + 40);
  v7 = *(_QWORD *)(v0 + 24);

  swift_bridgeObjectRelease(v2);
  swift_unknownObjectRelease(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001BB124()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001BB158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_10149F17C);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000DD08;
  *(_OWORD *)(v2 + 128) = v3;
  return swift_task_switch(sub_1001B6410, 0, 0);
}

uint64_t sub_1001BB1B8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v23[4];

  v2 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_1011A9148, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = a1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = a1;
  if (v9 == 1)
  {
    sub_100010CC4((uint64_t)v4, &qword_101494070);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_1011A9170, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_10149F190;
  *(_QWORD *)(v19 + 24) = v7;
  v20 = sub_100008B04(&qword_10149F1A8);
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v21 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v21 = 0;
  }
  swift_task_create(v13, v21, v20, &unk_10149F1A0, v19);
  return swift_release();
}

uint64_t sub_1001BB390()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001BB3BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_10149F18C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000DD08;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch(sub_1001B61F8, 0, 0);
}

uint64_t sub_1001BB420(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10149F19C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000DD08;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10149F198 + dword_10149F198))(a1, v4);
}

uint64_t sub_1001BB494()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001BB4D8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001BB50C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_10149F1BC);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000DD08;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_10149F1B8 + dword_10149F1B8))(v2, v3, v4);
}

uint64_t sub_1001BB580()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BB5A8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001BB5DC(uint64_t a1)
{
  uint64_t *v1;

  sub_1001B46BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001BB5EC()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

void sub_1001BB618(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001B2CC4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001BB624()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001BB648(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10149F19C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10149F198 + dword_10149F198))(a1, v4);
}

uint64_t sub_1001BB6B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001BB6FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v2 = v1;
  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  if (a1)
    return v3(a1, 0);
  else
    return sub_1001B1964(*(void **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), (uint64_t)v3, v4);
}

uint64_t sub_1001BB74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;

  v2 = swift_task_alloc(dword_10149F204);
  v3 = *(_OWORD *)(v0 + 32);
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000DD08;
  *(_OWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v3;
  return swift_task_switch(sub_1001B1C90, 0, 0);
}

uint64_t sub_1001BB7B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001BB7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001A33AC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24));
}

void sub_1001BB7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10010E8D4(a1, a2, v2);
}

uint64_t sub_1001BB7F8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001BB838()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1001BB8D4(uint64_t a1)
{
  void (*v1)(__n128);
  uint64_t v2;
  __n128 v3;

  v1 = *(void (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_1001BB900(char a1)
{
  uint64_t v2;

  v2 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

void sub_1001BB990()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  id v16;
  double v17;
  void *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;

  v5 = objc_msgSend((id)objc_opt_self(MapsOfflineUIHelper), "sharedHelper");
  *(_QWORD *)(v4 - 192) = objc_msgSend(v5, "alertControllerForAttemptedAddShortcut");

  if (*(_QWORD *)(v4 - 192))
  {
    v10 = v0 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
    Strong = swift_unknownObjectWeakLoadStrong(v10);
    if (Strong)
    {
      v12 = Strong;
      v13 = *(_QWORD *)(v10 + 8);
      ObjectType = swift_getObjectType();
      v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(ObjectType, v13);
      swift_unknownObjectRelease(v12);
      objc_msgSend(v15, "_maps_topMostPresentViewController:animated:completion:", *(_QWORD *)(v4 - 192), 1, 0);

    }
  }
  else
  {
    v6 = objc_msgSend(v1, "_muid");
    v7 = *(unsigned int *)(v0 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo);
    if (v6)
    {
      *(_QWORD *)(v4 - 144) = v6;
      dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v9 = v8;
    }
    else
    {
      v9 = 0;
    }
    v16 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
    if (!v16)
    {
      __break(1u);
      JUMPOUT(0x1001BC270);
    }
    v18 = v16;
    if (v9)
    {
      v19 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v17 = swift_bridgeObjectRelease(v9).n128_u64[0];
    }
    else
    {
      v19 = 0;
    }
    objc_msgSend(v18, "captureUserAction:onTarget:eventValue:", 475, v7, v19, v17);

    v20 = type metadata accessor for CollectionPlaceItem(0);
    v21 = swift_dynamicCastClass(v2, v20);
    if (v21)
    {
      v22 = v21;
      v23 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider);
      v24 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v3, 1, 1, v24);
      v25 = (_QWORD *)swift_allocObject(&unk_1011A9740, 48, 7);
      v25[2] = 0;
      v25[3] = 0;
      v25[4] = v22;
      v25[5] = v23;
      swift_unknownObjectRetain_n(v2, 2);
      v26 = v23;
      sub_1001B0C08(v3, (uint64_t)&unk_10149F180, (uint64_t)v25);
      swift_unknownObjectRelease(v2);
      swift_release();
    }
  }
}

void sub_1001BC288(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  id v10;
  _BYTE v11[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(id *)(Strong + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider);
    sub_1001B147C(a1, a2, a4);

  }
}

void sub_1001BC31C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001BC350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v2 = v1 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v0, ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

id LibraryCellActionHandlingUICoordination<>.viewControllerForPresentingAlert.getter()
{
  void *v0;

  return v0;
}

void sub_1001BC5BC(uint64_t a1, NSString a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  void *v16;
  _QWORD aBlock[6];
  _BYTE v18[24];

  v13 = v7 + *a6;
  swift_beginAccess(v13, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  if (Strong)
  {
    v15 = (void *)Strong;
    if (a2)
      a2 = String._bridgeToObjectiveC()();
    aBlock[4] = a4;
    aBlock[5] = a5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BC7BC;
    aBlock[3] = a7;
    v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v15, "presentEditNoteViewControllerWithInitialText:libraryAccessProvider:placeMUID:completion:", a2, 0, a3, v16);
    swift_unknownObjectRelease(v15);
    _Block_release(v16);

  }
}

void LibraryCellActionHandlingUICoordination<>.presentNoteEditor(initialText:placeMUID:completion:)(uint64_t a1, NSString a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v15[6];

  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8))(a6, a8);
  if (v12)
  {
    v13 = (void *)v12;
    if (a2)
      a2 = String._bridgeToObjectiveC()();
    v15[4] = a4;
    v15[5] = a5;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_1001BC7BC;
    v15[3] = &unk_1011A95B0;
    v14 = _Block_copy(v15);
    swift_retain();
    swift_release();
    objc_msgSend(v13, "presentEditNoteViewControllerWithInitialText:libraryAccessProvider:placeMUID:completion:", a2, 0, a3, v14);
    swift_unknownObjectRelease(v13);
    _Block_release(v14);

  }
}

uint64_t sub_1001BC7BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, __n128);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v3 = *(void (**)(uint64_t, uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = swift_retain(v2);
  v3(v4, v6, v7);
  swift_release(v2);
  return swift_bridgeObjectRelease(v6);
}

double sub_1001BC820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001BC830(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001BC838(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  void *v13;
  _QWORD aBlock[6];
  _BYTE v15[24];

  v10 = v5 + *a4;
  swift_beginAccess(v10, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    if (a2)
    {
      aBlock[4] = a2;
      aBlock[5] = a3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001BB8D4;
      aBlock[3] = a5;
      v13 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v12, "viewController:doShareSheetForShareItem:completion:", v5, a1, v13);
    swift_unknownObjectRelease(v12);
    _Block_release(v13);
  }
}

void LibraryCellActionHandlingUICoordination<>.presentShareSheet(_:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  if (v10)
  {
    v11 = (void *)v10;
    if (a2)
    {
      v12[4] = a2;
      v12[5] = a3;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      v12[2] = sub_1001BB8D4;
      v12[3] = &unk_1011A95D8;
      a2 = _Block_copy(v12);
      swift_retain();
      swift_release();
    }
    objc_msgSend(v11, "viewController:doShareSheetForShareItem:completion:", v6, a1, a2);
    swift_unknownObjectRelease(v11);
    _Block_release(a2);
  }
}

uint64_t sub_1001BC9F8(uint64_t a1, uint64_t a2, _QWORD *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD v25[3];
  uint64_t v26;
  _BYTE v27[24];

  v14 = v7 + *a3;
  swift_beginAccess(v14, v27, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v14);
  if (result)
  {
    v16 = (void *)result;
    sub_1000110D4(a2, (uint64_t)v25);
    v17 = v26;
    if (v26)
    {
      v18 = sub_10000BE88(v25, v26);
      v19 = *(_QWORD *)(v17 - 8);
      v20 = __chkstk_darwin(v18);
      v22 = (char *)&v25[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v19 + 16))(v22, v20);
      v23 = _bridgeAnythingToObjectiveC<A>(_:)(v22, v17);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v17);
      sub_10000BEAC(v25);
    }
    else
    {
      v23 = 0;
    }
    objc_msgSend(v16, "viewController:pickCollectionWithSession:sourceView:sourceRect:", v7, a1, v23, a4, a5, a6, a7);
    swift_unknownObjectRelease(v23);
    return swift_unknownObjectRelease(v16);
  }
  return result;
}

uint64_t LibraryCellActionHandlingUICoordination<>.presentAddToGuideFlow(saveSession:sourceView:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t result;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;

  result = (*(uint64_t (**)(uint64_t, uint64_t))(a9 + 8))(a3, a9);
  if (result)
  {
    v17 = (void *)result;
    sub_1000110D4(a2, (uint64_t)v25);
    v18 = v26;
    if (v26)
    {
      v19 = sub_10000BE88(v25, v26);
      v20 = *(_QWORD *)(v18 - 8);
      v21 = __chkstk_darwin(v19);
      v23 = (char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v20 + 16))(v23, v21);
      v24 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v18);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
      sub_10000BEAC(v25);
    }
    else
    {
      v24 = 0;
    }
    objc_msgSend(v17, "viewController:pickCollectionWithSession:sourceView:sourceRect:", v9, a1, v24, a4, a5, a6, a7);
    swift_unknownObjectRelease(v24);
    return swift_unknownObjectRelease(v17);
  }
  return result;
}

void *LibraryCellActionHandlingUICoordination<>.startDirections(routeData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BCCD4(a1, a2, a3, a4, (SEL *)&selRef_viewController_startDirectionsToRouteData_);
}

void *LibraryCellActionHandlingUICoordination<>.editRoute(routeData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BCCD4(a1, a2, a3, a4, (SEL *)&selRef_viewController_editRoute_);
}

void *LibraryCellActionHandlingUICoordination<>.showOfflineRegion(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BCCD4(a1, a2, a3, a4, (SEL *)&selRef_viewController_showOfflineRegionForRouteData_);
}

void *LibraryCellActionHandlingUICoordination<>.downloadOfflineRegion(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001BCCD4(a1, a2, a3, a4, (SEL *)&selRef_viewController_downloadOfflineRegionForRouteData_);
}

void *sub_1001BCCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v5;
  void *result;
  void *v9;

  result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a2, a4);
  if (result)
  {
    v9 = result;
    objc_msgSend(result, *a5, v5, a1);
    return (void *)swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t type metadata accessor for LibraryCellActionHandler()
{
  return objc_opt_self(_TtC4Maps24LibraryCellActionHandler);
}

ValueMetadata *type metadata accessor for LibraryCellActionHandler.AnalyticsInfo()
{
  return &type metadata for LibraryCellActionHandler.AnalyticsInfo;
}

void sub_1001BCD68(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001BC5BC(a1, a2, a3, a4, a5, &OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (uint64_t)&unk_1011A96B8);
}

void sub_1001BCD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001BC838(a1, a2, a3, &OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (uint64_t)&unk_1011A9690);
}

uint64_t sub_1001BCDB0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1001BC9F8(a1, a2, &OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, a3, a4, a5, a6);
}

void *sub_1001BCDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_startDirectionsToRouteData_);
}

void *sub_1001BCDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_editRoute_);
}

void *sub_1001BCDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_showOfflineRegionForRouteData_);
}

void *sub_1001BCE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, (SEL *)&selRef_viewController_downloadOfflineRegionForRouteData_);
}

void sub_1001BCE1C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001BC5BC(a1, a2, a3, a4, a5, &OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (uint64_t)&unk_1011A9668);
}

void sub_1001BCE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001BC838(a1, a2, a3, &OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (uint64_t)&unk_1011A9640);
}

uint64_t sub_1001BCE64(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_1001BC9F8(a1, a2, &OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, a3, a4, a5, a6);
}

void *sub_1001BCE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_startDirectionsToRouteData_);
}

void *sub_1001BCE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_editRoute_);
}

void *sub_1001BCEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_showOfflineRegionForRouteData_);
}

void *sub_1001BCEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BCED0(a1, a2, a3, &OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, (SEL *)&selRef_viewController_downloadOfflineRegionForRouteData_);
}

void *sub_1001BCED0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, SEL *a5)
{
  uint64_t v5;
  uint64_t v8;
  void *result;
  void *v10;
  _BYTE v11[24];

  v8 = v5 + *a4;
  swift_beginAccess(v8, v11, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v8);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, *a5, v5, a1);
    return (void *)swift_unknownObjectRelease(v10);
  }
  return result;
}

unint64_t sub_1001BCF44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101493C30;
  if (!qword_101493C30)
  {
    v1 = objc_opt_self(UIView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_101493C30);
  }
  return result;
}

uint64_t sub_1001BCF80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BCFA4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001BCFD0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1001BC288(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1001BCFD8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t LibraryViewController.actionDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t LibraryViewController.actionDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, v7, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  result = swift_unknownObjectRelease(a1);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager);
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration)
       + OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator;
    *(_QWORD *)(v6 + 8) = &protocol witness table for LibraryViewController;
    return swift_unknownObjectWeakAssign(v6, v1);
  }
  return result;
}

void (*LibraryViewController.actionDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_1001BD228;
}

void sub_1001BD228(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    v5 = v3[4];
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager);
    if (v6)
    {
      v7 = v3[4];
      v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration)
         + OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator;
      *(_QWORD *)(v8 + 8) = &protocol witness table for LibraryViewController;
      swift_unknownObjectWeakAssign(v8, v7);
    }
  }
  free(v3);
}

id sub_1001BD2DC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView];
  }
  else
  {
    v4 = sub_1001BD33C(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1001BD33C(void *a1)
{
  id result;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  result = objc_msgSend(a1, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v11 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
    v12 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v11, v4, v6, v8, v10);

    v13 = (void *)objc_opt_self(UIColor);
    v14 = v12;
    v15 = objc_msgSend(v13, "clearColor");
    objc_msgSend(v14, "setBackgroundColor:", v15);

    v16 = objc_msgSend(v14, "layer");
    objc_msgSend(v16, "setAllowsGroupOpacity:", 0);

    objc_msgSend(v14, "_mapsui_resetLayoutMarginsWithPreservesSuperview:", 1);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall LibraryViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  NSString v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  NSString v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  Class isa;
  id v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  Class v72;
  id v73;
  objc_class *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  id v79;
  char *v80;
  char *v81;
  void *v82;
  char *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  objc_super v90;
  uint64_t v91;
  objc_super v92;
  Swift::String v93;

  v1 = v0;
  v92.receiver = v0;
  v92.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v92, "viewDidLoad");
  v2 = objc_msgSend(v0, "view");
  if (!v2)
  {
    __break(1u);
    goto LABEL_18;
  }
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setAccessibilityIdentifier:", v4);

  v5 = objc_msgSend(v1, "cardPresentationController");
  if (!v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = v5;
  objc_msgSend(v5, "setTakesAvailableHeight:", 1);

  v7 = objc_msgSend(v1, "cardPresentationController");
  if (!v7)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v8 = v7;
  objc_msgSend(v7, "setPresentedModally:", 1);

  v9 = objc_msgSend(objc_allocWithZone((Class)ContainerHeaderView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setAccessibilityIdentifier:", v10);

  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setDelegate:", v1);
  objc_msgSend(v9, "setHeaderSize:", 1);
  objc_msgSend(v9, "setHairLineAlpha:", 0.0);
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v93._countAndFlagsBits = 0xD000000000000015;
  v11._countAndFlagsBits = 0xD00000000000001CLL;
  v93._object = (void *)0x8000000100E50450;
  v11._object = (void *)0x8000000100E50430;
  v12._countAndFlagsBits = 0x7972617262694CLL;
  v12._object = (void *)0xE700000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v12, v93)._object;
  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setTitle:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

  v15 = objc_msgSend(v1, "headerView");
  if (!v15)
    goto LABEL_20;
  v16 = v15;
  objc_msgSend(v15, "addSubview:", v9);

  v17 = sub_100008B04((uint64_t *)&unk_101493B10);
  v18 = swift_allocObject(v17, 64, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100E2A2C0;
  v19 = objc_msgSend(v9, "topAnchor");
  v20 = objc_msgSend(v1, "headerView");
  if (!v20)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "topAnchor");

  v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);
  *(_QWORD *)(v18 + 32) = v23;
  v24 = objc_msgSend(v9, "leadingAnchor");
  v25 = objc_msgSend(v1, "headerView");
  if (!v25)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v26 = v25;
  v89 = v17;
  v27 = objc_msgSend(v25, "leadingAnchor");

  v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);
  *(_QWORD *)(v18 + 40) = v28;
  v29 = objc_msgSend(v9, "trailingAnchor");
  v30 = objc_msgSend(v1, "headerView");
  if (!v30)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v31 = v30;
  v32 = objc_msgSend(v30, "trailingAnchor");

  v33 = objc_msgSend(v29, "constraintEqualToAnchor:", v32);
  *(_QWORD *)(v18 + 48) = v33;
  v34 = objc_msgSend(v9, "bottomAnchor");
  v35 = objc_msgSend(v1, "headerView");
  if (!v35)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v36 = v35;
  v37 = (void *)objc_opt_self(NSLayoutConstraint);
  v38 = objc_msgSend(v36, "bottomAnchor");

  v39 = objc_msgSend(v34, "constraintEqualToAnchor:", v38);
  *(_QWORD *)(v18 + 56) = v39;
  v91 = v18;
  specialized Array._endMutation()(v40);
  sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v37, "activateConstraints:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v42 = objc_msgSend(v1, "view");
  if (!v42)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v43 = v42;
  v44 = sub_1001BD2DC();
  objc_msgSend(v43, "addSubview:", v44);

  v45 = sub_1001BD2DC();
  objc_msgSend(v45, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v46 = swift_allocObject(v89, 64, 7);
  *(_OWORD *)(v46 + 16) = xmmword_100E2A2C0;
  v47 = sub_1001BD2DC();
  v48 = objc_msgSend(v47, "topAnchor");

  v49 = objc_msgSend(v1, "headerView");
  if (!v49)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v50 = v49;
  v51 = objc_msgSend(v49, "bottomAnchor");

  v52 = objc_msgSend(v48, "constraintEqualToAnchor:", v51);
  *(_QWORD *)(v46 + 32) = v52;
  v53 = sub_1001BD2DC();
  v54 = objc_msgSend(v53, "leadingAnchor");

  v55 = objc_msgSend(v1, "view");
  if (!v55)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v56 = v55;
  v57 = objc_msgSend(v55, "leadingAnchor");

  v58 = objc_msgSend(v54, "constraintEqualToAnchor:", v57);
  *(_QWORD *)(v46 + 40) = v58;
  v59 = sub_1001BD2DC();
  v60 = objc_msgSend(v59, "trailingAnchor");

  v61 = objc_msgSend(v1, "view");
  if (!v61)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, "trailingAnchor");

  v64 = objc_msgSend(v60, "constraintEqualToAnchor:", v63);
  *(_QWORD *)(v46 + 48) = v64;
  v65 = sub_1001BD2DC();
  v66 = objc_msgSend(v65, "bottomAnchor");

  v67 = objc_msgSend(v1, "view");
  if (v67)
  {
    v68 = v67;
    v69 = objc_msgSend(v67, "bottomAnchor");

    v70 = objc_msgSend(v66, "constraintEqualToAnchor:", v69);
    *(_QWORD *)(v46 + 56) = v70;
    v91 = v46;
    specialized Array._endMutation()(v71);
    v72 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "activateConstraints:", v72, swift_bridgeObjectRelease(v46).n128_f64[0]);

    v73 = sub_1001BD2DC();
    v74 = (objc_class *)type metadata accessor for LibraryHomeCollectionViewManagerConfiguration();
    v75 = (char *)objc_allocWithZone(v74);
    v76 = &v75[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
    *((_QWORD *)v76 + 1) = 0;
    swift_unknownObjectWeakInit(v76);
    *(_QWORD *)&v75[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_collectionView] = v73;
    v90.receiver = v75;
    v90.super_class = v74;
    v77 = (char *)objc_msgSendSuper2(&v90, "init");
    v78 = &v77[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
    *((_QWORD *)v78 + 1) = &protocol witness table for LibraryViewController;
    swift_unknownObjectWeakAssign(v78, v1);
    v79 = objc_allocWithZone((Class)type metadata accessor for LibraryHomeCollectionViewManager());
    v80 = v77;
    v81 = sub_1001D5078(v80);
    v82 = *(void **)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager];
    *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager] = v81;
    v83 = v81;

    v84 = sub_1001BD2DC();
    v85 = sub_1001D4470();
    objc_msgSend(v84, "setDataSource:", v85);

    v86 = sub_1001BD2DC();
    objc_msgSend(v86, "setDelegate:", v1);

    v87 = sub_1001BD2DC();
    v88 = sub_1001D4500();
    objc_msgSend(v87, "setCollectionViewLayout:", v88);

    objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", 21, 137, 0);
    return;
  }
LABEL_29:
  __break(1u);
}

id LibraryViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  objc_class *ObjectType;
  NSString v7;
  id v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType(v3);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager] = 0;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v10, "initWithNibName:bundle:", v7, a3);

  return v8;
}

id LibraryViewController.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController____lazy_storage___collectionView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id LibraryViewController.headerViewButtonTapped(_:buttonType:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, "handleDismissAction:", a1);
}

void LibraryViewController.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  void *v31;
  char *v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  __n128 v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char *v51;
  void *v52;
  __int128 v53[2];
  uint64_t v54[5];

  v49 = a1;
  v4 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v51 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101490E98 != -1)
    swift_once(&qword_101490E98, sub_100114760);
  v11 = type metadata accessor for Logger(0);
  sub_10000E918(v11, (uint64_t)qword_1014D4AD8);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v50 = a2;
  v12(v10, a2, v7);
  v13 = v2;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v47 = v5;
    v17 = v16;
    v46 = swift_slowAlloc(64, -1);
    v54[0] = v46;
    *(_DWORD *)v17 = 136315394;
    ObjectType = swift_getObjectType();
    v19 = _typeName(_:qualified:)(ObjectType, 0);
    v20 = v13;
    v22 = v21;
    *(_QWORD *)&v53[0] = sub_1000C28FC(v19, v21, v54);
    v48 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v53, (char *)v53 + 8, v17 + 4, v17 + 12);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v17 + 12) = 2080;
    v23 = sub_1001BEED0();
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v7, v23);
    v26 = v25;
    *(_QWORD *)&v53[0] = sub_1000C28FC(v24, v25, v54);
    v4 = v48;
    v13 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v53, (char *)v53 + 8, v17 + 14, v17 + 22);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v27);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s did select item at index path: %s", (uint8_t *)v17, 0x16u);
    v28 = v46;
    swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    v29 = v17;
    v5 = v47;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v49, "deselectItemAtIndexPath:animated:", isa, 1);

  v31 = *(void **)&v13[OBJC_IVAR____TtC4Maps21LibraryViewController_collectionViewManager];
  v32 = v51;
  if (v31)
  {
    v33 = v31;
    v34 = sub_1001D4470();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v34);

    v35 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v4);
    v36 = IndexPath.section.getter(v35);
    if ((v36 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v36 < *(_QWORD *)(v35 + 16))
    {
      v37 = *(unsigned __int8 *)(v35 + v36 + 32);
      v38 = swift_bridgeObjectRelease(v35);
      LOBYTE(v54[0]) = v37;
      v39 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v54, v4, v38);
      v40 = IndexPath.item.getter();
      if ((v40 & 0x8000000000000000) == 0)
      {
        if (v40 < *(_QWORD *)(v39 + 16))
        {
          sub_1001BEE88(v39 + 40 * v40 + 32, (uint64_t)v53);
          swift_bridgeObjectRelease(v39);
          sub_10000BE48(v53, (uint64_t)v54);
          if (v37)
          {
            if (v37 == 1)
            {
              sub_100084C44((uint64_t)v54, (uint64_t)v53);
              v41 = sub_100008B04(&qword_10149F308);
              v42 = type metadata accessor for LibraryListSavedItemCellModel();
              if (swift_dynamicCast(&v52, v53, v41, v42, 6))
              {
                v43 = v52;
                sub_1001BE760((uint64_t)v52);

              }
            }
          }
          else
          {
            sub_100084C44((uint64_t)v54, (uint64_t)v53);
            v44 = sub_100008B04(&qword_10149F308);
            if (swift_dynamicCast(&v52, v53, v44, &type metadata for LibraryListSavedItemsManagementSectionCellModel, 6))sub_1001BE5B4((char)v52);
          }

          sub_10000BEAC(v54);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v4);
          return;
        }
LABEL_22:
        __break(1u);
        return;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_21;
  }
}

void sub_1001BE5B4(char a1)
{
  __asm { BR              X10 }
}

void *sub_1001BE5E4()
{
  uint64_t v0;
  uint64_t v1;
  void *result;
  void *v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, &v4, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    objc_msgSend(result, "viewControllerShowMyShortcuts:", v0);
    return (void *)swift_unknownObjectRelease(v3);
  }
  return result;
}

void sub_1001BE760(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  id v32;
  id v33;
  _BYTE v34[24];

  v2 = *(void **)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item);
  if (!*(_BYTE *)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16))
  {
    v10 = v2;
    v11 = objc_msgSend(objc_allocWithZone((Class)SearchResult), "initWithMapItem:", v10);
    v12 = v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
    swift_beginAccess(v12, v34, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v12);
    if (Strong)
    {
      v14 = Strong;
      v15 = objc_msgSend(Strong, "mapSelectionManager");
      swift_unknownObjectRelease(v14);
      objc_msgSend(v15, "injectAndSelectSearchResult:", v11);

    }
    v16 = (void *)objc_opt_self(MKMapService);
    v17 = objc_msgSend(v16, "sharedService");
    if (v17)
    {
      v18 = v17;
      v32 = objc_msgSend(v10, "_muid");
      dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v20 = v19;
      v21 = String._bridgeToObjectiveC()();
      objc_msgSend(v18, "captureUserAction:onTarget:eventValue:", 478, 137, v21, swift_bridgeObjectRelease(v20).n128_f64[0], v32);

      v22 = objc_msgSend(v16, "sharedService");
      if (v22)
      {
        v23 = v22;
        objc_msgSend(v22, "captureUserAction:onTarget:eventValue:", 2007, 0, 0);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 8);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16) != 1)
  {
    v24 = v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, v34, 0, 0);
    v25 = (void *)swift_unknownObjectWeakLoadStrong(v24);
    v26 = v2;
    if (v25)
    {
      objc_msgSend(v25, "viewController:enterRouteCreationWith:", v1, v26);
      swift_unknownObjectRelease(v25);
    }
    v27 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
    if (v27)
    {
      v28 = v27;
      v33 = objc_msgSend(v26, "tourMuid");
      dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v30 = v29;
      v31 = String._bridgeToObjectiveC()();
      objc_msgSend(v28, "captureUserAction:onTarget:eventValue:", 480, 137, v31, swift_bridgeObjectRelease(v30).n128_f64[0], v33);

      v7 = v2;
      v8 = v3;
      v9 = 2;
      goto LABEL_14;
    }
LABEL_18:
    __break(1u);
    return;
  }
  v4 = v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, v34, 0, 0);
  v5 = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (!v5)
    return;
  v6 = v5;
  objc_msgSend(v5, "viewController:showCollection:", v1, v2);
  swift_unknownObjectRelease(v6);
  v7 = v2;
  v8 = v3;
  v9 = 1;
LABEL_14:
  sub_1001BEF7C(v7, v8, v9);
}

void sub_1001BEB3C(Class isa, Class a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];

  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = Strong + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate;
    swift_beginAccess(Strong + OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate, &v14, 0, 0);
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v9);

    if (v10)
    {
      if (isa)
      {
        v12 = sub_10012D8D0((uint64_t)isa);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
      }
      if (a2)
      {
        v13 = sub_10012D8D0((uint64_t)a2);
        a2 = Array._bridgeToObjectiveC()().super.isa;
        v11 = swift_bridgeObjectRelease(v13).n128_u64[0];
      }
      objc_msgSend(v10, "presentRouteLibraryWithAvailableRoutes:unavailableRoutes:", isa, a2, *(double *)&v11);

      swift_unknownObjectRelease(v10);
    }
  }
}

double sub_1001BEC48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, void *);
  uint64_t v8;
  uint64_t v9;
  id v10;
  double result;

  v6 = a2;
  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v8 = sub_10000E4BC(0, (unint64_t *)&unk_10149F3A0, GEOComposedGeometryRoutePersistentData_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v8);
  }
  if (a3)
  {
    v9 = sub_10000E4BC(0, (unint64_t *)&unk_10149F3A0, GEOComposedGeometryRoutePersistentData_ptr);
    a3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  }
  swift_retain();
  v10 = a4;
  v7(v6, a3, a4);
  swift_release();

  swift_bridgeObjectRelease(a3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_1001BEE04(char *a1, uint64_t a2, SEL *a3)
{
  char *v5;
  uint64_t result;
  void *v7;
  char *v8;
  char v9[24];

  v5 = &a1[OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate];
  swift_beginAccess(&a1[OBJC_IVAR____TtC4Maps21LibraryViewController_actionDelegate], v9, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v5);
  if (result)
  {
    v7 = (void *)result;
    v8 = a1;
    objc_msgSend(v7, *a3, v8);

    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_1001BEE88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_10149BB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001BEED0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149F310;
  if (!qword_10149F310)
  {
    v1 = type metadata accessor for IndexPath(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_10149F310);
  }
  return result;
}

uint64_t type metadata accessor for LibraryViewController()
{
  return objc_opt_self(_TtC4Maps21LibraryViewController);
}

uint64_t sub_1001BEF38()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001BEF5C(objc_class *a1, objc_class *a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001BEB3C(a1, a2, a3, v3);
}

double sub_1001BEF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001BEF74(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001BEF7C(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {

  }
  else if (!a3)
  {

    swift_unknownObjectRelease(a2);
  }
}

uint64_t sub_1001BEFC8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1000DF680(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_1001C1A9C(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

_QWORD *sub_1001BF040()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __n128 v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = v0;
  v2 = *v0;
  v3 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = _swiftEmptyArrayStorage;
  v0[4] = 0;
  swift_unknownObjectWeakInit(v0 + 3);
  v6 = sub_10000B4B8();
  v7 = swift_allocObject(v6, ((*(unsigned int *)(v6 + 48) + 7) & 0x1FFFFFFF8) + 48, *(unsigned __int16 *)(v6 + 52) | 7);
  *(_OWORD *)(v7 + 16) = xmmword_100E22F60;
  *(_QWORD *)(v7 + 32) = type metadata accessor for FavoriteItem(0, v8);
  *(_QWORD *)(v7 + 40) = type metadata accessor for CollectionPlaceItem(0);
  *(_QWORD *)(v7 + 48) = type metadata accessor for Collection(0);
  *(_QWORD *)(v7 + 56) = type metadata accessor for CachedCuratedCollection(0);
  *(_QWORD *)(v7 + 64) = type metadata accessor for UserRoute(0);
  *(_QWORD *)(v7 + 72) = type metadata accessor for CuratedCollection(0);
  v1[5] = v7;
  type metadata accessor for MapsSyncStore(0);
  v9 = (void *)static MapsSyncStore.sharedStore.getter();
  v10 = swift_retain();
  dispatch thunk of MapsSyncStore.subscribe(_:)(v10);

  swift_release();
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject(&unk_1011A9898, 48, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v1;
  v12[5] = v2;
  swift_retain();
  sub_1001B0C08((uint64_t)v5, (uint64_t)&unk_10149F480, (uint64_t)v12);
  swift_release();
  return v1;
}

Swift::Void __swiftcall LibraryRecentsDataProvider.storeDidChange(types:)(Swift::OpaquePointer types)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = *v1;
  v3 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (_QWORD *)swift_allocObject(&unk_1011A9848, 48, 7);
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v7[5] = v2;
  swift_retain();
  sub_1001B0C08((uint64_t)v5, (uint64_t)&unk_10149F3B8, (uint64_t)v7);
  swift_release();
}

uint64_t LibraryRecentsDataProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0;
  v2 = type metadata accessor for MapsSyncStore(0);
  v3 = (void *)static MapsSyncStore.sharedStore.getter(v2);
  dispatch thunk of MapsSyncStore.unsubscribe(_:)(v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  sub_100017510(v1 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 40));
  return v1;
}

uint64_t LibraryRecentsDataProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = v0;
  v2 = type metadata accessor for MapsSyncStore(0);
  v3 = (void *)static MapsSyncStore.sharedStore.getter(v2);
  dispatch thunk of MapsSyncStore.unsubscribe(_:)(v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 16));
  sub_100017510(v1 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 40));
  return swift_deallocClassInstance(v1, 48, 7);
}

uint64_t sub_1001BF34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 32) = a4;
  v5 = sub_100008B04((uint64_t *)&unk_10149E140);
  *(_QWORD *)(v4 + 40) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001BF3A8, 0, 0);
}

uint64_t sub_1001BF3A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  uint64_t v13;
  objc_class *Options;
  id v15;
  void *v16;
  __n128 v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t (*v22)(void *);

  v0[6] = type metadata accessor for MapsSyncQueryPredicate(0);
  v1 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v0[7] = v1;
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v2 + 56) = &type metadata for Int16;
  *(_QWORD *)(v2 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v2 + 32) = 6;
  v3 = static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000032, 0x8000000100E4F890, v2);
  swift_bridgeObjectRelease(v2);
  v4 = sub_100008B04((uint64_t *)&unk_101493B10);
  v0[8] = v4;
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100E23F50;
  v6 = objc_allocWithZone((Class)NSSortDescriptor);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 0);

  *(_QWORD *)(v5 + 32) = v8;
  specialized Array._endMutation()(v9);
  v10 = v5;
  v11 = (objc_class *)type metadata accessor for MapsSyncRange(0);
  v0[9] = v11;
  v12 = objc_allocWithZone(v11);
  v13 = MapsSyncRange.init(offset:limit:)(0, 15);
  Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
  v0[10] = Options;
  v15 = objc_allocWithZone(Options);
  v16 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v3, v10, v13);
  v0[11] = v16;
  type metadata accessor for CollectionPlaceItemRequest(0, v17);
  v0[12] = CollectionPlaceItemRequest.__allocating_init()();
  v18 = *((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:) + 1);
  v22 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  v19 = v16;
  v20 = (_QWORD *)swift_task_alloc(v18);
  v0[13] = v20;
  *v20 = v0;
  v20[1] = sub_1001BF59C;
  return v22(v16);
}

uint64_t sub_1001BF59C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 104);
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001C0E74;
  }
  else
  {
    v6 = *(void **)(v3 + 96);

    v5 = sub_1001BF614;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001BF614()
{
  _QWORD *v0;
  objc_class *v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t (*v19)(void *);

  v2 = (objc_class *)v0[9];
  v1 = (objc_class *)v0[10];
  v3 = v0[8];
  v4 = static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
  v5 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100E23F50;
  v6 = objc_allocWithZone((Class)NSSortDescriptor);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 0);

  *(_QWORD *)(v5 + 32) = v8;
  specialized Array._endMutation()(v9);
  v10 = v5;
  v11 = objc_allocWithZone(v2);
  v12 = MapsSyncRange.init(offset:limit:)(0, 15);
  v13 = objc_allocWithZone(v1);
  v14 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v4, v10, v12);
  v0[16] = v14;
  type metadata accessor for FavoriteItemRequest(0);
  v0[17] = FavoriteItemRequest.__allocating_init()();
  v15 = *((unsigned int *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:) + 1);
  v19 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
  v16 = v14;
  v17 = (_QWORD *)swift_task_alloc(v15);
  v0[18] = v17;
  *v17 = v0;
  v17[1] = sub_1001BF788;
  return v19(v14);
}

uint64_t sub_1001BF788(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 144);
  *(_QWORD *)(v3 + 152) = a1;
  *(_QWORD *)(v3 + 160) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001C1050;
  }
  else
  {
    v6 = *(void **)(v3 + 136);

    v5 = sub_1001BF800;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_1001BF800()
{
  _QWORD *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  objc_class *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  void (*v23)(void *);

  v1 = (objc_class *)v0[9];
  v2 = v0[7];
  v3 = swift_allocObject(v0[8], 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = objc_allocWithZone((Class)NSSortDescriptor);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "initWithKey:ascending:", v5, 0);

  *(_QWORD *)(v3 + 32) = v6;
  specialized Array._endMutation()(v7);
  v8 = v3;
  v0[21] = v3;
  v9 = objc_allocWithZone(v1);
  v10 = (void *)MapsSyncRange.init(offset:limit:)(0, 15);
  v0[22] = v10;
  v11 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100E22F40;
  v12 = objc_allocWithZone((Class)NSUUID);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithUUIDString:", v13);

  if (v14)
  {
    v15 = (objc_class *)v0[10];
    *(_QWORD *)(v11 + 56) = sub_10000E4BC(0, &qword_10149F0C8, NSUUID_ptr);
    *(_QWORD *)(v11 + 64) = sub_1001BA488();
    *(_QWORD *)(v11 + 32) = v14;
    v16 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000010, 0x8000000100E505E0, v11);
    v0[23] = v16;
    swift_bridgeObjectRelease(v11);
    objc_allocWithZone(v15);
    v17 = v16;
    swift_bridgeObjectRetain(v8);
    v18 = v10;
    v19 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v16, v8, v10);
    v0[24] = v19;
    type metadata accessor for CollectionRequest(0);
    v0[25] = CollectionRequest.__allocating_init()();
    v20 = *((unsigned int *)&async function pointer to dispatch thunk of CollectionRequest.fetch(options:) + 1);
    v23 = (void (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionRequest.fetch(options:)
                                      + async function pointer to dispatch thunk of CollectionRequest.fetch(options:));
    v21 = v19;
    v22 = (_QWORD *)swift_task_alloc(v20);
    v0[26] = v22;
    *v22 = v0;
    v22[1] = sub_1001BFA50;
    v23(v19);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001BFA50(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 208);
  *(_QWORD *)(v3 + 216) = a1;
  *(_QWORD *)(v3 + 224) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001C123C;
  }
  else
  {
    v6 = *(void **)(v3 + 200);

    v5 = sub_1001BFAC8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001BFAC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  v3 = objc_allocWithZone(*(Class *)(v0 + 80));
  v4 = v2;
  v5 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(0, v1, v2);
  *(_QWORD *)(v0 + 232) = v5;
  type metadata accessor for CuratedCollectionRequest(0);
  *(_QWORD *)(v0 + 240) = CuratedCollectionRequest.__allocating_init()();
  v6 = unk_10149F47C;
  v10 = (uint64_t (*)(uint64_t))((char *)&dword_10149F478 + dword_10149F478);
  v7 = v5;
  v8 = (_QWORD *)swift_task_alloc(v6);
  *(_QWORD *)(v0 + 248) = v8;
  *v8 = v0;
  v8[1] = sub_1001BFB78;
  return v10((uint64_t)v5);
}

uint64_t sub_1001BFB78(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 248);
  *(_QWORD *)(v3 + 256) = a1;
  *(_QWORD *)(v3 + 264) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001C03DC;
  }
  else
  {
    v6 = *(void **)(v3 + 240);

    v5 = sub_1001BFBF0;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001BFBF0(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  objc_class *v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t i;
  id v54;
  __n128 v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  Swift::Int v78;
  Swift::Int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(void *);
  uint64_t v103[2];

  if ((MapsFeature_IsEnabled_HikingiOS(a1) & 1) != 0)
  {
    v3 = (void *)v1[22];
    v4 = (objc_class *)v1[10];
    v5 = swift_allocObject(v1[8], 40, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100E23F50;
    v6 = objc_allocWithZone((Class)NSSortDescriptor);
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "initWithKey:ascending:", v7, 0);

    *(_QWORD *)(v5 + 32) = v8;
    v103[0] = v5;
    specialized Array._endMutation()(v9);
    v10 = objc_allocWithZone(v4);
    v11 = v3;
    v12 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(0, v5, v3);
    v1[34] = v12;
    type metadata accessor for UserRouteRequest(0);
    v1[35] = UserRouteRequest.__allocating_init()();
    v13 = *((unsigned int *)&async function pointer to dispatch thunk of UserRouteRequest.fetch(options:) + 1);
    v102 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of UserRouteRequest.fetch(options:)
                                          + async function pointer to dispatch thunk of UserRouteRequest.fetch(options:));
    v14 = v12;
    v15 = (_QWORD *)swift_task_alloc(v13);
    v1[36] = v15;
    *v15 = v1;
    v15[1] = sub_1001C05FC;
    return v102(v12);
  }
  v17 = v1[33];
  v18 = v1[14];
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v65 = v1[14];
    else
      v65 = v18 & 0xFFFFFFFFFFFFFF8;
    v66 = type metadata accessor for MapsSyncObject(0, v2);
    swift_bridgeObjectRetain(v18);
    v22 = _bridgeCocoaArray<A>(_:)(v65, v66);
    swift_bridgeObjectRelease(v18);
    v21 = v1[14];
  }
  else
  {
    swift_bridgeObjectRetain(v1[14]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
    type metadata accessor for MapsSyncObject(0, v20);
    v21 = v1[14];
    v22 = v21;
  }
  v23 = v1[19];
  swift_bridgeObjectRelease(v21);
  v25 = v1[19];
  if (v23 >> 62)
  {
    if (v25 < 0)
      v67 = v1[19];
    else
      v67 = v23 & 0xFFFFFFFFFFFFFF8;
    v68 = type metadata accessor for MapsSyncObject(0, v24);
    swift_bridgeObjectRetain(v25);
    v29 = _bridgeCocoaArray<A>(_:)(v67, v68);
    swift_bridgeObjectRelease(v25);
    v28 = v1[19];
  }
  else
  {
    swift_bridgeObjectRetain(v1[19]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v26);
    type metadata accessor for MapsSyncObject(0, v27);
    v28 = v1[19];
    v29 = v28;
  }
  v30 = v1[27];
  swift_bridgeObjectRelease(v28);
  v103[0] = v22;
  sub_1001207D4(v29);
  v32 = v22;
  v33 = v1[27];
  if (v30 >> 62)
  {
    if (v33 < 0)
      v69 = v1[27];
    else
      v69 = v30 & 0xFFFFFFFFFFFFFF8;
    v70 = type metadata accessor for MapsSyncObject(0, v31);
    swift_bridgeObjectRetain(v33);
    v37 = _bridgeCocoaArray<A>(_:)(v69, v70);
    swift_bridgeObjectRelease(v33);
    v36 = v1[27];
  }
  else
  {
    swift_bridgeObjectRetain(v1[27]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v34);
    type metadata accessor for MapsSyncObject(0, v35);
    v36 = v1[27];
    v37 = v36;
  }
  v38 = v1[32];
  swift_bridgeObjectRelease(v36);
  v103[0] = v32;
  sub_1001207D4(v37);
  v40 = v1[32];
  if (v38 >> 62)
  {
    if (v40 < 0)
      v71 = v1[32];
    else
      v71 = v38 & 0xFFFFFFFFFFFFFF8;
    v72 = type metadata accessor for MapsSyncObject(0, v39);
    swift_bridgeObjectRetain(v40);
    v44 = _bridgeCocoaArray<A>(_:)(v71, v72);
    swift_bridgeObjectRelease(v40);
    v43 = v1[32];
  }
  else
  {
    swift_bridgeObjectRetain(v1[32]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v41);
    type metadata accessor for MapsSyncObject(0, v42);
    v43 = v1[32];
    v44 = v43;
  }
  swift_bridgeObjectRelease(v43);
  sub_1001207D4(v44);
  v46 = v32;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v73 = _swiftEmptyArrayStorage;
    else
      v73 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v74 = type metadata accessor for MapsSyncObject(0, v45);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v49 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v73, v74);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v47);
    type metadata accessor for MapsSyncObject(0, v48);
    v49 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v103[0] = v32;
  v50 = (uint64_t)v103;
  sub_1001207D4((uint64_t)v49);
  v51 = v103[0];
  v103[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v51 >> 62)
  {
    if (v51 < 0)
      v50 = v51;
    else
      v50 = v51 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v51);
    v52 = _CocoaArrayWrapper.endIndex.getter(v50);
    if (v52)
      goto LABEL_15;
LABEL_51:
    swift_bridgeObjectRelease(v51);
    v64 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_52;
  }
  v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v51);
  if (!v52)
    goto LABEL_51;
LABEL_15:
  if (v52 < 1)
  {
    __break(1u);
    goto LABEL_82;
  }
  for (i = 0; i != v52; ++i)
  {
    if ((v51 & 0xC000000000000001) != 0)
      v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v51);
    else
      v54 = *(id *)(v51 + 8 * i + 32);
    v56 = v54;
    v57 = v1[5];
    dispatch thunk of MapsSyncObject.createTime.getter(v55);
    v58 = type metadata accessor for Date(0);
    v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v57, 1, v58);
    v60 = sub_10019CB2C(v57);
    if (v59 == 1)
    {

    }
    else
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v60);
      v62 = *(_QWORD *)((v103[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v61 = *(_QWORD *)((v103[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v62 >= v61 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
      v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v56);
      specialized Array._endMutation()(v63);
    }
  }
  swift_bridgeObjectRelease(v51);
  v64 = v103[0];
LABEL_52:
  swift_bridgeObjectRelease(v51);
  if (v64 < 0 || (v64 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v64);
    v75 = (uint64_t)sub_1000D8D8C(v96);
    swift_bridgeObjectRelease(v64);
  }
  else
  {
    v75 = v64 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v64);
  }
  v103[0] = v75;
  sub_1001BEFC8(v103);
  v1[39] = v17;
  if (v17)
    return swift_release();
  swift_bridgeObjectRelease(v64);
  v50 = v103[0];
  v46 = v103[0] < 0 || (v103[0] & 0x4000000000000000) != 0;
  if (!v46)
  {
    if (*(uint64_t *)(v103[0] + 16) >= 15)
      v77 = 15;
    else
      v77 = *(_QWORD *)(v103[0] + 16);
    goto LABEL_64;
  }
LABEL_82:
  swift_bridgeObjectRetain(v50);
  v98 = _CocoaArrayWrapper.endIndex.getter(v97);
  swift_release();
  swift_bridgeObjectRetain(v50);
  v82 = _CocoaArrayWrapper.endIndex.getter(v99);
  result = swift_release();
  if ((v82 & 0x8000000000000000) == 0)
  {
    if (v98 >= 15)
      v100 = 15;
    else
      v100 = v98;
    if (v98 >= 0)
      v77 = v100;
    else
      v77 = 15;
    swift_bridgeObjectRetain(v50);
    v84 = _CocoaArrayWrapper.endIndex.getter(v101);
    v91 = swift_release();
    if (v84 < (uint64_t)v77)
    {
      __break(1u);
      goto LABEL_91;
    }
LABEL_64:
    if ((v50 & 0xC000000000000001) != 0 && v77)
    {
      type metadata accessor for MapsSyncObject(0, v76);
      v78 = 0;
      do
      {
        v79 = v78 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v78);
        v78 = v79;
      }
      while (v77 != v79);
    }
    if (v46)
    {
      swift_bridgeObjectRetain(v50);
      v80 = _CocoaArrayWrapper.subscript.getter(0, v77, v50);
      v82 = v81;
      v84 = v83;
      v77 = v85;
      swift_release_n(v50, 2);
      v50 = v80;
      if ((v77 & 1) != 0)
      {
LABEL_73:
        v87 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v88 = swift_unknownObjectRetain_n(v50, 2);
        v89 = (_QWORD *)swift_dynamicCastClass(v88, v87);
        if (!v89)
        {
          swift_unknownObjectRelease(v50);
          v89 = _swiftEmptyArrayStorage;
        }
        v90 = v89[2];
        v91 = swift_release();
        if (!__OFSUB__(v77 >> 1, v84))
        {
          v91 = v50;
          if (v90 == (v77 >> 1) - v84)
          {
            v86 = (_QWORD *)swift_dynamicCastClass(v50, v87);
            if (!v86)
            {
              swift_unknownObjectRelease(v50);
              v86 = _swiftEmptyArrayStorage;
            }
            goto LABEL_79;
          }
          goto LABEL_92;
        }
LABEL_91:
        __break(1u);
LABEL_92:
        swift_unknownObjectRelease(v91);
      }
    }
    else
    {
      v84 = 0;
      v82 = v50 + 32;
      v77 = (2 * v77) | 1;
      if ((v77 & 1) != 0)
        goto LABEL_73;
    }
    v86 = sub_1000D8BF4(v50, v82, v84, v77);
LABEL_79:
    v1[40] = v86;
    v92 = v1[4];
    swift_unknownObjectRelease(v50);
    swift_weakInit(v1 + 3, v92);
    v93 = type metadata accessor for MainActor(0);
    v1[41] = static MainActor.shared.getter(v93);
    v94 = dispatch thunk of Actor.unownedExecutor.getter(v93, &protocol witness table for MainActor);
    return swift_task_switch(sub_1001C0DA0, v94, v95);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C03DC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(void **)(v0 + 184);
  v1 = *(void **)(v0 + 192);
  v3 = *(void **)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(void **)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(void **)(v0 + 88);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));

  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);

  v8 = *(_QWORD *)(v0 + 264);
  v10 = *(void **)(v0 + 232);
  v9 = *(void **)(v0 + 240);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v11 = type metadata accessor for Logger(0);
  sub_10000E918(v11, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v8);
  v12 = swift_errorRetain(v8);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 138412290;
    swift_errorRetain(v8);
    v17 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v0 + 16) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v15 + 4, v15 + 12);
    *v16 = v17;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Library Home: Error Fetching Recets: %@", v15, 0xCu);
    v18 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v16, 1, v18);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C05FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 288);
  *(_QWORD *)(*(_QWORD *)v2 + 296) = v1;
  swift_task_dealloc(v5);
  v6 = (void *)v4[34];
  v7 = (void *)v4[35];
  if (v1)
  {
    v8 = v4[32];
    v9 = v4[27];
    v10 = v4[19];
    v11 = v4[14];

    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    v12 = sub_1001C1458;
  }
  else
  {

    v4[38] = a1;
    v12 = sub_1001C06BC;
  }
  return swift_task_switch(v12, 0, 0);
}

uint64_t sub_1001C06BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t i;
  id v42;
  __n128 v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  unint64_t v66;
  Swift::Int v67;
  Swift::Int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[2];

  v2 = v0[37];
  v1 = v0[38];
  v3 = (void *)v0[34];
  swift_retain();
  v4 = (uint64_t)sub_1001C2B08(v1);
  swift_release();
  swift_bridgeObjectRelease(v1);

  v6 = v0[14];
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v53 = v0[14];
    else
      v53 = v6 & 0xFFFFFFFFFFFFFF8;
    v54 = type metadata accessor for MapsSyncObject(0, v5);
    swift_bridgeObjectRetain(v6);
    v10 = _bridgeCocoaArray<A>(_:)(v53, v54);
    swift_bridgeObjectRelease(v6);
    v9 = v0[14];
  }
  else
  {
    swift_bridgeObjectRetain(v0[14]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v7);
    type metadata accessor for MapsSyncObject(0, v8);
    v9 = v0[14];
    v10 = v9;
  }
  v11 = v0[19];
  swift_bridgeObjectRelease(v9);
  v13 = v0[19];
  if (v11 >> 62)
  {
    if (v13 < 0)
      v55 = v0[19];
    else
      v55 = v11 & 0xFFFFFFFFFFFFFF8;
    v56 = type metadata accessor for MapsSyncObject(0, v12);
    swift_bridgeObjectRetain(v13);
    v17 = _bridgeCocoaArray<A>(_:)(v55, v56);
    swift_bridgeObjectRelease(v13);
    v16 = v0[19];
  }
  else
  {
    swift_bridgeObjectRetain(v0[19]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v14);
    type metadata accessor for MapsSyncObject(0, v15);
    v16 = v0[19];
    v17 = v16;
  }
  v18 = v0[27];
  swift_bridgeObjectRelease(v16);
  v91[0] = v10;
  sub_1001207D4(v17);
  v20 = v10;
  v21 = v0[27];
  if (v18 >> 62)
  {
    if (v21 < 0)
      v57 = v0[27];
    else
      v57 = v18 & 0xFFFFFFFFFFFFFF8;
    v58 = type metadata accessor for MapsSyncObject(0, v19);
    swift_bridgeObjectRetain(v21);
    v25 = _bridgeCocoaArray<A>(_:)(v57, v58);
    swift_bridgeObjectRelease(v21);
    v24 = v0[27];
  }
  else
  {
    swift_bridgeObjectRetain(v0[27]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v22);
    type metadata accessor for MapsSyncObject(0, v23);
    v24 = v0[27];
    v25 = v24;
  }
  v26 = v0[32];
  swift_bridgeObjectRelease(v24);
  v91[0] = v20;
  sub_1001207D4(v25);
  v28 = v0[32];
  if (v26 >> 62)
  {
    if (v28 < 0)
      v59 = v0[32];
    else
      v59 = v26 & 0xFFFFFFFFFFFFFF8;
    v60 = type metadata accessor for MapsSyncObject(0, v27);
    swift_bridgeObjectRetain(v28);
    v32 = _bridgeCocoaArray<A>(_:)(v59, v60);
    swift_bridgeObjectRelease(v28);
    v31 = v0[32];
  }
  else
  {
    swift_bridgeObjectRetain(v0[32]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v29);
    type metadata accessor for MapsSyncObject(0, v30);
    v31 = v0[32];
    v32 = v31;
  }
  swift_bridgeObjectRelease(v31);
  sub_1001207D4(v32);
  v34 = v20;
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v61 = v4;
    else
      v61 = v4 & 0xFFFFFFFFFFFFFF8;
    v62 = type metadata accessor for MapsSyncObject(0, v33);
    swift_bridgeObjectRetain(v4);
    v37 = _bridgeCocoaArray<A>(_:)(v61, v62);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    swift_bridgeObjectRetain(v4);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v35);
    type metadata accessor for MapsSyncObject(0, v36);
    v37 = v4;
  }
  swift_bridgeObjectRelease(v4);
  v91[0] = v20;
  v38 = (uint64_t)v91;
  sub_1001207D4(v37);
  v39 = v91[0];
  v91[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v39 >> 62)
  {
    if (v39 < 0)
      v38 = v39;
    else
      v38 = v39 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v39);
    v40 = _CocoaArrayWrapper.endIndex.getter(v38);
    if (v40)
      goto LABEL_13;
LABEL_49:
    swift_bridgeObjectRelease(v39);
    v52 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_50;
  }
  v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v39);
  if (!v40)
    goto LABEL_49;
LABEL_13:
  if (v40 < 1)
  {
    __break(1u);
    goto LABEL_80;
  }
  for (i = 0; i != v40; ++i)
  {
    if ((v39 & 0xC000000000000001) != 0)
      v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v39);
    else
      v42 = *(id *)(v39 + 8 * i + 32);
    v44 = v42;
    v45 = v0[5];
    dispatch thunk of MapsSyncObject.createTime.getter(v43);
    v46 = type metadata accessor for Date(0);
    v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46);
    v48 = sub_10019CB2C(v45);
    if (v47 == 1)
    {

    }
    else
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v48);
      v50 = *(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      v49 = *(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v50 >= v49 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v49 > 1, v50 + 1, 1);
      v51 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v50, v44);
      specialized Array._endMutation()(v51);
    }
  }
  swift_bridgeObjectRelease(v39);
  v52 = v91[0];
LABEL_50:
  swift_bridgeObjectRelease(v39);
  if (v52 < 0 || (v52 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v52);
    v63 = (uint64_t)sub_1000D8D8C(v85);
    swift_bridgeObjectRelease(v52);
  }
  else
  {
    v63 = v52 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v52);
  }
  v91[0] = v63;
  sub_1001BEFC8(v91);
  v0[39] = v2;
  if (v2)
    return swift_release();
  swift_bridgeObjectRelease(v52);
  v38 = v91[0];
  v34 = v91[0] < 0 || (v91[0] & 0x4000000000000000) != 0;
  if (!v34)
  {
    if (*(uint64_t *)(v91[0] + 16) >= 15)
      v66 = 15;
    else
      v66 = *(_QWORD *)(v91[0] + 16);
    goto LABEL_62;
  }
LABEL_80:
  swift_bridgeObjectRetain(v38);
  v87 = _CocoaArrayWrapper.endIndex.getter(v86);
  swift_release();
  swift_bridgeObjectRetain(v38);
  v71 = _CocoaArrayWrapper.endIndex.getter(v88);
  result = swift_release();
  if ((v71 & 0x8000000000000000) == 0)
  {
    if (v87 >= 15)
      v89 = 15;
    else
      v89 = v87;
    if (v87 >= 0)
      v66 = v89;
    else
      v66 = 15;
    swift_bridgeObjectRetain(v38);
    v73 = _CocoaArrayWrapper.endIndex.getter(v90);
    v80 = swift_release();
    if (v73 < (uint64_t)v66)
    {
      __break(1u);
      goto LABEL_89;
    }
LABEL_62:
    if ((v38 & 0xC000000000000001) != 0 && v66)
    {
      type metadata accessor for MapsSyncObject(0, v65);
      v67 = 0;
      do
      {
        v68 = v67 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v67);
        v67 = v68;
      }
      while (v66 != v68);
    }
    if (v34)
    {
      swift_bridgeObjectRetain(v38);
      v69 = _CocoaArrayWrapper.subscript.getter(0, v66, v38);
      v71 = v70;
      v73 = v72;
      v66 = v74;
      swift_release_n(v38, 2);
      v38 = v69;
      if ((v66 & 1) != 0)
      {
LABEL_71:
        v76 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v77 = swift_unknownObjectRetain_n(v38, 2);
        v78 = (_QWORD *)swift_dynamicCastClass(v77, v76);
        if (!v78)
        {
          swift_unknownObjectRelease(v38);
          v78 = _swiftEmptyArrayStorage;
        }
        v79 = v78[2];
        v80 = swift_release();
        if (!__OFSUB__(v66 >> 1, v73))
        {
          v80 = v38;
          if (v79 == (v66 >> 1) - v73)
          {
            v75 = (_QWORD *)swift_dynamicCastClass(v38, v76);
            if (!v75)
            {
              swift_unknownObjectRelease(v38);
              v75 = _swiftEmptyArrayStorage;
            }
            goto LABEL_77;
          }
          goto LABEL_90;
        }
LABEL_89:
        __break(1u);
LABEL_90:
        swift_unknownObjectRelease(v80);
      }
    }
    else
    {
      v73 = 0;
      v71 = v38 + 32;
      v66 = (2 * v66) | 1;
      if ((v66 & 1) != 0)
        goto LABEL_71;
    }
    v75 = sub_1000D8BF4(v38, v71, v73, v66);
LABEL_77:
    v0[40] = v75;
    v81 = v0[4];
    swift_unknownObjectRelease(v38);
    swift_weakInit(v0 + 3, v81);
    v82 = type metadata accessor for MainActor(0);
    v0[41] = static MainActor.shared.getter(v82);
    v83 = dispatch thunk of Actor.unownedExecutor.getter(v82, &protocol witness table for MainActor);
    return swift_task_switch(sub_1001C0DA0, v83, v84);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C0DA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 320);
  swift_release();
  sub_1001C16D8(v0 + 24, v1);
  swift_release();
  swift_weakDestroy(v0 + 24);
  return swift_task_switch(sub_1001C0E08, 0, 0);
}

uint64_t sub_1001C0E08()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = *(void **)(v0 + 232);
  v3 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 192);
  v4 = *(void **)(v0 + 176);
  v5 = *(void **)(v0 + 128);

  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C0E74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(void **)(v0 + 88);
  v2 = *(void **)(v0 + 96);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v4 = type metadata accessor for Logger(0);
  sub_10000E918(v4, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Library Home: Error Fetching Recets: %@", v8, 0xCu);
    v11 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C1050()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 88);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  v2 = *(_QWORD *)(v0 + 160);
  v4 = *(void **)(v0 + 128);
  v3 = *(void **)(v0 + 136);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v5 = type metadata accessor for Logger(0);
  sub_10000E918(v5, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v2);
  v6 = swift_errorRetain(v2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v2);
    v11 = _swift_stdlib_bridgeErrorToNSError(v2);
    *(_QWORD *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Library Home: Error Fetching Recets: %@", v9, 0xCu);
    v12 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v2);
  }
  else
  {
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C123C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(void **)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(void **)(v0 + 88);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);

  swift_bridgeObjectRelease(v5);
  v7 = *(_QWORD *)(v0 + 224);
  v9 = *(void **)(v0 + 192);
  v8 = *(void **)(v0 + 200);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v10 = type metadata accessor for Logger(0);
  sub_10000E918(v10, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v7);
  v11 = swift_errorRetain(v7);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412290;
    swift_errorRetain(v7);
    v16 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v14 + 4, v14 + 12);
    *v15 = v16;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Library Home: Error Fetching Recets: %@", v14, 0xCu);
    v17 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C1458()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 272);
  v2 = *(void **)(v0 + 232);
  v3 = *(void **)(v0 + 192);

  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(void **)(v0 + 184);
  v6 = *(void **)(v0 + 128);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v7 = type metadata accessor for Logger(0);
  sub_10000E918(v7, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v4);
  v8 = swift_errorRetain(v4);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138412290;
    swift_errorRetain(v4);
    v13 = _swift_stdlib_bridgeErrorToNSError(v4);
    *(_QWORD *)(v0 + 16) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v11 + 4, v11 + 12);
    *v12 = v13;
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Library Home: Error Fetching Recets: %@", v11, 0xCu);
    v14 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C1660(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10149F3B4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000DD08;
  return sub_1001BF34C(a1, v4, v5, v6);
}

uint64_t sub_1001C16D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  id v14;
  _BYTE v16[24];

  v4 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = swift_beginAccess(a1, v16, 0, 0);
  result = swift_weakLoadStrong(a1, v8);
  if (result)
  {
    v10 = result;
    v11 = *(_QWORD *)(result + 16);
    *(_QWORD *)(result + 16) = a2;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRelease(v11);
    Strong = swift_unknownObjectWeakLoadStrong(v10 + 24);
    if (Strong)
    {
      v13 = Strong;
      sub_1001D5594();
      v14 = sub_1001D4470();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v7, 1, 0, 0);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
      return swift_unknownObjectRelease(v13);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t LibraryRecentsDataProvider.storeSubscriptionTypes.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 40, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
}

uint64_t LibraryRecentsDataProvider.storeSubscriptionTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 40, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*LibraryRecentsDataProvider.storeSubscriptionTypes.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t type metadata accessor for LibraryRecentsDataProvider()
{
  return objc_opt_self(_TtC4Maps26LibraryRecentsDataProvider);
}

void sub_1001C1A9C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  Swift::Int v28;
  unint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  void *v32;
  id v33;
  id v34;
  char *v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  __n128 v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  id *v44;
  Swift::Int v45;
  void *v46;
  id v47;
  id v48;
  char *v49;
  __n128 v50;
  char *v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  __n128 v53;
  char *v54;
  char *v55;
  int v56;
  uint64_t *v57;
  Swift::Int v58;
  Swift::Int v59;
  uint64_t *v60;
  uint64_t v61;
  Swift::Int v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  Swift::Int v64;
  void *v65;
  Swift::Int v66;
  void *v67;
  id v68;
  id v69;
  char *v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  __n128 v75;
  char *v76;
  char *v77;
  char v78;
  void (*v79)(char *, uint64_t);
  void *v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  char v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  Swift::Int v147;
  char *v148;
  char *v149;
  Swift::Int v150;
  char *v151;
  Swift::Int v152;
  Swift::Int v153;
  unsigned int (*v154)(char *, uint64_t, uint64_t);
  char *v155;
  void **v156;
  uint64_t v157;
  char *v158;
  Swift::Int v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;

  v2 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v2);
  v4 = (char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v161 = (char *)&v142 - v6;
  __chkstk_darwin(v7);
  v9 = (char *)&v142 - v8;
  __chkstk_darwin(v10);
  v155 = (char *)&v142 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v142 - v13;
  __chkstk_darwin(v15);
  v149 = (char *)&v142 - v16;
  v17 = a1[1];
  v18 = _minimumMergeRunLength(_:)(v17);
  if (v18 >= v17)
  {
    if (v17 < 0)
      goto LABEL_142;
    if (v17)
      sub_1001C2440(0, v17, 1, a1);
    return;
  }
  if (v17 >= 0)
    v20 = v17;
  else
    v20 = v17 + 1;
  if (v17 < -1)
    goto LABEL_156;
  v147 = v18;
  v148 = v14;
  v158 = v4;
  v153 = v17;
  v143 = a1;
  if (v17 < 2)
  {
    v162 = (uint64_t)_swiftEmptyArrayStorage;
    v156 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v17 != 1)
    {
      v132 = (char *)_swiftEmptyArrayStorage;
      v29 = _swiftEmptyArrayStorage[2];
LABEL_106:
      v133 = v157;
      if (v29 >= 2)
      {
        v134 = *v143;
        do
        {
          v135 = v29 - 2;
          if (v29 < 2)
            goto LABEL_137;
          if (!v134)
            goto LABEL_153;
          v136 = v132;
          v137 = *(_QWORD *)&v132[16 * v135 + 32];
          v138 = *(_QWORD *)&v132[16 * v29 + 24];
          sub_1001C2624((void **)(v134 + 8 * v137), (void **)(v134 + 8 * *(_QWORD *)&v132[16 * v29 + 16]), (void **)(v134 + 8 * v138), v156);
          if (v133)
          {
            v132 = v136;
            break;
          }
          if (v138 < v137)
            goto LABEL_138;
          if ((swift_isUniquelyReferenced_nonNull_native(v136) & 1) == 0)
            v136 = sub_1000DD110((uint64_t)v136);
          if (v135 >= *((_QWORD *)v136 + 2))
            goto LABEL_139;
          v139 = &v136[16 * v135 + 32];
          *(_QWORD *)v139 = v137;
          *((_QWORD *)v139 + 1) = v138;
          v140 = *((_QWORD *)v136 + 2);
          if (v29 > v140)
            goto LABEL_140;
          memmove(&v136[16 * v29 + 16], &v136[16 * v29 + 32], 16 * (v140 - v29));
          v132 = v136;
          *((_QWORD *)v136 + 2) = v140 - 1;
          v29 = v140 - 1;
        }
        while (v140 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease(v132);
      *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v141);
      swift_bridgeObjectRelease(v162);
      return;
    }
  }
  else
  {
    v21 = v20 >> 1;
    v22 = type metadata accessor for MapsSyncObject(0, v19);
    v23 = static Array._allocateBufferUninitialized(minimumCapacity:)(v21, v22);
    *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
    v156 = (void **)((v23 & 0xFFFFFFFFFFFFFF8) + 32);
    v162 = v23;
  }
  v24 = 0;
  v25 = *a1;
  v26 = *a1 + 16;
  v144 = *a1 - 8;
  v145 = v26;
  v27 = (char *)_swiftEmptyArrayStorage;
  v28 = v153;
  v160 = v25;
  v151 = v9;
  while (1)
  {
    v30 = v24;
    v31 = v24 + 1;
    v152 = v24;
    if (v24 + 1 < v28)
    {
      v32 = *(void **)(v25 + 8 * v24);
      v33 = *(id *)(v25 + 8 * v31);
      v34 = v32;
      v35 = v149;
      dispatch thunk of MapsSyncObject.createTime.getter(v36);
      v37 = type metadata accessor for Date(0);
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      if (v39(v35, 1, v37) == 1)
        goto LABEL_154;
      v41 = v148;
      dispatch thunk of MapsSyncObject.createTime.getter(v40);
      v154 = v39;
      if (v39(v41, 1, v37) == 1)
        goto LABEL_155;
      v42 = v149;
      LODWORD(v159) = static Date.> infix(_:_:)(v149, v41);
      v43 = *(void (**)(char *, uint64_t))(v38 + 8);
      v43(v41, v37);
      v43(v42, v37);

      v30 = v152;
      v28 = v153;
      v31 = v152 + 2;
      if (v152 + 2 < v153)
      {
        v146 = v27;
        v44 = (id *)(v145 + 8 * v152);
        while (1)
        {
          v45 = v31;
          v46 = *(v44 - 1);
          v47 = *v44;
          v48 = v46;
          v49 = v155;
          dispatch thunk of MapsSyncObject.createTime.getter(v50);
          v51 = v49;
          v52 = v154;
          if (v154(v51, 1, v37) == 1)
            goto LABEL_150;
          v54 = v151;
          dispatch thunk of MapsSyncObject.createTime.getter(v53);
          if (v52(v54, 1, v37) == 1)
            goto LABEL_151;
          v55 = v155;
          v56 = static Date.> infix(_:_:)(v155, v54);
          v43(v54, v37);
          v43(v55, v37);

          if (((v159 ^ v56) & 1) != 0)
            break;
          v31 = v45 + 1;
          ++v44;
          v28 = v153;
          if (v153 == v45 + 1)
          {
            v31 = v153;
            goto LABEL_26;
          }
        }
        v28 = v153;
        v31 = v45;
LABEL_26:
        v27 = v146;
        v30 = v152;
      }
      v25 = v160;
      if ((v159 & 1) != 0)
      {
        if (v31 < v30)
          goto LABEL_143;
        if (v30 < v31)
        {
          v57 = (uint64_t *)(v144 + 8 * v31);
          v58 = v31;
          v59 = v30;
          v60 = (uint64_t *)(v160 + 8 * v30);
          do
          {
            if (v59 != --v58)
            {
              if (!v25)
                goto LABEL_152;
              v61 = *v60;
              *v60 = *v57;
              *v57 = v61;
            }
            ++v59;
            --v57;
            ++v60;
          }
          while (v59 < v58);
        }
      }
    }
    if (v31 < v28)
    {
      if (__OFSUB__(v31, v30))
        goto LABEL_141;
      if (v31 - v30 < v147)
        break;
    }
LABEL_56:
    if (v31 < v30)
      goto LABEL_136;
    if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
      v27 = sub_1000DCBFC(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v82 = *((_QWORD *)v27 + 2);
    v81 = *((_QWORD *)v27 + 3);
    v29 = v82 + 1;
    v25 = v160;
    if (v82 >= v81 >> 1)
    {
      v131 = sub_1000DCBFC((char *)(v81 > 1), v82 + 1, 1, v27);
      v25 = v160;
      v27 = v131;
    }
    *((_QWORD *)v27 + 2) = v29;
    v83 = v27 + 32;
    v84 = &v27[16 * v82 + 32];
    *(_QWORD *)v84 = v30;
    *((_QWORD *)v84 + 1) = v31;
    v159 = v31;
    if (v82)
    {
      while (1)
      {
        v85 = v29 - 1;
        if (v29 >= 4)
        {
          v90 = &v83[16 * v29];
          v91 = *((_QWORD *)v90 - 8);
          v92 = *((_QWORD *)v90 - 7);
          v96 = __OFSUB__(v92, v91);
          v93 = v92 - v91;
          if (v96)
            goto LABEL_125;
          v95 = *((_QWORD *)v90 - 6);
          v94 = *((_QWORD *)v90 - 5);
          v96 = __OFSUB__(v94, v95);
          v88 = v94 - v95;
          v89 = v96;
          if (v96)
            goto LABEL_126;
          v97 = v29 - 2;
          v98 = &v83[16 * v29 - 32];
          v100 = *(_QWORD *)v98;
          v99 = *((_QWORD *)v98 + 1);
          v96 = __OFSUB__(v99, v100);
          v101 = v99 - v100;
          if (v96)
            goto LABEL_128;
          v96 = __OFADD__(v88, v101);
          v102 = v88 + v101;
          if (v96)
            goto LABEL_131;
          if (v102 >= v93)
          {
            v120 = &v83[16 * v85];
            v122 = *(_QWORD *)v120;
            v121 = *((_QWORD *)v120 + 1);
            v96 = __OFSUB__(v121, v122);
            v123 = v121 - v122;
            if (v96)
              goto LABEL_135;
            v113 = v88 < v123;
            goto LABEL_93;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v114 = *((_QWORD *)v27 + 4);
            v115 = *((_QWORD *)v27 + 5);
            v96 = __OFSUB__(v115, v114);
            v107 = v115 - v114;
            v108 = v96;
            goto LABEL_87;
          }
          v87 = *((_QWORD *)v27 + 4);
          v86 = *((_QWORD *)v27 + 5);
          v96 = __OFSUB__(v86, v87);
          v88 = v86 - v87;
          v89 = v96;
        }
        if ((v89 & 1) != 0)
          goto LABEL_127;
        v97 = v29 - 2;
        v103 = &v83[16 * v29 - 32];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v106 = __OFSUB__(v104, v105);
        v107 = v104 - v105;
        v108 = v106;
        if (v106)
          goto LABEL_130;
        v109 = &v83[16 * v85];
        v111 = *(_QWORD *)v109;
        v110 = *((_QWORD *)v109 + 1);
        v96 = __OFSUB__(v110, v111);
        v112 = v110 - v111;
        if (v96)
          goto LABEL_133;
        if (__OFADD__(v107, v112))
          goto LABEL_134;
        if (v107 + v112 >= v88)
        {
          v113 = v88 < v112;
LABEL_93:
          if (v113)
            v85 = v97;
          goto LABEL_95;
        }
LABEL_87:
        if ((v108 & 1) != 0)
          goto LABEL_129;
        v116 = &v83[16 * v85];
        v118 = *(_QWORD *)v116;
        v117 = *((_QWORD *)v116 + 1);
        v96 = __OFSUB__(v117, v118);
        v119 = v117 - v118;
        if (v96)
          goto LABEL_132;
        if (v119 < v107)
          goto LABEL_14;
LABEL_95:
        v124 = v85 - 1;
        if (v85 - 1 >= v29)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        if (!v25)
          goto LABEL_149;
        v125 = &v83[16 * v124];
        v126 = *(_QWORD *)v125;
        v127 = &v83[16 * v85];
        v128 = *((_QWORD *)v127 + 1);
        v129 = v157;
        sub_1001C2624((void **)(v25 + 8 * *(_QWORD *)v125), (void **)(v25 + 8 * *(_QWORD *)v127), (void **)(v25 + 8 * v128), v156);
        v157 = v129;
        if (v129)
        {
          v132 = v27;
          goto LABEL_119;
        }
        if (v128 < v126)
          goto LABEL_122;
        if (v85 > *((_QWORD *)v27 + 2))
          goto LABEL_123;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v83[16 * v124 + 8] = v128;
        v130 = *((_QWORD *)v27 + 2);
        if (v85 >= v130)
          goto LABEL_124;
        v29 = v130 - 1;
        memmove(&v83[16 * v85], v127 + 16, 16 * (v130 - 1 - v85));
        *((_QWORD *)v27 + 2) = v130 - 1;
        v25 = v160;
        if (v130 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v28 = v153;
    v24 = v159;
    if (v159 >= v153)
    {
      v132 = v27;
      goto LABEL_106;
    }
  }
  if (__OFADD__(v30, v147))
    goto LABEL_144;
  if (v30 + v147 >= v28)
    v62 = v28;
  else
    v62 = v30 + v147;
  if (v62 >= v30)
  {
    if (v31 != v62)
    {
      v146 = v27;
      v63 = (unsigned int (*)(char *, uint64_t, uint64_t))(v144 + 8 * v31);
      v150 = v62;
      do
      {
        v65 = *(void **)(v25 + 8 * v31);
        v66 = v30;
        v154 = v63;
        v159 = v31;
        while (1)
        {
          v67 = *(void **)v63;
          v68 = v65;
          v69 = v67;
          v70 = v161;
          dispatch thunk of MapsSyncObject.createTime.getter(v71);
          v72 = type metadata accessor for Date(0);
          v73 = *(_QWORD *)(v72 - 8);
          v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
          if (v74(v70, 1, v72) == 1)
            goto LABEL_146;
          v76 = v158;
          dispatch thunk of MapsSyncObject.createTime.getter(v75);
          if (v74(v76, 1, v72) == 1)
            goto LABEL_147;
          v77 = v161;
          v78 = static Date.> infix(_:_:)(v161, v76);
          v79 = *(void (**)(char *, uint64_t))(v73 + 8);
          v79(v76, v72);
          v79(v77, v72);

          if ((v78 & 1) == 0)
            break;
          v64 = v159;
          v25 = v160;
          if (!v160)
            goto LABEL_148;
          v80 = *(_QWORD *)v63;
          v65 = (void *)*((_QWORD *)v63 + 1);
          *(_QWORD *)v63 = v65;
          *((_QWORD *)v63 + 1) = v80;
          v63 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)v63 - 8);
          if (v64 == ++v66)
            goto LABEL_47;
        }
        v64 = v159;
        v25 = v160;
LABEL_47:
        v31 = v64 + 1;
        v63 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)v154 + 8);
        v30 = v152;
      }
      while (v31 != v150);
      v31 = v150;
      v27 = v146;
    }
    goto LABEL_56;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1001C2440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  char *v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  __n128 v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  v30 = a1;
  v7 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v35 = (char *)&v28 - v11;
  v29 = a2;
  if (a3 != a2)
  {
    v32 = *a4;
    v12 = v32 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v32 + 8 * a3);
    v33 = a3;
    v34 = v30;
    v31 = v12;
    while (1)
    {
      v14 = *(void **)v12;
      v15 = v13;
      v16 = v14;
      v17 = v35;
      dispatch thunk of MapsSyncObject.createTime.getter(v18);
      v19 = type metadata accessor for Date(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (v21(v17, 1, v19) == 1)
        break;
      dispatch thunk of MapsSyncObject.createTime.getter(v22);
      if (v21(v9, 1, v19) == 1)
        goto LABEL_13;
      v23 = v35;
      v24 = static Date.> infix(_:_:)(v35, v9);
      v25 = *(void (**)(char *, uint64_t))(v20 + 8);
      v25(v9, v19);
      v25(v23, v19);

      v26 = v33;
      if ((v24 & 1) != 0)
      {
        if (!v32)
          goto LABEL_14;
        v27 = *(void **)v12;
        v13 = *(void **)(v12 + 8);
        *(_QWORD *)v12 = v13;
        *(_QWORD *)(v12 + 8) = v27;
        v12 -= 8;
        if (v26 != ++v34)
          continue;
      }
      a3 = v26 + 1;
      v12 = v31 + 8;
      if (a3 == v29)
        return;
      goto LABEL_5;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
}

uint64_t sub_1001C2624(void **a1, void **a2, void **a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  id *v23;
  void **v24;
  void *v25;
  id v26;
  id v27;
  void **v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void **, uint64_t, uint64_t);
  __n128 v33;
  void **v34;
  void **v35;
  char v36;
  void (*v37)(char *, uint64_t);
  id *v38;
  void **v39;
  void **v40;
  void **v41;
  void **v42;
  void **v43;
  void *v44;
  id v45;
  id v46;
  char *v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  __n128 v52;
  char *v53;
  char *v54;
  char v55;
  void (*v56)(uint64_t, uint64_t);
  void **v57;
  uint64_t result;
  uint64_t v59;
  void **v60;
  char *v61;
  void **v62;
  void **v63;
  void **v64;
  char *v65;
  void **v66;
  void **v67;
  void **v68;
  void **v69;
  void **v70;

  v8 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  v65 = (char *)&v59 - v10;
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  v66 = (void **)((char *)&v59 - v15);
  v67 = a1;
  v16 = (char *)a2 - (char *)a1;
  v17 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v17 = (char *)a2 - (char *)a1;
  v18 = v17 >> 3;
  v19 = a2;
  v64 = a3;
  v20 = (char *)a3 - (char *)a2;
  v21 = v20 / 8;
  v70 = a1;
  v69 = a4;
  if (v17 >> 3 >= v20 / 8)
  {
    v61 = v13;
    if (v20 >= -7)
    {
      if (a4 != v19 || &v19[v21] <= a4)
        memmove(a4, v19, 8 * v21);
      v40 = &a4[v21];
      v68 = v40;
      v70 = v19;
      if (a1 < v19 && v20 >= 8)
      {
        v41 = v64 - 1;
        v42 = v19;
        v60 = a4;
        while (1)
        {
          v66 = v41;
          v63 = v40;
          v64 = v19;
          v43 = v40 - 1;
          v44 = *--v42;
          v45 = *(v40 - 1);
          v46 = v44;
          v47 = v65;
          dispatch thunk of MapsSyncObject.createTime.getter(v48);
          v49 = type metadata accessor for Date(0);
          v50 = *(_QWORD *)(v49 - 8);
          v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
          if (v51(v47, 1, v49) == 1)
            break;
          v53 = v61;
          dispatch thunk of MapsSyncObject.createTime.getter(v52);
          if (v51(v53, 1, v49) == 1)
            goto LABEL_49;
          v54 = v65;
          v62 = v66 + 1;
          v55 = static Date.> infix(_:_:)(v65, v53);
          v56 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
          v56((uint64_t)v53, v49);
          v56((uint64_t)v54, v49);

          if ((v55 & 1) != 0)
          {
            v40 = v63;
            v57 = v66;
            if (v62 != v64 || v66 >= v64)
              *v66 = *v42;
            v70 = v42;
          }
          else
          {
            v68 = v43;
            v57 = v66;
            if (v62 < v63 || v66 >= v63 || v62 != v63)
              *v66 = *v43;
            v42 = v64;
            v40 = v43;
          }
          if (v42 > v67)
          {
            v41 = v57 - 1;
            v19 = v42;
            if (v40 > v60)
              continue;
          }
          goto LABEL_45;
        }
        __break(1u);
        goto LABEL_47;
      }
LABEL_45:
      sub_1000DCE40((void **)&v70, (const void **)&v69, &v68);
      return 1;
    }
  }
  else if (v16 >= -7)
  {
    v65 = v14;
    if (a4 != a1 || &a1[v18] <= a4)
      memmove(a4, a1, 8 * v18);
    v63 = &a4[v18];
    v68 = v63;
    if (v19 < v64 && v16 >= 8)
    {
      v22 = v19;
      while (1)
      {
        v23 = v22;
        v24 = a4;
        v25 = *a4;
        v26 = *v22;
        v27 = v25;
        v28 = v66;
        dispatch thunk of MapsSyncObject.createTime.getter(v29);
        v30 = type metadata accessor for Date(0);
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48);
        if (v32(v28, 1, v30) == 1)
          break;
        v34 = (void **)v65;
        dispatch thunk of MapsSyncObject.createTime.getter(v33);
        if (v32(v34, 1, v30) == 1)
          goto LABEL_48;
        v35 = v66;
        v36 = static Date.> infix(_:_:)(v66, v34);
        v37 = *(void (**)(char *, uint64_t))(v31 + 8);
        v37((char *)v34, v30);
        v37((char *)v35, v30);

        if ((v36 & 1) != 0)
        {
          v38 = v23 + 1;
          v39 = v67;
          a4 = v24;
          if (v67 < v23 || v67 >= v38 || v67 != v23)
            *v67 = *v23;
        }
        else
        {
          v39 = v67;
          if (v67 != v24)
            *v67 = *v24;
          a4 = v24 + 1;
          v69 = v24 + 1;
          v38 = v23;
        }
        v67 = v39 + 1;
        v70 = v39 + 1;
        if (a4 < v63)
        {
          v22 = v38;
          if (v38 < v64)
            continue;
        }
        goto LABEL_45;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    goto LABEL_45;
  }
LABEL_50:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_1001C2B08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, a1);
LABEL_9:
        v5 = v4;
        v6 = v3 + 1;
        if (__OFADD__(v3, 1))
          goto LABEL_16;
        v7 = objc_msgSend((id)objc_opt_self(MapsSavedRoutesManager), "routeDataForMapsSyncUserRoute:", v4);
        if (v7
          && (v8 = v7,
              v9 = objc_msgSend(v7, "isAvailableForCurrentCountry"),
              v8,
              (v9 & 1) != 0))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v10 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
          v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v5);
          specialized ContiguousArray._endMutation()(v11);
        }
        else
        {

        }
        ++v3;
        if (v6 == v2)
          return _swiftEmptyArrayStorage;
      }
      if (v3 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      if (a1 < 0)
        v13 = a1;
      else
        v13 = a1 & 0xFFFFFFFFFFFFFF8;
      v2 = _CocoaArrayWrapper.endIndex.getter(v13);
      if (!v2)
        return _swiftEmptyArrayStorage;
    }
    v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001C2C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = sub_100008B04((uint64_t *)&unk_10149E140);
  *(_QWORD *)(v1 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001C2CDC, 0, 0);
}

uint64_t sub_1001C2CDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  type metadata accessor for CuratedCollectionRequest(0);
  v0[4] = CuratedCollectionRequest.__allocating_init()();
  v3 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of CuratedCollectionRequest.fetch(options:)
                                      + async function pointer to dispatch thunk of CuratedCollectionRequest.fetch(options:));
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CuratedCollectionRequest.fetch(options:)
                                  + 1));
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_1001C2D54;
  return v3(v0[2]);
}

uint64_t sub_1001C2D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 40);
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001C3358;
  }
  else
  {

    v5 = sub_1001C2DC8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001C2DC8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t (*v28)(void *);

  v1 = v0;
  v2 = v0[6];
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    v0[8] = v3;
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v0[6]);
LABEL_17:
    v20 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryPredicate(0));
    v21 = MapsSyncQueryPredicate.init(or:)(_swiftEmptyArrayStorage);
    v22 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
    v23 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v21, 0, 0);
    v1[9] = v23;
    type metadata accessor for CachedCuratedCollectionRequest(0);
    v1[10] = CachedCuratedCollectionRequest.__allocating_init()();
    v24 = *((unsigned int *)&async function pointer to dispatch thunk of CachedCuratedCollectionRequest.fetch(options:)
          + 1);
    v28 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CachedCuratedCollectionRequest.fetch(options:)
                                         + async function pointer to dispatch thunk of CachedCuratedCollectionRequest.fetch(options:));
    v25 = v23;
    v26 = (_QWORD *)swift_task_alloc(v24);
    v1[11] = v26;
    *v26 = v1;
    v26[1] = sub_1001C30C8;
    return v28(v23);
  }
  if (v2 < 0)
    v19 = v0[6];
  else
    v19 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v19);
  v0[8] = v3;
  if (!v3)
    goto LABEL_16;
LABEL_3:
  result = type metadata accessor for MapsSyncQueryPredicate(0);
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = v2 & 0xC000000000000001;
    v27 = v0[6] + 32;
    do
    {
      if (v6)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v0[6]);
      else
        v7 = *(id *)(v27 + 8 * v5);
      v8 = v7;
      v9 = sub_100008B04((uint64_t *)&unk_101499120);
      v10 = swift_allocObject(v9, 96, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100E22F70;
      v11 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedLongLong:", dispatch thunk of CuratedCollection.curatedCollectionIdentifier.getter());
      v12 = sub_10000E4BC(0, (unint64_t *)&qword_10149E3B0, NSNumber_ptr);
      *(_QWORD *)(v10 + 56) = v12;
      *(_QWORD *)(v10 + 32) = v11;
      v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInt:", dispatch thunk of CuratedCollection.resultProviderIdentifier.getter());
      *(_QWORD *)(v10 + 88) = v12;
      *(_QWORD *)(v10 + 64) = v13;
      v14 = static MapsSyncQueryPredicate.queryPredicate(format:argumentArray:)(0xD000000000000042, 0x8000000100E50600, v10);
      swift_bridgeObjectRelease(v10);

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      ++v5;
      v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
      specialized Array._endMutation()(v18);
    }
    while (v3 != v5);
    v1 = v0;
    swift_bridgeObjectRelease(v0[6]);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001C30C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 88);
  *(_QWORD *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 104) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001C3394;
  }
  else
  {
    v6 = *(void **)(v3 + 80);

    v5 = sub_1001C3140;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001C3140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  if (*(_QWORD *)(v0 + 64))
  {
    v1 = *(_QWORD *)(v0 + 96);
    if ((unint64_t)v1 >> 62)
      goto LABEL_32;
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v3 = *(_QWORD *)(v0 + 96);
LABEL_4:
    v4 = 0;
    v5 = *(_QWORD *)(v0 + 48);
    v26 = v5 & 0xFFFFFFFFFFFFFF8;
    v27 = v5 & 0xC000000000000001;
    v25 = v5 + 32;
    v6 = v1 & 0xC000000000000001;
    v7 = v3 + 32;
    while (1)
    {
      if (v27)
      {
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 48));
      }
      else
      {
        if (v4 >= *(_QWORD *)(v26 + 16))
          goto LABEL_31;
        v12 = *(id *)(v25 + 8 * v4);
      }
      v13 = v12;
      if (__OFADD__(v4++, 1))
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        if (v1 < 0)
          v24 = v1;
        else
          v24 = v1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v1);
        v2 = _CocoaArrayWrapper.endIndex.getter(v24);
        swift_bridgeObjectRelease(v1);
        v3 = *(_QWORD *)(v0 + 96);
        goto LABEL_4;
      }
      if (!v2)
        goto LABEL_8;
      v15 = 0;
      while (1)
      {
        v16 = v6
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, *(_QWORD *)(v0 + 96))
            : *(id *)(v7 + 8 * v15);
        v17 = v16;
        v18 = dispatch thunk of CachedCuratedCollection.curatedCollectionIdentifier.getter();
        v1 = (uint64_t)v13;
        if (v18 == dispatch thunk of CuratedCollection.curatedCollectionIdentifier.getter())
          break;

        v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_25:
        ++v15;
        if (v20 == v2)
          goto LABEL_8;
      }
      v19 = dispatch thunk of CachedCuratedCollection.resultProviderIdentifier.getter();
      v1 = dispatch thunk of CuratedCollection.resultProviderIdentifier.getter();

      if (v19 != (_DWORD)v1)
        break;
      if (v6)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, *(_QWORD *)(v0 + 96));
      else
        v8 = *(id *)(v7 + 8 * v15);
      v9 = v8;
      v10 = *(_QWORD *)(v0 + 24);
      v11 = v13;
      dispatch thunk of MapsSyncObject.createTime.getter();

      dispatch thunk of MapsSyncObject.createTime.setter(v10);
LABEL_8:
      v1 = *(_QWORD *)(v0 + 64);

      if (v4 == v1)
        goto LABEL_28;
    }
    v20 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_29;
    goto LABEL_25;
  }
LABEL_28:
  v21 = *(void **)(v0 + 72);
  v22 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));

  swift_task_dealloc(v22);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_1001C3358()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C3394()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 48);

  swift_bridgeObjectRelease(v2);
  v3 = *(_QWORD *)(v0 + 24);

  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C33F0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001C341C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10149F3B4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000C0E0;
  return sub_1001BF34C(a1, v4, v5, v6);
}

uint64_t type metadata accessor for LibraryPlacesCollectionViewManagerConfiguration()
{
  return objc_opt_self(_TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration);
}

id sub_1001C3558()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v1 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource);
  }
  else
  {
    v4 = v0;
    if (qword_1014910F0 != -1)
      swift_once(&qword_1014910F0, sub_1001D7610);
    v5 = sub_100008B04(&qword_10149F580);
    sub_10000E918(v5, (uint64_t)qword_1014D5000);
    if (qword_101491100 != -1)
      swift_once(&qword_101491100, sub_1001D7BCC);
    v6 = sub_100008B04(&qword_10149F588);
    sub_10000E918(v6, (uint64_t)qword_1014D5020);
    v7 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration)
                  + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView);
    v8 = swift_allocObject(&unk_1011A98D0, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16);
    objc_allocWithZone((Class)sub_100008B04(&qword_10149F590));
    v9 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v7, sub_1001C5D5C, v8);
    v10 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v9;
    v3 = v9;

    v2 = 0;
  }
  v11 = v2;
  return v3;
}

id sub_1001C36A4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  v1 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout);
  }
  else
  {
    v4 = swift_allocObject(&unk_1011A98D0, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16);
    v5 = objc_allocWithZone((Class)type metadata accessor for HomeListCompositionalLayout());
    v11[4] = sub_1001C5B94;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1001C50E4;
    v11[3] = &unk_1011A9938;
    v6 = _Block_copy(v11);
    v7 = objc_msgSend(v5, "initWithSectionProvider:", v6, swift_retain().n128_f64[0]);
    _Block_release(v6);
    swift_release();
    swift_release();
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_1001C37C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  _BYTE v12[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return 0;
  v9 = (void *)Strong;
  v10 = sub_1001C3844(a1, a2, a3);

  return v10;
}

uint64_t sub_1001C3844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD v25[2];
  void *v26;
  _QWORD v27[5];

  v25[1] = a1;
  v6 = sub_100008B04(&qword_10149F588);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04(&qword_10149F580);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084C44(a3, (uint64_t)v27);
  v14 = sub_100008B04(&qword_10149F308);
  v15 = type metadata accessor for LibraryListSavedItemCellModel();
  if (!swift_dynamicCast(&v26, v27, v14, v15, 6))
    return 0;
  v16 = v26;
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType) & 1) != 0)
  {
    if (qword_101491100 != -1)
      swift_once(&qword_101491100, sub_1001D7BCC);
    v17 = sub_10000E918(v6, (uint64_t)qword_1014D5020);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v17, v6);
    v27[0] = v16;
    v18 = sub_10000E4BC(0, &qword_10149F598, MUPlaceTileCollectionViewCell_ptr);
    v19 = v16;
    v20 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v9, a2, v27, v18, v15);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    if (qword_1014910F0 != -1)
      swift_once(&qword_1014910F0, sub_1001D7610);
    v21 = sub_10000E918(v10, (uint64_t)qword_1014D5000);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v21, v10);
    v27[0] = v16;
    v22 = sub_10000E4BC(0, &qword_10149B488, off_101198000);
    v23 = v16;
    v20 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v13, a2, v27, v22, v15);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v20;
}

void *sub_1001C3AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  __n128 v6;
  void *v7;
  void *v8;
  _BYTE v10[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
    return 0;
  v7 = (void *)Strong;
  v8 = sub_1001C5BB4(a2, 0, 0, v6);

  return v8;
}

id sub_1001C3B34()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  id v14;
  id v15;
  id v16;
  uint64_t v18;

  v0 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v1 = objc_msgSend(v0, "fractionalWidthDimension:", 0.5);
  v2 = objc_msgSend(v0, "fractionalHeightDimension:", 1.0);
  v3 = (void *)objc_opt_self(NSCollectionLayoutSize);
  v4 = objc_msgSend(v3, "sizeWithWidthDimension:heightDimension:", v1, v2);

  v5 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v4);
  objc_msgSend(v5, "setContentInsets:", 16.0, 16.0, 16.0, 16.0);
  v6 = objc_msgSend(v0, "fractionalWidthDimension:", 1.0);
  v7 = objc_msgSend(v0, "absoluteDimension:", 240.0);
  v8 = objc_msgSend(v3, "sizeWithWidthDimension:heightDimension:", v6, v7);

  v9 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v10 = sub_100008B04((uint64_t *)&unk_101493B10);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v11 + 32) = v5;
  v18 = v11;
  specialized Array._endMutation()(v11);
  sub_10000E4BC(0, (unint64_t *)&qword_101498C50, NSCollectionLayoutItem_ptr);
  v12 = v5;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v9, "horizontalGroupWithLayoutSize:subitems:", v8, isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v15 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v14);
  v16 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewCompositionalLayout), "initWithSection:", v15);

  return v16;
}

char *sub_1001C3DA8(void *a1, char a2, char a3)
{
  _BYTE *v3;
  _BYTE *v4;
  objc_class *ObjectType;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  char *v20;
  id v21;
  objc_class *v22;
  char *v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  id v49;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59[24];
  objc_super v60;
  objc_super v61;
  objc_super v62;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = a3 & 1;
  v10 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___diffableDataSource] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager____lazy_storage___listLayout] = 0;
  v13 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_gridLayout;
  v14 = v4;
  *(_QWORD *)&v4[v13] = sub_1001C3B34();
  *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration] = a1;
  v15 = type metadata accessor for LibraryPlacesDataProvider();
  swift_allocObject(v15, 80, 7);
  v16 = a1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider] = sub_1001CE388(a2);
  v17 = type metadata accessor for MapsSyncStore(0);
  v18 = static MapsSyncStore.sharedStore.getter(v17);
  v19 = (objc_class *)type metadata accessor for LibraryDataOperationsProvider();
  v20 = (char *)objc_allocWithZone(v19);
  *(_QWORD *)&v20[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = v18;
  v62.receiver = v20;
  v62.super_class = v19;
  v21 = objc_msgSendSuper2(&v62, "init");
  *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_libraryDataOperationsProvider] = v21;
  v22 = (objc_class *)type metadata accessor for LibraryCellActionHandler();
  v23 = (char *)objc_allocWithZone(v22);
  v24 = &v23[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator];
  *((_QWORD *)v24 + 1) = 0;
  swift_unknownObjectWeakInit(v24);
  swift_unknownObjectWeakInit(&v23[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_searchController]);
  *(_QWORD *)&v23[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider] = v21;
  *(_DWORD *)&v23[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo] = 140;
  v61.receiver = v23;
  v61.super_class = v22;
  v25 = v21;
  *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cellActionHandler] = objc_msgSendSuper2(&v61, "init");
  v14[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_sortType] = a2;
  v14[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType] = v9;

  v60.receiver = v14;
  v60.super_class = ObjectType;
  v26 = objc_msgSendSuper2(&v60, "init");
  v27 = qword_1014910F0;
  v28 = (char *)v26;
  if (v27 != -1)
    swift_once(&qword_1014910F0, sub_1001D7610);
  v29 = sub_100008B04(&qword_10149F580);
  sub_10000E918(v29, (uint64_t)qword_1014D5000);
  if (qword_101491100 != -1)
    swift_once(&qword_101491100, sub_1001D7BCC);
  v30 = sub_100008B04(&qword_10149F588);
  sub_10000E918(v30, (uint64_t)qword_1014D5020);
  v31 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cellActionHandler;
  v32 = *(_QWORD *)&v28[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cellActionHandler];
  v33 = v16;
  v34 = &v16[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
  Strong = swift_unknownObjectWeakLoadStrong(&v16[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator]);
  v36 = v32 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
  *(_QWORD *)(v36 + 8) = *((_QWORD *)v34 + 1);
  swift_unknownObjectWeakAssign(v36, Strong);
  swift_unknownObjectRelease(Strong);
  v37 = *(_QWORD *)&v28[v31];
  v38 = (void *)swift_unknownObjectWeakLoadStrong(&v33[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_searchController]);
  swift_unknownObjectWeakAssign(v37 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_searchController, v38);

  v39 = *(_QWORD *)&v28[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider];
  *(_QWORD *)(v39 + 32) = &off_1011A98B0;
  swift_unknownObjectWeakAssign(v39 + 24, v28);
  v41 = *(_QWORD *)(v39 + 16);
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0)
      v53 = *(_QWORD *)(v39 + 16);
    else
      v53 = v41 & 0xFFFFFFFFFFFFFF8;
    v54 = type metadata accessor for MapsSyncObject(0, v40);
    swift_bridgeObjectRetain(v41);
    v55 = _bridgeCocoaArray<A>(_:)(v53, v54);
    swift_bridgeObjectRelease(v41);
    v41 = v55;
  }
  else
  {
    v42 = v41 & 0xFFFFFFFFFFFFFF8;
    v43 = swift_bridgeObjectRetain_n(*(_QWORD *)(v39 + 16), 2);
    v44 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v43);
    v46 = type metadata accessor for MapsSyncObject(0, v45);
    if (swift_dynamicCastMetatype(v44, v46) || (v51 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(v41);
    }
    else
    {
      v52 = (_QWORD *)(v42 + 32);
      while (swift_dynamicCastClass(*v52, v46))
      {
        ++v52;
        if (!--v51)
          goto LABEL_7;
      }
      swift_bridgeObjectRelease(v41);
      v41 = v42 | 1;
    }
  }
  v47 = (uint64_t *)&v28[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems];
  swift_beginAccess(&v28[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems], v59, 1, 0);
  v48 = *v47;
  *v47 = v41;
  swift_bridgeObjectRelease(v48);
  sub_1001C4250();
  v49 = sub_1001C3558();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v12, 1, 0, 0);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v58);
  return v28;
}

void sub_1001C4250()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _QWORD *v27;
  char v28[24];

  v1 = v0;
  v2 = sub_100008B04(&qword_10149BB20);
  v3 = sub_1001C5B50();
  v4 = sub_100010D70((unint64_t *)&qword_10149F570, &qword_10149BB20, "a|7");
  NSDiffableDataSourceSnapshot.init()(&type metadata for LibraryListSectionIdentifier, v2, v3, v4);
  v5 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10119A7F8);
  v6 = &v1[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems];
  swift_beginAccess(&v1[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems], v28, 0, 0);
  v7 = *(_QWORD *)v6;
  v8 = v1;
  swift_bridgeObjectRetain(v7);
  v10 = (uint64_t)sub_1001C5148(v9, (uint64_t)v8);
  swift_bridgeObjectRelease(v7);

  if (!((unint64_t)v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v10);
    v13 = _swiftEmptyArrayStorage;
LABEL_17:
    LOBYTE(v26) = 2;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v13, &v26, v5);
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v10 < 0)
    v23 = v10;
  else
    v23 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v11 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v10);
  if (!v11)
    goto LABEL_16;
LABEL_3:
  v25 = v10;
  v27 = _swiftEmptyArrayStorage;
  sub_1001325AC(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    v24 = v5;
    v12 = 0;
    v13 = v27;
    v14 = v10;
    v15 = v10 & 0xC000000000000001;
    do
    {
      if (v15)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v14);
      else
        v16 = *(id *)(v14 + 8 * v12 + 32);
      v17 = v16;
      v18 = type metadata accessor for LibraryListSavedItemCellModel();
      v19 = sub_10000BC84((unint64_t *)&qword_10149F578, (uint64_t (*)(uint64_t))type metadata accessor for LibraryListSavedItemCellModel, (uint64_t)byte_100E328C4);
      v27 = v13;
      v21 = v13[2];
      v20 = v13[3];
      if (v21 >= v20 >> 1)
      {
        sub_1001325AC(v20 > 1, v21 + 1, 1);
        v14 = v25;
        v13 = v27;
      }
      ++v12;
      v13[2] = v21 + 1;
      v22 = &v13[5 * v21];
      v22[4] = v17;
      *(_OWORD *)(v22 + 5) = v26;
      v22[7] = v18;
      v22[8] = v19;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease(v14);
    v5 = v24;
    goto LABEL_17;
  }
  __break(1u);
}

id sub_1001C44D4(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  id result;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v4 = v3;
  v8 = *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration];
  v9 = OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView;
  result = objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView), "indexPathsForSelectedItems");
  if (result)
  {
    v11 = result;
    v12 = type metadata accessor for IndexPath(0);
    v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

    v13 = objc_msgSend(*(id *)(v8 + v9), "indexPathsForSelectedItems");
    if (v13)
    {
      v14 = v13;
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v12);

      v16 = v4;
      v17 = sub_1001C5520(v15, (uint64_t)v16);
      swift_bridgeObjectRelease(v15);

    }
    else
    {
      v17 = _swiftEmptyArrayStorage;
    }
    v18 = v17[2];
    if (v18)
    {
      v19 = a2;
      v20 = a1;
      specialized ContiguousArray.reserveCapacity(_:)(v18);
      v21 = 5;
      do
      {
        v22 = v17[v21];
        v23 = swift_unknownObjectRetain(v22);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
        v24 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
        v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
        specialized ContiguousArray._endMutation()(v25);
        v21 += 2;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease(v17);
      a1 = v20;
      a2 = v19;
    }
    else
    {
      swift_bridgeObjectRelease(v17);
    }
    v26 = swift_allocObject(&unk_1011A98D0, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16);
    v27 = (_QWORD *)swift_allocObject(&unk_1011A98F8, 48, 7);
    v27[2] = v26;
    v27[3] = a2;
    v27[4] = a3;
    v27[5] = v28;
    swift_retain();
    swift_retain();
    sub_1001B2D1C((uint64_t)_swiftEmptyArrayStorage, a1, (void (*)(uint64_t, _QWORD, __n128))sub_1001C50D8, (uint64_t)v27);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_release();
    return (id)swift_release();
  }
  return result;
}

void sub_1001C4734(char a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  void *v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  char v74[32];

  v68 = a6;
  v69 = a4;
  v10 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v57 - v15;
  v17 = type metadata accessor for IndexPath(0);
  v71 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for IndexSet(0, v18);
  v66 = *(_QWORD *)(v21 - 8);
  v67 = v21;
  __chkstk_darwin(v21);
  v64 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v65 = (char *)&v57 - v24;
  a3 += 16;
  swift_beginAccess(a3, v74, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v26 = (void *)Strong;
    if ((a1 & 1) != 0 || a2)
    {
      v69();

    }
    else
    {
      v60 = (char *)Strong;
      v61 = a5;
      v27 = v68;
      v28 = *(_QWORD *)(v68 + 16);
      v29 = _swiftEmptyArrayStorage;
      v62 = v13;
      v63 = v11;
      if (v28)
      {
        v58 = v16;
        v59 = v10;
        v72[0] = _swiftEmptyArrayStorage;
        sub_1001325C8(0, v28, 0);
        v30 = v27 + ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80));
        v70 = *(_QWORD *)(v71 + 72);
        v31 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v71 + 16);
        do
        {
          v32 = v31(v20, v30, v17);
          v33 = IndexPath.item.getter(v32);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v20, v17);
          v29 = (_QWORD *)v72[0];
          if ((swift_isUniquelyReferenced_nonNull_native(v72[0]) & 1) == 0)
          {
            sub_1001325C8(0, v29[2] + 1, 1);
            v29 = (_QWORD *)v72[0];
          }
          v35 = v29[2];
          v34 = v29[3];
          if (v35 >= v34 >> 1)
          {
            sub_1001325C8(v34 > 1, v35 + 1, 1);
            v29 = (_QWORD *)v72[0];
          }
          v29[2] = v35 + 1;
          v29[v35 + 4] = v33;
          v30 += v70;
          --v28;
        }
        while (v28);
        v10 = v59;
        v16 = v58;
      }
      v36 = sub_10000BC84(&qword_10149F550, (uint64_t (*)(uint64_t))&type metadata accessor for IndexSet, (uint64_t)&protocol conformance descriptor for IndexSet);
      v37 = v64;
      v38 = v67;
      dispatch thunk of SetAlgebra.init()(v67, v36);
      v39 = v29[2];
      if (v39)
      {
        v40 = v29 + 4;
        do
        {
          v41 = *v40++;
          v73 = v41;
          dispatch thunk of SetAlgebra.insert(_:)(v72, &v73, v38, v36);
          --v39;
        }
        while (v39);
      }
      v42 = swift_bridgeObjectRelease(v29);
      v44 = v65;
      v43 = v66;
      (*(void (**)(char *, char *, uint64_t, __n128))(v66 + 32))(v65, v37, v38, v42);
      v45 = v60;
      swift_beginAccess(&v60[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems], v72, 33, 0);
      v46 = sub_100008B04(&qword_10149B520);
      v47 = sub_100010D70(&qword_10149F558, &qword_10149B520, (const char *)&protocol conformance descriptor for [A]);
      v48 = sub_100010D70(&qword_10149F560, &qword_10149B520, (const char *)&protocol conformance descriptor for [A]);
      RangeReplaceableCollection<>.remove(atOffsets:)(v44, v46, v47, v48);
      swift_endAccess(v72);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v38);
      v49 = sub_1001C3558();
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v49);

      v50 = v45;
      v51 = sub_1001C58A0(v68, (uint64_t)v50);

      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v51);
      swift_bridgeObjectRelease(v51);
      v52 = sub_1001C3558();
      v54 = v62;
      v53 = v63;
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v16, v10);
      v55 = swift_allocObject(&unk_1011A9920, 32, 7);
      *(_QWORD *)(v55 + 16) = v69;
      *(_QWORD *)(v55 + 24) = v61;
      swift_retain();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v54, 1, sub_10000BF08, v55);

      swift_release();
      v56 = *(void (**)(char *, uint64_t))(v53 + 8);
      v56(v54, v10);
      v56(v16, v10);
    }
  }
}

void sub_1001C4BE0()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  id v16;
  _OWORD v17[2];

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration];
  v2 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView), "indexPathsForSelectedItems");
  if (!v2)
  {
    v7 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease(v7);
    return;
  }
  v3 = v2;
  v4 = type metadata accessor for IndexPath(0);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  v6 = v0;
  v7 = sub_1001C5520(v5, (uint64_t)v6);
  swift_bridgeObjectRelease(v5);

  if (!v7[2])
    goto LABEL_10;
LABEL_3:
  v16 = objc_msgSend(objc_allocWithZone((Class)CollectionAddOrRemoveSession), "init");
  v8 = v7[2];
  if (v8)
  {
    *(_QWORD *)&v9 = swift_bridgeObjectRetain(v7).n128_u64[0];
    v10 = 4;
    do
    {
      objc_msgSend(v16, "addSelectedObject:", v7[v10], v9, v16);
      v10 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(v7);
  }
  swift_bridgeObjectRelease(v7);
  v11 = v1 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType();
    memset(v17, 0, sizeof(v17));
    (*(void (**)(id, _OWORD *, uint64_t, uint64_t, double, double, double, double))(v14 + 32))(v16, v17, ObjectType, v14, 0.0, 0.0, 0.0, 0.0);

    swift_unknownObjectRelease(v13);
    sub_100010CC4((uint64_t)v17, (uint64_t *)&unk_101493350);
  }
  else
  {

  }
}

void sub_1001C4DAC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25[24];

  v2 = v1;
  v4 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode) == 1
    && (a1 & 1) == 0)
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                    + 16);
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v21 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                        + 16);
      else
        v21 = v10 & 0xFFFFFFFFFFFFFF8;
      v22 = type metadata accessor for MapsSyncObject(0, v6);
      swift_bridgeObjectRetain(v10);
      v23 = _bridgeCocoaArray<A>(_:)(v21, v22);
      swift_bridgeObjectRelease(v10);
      v10 = v23;
    }
    else
    {
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
      v12 = swift_bridgeObjectRetain_n(*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)+ 16), 2);
      v13 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v12);
      v15 = type metadata accessor for MapsSyncObject(0, v14);
      if (swift_dynamicCastMetatype(v13, v15) || (v19 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
      {
        swift_bridgeObjectRelease(v10);
      }
      else
      {
        v24 = v4;
        v20 = (_QWORD *)(v11 + 32);
        while (swift_dynamicCastClass(*v20, v15))
        {
          ++v20;
          if (!--v19)
          {
            swift_bridgeObjectRelease(v10);
            v4 = v24;
            goto LABEL_6;
          }
        }
        swift_bridgeObjectRelease(v10);
        v10 = v11 | 1;
        v4 = v24;
      }
    }
LABEL_6:
    v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems);
    swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems, v25, 1, 0);
    v17 = *v16;
    *v16 = v10;
    swift_bridgeObjectRelease(v17);
    sub_1001C4250();
    v18 = sub_1001C3558();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v8, 1, 0, 0);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  *(_BYTE *)(v2 + v9) = a1 & 1;
}

uint64_t type metadata accessor for LibraryPlacesCollectionViewManager()
{
  return objc_opt_self(_TtC4Maps34LibraryPlacesCollectionViewManager);
}

uint64_t sub_1001C5080()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C50A4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001C50D8(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C4734(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(void))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

id sub_1001C50E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  void *v7;

  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a3);
  v7 = (void *)v6(a2, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);
  return v7;
}

_QWORD *sub_1001C5148(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  objc_class *v5;
  uint64_t v6;
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  id v15;
  char *v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  char *v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;
  unint64_t v52;
  objc_super v53;
  __objc2_prot *v54;
  unint64_t v55;

  v2 = a1;
  v55 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_27;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    v52 = v2 & 0xC000000000000001;
    v50 = OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cellActionHandler;
    for (i = 4; ; ++i)
    {
      v7 = v52 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v2) : *(id *)(v2 + 8 * i);
      v8 = v7;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v5 = (objc_class *)type metadata accessor for LibraryListSavedItemCellModel();
      v9 = (char *)objc_allocWithZone(v5);
      v10 = (uint64_t)&v9[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler];
      *(_QWORD *)(v10 + 8) = 0;
      swift_unknownObjectWeakInit(v10);
      v54 = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
      v11 = swift_dynamicCastObjCProtocolConditional(v8, 1, &v54);
      if (v11)
      {
        v12 = v11;
        v13 = v5;
        v14 = v2;
        swift_getObjectType();
        v15 = v8;
        v16 = v9;
        v17 = (unint64_t)LibraryPlaceItemCompatible.createMapItemFromStorage()();
        if (v17)
        {
          v18 = (id)v17;
          v19 = 0;
          v2 = v14;
          v5 = v13;
          v6 = i - 3;
          goto LABEL_19;
        }

        v2 = v14;
        v5 = v13;
        v6 = i - 3;
      }
      else
      {
        v20 = type metadata accessor for Collection(0);
        v21 = swift_dynamicCastClass(v8, v20);
        if (v21)
        {
          v22 = v21;
          v23 = (void *)objc_opt_self(CollectionHandler);
          v24 = v8;
          v25 = v9;
          v26 = objc_msgSend(v23, "collectionWithMapsSyncCollection:", v22);
          goto LABEL_18;
        }
        v27 = type metadata accessor for CachedCuratedCollection(0);
        v28 = swift_dynamicCastClass(v8, v27);
        if (v28)
        {
          v29 = v28;
          v30 = (void *)objc_opt_self(CollectionHandler);
          v31 = v8;
          v32 = v9;
          v26 = objc_msgSend(v30, "collectionWithMapsSyncCachedCuratedCollection:", v29);
LABEL_18:
          v18 = v26;
          v12 = 0;
          v19 = 1;
LABEL_19:
          v33 = &v9[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
          *(_QWORD *)v33 = v18;
          *((_QWORD *)v33 + 1) = v12;
          v33[16] = v19;
          sub_1001C585C(v18, v12, v19);

          v53.receiver = v9;
          v53.super_class = v5;
          v34 = (char *)objc_msgSendSuper2(&v53, "init");

          sub_1001BEF7C(v18, v12, v19);
          v35 = *(_QWORD *)(a2 + v50);
          v36 = &v34[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler];
          *((_QWORD *)v36 + 1) = &off_1011A9628;
          swift_unknownObjectWeakAssign(v36, v35);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
          v39 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v38 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v39 >= v38 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
          v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v34);
          specialized Array._endMutation()(v40);
          goto LABEL_6;
        }
        v41 = type metadata accessor for UserRoute(0);
        v42 = swift_dynamicCastClass(v8, v41);
        if (v42)
        {
          v43 = v42;
          v44 = (void *)objc_opt_self(MapsSavedRoutesManager);
          v45 = v8;
          v46 = v9;
          v18 = objc_msgSend(v44, "routeDataForMapsSyncUserRoute:", v43);
          v12 = 0;
          v19 = 2;
          goto LABEL_19;
        }
        v47 = v9;
      }
      sub_100017510(v10);

      swift_deallocPartialClassInstance(v9, v5, 48, 7);
LABEL_6:
      if (v6 == v3)
      {
        swift_bridgeObjectRelease(v2);
        return (_QWORD *)v55;
      }
    }
    __break(1u);
LABEL_27:
    if (v2 < 0)
      v49 = v2;
    else
      v49 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v49);
  }
  swift_bridgeObjectRelease(v2);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1001C5520(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t, __n128);
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  int v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v32;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, __n128);
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46[2];
  uint64_t v47;
  char *v48;

  v42 = a2;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v35 = a1;
    v36 = v2;
    v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v40 = *(_QWORD *)(v5 + 72);
    v41 = v13;
    v14 = swift_bridgeObjectRetain(a1);
    v38 = v7;
    v39 = _swiftEmptyArrayStorage;
    v37 = v10;
    while (1)
    {
      v41(v10, v12, v4, v14);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      {
        a1 = v35;
        goto LABEL_20;
      }
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      v16 = sub_1001C3558();
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v43, v7);

      if (*((_QWORD *)&v44 + 1))
      {
        v46[0] = v43;
        v46[1] = v44;
        v47 = v45;
        sub_10000BE48(v46, (uint64_t)&v43);
        v17 = sub_100008B04(&qword_10149F308);
        v18 = type metadata accessor for LibraryListSavedItemCellModel();
        if ((swift_dynamicCast(&v48, &v43, v17, v18, 6) & 1) != 0)
        {
          v19 = v48;
          v21 = *(void **)&v48[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
          v20 = *(_QWORD *)&v48[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 8];
          v22 = v48[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16];
          sub_1001C585C(v21, v20, v48[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16]);

          if (!v22)
          {
            v23 = v21;
            v7 = v38;
            (*(void (**)(char *, uint64_t))(v5 + 8))(v38, v4);
            if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
              v39 = sub_1000A8F60(0, v39[2] + 1, 1, v39);
            v25 = v39[2];
            v24 = v39[3];
            v26 = v25 + 1;
            if (v25 >= v24 >> 1)
            {
              v34 = v25 + 1;
              v30 = sub_1000A8F60((_QWORD *)(v24 > 1), v25 + 1, 1, v39);
              v26 = v34;
              v27 = v20;
              v39 = v30;
            }
            else
            {
              v27 = v20;
            }
            v10 = v37;
            v28 = v39;
            v39[2] = v26;
            v29 = &v28[2 * v25];
            v29[4] = v23;
            v29[5] = v27;
            goto LABEL_10;
          }
          sub_1001BEF7C(v21, v20, v22);
          v10 = v37;
          v7 = v38;
        }
      }
      else
      {
        sub_100010CC4((uint64_t)&v43, &qword_10149F548);
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_10:
      v12 += v40;
      if (!--v11)
      {
        a1 = v35;
        v15(v10, 1, 1, v4, v14);
        goto LABEL_20;
      }
    }
  }
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
  v32 = swift_bridgeObjectRetain(a1);
  v39 = _swiftEmptyArrayStorage;
  v31(v10, 1, 1, v4, v32);
LABEL_20:
  swift_bridgeObjectRelease(a1);
  return v39;
}

id sub_1001C585C(id result, uint64_t a2, char a3)
{
  id v4;

  if (a3 == 2 || a3 == 1)
    return result;
  if (!a3)
  {
    v4 = result;
    return (id)swift_unknownObjectRetain(a2);
  }
  return result;
}

_QWORD *sub_1001C58A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  _QWORD *v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t, __n128);
  char *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  __n128 *v20;
  __n128 v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, __n128);
  char *v30;
  __n128 v31;
  __n128 v32;
  unint64_t v33;
  __n128 v34;
  __n128 v35;
  unint64_t v36;
  uint64_t v37;

  v37 = a2;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v12 = *(_QWORD *)(v5 + 72);
    v27 = v2;
    v28 = v12;
    v29 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    v26 = a1;
    v13 = swift_bridgeObjectRetain(a1);
    v14 = _swiftEmptyArrayStorage;
    do
    {
      v29(v9, v11, v4, v13);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v15)(v9, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
      {
        a1 = v26;
        goto LABEL_15;
      }
      v16 = v30;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v30, v9, v4);
      v17 = sub_1001C3558();
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v34, v16);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v4);
      if (v35.n128_u64[1])
      {
        v31 = v34;
        v32 = v35;
        v33 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          v14 = sub_1000A906C(0, v14[2] + 1, 1, v14);
        v19 = v14[2];
        v18 = v14[3];
        if (v19 >= v18 >> 1)
          v14 = sub_1000A906C((_QWORD *)(v18 > 1), v19 + 1, 1, v14);
        v14[2] = v19 + 1;
        v20 = (__n128 *)&v14[5 * v19];
        v13 = v31;
        v21 = v32;
        v20[4].n128_u64[0] = v33;
        v20[2] = v13;
        v20[3] = v21;
      }
      else
      {
        sub_100010CC4((uint64_t)&v34, &qword_10149F548);
      }
      v11 += v28;
      --v10;
    }
    while (v10);
    a1 = v26;
    v15(v9, 1, 1, v4, v13);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
    v23 = swift_bridgeObjectRetain(a1);
    v14 = _swiftEmptyArrayStorage;
    v22(v9, 1, 1, v4, v23);
  }
LABEL_15:
  swift_bridgeObjectRelease(a1);
  return v14;
}

uint64_t sub_1001C5B2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001C5B50()
{
  unint64_t result;

  result = qword_10149F568;
  if (!qword_10149F568)
  {
    result = swift_getWitnessTable(byte_100E327A0, &type metadata for LibraryListSectionIdentifier);
    atomic_store(result, (unint64_t *)&qword_10149F568);
  }
  return result;
}

void *sub_1001C5B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001C3AC4(a1, a2, v2);
}

double sub_1001C5B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001C5BAC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void *sub_1001C5BB4(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v20;

  v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UICollectionLayoutListConfiguration(0, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v8 + 104))(v11, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v7, v14);
  UICollectionLayoutListConfiguration.init(appearance:)(v11);
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  UICollectionLayoutListConfiguration.backgroundColor.setter(v17);
  UICollectionLayoutListConfiguration.headerTopPadding.setter(0, 0);
  sub_10000C128(a2, a3);
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(a2, a3);
  sub_10000E4BC(0, (unint64_t *)&unk_101496350, NSCollectionLayoutSection_ptr);
  v18 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v16, a1);
  objc_msgSend(v18, "contentInsets");
  objc_msgSend(v18, "setContentInsets:", 0.0);
  objc_msgSend(v18, "contentInsets");
  objc_msgSend(v18, "setContentInsets:");
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return v18;
}

uint64_t sub_1001C5D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001C37C0(a1, a2, a3, v3);
}

id sub_1001C5D64(uint64_t a1, Class isa, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  _QWORD v14[3];
  uint64_t v15;

  sub_10000C1FC(a1, (uint64_t)v14, (uint64_t *)&unk_101493350);
  v5 = v15;
  if (!v15)
  {
    v11 = 0;
    if (!isa)
      goto LABEL_4;
    goto LABEL_3;
  }
  v6 = sub_10000BE88(v14, v15);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
  v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  sub_10000BEAC(v14);
  if (isa)
  {
LABEL_3:
    sub_10000E4BC(0, &qword_10149F6C0, UIMenuElement_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
LABEL_4:
  v12 = (id)(*(uint64_t (**)(uint64_t, uint64_t, Class))(a3 + 16))(a3, v11, isa);
  swift_unknownObjectRelease(v11);

  return v12;
}

uint64_t LibraryPlacesViewController.actionDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t LibraryPlacesViewController.actionDelegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v3 = v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate;
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, v7, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  result = swift_unknownObjectRelease(a1);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration)
       + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator;
    *(_QWORD *)(v6 + 8) = &protocol witness table for LibraryPlacesViewController;
    return swift_unknownObjectWeakAssign(v6, v1);
  }
  return result;
}

void (*LibraryPlacesViewController.actionDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_1001C6090;
}

void sub_1001C6090(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    v5 = v3[4];
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
    v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v6)
    {
      v7 = v3[4];
      v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration)
         + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator;
      *(_QWORD *)(v8 + 8) = &protocol witness table for LibraryPlacesViewController;
      swift_unknownObjectWeakAssign(v8, v7);
    }
  }
  free(v3);
}

id sub_1001C6144()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UINavigationBar), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = objc_msgSend(v4, "standardAppearance");
    objc_msgSend(v5, "configureWithTransparentBackground");

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1001C6204()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  id v5;
  NSString v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem];
  }
  else
  {
    if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0))
    {
      v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_placesTitle + 8];
      swift_bridgeObjectRetain(v4);
    }
    else
    {
      v4 = 0xE000000000000000;
    }
    v5 = objc_allocWithZone((Class)UINavigationItem);
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v5, "initWithTitle:", v6, swift_bridgeObjectRelease(v4).n128_f64[0]);

    v8 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1001C62D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton);
  }
  else
  {
    v4 = sub_1001C6350();
    v6 = sub_100129D34(v4, v5);
    swift_release();
    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

UIMenu (*sub_1001C6350())(uint64_t a1, uint64_t a2)
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  UIMenu (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider + 8);
  if (v2)
  {
    v4 = *(UIMenu (**)(uint64_t, uint64_t))(v0
                                                   + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider);
  }
  else
  {
    v5 = swift_allocObject(&unk_1011A99A0, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = *v1;
    v7 = v1[1];
    v4 = sub_1001CB0A0;
    *v1 = (uint64_t)sub_1001CB0A0;
    v1[1] = v5;
    swift_retain();
    sub_10000BF74(v6, v7);
  }
  sub_10000C128(v2, v3);
  return v4;
}

id sub_1001C63FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton);
  }
  else
  {
    v4 = sub_10012A31C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1001C6468(uint64_t *a1, _QWORD *a2, uint64_t (*a3)(uint64_t, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *a1;
  v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    v6 = *(id *)(v3 + *a1);
  }
  else
  {
    v7 = (void *)a3(v3, *a2);
    v8 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v7;
    v6 = v7;

    v5 = 0;
  }
  v9 = v5;
  return v6;
}

id sub_1001C64C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v0, "exitEditingMode");
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setAccessibilityIdentifier:", v4);

    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_1001C6584()
{
  void *v0;
  _BOOL4 v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = -[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0);
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  if (v1)
  {
    v3 = swift_allocObject(v2, 48, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100E250A0;
    *(_QWORD *)(v3 + 32) = sub_1001C62D8();
    v4 = sub_1001C6468(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton, &selRef_addLibraryItem, (uint64_t (*)(uint64_t, _QWORD))sub_100129630);
    *(_QWORD *)(v3 + 40) = v4;
  }
  else
  {
    v3 = swift_allocObject(v2, 56, 7);
    *(_OWORD *)(v3 + 16) = xmmword_100E25080;
    *(_QWORD *)(v3 + 32) = sub_1001C6468(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___dismissButtonIOS, &selRef_dismissTapped, (uint64_t (*)(uint64_t, _QWORD))sub_10012A070);
    *(_QWORD *)(v3 + 40) = sub_1001C62D8();
    v4 = sub_1001C6468(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton, &selRef_addLibraryItem, (uint64_t (*)(uint64_t, _QWORD))sub_100129630);
    *(_QWORD *)(v3 + 48) = v4;
  }
  specialized Array._endMutation()(v4);
  return v3;
}

UIMenu sub_1001C6764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *preferredElementSize;
  Swift::String v7;
  Swift::OpaquePointer v9;
  UIImage_optional v10;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, &v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    preferredElementSize = sub_1001C6808();

  }
  else
  {
    preferredElementSize = _swiftEmptyArrayStorage;
  }
  sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10.value.super.isa = 0;
  v10.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v7, (Swift::String_optional)0, v10, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v9);
}

_QWORD *sub_1001C6808()
{
  void *v0;
  void *v1;
  id v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_class *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  UIMenu v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  UIMenu v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  _QWORD *v20;

  v1 = v0;
  v2 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  v3 = objc_msgSend(v2, "isEditing");

  if (v3)
  {
    v4 = sub_100008B04((uint64_t *)&unk_101493B10);
    v5 = swift_allocObject(v4, 40, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100E23F50;
    v6 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionModeMenu, (uint64_t (*)(uint64_t))sub_1001C8DF8);
    *(_QWORD *)(v5 + 32) = v6;
    v20 = (_QWORD *)v5;
  }
  else
  {
    v20 = _swiftEmptyArrayStorage;
    if (!-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v1))
    {
      v7 = sub_1001C86C8();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v8 >= v9 >> 1)
      {
        v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v8 + 1, 1);
        v8 = v19;
      }
      v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized Array._endMutation()(v10);
    }
    v11.super.super.isa = sub_1001C8948().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11.super.super.isa);
    v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v13 >= v12 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
    v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11.super.super.isa);
    specialized Array._endMutation()(v14);
    v15.super.super.isa = sub_1001C8AF8().super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15.super.super.isa);
    v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v6 = (id)specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15.super.super.isa);
  }
  specialized Array._endMutation()(v6);
  return v20;
}

id sub_1001C69E8(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  NSString v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  Swift::String v12;

  v2 = objc_msgSend(objc_allocWithZone((Class)UISearchController), "initWithSearchResultsController:", 0);
  v3 = objc_msgSend(v2, "searchBar");
  objc_msgSend(v3, "setReturnKeyType:", 9);

  objc_msgSend(v2, "setSearchResultsUpdater:", a1);
  objc_msgSend(v2, "setObscuresBackgroundDuringPresentation:", 0);
  objc_msgSend(v2, "setHidesNavigationBarDuringPresentation:", 0);
  objc_msgSend(v2, "setAutomaticallyShowsCancelButton:", 1);
  v4 = v2;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setAccessibilityIdentifier:", v5);

  v6 = objc_msgSend(v4, "searchBar");
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v7._countAndFlagsBits = 0xD000000000000028;
  v12._countAndFlagsBits = 0xD000000000000042;
  v12._object = (void *)0x8000000100E50C60;
  v7._object = (void *)0x8000000100E50C10;
  v8._object = (void *)0x8000000100E50C40;
  v8._countAndFlagsBits = 0xD000000000000013;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v8, v12)._object;
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setPlaceholder:", v10, swift_bridgeObjectRelease(object).n128_f64[0]);

  return v4;
}

id sub_1001C6BCC(void *a1)
{
  id result;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;

  result = objc_msgSend(a1, "view");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v11 = objc_msgSend(objc_allocWithZone((Class)UICollectionViewLayout), "init");
    v12 = objc_msgSend(objc_allocWithZone((Class)UICollectionView), "initWithFrame:collectionViewLayout:", v11, v4, v6, v8, v10);

    v13 = (void *)objc_opt_self(UIColor);
    v14 = v12;
    v15 = objc_msgSend(v13, "clearColor");
    objc_msgSend(v14, "setBackgroundColor:", v15);

    v16 = objc_msgSend(v14, "layer");
    objc_msgSend(v16, "setAllowsGroupOpacity:", 0);

    objc_msgSend(v14, "setAllowsSelectionDuringEditing:", 0);
    objc_msgSend(v14, "setAllowsMultipleSelectionDuringEditing:", 1);
    objc_msgSend(v14, "_mapsui_resetLayoutMarginsWithPreservesSuperview:", 1);
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall LibraryPlacesViewController.viewDidLoad()()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_100008B04(&qword_101494070);
  *(_QWORD *)&v3 = __chkstk_darwin(v2).n128_u64[0];
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24.receiver = v0;
  v24.super_class = ObjectType;
  objc_msgSendSuper2(&v24, "viewDidLoad", v3);
  v6 = objc_msgSend(v0, "cardPresentationController");
  if (!v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = v6;
  objc_msgSend(v6, "setTakesAvailableHeight:", 1);

  v8 = objc_msgSend(v0, "cardPresentationController");
  if (!v8)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = v8;
  objc_msgSend(v8, "setPresentedModally:", 1);

  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v11 = v10;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setAccessibilityIdentifier:", v12);

  sub_1001C700C();
  sub_1001C7580();
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
  v14 = type metadata accessor for MainActor(0);
  v15 = static MainActor.shared.getter(v14);
  v16 = swift_allocObject(&unk_1011A9978, 32, 7);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = &protocol witness table for MainActor;
  sub_1001B0D54((uint64_t)v5, (uint64_t)&unk_10149F5C0, v16);
  swift_release();
  v17 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v18 = swift_allocObject(v17, 72, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100E22F40;
  if (qword_1014910E0 != -1)
    swift_once(&qword_1014910E0, sub_1001CBA20);
  v19 = *(_QWORD *)(static LibraryItemsCountManager.shared
                  + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
  if (v19)
    v19 = *(_QWORD *)(v19 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  *(_QWORD *)(v18 + 56) = &type metadata for Int;
  *(_QWORD *)(v18 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v18 + 32) = v19;
  String.init(format:_:)(6581285, 0xE300000000000000, v18);
  v21 = v20;
  v22 = (void *)objc_opt_self(GEOAPPortal);
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "captureUserAction:target:value:", 21, 140, v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

}

void sub_1001C700C()
{
  char *v0;
  char *v1;
  _BOOL4 v2;
  id v3;
  void *isa;
  char **v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  Class v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  objc_class *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  id v33;
  id v34;
  char *v35;
  char *v36;
  void *v37;
  char *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  objc_super v45;
  uint64_t v46;

  v1 = v0;
  v2 = -[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0);
  v3 = sub_1001C6204();
  if (v2)
  {
    isa = sub_10012A070((uint64_t)v0, (uint64_t)"dismissTapped");
    v5 = &selRef_setLeftBarButtonItem_;
  }
  else
  {
    v6 = sub_100008B04((uint64_t *)&unk_101493B10);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100E23F50;
    v8 = sub_1001C63FC();
    *(_QWORD *)(v7 + 32) = v8;
    v46 = v7;
    specialized Array._endMutation()(v8);
    sub_10000E4BC(0, (unint64_t *)&unk_10149F6B0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v7);
    v5 = &selRef_setLeftBarButtonItems_;
  }
  objc_msgSend(v3, *v5, isa);

  v9 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1001C69E8);
  objc_msgSend(v9, "setActive:", 1);

  v10 = sub_1001C6204();
  v11 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1001C69E8);
  objc_msgSend(v10, "setSearchController:", v11);

  v12 = sub_1001C6204();
  objc_msgSend(v12, "setHidesSearchBarWhenScrolling:", 0);

  v13 = sub_1001C6144();
  v14 = sub_1001C6204();
  objc_msgSend(v13, "pushNavigationItem:animated:", v14, 0);

  v15 = objc_msgSend(v1, "headerView");
  if (!v15)
  {
    __break(1u);
    goto LABEL_11;
  }
  v16 = v15;
  v17 = sub_1001C6144();
  objc_msgSend(v16, "addSubview:", v17);

  v18 = sub_1001C6204();
  v19 = sub_1001C6584();
  sub_10000E4BC(0, (unint64_t *)&unk_10149F6B0, UIBarButtonItem_ptr);
  v20 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "setRightBarButtonItems:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v21 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1001C69E8);
  v22 = objc_msgSend(v21, "searchBar");

  objc_msgSend(v22, "_setOverrideContentInsets:forRectEdges:", 10, 0.0, 16.0, 0.0, 16.0);
  v23 = objc_msgSend(v1, "contentView");
  if (!v23)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v24 = v23;
  v25 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  objc_msgSend(v24, "addSubview:", v25);

  v26 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v27 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  v28 = (objc_class *)type metadata accessor for LibraryPlacesCollectionViewManagerConfiguration();
  v29 = (char *)objc_allocWithZone(v28);
  v30 = &v29[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
  *((_QWORD *)v30 + 1) = 0;
  swift_unknownObjectWeakInit(v30);
  swift_unknownObjectWeakInit(&v29[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_searchController]);
  *(_QWORD *)&v29[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView] = v27;
  v45.receiver = v29;
  v45.super_class = v28;
  v31 = (char *)objc_msgSendSuper2(&v45, "init");
  v32 = &v31[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
  *((_QWORD *)v32 + 1) = &protocol witness table for LibraryPlacesViewController;
  swift_unknownObjectWeakAssign(v32, v1);
  v33 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1001C69E8);
  swift_unknownObjectWeakAssign(&v31[OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_searchController], v33);

  LOBYTE(v33) = v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType];
  LOBYTE(v29) = v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType];
  v34 = objc_allocWithZone((Class)type metadata accessor for LibraryPlacesCollectionViewManager());
  v35 = v31;
  v36 = sub_1001C3DA8(v35, (char)v29, (char)v33);
  v37 = *(void **)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager] = v36;
  v38 = v36;

  v39 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  v40 = sub_1001C3558();
  objc_msgSend(v39, "setDataSource:", v40);

  v41 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  if ((v38[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType] & 1) != 0)
    v42 = *(id *)&v38[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_gridLayout];
  else
    v42 = sub_1001C36A4();
  v43 = v42;
  objc_msgSend(v41, "setCollectionViewLayout:", v42);

  v44 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  objc_msgSend(v44, "setDelegate:", v1);

}

void sub_1001C7580()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  Class isa;

  v1 = objc_msgSend(v0, "contentView");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100008B04((uint64_t *)&unk_101493B10);
    v4 = swift_allocObject(v3, 96, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100E247C0;
    v5 = sub_1001C6144();
    v6 = objc_msgSend(v5, "topAnchor");

    v7 = objc_msgSend(v0, "headerView");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "topAnchor");

      v10 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v9, 4.0);
      *(_QWORD *)(v4 + 32) = v10;
      v11 = sub_1001C6144();
      v12 = objc_msgSend(v11, "leadingAnchor");

      v13 = objc_msgSend(v0, "headerView");
      if (v13)
      {
        v14 = v13;
        v15 = objc_msgSend(v13, "leadingAnchor");

        v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
        *(_QWORD *)(v4 + 40) = v16;
        v17 = sub_1001C6144();
        v18 = objc_msgSend(v17, "trailingAnchor");

        v19 = objc_msgSend(v0, "headerView");
        if (v19)
        {
          v20 = v19;
          v21 = objc_msgSend(v19, "trailingAnchor");

          v22 = objc_msgSend(v18, "constraintEqualToAnchor:", v21);
          *(_QWORD *)(v4 + 48) = v22;
          v23 = sub_1001C6144();
          v24 = objc_msgSend(v23, "bottomAnchor");

          v25 = objc_msgSend(v0, "headerView");
          if (v25)
          {
            v26 = v25;
            v46 = (void *)objc_opt_self(NSLayoutConstraint);
            v27 = objc_msgSend(v26, "bottomAnchor");

            v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);
            *(_QWORD *)(v4 + 56) = v28;
            v29 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
            v30 = objc_msgSend(v29, "topAnchor");

            v31 = objc_msgSend(v2, "topAnchor");
            v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

            *(_QWORD *)(v4 + 64) = v32;
            v33 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
            v34 = objc_msgSend(v33, "leadingAnchor");

            v35 = objc_msgSend(v2, "leadingAnchor");
            v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

            *(_QWORD *)(v4 + 72) = v36;
            v37 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
            v38 = objc_msgSend(v37, "trailingAnchor");

            v39 = objc_msgSend(v2, "trailingAnchor");
            v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

            *(_QWORD *)(v4 + 80) = v40;
            v41 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
            v42 = objc_msgSend(v41, "bottomAnchor");

            v43 = objc_msgSend(v2, "bottomAnchor");
            v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

            *(_QWORD *)(v4 + 88) = v44;
            specialized Array._endMutation()(v45);
            sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v46, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

            return;
          }
          goto LABEL_11;
        }
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

uint64_t sub_1001C7ADC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[4] = v3;
  v1[5] = v4;
  return swift_task_switch(sub_1001C7B48, v3, v4);
}

uint64_t sub_1001C7B48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  type metadata accessor for MapsSyncService(0);
  *(_QWORD *)(v0 + 48) = static MapsSyncService.shared.getter();
  v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of MapsSyncService.prepareLibrary()
                         + async function pointer to dispatch thunk of MapsSyncService.prepareLibrary());
  v1 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MapsSyncService.prepareLibrary()
                                  + 1));
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1001C7BB8;
  return v3();
}

uint64_t sub_1001C7BB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *v1;
  v4 = *(void **)(*v1 + 48);
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);

  if (v0)
  {
    swift_errorRelease(v0);
    v5 = *(_QWORD *)(v2 + 32);
    v6 = *(_QWORD *)(v2 + 40);
    v7 = sub_1001CB18C;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 32);
    v6 = *(_QWORD *)(v2 + 40);
    v7 = sub_1001C7C30;
  }
  return swift_task_switch(v7, v5, v6);
}

uint64_t sub_1001C7C30()
{
  uint64_t v0;
  uint64_t v1;
  BOOL *v2;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(BOOL **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  *v2 = v1 != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001C7C70()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001C7C94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10149F5BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000DD08;
  return sub_1001C7ADC(a1);
}

void sub_1001C7DF4(char a1)
{
  uint64_t v1;
  int v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _BYTE *v7;
  id v8;
  id v9;
  void *v10;
  _BYTE *v11;
  id v12;
  void *v13;
  id v14;

  v2 = a1 & 1;
  if ((((v2 == 0) ^ *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType)) & 1) == 0)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType) = v2;
    v3 = *(_BYTE **)(v1 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v3)
    {
      v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_layoutType] = v2;
      v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_configuration];
      v5 = OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView;
      v6 = *(void **)(v4 + OBJC_IVAR____TtC4Maps47LibraryPlacesCollectionViewManagerConfiguration_collectionView);
      v14 = v3;
      if (v2)
      {
        v10 = *(void **)&v3[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_gridLayout];
        v11 = v3;
        v12 = v6;
        v9 = v10;
      }
      else
      {
        v7 = v3;
        v8 = v6;
        v9 = sub_1001C36A4();
      }
      v13 = v9;
      objc_msgSend(v6, "setCollectionViewLayout:animated:", v9, 0);

      objc_msgSend(*(id *)(v4 + v5), "reloadData");
    }
  }
}

void sub_1001C7F00()
{
  char *v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Class isa;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  Class v17;
  id v18;
  id v19;
  id v20;
  Swift::String v21;

  if (!-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0))
  {
    v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
    if (v1)
      *(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode) = 1;
    v2 = sub_1001C6204();
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v21._countAndFlagsBits = 0xD000000000000053;
    v21._object = (void *)0x8000000100E50B90;
    v3._object = (void *)0x8000000100E50B70;
    v3._countAndFlagsBits = 0xD00000000000001BLL;
    v4._countAndFlagsBits = 0x50207463656C6553;
    v4._object = (void *)0xED0000736563616CLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v4, v21)._object;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "setTitle:", v6, swift_bridgeObjectRelease(object).n128_f64[0]);

    v7 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
    objc_msgSend(v7, "setEditing:", 1);

    v8 = sub_1001C6204();
    v9 = sub_100008B04((uint64_t *)&unk_101493B10);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100E23F50;
    v11 = sub_1001C62D8();
    *(_QWORD *)(v10 + 32) = v11;
    specialized Array._endMutation()(v11);
    sub_10000E4BC(0, (unint64_t *)&unk_10149F6B0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setRightBarButtonItems:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

    v13 = sub_1001C6204();
    v14 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100E23F50;
    v15 = sub_1001C64C8();
    *(_QWORD *)(v14 + 32) = v15;
    specialized Array._endMutation()(v15);
    v16 = v14;
    v17 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "setLeftBarButtonItems:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

    v18 = sub_1001C62D8();
    objc_msgSend(v18, "setEnabled:", 0);

    v19 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1001C69E8);
    v20 = objc_msgSend(v19, "searchBar");

    objc_msgSend(v20, "setEnabled:", 0);
  }
}

void sub_1001C8200()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  id v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  uint64_t v11;
  Class v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  v1 = v0;
  if (!-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v0))
  {
    v2 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
    objc_msgSend(v2, "setEditing:", 0);

    v3 = sub_1001C6204();
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setTitle:", v4);

    v5 = sub_1001C6204();
    v6 = sub_100008B04((uint64_t *)&unk_101493B10);
    v7 = swift_allocObject(v6, 40, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100E23F50;
    v8 = sub_1001C63FC();
    *(_QWORD *)(v7 + 32) = v8;
    specialized Array._endMutation()(v8);
    sub_10000E4BC(0, (unint64_t *)&unk_10149F6B0, UIBarButtonItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "setLeftBarButtonItems:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    v10 = sub_1001C6204();
    v11 = sub_1001C6584();
    v12 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "setRightBarButtonItems:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

    v13 = sub_1001C62D8();
    objc_msgSend(v13, "setEnabled:", (v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion] & 1) == 0);

    v14 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController, (uint64_t (*)(uint64_t))sub_1001C69E8);
    v15 = objc_msgSend(v14, "searchBar");

    objc_msgSend(v15, "setEnabled:", 1);
    v16 = *(void **)&v1[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
    if (v16)
    {
      v17 = v16;
      sub_1001C4DAC(0);

    }
  }
}

id sub_1001C8480()
{
  uint64_t v0;
  id result;
  void *v2;
  uint64_t v3;
  id v4;
  _BYTE v5[24];

  result = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "captureUserAction:onTarget:eventValue:", 469, 140, 0);

    v3 = v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate;
    swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate, v5, 0, 0);
    result = (id)swift_unknownObjectWeakLoadStrong(v3);
    if (result)
    {
      v4 = result;
      objc_msgSend(result, "viewControllerShowAddItemsFromACToLibraryView:", v0);
      return (id)swift_unknownObjectRelease(v4);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s4Maps27LibraryPlacesViewControllerC010collectionD0_17didDeselectItemAtySo012UICollectionD0C_10Foundation9IndexPathVtF_0()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  char v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  id v10;

  v1 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC);
  v2 = objc_msgSend(v1, "isEditing");

  if (v2)
  {
    v3 = *(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion);
    v10 = sub_1001C62D8();
    if ((v3 & 1) != 0
      || (v4 = sub_100125600(&OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_1001C6BCC), v5 = objc_msgSend(v4, "indexPathsForSelectedItems"), v4, !v5))
    {
      v9 = 0;
    }
    else
    {
      v6 = type metadata accessor for IndexPath(0);
      v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

      v8 = *(_QWORD *)(v7 + 16);
      swift_bridgeObjectRelease(v7);
      v9 = v8 != 0;
    }
    objc_msgSend(v10, "setEnabled:", v9);

  }
}

void sub_1001C866C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion) = 0;
    sub_1001C8200();

  }
}

objc_class *sub_1001C86C8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  NSString v8;
  id v9;
  uint64_t v10;
  id v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  UIMenu v16;
  void *v17;
  id v18;
  Swift::OpaquePointer v20;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v22;
  Swift::String v23;

  v1 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu);
  if (v2)
  {
    v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu);
  }
  else
  {
    v4 = v0;
    sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v5._countAndFlagsBits = 0xD000000000000017;
    v23._countAndFlagsBits = 0xD000000000000040;
    v23._object = (void *)0x8000000100E50AE0;
    v5._object = (void *)0x8000000100E50AC0;
    v6._countAndFlagsBits = 0x7463656C6553;
    v6._object = (void *)0xE600000000000000;
    v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v6, v23);
    v8 = String._bridgeToObjectiveC()();
    v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v8);

    v10 = swift_allocObject(&unk_1011A99A0, 24, 7);
    swift_unknownObjectWeakInit(v10 + 16);
    v11 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v7._countAndFlagsBits, v7._object, 0, 0, v9, 0, 0, 0, 0, 0, 0, sub_1001CAECC, v10);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "setAccessibilityIdentifier:", v12);

    sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
    v13 = sub_100008B04((uint64_t *)&unk_101493B10);
    v14 = swift_allocObject(v13, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v14 + 32) = v11;
    preferredElementSize = v14;
    specialized Array._endMutation()(v14);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v22.value.super.isa = 0;
    v22.is_nil = 0;
    v16.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v15, (Swift::String_optional)0, v22, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v20).super.super.isa;
    v17 = *(void **)(v4 + v1);
    *(UIMenu *)(v4 + v1) = v16;
    v3 = v16.super.super.isa;

    v2 = 0;
  }
  v18 = v2;
  return v3;
}

UIMenu sub_1001C8948()
{
  void *v0;
  id v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  UIMenuElementSize preferredElementSize;
  uint64_t v9;
  uint64_t v10;
  Swift::OpaquePointer v11;
  UIImage_optional v12;
  Swift::String v13;

  v1 = v0;
  v2 = (uint64_t)sub_1001CAED4((uint64_t)&off_10119A820, (uint64_t)v1);

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v13._countAndFlagsBits = 0xD000000000000050;
  v13._object = (void *)0x8000000100E50F90;
  v3._object = (void *)0x8000000100E50F70;
  v3._countAndFlagsBits = 0xD00000000000001CLL;
  v4._countAndFlagsBits = 2003134806;
  v4._object = (void *)0xE400000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v4, v13);
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    v10 = sub_10000E4BC(0, &qword_10149F6C0, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v2);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v9, v10);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v6);
    sub_10000E4BC(0, &qword_10149F6C0, UIMenuElement_ptr);
    preferredElementSize = v2;
  }
  swift_bridgeObjectRelease(v2);
  sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
  v12.value.super.isa = 0;
  v12.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v5, (Swift::String_optional)0, v12, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v11);
}

UIMenu sub_1001C8AF8()
{
  void *v0;
  uint64_t v1;
  _QWORD *inited;
  id v3;
  void *v4;
  unsigned int v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  UIMenuElementSize preferredElementSize;
  uint64_t v15;
  uint64_t v16;
  Swift::OpaquePointer v17;
  _BYTE v18[40];
  UIImage_optional v19;
  Swift::String v20;

  v1 = sub_100008B04(&qword_101498A00);
  inited = (_QWORD *)swift_initStackObject(v1, v18);
  *((_OWORD *)inited + 1) = xmmword_100E22F70;
  *((_WORD *)inited + 16) = 2;
  v3 = objc_msgSend((id)objc_opt_self(MKLocationManager), "sharedLocationManager");
  if (!v3)
    __break(1u);
  v4 = v3;
  v5 = objc_msgSend(v3, "isAuthorizedForPreciseLocation");

  if (v5)
  {
    inited = sub_1000A918C((_QWORD *)1, 3, 1, inited);
    inited[2] = 3;
    *((_BYTE *)inited + 34) = 1;
  }
  v6 = v0;
  swift_bridgeObjectRetain(inited);
  v8 = (uint64_t)sub_1001CAFBC(v7, (uint64_t)v6);
  swift_bridgeObjectRelease_n(inited, 2);

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v20._countAndFlagsBits = 0xD00000000000003FLL;
  v20._object = (void *)0x8000000100E50E00;
  v9._object = (void *)0x8000000100E50DE0;
  v9._countAndFlagsBits = 0xD000000000000018;
  v10._countAndFlagsBits = 0x79622074726F53;
  v10._object = (void *)0xE700000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v10, v20);
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v15 = v8;
    else
      v15 = v8 & 0xFFFFFFFFFFFFFF8;
    v16 = sub_10000E4BC(0, &qword_10149F6C0, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v8);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v15, v16);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    swift_bridgeObjectRetain(v8);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v12);
    sub_10000E4BC(0, &qword_10149F6C0, UIMenuElement_ptr);
    preferredElementSize = v8;
  }
  swift_bridgeObjectRelease(v8);
  sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
  v19.value.super.isa = 0;
  v19.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v19, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v17);
}

UIMenu sub_1001C8DF8()
{
  Swift::String v0;
  Swift::String v1;
  Swift::String v2;
  NSString v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  NSString v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  NSString v12;
  id v13;
  uint64_t v14;
  id v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  Swift::String v19;
  Swift::OpaquePointer children;
  UIMenuElementSize preferredElementSize;
  UIImage_optional v23;
  Swift::String v24;
  Swift::String v25;

  sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v0._countAndFlagsBits = 0xD000000000000018;
  v24._countAndFlagsBits = 0xD000000000000023;
  v24._object = (void *)0x8000000100E50CF0;
  v0._object = (void *)0x8000000100E50CD0;
  v1._countAndFlagsBits = 0x61206F7420646441;
  v1._object = (void *)0xEE00656469754720;
  v2 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v1, v24);
  v3 = String._bridgeToObjectiveC()();
  v4 = (void *)objc_opt_self(UIImage);
  v5 = objc_msgSend(v4, "systemImageNamed:", v3);

  v6 = swift_allocObject(&unk_1011A99A0, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v2._countAndFlagsBits, v2._object, 0, 0, v5, 0, 0, 0, 0, 0, 0, sub_1001CB0A8, v6);
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setAccessibilityIdentifier:", v8);

  v9._countAndFlagsBits = 0xD00000000000001DLL;
  v25._countAndFlagsBits = 0xD00000000000002DLL;
  v25._object = (void *)0x8000000100E50D80;
  v9._object = (void *)0x8000000100E50D40;
  v10._object = (void *)0x8000000100E50D60;
  v10._countAndFlagsBits = 0xD000000000000013;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v10, v25);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v4, "systemImageNamed:", v12);

  v14 = swift_allocObject(&unk_1011A99A0, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v11._countAndFlagsBits, v11._object, 0, 0, v13, 0, 0, 0, 0, 2, 0, sub_1001CB0B0, v14);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setAccessibilityIdentifier:", v16);

  sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
  v17 = sub_100008B04((uint64_t *)&unk_101493B10);
  v18 = swift_allocObject(v17, 48, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100E250A0;
  *(_QWORD *)(v18 + 32) = v7;
  *(_QWORD *)(v18 + 40) = v15;
  preferredElementSize = v18;
  specialized Array._endMutation()(v18);
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v23.value.super.isa = 0;
  v23.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v19, (Swift::String_optional)0, v23, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children);
}

void sub_1001C919C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v5)
    {
      v6 = v5;
      sub_1001C4BE0();

      v4 = v6;
    }

  }
}

void sub_1001C920C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion) = 1;
    _s4Maps27LibraryPlacesViewControllerC010collectionD0_17didDeselectItemAtySo012UICollectionD0C_10Foundation9IndexPathVtF_0();
    v5 = *(void **)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
    if (v5)
    {
      v6 = swift_allocObject(&unk_1011A99A0, 24, 7);
      swift_unknownObjectWeakInit(v6 + 16);
      v7 = v5;
      swift_retain();
      sub_1001C44D4(v4, (uint64_t)sub_1001CB0B8, v6);

      swift_release_n(v6, 2);
    }
    else
    {

    }
  }
}

void sub_1001C934C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1001C7F00();

  }
}

void sub_1001C939C(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  void *object;
  NSString v18;

  v5 = *a1;
  v6 = sub_1001C95CC(*a1);
  v8 = v7;
  if (v5)
    v9 = 0xEF3278322E646972;
  else
    v9 = 0xEB0000000074656CLL;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

  v12 = (v5 ^ ~*(_BYTE *)(a2
                                                          + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType)) & 1;
  sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
  v13 = swift_allocObject(&unk_1011A99A0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = swift_allocObject(&unk_1011A9BB8, 25, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_BYTE *)(v14 + 24) = v5;
  v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6, v8, 0, 0, v11, 0, 0, 0, 0, 0, v12, sub_1001CB0F0, v14);
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(0xE000000000000000);
  v16._countAndFlagsBits = sub_1001C9730(*(_BYTE *)(a2 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType));
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setAccessibilityIdentifier:", v18, swift_bridgeObjectRelease(0x8000000100E50FF0).n128_f64[0]);

  *a3 = v15;
}

uint64_t sub_1001C95CC(char a1)
{
  NSBundle v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v8;

  if ((a1 & 1) != 0)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v1.super.isa = (Class)qword_1014D4B80;
    v2 = 0xD000000000000037;
    v8 = 0x8000000100E51030;
    v3 = 0x8000000100E51010;
    v4 = 0xD000000000000015;
    v5 = 1684632135;
  }
  else
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v1.super.isa = (Class)qword_1014D4B80;
    v2 = 0xD000000000000037;
    v8 = 0x8000000100E51090;
    v3 = 0x8000000100E51070;
    v4 = 0xD000000000000015;
    v5 = 1953720652;
  }
  v6 = 0xE400000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v2)._countAndFlagsBits;
}

void sub_1001C96D8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1001C7DF4(a3 & 1);

  }
}

uint64_t sub_1001C9730(char a1)
{
  NSBundle v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v8;

  if (!a1)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v1.super.isa = (Class)qword_1014D4B80;
    v3 = 0xD000000000000030;
    v8 = 0x8000000100E50F30;
    v4 = 0x8000000100E50F10;
    v2 = 0xD000000000000015;
    v5 = 1701667150;
    goto LABEL_12;
  }
  if (a1 != 1)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v1.super.isa = (Class)qword_1014D4B80;
    v3 = 0xD00000000000002FLL;
    v8 = 0x8000000100E50E80;
    v4 = 0x8000000100E50E60;
    v2 = 0xD000000000000015;
    v5 = 1702125892;
LABEL_12:
    v6 = 0xE400000000000000;
    return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
  }
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v1.super.isa = (Class)qword_1014D4B80;
  v2 = 0xD000000000000019;
  v3 = 0xD000000000000034;
  v8 = 0x8000000100E50ED0;
  v4 = 0x8000000100E50EB0;
  v5 = 0x65636E6174736944;
  v6 = 0xE800000000000000;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
}

void sub_1001C98D8(char *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  void *object;
  NSString v18;

  v5 = *a1;
  v7 = sub_1001C9730(*a1);
  if (v5)
    v8 = 0xE800000000000000;
  else
    v8 = 0xEE006362612E7461;
  v9 = v6;
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

  v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType) == v5;
  sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
  v13 = swift_allocObject(&unk_1011A99A0, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16);
  v14 = swift_allocObject(&unk_1011A9B90, 25, 7);
  *(_QWORD *)(v14 + 16) = v13;
  *(_BYTE *)(v14 + 24) = v5;
  v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v7, v9, 0, 0, v11, 0, 0, 0, 0, 0, v12, sub_1001CB0E4, v14);
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(0xE000000000000000);
  v16._countAndFlagsBits = sub_1001C9730(v5);
  object = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(object);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setAccessibilityIdentifier:", v18, swift_bridgeObjectRelease(0x8000000100E50E40).n128_f64[0]);

  *a3 = v15;
}

void sub_1001C9B14(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE *v7;
  _BYTE *v8;
  char v9[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType) != a3)
    {
      *(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType) = a3;
      v7 = *(_BYTE **)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
      if (v7)
      {
        v7[OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_sortType] = a3;
        v8 = v7;
        sub_1001CE140(a3);

        v6 = v8;
      }
    }

  }
}

id LibraryPlacesViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  _BYTE *v4;
  objc_class *ObjectType;
  _QWORD *v8;
  Swift::String *v9;
  uint64_t v10;
  char *v11;
  Swift::String v12;
  Swift::String v13;
  double v14;
  NSString v15;
  id v16;
  objc_super v18;
  Swift::String v19;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate]);
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager] = 0;
  v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType] = 2;
  v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType] = 0;
  v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___dismissButtonIOS] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton] = 0;
  v8 = &v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView] = 0;
  v9 = (Swift::String *)&v4[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_placesTitle];
  v10 = qword_101490ED0;
  v11 = v4;
  if (v10 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v19._countAndFlagsBits = 0xD000000000000024;
  v19._object = (void *)0x8000000100E400E0;
  v12._object = (void *)0x8000000100E400C0;
  v12._countAndFlagsBits = 0xD000000000000014;
  v13._countAndFlagsBits = 0x736563616C50;
  v13._object = (void *)0xE600000000000000;
  *v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v13, v19);
  *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionModeMenu] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu] = 0;

  if (a2)
  {
    v15 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v15 = 0;
  }
  v18.receiver = v11;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", v15, a3, v14);

  return v16;
}

id LibraryPlacesViewController.init(coder:)(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  objc_class *ObjectType;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String v9;
  Swift::String v10;
  id v11;
  objc_super v13;
  Swift::String v14;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager] = 0;
  v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_sortType] = 2;
  v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_layoutType] = 0;
  v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_hasPendingDeletion] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navBar] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___navItem] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___addButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___titleLabelButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___dismissButtonIOS] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___doneEditingButton] = 0;
  v5 = &v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___menuProvider];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___searchController] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___collectionView] = 0;
  v6 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_placesTitle;
  v7 = qword_101490ED0;
  v8 = v2;
  if (v7 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v14._countAndFlagsBits = 0xD000000000000024;
  v14._object = (void *)0x8000000100E400E0;
  v9._object = (void *)0x8000000100E400C0;
  v9._countAndFlagsBits = 0xD000000000000014;
  v10._countAndFlagsBits = 0x736563616C50;
  v10._object = (void *)0xE600000000000000;
  *(Swift::String *)&v8[v6] = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v10, v14);
  *(_QWORD *)&v8[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionModeMenu] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController____lazy_storage___selectionTriggerMenu] = 0;

  v13.receiver = v8;
  v13.super_class = ObjectType;
  v11 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);

  return v11;
}

Swift::Void __swiftcall LibraryPlacesViewController.updateSearchResults(for:)(UISearchController a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = type metadata accessor for DispatchTimeInterval(0);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = type metadata accessor for DispatchTime(0);
  v48 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v47 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v49 = (char *)&v44 - v10;
  v11 = type metadata accessor for DispatchQoS.QoSClass(0, v9);
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = -[objc_class searchBar](a1.super.super.super.isa, "searchBar", v15);
  v19 = objc_msgSend(v18, "text");

  if (v19)
  {
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

  }
  else
  {
    v20 = 0;
    v22 = 0;
  }
  v23 = OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_searchRequestDebouncer))
  {
    v24 = swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()(v24);
    swift_release();
  }
  v25 = swift_allocObject(&unk_1011A99A0, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = (_QWORD *)swift_allocObject(&unk_1011A99C8, 40, 7);
  v26[2] = v25;
  v26[3] = v20;
  v26[4] = v22;
  aBlock[4] = sub_1001CAC60;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011A99E0;
  v27 = _Block_copy(aBlock);
  v53 = _swiftEmptyArrayStorage;
  v28 = sub_10000E540();
  swift_retain();
  v29 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v30 = sub_10000E588();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v53, v29, v30, v14, v28);
  v31 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
  v32 = DispatchWorkItem.init(flags:block:)(v17, v27);
  swift_release();
  swift_release();
  *(_QWORD *)(v2 + v23) = v32;
  swift_retain();
  swift_release();
  sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v34 = v45;
  v33 = v46;
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v13, enum case for DispatchQoS.QoSClass.default(_:), v46);
  v35 = (void *)static OS_dispatch_queue.global(qos:)(v13);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v13, v33);
  v37 = v47;
  static DispatchTime.now()(v36, v38);
  *v6 = 200;
  v40 = v50;
  v39 = v51;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v50 + 104))(v6, enum case for DispatchTimeInterval.milliseconds(_:), v51);
  v41 = v49;
  + infix(_:_:)(v37, v6);
  (*(void (**)(_QWORD *, uint64_t))(v40 + 8))(v6, v39);
  v42 = *(void (**)(char *, uint64_t))(v48 + 8);
  v43 = v52;
  v42(v37, v52);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v41, v32);
  swift_release();

  v42(v41, v43);
}

void sub_1001CA564(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  id v9;
  _BYTE v10[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(void **)(Strong + OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager);
    if (v8)
    {
      v9 = v8;

      sub_1001CDFB4(a2, a3);
      v7 = v9;
    }

  }
}

void LibraryPlacesViewController.collectionView(_:didSelectItemAt:)(void *a1, char **a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  Class isa;
  void *v12;
  id v13;
  id v14;
  _QWORD *v15;
  char **v16;
  unint64_t v17;
  int v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char **v23;
  id v24;
  char *v25;
  void *Strong;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  NSString v34;
  double v35;
  char *v36;
  char *v37;
  char **v38;
  uint64_t v39;
  uint64_t v40;
  NSString v41;
  id v42;
  char *v43;
  __int128 v44[2];
  _QWORD v45[5];

  v3 = v2;
  v6 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "isEditing", v8))
  {
    _s4Maps27LibraryPlacesViewControllerC010collectionD0_17didDeselectItemAtySo012UICollectionD0C_10Foundation9IndexPathVtF_0();
    return;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);

  v12 = *(void **)&v3[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_collectionViewManager];
  if (v12)
  {
    v13 = v12;
    v14 = sub_1001C3558();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v14);

    v15 = (_QWORD *)NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v6);
    v16 = a2;
    v17 = IndexPath.section.getter(v15);
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < v15[2])
    {
      v18 = *((unsigned __int8 *)v15 + v17 + 32);
      v19 = swift_bridgeObjectRelease(v15);
      LOBYTE(v45[0]) = v18;
      v15 = (_QWORD *)NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(v45, v6, v19);
      v16 = a2;
      v20 = IndexPath.item.getter(v15);
      if ((v20 & 0x8000000000000000) == 0)
      {
        if (v20 < v15[2])
        {
          sub_10000C1FC((uint64_t)&v15[5 * v20 + 4], (uint64_t)v44, &qword_10149BB20);
          swift_bridgeObjectRelease(v15);
          sub_10000BE48(v44, (uint64_t)v45);
          if (v18 != 2)
            goto LABEL_20;
          sub_100084C44((uint64_t)v45, (uint64_t)v44);
          v21 = sub_100008B04(&qword_10149F308);
          v22 = type metadata accessor for LibraryListSavedItemCellModel();
          if (!swift_dynamicCast(&v43, v44, v21, v22, 6))
            goto LABEL_20;
          v15 = v43;
          if (v43[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16])
          {

LABEL_20:
            sub_10000BEAC(v45);
            (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
            return;
          }
          v23 = (char **)*(id *)&v43[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
          v24 = objc_msgSend(objc_allocWithZone((Class)SearchResult), "initWithMapItem:", v23);
          v25 = &v3[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate];
          swift_beginAccess(&v3[OBJC_IVAR____TtC4Maps27LibraryPlacesViewController_actionDelegate], v44, 0, 0);
          Strong = (void *)swift_unknownObjectWeakLoadStrong(v25);
          if (Strong)
          {
            v27 = Strong;
            v28 = objc_msgSend(Strong, "mapSelectionManager");
            swift_unknownObjectRelease(v27);
            objc_msgSend(v28, "injectAndSelectSearchResult:", v24);

          }
          v42 = v24;
          v29 = (void *)objc_opt_self(MKMapService);
          v30 = objc_msgSend(v29, "sharedService");
          if (v30)
          {
            v31 = v30;
            a2 = v23;
            v43 = (char *)objc_msgSend(v23, "_muid");
            dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
            v33 = v32;
            v34 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v35 = swift_bridgeObjectRelease(v33).n128_u64[0];
            v16 = &selRef_bookingsLoading;
            objc_msgSend(v31, "captureUserAction:onTarget:eventValue:", 478, 140, v34, v35);

            v36 = (char *)objc_msgSend(v29, "sharedService");
            if (v36)
            {
              v3 = v36;
              if (qword_1014910E0 == -1)
              {
LABEL_17:
                v37 = *(char **)(static LibraryItemsCountManager.shared
                               + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
                v38 = v16;
                if (v37)
                  v37 = *(char **)&v37[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount];
                v43 = v37;
                dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
                v40 = v39;
                v41 = String._bridgeToObjectiveC()();
                objc_msgSend(v3, v38[505], 2007, 0, v41, swift_bridgeObjectRelease(v40).n128_f64[0]);

                v13 = v41;
                goto LABEL_20;
              }
LABEL_26:
              swift_once(&qword_1014910E0, sub_1001CBA20);
              goto LABEL_17;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          return;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_24;
  }
}

uint64_t sub_1001CAC10()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CAC34()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001CAC60()
{
  uint64_t v0;

  sub_1001CA564(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_1001CAC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001CAC7C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t type metadata accessor for LibraryPlacesViewController()
{
  return objc_opt_self(_TtC4Maps27LibraryPlacesViewController);
}

uint64_t storeEnumTagSinglePayload for LibraryPlacesViewLayoutType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001CACF0 + 4 * byte_100E323A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001CAD24 + 4 * byte_100E323A0[v4]))();
}

uint64_t sub_1001CAD24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CAD2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001CAD34);
  return result;
}

uint64_t sub_1001CAD40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001CAD48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001CAD4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CAD54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPlacesViewLayoutType()
{
  return &type metadata for LibraryPlacesViewLayoutType;
}

uint64_t storeEnumTagSinglePayload for LibraryPlacesViewSortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001CADBC + 4 * byte_100E323AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001CADF0 + 4 * byte_100E323AA[v4]))();
}

uint64_t sub_1001CADF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CADF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001CAE00);
  return result;
}

uint64_t sub_1001CAE0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001CAE14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001CAE18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001CAE20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryPlacesViewSortType()
{
  return &type metadata for LibraryPlacesViewSortType;
}

unint64_t sub_1001CAE40()
{
  unint64_t result;

  result = qword_10149F688;
  if (!qword_10149F688)
  {
    result = swift_getWitnessTable(byte_100E3248C, &type metadata for LibraryPlacesViewSortType);
    atomic_store(result, (unint64_t *)&qword_10149F688);
  }
  return result;
}

unint64_t sub_1001CAE88()
{
  unint64_t result;

  result = qword_10149F690;
  if (!qword_10149F690)
  {
    result = swift_getWitnessTable(byte_100E324F4, &type metadata for LibraryPlacesViewLayoutType);
    atomic_store(result, (unint64_t *)&qword_10149F690);
  }
  return result;
}

void sub_1001CAECC(uint64_t a1)
{
  uint64_t v1;

  sub_1001C934C(a1, v1);
}

_QWORD *sub_1001CAED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *result;
  char *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v5)
  {
    v15 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    for (i = (char *)(a1 + 32); ; ++i)
    {
      v13 = *i;
      sub_1001C939C(&v13, a2, &v14);
      if (v3)
        break;
      v3 = 0;
      v10 = v14;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v11 = v15[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v10);
      specialized ContiguousArray._endMutation()(v12);
      if (!--v5)
        return v15;
    }
    return (_QWORD *)swift_release();
  }
  return result;
}

_QWORD *sub_1001CAFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *result;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;

  v3 = v2;
  v5 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v5)
  {
    v16 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v5);
    v8 = (char *)(a1 + 32);
    while (1)
    {
      v9 = *v8++;
      v14 = v9;
      sub_1001C98D8(&v14, a2, &v15);
      if (v3)
        break;
      v3 = 0;
      v11 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v12 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v12);
      v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v11);
      specialized ContiguousArray._endMutation()(v13);
      if (!--v5)
        return v16;
    }
    return (_QWORD *)swift_release();
  }
  return result;
}

UIMenu sub_1001CB0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001C6764(a1, a2, v2);
}

void sub_1001CB0A8(uint64_t a1)
{
  uint64_t v1;

  sub_1001C919C(a1, v1);
}

void sub_1001CB0B0(uint64_t a1)
{
  uint64_t v1;

  sub_1001C920C(a1, v1);
}

void sub_1001CB0B8()
{
  uint64_t v0;

  sub_1001C866C(v0);
}

uint64_t sub_1001CB0C0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1001CB0E4(uint64_t a1)
{
  uint64_t v1;

  sub_1001C9B14(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_1001CB0F0(uint64_t a1)
{
  uint64_t v1;

  sub_1001C96D8(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1001CB0FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_10149F5BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000C0E0;
  return sub_1001C7ADC(a1);
}

uint64_t sub_1001CB160()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t *LibraryItemsCountManager.shared.unsafeMutableAddressor()
{
  if (qword_1014910E0 != -1)
    swift_once(&qword_1014910E0, sub_1001CBA20);
  return &static LibraryItemsCountManager.shared;
}

uint64_t sub_1001CB1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, __n128);
  __n128 v10;
  uint64_t v12;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, __n128))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  v10 = swift_retain(v8);
  v9(v7, v10);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1001CB398()
{
  uint64_t v0;
  int IsEnabled_HikingiOS;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  BOOL v5;
  uint64_t v6;
  BOOL v7;

  IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  result = v2 + v3;
  v5 = __OFADD__(v2, v3);
  if (IsEnabled_HikingiOS)
  {
    if (v5)
    {
      __break(1u);
      goto LABEL_12;
    }
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
    v7 = __OFADD__(result, v6);
    result += v6;
    if (!v7)
      return result;
    __break(1u);
  }
  if (v5)
LABEL_12:
    __break(1u);
  return result;
}

Swift::String __swiftcall LibraryItemsCount.descriptionForLibrarySectionInHome()()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  NSString v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  NSString v29;
  NSString v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void *v49;
  Swift::String result;
  uint64_t v51;
  Swift::String v52;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v1 = (void *)qword_1014D4B80;
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "localizedStringForKey:value:table:", v2, v3, 0);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v9 = swift_allocObject(v8, 72, 7);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
  *(_OWORD *)(v9 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v9 + 56) = &type metadata for Int;
  *(_QWORD *)(v9 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v9 + 32) = v10;
  v11 = static String.localizedStringWithFormat(_:_:)(v5, v7, v9);
  v51 = v12;
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v9);
  v13 = (void *)qword_1014D4B80;
  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v13, "localizedStringForKey:value:table:", v14, v15, 0);

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20 = swift_allocObject(v8, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100E22F40;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  *(_QWORD *)(v20 + 56) = &type metadata for Int;
  *(_QWORD *)(v20 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v20 + 32) = v21;
  v22 = static String.localizedStringWithFormat(_:_:)(v17, v19, v20);
  v24 = v23;
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v20);
  v25 = (void *)qword_1014D4B80;
  v52._object = (void *)0xE900000000000072;
  v26._countAndFlagsBits = 0x20A280E220;
  v26._object = (void *)0xA500000000000000;
  v27._countAndFlagsBits = 0x20A280E220;
  v27._object = (void *)0xA500000000000000;
  v52._countAndFlagsBits = 0x6574696D696C6544;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v27, v52);
  if (MapsFeature_IsEnabled_HikingiOS())
  {
    v29 = String._bridgeToObjectiveC()();
    v30 = String._bridgeToObjectiveC()();
    v31 = objc_msgSend(v25, "localizedStringForKey:value:table:", v29, v30, 0);

    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v34 = v33;

    v35 = swift_allocObject(v8, 72, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100E22F40;
    v36 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
    *(_QWORD *)(v35 + 56) = &type metadata for Int;
    *(_QWORD *)(v35 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v35 + 32) = v36;
    v37 = static String.localizedStringWithFormat(_:_:)(v32, v34, v35);
    v39 = v38;
    swift_bridgeObjectRelease(v34);
    swift_bridgeObjectRelease(v35);
    v40 = sub_100008B04(&qword_101492BF0);
    v41 = swift_allocObject(v40, 80, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100E22F50;
    *(_QWORD *)(v41 + 32) = v22;
    *(_QWORD *)(v41 + 40) = v24;
    *(_QWORD *)(v41 + 48) = v11;
    *(_QWORD *)(v41 + 56) = v51;
    *(_QWORD *)(v41 + 64) = v37;
    *(_QWORD *)(v41 + 72) = v39;
  }
  else
  {
    v42 = sub_100008B04(&qword_101492BF0);
    v41 = swift_allocObject(v42, 64, 7);
    *(_OWORD *)(v41 + 16) = xmmword_100E22F70;
    *(_QWORD *)(v41 + 32) = v22;
    *(_QWORD *)(v41 + 40) = v24;
    *(_QWORD *)(v41 + 48) = v11;
    *(_QWORD *)(v41 + 56) = v51;
  }
  v43 = sub_100008B04((uint64_t *)&unk_101492C00);
  v44 = sub_1001BA43C();
  v45 = BidirectionalCollection<>.joined(separator:)(v28._countAndFlagsBits, v28._object, v43, v44);
  v47 = v46;
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v28._object);
  v48 = v45;
  v49 = v47;
  result._object = v49;
  result._countAndFlagsBits = v48;
  return result;
}

id sub_1001CB8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  objc_super v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedPlacesCount);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
  v5 = (objc_class *)type metadata accessor for LibraryItemsCount();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount] = v1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedPlacesCount] = v2;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount] = v3;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount] = v4;
  v8.receiver = v6;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, "init");
}

void LibraryItemsCount.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.LibraryItemsCount", 22, "init()", 6, 0);
  __break(1u);
}

id LibraryItemsCount.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryItemsCount();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1001CBA20()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for LibraryItemsCountManager()), "init");
  static LibraryItemsCountManager.shared = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for LibraryItemsCount()
{
  return objc_opt_self(_TtC4Maps17LibraryItemsCount);
}

id static LibraryItemsCountManager.shared.getter()
{
  if (qword_1014910E0 != -1)
    swift_once(&qword_1014910E0, sub_1001CBA20);
  return (id)static LibraryItemsCountManager.shared;
}

_BYTE *sub_1001CBB30()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  id v4;
  void *v5;
  _BYTE *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD v15[6];
  objc_super v16;

  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observerToken] = 0;
  v1 = OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers;
  v2 = objc_allocWithZone((Class)GEOObserverHashTable);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "initWithProtocol:queue:", &OBJC_PROTOCOL____TtP4Maps32LibraryItemsCountManagerObserver_, 0);
  v3[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching] = 0;

  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for LibraryItemsCountManager();
  v4 = objc_msgSendSuper2(&v16, "init");
  v5 = (void *)objc_opt_self(CollectionManager);
  v6 = v4;
  v7 = objc_msgSend(v5, "sharedManager");
  objc_msgSend(v7, "addObserver:", v6);

  v8 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v9 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v10 = swift_allocObject(&unk_1011A9CA0, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v15[4] = sub_1001CD5AC;
  v15[5] = v10;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_1001CB1D8;
  v15[3] = &unk_1011A9CB8;
  v11 = _Block_copy(v15);
  swift_release();
  v12 = objc_msgSend(v8, "addObserverForName:object:queue:usingBlock:", CFSTR("MapsSavedRoutesDidUpdateNotification"), 0, v9, v11);
  _Block_release(v11);

  v13 = *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observerToken];
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observerToken] = v12;
  swift_unknownObjectRelease(v13);
  if ((v6[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching] & 1) == 0)
  {
    v6[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching] = 1;
    sub_1001CC100();
  }

  return v6;
}

void sub_1001CBD68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) & 1) == 0)
    {
      *(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) = 1;
      sub_1001CC100();
    }

  }
}

id LibraryItemsCountManager.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  objc_super v5;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observerToken];
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for LibraryItemsCountManager();
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t type metadata accessor for LibraryItemsCountManager()
{
  return objc_opt_self(_TtC4Maps24LibraryItemsCountManager);
}

id LibraryItemsCountManager.registerObserver(_:)(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType();
  return sub_1001CD550(a1, v1);
}

id LibraryItemsCountManager.unregisterObserver(_:)(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType();
  return sub_1001CD56C(a1, v1);
}

void sub_1001CC018(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, id, uint64_t))
{
  uint64_t ObjectType;
  id v8;

  ObjectType = swift_getObjectType(a3);
  swift_unknownObjectRetain(a3);
  v8 = a1;
  a4(a3, v8, ObjectType);
  swift_unknownObjectRelease(a3);

}

Swift::Void __swiftcall LibraryItemsCountManager.setNeedsRefresh()()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) = 1;
    sub_1001CC100();
  }
}

uint64_t sub_1001CC100()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[4];

  v1 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_1011A9CF0, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v0;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v9 = v0;
  if (v8 == 1)
  {
    sub_10000DADC((uint64_t)v3);
    v10 = 0;
    v11 = 0;
    v12 = 7168;
  }
  else
  {
    v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v12 = v13 | 0x1C00;
    v14 = *v7;
    if (*v7)
    {
      v15 = v6[3];
      ObjectType = swift_getObjectType(*v7);
      swift_unknownObjectRetain(v14);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v11 = v17;
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v18 = swift_allocObject(&unk_1011A9D18, 32, 7);
  *(_QWORD *)(v18 + 16) = &unk_10149F770;
  *(_QWORD *)(v18 + 24) = v6;
  if (v11 | v10)
  {
    v21[0] = 0;
    v21[1] = 0;
    v19 = v21;
    v21[2] = v10;
    v21[3] = v11;
  }
  else
  {
    v19 = 0;
  }
  swift_task_create(v12, v19, (char *)&type metadata for () + 8, &unk_10149AAB0, v18);
  return swift_release();
}

uint64_t sub_1001CC2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  v4[4] = a4;
  v5 = sub_100008B04(&qword_101494070);
  v4[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)swift_task_alloc(dword_10149F77C);
  v4[6] = v6;
  *v6 = v4;
  v6[1] = sub_1001CC348;
  return swift_task_switch(sub_1001CD674, 0, 0);
}

uint64_t sub_1001CC348(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  *(_QWORD *)(*(_QWORD *)v1 + 56) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001CC3A4, 0, 0);
}

uint64_t sub_1001CC3A4()
{
  objc_super *v0;
  Class super_class;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  super_class = v0[3].super_class;
  if (super_class)
  {
    v2 = *(_QWORD *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount);
    v3 = *(_QWORD *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedPlacesCount);
    v4 = *(_QWORD *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount);
    v5 = *(_QWORD *)((char *)super_class + OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount);
    v6 = (objc_class *)type metadata accessor for LibraryItemsCount();
    v7 = (char *)objc_allocWithZone(v6);
    *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount] = v2;
    *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedPlacesCount] = v3;
    *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount] = v4;
    *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount] = v5;
    v0[1].receiver = v7;
    v0[1].super_class = v6;
    v8 = objc_msgSendSuper2(v0 + 1, "init");
  }
  else
  {
    v8 = 0;
  }
  v0[4].receiver = v8;
  v9 = type metadata accessor for MainActor(0);
  v0[4].super_class = (Class)static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001CC4B4, v10, v11);
}

uint64_t sub_1001CC4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_isFetching) = 0;
  if (v1)
  {
    v3 = *(void **)(v0 + 56);
    v4 = *(_QWORD *)(v0 + 32);
    v5 = *(void **)(v4 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts) = v3;
    v6 = v3;

    sub_1001CC5EC();
  }
  return swift_task_switch(sub_1001CC52C, 0, 0);
}

uint64_t sub_1001CC52C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 40);
    v3 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
    v4 = (_QWORD *)swift_allocObject(&unk_1011A9D40, 40, 7);
    v4[2] = 0;
    v4[3] = 0;
    v4[4] = v1;
    v5 = v1;
    sub_1001B0C08(v2, (uint64_t)&unk_10149F788, (uint64_t)v4);
    swift_release();

  }
  v6 = *(_QWORD *)(v0 + 40);

  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1001CC5EC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double result;
  id v11;
  _BYTE v12[32];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_lastFetchedCounts);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers);
    v3 = v1;
    v4 = objc_msgSend(v2, "allObservers");
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, (char *)&type metadata for Any + 8);

    v6 = *(_QWORD *)(v5 + 16);
    if (v6)
    {
      v7 = v5 + 32;
      do
      {
        sub_100011E20(v7, (uint64_t)v12);
        v8 = sub_100008B04(&qword_10149F760);
        if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, v8, 6) & 1) != 0)
        {
          v9 = v11;
          objc_msgSend(v11, "libraryItemsCountManager:didUpdateCounts:", v0, v3);
          swift_unknownObjectRelease(v9);
        }
        v7 += 32;
        --v6;
      }
      while (v6);
    }

    *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001CC710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 56) = a4;
  return swift_task_switch(sub_1001CC728, 0, 0);
}

id sub_1001CC728()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __n128 v6;
  uint64_t v7;
  objc_class *Options;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t);

  result = objc_msgSend((id)objc_opt_self(GEOAPSharedStateData), "sharedData");
  *(_QWORD *)(v0 + 64) = result;
  if (!result)
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  v2 = *(_QWORD *)(v0 + 56);
  v3 = OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount;
  *(_QWORD *)(v0 + 72) = OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount;
  v4 = *(_QWORD *)(v2 + v3);
  if (v4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v4 <= 0x7FFFFFFF)
  {
    objc_msgSend(result, "setMapFeatureLibrarySavedPlacesCount:");
    *(_QWORD *)(v0 + 80) = type metadata accessor for MapsSyncQueryPredicate(0);
    v5 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000014, 0x8000000100E51300, _swiftEmptyArrayStorage);
    *(_QWORD *)(v0 + 88) = v5;
    v7 = type metadata accessor for CollectionPlaceItemRequest(0, v6);
    *(_QWORD *)(v0 + 96) = v7;
    *(_QWORD *)(v0 + 104) = CollectionPlaceItemRequest.__allocating_init()(v7);
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
    *(_QWORD *)(v0 + 112) = Options;
    v9 = objc_allocWithZone(Options);
    v10 = v5;
    v11 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v5, 0, 0);
    *(_QWORD *)(v0 + 120) = v11;
    v13 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                          + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
    v12 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                     + 1));
    *(_QWORD *)(v0 + 128) = v12;
    *v12 = v0;
    v12[1] = sub_1001CC898;
    return (id)v13(v11);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001CC898(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 128);
  *(_QWORD *)(v3 + 136) = a1;
  *(_QWORD *)(v3 + 144) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001CCF14;
  }
  else
  {
    v6 = *(void **)(v3 + 104);

    v5 = sub_1001CC914;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_1001CC914()
{
  uint64_t v0;
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t);
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 136);
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v1 <= 0x7FFFFFFF)
  {
    v2 = *(objc_class **)(v0 + 112);
    v3 = *(objc_class **)(v0 + 80);
    objc_msgSend(*(id *)(v0 + 64), "setMapFeatureLibraryPlacesWithNoteCount:");
    v4 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000016, 0x8000000100E51320, _swiftEmptyArrayStorage);
    *(_QWORD *)(v0 + 152) = v4;
    v5 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v6 = swift_allocObject(v5, 72, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100E22F40;
    *(_QWORD *)(v6 + 56) = &type metadata for Int16;
    *(_QWORD *)(v6 + 64) = &protocol witness table for Int16;
    *(_WORD *)(v6 + 32) = 1;
    v7 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000010, 0x8000000100E51340, v6);
    *(_QWORD *)(v0 + 160) = v7;
    swift_bridgeObjectRelease(v6);
    *(_QWORD *)(v0 + 168) = CollectionPlaceItemRequest.__allocating_init()(v8);
    v9 = sub_100008B04((uint64_t *)&unk_101493B10);
    v10 = swift_allocObject(v9, 48, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100E250A0;
    *(_QWORD *)(v10 + 32) = v4;
    *(_QWORD *)(v10 + 40) = v7;
    v18 = v10;
    specialized Array._endMutation()(v10);
    objc_allocWithZone(v3);
    v11 = v4;
    v12 = v7;
    v13 = MapsSyncQueryPredicate.init(or:)(v18);
    v14 = objc_allocWithZone(v2);
    v15 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v13, 0, 0);
    *(_QWORD *)(v0 + 176) = v15;
    v17 = (void (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
    v16 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                     + 1));
    *(_QWORD *)(v0 + 184) = v16;
    *v16 = v0;
    v16[1] = sub_1001CCB08;
    v17(v15);
    return;
  }
  __break(1u);
}

uint64_t sub_1001CCB08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 184);
  *(_QWORD *)(v3 + 192) = a1;
  *(_QWORD *)(v3 + 200) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001CD0F8;
  }
  else
  {
    v6 = *(void **)(v3 + 168);

    v5 = sub_1001CCB80;
  }
  return swift_task_switch(v5, 0, 0);
}

void sub_1001CCB80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(uint64_t);

  v1 = *(_QWORD *)(v0 + 192);
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v1 <= 0x7FFFFFFF)
  {
    v2 = *(void **)(v0 + 160);
    v3 = *(objc_class **)(v0 + 112);
    *(_QWORD *)(v0 + 208) = CollectionPlaceItemRequest.__allocating_init()(objc_msgSend(*(id *)(v0 + 64), "setMapFeatureLibraryGuidesSavedPlacesCount:"));
    v4 = objc_allocWithZone(v3);
    v5 = v2;
    v6 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v2, 0, 0);
    *(_QWORD *)(v0 + 216) = v6;
    v8 = (void (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                      + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
    v7 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                    + 1));
    *(_QWORD *)(v0 + 224) = v7;
    *v7 = v0;
    v7[1] = sub_1001CCC60;
    v8(v6);
    return;
  }
  __break(1u);
}

uint64_t sub_1001CCC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();
  void *v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 224);
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_1001CD2E8;
  }
  else
  {
    v6 = *(void **)(v3 + 208);

    v5 = sub_1001CCCD8;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001CCCD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  os_log_type_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  NSObject *v22;

  v1 = *(_QWORD *)(v0 + 232);
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v1 <= 0x7FFFFFFF)
  {
    objc_msgSend(*(id *)(v0 + 64), "setMapFeatureLibraryFavoritesGuideSavedPlacesCount:");
    if (qword_101490E88 == -1)
      goto LABEL_4;
    goto LABEL_10;
  }
  __break(1u);
LABEL_10:
  swift_once(&qword_101490E88, sub_10011470C);
LABEL_4:
  v2 = *(void **)(v0 + 56);
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_1014D4AA8);
  v4 = Logger.logObject.getter(v2);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v17 = *(_QWORD *)(v0 + 192);
    v18 = *(void **)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 232);
    v16 = *(_QWORD *)(v0 + 136);
    v20 = *(void **)(v0 + 152);
    v21 = *(void **)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 72);
    v22 = *(NSObject **)(v0 + 64);
    v7 = *(char **)(v0 + 56);
    v8 = swift_slowAlloc(42, -1);
    *(_DWORD *)v8 = 134218752;
    *(_QWORD *)(v0 + 24) = *(_QWORD *)&v7[v6];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v8 + 4, v8 + 12);

    *(_WORD *)(v8 + 12) = 2048;
    *(_QWORD *)(v0 + 32) = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v8 + 14, v8 + 22);
    *(_WORD *)(v8 + 22) = 2048;
    *(_QWORD *)(v0 + 40) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v8 + 24, v8 + 32);
    *(_WORD *)(v8 + 32) = 2048;
    *(_QWORD *)(v0 + 48) = v19;
    v9 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v8 + 34, v8 + 42);
    v10 = v5;
    v11 = v20;
    _os_log_impl((void *)&_mh_execute_header, v4, v10, "LibraryItemsCountManager: Count for analytics: All places: %ld | places with notes: %ld | places in guides: %ld | places in fav Guide: %ld", (uint8_t *)v8, 0x2Au);
    v12 = v8;
    v13 = v21;
    swift_slowDealloc(v12, -1, -1);
    v14 = v4;
    v4 = v22;
  }
  else
  {
    v9 = *(void **)(v0 + 152);
    v11 = *(void **)(v0 + 160);
    v14 = *(NSObject **)(v0 + 88);
    v13 = *(void **)(v0 + 56);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CCF14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void **)(v0 + 104);
  v3 = *(void **)(v0 + 88);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v4 = type metadata accessor for Logger(0);
  sub_10000E918(v4, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v5 = swift_errorRetain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v1);
    v10 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error fetching anaytics Counts: %@", v8, 0xCu);
    v11 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CD0F8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 88);
  v2 = *(void **)(v0 + 64);

  v3 = *(_QWORD *)(v0 + 200);
  v4 = *(void **)(v0 + 168);
  v5 = *(void **)(v0 + 160);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v6 = type metadata accessor for Logger(0);
  sub_10000E918(v6, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v3);
  v7 = swift_errorRetain(v3);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v3);
    v12 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 16) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v10 + 4, v10 + 12);
    *v11 = v12;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error fetching anaytics Counts: %@", v10, 0xCu);
    v13 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v3);
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    swift_errorRelease(v3);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CD2E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 88);
  v2 = *(void **)(v0 + 64);

  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(void **)(v0 + 208);
  v5 = *(void **)(v0 + 160);

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v6 = type metadata accessor for Logger(0);
  sub_10000E918(v6, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v3);
  v7 = swift_errorRetain(v3);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    swift_errorRetain(v3);
    v12 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 16) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v10 + 4, v10 + 12);
    *v11 = v12;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error fetching anaytics Counts: %@", v10, 0xCu);
    v13 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    swift_errorRelease(v3);
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    swift_errorRelease(v3);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1001CD550(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers), "registerObserver:", a1);
}

id sub_1001CD56C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers), "unregisterObserver:", a1);
}

uint64_t sub_1001CD588()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001CD5AC(uint64_t a1)
{
  uint64_t v1;

  sub_1001CBD68(a1, v1);
}

double sub_1001CD5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001CD5C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001CD5D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10149F76C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000C0E0;
  return sub_1001CC2C8(a1, v4, v5, v6);
}

uint64_t sub_1001CD63C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CD660()
{
  return swift_task_switch(sub_1001CD674, 0, 0);
}

uint64_t sub_1001CD674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 40) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001CD6DC, v2, v3);
}

uint64_t sub_1001CD6DC()
{
  uint64_t v0;
  id v1;

  swift_release();
  v1 = objc_msgSend((id)objc_opt_self(CollectionManager), "sharedManager");
  *(_QWORD *)(v0 + 48) = objc_msgSend(v1, "displayCountForCollectionsInLibrary");

  return swift_task_switch(sub_1001CD750, 0, 0);
}

uint64_t sub_1001CD750()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  if (qword_101490E30 != -1)
    swift_once(&qword_101490E30, sub_1000F999C);
  v3 = (uint64_t (__cdecl *)())((char *)&dword_10149AB10 + dword_10149AB10);
  v1 = (_QWORD *)swift_task_alloc(unk_10149AB14);
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_1001CD7D0;
  return v3();
}

uint64_t sub_1001CD7D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 56);
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1001CD9E8;
  else
    v5 = sub_1001CD83C;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001CD83C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(void *);

  type metadata accessor for MapsSyncQueryPredicate(0);
  v1 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v2 = swift_allocObject(v1, 72, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v2 + 56) = &type metadata for Int16;
  *(_QWORD *)(v2 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v2 + 32) = 6;
  v3 = static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000032, 0x8000000100E4F890, v2);
  swift_bridgeObjectRelease(v2);
  v4 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
  v5 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v3, 0, 0);
  v0[10] = v5;
  v7 = type metadata accessor for CollectionPlaceItemRequest(0, v6);
  v0[11] = CollectionPlaceItemRequest.__allocating_init()(v7);
  v8 = *((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:) + 1);
  v12 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.count(options:));
  v9 = v5;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v0[12] = v10;
  *v10 = v0;
  v10[1] = sub_1001CD968;
  return v12(v5);
}

uint64_t sub_1001CD968(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1001CDC98;
  }
  else
  {
    v7 = *(void **)(v4 + 88);

    *(_QWORD *)(v4 + 112) = a1;
    v6 = sub_1001CDBB0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001CD9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 72);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 32) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v6 + 4, v6 + 12);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error Fetching Counts: %@", v6, 0xCu);
    v9 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    swift_errorRelease(v1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_1001CDBB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  id v12;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 48);
    v5 = (unint64_t)objc_msgSend((id)objc_opt_self(MapsSavedRoutesManager), "savedRoutesCount");
    if (((v5 | v4) & 0x8000000000000000) == 0)
    {
      v6 = v5;
      v7 = *(void **)(v0 + 80);
      v8 = *(_QWORD *)(v0 + 64);
      v9 = *(_QWORD *)(v0 + 48);
      v10 = (objc_class *)type metadata accessor for LibraryItemsCount();
      v11 = (char *)objc_allocWithZone(v10);
      *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_guidesCount] = v9;
      *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_pinnedPlacesCount] = v8;
      *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_placesCount] = v3;
      *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps17LibraryItemsCount_routesCount] = v6;
      *(_QWORD *)(v0 + 16) = v11;
      *(_QWORD *)(v0 + 24) = v10;
      v12 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");

      (*(void (**)(id))(v0 + 8))(v12);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1001CDC98()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(void **)(v0 + 80);
  v2 = *(void **)(v0 + 88);

  v3 = *(_QWORD *)(v0 + 104);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v4 = type metadata accessor for Logger(0);
  sub_10000E918(v4, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v3);
  v5 = swift_errorRetain(v3);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v3);
    v10 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(_QWORD *)(v0 + 32) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Error Fetching Counts: %@", v8, 0xCu);
    v11 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v3);
  }
  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    swift_errorRelease(v3);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1001CDE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_10149F784);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000DD08;
  v3[7] = v2;
  return swift_task_switch(sub_1001CC728, 0, 0);
}

void sub_1001CDED4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_1000DDEE8(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1001CF6A8(v4);
  *a1 = v2;
}

uint64_t sub_1001CDF3C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1000DF680(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_1001CFE20(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

uint64_t sub_1001CDFB4(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *v2;
  v6 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v2[8])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  if (a2)
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  else
    v9 = 0;
  if (a2)
    v10 = a2;
  else
    v10 = 0xE000000000000000;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v10);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v9;
  if (v11)
  {
    swift_bridgeObjectRetain(a2);
  }
  else
  {
    a1 = 0;
    a2 = 0;
  }
  v12 = v2[7];
  v2[6] = a1;
  v2[7] = a2;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v12);
  v13 = *((_BYTE *)v2 + 40);
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  v15 = swift_allocObject(&unk_1011A9D70, 72, 7);
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 32) = a1;
  *(_QWORD *)(v15 + 40) = a2;
  *(_BYTE *)(v15 + 48) = v13;
  *(_QWORD *)(v15 + 56) = v2;
  *(_QWORD *)(v15 + 64) = v5;
  swift_retain();
  v2[8] = sub_1001B0C08((uint64_t)v8, (uint64_t)&unk_10149F868, v15);
  return swift_release();
}

void sub_1001CE140(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28[24];

  v3 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (*(unsigned __int8 *)(v1 + 40) != a1)
  {
    *(_BYTE *)(v1 + 40) = a1;
    v7 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain(v7);
    v8 = sub_1001D33FC(a1, v7);
    swift_bridgeObjectRelease(v7);
    v9 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v1 + 16) = v8;
    swift_bridgeObjectRelease(v9);
    Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
    if (Strong)
    {
      v12 = Strong;
      if (*(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode) == 1)
      {
        swift_unknownObjectRelease(Strong);
      }
      else
      {
        v13 = *(_QWORD *)(*(_QWORD *)(Strong
                                    + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                        + 16);
        if ((unint64_t)v13 >> 62)
        {
          if (v13 < 0)
            v24 = *(_QWORD *)(*(_QWORD *)(Strong
                                        + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                            + 16);
          else
            v24 = v13 & 0xFFFFFFFFFFFFFF8;
          v25 = type metadata accessor for MapsSyncObject(0, v11);
          swift_bridgeObjectRetain(v13);
          v26 = _bridgeCocoaArray<A>(_:)(v24, v25);
          swift_bridgeObjectRelease(v13);
          v13 = v26;
        }
        else
        {
          v14 = v13 & 0xFFFFFFFFFFFFFF8;
          v15 = swift_bridgeObjectRetain_n(*(_QWORD *)(*(_QWORD *)(Strong+ OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)+ 16), 2);
          v16 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v15);
          v18 = type metadata accessor for MapsSyncObject(0, v17);
          if (swift_dynamicCastMetatype(v16, v18) || (v22 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
          {
LABEL_7:
            swift_bridgeObjectRelease(v13);
          }
          else
          {
            v23 = (_QWORD *)(v14 + 32);
            while (swift_dynamicCastClass(*v23, v18))
            {
              ++v23;
              if (!--v22)
                goto LABEL_7;
            }
            swift_bridgeObjectRelease(v13);
            v13 = v14 | 1;
          }
        }
        v19 = (uint64_t *)(v12 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems);
        swift_beginAccess(v12 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems, v28, 1, 0);
        v20 = *v19;
        *v19 = v13;
        swift_bridgeObjectRelease(v20);
        sub_1001C4250();
        v21 = sub_1001C3558();
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v6, 1, 0, 0);

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_unknownObjectRelease(v12);
      }
    }
  }
}

uint64_t sub_1001CE388(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __n128 v9;
  uint64_t v10;
  unint64_t v11;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v2 + 32) = 0;
  swift_unknownObjectWeakInit(v2 + 24);
  *(_QWORD *)(v2 + 48) = 0;
  *(_QWORD *)(v2 + 56) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  v4 = sub_10000B4B8();
  v5 = swift_allocObject(v4, ((*(unsigned int *)(v4 + 48) + 7) & 0x1FFFFFFF8) + 16, *(unsigned __int16 *)(v4 + 52) | 7);
  *(_OWORD *)(v5 + 16) = xmmword_100E22F70;
  *(_QWORD *)(v5 + 32) = type metadata accessor for FavoriteItem(0, v6);
  *(_QWORD *)(v5 + 40) = type metadata accessor for CollectionPlaceItem(0);
  *(_QWORD *)(v2 + 72) = v5;
  *(_BYTE *)(v2 + 40) = a1;
  v7 = type metadata accessor for MapsSyncStore(0);
  v8 = (void *)static MapsSyncStore.sharedStore.getter(v7);
  v9 = swift_retain();
  dispatch thunk of MapsSyncStore.subscribe(_:)(v9);

  swift_release();
  v10 = *(_QWORD *)(v2 + 48);
  v11 = *(_QWORD *)(v2 + 56);
  swift_bridgeObjectRetain(v11);
  sub_1001CDFB4(v10, v11);
  swift_bridgeObjectRelease(v11);
  return v2;
}

Swift::Void __swiftcall LibraryPlacesDataProvider.storeDidChange(types:)(Swift::OpaquePointer types)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  swift_bridgeObjectRetain(v3);
  sub_1001CDFB4(v2, v3);
  swift_bridgeObjectRelease(v3);
}

_QWORD *LibraryPlacesDataProvider.deinit()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v1 = v0;
  v2 = type metadata accessor for MapsSyncStore(0);
  v3 = (void *)static MapsSyncStore.sharedStore.getter(v2);
  dispatch thunk of MapsSyncStore.unsubscribe(_:)(v1);

  if (v1[8])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  swift_bridgeObjectRelease(v1[2]);
  sub_100017510((uint64_t)(v1 + 3));
  swift_bridgeObjectRelease(v1[7]);
  swift_release();
  swift_bridgeObjectRelease(v1[9]);
  return v1;
}

uint64_t LibraryPlacesDataProvider.__deallocating_deinit()
{
  uint64_t v0;

  LibraryPlacesDataProvider.deinit();
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_1001CE574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, char);

  *(_QWORD *)(v7 + 56) = a5;
  *(_QWORD *)(v7 + 64) = a7;
  *(_BYTE *)(v7 + 136) = a6;
  *(_QWORD *)(v7 + 48) = a4;
  v11 = type metadata accessor for CancellationError(0);
  *(_QWORD *)(v7 + 72) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v7 + 80) = v12;
  *(_QWORD *)(v7 + 88) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_10149F870 + dword_10149F870);
  v13 = (_QWORD *)swift_task_alloc(unk_10149F874);
  *(_QWORD *)(v7 + 96) = v13;
  *v13 = v7;
  v13[1] = sub_1001CE620;
  return v15(a4, a5, a6);
}

uint64_t sub_1001CE620(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1001CEAB4;
  else
    v5 = sub_1001CE68C;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001CE68C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 112);
  static Task<>.checkCancellation()();
  *(_QWORD *)(v0 + 120) = v1;
  if (!v1)
  {
    swift_weakInit(v0 + 40, *(_QWORD *)(v0 + 64));
    v16 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 128) = static MainActor.shared.getter(v16);
    v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
    return swift_task_switch(sub_1001CEE58, v17, v18);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 16) = v1;
  swift_errorRetain(v1);
  v4 = sub_100008B04(&qword_10149E610);
  if ((swift_dynamicCast(v2, v0 + 16, v4, v3, 6) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    if (qword_101490E88 != -1)
      swift_once(&qword_101490E88, sub_10011470C);
    v5 = *(_QWORD *)(v0 + 56);
    v6 = type metadata accessor for Logger(0);
    sub_10000E918(v6, (uint64_t)qword_1014D4AA8);
    v7 = swift_bridgeObjectRetain_n(v5, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v11 = *(_QWORD *)(v0 + 48);
      v10 = *(_QWORD *)(v0 + 56);
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v28 = v26;
      *(_DWORD *)v12 = 136315138;
      if (v10)
        v13 = v11;
      else
        v13 = 7104878;
      if (v10)
        v14 = v5;
      else
        v14 = 0xE300000000000000;
      swift_bridgeObjectRetain(v5);
      *(_QWORD *)(v0 + 32) = sub_1000C28FC(v13, v14, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v5, 2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Query Processing was cancelled for searchTerm: %s", v12, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      v15 = v12;
      goto LABEL_18;
    }
    swift_errorRelease(v1);
    swift_bridgeObjectRelease_n(v5, 2);
LABEL_21:

    goto LABEL_22;
  }
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v20 = type metadata accessor for Logger(0);
  sub_10000E918(v20, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v21 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v21);
  v22 = static os_log_type_t.error.getter(v8);
  if (!os_log_type_enabled(v8, v22))
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    goto LABEL_21;
  }
  v23 = (uint8_t *)swift_slowAlloc(12, -1);
  v27 = (uint64_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v23 = 138412290;
  swift_errorRetain(v1);
  v24 = _swift_stdlib_bridgeErrorToNSError(v1);
  *(_QWORD *)(v0 + 24) = v24;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v23 + 4, v23 + 12);
  *v27 = v24;
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  _os_log_impl((void *)&_mh_execute_header, v8, v22, "LibraryPlacesDataProvider error fetching search results: %@", v23, 0xCu);
  v25 = sub_100008B04((uint64_t *)&unk_101494470);
  swift_arrayDestroy(v27, 1, v25);
  swift_slowDealloc(v27, -1, -1);
  v15 = v23;
LABEL_18:
  swift_slowDealloc(v15, -1, -1);

  swift_errorRelease(v1);
LABEL_22:
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CEAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  swift_errorRetain(v1);
  v4 = sub_100008B04(&qword_10149E610);
  if ((swift_dynamicCast(v2, v0 + 16, v4, v3, 6) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
    if (qword_101490E88 != -1)
      swift_once(&qword_101490E88, sub_10011470C);
    v5 = *(_QWORD *)(v0 + 56);
    v6 = type metadata accessor for Logger(0);
    sub_10000E918(v6, (uint64_t)qword_1014D4AA8);
    v7 = swift_bridgeObjectRetain_n(v5, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v11 = *(_QWORD *)(v0 + 48);
      v10 = *(_QWORD *)(v0 + 56);
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v25 = v24;
      *(_DWORD *)v12 = 136315138;
      if (v10)
        v13 = v11;
      else
        v13 = 7104878;
      if (v10)
        v14 = v5;
      else
        v14 = 0xE300000000000000;
      swift_bridgeObjectRetain(v5);
      *(_QWORD *)(v0 + 32) = sub_1000C28FC(v13, v14, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v5, 2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Query Processing was cancelled for searchTerm: %s", v12, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      v15 = v12;
      goto LABEL_16;
    }
    swift_errorRelease(v1);
    swift_bridgeObjectRelease_n(v5, 2);
LABEL_19:

    goto LABEL_20;
  }
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v16 = type metadata accessor for Logger(0);
  sub_10000E918(v16, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v17 = swift_errorRetain(v1);
  v8 = Logger.logObject.getter(v17);
  v18 = static os_log_type_t.error.getter(v8);
  if (!os_log_type_enabled(v8, v18))
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    goto LABEL_19;
  }
  v19 = (uint8_t *)swift_slowAlloc(12, -1);
  v20 = (uint64_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v19 = 138412290;
  swift_errorRetain(v1);
  v21 = _swift_stdlib_bridgeErrorToNSError(v1);
  *(_QWORD *)(v0 + 24) = v21;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v19 + 4, v19 + 12);
  *v20 = v21;
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  _os_log_impl((void *)&_mh_execute_header, v8, v18, "LibraryPlacesDataProvider error fetching search results: %@", v19, 0xCu);
  v22 = sub_100008B04((uint64_t *)&unk_101494470);
  swift_arrayDestroy(v20, 1, v22);
  swift_slowDealloc(v20, -1, -1);
  v15 = v19;
LABEL_16:
  swift_slowDealloc(v15, -1, -1);

  swift_errorRelease(v1);
LABEL_20:
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CEE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_BYTE *)(v0 + 136);
  swift_release();
  sub_1001CEF14(v0 + 40, v3, v2, v4, v1);
  swift_bridgeObjectRelease(v1);
  swift_weakDestroy(v0 + 40);
  return swift_task_switch(sub_1001CEEE4, 0, 0);
}

uint64_t sub_1001CEEE4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001CEF14(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __n128 v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41[24];
  char v42[24];
  uint64_t v43;

  v10 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_beginAccess(a1, v42, 0, 0);
  result = swift_weakLoadStrong(a1, v14);
  if (result)
  {
    v16 = result;
    v17 = *(_QWORD *)(result + 56);
    if (a3)
    {
      if (!v17)
        return swift_release();
      v18 = *(_QWORD *)(result + 48);
      if ((v18 != a2 || v17 != a3) && (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v18, v17, 0) & 1) == 0)
        return swift_release();
    }
    else if (v17)
    {
      return swift_release();
    }
    if (*(unsigned __int8 *)(v16 + 40) == a4)
    {
      v19 = *(_QWORD *)(v16 + 16);
      *(_QWORD *)(v16 + 16) = a5;
      swift_bridgeObjectRetain(a5);
      swift_bridgeObjectRelease(v19);
      Strong = swift_unknownObjectWeakLoadStrong(v16 + 24);
      if (Strong)
      {
        v22 = Strong;
        if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_isInSelectionMode) & 1) != 0)
        {
LABEL_27:
          swift_release();
          return swift_unknownObjectRelease(v22);
        }
        v23 = *(_QWORD *)(*(_QWORD *)(Strong
                                    + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                        + 16);
        if ((unint64_t)v23 >> 62)
        {
          if (v23 < 0)
            v37 = *(_QWORD *)(*(_QWORD *)(Strong
                                        + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)
                            + 16);
          else
            v37 = v23 & 0xFFFFFFFFFFFFFF8;
          v38 = type metadata accessor for MapsSyncObject(0, v21);
          swift_bridgeObjectRetain(v23);
          v25 = _bridgeCocoaArray<A>(_:)(v37, v38);
          v29 = v23;
        }
        else
        {
          v24 = swift_bridgeObjectRetain_n(*(_QWORD *)(*(_QWORD *)(Strong+ OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_placesDataProvider)+ 16), 2);
          v43 = v23 & 0xFFFFFFFFFFFFFF8;
          v25 = v23;
          v26 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v24);
          v28 = type metadata accessor for MapsSyncObject(0, v27);
          if (!swift_dynamicCastMetatype(v26, v28))
          {
            v40 = v25;
            v31 = v43;
            v32 = *(_QWORD *)(v43 + 16);
            if (v32)
            {
              v39 = v22;
              v33 = (_QWORD *)(v43 + 32);
              while (swift_dynamicCastClass(*v33, v28))
              {
                ++v33;
                if (!--v32)
                {
                  v30 = v40;
                  swift_bridgeObjectRelease(v40);
                  goto LABEL_25;
                }
              }
              swift_bridgeObjectRelease(v40);
              v30 = v31 | 1;
LABEL_25:
              v22 = v39;
            }
            else
            {
              v30 = v40;
              swift_bridgeObjectRelease(v40);
            }
            goto LABEL_26;
          }
          v29 = v25;
        }
        swift_bridgeObjectRelease(v29);
        v30 = v25;
LABEL_26:
        v34 = (uint64_t *)(v22 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems);
        swift_beginAccess(v22 + OBJC_IVAR____TtC4Maps34LibraryPlacesCollectionViewManager_cachedItems, v41, 1, 0);
        v35 = *v34;
        *v34 = v30;
        swift_bridgeObjectRelease(v35);
        sub_1001C4250();
        v36 = sub_1001C3558();
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v13, 1, 0, 0);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        goto LABEL_27;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1001CF1D4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001CF1EC(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for CollectionPlaceItem);
}

uint64_t sub_1001CF1E0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1001CF1EC(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FavoriteItem);
}

uint64_t sub_1001CF1EC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v6 = sub_100008B04(&qword_10149E610);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = a3;
    v9 = a3;
    return swift_continuation_throwingResumeWithError(v4, v7);
  }
  else
  {
    v12 = a4(0);
    **(_QWORD **)(*(_QWORD *)(v4 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v12);
    return swift_continuation_throwingResume(v4);
  }
}

BOOL sub_1001CF284(id *a1, void **a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  double v25;
  double v26;

  v4 = *a1;
  v5 = *a2;
  v6 = objc_msgSend(*a1, "latitude");
  v7 = objc_msgSend(v4, "longitude");
  v8 = objc_msgSend(v5, "latitude");
  v9 = objc_msgSend(v5, "longitude");
  v10 = v9;
  if (v6)
  {
    if (v7)
    {
      if (v8)
      {
        if (v9)
        {
          v11 = v6;
          v12 = v7;
          v13 = v8;
          v14 = v10;
          objc_msgSend(v11, "doubleValue");
          v16 = v15;
          objc_msgSend(v12, "doubleValue");
          v18 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v16, v17);
          objc_msgSend(v18, "distanceFromLocation:", a3);
          v20 = v19;

          objc_msgSend(v13, "doubleValue");
          v22 = v21;
          objc_msgSend(v14, "doubleValue");
          v24 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v22, v23);
          objc_msgSend(v24, "distanceFromLocation:", a3);
          v26 = v25;

          return v20 < v26;
        }

      }
      else
      {

      }
      return 1;
    }
    else
    {

      return 0;
    }
  }
  else
  {

    return 0;
  }
}

uint64_t LibraryPlacesDataProvider.storeSubscriptionTypes.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 72, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
}

uint64_t LibraryPlacesDataProvider.storeSubscriptionTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 72, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*LibraryPlacesDataProvider.storeSubscriptionTypes.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 72, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t type metadata accessor for LibraryPlacesDataProvider()
{
  return objc_opt_self(_TtC4Maps25LibraryPlacesDataProvider);
}

void sub_1001CF6A8(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  _QWORD *v111;
  Swift::Int v112;
  Swift::Int v113;
  Swift::Int v114;
  Swift::Int v115;
  char *__dst;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_134;
    if (v3)
      sub_1001D0BBC(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_142;
  v112 = v4;
  v121 = v1;
  v109 = a1;
  if (v3 < 2)
  {
    v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
      v12 = (char *)_swiftEmptyArrayStorage;
LABEL_99:
      v111 = v9;
      if (v13 >= 2)
      {
        v102 = *v109;
        do
        {
          v103 = v13 - 2;
          if (v13 < 2)
            goto LABEL_129;
          if (!v102)
            goto LABEL_141;
          v104 = *(_QWORD *)&v12[16 * v103 + 32];
          v105 = *(_QWORD *)&v12[16 * v13 + 24];
          v106 = v121;
          sub_1001D104C((char *)(v102 + 24 * v104), (char *)(v102 + 24 * *(_QWORD *)&v12[16 * v13 + 16]), v102 + 24 * v105, __dst);
          v121 = v106;
          if (v106)
            break;
          if (v105 < v104)
            goto LABEL_130;
          if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
            v12 = sub_1000DD110((uint64_t)v12);
          if (v103 >= *((_QWORD *)v12 + 2))
            goto LABEL_131;
          v107 = &v12[16 * v103 + 32];
          *(_QWORD *)v107 = v104;
          *((_QWORD *)v107 + 1) = v105;
          v108 = *((_QWORD *)v12 + 2);
          if (v13 > v108)
            goto LABEL_132;
          memmove(&v12[16 * v13 + 16], &v12[16 * v13 + 32], 16 * (v108 - v13));
          *((_QWORD *)v12 + 2) = v108 - 1;
          v13 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease(v12);
      v111[2] = 0;
      swift_bridgeObjectRelease(v111);
      return;
    }
    v111 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_100008B04((uint64_t *)&unk_10149BB30);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)(v8 + 16) = v6;
    v111 = (_QWORD *)v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v110 = *a1 + 64;
  v12 = (char *)_swiftEmptyArrayStorage;
  v113 = v3;
  while (1)
  {
    v14 = v10++;
    v114 = v14;
    if (v10 < v3)
    {
      v15 = v11 + 24 * v10;
      v17 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v18 = v11 + 24 * v14;
      v20 = *(_QWORD *)(v18 + 8);
      v19 = *(_QWORD *)(v18 + 16);
      v119 = v17;
      v120 = v16;
      v117 = v20;
      v118 = v19;
      v21 = v14;
      v22 = sub_10006C008();
      v23 = StringProtocol.localizedStandardCompare<A>(_:)(&v117, &type metadata for String, &type metadata for String, v22, v22);
      v10 = v21 + 2;
      if (v21 + 2 < v3)
      {
        v24 = (uint64_t *)(v110 + 24 * v21);
        while (1)
        {
          v25 = *v24;
          v26 = *(v24 - 4);
          v27 = *(v24 - 3);
          v119 = *(v24 - 1);
          v120 = v25;
          v117 = v26;
          v118 = v27;
          if ((v23 == -1) == (StringProtocol.localizedStandardCompare<A>(_:)(&v117, &type metadata for String, &type metadata for String, v22, v22) != -1))break;
          v24 += 3;
          ++v10;
          v3 = v113;
          if (v113 == v10)
          {
            v10 = v113;
            goto LABEL_23;
          }
        }
        v3 = v113;
      }
LABEL_23:
      v14 = v114;
      if (v23 == -1)
      {
        if (v10 < v114)
          goto LABEL_137;
        if (v114 < v10)
        {
          v28 = 24 * v10;
          v29 = 24 * v114;
          v30 = v10;
          v31 = v114;
          do
          {
            if (v31 != --v30)
            {
              if (!v11)
                goto LABEL_140;
              v32 = v11 + v29;
              v33 = v11 + v28;
              v34 = *(_OWORD *)(v11 + v29);
              v35 = *(_QWORD *)(v11 + v29 + 16);
              v36 = *(_QWORD *)(v11 + v28 - 8);
              *(_OWORD *)v32 = *(_OWORD *)(v11 + v28 - 24);
              *(_QWORD *)(v32 + 16) = v36;
              *(_OWORD *)(v33 - 24) = v34;
              *(_QWORD *)(v33 - 8) = v35;
            }
            ++v31;
            v28 -= 24;
            v29 += 24;
          }
          while (v31 < v30);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_49;
    if (__OFSUB__(v10, v14))
      goto LABEL_133;
    if (v10 - v14 >= v112)
      goto LABEL_49;
    if (__OFADD__(v14, v112))
      goto LABEL_135;
    v37 = v14 + v112 >= v3 ? v3 : v14 + v112;
    if (v37 < v14)
      break;
    if (v10 != v37)
    {
      v38 = sub_10006C008();
      v39 = (uint64_t *)(v11 + 24 * v10);
      do
      {
        v40 = v11 + 24 * v10;
        v41 = *(_QWORD *)(v40 + 8);
        v42 = *(_QWORD *)(v40 + 16);
        v43 = v39;
        do
        {
          v44 = *(v43 - 2);
          v45 = *(v43 - 1);
          v119 = v41;
          v120 = v42;
          v117 = v44;
          v118 = v45;
          if (StringProtocol.localizedStandardCompare<A>(_:)(&v117, &type metadata for String, &type metadata for String, v38, v38) != -1)break;
          if (!v11)
            goto LABEL_138;
          v46 = *v43;
          v41 = v43[1];
          v42 = v43[2];
          *(_OWORD *)v43 = *(_OWORD *)(v43 - 3);
          v43[2] = *(v43 - 1);
          *(v43 - 2) = v41;
          *(v43 - 1) = v42;
          *(v43 - 3) = v46;
          v43 -= 3;
          ++v14;
        }
        while (v10 != v14);
        ++v10;
        v39 += 3;
        v14 = v114;
      }
      while (v10 != v37);
      v10 = v37;
    }
LABEL_49:
    if (v10 < v14)
      goto LABEL_128;
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_1000DCBFC(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v48 = *((_QWORD *)v12 + 2);
    v47 = *((_QWORD *)v12 + 3);
    v13 = v48 + 1;
    if (v48 >= v47 >> 1)
      v12 = sub_1000DCBFC((char *)(v47 > 1), v48 + 1, 1, v12);
    *((_QWORD *)v12 + 2) = v13;
    v49 = v12 + 32;
    v50 = &v12[16 * v48 + 32];
    *(_QWORD *)v50 = v14;
    *((_QWORD *)v50 + 1) = v10;
    if (v48)
    {
      v115 = v10;
      while (1)
      {
        v51 = v13 - 1;
        if (v13 >= 4)
        {
          v56 = &v49[16 * v13];
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_117;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_118;
          v63 = v13 - 2;
          v64 = &v49[16 * v13 - 32];
          v66 = *(_QWORD *)v64;
          v65 = *((_QWORD *)v64 + 1);
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_120;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_123;
          if (v68 >= v59)
          {
            v86 = &v49[16 * v51];
            v88 = *(_QWORD *)v86;
            v87 = *((_QWORD *)v86 + 1);
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_127;
            v79 = v54 < v89;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v80 = *((_QWORD *)v12 + 4);
            v81 = *((_QWORD *)v12 + 5);
            v62 = __OFSUB__(v81, v80);
            v73 = v81 - v80;
            v74 = v62;
            goto LABEL_81;
          }
          v53 = *((_QWORD *)v12 + 4);
          v52 = *((_QWORD *)v12 + 5);
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_119;
        v63 = v13 - 2;
        v69 = &v49[16 * v13 - 32];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_122;
        v75 = &v49[16 * v51];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_125;
        if (__OFADD__(v73, v78))
          goto LABEL_126;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_87:
          if (v79)
            v51 = v63;
          goto LABEL_89;
        }
LABEL_81:
        if ((v74 & 1) != 0)
          goto LABEL_121;
        v82 = &v49[16 * v51];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_124;
        if (v85 < v73)
          goto LABEL_15;
LABEL_89:
        v90 = v51 - 1;
        if (v51 - 1 >= v13)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v11)
          goto LABEL_139;
        v91 = v12;
        v92 = v11;
        v93 = &v49[16 * v90];
        v94 = *(_QWORD *)v93;
        v95 = v49;
        v96 = v51;
        v97 = &v49[16 * v51];
        v98 = *((_QWORD *)v97 + 1);
        v99 = v92;
        v100 = v121;
        sub_1001D104C((char *)(v92 + 24 * *(_QWORD *)v93), (char *)(v92 + 24 * *(_QWORD *)v97), v92 + 24 * v98, __dst);
        v121 = v100;
        if (v100)
        {
          v12 = v91;
          goto LABEL_110;
        }
        if (v98 < v94)
          goto LABEL_114;
        if (v96 > *((_QWORD *)v91 + 2))
          goto LABEL_115;
        *(_QWORD *)v93 = v94;
        *(_QWORD *)&v95[16 * v90 + 8] = v98;
        v101 = *((_QWORD *)v91 + 2);
        if (v96 >= v101)
          goto LABEL_116;
        v12 = v91;
        v13 = v101 - 1;
        memmove(v97, v97 + 16, 16 * (v101 - 1 - v96));
        v49 = v95;
        *((_QWORD *)v91 + 2) = v101 - 1;
        v11 = v99;
        v10 = v115;
        if (v101 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v3 = v113;
    if (v10 >= v113)
    {
      v9 = v111;
      goto LABEL_99;
    }
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1001CFE20(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  Swift::Int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  Swift::Int v41;
  uint64_t v42;
  Swift::Int v43;
  unint64_t v44;
  Swift::Int v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  id *v66;
  void *v67;
  id v68;
  id v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  __n128 v73;
  char *v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t *v87;
  Swift::Int v88;
  Swift::Int v89;
  Swift::Int v90;
  uint64_t *v91;
  uint64_t v92;
  Swift::Int v93;
  uint64_t v94;
  Swift::Int v95;
  void *v96;
  Swift::Int v97;
  void *v98;
  id v99;
  id v100;
  uint64_t v101;
  __n128 v102;
  __n128 v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char v113;
  void (*v114)(char *, uint64_t);
  char *v115;
  void *v116;
  uint64_t v117;
  char *v118;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v120;
  unint64_t v121;
  Swift::Int v122;
  char *v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  BOOL v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  BOOL v146;
  uint64_t v147;
  char v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  BOOL v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  Swift::Int v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  Swift::Int v192;
  char *v193;
  char *v194;
  char *v195;
  Swift::Int v196;
  Swift::Int v197;
  uint64_t v198;
  void **v199;
  uint64_t v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  unsigned int (*v206)(uint64_t, uint64_t, uint64_t);
  char *v207;
  uint64_t v208;
  Swift::Int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;

  v2 = type metadata accessor for Date(0);
  v211 = *(_QWORD *)(v2 - 8);
  v212 = v2;
  __chkstk_darwin(v2);
  v205 = (char *)&v182 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v204 = (char *)&v182 - v5;
  v208 = sub_100008B04(&qword_10149F858);
  __chkstk_darwin(v208);
  v7 = (char *)&v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v195 = (char *)&v182 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v182 - v11;
  v13 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v13);
  v15 = (char *)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v182 - v17;
  __chkstk_darwin(v19);
  v207 = (char *)&v182 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v182 - v22;
  __chkstk_darwin(v24);
  v194 = (char *)&v182 - v25;
  __chkstk_darwin(v26);
  v193 = (char *)&v182 - v27;
  __chkstk_darwin(v28);
  v186 = (uint64_t)&v182 - v29;
  __chkstk_darwin(v30);
  v190 = (char *)&v182 - v31;
  __chkstk_darwin(v32);
  v189 = (char *)&v182 - v33;
  v34 = a1[1];
  v35 = _minimumMergeRunLength(_:)(v34);
  if (v35 >= v34)
  {
    if (v34 < 0)
      goto LABEL_154;
    if (v34)
      sub_1001D0CC4(0, v34, 1, a1);
    return;
  }
  if (v34 >= 0)
    v36 = v34;
  else
    v36 = v34 + 1;
  if (v34 < -1)
    goto LABEL_163;
  v185 = v35;
  v191 = v23;
  v196 = v34;
  v182 = a1;
  if (v34 < 2)
  {
    v40 = (char *)_swiftEmptyArrayStorage;
    v213 = (uint64_t)_swiftEmptyArrayStorage;
    v199 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v34 != 1)
    {
      v44 = _swiftEmptyArrayStorage[2];
LABEL_120:
      v174 = v200;
      if (v44 >= 2)
      {
        v175 = *v182;
        do
        {
          v176 = v44 - 2;
          if (v44 < 2)
            goto LABEL_149;
          if (!v175)
            goto LABEL_161;
          v165 = v40;
          v177 = *(_QWORD *)&v40[16 * v176 + 32];
          v178 = *(_QWORD *)&v40[16 * v44 + 24];
          sub_1001D1370((void **)(v175 + 8 * v177), (id *)(v175 + 8 * *(_QWORD *)&v40[16 * v44 + 16]), v175 + 8 * v178, v199);
          if (v174)
            goto LABEL_117;
          if (v178 < v177)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native(v165) & 1) == 0)
            v165 = sub_1000DD110((uint64_t)v165);
          if (v176 >= *((_QWORD *)v165 + 2))
            goto LABEL_151;
          v179 = &v165[16 * v176 + 32];
          *(_QWORD *)v179 = v177;
          *((_QWORD *)v179 + 1) = v178;
          v180 = *((_QWORD *)v165 + 2);
          if (v44 > v180)
            goto LABEL_152;
          memmove(&v165[16 * v44 + 16], &v165[16 * v44 + 32], 16 * (v180 - v44));
          v40 = v165;
          *((_QWORD *)v165 + 2) = v180 - 1;
          v44 = v180 - 1;
        }
        while (v180 > 2);
      }
      v173 = v40;
LABEL_132:
      swift_bridgeObjectRelease(v173);
      *(_QWORD *)((v213 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v181);
      swift_bridgeObjectRelease(v213);
      return;
    }
  }
  else
  {
    v37 = v36 >> 1;
    v38 = sub_100008B04(&qword_10149B548);
    v39 = static Array._allocateBufferUninitialized(minimumCapacity:)(v37, v38);
    *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) = v37;
    v199 = (void **)((v39 & 0xFFFFFFFFFFFFFF8) + 32);
    v213 = v39;
  }
  v41 = 0;
  v42 = *a1;
  v184 = *a1 + 16;
  v183 = v42 - 8;
  v40 = (char *)_swiftEmptyArrayStorage;
  v203 = v7;
  v187 = v12;
  v201 = v15;
  v202 = v18;
  v43 = v196;
  v210 = v42;
LABEL_15:
  v45 = v41 + 1;
  v197 = v41;
  if (v41 + 1 < v43)
  {
    v188 = v40;
    v46 = *(void **)(v42 + 8 * v41);
    v47 = *(id *)(v42 + 8 * v45);
    v48 = v46;
    v49 = (uint64_t)v189;
    dispatch thunk of MapsSyncObject.createTime.getter(v50);
    v51 = (uint64_t)v190;
    dispatch thunk of MapsSyncObject.createTime.getter(v52);
    v53 = (uint64_t)&v12[*(int *)(v208 + 48)];
    sub_10019713C(v49, (uint64_t)v12);
    sub_10019713C(v51, v53);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48);
    v55 = v54(v12, 1, v212);
    v206 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v54;
    if (v55 == 1)
    {
      sub_10019CB2C(v53);
      LODWORD(v209) = 1;
    }
    else
    {
      v56 = v186;
      sub_100197184((uint64_t)v12, v186);
      if (v54((char *)v53, 1, v212) == 1)
      {
        v57 = v56;
        v58 = v212;
        (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v57, v212);
        if (v54((char *)v53, 1, v58) != 1)
          goto LABEL_162;
        LODWORD(v209) = 0;
      }
      else
      {
        v60 = v211;
        v59 = v212;
        v61 = v56;
        v62 = *(void (**)(char *, uint64_t, uint64_t))(v211 + 32);
        v63 = v204;
        v62(v204, v61, v212);
        v64 = v205;
        v62(v205, v53, v59);
        LODWORD(v209) = static Date.> infix(_:_:)(v63, v64);
        v65 = *(void (**)(char *, uint64_t))(v60 + 8);
        v12 = v187;
        v65(v64, v59);
        v65(v63, v59);
      }
    }
    v43 = v196;
    sub_10019CB2C((uint64_t)v12);

    v41 = v197;
    v45 = v197 + 2;
    if (v197 + 2 < v43)
    {
      v66 = (id *)(v184 + 8 * v197);
      while (1)
      {
        v67 = *(v66 - 1);
        v68 = *v66;
        v69 = v67;
        v70 = (uint64_t)v195;
        v71 = v69;
        v72 = (uint64_t)v193;
        dispatch thunk of MapsSyncObject.createTime.getter(v73);
        v74 = v194;
        dispatch thunk of MapsSyncObject.createTime.getter(v75);
        v76 = v70 + *(int *)(v208 + 48);
        sub_10019713C(v72, v70);
        v77 = (uint64_t)v74;
        v78 = v206;
        sub_10019713C(v77, v76);
        if (v78(v70, 1, v212) == 1)
        {
          sub_10019CB2C(v76);
          v79 = 1;
        }
        else
        {
          v80 = (uint64_t)v191;
          sub_100197184(v70, (uint64_t)v191);
          if (v78(v76, 1, v212) == 1)
          {
            v81 = v212;
            (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v80, v212);
            if (v78(v76, 1, v81) != 1)
              goto LABEL_162;
            v79 = 0;
          }
          else
          {
            v82 = v212;
            v83 = *(void (**)(char *, uint64_t, uint64_t))(v211 + 32);
            v84 = v204;
            v83(v204, v80, v212);
            v85 = v205;
            v83(v205, v76, v82);
            v79 = static Date.> infix(_:_:)(v84, v85);
            v86 = *(void (**)(char *, uint64_t))(v211 + 8);
            v86(v85, v82);
            v86(v84, v82);
            v70 = (uint64_t)v195;
          }
        }
        sub_10019CB2C(v70);

        if (((v209 ^ v79) & 1) != 0)
          break;
        ++v45;
        ++v66;
        v43 = v196;
        if (v196 == v45)
        {
          v45 = v196;
          goto LABEL_34;
        }
      }
      v43 = v196;
LABEL_34:
      v41 = v197;
    }
    v18 = v202;
    v7 = v203;
    v40 = v188;
    v42 = v210;
    if ((v209 & 1) != 0)
    {
      if (v45 < v41)
        goto LABEL_155;
      if (v41 < v45)
      {
        v87 = (uint64_t *)(v183 + 8 * v45);
        v88 = v41;
        v89 = v45;
        v90 = v88;
        v91 = (uint64_t *)(v210 + 8 * v88);
        do
        {
          if (v90 != --v89)
          {
            if (!v42)
              goto LABEL_160;
            v92 = *v91;
            *v91 = *v87;
            *v87 = v92;
          }
          ++v90;
          --v87;
          ++v91;
        }
        while (v90 < v89);
        v41 = v197;
      }
    }
  }
  if (v45 >= v43)
    goto LABEL_67;
  if (__OFSUB__(v45, v41))
    goto LABEL_153;
  if (v45 - v41 >= v185)
  {
    v41 = v197;
LABEL_67:
    if (v45 < v41)
      goto LABEL_148;
    goto LABEL_68;
  }
  if (__OFADD__(v197, v185))
    goto LABEL_156;
  v41 = v197;
  if (v197 + v185 >= v43)
    v93 = v43;
  else
    v93 = v197 + v185;
  if (v93 >= v197)
  {
    if (v45 == v93)
      goto LABEL_67;
    v188 = v40;
    v94 = v183 + 8 * v45;
    v192 = v93;
LABEL_56:
    v96 = *(void **)(v42 + 8 * v45);
    v97 = v41;
    v198 = v94;
    v209 = v45;
    while (1)
    {
      v98 = *(void **)v94;
      v99 = v96;
      v100 = v98;
      v101 = (uint64_t)v207;
      dispatch thunk of MapsSyncObject.createTime.getter(v102);
      dispatch thunk of MapsSyncObject.createTime.getter(v103);
      v104 = (uint64_t)&v7[*(int *)(v208 + 48)];
      sub_10019713C(v101, (uint64_t)v7);
      sub_10019713C((uint64_t)v18, v104);
      v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v211 + 48);
      if (v105((uint64_t)v7, 1, v212) == 1)
      {
        sub_10019CB2C(v104);
        sub_10019CB2C((uint64_t)v7);

      }
      else
      {
        v206 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v100;
        v106 = (uint64_t)v201;
        sub_100197184((uint64_t)v7, (uint64_t)v201);
        if (v105(v104, 1, v212) == 1)
        {
          v117 = v212;
          (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v106, v212);
          if (v105(v104, 1, v117) != 1)
            goto LABEL_162;
          sub_10019CB2C((uint64_t)v7);

LABEL_54:
          v95 = v209;
          v42 = v210;
LABEL_55:
          v45 = v95 + 1;
          v41 = v197;
          v94 = v198 + 8;
          if (v45 != v192)
            goto LABEL_56;
          v45 = v192;
          v40 = v188;
          if (v192 < v197)
            goto LABEL_148;
LABEL_68:
          v118 = v40;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v40);
          v209 = v45;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            v40 = v118;
          else
            v40 = sub_1000DCBFC(0, *((_QWORD *)v118 + 2) + 1, 1, v118);
          v121 = *((_QWORD *)v40 + 2);
          v120 = *((_QWORD *)v40 + 3);
          v44 = v121 + 1;
          v42 = v210;
          v122 = v197;
          if (v121 >= v120 >> 1)
          {
            v172 = sub_1000DCBFC((char *)(v120 > 1), v121 + 1, 1, v40);
            v122 = v197;
            v42 = v210;
            v40 = v172;
          }
          *((_QWORD *)v40 + 2) = v44;
          v123 = v40 + 32;
          v124 = &v40[16 * v121 + 32];
          *(_QWORD *)v124 = v122;
          *((_QWORD *)v124 + 1) = v209;
          if (v121)
          {
LABEL_73:
            v125 = v44 - 1;
            if (v44 >= 4)
            {
              v130 = &v123[16 * v44];
              v131 = *((_QWORD *)v130 - 8);
              v132 = *((_QWORD *)v130 - 7);
              v136 = __OFSUB__(v132, v131);
              v133 = v132 - v131;
              if (v136)
                goto LABEL_137;
              v135 = *((_QWORD *)v130 - 6);
              v134 = *((_QWORD *)v130 - 5);
              v136 = __OFSUB__(v134, v135);
              v128 = v134 - v135;
              v129 = v136;
              if (v136)
                goto LABEL_138;
              v137 = v44 - 2;
              v138 = &v123[16 * v44 - 32];
              v140 = *(_QWORD *)v138;
              v139 = *((_QWORD *)v138 + 1);
              v136 = __OFSUB__(v139, v140);
              v141 = v139 - v140;
              if (v136)
                goto LABEL_140;
              v136 = __OFADD__(v128, v141);
              v142 = v128 + v141;
              if (v136)
                goto LABEL_143;
              if (v142 >= v133)
              {
                v160 = &v123[16 * v125];
                v162 = *(_QWORD *)v160;
                v161 = *((_QWORD *)v160 + 1);
                v136 = __OFSUB__(v161, v162);
                v163 = v161 - v162;
                if (v136)
                  goto LABEL_147;
                v153 = v128 < v163;
              }
              else
              {
LABEL_86:
                if ((v129 & 1) != 0)
                  goto LABEL_139;
                v137 = v44 - 2;
                v143 = &v123[16 * v44 - 32];
                v145 = *(_QWORD *)v143;
                v144 = *((_QWORD *)v143 + 1);
                v146 = __OFSUB__(v144, v145);
                v147 = v144 - v145;
                v148 = v146;
                if (v146)
                  goto LABEL_142;
                v149 = &v123[16 * v125];
                v151 = *(_QWORD *)v149;
                v150 = *((_QWORD *)v149 + 1);
                v136 = __OFSUB__(v150, v151);
                v152 = v150 - v151;
                if (v136)
                  goto LABEL_145;
                if (__OFADD__(v147, v152))
                  goto LABEL_146;
                if (v147 + v152 < v128)
                  goto LABEL_98;
                v153 = v128 < v152;
              }
              if (v153)
                v125 = v137;
            }
            else
            {
              if (v44 == 3)
              {
                v127 = *((_QWORD *)v40 + 4);
                v126 = *((_QWORD *)v40 + 5);
                v136 = __OFSUB__(v126, v127);
                v128 = v126 - v127;
                v129 = v136;
                goto LABEL_86;
              }
              v154 = *((_QWORD *)v40 + 4);
              v155 = *((_QWORD *)v40 + 5);
              v136 = __OFSUB__(v155, v154);
              v147 = v155 - v154;
              v148 = v136;
LABEL_98:
              if ((v148 & 1) != 0)
                goto LABEL_141;
              v156 = &v123[16 * v125];
              v158 = *(_QWORD *)v156;
              v157 = *((_QWORD *)v156 + 1);
              v136 = __OFSUB__(v157, v158);
              v159 = v157 - v158;
              if (v136)
                goto LABEL_144;
              if (v159 < v147)
                goto LABEL_14;
            }
            v164 = v125 - 1;
            if (v125 - 1 >= v44)
            {
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
              break;
            }
            if (!v42)
              goto LABEL_159;
            v165 = v40;
            v166 = &v123[16 * v164];
            v167 = *(_QWORD *)v166;
            v168 = &v123[16 * v125];
            v169 = *((_QWORD *)v168 + 1);
            v170 = v200;
            sub_1001D1370((void **)(v42 + 8 * *(_QWORD *)v166), (id *)(v42 + 8 * *(_QWORD *)v168), v42 + 8 * v169, v199);
            v200 = v170;
            if (v170)
            {
LABEL_117:
              v173 = v165;
              goto LABEL_132;
            }
            if (v169 < v167)
              goto LABEL_134;
            if (v125 > *((_QWORD *)v165 + 2))
              goto LABEL_135;
            *(_QWORD *)v166 = v167;
            *(_QWORD *)&v123[16 * v164 + 8] = v169;
            v171 = *((_QWORD *)v165 + 2);
            if (v125 >= v171)
              goto LABEL_136;
            v44 = v171 - 1;
            memmove(&v123[16 * v125], v168 + 16, 16 * (v171 - 1 - v125));
            v40 = v165;
            *((_QWORD *)v165 + 2) = v171 - 1;
            v42 = v210;
            if (v171 <= 2)
              goto LABEL_14;
            goto LABEL_73;
          }
          v44 = 1;
LABEL_14:
          v43 = v196;
          v41 = v209;
          v18 = v202;
          v7 = v203;
          v12 = v187;
          if (v209 >= v196)
            goto LABEL_120;
          goto LABEL_15;
        }
        v107 = v211;
        v108 = *(void (**)(char *, uint64_t, uint64_t))(v211 + 32);
        v109 = v204;
        v110 = v106;
        v111 = v212;
        v108(v204, v110, v212);
        v112 = v205;
        v108(v205, v104, v111);
        v113 = static Date.> infix(_:_:)(v109, v112);
        v114 = *(void (**)(char *, uint64_t))(v107 + 8);
        v114(v112, v111);
        v115 = v109;
        v18 = v202;
        v7 = v203;
        v114(v115, v111);
        sub_10019CB2C((uint64_t)v7);

        if ((v113 & 1) == 0)
          goto LABEL_54;
      }
      v42 = v210;
      if (!v210)
        goto LABEL_158;
      v116 = *(void **)v94;
      v96 = *(void **)(v94 + 8);
      *(_QWORD *)v94 = v96;
      *(_QWORD *)(v94 + 8) = v116;
      v94 -= 8;
      ++v97;
      v95 = v209;
      if (v209 == v97)
        goto LABEL_55;
    }
  }
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  _diagnoseUnexpectedEnumCase<A>(type:)(v208, v208);
  __break(1u);
LABEL_163:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1001D0BBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v18 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = sub_10006C008();
    v8 = (uint64_t *)(v6 + 24 * v4);
LABEL_5:
    v9 = v6 + 24 * v4;
    v10 = *(_QWORD *)(v9 + 8);
    v11 = *(_QWORD *)(v9 + 16);
    v12 = v18;
    v13 = v8;
    while (1)
    {
      v14 = *(v13 - 2);
      v15 = *(v13 - 1);
      v17[2] = v10;
      v17[3] = v11;
      v17[0] = v14;
      v17[1] = v15;
      result = StringProtocol.localizedStandardCompare<A>(_:)(v17, &type metadata for String, &type metadata for String, v7, v7);
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v8 += 3;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v16 = *v13;
      v10 = v13[1];
      v11 = v13[2];
      *(_OWORD *)v13 = *(_OWORD *)(v13 - 3);
      v13[2] = *(v13 - 1);
      *(v13 - 2) = v10;
      *(v13 - 1) = v11;
      *(v13 - 3) = v16;
      v13 -= 3;
      if (v4 == ++v12)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

void sub_1001D0CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  __n128 v26;
  __n128 v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v44 = a1;
  v58 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v58 - 8);
  __chkstk_darwin(v58);
  v49 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v48 = (char *)&v42 - v9;
  v53 = sub_100008B04(&qword_10149F858);
  __chkstk_darwin(v53);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v12);
  v50 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  __chkstk_darwin(v17);
  v54 = (char *)&v42 - v18;
  v43 = a2;
  if (a3 != a2)
  {
    v55 = *a4;
    v19 = v55 + 8 * a3 - 8;
    v46 = v16;
    v47 = v11;
LABEL_5:
    v20 = *(void **)(v55 + 8 * a3);
    v21 = v44;
    v45 = v19;
    v56 = a3;
    while (1)
    {
      v22 = *(void **)v19;
      v23 = v20;
      v24 = v22;
      v25 = (uint64_t)v54;
      dispatch thunk of MapsSyncObject.createTime.getter(v26);
      dispatch thunk of MapsSyncObject.createTime.getter(v27);
      v28 = (uint64_t)&v11[*(int *)(v53 + 48)];
      sub_10019713C(v25, (uint64_t)v11);
      sub_10019713C((uint64_t)v16, v28);
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
      if (v29((uint64_t)v11, 1, v58) == 1)
      {
        sub_10019CB2C(v28);
        sub_10019CB2C((uint64_t)v11);

        v30 = v56;
      }
      else
      {
        v51 = v23;
        v52 = v24;
        v31 = v50;
        sub_100197184((uint64_t)v11, v50);
        if (v29(v28, 1, v58) == 1)
        {
          v41 = v58;
          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v31, v58);
          if (v29(v28, 1, v41) != 1)
            goto LABEL_16;
          sub_10019CB2C((uint64_t)v11);

          v30 = v56;
LABEL_4:
          a3 = v30 + 1;
          v19 = v45 + 8;
          if (a3 == v43)
            return;
          goto LABEL_5;
        }
        v32 = v57;
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
        v34 = v48;
        v35 = v58;
        v33(v48, v31, v58);
        v36 = v49;
        v33(v49, v28, v35);
        v37 = static Date.> infix(_:_:)(v34, v36);
        v38 = *(void (**)(char *, uint64_t))(v32 + 8);
        v16 = v46;
        v38(v36, v35);
        v39 = v34;
        v11 = v47;
        v38(v39, v35);
        sub_10019CB2C((uint64_t)v11);

        v30 = v56;
        if ((v37 & 1) == 0)
          goto LABEL_4;
      }
      if (!v55)
        break;
      v40 = *(void **)v19;
      v20 = *(void **)(v19 + 8);
      *(_QWORD *)v19 = v20;
      *(_QWORD *)(v19 + 8) = v40;
      v19 -= 8;
      if (v30 == ++v21)
        goto LABEL_4;
    }
    __break(1u);
LABEL_16:
    _diagnoseUnexpectedEnumCase<A>(type:)(v53, v53);
    __break(1u);
  }
}

uint64_t sub_1001D104C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  __int128 v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char *v29;
  __int128 v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  const void *v37;
  char *v38;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v38 = __src;
  v37 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v21 = &v4[24 * v11];
      v36 = v21;
      v38 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v22 = sub_10006C008();
        v23 = a3 - 24;
        do
        {
          v24 = (char *)(v23 + 24);
          v25 = *((_QWORD *)v21 - 1);
          v26 = *((_QWORD *)v6 - 2);
          v27 = *((_QWORD *)v6 - 1);
          v34 = *((_QWORD *)v21 - 2);
          v35 = v25;
          v32 = v26;
          v33 = v27;
          if (StringProtocol.localizedStandardCompare<A>(_:)(&v32, &type metadata for String, &type metadata for String, v22, v22) == -1)
          {
            v29 = v6 - 24;
            if (v24 != v6 || v23 >= (unint64_t)v6)
            {
              v30 = *(_OWORD *)v29;
              *(_QWORD *)(v23 + 16) = *((_QWORD *)v6 - 1);
              *(_OWORD *)v23 = v30;
            }
            v38 = v6 - 24;
            if (v29 <= v7)
              break;
          }
          else
          {
            v36 = v21 - 24;
            if (v24 < v21 || v23 >= (unint64_t)v21 || v24 != v21)
            {
              v28 = *(_OWORD *)(v21 - 24);
              *(_QWORD *)(v23 + 16) = *((_QWORD *)v21 - 1);
              *(_OWORD *)v23 = v28;
            }
            v29 = v6;
            v21 -= 24;
            if (v6 <= v7)
              break;
          }
          v23 -= 24;
          v6 = v29;
        }
        while (v21 > v4);
      }
LABEL_40:
      sub_1000DD054((void **)&v38, &v37, &v36);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[24 * v9];
    v36 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      v13 = sub_10006C008();
      v14 = v4;
      while (1)
      {
        v15 = *((_QWORD *)v6 + 2);
        v16 = *((_QWORD *)v14 + 1);
        v17 = *((_QWORD *)v14 + 2);
        v34 = *((_QWORD *)v6 + 1);
        v35 = v15;
        v32 = v16;
        v33 = v17;
        if (StringProtocol.localizedStandardCompare<A>(_:)(&v32, &type metadata for String, &type metadata for String, v13, v13) == -1)
        {
          v19 = v6 + 24;
          v18 = v6;
          if (v7 == v6 && v7 < v19)
            goto LABEL_18;
        }
        else
        {
          v4 = v14 + 24;
          v18 = v14;
          v19 = v6;
          if (v7 == v14)
          {
            v14 += 24;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v14 += 24;
          }
        }
        v20 = *(_OWORD *)v18;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v18 + 2);
        *(_OWORD *)v7 = v20;
LABEL_18:
        v7 += 24;
        if (v14 < v12)
        {
          v6 = v19;
          if ((unint64_t)v19 < a3)
            continue;
        }
        v37 = v4;
        v38 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D1370(void **a1, id *a2, unint64_t a3, void **a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  id *v45;
  id *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  char *v50;
  char v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  void **v55;
  void **v56;
  void **v57;
  id *v58;
  void *v59;
  void *v60;
  void *v61;
  char *v62;
  id v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  char v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  unint64_t v78;
  char *v79;
  void **v80;
  uint64_t result;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id *v94;
  void **v95;
  void **v96;
  uint64_t v97;
  unint64_t v98;
  void **v99;
  id *v100;

  v93 = type metadata accessor for Date(0);
  v97 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v84 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v88 = (char *)&v82 - v10;
  v92 = sub_100008B04(&qword_10149F858);
  __chkstk_darwin(v92);
  v89 = (unint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v82 - v13;
  v15 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  v87 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  v86 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  v85 = (uint64_t)&v82 - v21;
  __chkstk_darwin(v22);
  v91 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  v26 = a4;
  v27 = a2;
  v90 = (char *)&v82 - v28;
  v29 = (char *)a2 - (char *)a1;
  v30 = v29 / 8;
  v31 = a3 - (_QWORD)v27;
  v32 = a3 - (_QWORD)v27 + 7;
  if ((uint64_t)(a3 - (_QWORD)v27) >= 0)
    v32 = a3 - (_QWORD)v27;
  v33 = v32 >> 3;
  v100 = a1;
  v99 = v26;
  v96 = v26;
  if (v30 < v32 >> 3)
  {
    if (v29 < -7)
      goto LABEL_54;
    if (v26 != a1 || &a1[v30] <= v26)
    {
      memmove(v26, a1, 8 * v30);
      v26 = v96;
    }
    v89 = (unint64_t)&v26[v30];
    v98 = v89;
    v34 = v85;
    if (v29 >= 8 && (unint64_t)v27 < a3)
    {
      v83 = a3;
      while (1)
      {
        v95 = a1;
        v96 = v26;
        v35 = *v26;
        v36 = *v27;
        v37 = v35;
        v38 = (uint64_t)v90;
        dispatch thunk of MapsSyncObject.createTime.getter(v39);
        v40 = (uint64_t)v91;
        dispatch thunk of MapsSyncObject.createTime.getter(v41);
        v42 = (uint64_t)&v14[*(int *)(v92 + 48)];
        sub_10019713C(v38, (uint64_t)v14);
        sub_10019713C(v40, v42);
        v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
        v44 = v93;
        if (v43((uint64_t)v14, 1, v93) == 1)
        {
          sub_10019CB2C(v42);
          sub_10019CB2C((uint64_t)v14);

          v45 = v95;
        }
        else
        {
          sub_100197184((uint64_t)v14, v34);
          if (v43(v42, 1, v44) == 1)
          {
            (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v34, v44);
            if (v43(v42, 1, v44) != 1)
              goto LABEL_53;
            sub_10019CB2C((uint64_t)v14);

            v45 = v95;
LABEL_22:
            v55 = v96;
            if (v45 != v96)
              *v45 = *v96;
            v26 = v55 + 1;
            v99 = v26;
            v46 = v27;
            goto LABEL_25;
          }
          v47 = v97;
          v48 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 32);
          v49 = v88;
          v48(v88, v85, v44);
          v94 = v27;
          v50 = v84;
          v48(v84, v42, v44);
          v51 = static Date.> infix(_:_:)(v49, v50);
          v52 = *(void (**)(char *, uint64_t))(v47 + 8);
          v34 = v85;
          v53 = v50;
          v27 = v94;
          v52(v53, v44);
          v54 = v49;
          a3 = v83;
          v52(v54, v44);
          sub_10019CB2C((uint64_t)v14);

          v45 = v95;
          if ((v51 & 1) == 0)
            goto LABEL_22;
        }
        v46 = v27 + 1;
        if (v45 < v27 || v45 >= v46 || v45 != v27)
          *v45 = *v27;
        v26 = v96;
LABEL_25:
        a1 = v45 + 1;
        v100 = a1;
        if ((unint64_t)v26 < v89)
        {
          v27 = v46;
          if ((unint64_t)v46 < a3)
            continue;
        }
        break;
      }
    }
LABEL_52:
    sub_1000DCFAC((void **)&v100, (const void **)&v99, &v98);
    return 1;
  }
  v85 = v25;
  if (v31 < -7)
    goto LABEL_54;
  if (v26 != v27 || &v27[v33] <= v26)
  {
    memmove(v26, v27, 8 * v33);
    v26 = v96;
  }
  v56 = &v26[v33];
  v98 = (unint64_t)v56;
  v100 = v27;
  if (v31 < 8 || a1 >= v27)
    goto LABEL_52;
  v57 = (void **)(a3 - 8);
  v58 = v27;
  v95 = a1;
  while (1)
  {
    v94 = v27;
    v91 = (char *)v56;
    v60 = *--v56;
    v59 = v60;
    v61 = *--v58;
    v62 = v59;
    v63 = v61;
    v64 = (uint64_t)v86;
    v90 = v62;
    dispatch thunk of MapsSyncObject.createTime.getter(v65);
    v66 = (uint64_t)v87;
    dispatch thunk of MapsSyncObject.createTime.getter(v67);
    v68 = v89;
    v69 = v89 + *(int *)(v92 + 48);
    sub_10019713C(v64, v89);
    sub_10019713C(v66, v69);
    v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
    v71 = v93;
    if (v70(v68, 1, v93) != 1)
      break;
    sub_10019CB2C(v69);
    v72 = 1;
LABEL_41:
    v78 = (unint64_t)v95;
    v79 = (char *)(v57 + 1);
    sub_10019CB2C(v68);

    if ((v72 & 1) != 0)
    {
      v80 = v96;
      if (v79 != (char *)v94 || v57 >= v94)
        *v57 = *v58;
      v100 = v58;
      v56 = (void **)v91;
    }
    else
    {
      v98 = (unint64_t)v56;
      v80 = v96;
      v58 = v94;
      if (v79 < v91 || v57 >= (void **)v91 || v79 != v91)
        *v57 = *v56;
    }
    if (v56 > v80)
    {
      --v57;
      v27 = v58;
      if ((unint64_t)v58 > v78)
        continue;
    }
    goto LABEL_52;
  }
  v73 = v85;
  sub_100197184(v68, v85);
  if (v70(v69, 1, v71) != 1)
  {
    v74 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 32);
    v74(v88, v73, v71);
    v75 = v84;
    v74(v84, v69, v71);
    v72 = static Date.> infix(_:_:)(v88, v75);
    v76 = *(void (**)(char *, uint64_t))(v97 + 8);
    v77 = v75;
    v68 = v89;
    v76(v77, v71);
    v76(v88, v71);
    goto LABEL_41;
  }
  (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v73, v71);
  if (v70(v69, 1, v71) == 1)
  {
    v72 = 0;
    goto LABEL_41;
  }
LABEL_53:
  _diagnoseUnexpectedEnumCase<A>(type:)(v92, v92);
  __break(1u);
LABEL_54:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001D1AAC(void **a1, void **__src, unint64_t a3, void **__dst, void *a5)
{
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  void **v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  double v33;
  double v34;
  id *v35;
  void **v37;
  void **v38;
  void **v39;
  void **v40;
  void **v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  double v51;
  double v52;
  double v53;
  id v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  id v60;
  double v61;
  double v62;
  void **v63;
  uint64_t result;
  id v65;
  id v66;
  id v68;
  id v69;
  id __srcb;
  id v72;
  char *v73;
  void **v74;
  void **v76;
  void **v77;
  void **v78;
  void **v79;
  void **v80;

  v5 = __dst;
  v6 = (char *)__src - (char *)a1;
  v7 = (char *)__src - (char *)a1 + 7;
  if ((char *)__src - (char *)a1 >= 0)
    v7 = (char *)__src - (char *)a1;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)__src;
  v10 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v10 = a3 - (_QWORD)__src;
  v11 = v10 >> 3;
  v79 = __dst;
  v80 = a1;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7)
      goto LABEL_62;
    if (__dst != __src || &__src[v11] <= __dst)
      memmove(__dst, __src, 8 * v11);
    v37 = &v5[v11];
    v78 = v37;
    v80 = __src;
    if (a1 >= __src || v9 < 8)
    {
LABEL_61:
      sub_1000DCFAC((void **)&v80, (const void **)&v79, &v78);
      return 1;
    }
    v38 = __src;
    v39 = (void **)(a3 - 8);
    v40 = v38;
    while (1)
    {
      v76 = v37;
      v77 = v38;
      v41 = v37 - 1;
      v42 = *(v40 - 1);
      v73 = (char *)(v40 - 1);
      v43 = *(v37 - 1);
      v44 = v42;
      v45 = objc_msgSend(v43, "latitude");
      v46 = objc_msgSend(v43, "longitude");
      v47 = objc_msgSend(v44, "latitude");
      v48 = objc_msgSend(v44, "longitude");
      v49 = v48;
      if (!v45)
        goto LABEL_47;
      if (!v46)
      {
        v46 = v45;
LABEL_47:

        v63 = v39 + 1;
        v37 = v76;
LABEL_48:
        v78 = v41;
        if (v63 < v37 || v39 >= v37 || v63 != v37)
          *v39 = *v41;
        v40 = v77;
        v37 = v41;
        goto LABEL_59;
      }
      if (!v47)
        goto LABEL_54;
      if (!v48)
        break;
      v66 = v45;
      v65 = v46;
      v50 = v47;
      v68 = v49;
      objc_msgSend(v66, "doubleValue");
      v52 = v51;
      objc_msgSend(v65, "doubleValue");
      v54 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v52, v53);
      objc_msgSend(v54, "distanceFromLocation:", a5);
      v56 = v55;

      objc_msgSend(v50, "doubleValue");
      v58 = v57;
      objc_msgSend(v68, "doubleValue");
      v60 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v58, v59);
      objc_msgSend(v60, "distanceFromLocation:", a5);
      v62 = v61;

      v63 = v39 + 1;
      v37 = v76;
      if (v56 >= v62)
        goto LABEL_48;
LABEL_55:
      v40 = (void **)v73;
      if (v63 != v77 || v39 >= v77)
        *v39 = *(void **)v73;
      v80 = (void **)v73;
LABEL_59:
      if (v40 > a1)
      {
        --v39;
        v38 = v40;
        if (v37 > v5)
          continue;
      }
      goto LABEL_61;
    }
    v49 = v47;
LABEL_54:

    v63 = v39 + 1;
    v37 = v76;
    goto LABEL_55;
  }
  if (v6 >= -7)
  {
    v12 = __src;
    if (__dst != a1 || &a1[v8] <= __dst)
      memmove(__dst, a1, 8 * v8);
    v74 = &v5[v8];
    v78 = v74;
    if ((unint64_t)v12 < a3 && v6 >= 8)
    {
      v13 = a1;
      while (1)
      {
        v14 = *v5;
        v15 = *v12;
        v16 = v14;
        v17 = objc_msgSend(v15, "latitude");
        v18 = objc_msgSend(v15, "longitude");
        v19 = objc_msgSend(v16, "latitude");
        v20 = objc_msgSend(v16, "longitude");
        v21 = v20;
        if (!v17)
          goto LABEL_22;
        if (!v18)
          break;
        if (!v19)
          goto LABEL_25;
        if (!v20)
        {
          v21 = v19;
LABEL_25:

LABEL_26:
          v35 = v12 + 1;
          if (v13 < v12 || v13 >= v35 || v13 != v12)
            *v13 = *v12;
          goto LABEL_30;
        }
        __srcb = v17;
        v69 = v18;
        v22 = v19;
        v72 = v21;
        objc_msgSend(__srcb, "doubleValue");
        v24 = v23;
        objc_msgSend(v69, "doubleValue");
        v26 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v24, v25);
        objc_msgSend(v26, "distanceFromLocation:", a5);
        v28 = v27;

        objc_msgSend(v22, "doubleValue");
        v30 = v29;
        objc_msgSend(v72, "doubleValue");
        v32 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v30, v31);
        objc_msgSend(v32, "distanceFromLocation:", a5);
        v34 = v33;

        if (v28 < v34)
          goto LABEL_26;
        if (v13 != v5)
          goto LABEL_19;
LABEL_20:
        v79 = ++v5;
        v35 = v12;
LABEL_30:
        ++v13;
        if (v5 < v74)
        {
          v12 = v35;
          if ((unint64_t)v35 < a3)
            continue;
        }
        v80 = v13;
        goto LABEL_61;
      }
      v18 = v17;
LABEL_22:

      if (v13 == v5)
        goto LABEL_20;
LABEL_19:
      *v13 = *v5;
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_62:

  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1001D215C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  double v28;
  void *v29;
  uint64_t v32;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a3;
  if (a3 != a2)
  {
    v37 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_7:
    v7 = *(void **)(v37 + 8 * v38);
    v8 = a1;
    v32 = v5;
    while (1)
    {
      v9 = *(void **)v5;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, "latitude");
      v6 = objc_msgSend(v10, "longitude");
      v13 = objc_msgSend(v11, "latitude");
      v14 = objc_msgSend(v11, "longitude");
      v15 = v14;
      if (!v12)
        goto LABEL_5;
      if (!v6)
      {
        v6 = v12;
LABEL_5:

LABEL_6:
        v5 = v32 + 8;
        if (++v38 == a2)
          return;
        goto LABEL_7;
      }
      if (!v13)
        goto LABEL_15;
      if (!v14)
        break;
      v36 = v12;
      v34 = v6;
      v35 = v13;
      v16 = v15;
      objc_msgSend(v36, "doubleValue");
      v18 = v17;
      objc_msgSend(v34, "doubleValue");
      v20 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v18, v19);
      objc_msgSend(v20, "distanceFromLocation:", a5);
      v22 = v21;

      objc_msgSend(v35, "doubleValue");
      v24 = v23;
      objc_msgSend(v16, "doubleValue");
      v26 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v24, v25);
      objc_msgSend(v26, "distanceFromLocation:", a5);
      v28 = v27;

      if (v22 >= v28)
        goto LABEL_6;
LABEL_16:
      if (!v37)
      {
        __break(1u);
        return;
      }
      v29 = *(void **)v5;
      v7 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v7;
      *(_QWORD *)(v5 + 8) = v29;
      v5 -= 8;
      if (v38 == ++v8)
        goto LABEL_6;
    }
    v15 = v13;
LABEL_15:

    goto LABEL_16;
  }
}

void sub_1001D2424(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int v5;
  Swift::Int v6;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::Int v13;
  char *v14;
  char *v15;
  uint64_t v16;
  Swift::Int v17;
  char *v18;
  char *v19;
  void *v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  Swift::Int v25;
  Swift::Int v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  double v38;
  double v39;
  double v40;
  id v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  double v48;
  double v49;
  Swift::Int v50;
  uint64_t *v51;
  char *v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  double v70;
  double v71;
  double v72;
  id v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  id v79;
  double v80;
  double v81;
  void *v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void **v141;
  unint64_t v142;
  char *v143;
  char *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  Swift::Int v150;
  char *v151;
  char *v152;
  char *v153;
  Swift::Int v154;
  uint64_t v155;
  char *v156;
  Swift::Int v157;
  void **__dst;
  uint64_t v159;
  id v160;
  id v161;
  void **v162;
  id v163;
  id v164;
  void **v165;
  uint64_t v166;
  uint64_t v167;
  _BOOL4 __src;
  char *__srca;
  char *__srcb;
  void **__srcc;
  void *v172;
  id v173;
  uint64_t v174;

  v3 = v2;
  v5 = a1[1];
  v160 = a2;
  v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      if (v5)
      {
        v12 = v160;
        sub_1001D215C(0, v5, 1, a1, (uint64_t)v12);

      }
      else
      {

      }
      return;
    }
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:

    __break(1u);
LABEL_167:

    __break(1u);
LABEL_168:

    __break(1u);
LABEL_169:

    __break(1u);
LABEL_170:

    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_170;
  v8 = v6;
  v157 = v5;
  v147 = a1;
  if (v5 >= 2)
  {
    v9 = v7 >> 1;
    v10 = sub_100008B04(&qword_10149B548);
    v11 = static Array._allocateBufferUninitialized(minimumCapacity:)(v9, v10);
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    __dst = (void **)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v174 = v11;
    goto LABEL_12;
  }
  v13 = v5;
  v14 = (char *)_swiftEmptyArrayStorage;
  v174 = (uint64_t)_swiftEmptyArrayStorage;
  __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
  if (v13 != 1)
  {
    v85 = _swiftEmptyArrayStorage[2];
LABEL_126:
    v155 = (uint64_t)v14;
    if (v85 < 2)
    {
LABEL_137:
      swift_bridgeObjectRelease(v155);
      goto LABEL_138;
    }
    v137 = *v147;
    v167 = *v147;
    while (1)
    {
      v138 = v85 - 2;
      if (v85 < 2)
        break;
      if (!v137)
        goto LABEL_169;
      v139 = *(_QWORD *)(v155 + 32 + 16 * v138);
      v140 = *(_QWORD *)(v155 + 32 + 16 * (v85 - 1) + 8);
      v141 = (void **)(v137 + 8 * v139);
      __srcc = (void **)(v137 + 8 * *(_QWORD *)(v155 + 32 + 16 * (v85 - 1)));
      v142 = v137 + 8 * v140;
      v24 = v160;
      sub_1001D1AAC(v141, __srcc, v142, __dst, v24);
      if (v3)
      {
        v135 = v155;
        goto LABEL_122;
      }

      if (v140 < v139)
        goto LABEL_158;
      v143 = (char *)v155;
      if ((swift_isUniquelyReferenced_nonNull_native(v155) & 1) == 0)
        v143 = sub_1000DD110(v155);
      if (v138 >= *((_QWORD *)v143 + 2))
        goto LABEL_159;
      v144 = &v143[16 * v138 + 32];
      *(_QWORD *)v144 = v139;
      *((_QWORD *)v144 + 1) = v140;
      v145 = *((_QWORD *)v143 + 2);
      if (v85 > v145)
        goto LABEL_160;
      memmove(&v143[16 * v85 + 16], &v143[16 * v85 + 32], 16 * (v145 - v85));
      v155 = (uint64_t)v143;
      *((_QWORD *)v143 + 2) = v145 - 1;
      v85 = v145 - 1;
      v137 = v167;
      if (v145 <= 2)
        goto LABEL_137;
    }
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
LABEL_12:
  v150 = v8;
  v15 = 0;
  v16 = *a1;
  v148 = *a1 - 8;
  v14 = (char *)_swiftEmptyArrayStorage;
  v17 = v157;
  v166 = *a1;
  while (2)
  {
    v18 = v15;
    v19 = v15 + 1;
    v156 = v15;
    if ((uint64_t)(v15 + 1) >= v17)
    {
      v26 = (Swift::Int)(v15 + 1);
      v50 = v150;
      goto LABEL_45;
    }
    v152 = v14;
    v20 = *(void **)(v16 + 8 * (_QWORD)v19);
    v21 = v15;
    v172 = *(void **)(v16 + 8 * (_QWORD)v15);
    v22 = v172;
    v173 = v20;
    v23 = v20;
    v24 = v22;
    __src = sub_1001CF284(&v173, &v172, (uint64_t)v160);
    if (v3)
    {
      swift_bridgeObjectRelease(v152);

      goto LABEL_123;
    }

    v25 = (Swift::Int)(v21 + 2);
    v26 = (Swift::Int)(v21 + 2);
    v14 = v152;
    if ((uint64_t)(v21 + 2) < v157)
    {
      while (1)
      {
        v27 = *(void **)(v16 + 8 * (_QWORD)v19);
        v28 = *(id *)(v16 + 8 * v25);
        v29 = v27;
        v30 = objc_msgSend(v28, "latitude");
        v31 = objc_msgSend(v28, "longitude");
        v32 = objc_msgSend(v29, "latitude");
        v33 = objc_msgSend(v29, "longitude");
        v34 = v33;
        if (!v30)
          goto LABEL_24;
        if (v31)
        {
          if (!v32)
            goto LABEL_28;
          if (v33)
          {
            v35 = v30;
            v163 = v31;
            v36 = v32;
            v37 = v34;
            objc_msgSend(v35, "doubleValue");
            v39 = v38;
            objc_msgSend(v163, "doubleValue");
            v41 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v39, v40);
            objc_msgSend(v41, "distanceFromLocation:", v160);
            v43 = v42;

            objc_msgSend(v36, "doubleValue");
            v45 = v44;
            objc_msgSend(v37, "doubleValue");
            v47 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v45, v46);
            objc_msgSend(v47, "distanceFromLocation:", v160);
            v49 = v48;

            if (((__src ^ (v43 >= v49)) & 1) == 0)
            {
              v26 = v25;
              v14 = v152;
              v16 = v166;
              break;
            }
            v26 = v25 + 1;
            v19 = (char *)v25;
            v25 = v26;
            v14 = v152;
            v16 = v166;
            if (v26 >= v157)
              break;
          }
          else
          {
            v34 = v32;
LABEL_28:

            if (!__src)
            {
              v26 = v25;
              v3 = 0;
              v50 = v150;
              v16 = v166;
              v18 = v156;
              goto LABEL_45;
            }
            v26 = v25 + 1;
            v19 = (char *)v25;
            v25 = v26;
            v16 = v166;
            if (v26 >= v157)
              goto LABEL_36;
          }
        }
        else
        {
          v31 = v30;
LABEL_24:

          if (__src)
          {
            v26 = v25;
            v16 = v166;
            goto LABEL_36;
          }
          v26 = v25 + 1;
          v19 = (char *)v25;
          v25 = v26;
          v16 = v166;
          if (v26 >= v157)
            goto LABEL_43;
        }
      }
    }
    if (__src)
    {
LABEL_36:
      v18 = v156;
      if (v26 < (uint64_t)v156)
        goto LABEL_165;
      if ((uint64_t)v156 < v26)
      {
        v3 = 0;
        v51 = (uint64_t *)(v148 + 8 * v26);
        v52 = (char *)v26;
        v53 = v156;
        v54 = (uint64_t *)(v16 + 8 * (_QWORD)v156);
        v50 = v150;
        while (1)
        {
          if (v53 != --v52)
          {
            if (!v16)
              goto LABEL_168;
            v55 = *v54;
            *v54 = *v51;
            *v51 = v55;
          }
          ++v53;
          --v51;
          ++v54;
          if ((uint64_t)v53 >= (uint64_t)v52)
            goto LABEL_45;
        }
      }
      v3 = 0;
      v50 = v150;
    }
    else
    {
LABEL_43:
      v3 = 0;
      v50 = v150;
      v18 = v156;
    }
LABEL_45:
    if (v26 >= v157)
      goto LABEL_70;
    if (__OFSUB__(v26, v18))
      goto LABEL_161;
    if (v26 - (uint64_t)v18 >= v50)
      goto LABEL_70;
    if (__OFADD__(v18, v50))
      goto LABEL_163;
    v56 = (char *)v157;
    if ((uint64_t)&v18[v50] < v157)
      v56 = &v18[v50];
    if ((uint64_t)v56 < (uint64_t)v18)
      goto LABEL_164;
    if ((char *)v26 == v56)
      goto LABEL_70;
    v151 = v56;
    v153 = v14;
    v149 = v3;
    v57 = v148 + 8 * v26;
    while (2)
    {
      v59 = *(void **)(v16 + 8 * v26);
      v159 = v57;
      while (1)
      {
        __srca = v18;
        v60 = v16;
        v61 = *(void **)v57;
        v62 = v59;
        v63 = v61;
        v64 = objc_msgSend(v62, "latitude");
        v58 = objc_msgSend(v62, "longitude");
        v65 = objc_msgSend(v63, "latitude");
        v66 = objc_msgSend(v63, "longitude");
        v67 = v66;
        if (!v64)
          break;
        if (!v58)
        {
          v58 = v64;
          break;
        }
        if (v65)
        {
          if (v66)
          {
            v164 = v64;
            v68 = v58;
            v69 = v65;
            v161 = v67;
            objc_msgSend(v164, "doubleValue");
            v71 = v70;
            objc_msgSend(v68, "doubleValue");
            v73 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v71, v72);
            objc_msgSend(v73, "distanceFromLocation:", v160);
            v75 = v74;

            objc_msgSend(v69, "doubleValue");
            v77 = v76;
            objc_msgSend(v161, "doubleValue");
            v79 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v77, v78);
            objc_msgSend(v79, "distanceFromLocation:", v160);
            v81 = v80;

            v16 = v166;
            if (v75 >= v81)
              goto LABEL_56;
            goto LABEL_66;
          }
          v67 = v65;
        }

        v16 = v60;
LABEL_66:
        if (!v16)
          goto LABEL_166;
        v82 = *(void **)v57;
        v59 = *(void **)(v57 + 8);
        *(_QWORD *)v57 = v59;
        *(_QWORD *)(v57 + 8) = v82;
        v57 -= 8;
        v18 = __srca + 1;
        if ((char *)v26 == __srca + 1)
          goto LABEL_56;
      }

      v16 = v60;
LABEL_56:
      ++v26;
      v57 = v159 + 8;
      v18 = v156;
      if ((char *)v26 != v151)
        continue;
      break;
    }
    v26 = (Swift::Int)v151;
    v3 = v149;
    v14 = v153;
LABEL_70:
    if (v26 < (uint64_t)v18)
      goto LABEL_157;
    v154 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_1000DCBFC(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v84 = *((_QWORD *)v14 + 2);
    v83 = *((_QWORD *)v14 + 3);
    v85 = v84 + 1;
    if (v84 >= v83 >> 1)
      v14 = sub_1000DCBFC((char *)(v83 > 1), v84 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v85;
    v86 = v14 + 32;
    v87 = &v14[16 * v84 + 32];
    *(_QWORD *)v87 = v156;
    *((_QWORD *)v87 + 1) = v26;
    if (!v84)
    {
      v85 = 1;
LABEL_119:
      v17 = v157;
      v15 = (char *)v154;
      if (v154 >= v157)
        goto LABEL_126;
      continue;
    }
    break;
  }
  __srcb = v14 + 32;
  while (2)
  {
    v88 = v85 - 1;
    if (v85 >= 4)
    {
      v93 = &v86[16 * v85];
      v94 = *((_QWORD *)v93 - 8);
      v95 = *((_QWORD *)v93 - 7);
      v99 = __OFSUB__(v95, v94);
      v96 = v95 - v94;
      if (v99)
        goto LABEL_145;
      v98 = *((_QWORD *)v93 - 6);
      v97 = *((_QWORD *)v93 - 5);
      v99 = __OFSUB__(v97, v98);
      v91 = v97 - v98;
      v92 = v99;
      if (v99)
        goto LABEL_146;
      v100 = v85 - 2;
      v101 = &v86[16 * v85 - 32];
      v103 = *(_QWORD *)v101;
      v102 = *((_QWORD *)v101 + 1);
      v99 = __OFSUB__(v102, v103);
      v104 = v102 - v103;
      if (v99)
        goto LABEL_148;
      v99 = __OFADD__(v91, v104);
      v105 = v91 + v104;
      if (v99)
        goto LABEL_151;
      if (v105 >= v96)
      {
        v123 = &v86[16 * v88];
        v125 = *(_QWORD *)v123;
        v124 = *((_QWORD *)v123 + 1);
        v99 = __OFSUB__(v124, v125);
        v126 = v124 - v125;
        if (v99)
          goto LABEL_155;
        v116 = v91 < v126;
      }
      else
      {
LABEL_90:
        if ((v92 & 1) != 0)
          goto LABEL_147;
        v100 = v85 - 2;
        v106 = &v86[16 * v85 - 32];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v109 = __OFSUB__(v107, v108);
        v110 = v107 - v108;
        v111 = v109;
        if (v109)
          goto LABEL_150;
        v112 = &v86[16 * v88];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v99 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v99)
          goto LABEL_153;
        if (__OFADD__(v110, v115))
          goto LABEL_154;
        if (v110 + v115 < v91)
          goto LABEL_102;
        v116 = v91 < v115;
      }
      if (v116)
        v88 = v100;
    }
    else
    {
      if (v85 == 3)
      {
        v90 = *((_QWORD *)v14 + 4);
        v89 = *((_QWORD *)v14 + 5);
        v99 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        v92 = v99;
        goto LABEL_90;
      }
      v117 = *((_QWORD *)v14 + 4);
      v118 = *((_QWORD *)v14 + 5);
      v99 = __OFSUB__(v118, v117);
      v110 = v118 - v117;
      v111 = v99;
LABEL_102:
      if ((v111 & 1) != 0)
        goto LABEL_149;
      v119 = &v86[16 * v88];
      v121 = *(_QWORD *)v119;
      v120 = *((_QWORD *)v119 + 1);
      v99 = __OFSUB__(v120, v121);
      v122 = v120 - v121;
      if (v99)
        goto LABEL_152;
      if (v122 < v110)
        goto LABEL_119;
    }
    v127 = v88 - 1;
    if (v88 - 1 >= v85)
    {
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }
    if (!v166)
      goto LABEL_167;
    v128 = v14;
    v129 = &v86[16 * v127];
    v130 = *(_QWORD *)v129;
    v131 = v88;
    v132 = &v86[16 * v88];
    v133 = *((_QWORD *)v132 + 1);
    v162 = (void **)(v166 + 8 * *(_QWORD *)v132);
    v165 = (void **)(v166 + 8 * *(_QWORD *)v129);
    v24 = v160;
    sub_1001D1AAC(v165, v162, v166 + 8 * v133, __dst, v24);
    if (!v3)
    {

      if (v133 < v130)
        goto LABEL_142;
      if (v131 > *((_QWORD *)v128 + 2))
        goto LABEL_143;
      v14 = v128;
      *(_QWORD *)v129 = v130;
      *(_QWORD *)&__srcb[16 * v127 + 8] = v133;
      v134 = *((_QWORD *)v128 + 2);
      if (v131 >= v134)
        goto LABEL_144;
      v85 = v134 - 1;
      memmove(v132, v132 + 16, 16 * (v134 - 1 - v131));
      v16 = v166;
      v86 = __srcb;
      *((_QWORD *)v128 + 2) = v134 - 1;
      if (v134 <= 2)
        goto LABEL_119;
      continue;
    }
    break;
  }
  v135 = (uint64_t)v128;
LABEL_122:
  swift_bridgeObjectRelease(v135);
LABEL_123:

LABEL_138:
  *(_QWORD *)((v174 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()(v136);
  v146 = v174;

  swift_bridgeObjectRelease(v146);
}

void sub_1001D30A4(uint64_t *a1, void *a2)
{
  uint64_t v3;
  id v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9[2];

  v3 = *a1;
  v4 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v3 = sub_1000DF680(v3);
    *a1 = v3;
  }
  v6 = *(_QWORD *)(v3 + 16);
  v9[0] = v3 + 32;
  v9[1] = v6;
  v7 = v4;
  sub_1001D2424(v9, v7);

  specialized ContiguousArray._endMutation()(v8);
}

uint64_t sub_1001D3140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  unint64_t v30;
  _QWORD *v31;

  v1 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v29 = a1;
    else
      v29 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v31 = _swiftEmptyArrayStorage;
    sub_1001325EC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      result = swift_release();
      __break(1u);
      return result;
    }
    v4 = 0;
    v30 = v1 & 0xC000000000000001;
    v5 = v31;
    v6 = v1;
    do
    {
      if (v30)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v7 = *(id *)(v1 + 8 * v4 + 32);
      v8 = v7;
      swift_getObjectType();
      v9 = v8;
      v10 = objc_msgSend(v9, "customName");
      if (v10 || (v10 = objc_msgSend(v9, "mapItemName")) != 0)
      {
        v11 = v10;
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        v14 = v13;

      }
      else
      {
        v18 = (void *)LibraryPlaceItemCompatible.createMapItemFromStorage()();
        if (v18
          && (v19 = v18, v20 = objc_msgSend(v18, "name"), v19, v20))
        {
          v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
          v14 = v21;

        }
        else
        {

          v12 = 0;
          v14 = 0xE000000000000000;
        }
      }
      v31 = v5;
      v16 = v5[2];
      v15 = v5[3];
      if (v16 >= v15 >> 1)
      {
        sub_1001325EC(v15 > 1, v16 + 1, 1);
        v5 = v31;
      }
      ++v4;
      v5[2] = v16 + 1;
      v17 = &v5[3 * v16];
      v17[4] = v9;
      v17[5] = v12;
      v17[6] = v14;
      v1 = v6;
    }
    while (v2 != v4);
    v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v31 = v5;
  swift_bridgeObjectRetain(v5);
  sub_1001CDED4(&v31);
  swift_bridgeObjectRelease(v5);
  v22 = v31;
  v23 = v31[2];
  if (v23)
  {
    v31 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v23);
    v24 = 4;
    do
    {
      v25 = (id)v22[v24];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v26 = v31[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v26);
      v27 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v25);
      specialized ContiguousArray._endMutation()(v27);
      v24 += 3;
      --v23;
    }
    while (v23);
    v3 = v31;
  }
  swift_release();
  return (uint64_t)v3;
}

uint64_t sub_1001D33FC(char a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a2;
  if (!a1)
    return sub_1001D3140(a2);
  if (a1 != 1)
  {
    if (a2 < 0 || (a2 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain(a2);
      v12 = (uint64_t)sub_1000D8D98(v15);
      swift_bridgeObjectRelease(v2);
    }
    else
    {
      v12 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
    }
    v18 = v12;
    sub_1001CDF3C(&v18);
    return v18;
  }
  v3 = objc_msgSend((id)objc_opt_self(MKLocationManager), "sharedLocationManager");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "lastLocation");

    if (v5)
    {
      objc_msgSend(v5, "coordinate");
      if (v7 >= -180.0 && v7 <= 180.0 && v6 >= -90.0 && v6 <= 90.0)
      {
        if (v2 < 0 || (v2 & 0x4000000000000000) != 0)
        {
          v16 = v5;
          swift_bridgeObjectRetain(v2);
          v13 = (uint64_t)sub_1000D8D98(v17);
          swift_bridgeObjectRelease(v2);
        }
        else
        {
          v13 = v2 & 0xFFFFFFFFFFFFFF8;
          v14 = v5;
          swift_bridgeObjectRetain(v2);
        }
        v18 = v13;
        sub_1001D30A4(&v18, v5);

        return v18;
      }

    }
    swift_bridgeObjectRetain(v2);
    return v2;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1001D35C0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001D35F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 48);
  v10 = (_QWORD *)swift_task_alloc(dword_10149F864);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000C0E0;
  return sub_1001CE574(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1001D3688(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 472) = a3;
  *(_QWORD *)(v3 + 272) = a1;
  *(_QWORD *)(v3 + 280) = a2;
  return swift_task_switch(sub_1001D36A4, 0, 0);
}

uint64_t sub_1001D36A4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  NSString v14;
  Class isa;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  objc_class *Options;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  uint64_t (*v26)(void *);

  static Task<>.checkCancellation()(a1);
  v1[36] = 0;
  v2 = v1[35];
  v3 = sub_100008B04((uint64_t *)&unk_101493B10);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100E23F50;
  v5 = objc_allocWithZone((Class)NSSortDescriptor);
  v6 = String._bridgeToObjectiveC()();
  v7 = objc_msgSend(v5, "initWithKey:ascending:", v6, 0);

  *(_QWORD *)(v4 + 32) = v7;
  specialized Array._endMutation()(v8);
  v9 = v4;
  v1[37] = v4;
  v11 = type metadata accessor for CollectionPlaceItemRequest(0, v10);
  v12 = (void *)CollectionPlaceItemRequest.__allocating_init()(v11);
  v1[38] = v12;
  type metadata accessor for FavoriteItemRequest(0);
  v1[39] = FavoriteItemRequest.__allocating_init()();
  if (v2)
  {
    v13 = v1 + 10;
    v14 = String._bridgeToObjectiveC()();
    v1[40] = v14;
    v1[41] = sub_1001D4380();
    isa = Array._bridgeToObjectiveC()().super.isa;
    v1[42] = isa;
    v1[15] = v1 + 28;
    v1[10] = v1;
    v1[11] = sub_1001D3934;
    v16 = swift_continuation_init(v1 + 10, 1);
    v1[23] = _NSConcreteStackBlock;
    v17 = v1 + 23;
    v17[1] = 0x40000000;
    v17[2] = sub_1001CF1D4;
    v17[3] = &unk_1011A9D88;
    v17[4] = v16;
    objc_msgSend(v12, "fetchWithSearchTerm:sortDescriptors:range:completionHandler:", v14, isa, 0, v17);
    return swift_continuation_await(v13);
  }
  else
  {
    v1[48] = type metadata accessor for MapsSyncQueryPredicate(0);
    v19 = static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:)(0);
    Options = (objc_class *)type metadata accessor for MapsSyncQueryOptions(0);
    v1[49] = Options;
    v21 = objc_allocWithZone(Options);
    swift_bridgeObjectRetain(v9);
    v22 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v19, v9, 0);
    v1[50] = v22;
    v1[51] = FavoriteItemRequest.__allocating_init()();
    v23 = *((unsigned int *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:) + 1);
    v26 = (uint64_t (*)(void *))((char *)&async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:)
                                         + async function pointer to dispatch thunk of FavoriteItemRequest.fetch(options:));
    v24 = v22;
    v25 = (_QWORD *)swift_task_alloc(v23);
    v1[52] = v25;
    *v25 = v1;
    v25[1] = sub_1001D3D84;
    return v26(v22);
  }
}

uint64_t sub_1001D3934()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  *(_QWORD *)(*v0 + 344) = v2;
  if (v2)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 296));
    v3 = sub_1001D422C;
  }
  else
  {
    v3 = sub_1001D399C;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001D399C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSString v6;
  Class isa;
  uint64_t v8;
  _QWORD *v9;

  v1 = v0 + 2;
  v2 = (void *)v0[42];
  v3 = (void *)v0[39];
  v4 = (void *)v0[40];
  v5 = v0[37];
  v0[44] = v0[28];

  v6 = String._bridgeToObjectiveC()();
  v0[45] = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v0[46] = isa;
  swift_bridgeObjectRelease(v5);
  v0[7] = v0 + 29;
  v0[2] = v0;
  v0[3] = sub_1001D3AA0;
  v8 = swift_continuation_init(v0 + 2, 1);
  v0[18] = _NSConcreteStackBlock;
  v9 = v0 + 18;
  v9[1] = 0x40000000;
  v9[2] = sub_1001CF1E0;
  v9[3] = &unk_1011A9DA0;
  v9[4] = v8;
  objc_msgSend(v3, "fetchWithSearchTerm:sortDescriptors:range:completionHandler:", v6, isa, 0, v9);
  return swift_continuation_await(v1);
}

uint64_t sub_1001D3AA0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 376) = v2;
  if (v2)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 352));
    v3 = sub_1001D4288;
  }
  else
  {
    v3 = sub_1001D3B08;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001D3B08()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(void **)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 232);

  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v26 = v2;
    else
      v26 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v27 = sub_100008B04(&qword_10149B548);
    v28 = _bridgeCocoaArray<A>(_:)(v26, v27);
    swift_bridgeObjectRelease_n(v2, 2);
    v2 = v28;
  }
  else
  {
    v3 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v5 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    v6 = sub_100008B04(&qword_10149B548);
    if (swift_dynamicCastMetatype(v5, v6) || (v20 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease(v2);
    }
    else
    {
      v21 = (uint64_t *)(v3 + 32);
      while (1)
      {
        v22 = *v21;
        *(_QWORD *)(v0 + 256) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        if (!swift_dynamicCastObjCProtocolConditional(v22, 1, v0 + 256))
          break;
        ++v21;
        if (!--v20)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease(v2);
      v2 = v3 | 1;
    }
  }
  v7 = *(_QWORD *)(v0 + 352);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v29 = *(_QWORD *)(v0 + 352);
    else
      v29 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 352));
    v30 = sub_100008B04(&qword_10149B548);
    v12 = _bridgeCocoaArray<A>(_:)(v29, v30);
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 352));
    v10 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    v11 = sub_100008B04(&qword_10149B548);
    if (swift_dynamicCastMetatype(v10, v11) || (v23 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_6:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 352));
      v12 = *(_QWORD *)(v0 + 352);
    }
    else
    {
      v24 = (uint64_t *)(v8 + 32);
      while (1)
      {
        v25 = *v24;
        *(_QWORD *)(v0 + 264) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        if (!swift_dynamicCastObjCProtocolConditional(v25, 1, v0 + 264))
          break;
        ++v24;
        if (!--v23)
          goto LABEL_6;
      }
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 352));
      v12 = v8 | 1;
    }
  }
  v13 = sub_100120A08(v12);
  v14 = v2;
  v15 = *(_QWORD *)(v0 + 288);
  static Task<>.checkCancellation()(v13);
  v16 = *(void **)(v0 + 304);
  v17 = *(void **)(v0 + 312);
  if (v15)
  {
    swift_bridgeObjectRelease(v2);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v19 = sub_1001D33FC(*(_BYTE *)(v0 + 472), v2);
    swift_bridgeObjectRelease(v14);

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v19);
  }
}

uint64_t sub_1001D3D84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 416);
  v3[53] = a1;
  v3[54] = v1;
  swift_task_dealloc(v4);
  v5 = (void *)v3[50];
  v6 = (void *)v3[51];
  if (v1)
  {
    v7 = v3[37];

    swift_bridgeObjectRelease(v7);
    v8 = sub_1001D42E4;
  }
  else
  {

    v8 = sub_1001D3E18;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1001D3E18()
{
  _QWORD *v0;
  objc_class *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v1 = (objc_class *)v0[49];
  v2 = v0[37];
  v3 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v4 + 56) = &type metadata for Int16;
  *(_QWORD *)(v4 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v4 + 32) = 6;
  v5 = static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000032, 0x8000000100E4F890, v4);
  swift_bridgeObjectRelease(v4);
  v6 = objc_allocWithZone(v1);
  v7 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v5, v2, 0);
  v0[55] = v7;
  v10 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                        + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  v8 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                  + 1));
  v0[56] = v8;
  *v8 = v0;
  v8[1] = sub_1001D3F24;
  return v10(v7);
}

uint64_t sub_1001D3F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 448);
  *(_QWORD *)(v3 + 456) = a1;
  *(_QWORD *)(v3 + 464) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_1001D4324;
  else
    v5 = sub_1001D3F90;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001D3F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 424);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v29 = *(_QWORD *)(v0 + 424);
    else
      v29 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 424));
    v30 = sub_100008B04(&qword_10149B548);
    v6 = _bridgeCocoaArray<A>(_:)(v29, v30);
    swift_bridgeObjectRelease_n(v1, 2);
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 424));
    v4 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v3);
    v5 = sub_100008B04(&qword_10149B548);
    if (swift_dynamicCastMetatype(v4, v5) || (v23 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 424));
      v6 = *(_QWORD *)(v0 + 424);
    }
    else
    {
      v24 = (uint64_t *)(v2 + 32);
      while (1)
      {
        v25 = *v24;
        *(_QWORD *)(v0 + 248) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        if (!swift_dynamicCastObjCProtocolConditional(v25, 1, v0 + 248))
          break;
        ++v24;
        if (!--v23)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 424));
      v6 = v2 | 1;
    }
  }
  v7 = *(_QWORD *)(v0 + 456);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v31 = *(_QWORD *)(v0 + 456);
    else
      v31 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 456));
    v32 = sub_100008B04(&qword_10149B548);
    v12 = _bridgeCocoaArray<A>(_:)(v31, v32);
    swift_bridgeObjectRelease_n(v7, 2);
  }
  else
  {
    v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 456));
    v10 = dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v9);
    v11 = sub_100008B04(&qword_10149B548);
    if (swift_dynamicCastMetatype(v10, v11) || (v26 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_6:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 456));
      v12 = *(_QWORD *)(v0 + 456);
    }
    else
    {
      v27 = (uint64_t *)(v8 + 32);
      while (1)
      {
        v28 = *v27;
        *(_QWORD *)(v0 + 240) = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
        if (!swift_dynamicCastObjCProtocolConditional(v28, 1, v0 + 240))
          break;
        ++v27;
        if (!--v26)
          goto LABEL_6;
      }
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 456));
      v12 = v8 | 1;
    }
  }
  v13 = *(void **)(v0 + 440);
  v14 = *(void **)(v0 + 400);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v12);
  sub_100120A08(v15);

  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v6);
  v16 = v6;
  v17 = *(_QWORD *)(v0 + 464);
  static Task<>.checkCancellation()(v18);
  v19 = *(void **)(v0 + 304);
  v20 = *(void **)(v0 + 312);
  if (v17)
  {
    swift_bridgeObjectRelease(v6);

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = sub_1001D33FC(*(_BYTE *)(v0 + 472), v6);
    swift_bridgeObjectRelease(v16);

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v22);
  }
}

uint64_t sub_1001D422C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 336);
  v3 = *(void **)(v0 + 312);
  v2 = *(void **)(v0 + 320);
  v4 = *(void **)(v0 + 304);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D4288()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void **)(v0 + 368);
  v2 = *(void **)(v0 + 360);
  v4 = *(void **)(v0 + 304);
  v3 = *(void **)(v0 + 312);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D42E4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 304);
  v2 = *(void **)(v0 + 312);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001D4324()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(void **)(v0 + 400);
  v4 = *(void **)(v0 + 304);
  v3 = *(void **)(v0 + 312);

  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001D4380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149F878;
  if (!qword_10149F878)
  {
    v1 = objc_opt_self(NSSortDescriptor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10149F878);
  }
  return result;
}

uint64_t type metadata accessor for LibraryHomeCollectionViewManagerConfiguration()
{
  return objc_opt_self(_TtC4Maps45LibraryHomeCollectionViewManagerConfiguration);
}

id sub_1001D4470()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource);
  }
  else
  {
    v4 = sub_1001D461C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1001D4500()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  v1 = OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout);
  }
  else
  {
    v4 = swift_allocObject(&unk_1011A9DD8, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16);
    v5 = objc_allocWithZone((Class)type metadata accessor for HomeListCompositionalLayout());
    v11[4] = sub_1001D6208;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1001C50E4;
    v11[3] = &unk_1011A9DF0;
    v6 = _Block_copy(v11);
    v7 = objc_msgSend(v5, "initWithSectionProvider:", v6, swift_retain().n128_f64[0]);
    _Block_release(v6);
    swift_release();
    swift_release();
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

id sub_1001D461C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  __n128 v11;

  if (qword_1014910E8 != -1)
    swift_once(&qword_1014910E8, sub_1001D6924);
  v2 = sub_100008B04(&qword_10149F918);
  sub_10000E918(v2, (uint64_t)qword_1014D4FE8);
  if (qword_1014910F0 != -1)
    swift_once(&qword_1014910F0, sub_1001D7610);
  v3 = sub_100008B04(&qword_10149F580);
  sub_10000E918(v3, (uint64_t)qword_1014D5000);
  if (qword_101490EC8 != -1)
    swift_once(&qword_101490EC8, sub_100117858);
  v4 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  sub_10000E918(v4, (uint64_t)qword_1014D4B68);
  v5 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration)
                + OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_collectionView);
  v6 = swift_allocObject(&unk_1011A9DD8, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = objc_allocWithZone((Class)sub_100008B04(&qword_10149F590));
  v8 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v5, sub_1001D6228, v6);
  v9 = swift_allocObject(&unk_1011A9DD8, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = v8;
  v11 = swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_1001D6230, v9, v11);

  swift_release();
  return v10;
}

uint64_t sub_1001D47C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  _BYTE v12[24];

  v7 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return 0;
  v9 = (void *)Strong;
  v10 = sub_1001D5D78(a1, a2, a3);

  return v10;
}

void *sub_1001D4848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  _BYTE v14[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (!Strong)
    return 0;
  v11 = (void *)Strong;
  v12 = sub_1001D48DC(a1, a2, a3, a4);

  return v12;
}

void *sub_1001D48DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  Swift::String v31;
  Swift::String v32;
  void *object;
  NSString v34;
  double v35;
  NSString v36;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;

  v38 = a1;
  v39 = a2;
  v6 = sub_100008B04(&qword_10149F920);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void *)sub_1001D4470(v12);
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v15);

  v16 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v10);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  v18 = IndexPath.section.getter(v17);
  if ((v18 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v18 >= *(_QWORD *)(v16 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v10 = 0xD000000000000011;
  v19 = *(unsigned __int8 *)(v16 + v18 + 32);
  swift_bridgeObjectRelease(v16);
  if (v19)
  {
    if (v19 == 1)
    {
      swift_bridgeObjectRelease(0x8000000100E3FFB0);
      goto LABEL_9;
    }
    v21 = 0x8000000100E3FFD0;
    v20 = 0xD000000000000011;
  }
  else
  {
    v20 = 0xD00000000000001BLL;
    v21 = 0x8000000100E3FF90;
  }
  v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, 0xD000000000000019, 0x8000000100E3FFB0, 0);
  swift_bridgeObjectRelease(v21);
  if ((v22 & 1) == 0)
    return 0;
LABEL_9:
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v25 = v23;
  if (v24 == v39 && v23 == a3)
  {
    swift_bridgeObjectRelease(a3);
    goto LABEL_13;
  }
  v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, a3, v24, v23, 0);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) == 0)
    return 0;
LABEL_13:
  if (qword_101490EC8 != -1)
LABEL_21:
    swift_once(&qword_101490EC8, sub_100117858);
  v27 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  v28 = sub_10000E918(v27, (uint64_t)qword_1014D4B68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v28 + *(int *)(v27 + 40), v6);
  v29 = sub_10000E4BC(0, (unint64_t *)&qword_10149B1D8, off_101197F70);
  v30 = (void *)UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)(v9, a4, v29);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v31._countAndFlagsBits = v10 + 12;
  v40._countAndFlagsBits = v10 + 22;
  v40._object = (void *)0x8000000100E514F0;
  v31._object = (void *)0x8000000100E514D0;
  v32._countAndFlagsBits = 0x796C746E65636552;
  v32._object = (void *)0xEE00646564644120;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v32, v40)._object;
  v34 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v35 = swift_bridgeObjectRelease(object).n128_u64[0];
  objc_msgSend(v30, "setTitle:", v34, v35, v38);

  objc_msgSend(v30, "setShowsBottomHairline:", 0);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setAccessibilityIdentifiersWithBaseString:", v36);

  return v30;
}

uint64_t sub_1001D4C94(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  _BYTE v10[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = (void *)Strong;
  v8 = sub_1001D4D18(a1, a2, 0, 0);

  return v8;
}

uint64_t sub_1001D4D18(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t result;
  int v23;
  __n128 v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  char *v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v43 = a4;
  v41 = a2;
  v6 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  v7 = __chkstk_darwin(v6);
  v37 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for UICollectionLayoutListConfiguration(0, v11);
  v42 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1001D4470();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v20);

  v21 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter(v16);
  result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v21 + 16) > a1)
  {
    v23 = *(unsigned __int8 *)(v21 + a1 + 32);
    v24 = swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v9, v24);
    UICollectionLayoutListConfiguration.init(appearance:)(v13);
    v25 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    UICollectionLayoutListConfiguration.backgroundColor.setter(v25);
    UICollectionLayoutListConfiguration.headerTopPadding.setter(0, 0);
    v26 = v43;
    sub_10000C128(a3, v43);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(a3, v26);
    if (v23)
    {
      v27 = v41;
      v28 = v42;
      if (v23 == 1)
      {
        v29 = swift_bridgeObjectRelease(0x8000000100E3FFB0);
        v30 = v40;
        goto LABEL_9;
      }
      v32 = 0x8000000100E3FFD0;
      v31 = 0xD000000000000011;
      v30 = v40;
    }
    else
    {
      v31 = 0xD00000000000001BLL;
      v32 = 0x8000000100E3FF90;
      v30 = v40;
      v27 = v41;
      v28 = v42;
    }
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, 0xD000000000000019, 0x8000000100E3FFB0, 0);
    v29 = swift_bridgeObjectRelease(v32);
    if ((v33 & 1) == 0)
    {
LABEL_10:
      sub_10000E4BC(0, (unint64_t *)&unk_101496350, NSCollectionLayoutSection_ptr);
      v35 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v15, v27);
      objc_msgSend(v35, "contentInsets");
      objc_msgSend(v35, "setContentInsets:", 0.0);
      objc_msgSend(v35, "contentInsets");
      objc_msgSend(v35, "setContentInsets:");
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v30);
      return (uint64_t)v35;
    }
LABEL_9:
    v34 = v37;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v38 + 104))(v37, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v39, v29);
    UICollectionLayoutListConfiguration.headerMode.setter(v34);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_1001D5078(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  id v15;
  objc_class *v16;
  char *v17;
  char *v18;
  char *v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v32;
  uint64_t v33;
  objc_super v34;
  objc_super v35;
  objc_super v36;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v33 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v5 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___diffableDataSource] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager____lazy_storage___compositionalLayout] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_configuration] = a1;
  v8 = type metadata accessor for LibraryRecentsDataProvider();
  swift_allocObject(v8, 48, 7);
  v9 = v2;
  v10 = a1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_recentsDataProvider] = sub_1001BF040();
  if (qword_1014910E0 != -1)
    swift_once(&qword_1014910E0, sub_1001CBA20);
  v11 = (void *)static LibraryItemsCountManager.shared;
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_countsManager] = static LibraryItemsCountManager.shared;
  type metadata accessor for MapsSyncStore(0);
  v12 = static MapsSyncStore.sharedStore.getter(v11);
  v13 = (objc_class *)type metadata accessor for LibraryDataOperationsProvider();
  v14 = (char *)objc_allocWithZone(v13);
  *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps29LibraryDataOperationsProvider_mapsSyncStore] = v12;
  v36.receiver = v14;
  v36.super_class = v13;
  v15 = objc_msgSendSuper2(&v36, "init");
  v16 = (objc_class *)type metadata accessor for LibraryCellActionHandler();
  v17 = (char *)objc_allocWithZone(v16);
  v18 = &v17[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18);
  swift_unknownObjectWeakInit(&v17[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_searchController]);
  *(_QWORD *)&v17[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_dataOperationsProvider] = v15;
  *(_DWORD *)&v17[OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_analyticsInfo] = 137;
  v35.receiver = v17;
  v35.super_class = v16;
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_cellActionHandler] = objc_msgSendSuper2(&v35, "init");

  v34.receiver = v9;
  v34.super_class = ObjectType;
  v19 = (char *)objc_msgSendSuper2(&v34, "init");
  v20 = *(void **)(*(_QWORD *)&v19[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_countsManager]
                 + OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers);
  v21 = v19;
  objc_msgSend(v20, "registerObserver:", v21);
  if (qword_1014910E8 != -1)
    swift_once(&qword_1014910E8, sub_1001D6924);
  v22 = sub_100008B04(&qword_10149F918);
  sub_10000E918(v22, (uint64_t)qword_1014D4FE8);
  if (qword_1014910F0 != -1)
    swift_once(&qword_1014910F0, sub_1001D7610);
  v23 = sub_100008B04(&qword_10149F580);
  sub_10000E918(v23, (uint64_t)qword_1014D5000);
  if (qword_101490EC8 != -1)
    swift_once(&qword_101490EC8, sub_100117858);
  v24 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  sub_10000E918(v24, (uint64_t)qword_1014D4B68);
  v25 = *(_QWORD *)&v21[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_cellActionHandler];
  v26 = &v10[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator];
  Strong = swift_unknownObjectWeakLoadStrong(&v10[OBJC_IVAR____TtC4Maps45LibraryHomeCollectionViewManagerConfiguration_cellActionHandlingUICoordinator]);
  v28 = v25 + OBJC_IVAR____TtC4Maps24LibraryCellActionHandler_actionHandlingUICoordinator;
  *(_QWORD *)(v28 + 8) = *((_QWORD *)v26 + 1);
  swift_unknownObjectWeakAssign(v28, Strong);
  swift_unknownObjectRelease(Strong);
  v29 = *(_QWORD *)&v21[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_recentsDataProvider];
  *(_QWORD *)(v29 + 32) = &off_1011A9DB8;
  swift_unknownObjectWeakAssign(v29 + 24, v21);
  sub_1001D5594();
  v30 = sub_1001D4470();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v7, 1, 0, 0);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v33);
  return v21;
}

id sub_1001D5438()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_countsManager]+ OBJC_IVAR____TtC4Maps24LibraryItemsCountManager_observers), "unregisterObserver:", v0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_1001D5594()
{
  char *v0;
  char *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 v5;
  int IsEnabled_HikingiOS;
  _UNKNOWN **v7;
  int64_t *v8;
  int64_t v9;
  int v10;
  _QWORD *v11;
  _UNKNOWN **v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t *v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[23];
  _QWORD *v43;

  v1 = v0;
  v2 = sub_100008B04(&qword_10149BB20);
  v3 = sub_1001C5B50();
  v4 = sub_1001D610C();
  NSDiffableDataSourceSnapshot.init()(&type metadata for LibraryListSectionIdentifier, v2, v3, v4);
  v41 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10119A780);
  IsEnabled_HikingiOS = MapsFeature_IsEnabled_HikingiOS(v5);
  if (IsEnabled_HikingiOS)
    v7 = &off_10119A7A8;
  else
    v7 = &off_10119A7D0;
  v8 = (int64_t *)&unk_10119A7B8;
  if (!IsEnabled_HikingiOS)
    v8 = (int64_t *)&unk_10119A7E0;
  v9 = *v8;
  if (*v8)
  {
    v10 = IsEnabled_HikingiOS;
    v43 = _swiftEmptyArrayStorage;
    sub_1001325AC(0, v9, 0);
    v11 = _swiftEmptyArrayStorage;
    if (v10)
      v12 = &off_10119A7A8;
    else
      v12 = &off_10119A7D0;
    v13 = (char *)(v12 + 4);
    v14 = sub_1001D6158();
    v15 = _swiftEmptyArrayStorage[2];
    v16 = 40 * v15 + 64;
    do
    {
      v18 = *v13++;
      v17 = v18;
      v43 = v11;
      v19 = v11[3];
      v20 = v15 + 1;
      if (v15 >= v19 >> 1)
      {
        sub_1001325AC(v19 > 1, v15 + 1, 1);
        v11 = v43;
      }
      v11[2] = v20;
      v21 = (_QWORD *)((char *)v11 + v16);
      *((_BYTE *)v21 - 32) = v17;
      v22 = *(_OWORD *)v42;
      *(v21 - 2) = *(_QWORD *)&v42[15];
      *(v21 - 1) = (unint64_t)&type metadata for LibraryListSavedItemsManagementSectionCellModel;
      *(_OWORD *)((char *)v21 - 31) = v22;
      *v21 = v14;
      v16 += 40;
      v15 = v20;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    swift_bridgeObjectRelease(v7);
    v11 = _swiftEmptyArrayStorage;
  }
  v42[0] = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v11, v42, v41);
  swift_bridgeObjectRelease(v11);
  v23 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_recentsDataProvider] + 16);
  v24 = v1;
  swift_bridgeObjectRetain(v23);
  v26 = (uint64_t)sub_1001D59A0(v25, (uint64_t)v24);
  swift_bridgeObjectRelease(v23);

  if (!((unint64_t)v26 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v27)
      goto LABEL_18;
LABEL_31:
    swift_bridgeObjectRelease(v26);
    v29 = _swiftEmptyArrayStorage;
LABEL_32:
    v42[0] = 1;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v29, v42, v41);
    swift_bridgeObjectRelease(v29);
    return;
  }
  if (v26 < 0)
    v39 = v26;
  else
    v39 = v26 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v26);
  v27 = _CocoaArrayWrapper.endIndex.getter(v39);
  swift_bridgeObjectRelease(v26);
  if (!v27)
    goto LABEL_31;
LABEL_18:
  v40 = v26;
  v43 = _swiftEmptyArrayStorage;
  sub_1001325AC(0, v27 & ~(v27 >> 63), 0);
  if ((v27 & 0x8000000000000000) == 0)
  {
    v28 = 0;
    v29 = v43;
    v30 = v26;
    v31 = v26 & 0xC000000000000001;
    do
    {
      if (v31)
        v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v30);
      else
        v32 = *(id *)(v30 + 8 * v28 + 32);
      v33 = v32;
      v34 = type metadata accessor for LibraryListSavedItemCellModel();
      v35 = sub_1001D619C();
      v43 = v29;
      v37 = v29[2];
      v36 = v29[3];
      if (v37 >= v36 >> 1)
      {
        sub_1001325AC(v36 > 1, v37 + 1, 1);
        v30 = v40;
        v29 = v43;
      }
      ++v28;
      v29[2] = v37 + 1;
      v38 = &v29[5 * v37];
      v38[4] = v33;
      *(_OWORD *)(v38 + 5) = *(_OWORD *)v42;
      v38[7] = v34;
      v38[8] = v35;
    }
    while (v27 != v28);
    swift_bridgeObjectRelease(v30);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t type metadata accessor for LibraryHomeCollectionViewManager()
{
  return objc_opt_self(_TtC4Maps32LibraryHomeCollectionViewManager);
}

_QWORD *sub_1001D59A0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  objc_class *v5;
  uint64_t v6;
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  id v15;
  char *v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  char *v46;
  char *v47;
  uint64_t v49;
  uint64_t v50;
  unint64_t v52;
  objc_super v53;
  __objc2_prot *v54;
  unint64_t v55;

  v2 = a1;
  v55 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_27;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    v52 = v2 & 0xC000000000000001;
    v50 = OBJC_IVAR____TtC4Maps32LibraryHomeCollectionViewManager_cellActionHandler;
    for (i = 4; ; ++i)
    {
      v7 = v52 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v2) : *(id *)(v2 + 8 * i);
      v8 = v7;
      v6 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v5 = (objc_class *)type metadata accessor for LibraryListSavedItemCellModel();
      v9 = (char *)objc_allocWithZone(v5);
      v10 = (uint64_t)&v9[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler];
      *(_QWORD *)(v10 + 8) = 0;
      swift_unknownObjectWeakInit(v10);
      v54 = &OBJC_PROTOCOL____TtP4Maps26LibraryPlaceItemCompatible_;
      v11 = swift_dynamicCastObjCProtocolConditional(v8, 1, &v54);
      if (v11)
      {
        v12 = v11;
        v13 = v5;
        v14 = v2;
        swift_getObjectType();
        v15 = v8;
        v16 = v9;
        v17 = (unint64_t)LibraryPlaceItemCompatible.createMapItemFromStorage()();
        if (v17)
        {
          v18 = (id)v17;
          v19 = 0;
          v2 = v14;
          v5 = v13;
          v6 = i - 3;
          goto LABEL_19;
        }

        v2 = v14;
        v5 = v13;
        v6 = i - 3;
      }
      else
      {
        v20 = type metadata accessor for Collection(0);
        v21 = swift_dynamicCastClass(v8, v20);
        if (v21)
        {
          v22 = v21;
          v23 = (void *)objc_opt_self(CollectionHandler);
          v24 = v8;
          v25 = v9;
          v26 = objc_msgSend(v23, "collectionWithMapsSyncCollection:", v22);
          goto LABEL_18;
        }
        v27 = type metadata accessor for CachedCuratedCollection(0);
        v28 = swift_dynamicCastClass(v8, v27);
        if (v28)
        {
          v29 = v28;
          v30 = (void *)objc_opt_self(CollectionHandler);
          v31 = v8;
          v32 = v9;
          v26 = objc_msgSend(v30, "collectionWithMapsSyncCachedCuratedCollection:", v29);
LABEL_18:
          v18 = v26;
          v12 = 0;
          v19 = 1;
LABEL_19:
          v33 = &v9[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item];
          *(_QWORD *)v33 = v18;
          *((_QWORD *)v33 + 1) = v12;
          v33[16] = v19;
          sub_1001C585C(v18, v12, v19);

          v53.receiver = v9;
          v53.super_class = v5;
          v34 = (char *)objc_msgSendSuper2(&v53, "init");

          sub_1001BEF7C(v18, v12, v19);
          v35 = *(_QWORD *)(a2 + v50);
          v36 = &v34[OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler];
          *((_QWORD *)v36 + 1) = &off_1011A9628;
          swift_unknownObjectWeakAssign(v36, v35);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
          v39 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v38 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v39 >= v38 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
          v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v34);
          specialized Array._endMutation()(v40);
          goto LABEL_6;
        }
        v41 = type metadata accessor for UserRoute(0);
        v42 = swift_dynamicCastClass(v8, v41);
        if (v42)
        {
          v43 = v42;
          v44 = (void *)objc_opt_self(MapsSavedRoutesManager);
          v45 = v8;
          v46 = v9;
          v18 = objc_msgSend(v44, "routeDataForMapsSyncUserRoute:", v43);
          v12 = 0;
          v19 = 2;
          goto LABEL_19;
        }
        v47 = v9;
      }
      sub_100017510(v10);

      swift_deallocPartialClassInstance(v9, v5, 48, 7);
LABEL_6:
      if (v6 == v3)
      {
        swift_bridgeObjectRelease(v2);
        return (_QWORD *)v55;
      }
    }
    __break(1u);
LABEL_27:
    if (v2 < 0)
      v49 = v2;
    else
      v49 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v49);
  }
  swift_bridgeObjectRelease(v2);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001D5D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v24;
  _QWORD v25[5];

  v5 = sub_100008B04(&qword_10149F580);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149F918);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084C44(a3, (uint64_t)v25);
  v13 = sub_100008B04(&qword_10149F308);
  if (swift_dynamicCast(&v24, v25, v13, &type metadata for LibraryListSavedItemsManagementSectionCellModel, 6))
  {
    v14 = (char)v24;
    if (qword_1014910E8 != -1)
      swift_once(&qword_1014910E8, sub_1001D6924);
    v15 = sub_10000E918(v9, (uint64_t)qword_1014D4FE8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v15, v9);
    LOBYTE(v25[0]) = v14;
    v16 = sub_10000E4BC(0, (unint64_t *)&qword_10149F928, off_101197948);
    v17 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v12, a2, v25, v16, &type metadata for LibraryListSavedItemsManagementSectionCellModel);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    sub_100084C44(a3, (uint64_t)v25);
    v18 = type metadata accessor for LibraryListSavedItemCellModel();
    if (swift_dynamicCast(&v24, v25, v13, v18, 6))
    {
      v19 = v24;
      if (qword_1014910F0 != -1)
        swift_once(&qword_1014910F0, sub_1001D7610);
      v20 = sub_10000E918(v5, (uint64_t)qword_1014D5000);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v20, v5);
      v25[0] = v19;
      v21 = sub_10000E4BC(0, &qword_10149B488, off_101198000);
      v22 = v19;
      v17 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v8, a2, v25, v21, v18);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      return 0;
    }
  }
  return v17;
}

uint64_t sub_1001D6004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  __n128 v7;
  Swift::OpaquePointer v8;
  __n128 v9;
  uint64_t v11;
  char v12;

  v0 = sub_100008B04((uint64_t *)&unk_10149F2F8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1001D4470();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()(v4);

  v5 = sub_1001D4470();
  v6 = sub_100008B04(&qword_10149F590);
  if (swift_dynamicCastClass(v5, v6))
  {
    v12 = 0;
    v8._rawValue = (void *)NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)(&v12, v0, v7);
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v8);
    v9 = swift_bridgeObjectRelease(v8._rawValue);
    dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)(v3, 0, 0, v9);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

unint64_t sub_1001D610C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149F570;
  if (!qword_10149F570)
  {
    v1 = sub_10000E5D4(&qword_10149BB20);
    result = swift_getWitnessTable("a|7", v1);
    atomic_store(result, (unint64_t *)&qword_10149F570);
  }
  return result;
}

unint64_t sub_1001D6158()
{
  unint64_t result;

  result = qword_10149F910;
  if (!qword_10149F910)
  {
    result = swift_getWitnessTable(asc_100E32808, &type metadata for LibraryListSavedItemsManagementSectionCellModel);
    atomic_store(result, (unint64_t *)&qword_10149F910);
  }
  return result;
}

unint64_t sub_1001D619C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149F578;
  if (!qword_10149F578)
  {
    v1 = type metadata accessor for LibraryListSavedItemCellModel();
    result = swift_getWitnessTable(byte_100E328C4, v1);
    atomic_store(result, (unint64_t *)&qword_10149F578);
  }
  return result;
}

uint64_t sub_1001D61E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D6208(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001D4C94(a1, a2, v2);
}

double sub_1001D6210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001D6220(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001D6228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001D47C8(a1, a2, a3, v3);
}

void *sub_1001D6230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1001D4848(a1, a2, a3, a4, v4);
}

void sub_1001D6238(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1001D6278(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1001D62C8 + 4 * byte_100E32694[a2]))(0x736563616C70);
}

uint64_t sub_1001D62C8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x736563616C70 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x736563616C70, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000);
  return v2 & 1;
}

uint64_t sub_1001D6358(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x8000000100E3FF90;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000019;
    else
      v4 = 0xD000000000000011;
    if (v3 == 1)
      v5 = 0x8000000100E3FFB0;
    else
      v5 = 0x8000000100E3FFD0;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD000000000000019;
      else
        v7 = 0xD000000000000011;
      if (v6 == 1)
        v2 = 0x8000000100E3FFB0;
      else
        v2 = 0x8000000100E3FFD0;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD00000000000001BLL;
    v5 = 0x8000000100E3FF90;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xD00000000000001BLL;
  if (v4 != 0xD00000000000001BLL)
  {
LABEL_21:
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v7, v2, 0);
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
  v2 = v5;
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  return v8 & 1;
}

uint64_t sub_1001D6458(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x74736574736166;
  else
    v3 = 0x74736574726F6873;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x74736574736166;
  else
    v5 = 0x74736574726F6873;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v7 = 1;
    v6 = v4;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v7 & 1;
}

uint64_t sub_1001D64FC(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0x6F53656D756C6F76;
  v3 = 0xEA00000000007466;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6F4E656D756C6F76;
    else
      v5 = 0x6F4C656D756C6F76;
    if (v4 == 1)
      v6 = 0xEC0000006C616D72;
    else
      v6 = 0xEA00000000006475;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6F53656D756C6F76;
  v6 = 0xEA00000000007466;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0x6F4E656D756C6F76;
    else
      v2 = 0x6F4C656D756C6F76;
    if (v7 == 1)
      v3 = 0xEC0000006C616D72;
    else
      v3 = 0xEA00000000006475;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
  {
    v8 = 1;
    v3 = v6;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v2, v3, 0);
  }
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v3);
  return v8 & 1;
}

uint64_t sub_1001D661C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)&aDriving_5[8 * a1];
  v3 = *(_QWORD *)&aDriving_5[8 * a2];
  if (v2 == v3)
    v4 = 1;
  else
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, 0xE700000000000000, v3, 0xE700000000000000, 0);
  swift_bridgeObjectRelease_n(0xE700000000000000, 2);
  return v4 & 1;
}

Swift::Int sub_1001D6680(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if (a1)
  {
    if (a1 == 1)
      v2 = 0xD000000000000019;
    else
      v2 = 0xD000000000000011;
    if (a1 == 1)
      v3 = 0x8000000100E3FFB0;
    else
      v3 = 0x8000000100E3FFD0;
  }
  else
  {
    v2 = 0xD00000000000001BLL;
    v3 = 0x8000000100E3FF90;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001D6728(uint64_t a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;

  v2 = a2;
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD000000000000019;
    else
      v3 = 0xD000000000000011;
    if (v2 == 1)
      v4 = 0x8000000100E3FFB0;
    else
      v4 = 0x8000000100E3FFD0;
  }
  else
  {
    v3 = 0xD00000000000001BLL;
    v4 = 0x8000000100E3FF90;
  }
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

Swift::Int sub_1001D67A8(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  if (a2)
  {
    if (a2 == 1)
      v3 = 0xD000000000000019;
    else
      v3 = 0xD000000000000011;
    if (a2 == 1)
      v4 = 0x8000000100E3FFB0;
    else
      v4 = 0x8000000100E3FFD0;
  }
  else
  {
    v3 = 0xD00000000000001BLL;
    v4 = 0x8000000100E3FF90;
  }
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

unint64_t sub_1001D684C(char a1)
{
  if (!a1)
    return 0xD00000000000001BLL;
  if (a1 == 1)
    return 0xD000000000000019;
  return 0xD000000000000011;
}

uint64_t sub_1001D68AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1001D6358(*a1, *a2);
}

Swift::Int sub_1001D68B8()
{
  char *v0;

  return sub_1001D6680(*v0);
}

uint64_t sub_1001D68C0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_1001D6728(a1, *v1);
}

Swift::Int sub_1001D68C8(uint64_t a1)
{
  char *v1;

  return sub_1001D67A8(a1, *v1);
}

unint64_t sub_1001D68D0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001D9D20(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1001D68FC@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1001D684C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001D6924()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100008B04(&qword_10149F918);
  sub_10000E930(v0, qword_1014D4FE8);
  sub_10000E918(v0, (uint64_t)qword_1014D4FE8);
  v1 = sub_10000E4BC(0, (unint64_t *)&qword_10149F928, off_101197948);
  return UICollectionView.CellRegistration.init(handler:)(sub_1001D69A4, 0, v1, &type metadata for LibraryListSavedItemsManagementSectionCellModel);
}

void sub_1001D69A4(void *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  Swift::String v20;
  unint64_t v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(unint64_t *, _QWORD);
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  __int128 v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v41 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v40 = (char *)&v39 - v8;
  v9 = sub_100008B04(&qword_101492C58);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0);
  v12 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (char)*a3;
  v43 = *a3;
  v46 = 0;
  v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v47);
  v46 = 0xD000000000000014;
  v47 = 0x8000000100E51AC0;
  v20._countAndFlagsBits = *(_QWORD *)&aPinned[8 * v19];
  v20._object = (void *)0xE600000000000000;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(0xE600000000000000);
  v21 = v47;
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityIdentifier:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = sub_100008B04(&qword_101492C60);
  v24 = type metadata accessor for UICellAccessory(0);
  v25 = swift_allocObject(v23, ((*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80) | 7);
  v39 = xmmword_100E22F40;
  *(_OWORD *)(v25 + 16) = xmmword_100E22F40;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for UICellAccessory.DisplayedState.always(_:), v15);
  v26 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 1, 1, v26);
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v11, 0);
  static UICellAccessory.disclosureIndicator(displayed:options:)(v18, v14);
  v27 = v14;
  v28 = v40;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v27, v45);
  v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v30 = v41;
  v29(v18, v15);
  v31 = UICollectionViewListCell.accessories.setter(v25);
  v45 = (uint64_t)a1;
  UICollectionViewListCell.defaultContentConfiguration()(v31);
  v32 = UIListContentConfiguration.prefersSideBySideTextAndSecondaryText.setter(1);
  v33 = v42;
  static UIListContentConfiguration.valueCell()(v32);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v30);
  v44 = v5;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v28, v33, v30);
  UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter(2);
  v34 = (void (*)(unint64_t *, _QWORD))UIListContentConfiguration.directionalLayoutMargins.modify(&v46);
  *(_QWORD *)(v35 + 8) = 0x4030000000000000;
  v34(&v46, 0);
  if (qword_1014910E0 != -1)
    swift_once(&qword_1014910E0, sub_1001CBA20);
  v36 = (void *)static LibraryItemsCountManager.shared;
  v37 = objc_allocWithZone((Class)type metadata accessor for HomeListLibraryCountsDataProvider());
  sub_100096D64(v36);
  v38 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithWeight:", 5);
  __asm { BR              X9 }
}

void sub_1001D73B8(char *a1)
{
  sub_1001D6238(*a1);
}

void sub_1001D73C4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1001D7408()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x736563616C70, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_1001D7464()
{
  __asm { BR              X10 }
}

uint64_t sub_1001D7498(uint64_t a1)
{
  String.hash(into:)(a1, 0x736563616C70, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_1001D74E0(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1001D7520()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x736563616C70, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1001D757C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1001D9D68(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001D75A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1001D75D0 + 4 * byte_100E326A4[*v0]))();
}

void sub_1001D75D0(_QWORD *a1@<X8>)
{
  *a1 = 0x736563616C70;
  a1[1] = 0xE600000000000000;
}

void sub_1001D75E8(_QWORD *a1@<X8>)
{
  *a1 = 0x736564697567;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1001D7610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_10149F580);
  sub_10000E930(v0, qword_1014D5000);
  sub_10000E918(v0, (uint64_t)qword_1014D5000);
  v1 = sub_10000E4BC(0, &qword_10149B488, off_101198000);
  v2 = type metadata accessor for LibraryListSavedItemCellModel();
  return UICollectionView.CellRegistration.init(handler:)(sub_1001D7694, 0, v1, v2);
}

void sub_1001D7694(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  void *v5;
  void *v6;
  int v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  id v14;

  v4 = *a3 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  v6 = *(void **)v4;
  v5 = *(void **)(v4 + 8);
  v7 = *(unsigned __int8 *)(v4 + 16);
  if (v7)
  {
    if (v7 == 1)
    {
      v8 = objc_msgSend((id)objc_opt_self(TwoLinesContentViewModelComposer), "cellModelForCollection:", v6);
      objc_msgSend(a1, "setViewModel:", v8);
      swift_unknownObjectRelease(v8);
      v9 = v6;
      v10 = (uint64_t)v5;
      v11 = 1;
    }
    else
    {
      v14 = sub_1001D7948(v6);
      objc_msgSend(a1, "setViewModel:", v14);
      swift_unknownObjectRelease(v14);
      v9 = v6;
      v10 = (uint64_t)v5;
      v11 = 2;
    }
    sub_1001BEF7C(v9, v10, v11);
  }
  else
  {
    v12 = v6;
    swift_unknownObjectRetain(v5);
    v13 = sub_1001D77C4((uint64_t)v12, v5);
    objc_msgSend(a1, "setViewModel:", v13);

    swift_unknownObjectRelease(v5);
    swift_unknownObjectRelease(v13);
  }
}

id sub_1001D77C4(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v4 = sub_1001D7D68(a2);
  v5 = swift_allocObject(&unk_1011A9FE0, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16);
  v6 = (void *)objc_opt_self(TwoLinesContentViewModelComposer);
  v7 = objc_msgSend(a2, "customName");
  v8 = objc_msgSend(a2, "styleAttributes");
  v9 = swift_allocObject(&unk_1011AA008, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1001D9DD4;
  *(_QWORD *)(v9 + 24) = v5;
  v13[4] = sub_1001D9E10;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1001D8E38;
  v13[3] = &unk_1011AA020;
  v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  v11 = objc_msgSend(v6, "libraryCellModelForMapItem:customName:styleAttributes:thirdLineViewModel:menuProvider:", a1, v7, v8, v4, v10);

  swift_release();
  _Block_release(v10);

  return v11;
}

id sub_1001D7948(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD v24[6];

  v2 = swift_allocObject(&unk_1011A9FE0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = objc_msgSend(a1, "userProvidedNotes");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v6).n128_u64[0];
  v8 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v8 = v4 & 0xFFFFFFFFFFFFLL;
  if (v8)
  {
    v9 = objc_msgSend(a1, "userProvidedNotes", v7);
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v12 = v11;

    String._mapsui_quotedForLocale.getter(v10, v12, v13);
    v15 = v14;
    swift_bridgeObjectRelease(v12);
    v16 = objc_allocWithZone((Class)PlaceContextViewModel);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v16, "initWithLibraryContextForPlaceNote:", v17, swift_bridgeObjectRelease(v15).n128_f64[0]);

  }
  else
  {
    v18 = 0;
  }
  v19 = (void *)objc_opt_self(TwoLinesContentViewModelComposer);
  v20 = swift_allocObject(&unk_1011AA1E8, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_1001D9DD4;
  *(_QWORD *)(v20 + 24) = v2;
  v24[4] = sub_1001D9E10;
  v24[5] = v20;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_1001D8E38;
  v24[3] = &unk_1011AA200;
  v21 = _Block_copy(v24);
  swift_retain();
  swift_release();
  v22 = objc_msgSend(v19, "cellModelForRouteData:thirdLineViewModel:menuProvider:", a1, v18, v21);
  _Block_release(v21);
  swift_release();

  return v22;
}

id sub_1001D7B44()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)MUPlaceTileCellConfiguration), "init");
  objc_msgSend(v0, "setShowIcon:", 0);
  objc_msgSend(v0, "setShowCuratedPhoto:", 1);
  objc_msgSend(v0, "setVariant:", 0);
  result = objc_msgSend(v0, "setShowSelectionControlWhileEditing:", 1);
  qword_1014D5018 = (uint64_t)v0;
  return result;
}

uint64_t sub_1001D7BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_10149F588);
  sub_10000E930(v0, qword_1014D5020);
  sub_10000E918(v0, (uint64_t)qword_1014D5020);
  v1 = sub_10000E4BC(0, &qword_10149F598, MUPlaceTileCollectionViewCell_ptr);
  v2 = type metadata accessor for LibraryListSavedItemCellModel();
  return UICollectionView.CellRegistration.init(handler:)(sub_1001D7C50, 0, v1, v2);
}

uint64_t sub_1001D7C50(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = *a3 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  if (!*(_BYTE *)(v3 + 16))
  {
    v4 = (void *)result;
    v5 = *(_QWORD *)(v3 + 8);
    v6 = *(id *)v3;
    swift_unknownObjectRetain(v5);
    objc_msgSend(v4, "_setCornerRadius:", 10.0);
    objc_msgSend(v4, "setClipsToBounds:", 1);
    if (qword_1014910F8 != -1)
      swift_once(&qword_1014910F8, sub_1001D7B44);
    objc_msgSend(v4, "setCellConfiguration:", qword_1014D5018);
    v7 = objc_msgSend(objc_allocWithZone((Class)MUPlatterView), "init");
    objc_msgSend(v4, "setBackgroundView:", v7);

    objc_msgSend(v4, "setViewModel:", v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

id sub_1001D7D68(void *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  id result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  __n128 v25;
  void *v26;
  id v27;
  NSString v28;
  uint64_t v29;
  id v30;
  NSString v31;
  _BYTE v32[24];

  v2 = objc_msgSend(a1, "placeItemNote");
  if (v2)
  {
    v4 = v2;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v7 = v6;

    v8 = String._mapsui_nilIfEmpty.getter(v5);
    v10 = v9;
    v11 = swift_bridgeObjectRelease(v7);
    if (v10)
    {
      String._mapsui_quotedForLocale.getter(v8, v10, v11);
      v13 = v12;
      swift_bridgeObjectRelease(v10);
      v14 = objc_allocWithZone((Class)PlaceContextViewModel);
      v15 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(v14, "initWithLibraryContextForPlaceNote:", v15, swift_bridgeObjectRelease(v13).n128_f64[0]);

      return v16;
    }
  }
  v17 = type metadata accessor for FavoriteItem(0, v3);
  if (swift_dynamicCastClass(a1, v17))
    return objc_msgSend(objc_allocWithZone((Class)PlaceContextViewModel), "initWithLibraryContextForPinnedItem");
  v19 = type metadata accessor for CollectionPlaceItem(0);
  v16 = (id)swift_dynamicCastClass(a1, v19);
  if (!v16)
    return v16;
  v20 = swift_unknownObjectRetain(a1);
  if ((dispatch thunk of CollectionPlaceItem.type.getter(v20) & 1) != 0)
  {
    if (qword_101491110 != -1)
      swift_once(&qword_101491110, sub_1001DCC98);
    swift_beginAccess(&static FavoriteCollectionHandler.title, v32, 0, 0);
    v29 = *((_QWORD *)&static FavoriteCollectionHandler.title + 1);
    v30 = objc_allocWithZone((Class)PlaceContextViewModel);
    swift_bridgeObjectRetain(v29);
    v31 = String._bridgeToObjectiveC()();
    v16 = objc_msgSend(v30, "initWithLibraryContextForUserCollectionName:", v31, swift_bridgeObjectRelease(v29).n128_f64[0]);
    swift_unknownObjectRelease(a1);

    return v16;
  }
  v21 = dispatch thunk of CollectionItem.fetchCollections()();
  v22 = v21;
  if (!((unint64_t)v21 >> 62))
  {
    result = *(id *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_11;
LABEL_23:
    swift_unknownObjectRelease(a1);
    swift_bridgeObjectRelease(v22);
    return 0;
  }
  if (v21 >= 0)
    v21 &= 0xFFFFFFFFFFFFFF8uLL;
  result = (id)_CocoaArrayWrapper.endIndex.getter(v21);
  if (!result)
    goto LABEL_23;
LABEL_11:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
LABEL_14:
    v24 = v23;
    v25 = swift_bridgeObjectRelease(v22);
    dispatch thunk of Collection.title.getter(v25);
    v16 = v26;
    if (v26)
    {
      v27 = objc_allocWithZone((Class)PlaceContextViewModel);
      v28 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(v27, "initWithLibraryContextForUserCollectionName:", v28, swift_bridgeObjectRelease(v16).n128_f64[0]);
      swift_unknownObjectRelease(a1);

    }
    else
    {

      swift_unknownObjectRelease(a1);
    }
    return v16;
  }
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v23 = *(id *)(v22 + 32);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

UIMenu *sub_1001D8048()
{
  uint64_t v0;
  void *v1;
  UIMenu *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSString v22;
  UIMenuElementSize preferredElementSize;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  NSString v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSString v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  NSString v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  NSString v44;
  uint64_t v45;
  Swift::String v46;
  UIMenu v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  NSString v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  NSString v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  Swift::String v64;
  Swift::String v65;
  NSString v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  NSString v72;
  void *v73;
  char **v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  NSString v85;
  Swift::String v86;
  Swift::String v87;
  Swift::String v88;
  NSString v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  NSString v95;
  uint64_t v96;
  Swift::String v97;
  UIMenu v98;
  Swift::OpaquePointer children;
  Swift::OpaquePointer childrena;
  id v102;
  uint64_t v103;
  UIMenuElementSize v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t value_8;
  UIMenu *value_8a;
  UIImage_optional v109;
  UIImage_optional v110;
  Swift::String v111;
  Swift::String v112;
  Swift::String v113;
  Swift::String v114;
  Swift::String swift__stringd;
  Swift::String v116;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16))
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16) == 1)
    {
      return (UIMenu *)_swiftEmptyArrayStorage;
    }
    else
    {
      v105 = sub_100008B04((uint64_t *)&unk_101493B10);
      value_8 = swift_allocObject(v105, 56, 7);
      *(_OWORD *)(value_8 + 16) = xmmword_100E25080;
      sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v12._countAndFlagsBits = 0xD000000000000014;
      v111._countAndFlagsBits = 0xD000000000000036;
      v111._object = (void *)0x8000000100E515F0;
      v12._object = (void *)0x8000000100E515D0;
      v13._countAndFlagsBits = 0x6F69746365726944;
      v13._object = (void *)0xEA0000000000736ELL;
      v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v13, v111);
      v15 = String._bridgeToObjectiveC()();
      v16 = (void *)objc_opt_self(UIImage);
      v17 = objc_msgSend(v16, "systemImageNamed:", v15);

      v18 = swift_allocObject(&unk_1011A9FE0, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16);
      v19 = swift_allocObject(&unk_1011AA058, 40, 7);
      *(_QWORD *)(v19 + 16) = v18;
      *(_BYTE *)(v19 + 24) = 0;
      *(_QWORD *)(v19 + 32) = v1;
      v20 = v1;
      v21 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v14._countAndFlagsBits, v14._object, 0, 0, v17, 0, 0, 0, 0, 0, 0, sub_1001D9E30, v19);
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v21, "setAccessibilityIdentifier:", v22);

      *(_QWORD *)(value_8 + 32) = v21;
      *(_QWORD *)(value_8 + 40) = sub_1001D934C();
      sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
      preferredElementSize = swift_allocObject(v105, 48, 7);
      *(_OWORD *)(preferredElementSize + 16) = xmmword_100E250A0;
      v24._countAndFlagsBits = 0xD000000000000010;
      v25._countAndFlagsBits = 0xD00000000000001ALL;
      v112._countAndFlagsBits = 0xD00000000000003DLL;
      v112._object = (void *)0x8000000100E516D0;
      v25._object = (void *)0x8000000100E51690;
      v24._object = (void *)0x8000000100E516B0;
      v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v24, v112);
      v27 = String._bridgeToObjectiveC()();
      v28 = v16;
      v29 = objc_msgSend(v16, "systemImageNamed:", v27);

      v30 = swift_allocObject(&unk_1011A9FE0, 24, 7);
      swift_unknownObjectWeakInit(v30 + 16);
      v31 = swift_allocObject(&unk_1011AA080, 40, 7);
      *(_QWORD *)(v31 + 16) = v30;
      *(_BYTE *)(v31 + 24) = 1;
      *(_QWORD *)(v31 + 32) = v20;
      v32 = v20;
      v33 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v26._countAndFlagsBits, v26._object, 0, 0, v29, 0, 0, 0, 0, 0, 0, sub_1001D9F2C, v31);
      v34 = String._bridgeToObjectiveC()();
      objc_msgSend(v33, "setAccessibilityIdentifier:", v34);

      *(_QWORD *)(preferredElementSize + 32) = v33;
      v35._countAndFlagsBits = 0xD000000000000016;
      v113._countAndFlagsBits = 0xD000000000000028;
      v113._object = (void *)0x8000000100E51760;
      v35._object = (void *)0x8000000100E51740;
      v36._countAndFlagsBits = 0x52206574656C6544;
      v36._object = (void *)0xEC0000006574756FLL;
      v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v36, v113);
      v38 = String._bridgeToObjectiveC()();
      v39 = objc_msgSend(v28, "systemImageNamed:", v38);

      v40 = swift_allocObject(&unk_1011A9FE0, 24, 7);
      swift_unknownObjectWeakInit(v40 + 16);
      v41 = swift_allocObject(&unk_1011AA0A8, 40, 7);
      *(_QWORD *)(v41 + 16) = v40;
      *(_BYTE *)(v41 + 24) = 2;
      *(_QWORD *)(v41 + 32) = v32;
      v42 = v32;
      v43 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v37._countAndFlagsBits, v37._object, 0, 0, v39, 0, 0, 0, 0, 2, 0, sub_1001D9F2C, v41);
      v44 = String._bridgeToObjectiveC()();
      objc_msgSend(v43, "setAccessibilityIdentifier:", v44);

      *(_QWORD *)(preferredElementSize + 40) = v43;
      specialized Array._endMutation()(v45);
      v46._countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      v109.value.super.isa = 0;
      v109.is_nil = 0;
      v47.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v46, (Swift::String_optional)0, v109, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
      *(UIMenu *)(value_8 + 48) = v47;
      specialized Array._endMutation()(v47.super.super.isa);
      return (UIMenu *)value_8;
    }
  }
  else
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 8);
    v4 = type metadata accessor for CollectionPlaceItem(0);
    v5 = swift_unknownObjectRetain(v3);
    v6 = swift_dynamicCastClass(v5, v4);
    v7 = objc_msgSend(v3, "placeItemNote");
    v8 = v7;
    if (v7)
    {
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v11 = v10;

      v8 = (void *)(v9 & 0xFFFFFFFFFFFFLL);
    }
    else
    {
      v11 = 0xE000000000000000;
    }
    v48 = v6 != 0;
    swift_bridgeObjectRelease(v11);
    v49 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0)
      v49 = (uint64_t)v8;
    v106 = v49;
    v103 = sub_100008B04((uint64_t *)&unk_101493B10);
    v50 = swift_allocObject(v103, 56, 7);
    *(_OWORD *)(v50 + 16) = xmmword_100E25080;
    value_8a = (UIMenu *)v50;
    *(_QWORD *)(v50 + 32) = sub_1001D8FE4(v48);
    sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v114._countAndFlagsBits = 0xD00000000000002ELL;
    v114._object = (void *)0x8000000100E517B0;
    v51._countAndFlagsBits = 0x7972617262694C5BLL;
    v51._object = (void *)0xEF6572616853205DLL;
    v52._countAndFlagsBits = 0x6572616853;
    v52._object = (void *)0xE500000000000000;
    v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v52, v114);
    v54 = String._bridgeToObjectiveC()();
    v102 = (id)objc_opt_self(UIImage);
    v55 = objc_msgSend(v102, "systemImageNamed:", v54);

    v56 = swift_allocObject(&unk_1011A9FE0, 24, 7);
    swift_unknownObjectWeakInit(v56 + 16);
    v57 = swift_allocObject(&unk_1011AA0D0, 48, 7);
    *(_QWORD *)(v57 + 16) = v56;
    *(_BYTE *)(v57 + 24) = 2;
    *(_QWORD *)(v57 + 32) = v1;
    *(_QWORD *)(v57 + 40) = v3;
    v58 = v1;
    swift_unknownObjectRetain(v3);
    v59 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v53._countAndFlagsBits, v53._object, 0, 0, v55, 0, 0, 0, 0, 0, 0, sub_1001D9E4C, v57);
    v60 = String._bridgeToObjectiveC()();
    objc_msgSend(v59, "setAccessibilityIdentifier:", v60);

    value_8a[5].super.super.isa = (Class)v59;
    v61 = swift_allocObject(v103, 56, 7);
    *(_OWORD *)(v61 + 16) = xmmword_100E25080;
    v62 = v61;
    v104 = v61;
    v63._countAndFlagsBits = 0xD000000000000018;
    swift__stringd._object = (void *)0x8000000100E50CF0;
    v63._object = (void *)0x8000000100E50CD0;
    v64._countAndFlagsBits = 0x61206F7420646441;
    v64._object = (void *)0xEE00656469754720;
    swift__stringd._countAndFlagsBits = 0xD000000000000023;
    v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v64, swift__stringd);
    v66 = String._bridgeToObjectiveC()();
    v67 = objc_msgSend(v102, "systemImageNamed:", v66);

    v68 = swift_allocObject(&unk_1011A9FE0, 24, 7);
    swift_unknownObjectWeakInit(v68 + 16);
    v69 = swift_allocObject(&unk_1011AA0F8, 48, 7);
    *(_QWORD *)(v69 + 16) = v68;
    *(_BYTE *)(v69 + 24) = 4;
    *(_QWORD *)(v69 + 32) = v58;
    *(_QWORD *)(v69 + 40) = v3;
    v70 = v58;
    swift_unknownObjectRetain(v3);
    v71 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v65._countAndFlagsBits, v65._object, 0, 0, v67, 0, 0, 0, 0, 0, 0, sub_1001D9F30, v69);
    v72 = String._bridgeToObjectiveC()();
    objc_msgSend(v71, "setAccessibilityIdentifier:", v72);

    *(_QWORD *)(v62 + 32) = v71;
    v73 = (void *)objc_opt_self(MapsUILocalizationBridge);
    v74 = &selRef_addANoteTitle;
    if (v106)
      v74 = &selRef_editNoteTitle;
    v75 = objc_msgSend(v73, *v74);
    v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
    v78 = v77;

    sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
    v79 = String._bridgeToObjectiveC()();
    v80 = objc_msgSend(v102, "systemImageNamed:", v79);

    v81 = swift_allocObject(&unk_1011A9FE0, 24, 7);
    swift_unknownObjectWeakInit(v81 + 16);
    v82 = swift_allocObject(&unk_1011AA120, 48, 7);
    *(_QWORD *)(v82 + 16) = v81;
    *(_BYTE *)(v82 + 24) = 3;
    *(_QWORD *)(v82 + 32) = v70;
    *(_QWORD *)(v82 + 40) = v3;
    v83 = v70;
    swift_unknownObjectRetain(v3);
    v84 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v76, v78, 0, 0, v80, 0, 0, 0, 0, 0, 0, sub_1001D9F30, v82);
    v85 = String._bridgeToObjectiveC()();
    objc_msgSend(v84, "setAccessibilityIdentifier:", v85);

    *(_QWORD *)(v104 + 40) = v84;
    v86._countAndFlagsBits = 0xD00000000000001DLL;
    v116._countAndFlagsBits = 0xD00000000000002DLL;
    v116._object = (void *)0x8000000100E50D80;
    v86._object = (void *)0x8000000100E50D40;
    v87._object = (void *)0x8000000100E50D60;
    v87._countAndFlagsBits = 0xD000000000000013;
    v88 = NSLocalizedString(_:tableName:bundle:value:comment:)(v86, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v87, v116);
    v89 = String._bridgeToObjectiveC()();
    v90 = objc_msgSend(v102, "systemImageNamed:", v89);

    v91 = swift_allocObject(&unk_1011A9FE0, 24, 7);
    swift_unknownObjectWeakInit(v91 + 16);
    v92 = swift_allocObject(&unk_1011AA148, 48, 7);
    *(_QWORD *)(v92 + 16) = v91;
    *(_BYTE *)(v92 + 24) = 5;
    *(_QWORD *)(v92 + 32) = v83;
    *(_QWORD *)(v92 + 40) = v3;
    v93 = v83;
    swift_unknownObjectRetain(v3);
    v94 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v88._countAndFlagsBits, v88._object, 0, 0, v90, 0, 0, 0, 0, 2, 0, sub_1001D9F30, v92);
    v95 = String._bridgeToObjectiveC()();
    objc_msgSend(v94, "setAccessibilityIdentifier:", v95);

    *(_QWORD *)(v104 + 48) = v94;
    specialized Array._endMutation()(v96);
    v97._countAndFlagsBits = 0;
    v97._object = (void *)0xE000000000000000;
    v110.value.super.isa = 0;
    v110.is_nil = 0;
    v98.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v97, (Swift::String_optional)0, v110, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v104, childrena).super.super.isa;
    value_8a[6].super.super.isa = v98.super.super.isa;
    specialized Array._endMutation()(v98.super.super.isa);
    v2 = value_8a;
    swift_unknownObjectRelease(v3);
  }
  return v2;
}

id sub_1001D8E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(_QWORD *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[4];

  v5 = *(uint64_t (**)(_QWORD *, uint64_t))(a1 + 32);
  v10[3] = swift_getObjectType();
  v10[0] = a2;
  v6 = sub_10000E4BC(0, &qword_10149F6C0, UIMenuElement_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v6);
  swift_retain();
  swift_unknownObjectRetain(a2);
  v8 = (void *)v5(v10, v7);
  swift_bridgeObjectRelease(v7);
  swift_release();
  sub_10000BEAC(v10);
  return v8;
}

objc_class *sub_1001D8EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  UIMenu *preferredElementSize;
  Swift::String v7;
  objc_class *v8;
  NSString v9;
  Swift::OpaquePointer v11;
  UIImage_optional v12;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, &v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    preferredElementSize = sub_1001D8048();

  }
  else
  {
    preferredElementSize = (UIMenu *)_swiftEmptyArrayStorage;
  }
  sub_10000E4BC(0, (unint64_t *)&unk_10149F6A0, UIMenu_ptr);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v12.value.super.isa = 0;
  v12.is_nil = 0;
  v8 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v7, (Swift::String_optional)0, v12, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v11).super.super.isa;
  v9 = String._bridgeToObjectiveC()();
  -[objc_class setAccessibilityIdentifier:](v8, "setAccessibilityIdentifier:", v9);

  -[objc_class setPreferredElementSize:](v8, "setPreferredElementSize:", 1);
  return v8;
}

id sub_1001D8FE4(char a1)
{
  uint64_t v1;
  unint64_t v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  Swift::Void (__swiftcall *v17)(DataSource *__struct_ptr, Swift::OpaquePointer);
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  NSString v26;
  Swift::String v28;
  Swift::String v29;

  if ((a1 & 1) != 0)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v28._countAndFlagsBits = 0xD000000000000036;
    v28._object = (void *)0x8000000100E518E0;
    v3 = 0xE300000000000000;
    v4._countAndFlagsBits = 0x7972617262694C5BLL;
    v4._object = (void *)0xED00006E6950205DLL;
    v5._countAndFlagsBits = 7235920;
    v5._object = (void *)0xE300000000000000;
    v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v5, v28);
    countAndFlagsBits = v6._countAndFlagsBits;
    object = v6._object;
    v9 = 0;
  }
  else
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v29._countAndFlagsBits = 0xD000000000000040;
    v29._object = (void *)0x8000000100E51870;
    v10._countAndFlagsBits = 0x7972617262694C5BLL;
    v10._object = (void *)0xEF6E69706E55205DLL;
    v11._countAndFlagsBits = 0x6E69706E55;
    v11._object = (void *)0xE500000000000000;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v11, v29);
    countAndFlagsBits = v12._countAndFlagsBits;
    object = v12._object;
    v3 = 0xE900000000000068;
    v9 = 2;
  }
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v13);

  v15 = v1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16))
  {
    v16 = 0;
    v17 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
  }
  else
  {
    v19 = *(void **)v15;
    v18 = *(_QWORD *)(v15 + 8);
    v20 = swift_allocObject(&unk_1011A9FE0, 24, 7);
    swift_unknownObjectWeakInit(v20 + 16);
    v16 = swift_allocObject(&unk_1011AA170, 48, 7);
    *(_QWORD *)(v16 + 16) = v20;
    *(_BYTE *)(v16 + 24) = (a1 & 1) == 0;
    *(_QWORD *)(v16 + 32) = v19;
    *(_QWORD *)(v16 + 40) = v18;
    v21 = v19;
    swift_unknownObjectRetain(v18);
    v17 = (Swift::Void (__swiftcall *)(DataSource *__struct_ptr, Swift::OpaquePointer))sub_1001D9F30;
  }
  sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
  v22 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(countAndFlagsBits, object, 0, 0, v14, 0, 0, 0, 0, v9, 0, v17, v16);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  if ((a1 & 1) != 0)
    v23 = 7235920;
  else
    v23 = 0x6E69706E55;
  if ((a1 & 1) != 0)
    v24 = 0xE300000000000000;
  else
    v24 = 0xE500000000000000;
  v25 = v24;
  String.append(_:)(*(Swift::String *)&v23);
  swift_bridgeObjectRelease(v24);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setAccessibilityIdentifier:", v26, swift_bridgeObjectRelease(0x8000000100E518C0).n128_f64[0]);

  return v22;
}

uint64_t sub_1001D934C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  Swift::String v25;
  Swift::String v26;

  v1 = v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_item + 16) == 2)
  {
    v2 = *(id *)v1;
    v3 = *(_QWORD *)(v1 + 8);
    v4 = *(id *)v1;
    v5 = objc_msgSend(v4, "_maps_existingOfflineSubscription");

    sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
    if (v5)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v6._countAndFlagsBits = 0xD000000000000023;
      v25._countAndFlagsBits = 0xD000000000000064;
      v25._object = (void *)0x8000000100E51A20;
      v6._object = (void *)0x8000000100E519F0;
      v7._countAndFlagsBits = 0x656E696C66664FLL;
      v7._object = (void *)0xE700000000000000;
      v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v7, v25);
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v9);

      v11 = swift_allocObject(&unk_1011A9FE0, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16);
      v12 = swift_allocObject(&unk_1011AA1C0, 40, 7);
      *(_QWORD *)(v12 + 16) = v11;
      *(_BYTE *)(v12 + 24) = 3;
      *(_QWORD *)(v12 + 32) = v4;
      v13 = v4;
      v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v8._countAndFlagsBits, v8._object, 0, 0, v10, 0, 0, 0, 0, 0, 0, sub_1001D9F2C, v12);
    }
    else
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v16._countAndFlagsBits = 0xD000000000000027;
      v26._countAndFlagsBits = 0xD00000000000004ELL;
      v26._object = (void *)0x8000000100E51950;
      v16._object = (void *)0x8000000100E51920;
      v17._countAndFlagsBits = 0x64616F6C6E776F44;
      v17._object = (void *)0xE800000000000000;
      v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v17, v26);
      v19 = String._bridgeToObjectiveC()();
      v20 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v19);

      v21 = swift_allocObject(&unk_1011A9FE0, 24, 7);
      swift_unknownObjectWeakInit(v21 + 16);
      v22 = swift_allocObject(&unk_1011AA198, 40, 7);
      *(_QWORD *)(v22 + 16) = v21;
      *(_BYTE *)(v22 + 24) = 4;
      *(_QWORD *)(v22 + 32) = v4;
      v23 = v4;
      v14 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v18._countAndFlagsBits, v18._object, 0, 0, v20, 0, 0, 0, 0, 0, 0, sub_1001D9F2C, v22);
    }
    v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setAccessibilityIdentifier:", v24);

    sub_1001BEF7C(v2, v3, 2);
    return (uint64_t)v14;
  }
  else
  {
    sub_10000E4BC(0, &qword_10149F698, UIAction_ptr);
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:), 0);
  }
}

uint64_t type metadata accessor for LibraryListSavedItemCellModel()
{
  return objc_opt_self(_TtC4Maps29LibraryListSavedItemCellModel);
}

void destroy for LibraryListSavedItemCellModel.ItemType(uint64_t a1)
{
  sub_1001BEF7C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s4Maps29LibraryListSavedItemCellModelC8ItemTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001C585C(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LibraryListSavedItemCellModel.ItemType(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001C585C(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1001BEF7C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LibraryListSavedItemCellModel.ItemType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1001BEF7C(v4, v5, v6);
  return a1;
}

uint64_t sub_1001D98E0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LibraryListSavedItemCellModel.ItemType()
{
  return &type metadata for LibraryListSavedItemCellModel.ItemType;
}

uint64_t storeEnumTagSinglePayload for LibraryListSavedItemsManagementSectionCellModel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1001D9944 + 4 * byte_100E326AD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001D9978 + 4 * byte_100E326A8[v4]))();
}

uint64_t sub_1001D9978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D9980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D9988);
  return result;
}

uint64_t sub_1001D9994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D999CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1001D99A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D99A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryListSavedItemsManagementSectionCellModel()
{
  return &type metadata for LibraryListSavedItemsManagementSectionCellModel;
}

uint64_t storeEnumTagSinglePayload for LibraryListSectionIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001D9A10 + 4 * byte_100E326B7[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001D9A44 + 4 * byte_100E326B2[v4]))();
}

uint64_t sub_1001D9A44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D9A4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001D9A54);
  return result;
}

uint64_t sub_1001D9A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001D9A68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001D9A6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001D9A74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryListSectionIdentifier()
{
  return &type metadata for LibraryListSectionIdentifier;
}

unint64_t sub_1001D9A94()
{
  unint64_t result;

  result = qword_10149F968;
  if (!qword_10149F968)
  {
    result = swift_getWitnessTable(byte_100E327E0, &type metadata for LibraryListSectionIdentifier);
    atomic_store(result, (unint64_t *)&qword_10149F968);
  }
  return result;
}

unint64_t sub_1001D9AD8(uint64_t a1)
{
  unint64_t result;

  result = sub_1001D9AFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001D9AFC()
{
  unint64_t result;

  result = qword_10149F990;
  if (!qword_10149F990)
  {
    result = swift_getWitnessTable(byte_100E3285C, &type metadata for LibraryListSavedItemsManagementSectionCellModel);
    atomic_store(result, (unint64_t *)&qword_10149F990);
  }
  return result;
}

unint64_t sub_1001D9B44()
{
  unint64_t result;

  result = qword_10149F998;
  if (!qword_10149F998)
  {
    result = swift_getWitnessTable(byte_100E3289C, &type metadata for LibraryListSavedItemsManagementSectionCellModel);
    atomic_store(result, (unint64_t *)&qword_10149F998);
  }
  return result;
}

unint64_t sub_1001D9B88(uint64_t a1)
{
  unint64_t result;

  result = sub_1001D9BAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001D9BAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149F9C0;
  if (!qword_10149F9C0)
  {
    v1 = type metadata accessor for LibraryListSavedItemCellModel();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10149F9C0);
  }
  return result;
}

void sub_1001D9BF0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler);

    if (v7)
    {
      sub_1001BB900(a3);
      swift_unknownObjectRelease(v7);
    }
  }
}

void sub_1001D9C94(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC4Maps29LibraryListSavedItemCellModel_actionHandler);

    if (v7)
    {
      sub_1001BC31C(a3);
      swift_unknownObjectRelease(v7);
    }
  }
}

unint64_t sub_1001D9D20(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10119A848, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

unint64_t sub_1001D9D68(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10119A8B0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

uint64_t sub_1001D9DB0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

objc_class *sub_1001D9DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001D8EE4(a1, a2, v2);
}

uint64_t sub_1001D9DEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1001D9E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001D9E24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001D9E30(uint64_t a1)
{
  uint64_t v1;

  sub_1001D9C94(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_1001D9E4C(uint64_t a1)
{
  uint64_t v1;

  sub_1001D9BF0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1001D9E6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001D9EA8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D9ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v4)(_BYTE *, uint64_t);
  uint64_t v5;
  _BYTE v7[32];

  v4 = *(uint64_t (**)(_BYTE *, uint64_t))(v2 + 16);
  sub_100011E20(a1, (uint64_t)v7);
  v5 = v4(v7, a2);
  sub_10000C180((uint64_t)v7);
  return v5;
}

uint64_t sub_1001DA070(uint64_t a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2[2] = _Block_copy(aBlock);
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v6 = v5;
  v2[3] = v5;
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10149FA10 + dword_10149FA10);
  v7 = (_QWORD *)swift_task_alloc(unk_10149FA14);
  v2[4] = v7;
  *v7 = v2;
  v7[1] = sub_1001DA0F8;
  return v9(v4, v6);
}

uint64_t sub_1001DA0F8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  void (**v4)(_QWORD, _QWORD);
  uint64_t v6;

  v3 = *(_QWORD *)(*v1 + 24);
  v4 = *(void (***)(_QWORD, _QWORD))(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 32));
  swift_bridgeObjectRelease(v3);
  ((void (**)(_QWORD, void *))v4)[2](v4, a1);
  _Block_release(v4);

  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_1001DA174(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  double v8;
  uint64_t v9;
  id v10;
  void (*v11)(_QWORD, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  char v34;
  id v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_QWORD, _QWORD);
  id v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;

  v4 = type metadata accessor for Friend(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for Handle(0);
  v7 = *(void (**)(char *, uint64_t))(v66 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v66).n128_u64[0];
  v65 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)a2, "emailAddresses", v8);
  v11 = (void (*)(_QWORD, _QWORD))sub_100008B04((uint64_t *)&unk_1014A0C80);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v51 = v12;
    else
      v51 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v60 = v5;
  v61 = v4;
  v58 = v11;
  v59 = (id)a2;
  v62 = v7;
  v63 = a1;
  if (v13)
  {
    v67 = _swiftEmptyArrayStorage;
    sub_1001323FC(0, v13 & ~(v13 >> 63), 0);
    if (v13 < 0)
    {
      __break(1u);
      goto LABEL_32;
    }
    v14 = 0;
    v15 = v67;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v12);
      else
        v16 = *(id *)(v12 + 8 * v14 + 32);
      v17 = v16;
      v18 = objc_msgSend(v16, "value", v58);
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      v67 = v15;
      v23 = v15[2];
      v22 = v15[3];
      if (v23 >= v22 >> 1)
      {
        sub_1001323FC(v22 > 1, v23 + 1, 1);
        v15 = v67;
      }
      ++v14;
      v15[2] = v23 + 1;
      v24 = &v15[2 * v23];
      v24[4] = v19;
      v24[5] = v21;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease(v12);
    v5 = v60;
    v4 = v61;
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    v15 = _swiftEmptyArrayStorage;
  }
  v26 = v65;
  v27 = v63;
  v28 = Friend.handle.getter(v25);
  v29 = Handle.identifier.getter(v28);
  v31 = v30;
  v11 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v62 + 1);
  v11(v26, v66);
  LOBYTE(v29) = sub_100157664(v29, v31, v15);
  swift_bridgeObjectRelease(v15);
  v32 = swift_bridgeObjectRelease(v31);
  v13 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v64, v27, v4, v32);
  if ((v29 & 1) != 0)
  {
    v34 = 1;
LABEL_38:
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v13, v4, v33);
    return v34 & 1;
  }
  v35 = objc_msgSend(v59, "phoneNumbers");
  a2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v58);

  if (!((unint64_t)a2 >> 62))
  {
    v36 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    v62 = (void (*)(char *, uint64_t))v11;
    if (v36)
      goto LABEL_18;
LABEL_36:
    swift_bridgeObjectRelease(a2);
    v39 = _swiftEmptyArrayStorage;
LABEL_37:
    v53 = v65;
    v54 = Friend.handle.getter(v50);
    v55 = Handle.identifier.getter(v54);
    v57 = v56;
    v62(v53, v66);
    v34 = sub_100157664(v55, v57, v39);
    swift_bridgeObjectRelease(v39);
    v33 = swift_bridgeObjectRelease(v57);
    goto LABEL_38;
  }
LABEL_32:
  if (a2 < 0)
    v52 = a2;
  else
    v52 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v36 = _CocoaArrayWrapper.endIndex.getter(v52);
  swift_bridgeObjectRelease(a2);
  v62 = (void (*)(char *, uint64_t))v11;
  if (!v36)
    goto LABEL_36;
LABEL_18:
  v67 = _swiftEmptyArrayStorage;
  result = sub_1001323FC(0, v36 & ~(v36 >> 63), 0);
  if ((v36 & 0x8000000000000000) == 0)
  {
    v38 = 0;
    v39 = v67;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, a2);
      else
        v40 = *(id *)(a2 + 8 * v38 + 32);
      v41 = v40;
      v42 = objc_msgSend(v40, "value", v58);
      v43 = objc_msgSend(v42, "stringValue");

      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      v46 = v45;

      v67 = v39;
      v48 = v39[2];
      v47 = v39[3];
      if (v48 >= v47 >> 1)
      {
        sub_1001323FC(v47 > 1, v48 + 1, 1);
        v39 = v67;
      }
      ++v38;
      v39[2] = v48 + 1;
      v49 = &v39[2 * v48];
      v49[4] = v44;
      v49[5] = v46;
    }
    while (v36 != v38);
    swift_bridgeObjectRelease(a2);
    v5 = v60;
    v4 = v61;
    v13 = (uint64_t)v64;
    goto LABEL_37;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DA754(void *a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t (*v8)(id);

  v2[2] = a1;
  v2[3] = _Block_copy(aBlock);
  v4 = unk_10149F9DC;
  v8 = (uint64_t (*)(id))((char *)&dword_10149F9D8 + dword_10149F9D8);
  v5 = a1;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_10010F964;
  return v8(v5);
}

uint64_t sub_1001DA7D8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10149F9CC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DD08;
  return ((uint64_t (*)(void *, void *))((char *)&dword_10149F9C8 + dword_10149F9C8))(v2, v3);
}

uint64_t sub_1001DA844()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000E930(v0, qword_1014D5038);
  sub_10000E918(v0, (uint64_t)qword_1014D5038);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEE007370614D2E65, 0xD000000000000016, 0x8000000100E51EA0);
}

unint64_t sub_1001DA8C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008B04(&qword_10149FA18);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_1001DA9D4(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001DA9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1001DAA38(a1, a2, v5);
}

unint64_t sub_1001DAA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1001DAB84(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v2[11] = a1;
  v2[12] = a2;
  v3 = sub_100008B04(&qword_10149E650);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Location(0);
  v2[14] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[15] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[16] = swift_task_alloc(v6);
  v2[17] = swift_task_alloc(v6);
  v7 = type metadata accessor for ClientOrigin(0);
  v2[18] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v2[19] = v8;
  v2[20] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RequestOrigin(0);
  v2[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Handle(0);
  v2[22] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v2[23] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[24] = swift_task_alloc(v12);
  v2[25] = swift_task_alloc(v12);
  return swift_task_switch(sub_1001DAC98, 0, 0);
}

uint64_t sub_1001DAC98()
{
  objc_super *v0;
  id receiver;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t super_class;
  uint8_t *v9;
  uint64_t v10;
  Class v11;
  Class v12;
  id v13;
  id v14;
  id v15;
  Class v16;
  objc_class *MyHandle;
  id v18;
  id v19;
  unint64_t v20;
  objc_class *v21;
  uint64_t v22;
  objc_class *v23;
  objc_class *v24;
  char *v25;
  objc_class *v26;
  uint64_t v27;
  objc_super **v28;
  Class v30;
  id v31;
  uint64_t v32;

  if (qword_101491108 != -1)
    swift_once(&qword_101491108, sub_1001DA844);
  receiver = v0[6].receiver;
  v2 = type metadata accessor for Logger(0);
  v0[13].receiver = (id)sub_10000E918(v2, (uint64_t)qword_1014D5038);
  v3 = swift_bridgeObjectRetain_n(receiver, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (unint64_t)v0[6].receiver;
  if (v6)
  {
    super_class = (uint64_t)v0[5].super_class;
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v32 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain(v7);
    v0[5].receiver = (id)sub_1000C28FC(super_class, v7, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v0[5], &v0[5].super_class, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease_n(v7, 3);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Will build MapsAutoCompletePerson for Find My handle identifier %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v0[6].receiver, 2);
  }

  v11 = v0[12].super_class;
  v13 = v0[11].receiver;
  v12 = v0[11].super_class;
  v14 = v0[10].receiver;
  v30 = v0[9].super_class;
  v31 = v0[9].receiver;
  v16 = v0[5].super_class;
  v15 = v0[6].receiver;
  MyHandle = (objc_class *)type metadata accessor for MapsFindMyHandle(0);
  v18 = objc_allocWithZone(MyHandle);
  swift_bridgeObjectRetain(v15);
  v19 = v18;
  v20 = sub_1001DA8C4((uint64_t)_swiftEmptyArrayStorage);
  Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)(v16, v15, 0, 0, _swiftEmptyArrayStorage, v20, _swiftEmptyArrayStorage);
  (*((void (**)(uint64_t, Class, id))v12 + 4))((uint64_t)v19 + OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle, v11, v13);

  v0[1].receiver = v19;
  v0[1].super_class = MyHandle;
  v21 = (objc_class *)objc_msgSendSuper2(v0 + 1, "init");
  v22 = OBJC_IVAR____TtC4Maps16MapsFindMyHandle_handle;
  v0[13].super_class = v21;
  v0[14].receiver = (id)v22;
  v23 = (objc_class *)*((_QWORD *)v12 + 2);
  v0[14].super_class = v23;
  ((void (*)(Class, char *, id))v23)(v11, (char *)v21 + v22, v13);
  v24 = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
  v25 = (char *)objc_allocWithZone(v24);
  UUID.init()(v25);
  ((void (*)(char *, Class, id))v23)(&v25[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v11, v13);

  v0[2].receiver = v25;
  v0[2].super_class = v24;
  v0[15].receiver = objc_msgSendSuper2(v0 + 2, "init");
  v26 = (objc_class *)*((_QWORD *)v12 + 1);
  v0[15].super_class = v26;
  ((void (*)(Class, id))v26)(v11, v13);
  (*((void (**)(id, _QWORD, id))v30 + 13))(v14, enum case for ClientOrigin.other(_:), v31);
  RequestOrigin.init(_:)(v14);
  v27 = type metadata accessor for Session(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = (objc_super **)swift_task_alloc(async function pointer to Session.init(_:)[1]);
  v0[16].receiver = v28;
  *v28 = v0;
  v28[1] = (objc_super *)sub_1001DB00C;
  return Session.init(_:)(v0[10].super_class);
}

uint64_t sub_1001DB00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 256);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001DB068, 0, 0);
}

uint64_t sub_1001DB068()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[29];
  v2 = v0[22];
  v3 = v0[23];
  v4 = v0[27] + v0[28];
  v5 = sub_100008B04(&qword_101499230);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v5, v7 + *(_QWORD *)(v3 + 72), v6 | 7);
  v0[34] = v8;
  *(_OWORD *)(v8 + 16) = xmmword_100E22F40;
  v1(v8 + v7, v4, v2);
  v9 = (_QWORD *)swift_task_alloc(async function pointer to Session.locations(for:reverseGeocode:)[1]);
  v0[35] = v9;
  *v9 = v0;
  v9[1] = sub_1001DB128;
  return Session.locations(for:reverseGeocode:)(v8, 0);
}

uint64_t sub_1001DB128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 272);
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 280);
  *(_QWORD *)(*(_QWORD *)v2 + 288) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = sub_1001DB5D4;
  }
  else
  {
    v5 = sub_1001DB1A4;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001DB1A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, __n128);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  BOOL v16;
  void *v17;
  void *v18;
  uint8_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  objc_class *MyLocation;
  char *v31;
  id v32;
  void (*v33)(char *, uint64_t);
  objc_class *MyLocationHandle;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v54;
  char *v55;

  v1 = *(_QWORD *)(v0 + 288);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 232))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 216) + *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 176));
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_1000C1AF8(*(_QWORD *)(v0 + 192)), (v3 & 1) != 0))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(*(_QWORD *)(v0 + 104), *(_QWORD *)(*(_QWORD *)(v0 + 288) + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 120) + 72) * v2, *(_QWORD *)(v0 + 112));
    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)(v0 + 288);
  v6 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 248);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 176);
  v9 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v4, 1, v9);
  v12 = swift_bridgeObjectRelease(v5);
  v6(v7, v8, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v13 = sub_100010CC4(*(_QWORD *)(v0 + 104), &qword_10149E650);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(void **)(v0 + 240);
    v18 = *(void **)(v0 + 216);
    if (v16)
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unable to get location from Find My", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
      swift_release();

    }
    else
    {

      swift_release();
    }
    v46 = 0;
  }
  else
  {
    v20 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Got location from Find My", v23, 2u);
      swift_slowDealloc(v23, -1, -1);
    }
    v24 = *(void **)(v0 + 240);
    v54 = *(void **)(v0 + 216);
    v25 = *(char **)(v0 + 128);
    v26 = *(char **)(v0 + 136);
    v55 = v26;
    v28 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 120);

    v29 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v29(v25, (uint64_t)v26, v28);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    v31 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()(v31);
    v29(&v31[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], (uint64_t)v25, v28);

    *(_QWORD *)(v0 + 48) = v31;
    *(_QWORD *)(v0 + 56) = MyLocation;
    v32 = objc_msgSendSuper2((objc_super *)(v0 + 48), "init");
    v33 = *(void (**)(char *, uint64_t))(v27 + 8);
    v33(v25, v28);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    v35 = (char *)objc_allocWithZone(MyLocationHandle);
    v36 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(_QWORD *)&v35[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(_QWORD *)&v35[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v24;
    v37 = *(void **)&v35[v36];
    *(_QWORD *)&v35[v36] = v32;
    v38 = v24;
    v39 = v32;
    v40 = v38;
    v41 = v39;

    *(_QWORD *)(v0 + 64) = v35;
    *(_QWORD *)(v0 + 72) = MyLocationHandle;
    v42 = objc_msgSendSuper2((objc_super *)(v0 + 64), "init");

    v43 = sub_100114194();
    v44 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    v45 = v42;
    v46 = sub_1001F10E0(v43, 0, v42, 0);

    swift_release();
    v33(v55, v28);
  }
  v47 = *(_QWORD *)(v0 + 192);
  v49 = *(_QWORD *)(v0 + 160);
  v48 = *(_QWORD *)(v0 + 168);
  v51 = *(_QWORD *)(v0 + 128);
  v50 = *(_QWORD *)(v0 + 136);
  v52 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  return (*(uint64_t (**)(id))(v0 + 8))(v46);
}

uint64_t sub_1001DB5D4(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.error.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v1 + 264);
  v6 = *(NSObject **)(v1 + 240);
  v7 = *(NSObject **)(v1 + 216);
  if (v4)
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to get location from Find My", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
    swift_release(v5);

    v7 = v2;
  }
  else
  {

    swift_release(v5);
    v6 = v2;
  }

  v9 = *(_QWORD *)(v1 + 192);
  v11 = *(_QWORD *)(v1 + 160);
  v10 = *(_QWORD *)(v1 + 168);
  v13 = *(_QWORD *)(v1 + 128);
  v12 = *(_QWORD *)(v1 + 136);
  v14 = *(_QWORD *)(v1 + 104);
  swift_task_dealloc(*(_QWORD *)(v1 + 200));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

uint64_t sub_1001DB6F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1[10] = a1;
  v2 = sub_100008B04(&qword_10149E650);
  v1[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Location(0);
  v1[12] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[13] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[14] = swift_task_alloc(v5);
  v1[15] = swift_task_alloc(v5);
  v6 = type metadata accessor for Handle(0);
  v1[16] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v1[17] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[18] = swift_task_alloc(v8);
  v1[19] = swift_task_alloc(v8);
  v9 = sub_100008B04(&qword_10149F9E0);
  v1[20] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Friend(0);
  v1[21] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[22] = v11;
  v12 = (*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[23] = swift_task_alloc(v12);
  v1[24] = swift_task_alloc(v12);
  v13 = (*(_QWORD *)(*(_QWORD *)(sub_100008B04(&qword_10149F9E8) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[25] = swift_task_alloc(v13);
  v1[26] = swift_task_alloc(v13);
  v1[27] = swift_task_alloc(v13);
  v14 = type metadata accessor for ClientOrigin(0);
  v1[28] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v1[29] = v15;
  v1[30] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RequestOrigin(0);
  v1[31] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001DB8A8, 0, 0);
}

uint64_t sub_1001DB8A8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  void *v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v14;

  if (qword_101491108 != -1)
    swift_once(&qword_101491108, sub_1001DA844);
  v1 = (void *)v0[10];
  v2 = type metadata accessor for Logger(0);
  v0[32] = sub_10000E918(v2, (uint64_t)qword_1014D5038);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.info.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = (void *)v0[10];
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    v0[9] = v6;
    v8 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 9, v0 + 10, v7 + 4, v7 + 12);
    *v14 = v6;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Will build MapsAutoCompletePerson for contact %@", v7, 0xCu);
    v9 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v14, 1, v9);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v10 = v0[30];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[29] + 104))(v10, enum case for ClientOrigin.other(_:), v0[28]);
  RequestOrigin.init(_:)(v10);
  v11 = type metadata accessor for Session(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = (_QWORD *)swift_task_alloc(async function pointer to Session.init(_:)[1]);
  v0[33] = v12;
  *v12 = v0;
  v12[1] = sub_1001DBAB0;
  return Session.init(_:)(v0[31]);
}

uint64_t sub_1001DBAB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 264);
  *(_QWORD *)(*(_QWORD *)v1 + 272) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1001DBB0C, 0, 0);
}

uint64_t sub_1001DBB0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[27];
  v2 = v0[16];
  v3 = v0[10];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[17] + 56);
  v0[35] = v4;
  v4(v1, 1, 1, v2);
  v5 = swift_task_alloc(32);
  v0[36] = v5;
  *(_QWORD *)(v5 + 16) = v3;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to Session.friendsSharingLocationsWithMe(filter:)[1]);
  v0[37] = v6;
  *v6 = v0;
  v6[1] = sub_1001DBB9C;
  return Session.friendsSharingLocationsWithMe(filter:)(sub_1001DCA98, v5);
}

uint64_t sub_1001DBB9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 296);
  *(_QWORD *)(*v2 + 304) = a1;
  swift_task_dealloc(v4);
  v5 = *(_QWORD *)(v3 + 288);
  if (v1)
  {
    swift_errorRelease(v1);
    swift_task_dealloc(v5);
    v6 = sub_1001DC69C;
  }
  else
  {
    swift_task_dealloc(v5);
    v6 = sub_1001DBC24;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001DBC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  void (*v24)(uint64_t, uint64_t, __n128);
  void (*v25)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;

  v1 = *(_QWORD *)(v0 + 304);
  if (*(_QWORD *)(v1 + 16))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 176) + 16))(*(_QWORD *)(v0 + 160), v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 176) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 176) + 80)), *(_QWORD *)(v0 + 168));
    v2 = 0;
    v1 = *(_QWORD *)(v0 + 304);
  }
  else
  {
    v2 = 1;
  }
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v5, v2, 1, v3);
  v6 = swift_bridgeObjectRelease(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v4 + 48))(v5, 1, v3, v6) == 1)
  {
    sub_100010CC4(*(_QWORD *)(v0 + 160), &qword_10149F9E0);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 184);
    v7 = *(_QWORD *)(v0 + 192);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = *(_QWORD *)(v0 + 176);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 32))(v7, *(_QWORD *)(v0 + 160), v9);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, v7, v9);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.info.getter();
    v14 = os_log_type_enabled(v12, v13);
    v15 = *(_QWORD *)(v0 + 184);
    if (v14)
    {
      v64 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 152);
      v57 = *(_QWORD *)(v0 + 136);
      v59 = *(_QWORD *)(v0 + 128);
      v61 = *(_QWORD *)(v0 + 176);
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v66 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = Friend.handle.getter(v18);
      v20 = Handle.identifier.getter(v19);
      v22 = v21;
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v16, v59);
      *(_QWORD *)(v0 + 64) = sub_1000C28FC(v20, v22, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v17 + 4, v17 + 12);
      v23 = swift_bridgeObjectRelease(v22);
      v24 = *(void (**)(uint64_t, uint64_t, __n128))(v61 + 8);
      v24(v15, v64, v23);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Found matching Find My handle %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      v24 = *(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(v0 + 176) + 8);
      ((void (*)(_QWORD, _QWORD))v24)(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    }

    v25 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 280);
    v27 = *(_QWORD *)(v0 + 208);
    v26 = *(_QWORD *)(v0 + 216);
    v28 = *(_QWORD *)(v0 + 192);
    v29 = *(_QWORD *)(v0 + 168);
    v30 = *(_QWORD *)(v0 + 128);
    Friend.handle.getter(v31);
    ((void (*)(uint64_t, uint64_t))v24)(v28, v29);
    sub_100010CC4(v26, &qword_10149F9E8);
    v25(v27, 0, 1, v30);
    sub_1001DCAE8(v27, v26);
  }
  v32 = *(_QWORD *)(v0 + 200);
  v33 = *(_QWORD *)(v0 + 128);
  v34 = *(_QWORD *)(v0 + 136);
  sub_1001DCAA0(*(_QWORD *)(v0 + 216), v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    sub_100010CC4(*(_QWORD *)(v0 + 200), &qword_10149F9E8);
    v35 = *(void **)(v0 + 80);
    v36 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    v37 = v35;
    v65 = sub_1001F10E0(v35, 0, 0, 0);

    swift_release();
    v39 = *(_QWORD *)(v0 + 240);
    v38 = *(_QWORD *)(v0 + 248);
    v41 = *(_QWORD *)(v0 + 208);
    v40 = *(_QWORD *)(v0 + 216);
    v43 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 200);
    v44 = *(_QWORD *)(v0 + 184);
    v45 = *(_QWORD *)(v0 + 152);
    v46 = *(_QWORD *)(v0 + 160);
    v58 = *(_QWORD *)(v0 + 144);
    v60 = *(_QWORD *)(v0 + 120);
    v62 = *(_QWORD *)(v0 + 112);
    v63 = *(_QWORD *)(v0 + 88);
    sub_100010CC4(v40, &qword_10149F9E8);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v46);
    swift_task_dealloc(v45);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    return (*(uint64_t (**)(id))(v0 + 8))(v65);
  }
  else
  {
    v49 = *(_QWORD *)(v0 + 136);
    v48 = *(_QWORD *)(v0 + 144);
    v50 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 32))(v48, *(_QWORD *)(v0 + 200), v50);
    v51 = sub_100008B04(&qword_101499230);
    v52 = *(unsigned __int8 *)(v49 + 80);
    v53 = (v52 + 32) & ~v52;
    v54 = swift_allocObject(v51, v53 + *(_QWORD *)(v49 + 72), v52 | 7);
    *(_QWORD *)(v0 + 312) = v54;
    *(_OWORD *)(v54 + 16) = xmmword_100E22F40;
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
    *(_QWORD *)(v0 + 320) = v55;
    v55(v54 + v53, v48, v50);
    v56 = (_QWORD *)swift_task_alloc(async function pointer to Session.locations(for:reverseGeocode:)[1]);
    *(_QWORD *)(v0 + 328) = v56;
    *v56 = v0;
    v56[1] = sub_1001DC0E0;
    return Session.locations(for:reverseGeocode:)(v54, 0);
  }
}

uint64_t sub_1001DC0E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 328);
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 312);
  *(_QWORD *)(*(_QWORD *)v2 + 336) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  if (v1)
  {
    swift_errorRelease(v1);
    v5 = sub_1001DC8D8;
  }
  else
  {
    v5 = sub_1001DC160;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1001DC160()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  objc_class *MyHandle;
  char *v31;
  id v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  objc_class *MyLocation;
  char *v35;
  id v36;
  void (*v37)(uint64_t, uint64_t);
  objc_class *MyLocationHandle;
  char *v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  objc_super *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  objc_super *v68;

  v1 = *(_QWORD *)(v0 + 336);
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_1000C1AF8(*(_QWORD *)(v0 + 144)), v1 = *(_QWORD *)(v0 + 336), (v3 & 1) != 0))
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v1 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 104) + 72) * v2, *(_QWORD *)(v0 + 96));
    v4 = 0;
    v1 = *(_QWORD *)(v0 + 336);
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v7, v4, 1, v5);
  v8 = swift_bridgeObjectRelease(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 48))(v7, 1, v5, v8) == 1)
  {
    v9 = sub_100010CC4(*(_QWORD *)(v0 + 88), &qword_10149E650);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    v12 = os_log_type_enabled(v10, v11);
    v14 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 144);
    v15 = *(_QWORD *)(v0 + 128);
    if (v12)
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Unable to get location from Find My", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v17 = *(void **)(v0 + 80);
    objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    v18 = v17;
    v68 = (objc_super *)sub_1001F10E0(v17, 0, 0, 0);

    swift_release();
  }
  else
  {
    v19 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Got location from Find My", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
    v24 = *(_QWORD *)(v0 + 144);
    v25 = *(_QWORD *)(v0 + 152);
    v63 = v24;
    v27 = *(_QWORD *)(v0 + 128);
    v26 = *(_QWORD *)(v0 + 136);
    v28 = *(_QWORD *)(v0 + 112);
    v66 = *(_QWORD *)(v0 + 120);
    v29 = *(_QWORD *)(v0 + 104);
    v59 = *(_QWORD *)(v0 + 96);
    v61 = *(void **)(v0 + 80);

    v23(v25, v24, v27);
    MyHandle = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
    v31 = (char *)objc_allocWithZone(MyHandle);
    UUID.init()(v31);
    v23((uint64_t)&v31[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v25, v27);

    *(_QWORD *)(v0 + 16) = v31;
    *(_QWORD *)(v0 + 24) = MyHandle;
    v32 = objc_msgSendSuper2((objc_super *)(v0 + 16), "init");
    v60 = *(objc_super **)(v26 + 8);
    ((void (*)(uint64_t, uint64_t))v60)(v25, v27);
    v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    v33(v28, v66, v59);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    v35 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()(v35);
    v33((uint64_t)&v35[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], v28, v59);

    *(_QWORD *)(v0 + 32) = v35;
    *(_QWORD *)(v0 + 40) = MyLocation;
    v36 = objc_msgSendSuper2((objc_super *)(v0 + 32), "init");
    v37 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v37(v28, v59);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    v39 = (char *)objc_allocWithZone(MyLocationHandle);
    v40 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(_QWORD *)&v39[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(_QWORD *)&v39[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v32;
    v41 = *(void **)&v39[v40];
    *(_QWORD *)&v39[v40] = v36;
    v42 = v32;
    v43 = v36;
    v44 = v42;
    v45 = v43;

    *(_QWORD *)(v0 + 48) = v39;
    *(_QWORD *)(v0 + 56) = MyLocationHandle;
    v46 = objc_msgSendSuper2((objc_super *)(v0 + 48), "init");

    objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    v47 = v61;
    v48 = v46;
    v68 = (objc_super *)sub_1001F10E0(v61, 0, v46, 0);

    swift_release();
    v37(v66, v59);
    ((void (*)(uint64_t, uint64_t))v60)(v63, v27);
  }
  v50 = *(_QWORD *)(v0 + 240);
  v49 = *(_QWORD *)(v0 + 248);
  v52 = *(_QWORD *)(v0 + 208);
  v51 = *(_QWORD *)(v0 + 216);
  v54 = *(_QWORD *)(v0 + 192);
  v53 = *(_QWORD *)(v0 + 200);
  v55 = *(_QWORD *)(v0 + 184);
  v56 = *(_QWORD *)(v0 + 152);
  v57 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 144);
  v64 = *(_QWORD *)(v0 + 120);
  v65 = *(_QWORD *)(v0 + 112);
  v67 = *(_QWORD *)(v0 + 88);
  sub_100010CC4(v51, &qword_10149F9E8);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v57);
  swift_task_dealloc(v56);
  swift_task_dealloc(v62);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v67);
  return (*(uint64_t (**)(objc_super *))(v0 + 8))(v68);
}

uint64_t sub_1001DC69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  sub_1001DCAA0(*(_QWORD *)(v0 + 216), v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_100010CC4(*(_QWORD *)(v0 + 200), &qword_10149F9E8);
    v4 = *(void **)(v0 + 80);
    v5 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
    v6 = v4;
    v30 = sub_1001F10E0(v4, 0, 0, 0);
    swift_release();

    v8 = *(_QWORD *)(v0 + 240);
    v7 = *(_QWORD *)(v0 + 248);
    v10 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 216);
    v12 = *(_QWORD *)(v0 + 192);
    v11 = *(_QWORD *)(v0 + 200);
    v13 = *(_QWORD *)(v0 + 184);
    v14 = *(_QWORD *)(v0 + 152);
    v15 = *(_QWORD *)(v0 + 160);
    v26 = *(_QWORD *)(v0 + 144);
    v27 = *(_QWORD *)(v0 + 120);
    v28 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 88);
    sub_100010CC4(v9, &qword_10149F9E8);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v15);
    swift_task_dealloc(v14);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(id))(v0 + 8))(v30);
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v18 + 32))(v17, *(_QWORD *)(v0 + 200), v19);
    v20 = sub_100008B04(&qword_101499230);
    v21 = *(unsigned __int8 *)(v18 + 80);
    v22 = (v21 + 32) & ~v21;
    v23 = swift_allocObject(v20, v22 + *(_QWORD *)(v18 + 72), v21 | 7);
    *(_QWORD *)(v0 + 312) = v23;
    *(_OWORD *)(v23 + 16) = xmmword_100E22F40;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    *(_QWORD *)(v0 + 320) = v24;
    v24(v23 + v22, v17, v19);
    v25 = (_QWORD *)swift_task_alloc(async function pointer to Session.locations(for:reverseGeocode:)[1]);
    *(_QWORD *)(v0 + 328) = v25;
    *v25 = v0;
    v25[1] = sub_1001DC0E0;
    return Session.locations(for:reverseGeocode:)(v23, 0);
  }
}

uint64_t sub_1001DC8D8(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.error.getter(v2);
  v4 = os_log_type_enabled(v2, v3);
  v6 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v7 = *(_QWORD *)(v1 + 128);
  if (v4)
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to get location from Find My", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v9 = *(void **)(v1 + 80);
  v10 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
  v11 = v9;
  v26 = sub_1001F10E0(v9, 0, 0, 0);

  swift_release();
  v13 = *(_QWORD *)(v1 + 240);
  v12 = *(_QWORD *)(v1 + 248);
  v15 = *(_QWORD *)(v1 + 208);
  v14 = *(_QWORD *)(v1 + 216);
  v17 = *(_QWORD *)(v1 + 192);
  v16 = *(_QWORD *)(v1 + 200);
  v18 = *(_QWORD *)(v1 + 184);
  v19 = *(_QWORD *)(v1 + 152);
  v20 = *(_QWORD *)(v1 + 160);
  v22 = *(_QWORD *)(v1 + 144);
  v23 = *(_QWORD *)(v1 + 120);
  v24 = *(_QWORD *)(v1 + 112);
  v25 = *(_QWORD *)(v1 + 88);
  sub_100010CC4(v14, &qword_10149F9E8);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(id))(v1 + 8))(v26);
}

uint64_t sub_1001DCA98(uint64_t a1)
{
  uint64_t v1;

  return sub_1001DA174(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001DCAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_10149F9E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DCAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_10149F9E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DCB34()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001DCB60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10149F9F4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000C0E0;
  return ((uint64_t (*)(uint64_t, void *))((char *)&dword_10149F9F0 + dword_10149F9F0))(v2, v3);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitName()
{
  return &type metadata for PlaceSummaryUnitName;
}

uint64_t sub_1001DCBE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

__int128 *FavoriteCollectionHandler.title.unsafeMutableAddressor()
{
  if (qword_101491110 != -1)
    swift_once(&qword_101491110, sub_1001DCC98);
  return &static FavoriteCollectionHandler.title;
}

void *FavoriteCollectionHandler.FavoriteCollectionIdentifier.unsafeMutableAddressor()
{
  return &static FavoriteCollectionHandler.FavoriteCollectionIdentifier;
}

unint64_t FavoriteCollectionHandler.identifier.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_1001DCC98()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;
  Swift::String v4;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v4._object = (void *)0x8000000100E52150;
  v0._object = (void *)0x8000000100E52130;
  v1._countAndFlagsBits = 0x657469726F766146;
  v1._object = (void *)0xE900000000000073;
  v4._countAndFlagsBits = 0xD000000000000018;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v1, v4);
  result = v3._countAndFlagsBits;
  static FavoriteCollectionHandler.title = (__int128)v3;
  return result;
}

uint64_t _s4Maps25FavoriteCollectionHandlerC5titleSSvgZ_0()
{
  uint64_t v0;
  _BYTE v2[24];

  if (qword_101491110 != -1)
    swift_once(&qword_101491110, sub_1001DCC98);
  swift_beginAccess(&static FavoriteCollectionHandler.title, v2, 0, 0);
  v0 = static FavoriteCollectionHandler.title;
  swift_bridgeObjectRetain(*((_QWORD *)&static FavoriteCollectionHandler.title + 1));
  return v0;
}

id FavoriteCollectionHandler._glyphImage.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage);
  v3 = v2;
  if (v2 == (void *)1)
  {
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v4);

    if (v5)
    {
      v3 = objc_msgSend(v5, "imageWithRenderingMode:", 2);

    }
    else
    {
      v3 = 0;
    }
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v7 = v3;
    sub_100042EEC(v6);
  }
  sub_100042F44(v2);
  return v3;
}

void FavoriteCollectionHandler._glyphImage.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage) = a1;
  sub_100042EEC(v2);
}

void (*FavoriteCollectionHandler._glyphImage.modify(id *a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = FavoriteCollectionHandler._glyphImage.getter();
  return sub_1001DD13C;
}

void sub_1001DD13C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(v3 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v5 = v2;
    sub_100042EEC(v4);

  }
  else
  {
    sub_100042EEC(v4);
  }
}

uint64_t FavoriteCollectionHandler.canShare.getter()
{
  void *v0;
  uint64_t result;

  result = GEOConfigGetBOOL(MapsConfig_CollectionAllowsURLSharing, off_1014B3378);
  if ((_DWORD)result)
    return objc_msgSend(v0, "isEmpty") ^ 1;
  return result;
}

uint64_t FavoriteCollectionHandler.sharingURL.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(v1, "sharingURLFromContainedMapItems");
  if (v3)
  {
    v4 = v3;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v3);

    v5 = type metadata accessor for URL(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = type metadata accessor for URL(0);
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

BOOL FavoriteCollectionHandler.beingModified.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount) > 0;
}

id FavoriteCollectionHandler.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  __n128 v8;
  objc_super v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler____lazy_storage____glyphImage] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount] = 0;
  v1 = OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_storeSubscriptionTypes;
  v2 = sub_10000B4B8();
  v3 = swift_allocObject(v2, ((*(unsigned int *)(v2 + 48) + 7) & 0x1FFFFFFF8) + 8, *(unsigned __int16 *)(v2 + 52) | 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v3 + 32) = type metadata accessor for CollectionPlaceItem(0);
  *(_QWORD *)&v0[v1] = v3;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FavoriteCollectionHandler();
  v4 = objc_msgSendSuper2(&v10, "init");
  type metadata accessor for MapsSyncStore(0);
  v5 = v4;
  v6 = (void *)static MapsSyncStore.sharedStore.getter(v5);
  v7 = v5;
  dispatch thunk of MapsSyncStore.subscribe(_:)(v8);

  _s4Maps25FavoriteCollectionHandlerC14storeDidChange5typesySaySSG_tF_0();
  return v7;
}

id FavoriteCollectionHandler.__deallocating_deinit()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  objc_super v6;

  v1 = v0;
  v2 = type metadata accessor for MapsSyncStore(0);
  v3 = (void *)static MapsSyncStore.sharedStore.getter(v2);
  v4 = v1;
  dispatch thunk of MapsSyncStore.unsubscribe(_:)(v4);

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for FavoriteCollectionHandler();
  return objc_msgSendSuper2(&v6, "dealloc");
}

Swift::Bool __swiftcall FavoriteCollectionHandler.contains(_:)(MKMapItem a1)
{
  void *v1;
  id v3;
  id v4;
  objc_super v6;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FavoriteCollectionHandler();
  v3 = objc_msgSendSuper2(&v6, "itemForMapItem:", a1.super.isa);
  v4 = v3;
  if (v3)

  return v4 != 0;
}

uint64_t FavoriteCollectionHandler.add(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void (**v17)(_QWORD);
  NSObject *v18;
  const char *label;
  const char *v20;
  int v21;
  void *v22;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void **aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  void *v49;
  _QWORD *v50;

  v39 = a2;
  v40 = a3;
  v38 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v41 = *(_QWORD *)(v7 - 8);
  v42 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_1011AA3B0, 24, 7);
  *(_QWORD *)(v12 + 16) = v3;
  v13 = swift_allocObject(&unk_1011AA3D8, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_1001E1A68;
  *(_QWORD *)(v13 + 24) = v12;
  v49 = sub_10000BF08;
  v50 = (_QWORD *)v13;
  aBlock = _NSConcreteStackBlock;
  v46 = 1107296256;
  v47 = sub_1001DCBE4;
  v48 = &unk_1011AA3F0;
  v14 = _Block_copy(&aBlock);
  v15 = v3;
  swift_retain();
  swift_release();
  v16 = v11;
  v17 = v14;
  v18 = v16;
  label = dispatch_queue_get_label(v18);
  v20 = dispatch_queue_get_label(0);
  if (label == v20)
  {

LABEL_7:
    v22 = objc_autoreleasePoolPush();
    v17[2](v17);
    objc_autoreleasePoolPop(v22);
    goto LABEL_10;
  }
  if (label && v20)
  {
    v21 = strcmp(label, v20);

    if (!v21)
      goto LABEL_7;
  }
  else
  {

  }
  dispatch_sync(v18, v17);
LABEL_10:

  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 121, 106, 43, 1);
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v25 = (void *)static OS_dispatch_queue.main.getter(result);
    v26 = (_QWORD *)swift_allocObject(&unk_1011AA428, 48, 7);
    v28 = v38;
    v27 = v39;
    v26[2] = v38;
    v26[3] = v15;
    v29 = v40;
    v26[4] = v27;
    v26[5] = v29;
    v49 = sub_1001E1A98;
    v50 = v26;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_1001BB8D4;
    v48 = &unk_1011AA440;
    v30 = _Block_copy(&aBlock);
    v31 = v15;
    swift_bridgeObjectRetain(v28);
    sub_10000C128(v27, v29);
    v32 = swift_release();
    static DispatchQoS.unspecified.getter(v32);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v33 = sub_10000E540();
    v34 = sub_100008B04((uint64_t *)&unk_101492FB0);
    v35 = sub_10000E588();
    v36 = v44;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v34, v35, v44, v33);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v30);
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v36);
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v9, v42);
  }
  return result;
}

void sub_1001DDB34(uint64_t a1, void *a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v33;
  int64_t v34;
  NSObject v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSString *v54;
  Class v55;
  uint64_t ObjCClassMetadata;
  uint64_t v57;
  id v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  NSString *v68;
  Class v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  void *v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Class isa;
  void *v102;
  id v103;
  id v104;
  void *v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  id v114;
  id v115;
  id v116;
  id v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  id v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  void *v127;
  id v128;
  __n128 v129;
  id v130;
  void *v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, _QWORD, uint64_t, uint64_t);
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  void (*v154)(_QWORD);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  id v165;
  id v166;
  void (**v167)(_QWORD);
  NSObject *v168;
  const char *label;
  const char *v170;
  int v171;
  void *v172;
  char isEscapingClosureAtFileLocation;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  void (*v183)(_QWORD);
  void *v184;
  char *v185;
  unint64_t v186;
  __int128 v187;
  id v188;
  char *v189;
  uint64_t v190;
  id v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  int64_t v198;
  _QWORD aBlock[7];
  unint64_t v200;

  v182 = a4;
  v183 = a3;
  v184 = a2;
  v5 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v5);
  v181 = (char *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v7);
  v9 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v10);
  v192 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v177 = (char *)&v175 - v13;
  __chkstk_darwin(v14);
  v179 = (char *)&v175 - v15;
  __chkstk_darwin(v16);
  v176 = (char *)&v175 - v17;
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v193 = v18;
  v194 = v19;
  __chkstk_darwin(v18);
  v189 = (char *)&v175 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v180 = (char *)&v175 - v22;
  __chkstk_darwin(v23);
  v178 = (char *)&v175 - v24;
  v200 = (unint64_t)_swiftEmptyArrayStorage;
  v25 = a1 + 56;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & *(_QWORD *)(a1 + 56);
  v198 = (unint64_t)(v26 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v29 = 0;
  v190 = 0;
  v187 = xmmword_100E22F40;
  v186 = 0x8000000100E52110;
  v196 = a1 + 56;
  v197 = a1;
  v185 = v9;
  while (1)
  {
    if (v28)
    {
      v30 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v31 = v30 | (v29 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v29++, 1))
    {
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    if (v29 >= v198)
      goto LABEL_102;
    v33 = *(_QWORD *)(v25 + 8 * v29);
    if (!v33)
      break;
LABEL_17:
    v28 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v29 << 6);
LABEL_18:
    sub_100035DEC(*(_QWORD *)(a1 + 48) + 40 * v31, (uint64_t)aBlock);
    v35.isa = AnyHashable._bridgeToObjectiveC()().isa;
    sub_100012C48((uint64_t)aBlock);
    v36 = objc_opt_self(MKMapItem);
    v37 = (void *)swift_dynamicCastObjCClass(v35.isa, v36);
    if (v37 && (v38 = v37, (v39 = objc_msgSend(v37, "_geoMapItem")) != 0))
    {
      v40 = v39;
      v41 = objc_msgSend((id)objc_opt_self(GEOMapItemStorage), "mapItemStorageForGEOMapItem:", v39);
      if (v41)
      {
        v42 = v41;
        v43 = objc_msgSend((id)objc_opt_self(CollectionHandler), "existingCollectionItemForMapItem:error:", v38, 0);
        if (v43)
        {
          v44 = v43;
          v45 = dispatch thunk of CollectionPlaceItem.type.getter(v43);
          if ((v45 & 1) == 0)
          {
            v46 = dispatch thunk of CollectionPlaceItem.type.getter(v45);
            v47 = v46 | 1u;
            v48 = objc_msgSend((id)swift_unknownObjectRetain(v40), "_clientAttributes");
            if (v48)
            {
              v49 = v48;
              LODWORD(v195) = v46 | 1;
              v50 = objc_msgSend(v48, "mapsSyncAttributes");

              if (v50
                && (v51 = objc_msgSend(v50, "mapsSyncObjectType"),
                    v50,
                    v51))
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
                v53 = v52;

                v54 = (NSString *)String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease(v53);
                v55 = NSClassFromString(v54);
                swift_unknownObjectRelease(v40);

                if (v55
                  && (ObjCClassMetadata = swift_getObjCClassMetadata(v55),
                      ObjCClassMetadata == type metadata accessor for FavoriteItem(0, v57)))
                {
                  v130 = objc_msgSend((id)swift_unknownObjectRetain(v40), "_clientAttributes");
                  if (v130
                    && (v131 = v130,
                        v132 = objc_msgSend(v130, "mapsSyncAttributes"),
                        v131,
                        v132)
                    && (v133 = objc_msgSend(v132, "mapsSyncIdentifier"),
                        v132,
                        v133))
                  {
                    v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
                    v136 = v135;

                    v137 = v176;
                    UUID.init(uuidString:)(v134, v136);
                    v138 = v136;
                    v139 = (uint64_t)v137;
                    swift_bridgeObjectRelease(v138);
                    v140 = v193;
                  }
                  else
                  {
                    v140 = v193;
                    v139 = (uint64_t)v176;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v194 + 56))(v176, 1, 1, v193);
                  }
                  swift_unknownObjectRelease(v40);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v194 + 48))(v139, 1, v140) == 1)
                  {
                    sub_1000A5008(v139);
                    v47 = v195;
                  }
                  else
                  {
                    (*(void (**)(char *, uint64_t, uint64_t))(v194 + 32))(v178, v139, v140);
                    v144 = v194;
                    (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v179, v178, v140);
                    v145 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56);
                    v146 = v179;
                    v145(v179, 0, 1, v140);
                    dispatch thunk of CollectionPlaceItem.originalIdentifier.setter(v146);
                    if ((v46 & 2) != 0)
                      v47 = v195;
                    else
                      v47 = v46 | 3u;
                    (*(void (**)(char *, uint64_t))(v194 + 8))(v178, v140);
                  }
                }
                else
                {
                  v47 = v195;
                }
              }
              else
              {
                swift_unknownObjectRelease(v40);
                v47 = v195;
              }
            }
            else
            {
              swift_unknownObjectRelease(v40);
            }
            dispatch thunk of CollectionPlaceItem.type.setter(v47);
            v121 = v44;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v121);
            v123 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v122 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v123 >= v122 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v122 > 1, v123 + 1, 1);
            v124 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v121);
            specialized Array._endMutation()(v124);

            goto LABEL_69;
          }

          swift_unknownObjectRelease(v40);
        }
        else
        {
          type metadata accessor for CollectionPlaceItem(0);
          v58 = (id)MapsSyncObject.__allocating_init()();
          v195 = v42;
          v59 = dispatch thunk of CollectionPlaceItem.mapItemStorage.setter(v42);
          v60 = dispatch thunk of CollectionPlaceItem.type.getter(v59);
          v61 = v60 | 1u;
          v62 = objc_msgSend((id)swift_unknownObjectRetain(v40), "_clientAttributes");
          if (v62
            && (v63 = v62,
                v64 = objc_msgSend(v62, "mapsSyncAttributes"),
                v63,
                v64)
            && (v65 = objc_msgSend(v64, "mapsSyncObjectType"), v64,
                                                                                                   v65))
          {
            v191 = v58;
            static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
            v67 = v66;

            v68 = (NSString *)String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v67);
            v69 = NSClassFromString(v68);
            swift_unknownObjectRelease(v40);

            if (v69)
            {
              v70 = swift_getObjCClassMetadata(v69);
              v72 = type metadata accessor for FavoriteItem(0, v71);
              v58 = v191;
              if (v70 == v72)
              {
                v73 = objc_msgSend((id)swift_unknownObjectRetain(v40), "_clientAttributes");
                if (v73
                  && (v74 = v73,
                      v75 = objc_msgSend(v73, "mapsSyncAttributes"),
                      v74,
                      v75)
                  && (v76 = objc_msgSend(v75, "mapsSyncIdentifier"),
                      v75,
                      v76))
                {
                  v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
                  v79 = v78;

                  v80 = (uint64_t)v177;
                  UUID.init(uuidString:)(v77, v79);
                  swift_bridgeObjectRelease(v79);
                  v82 = v193;
                  v81 = v194;
                }
                else
                {
                  v82 = v193;
                  v81 = v194;
                  v80 = (uint64_t)v177;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v194 + 56))(v177, 1, 1, v193);
                }
                swift_unknownObjectRelease(v40);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v80, 1, v82) == 1)
                {
                  sub_1000A5008(v80);
                  v58 = v191;
                }
                else
                {
                  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v180, v80, v82);
                  v141 = v179;
                  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v179, v180, v82);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v141, 0, 1, v82);
                  v142 = v141;
                  v143 = v81;
                  v58 = v191;
                  dispatch thunk of CollectionPlaceItem.originalIdentifier.setter(v142);
                  if ((v60 & 2) != 0)
                    v61 = v61;
                  else
                    v61 = v60 | 3u;
                  (*(void (**)(char *, uint64_t))(v143 + 8))(v180, v82);
                }
              }
            }
            else
            {
              v58 = v191;
            }
          }
          else
          {
            swift_unknownObjectRelease(v40);
          }
          dispatch thunk of CollectionPlaceItem.type.setter(v61);
          v83 = objc_msgSend(v38, "name");
          if (v83)
          {
            v84 = v83;
            v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(v83);
            v87 = v86;

          }
          else
          {
            v85 = 0;
            v87 = 0;
          }
          v88 = (uint64_t)v192;
          dispatch thunk of CollectionPlaceItem.customName.setter(v85, v87);
          v89 = objc_msgSend((id)swift_unknownObjectRetain(v40), "_clientAttributes");
          v90 = v194;
          if (v89
            && (v91 = v89,
                v92 = objc_msgSend(v89, "mapsSyncAttributes"),
                v91,
                v92)
            && (v93 = objc_msgSend(v92, "mapsSyncIdentifier"), v92,
                                                                                                   v93))
          {
            v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
            v96 = v95;

            UUID.init(uuidString:)(v94, v96);
            v97 = v96;
            v88 = (uint64_t)v192;
            swift_bridgeObjectRelease(v97);
            v98 = v193;
          }
          else
          {
            v98 = v193;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56))(v88, 1, 1, v193);
          }
          swift_unknownObjectRelease(v40);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v88, 1, v98) != 1)
          {
            v191 = v58;
            (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v189, v88, v98);
            type metadata accessor for MapsSyncQueryPredicate(0);
            v99 = sub_100008B04((uint64_t *)&unk_10149A4F0);
            v100 = swift_allocObject(v99, 72, 7);
            *(_OWORD *)(v100 + 16) = v187;
            isa = UUID._bridgeToObjectiveC()().super.isa;
            *(_QWORD *)(v100 + 56) = sub_10000E4BC(0, &qword_10149F0C8, NSUUID_ptr);
            *(_QWORD *)(v100 + 64) = sub_1001BA488();
            *(_QWORD *)(v100 + 32) = isa;
            v102 = (void *)NSPredicate.init(format:_:)(0xD000000000000010, v186, v100);
            v103 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
            v104 = v102;
            v105 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v102, 0, 0);
            type metadata accessor for FavoriteItemRequest(0);
            v106 = (void *)FavoriteItemRequest.__allocating_init()();
            v107 = v105;
            v108 = v190;
            v109 = dispatch thunk of FavoriteItemRequest.fetchSync(options:)(v105);
            v188 = v104;
            if (v108)
            {
              swift_errorRelease(v108);

              v190 = 0;
              v110 = v185;
              goto LABEL_58;
            }
            v125 = v109;
            v190 = 0;

            v110 = v185;
            if (!((unint64_t)v125 >> 62))
            {
              if (*(_QWORD *)((v125 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_72;
LABEL_100:
              swift_bridgeObjectRelease(v125);
LABEL_58:
              v111 = v193;
              goto LABEL_59;
            }
            if (v125 < 0)
              v147 = v125;
            else
              v147 = v125 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v125);
            v148 = _CocoaArrayWrapper.endIndex.getter(v147);
            swift_bridgeObjectRelease(v125);
            if (!v148)
              goto LABEL_100;
LABEL_72:
            if ((v125 & 0xC000000000000001) != 0)
            {
              v126 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v125);
            }
            else
            {
              if (!*(_QWORD *)((v125 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_126;
              }
              v126 = *(id *)(v125 + 32);
            }
            v127 = v126;
            swift_bridgeObjectRelease(v125);
            v111 = v193;
            if (v127)
            {
              v113 = v110;
              v114 = v191;
              v128 = v191;
              v116 = v127;
              dispatch thunk of MapsSyncObject.createTime.getter(v129);

            }
            else
            {
LABEL_59:
              v112 = type metadata accessor for Date(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v110, 1, 1, v112);
              v113 = v110;
              v114 = v191;
              v115 = v191;
              v116 = 0;
            }
            v58 = v114;
            dispatch thunk of MapsSyncObject.createTime.setter(v113);

            (*(void (**)(char *, uint64_t))(v194 + 8))(v189, v111);
            goto LABEL_61;
          }
          sub_1000A5008(v88);
LABEL_61:
          v117 = v58;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v117);
          v119 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v118 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v119 >= v118 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v118 > 1, v119 + 1, 1);
          v120 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v119, v117);
          specialized Array._endMutation()(v120);

LABEL_69:
          swift_unknownObjectRelease(v40);
          v25 = v196;
          a1 = v197;
        }
      }
      else
      {
        swift_unknownObjectRelease(v40);

      }
    }
    else
    {

    }
  }
  v34 = v29 + 1;
  if (v29 + 1 >= v198)
    goto LABEL_102;
  v33 = *(_QWORD *)(v25 + 8 * v34);
  if (v33)
    goto LABEL_16;
  v34 = v29 + 2;
  if (v29 + 2 >= v198)
    goto LABEL_102;
  v33 = *(_QWORD *)(v25 + 8 * v34);
  if (v33)
  {
LABEL_16:
    v29 = v34;
    goto LABEL_17;
  }
  v34 = v29 + 3;
  if (v29 + 3 < v198)
  {
    v33 = *(_QWORD *)(v25 + 8 * v34);
    if (!v33)
    {
      while (1)
      {
        v29 = v34 + 1;
        if (__OFADD__(v34, 1))
          goto LABEL_120;
        if (v29 >= v198)
          goto LABEL_102;
        v33 = *(_QWORD *)(v25 + 8 * v29);
        ++v34;
        if (v33)
          goto LABEL_17;
      }
    }
    goto LABEL_16;
  }
LABEL_102:
  swift_release();
  a1 = v200;
  if (!(v200 >> 62))
  {
    v149 = *(_QWORD *)((v200 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_104;
  }
LABEL_121:
  if (a1 < 0)
    v174 = a1;
  else
    v174 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v149 = _CocoaArrayWrapper.endIndex.getter(v174);
  swift_bridgeObjectRelease(a1);
LABEL_104:
  v150 = v184;
  if (v149 > 0)
  {
    v151 = type metadata accessor for TaskPriority(0);
    v152 = (uint64_t)v181;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v181, 1, 1, v151);
    type metadata accessor for MainActor(0);
    v153 = v150;
    v154 = v183;
    v155 = v182;
    v156 = sub_10000C128((uint64_t)v183, v182);
    v157 = static MainActor.shared.getter(v156);
    v158 = v200;
    v159 = (_QWORD *)swift_allocObject(&unk_1011AA770, 64, 7);
    v159[2] = v157;
    v159[3] = &protocol witness table for MainActor;
    v159[4] = v158;
    v159[5] = v153;
    v159[6] = v154;
    v159[7] = v155;
    sub_1001B0C08(v152, (uint64_t)&unk_10149FA90, (uint64_t)v159);
    swift_release();
    return;
  }
  swift_bridgeObjectRelease(a1);
  v160 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v161 = (void *)static OS_dispatch_queue.main.getter(v160);
  v162 = swift_allocObject(&unk_1011AA6F8, 24, 7);
  *(_QWORD *)(v162 + 16) = v150;
  v163 = swift_allocObject(&unk_1011AA720, 32, 7);
  *(_QWORD *)(v163 + 16) = sub_1001E1C84;
  *(_QWORD *)(v163 + 24) = v162;
  aBlock[4] = sub_1001E1E64;
  aBlock[5] = v163;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DCBE4;
  aBlock[3] = &unk_1011AA738;
  v164 = _Block_copy(aBlock);
  v165 = v150;
  swift_retain();
  swift_release();
  v166 = v161;
  v167 = v164;
  v168 = v166;
  label = dispatch_queue_get_label(v168);
  v170 = dispatch_queue_get_label(0);
  if (label == v170)
  {

    goto LABEL_112;
  }
  if (label && v170)
  {
    v171 = strcmp(label, v170);

    if (!v171)
    {
LABEL_112:
      v172 = objc_autoreleasePoolPush();
      v167[2](v167);
      objc_autoreleasePoolPop(v172);
      goto LABEL_115;
    }
  }
  else
  {

  }
  dispatch_sync(v168, v167);
LABEL_115:

  _Block_release(v167);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v163, "", 121, 112, 43, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_126:
    __break(1u);
    return;
  }
  if (v183)
    v183(0);
}

uint64_t sub_1001DEBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[9] = v8;
  v7[10] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[11] = v9;
  v7[12] = v10;
  return swift_task_switch(sub_1001DEC50, v9, v10);
}

uint64_t sub_1001DEC50()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = type metadata accessor for MapsSyncStore(0);
  v0[13] = static MapsSyncStore.sharedStore.getter(v1);
  v4 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                      + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                  + 1));
  v0[14] = v2;
  *v2 = v0;
  v2[1] = sub_1001DECC8;
  return v4(v0[5]);
}

uint64_t sub_1001DECC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 88);
    v5 = *(_QWORD *)(v2 + 96);
    v6 = sub_1001DEE6C;
  }
  else
  {

    v4 = *(_QWORD *)(v2 + 88);
    v5 = *(_QWORD *)(v2 + 96);
    v6 = sub_1001DED34;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001DED34()
{
  uint64_t v0;

  swift_unknownObjectWeakInit(v0 + 32);
  return swift_task_switch(sub_1001DED74, 0, 0);
}

uint64_t sub_1001DED74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 128) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001DEDD4, v3, v4);
}

uint64_t sub_1001DEDD4()
{
  _QWORD *v0;
  void (*v1)(_QWORD);

  v1 = (void (*)(_QWORD))v0[7];
  swift_release();
  sub_1001DF140((uint64_t)(v0 + 4), v1);
  swift_unknownObjectWeakDestroy(v0 + 4);
  return swift_task_switch(sub_1001DEE3C, v0[11], v0[12]);
}

uint64_t sub_1001DEE3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001DEE6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v1 = *(_QWORD *)(v0 + 120);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 120);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 24) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FavoriteCollectionHandler: Error saving added items: %@", v8, 0xCu);
    v11 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 120));
    swift_errorRelease(v7);
  }

  swift_unknownObjectWeakInit(v0 + 16);
  return swift_task_switch(sub_1001DF044, 0, 0);
}

uint64_t sub_1001DF044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 136) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001DF0A4, v3, v4);
}

uint64_t sub_1001DF0A4()
{
  _QWORD *v0;
  void (*v1)(id);

  v1 = (void (*)(id))v0[7];
  swift_release();
  sub_1001DF3D0((uint64_t)(v0 + 2), v1);
  swift_unknownObjectWeakDestroy(v0 + 2);
  return swift_task_switch(sub_1001DF108, v0[11], v0[12]);
}

uint64_t sub_1001DF108()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001DF140(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  void (**v13)(_QWORD);
  NSObject *v14;
  const char *label;
  const char *v16;
  int v17;
  void *v18;
  char isEscapingClosureAtFileLocation;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  _QWORD aBlock[6];
  _BYTE v25[24];

  swift_beginAccess(a1, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v5 = (void *)Strong;
  v6 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v7 = (void *)static OS_dispatch_queue.main.getter(v6);
  v8 = swift_allocObject(&unk_1011AA798, 24, 7);
  *(_QWORD *)(v8 + 16) = v5;
  v9 = swift_allocObject(&unk_1011AA7C0, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1001E1C84;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001E1E64;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DCBE4;
  aBlock[3] = &unk_1011AA7D8;
  v10 = _Block_copy(aBlock);
  swift_retain();
  v11 = v5;
  swift_release();
  v12 = v7;
  v13 = v10;
  v14 = v12;
  label = dispatch_queue_get_label(v14);
  v16 = dispatch_queue_get_label(0);
  if (label == v16)
  {

LABEL_8:
    v18 = objc_autoreleasePoolPush();
    v13[2](v13);
    objc_autoreleasePoolPop(v18);
    goto LABEL_11;
  }
  if (label && v16)
  {
    v17 = strcmp(label, v16);

    if (!v17)
      goto LABEL_8;
  }
  else
  {

  }
  dispatch_sync(v14, v13);
LABEL_11:

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 121, 112, 43, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents];
    swift_bridgeObjectRetain(v20);
    v22 = sub_10012D8E4(v21);
    swift_bridgeObjectRelease(v20);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "rebuildContent:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

    if (a2)
      a2(0);

  }
}

void sub_1001DF3D0(uint64_t a1, void (*a2)(id))
{
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void (**v13)(_QWORD);
  NSObject *v14;
  const char *label;
  const char *v16;
  int v17;
  void *v18;
  char isEscapingClosureAtFileLocation;
  void *v20;
  NSString v21;
  id v22;
  _QWORD aBlock[6];
  _BYTE v24[24];

  swift_beginAccess(a1, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v5 = (void *)Strong;
  v6 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v7 = (void *)static OS_dispatch_queue.main.getter(v6);
  v8 = swift_allocObject(&unk_1011AA810, 24, 7);
  *(_QWORD *)(v8 + 16) = v5;
  v9 = swift_allocObject(&unk_1011AA838, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1001E1C84;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001E1E64;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DCBE4;
  aBlock[3] = &unk_1011AA850;
  v10 = _Block_copy(aBlock);
  swift_retain();
  v11 = v5;
  swift_release();
  v12 = v7;
  v13 = v10;
  v14 = v12;
  label = dispatch_queue_get_label(v14);
  v16 = dispatch_queue_get_label(0);
  if (label == v16)
  {

LABEL_8:
    v18 = objc_autoreleasePoolPush();
    v13[2](v13);
    objc_autoreleasePoolPop(v18);
    goto LABEL_11;
  }
  if (label && v16)
  {
    v17 = strcmp(label, v16);

    if (!v17)
      goto LABEL_8;
  }
  else
  {

  }
  dispatch_sync(v14, v13);
LABEL_11:

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 121, 112, 43, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v20 = (void *)objc_opt_self(NSError);
      v21 = String._bridgeToObjectiveC()();
      v22 = objc_msgSend(v20, "GEOErrorWithCode:reason:", 0, v21);

      a2(v22);
    }

  }
}

uint64_t FavoriteCollectionHandler.remove(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_1011AA478, 48, 7);
  v15[2] = a1;
  v15[3] = v3;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_1001E1AE4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011AA490;
  v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a1);
  v17 = v3;
  sub_10000C128(a2, a3);
  v18 = swift_release();
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_10000E540();
  v20 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v21 = sub_10000E588();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v7, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v25);
}

void sub_1001DF924(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t isa;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  void (**v40)(_QWORD);
  NSObject *v41;
  const char *label;
  const char *v43;
  int v44;
  void *v45;
  char isEscapingClosureAtFileLocation;
  uint64_t v47;
  uint64_t i;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(id);
  void *v54;
  NSString v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(id);
  uint64_t v71;
  _QWORD aBlock[6];
  objc_super v73;
  unint64_t v74;

  v69 = a4;
  v70 = (void (*)(id))a3;
  v7 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v7);
  v68 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = (unint64_t)_swiftEmptyArrayStorage;
  v9 = *(_QWORD *)(a1 + 56);
  v71 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_23;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v18 >= v13)
      goto LABEL_29;
    v19 = *(_QWORD *)(v71 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_29;
      v19 = *(_QWORD *)(v71 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_29;
        v19 = *(_QWORD *)(v71 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_22:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_23:
    sub_100035DEC(*(_QWORD *)(a1 + 48) + 40 * v17, (uint64_t)aBlock);
    isa = (uint64_t)AnyHashable._bridgeToObjectiveC()().isa;
    sub_100012C48((uint64_t)aBlock);
    v21 = objc_opt_self(MKMapItem);
    v22 = swift_dynamicCastObjCClass(isa, v21);
    if (!v22)
      goto LABEL_6;
    v23 = v22;
    v24 = (objc_class *)type metadata accessor for FavoriteCollectionHandler();
    v73.receiver = a2;
    v73.super_class = v24;
    v25 = objc_msgSendSuper2(&v73, "itemForMapItem:", v23);

    if (v25)
    {
      v26 = type metadata accessor for CollectionPlaceItem(0);
      v27 = swift_unknownObjectRetain(v25);
      v28 = swift_dynamicCastClass(v27, v26);
      if (v28)
      {
        v29 = v28;
        if ((dispatch thunk of CollectionPlaceItem.type.getter(v28) & 1) != 0)
        {
          v30 = a2;
          v25 = v25;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
          v32 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v31 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v32 >= v31 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v31 > 1, v32 + 1, 1);
          v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v29);
          specialized Array._endMutation()(v15);
          a2 = v30;
        }
      }

      isa = (uint64_t)v25;
LABEL_6:

    }
  }
  v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_29:
    swift_release();
    isa = v74;
    if (v74 >> 62)
      goto LABEL_51;
    if (*(uint64_t *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
      goto LABEL_31;
LABEL_55:
    swift_bridgeObjectRelease(isa);
    v53 = v70;
    if (v70)
    {
      v54 = (void *)objc_opt_self(NSError);
      v55 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend(v54, "GEOErrorWithCode:reason:", 0, v55);

      v53(v56);
    }
    return;
  }
  v19 = *(_QWORD *)(v71 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v13)
      goto LABEL_29;
    v19 = *(_QWORD *)(v71 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_50:
  __break(1u);
LABEL_51:
  if (isa < 0)
    v51 = isa;
  else
    v51 = isa & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(isa);
  v52 = _CocoaArrayWrapper.endIndex.getter(v51);
  swift_bridgeObjectRelease(isa);
  if (v52 <= 0)
    goto LABEL_55;
LABEL_31:
  v33 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v34 = (void *)static OS_dispatch_queue.main.getter(v33);
  v35 = swift_allocObject(&unk_1011AA568, 24, 7);
  *(_QWORD *)(v35 + 16) = a2;
  v36 = swift_allocObject(&unk_1011AA590, 32, 7);
  *(_QWORD *)(v36 + 16) = sub_1001E1A68;
  *(_QWORD *)(v36 + 24) = v35;
  aBlock[4] = sub_1001E1E64;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DCBE4;
  aBlock[3] = &unk_1011AA5A8;
  v37 = _Block_copy(aBlock);
  v38 = a2;
  swift_retain();
  swift_release();
  v39 = v34;
  v40 = v37;
  v41 = v39;
  label = dispatch_queue_get_label(v41);
  v43 = dispatch_queue_get_label(0);
  if (label == v43)
  {

    goto LABEL_37;
  }
  if (label && v43)
  {
    v44 = strcmp(label, v43);

    if (!v44)
    {
LABEL_37:
      v45 = objc_autoreleasePoolPush();
      v40[2](v40);
      objc_autoreleasePoolPop(v45);
      goto LABEL_40;
    }
  }
  else
  {

  }
  dispatch_sync(v41, v40);
LABEL_40:

  _Block_release(v40);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v36, "", 121, 106, 43, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v36 = v74;
    if (!(v74 >> 62))
    {
      v47 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v74);
      if (v47)
        goto LABEL_43;
LABEL_62:
      swift_bridgeObjectRelease(v36);
      v58 = type metadata accessor for TaskPriority(0);
      v59 = (uint64_t)v68;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v68, 1, 1, v58);
      type metadata accessor for MainActor(0);
      v60 = v38;
      v61 = v69;
      v62 = (uint64_t)v70;
      v63 = sub_10000C128((uint64_t)v70, v69);
      v64 = static MainActor.shared.getter(v63);
      v65 = v74;
      v66 = (_QWORD *)swift_allocObject(&unk_1011AA5E0, 64, 7);
      v66[2] = v64;
      v66[3] = &protocol witness table for MainActor;
      v66[4] = v65;
      v66[5] = v60;
      v66[6] = v62;
      v66[7] = v61;
      sub_1001B0C08(v59, (uint64_t)&unk_10149FA80, (uint64_t)v66);
      swift_release();
      return;
    }
  }
  if (v36 < 0)
    v57 = v36;
  else
    v57 = v36 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v36);
  v47 = _CocoaArrayWrapper.endIndex.getter(v57);
  if (!v47)
    goto LABEL_62;
LABEL_43:
  if (v47 >= 1)
  {
    for (i = 0; i != v47; ++i)
    {
      if ((v36 & 0xC000000000000001) != 0)
        v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v36);
      else
        v49 = *(id *)(v36 + 8 * i + 32);
      v50 = v49;
      dispatch thunk of CollectionPlaceItem.type.setter(0);

    }
    goto LABEL_62;
  }
  __break(1u);
}

uint64_t sub_1001DFF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v8 = type metadata accessor for MainActor(0);
  v7[9] = v8;
  v7[10] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[11] = v9;
  v7[12] = v10;
  return swift_task_switch(sub_1001DFFFC, v9, v10);
}

uint64_t sub_1001DFFFC()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);

  v1 = v0[5];
  v2 = type metadata accessor for MapsSyncStore(0);
  v0[13] = static MapsSyncStore.sharedStore.getter(v2);
  v4 = v0[5];
  if (v1 >> 62)
  {
    if (v4 < 0)
      v10 = v0[5];
    else
      v10 = v1 & 0xFFFFFFFFFFFFFF8;
    v11 = type metadata accessor for MapsSyncObject(0, v3);
    swift_bridgeObjectRetain(v4);
    v7 = _bridgeCocoaArray<A>(_:)(v10, v11);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    swift_bridgeObjectRetain(v0[5]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v5);
    type metadata accessor for MapsSyncObject(0, v6);
    v7 = v0[5];
  }
  v0[14] = v7;
  v12 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  v8 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                  + 1));
  v0[15] = v8;
  *v8 = v0;
  v8[1] = sub_1001E00F0;
  return v12(v7);
}

uint64_t sub_1001E00F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 120);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 88);
    v5 = *(_QWORD *)(v2 + 96);
    v6 = sub_1001E026C;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 112);

    swift_bridgeObjectRelease(v7);
    v4 = *(_QWORD *)(v2 + 88);
    v5 = *(_QWORD *)(v2 + 96);
    v6 = sub_1001E0164;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1001E0164()
{
  uint64_t v0;

  swift_unknownObjectWeakInit(v0 + 32);
  return swift_task_switch(sub_1001E01A4, 0, 0);
}

uint64_t sub_1001E01A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 136) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E0204, v3, v4);
}

uint64_t sub_1001E0204()
{
  _QWORD *v0;
  void (*v1)(_QWORD);

  v1 = (void (*)(_QWORD))v0[7];
  swift_release();
  sub_1001E0548((uint64_t)(v0 + 4), v1);
  swift_unknownObjectWeakDestroy(v0 + 4);
  return swift_task_switch(sub_1001DEE3C, v0[11], v0[12]);
}

uint64_t sub_1001E026C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 112);

  swift_bridgeObjectRelease(v1);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 128);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v8);
    v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v0 + 24) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FavoriteCollectionHandler: Error removing items: %@", v9, 0xCu);
    v12 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 128));
    swift_errorRelease(v8);
  }

  swift_unknownObjectWeakInit(v0 + 16);
  return swift_task_switch(sub_1001E044C, 0, 0);
}

uint64_t sub_1001E044C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v1 + 144) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E04AC, v3, v4);
}

uint64_t sub_1001E04AC()
{
  _QWORD *v0;
  void (*v1)(id);

  v1 = (void (*)(id))v0[7];
  swift_release();
  sub_1001E07D8((uint64_t)(v0 + 2), v1);
  swift_unknownObjectWeakDestroy(v0 + 2);
  return swift_task_switch(sub_1001E0510, v0[11], v0[12]);
}

uint64_t sub_1001E0510()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001E0548(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  void (**v13)(_QWORD);
  NSObject *v14;
  const char *label;
  const char *v16;
  int v17;
  void *v18;
  char isEscapingClosureAtFileLocation;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Class isa;
  _QWORD aBlock[6];
  _BYTE v25[24];

  swift_beginAccess(a1, v25, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v5 = (void *)Strong;
  v6 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v7 = (void *)static OS_dispatch_queue.main.getter(v6);
  v8 = swift_allocObject(&unk_1011AA608, 24, 7);
  *(_QWORD *)(v8 + 16) = v5;
  v9 = swift_allocObject(&unk_1011AA630, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1001E1C84;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001E1E64;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DCBE4;
  aBlock[3] = &unk_1011AA648;
  v10 = _Block_copy(aBlock);
  swift_retain();
  v11 = v5;
  swift_release();
  v12 = v7;
  v13 = v10;
  v14 = v12;
  label = dispatch_queue_get_label(v14);
  v16 = dispatch_queue_get_label(0);
  if (label == v16)
  {

LABEL_8:
    v18 = objc_autoreleasePoolPush();
    v13[2](v13);
    objc_autoreleasePoolPop(v18);
    goto LABEL_11;
  }
  if (label && v16)
  {
    v17 = strcmp(label, v16);

    if (!v17)
      goto LABEL_8;
  }
  else
  {

  }
  dispatch_sync(v14, v13);
LABEL_11:

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 121, 112, 43, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents];
    swift_bridgeObjectRetain(v20);
    v22 = sub_10012D8E4(v21);
    swift_bridgeObjectRelease(v20);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v11, "rebuildContent:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

    if (a2)
      a2(0);

  }
}

void sub_1001E07D8(uint64_t a1, void (*a2)(id))
{
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void (**v13)(_QWORD);
  NSObject *v14;
  const char *label;
  const char *v16;
  int v17;
  void *v18;
  char isEscapingClosureAtFileLocation;
  void *v20;
  NSString v21;
  id v22;
  _QWORD aBlock[6];
  _BYTE v24[24];

  swift_beginAccess(a1, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (!Strong)
    return;
  v5 = (void *)Strong;
  v6 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v7 = (void *)static OS_dispatch_queue.main.getter(v6);
  v8 = swift_allocObject(&unk_1011AA680, 24, 7);
  *(_QWORD *)(v8 + 16) = v5;
  v9 = swift_allocObject(&unk_1011AA6A8, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_1001E1C84;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1001E1E64;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001DCBE4;
  aBlock[3] = &unk_1011AA6C0;
  v10 = _Block_copy(aBlock);
  swift_retain();
  v11 = v5;
  swift_release();
  v12 = v7;
  v13 = v10;
  v14 = v12;
  label = dispatch_queue_get_label(v14);
  v16 = dispatch_queue_get_label(0);
  if (label == v16)
  {

LABEL_8:
    v18 = objc_autoreleasePoolPush();
    v13[2](v13);
    objc_autoreleasePoolPop(v18);
    goto LABEL_11;
  }
  if (label && v16)
  {
    v17 = strcmp(label, v16);

    if (!v17)
      goto LABEL_8;
  }
  else
  {

  }
  dispatch_sync(v14, v13);
LABEL_11:

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 121, 112, 43, 1);
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v20 = (void *)objc_opt_self(NSError);
      v21 = String._bridgeToObjectiveC()();
      v22 = objc_msgSend(v20, "GEOErrorWithCode:reason:", 0, v21);

      a2(v22);
    }

  }
}

void FavoriteCollectionHandler.updateTitle(_:for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5)
{
  void *v5;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  NSString v20;
  uint64_t v21;
  id v22;

  v11 = sub_100008B04(&qword_101494070);
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend(v5, "itemForMapItem:", a3, v12);
  if (v15)
  {
    v16 = v15;
    swift_bridgeObjectRetain(a2);
    dispatch thunk of CollectionPlaceItem.customName.setter(a1, a2);
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 1, 1, v17);
    v18 = (_QWORD *)swift_allocObject(&unk_1011AA4C8, 56, 7);
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v16;
    v18[5] = a4;
    v18[6] = a5;
    sub_10000C128((uint64_t)a4, a5);
    sub_1001B0C08((uint64_t)v14, (uint64_t)&unk_10149FA48, (uint64_t)v18);
    swift_release();
  }
  else if (a4)
  {
    v19 = (void *)objc_opt_self(NSError);
    v20 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v19, "GEOErrorWithCode:reason:", 0, v20);

    a4(v22);
  }
}

uint64_t sub_1001E0CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  return swift_task_switch(sub_1001E0CF4, 0, 0);
}

uint64_t sub_1001E0CF4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;

  v1 = (void *)v0[3];
  v2 = type metadata accessor for MapsSyncStore(0);
  v0[6] = static MapsSyncStore.sharedStore.getter(v2);
  v3 = sub_100008B04((uint64_t *)&unk_101493B10);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v4 + 32) = v1;
  v10 = v4;
  specialized Array._endMutation()(v4);
  v0[7] = v10;
  v5 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:) + 1);
  v9 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  v6 = v1;
  v7 = (_QWORD *)swift_task_alloc(v5);
  v0[8] = v7;
  *v7 = v0;
  v7[1] = sub_1001E0DC4;
  return v9(v10);
}

uint64_t sub_1001E0DC4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 64);
  *(_QWORD *)(*v1 + 72) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1001E0F30;
  }
  else
  {
    v5 = *(void **)(v2 + 48);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 56));

    v4 = sub_1001E0E34;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E0E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 80) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E0E9C, v2, v3);
}

uint64_t sub_1001E0E9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 80));
  if (v1)
    (*(void (**)(_QWORD))(v0 + 32))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E0EE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_release();
  if (v1)
    (*(void (**)(_QWORD))(v0 + 32))(*(_QWORD *)(v0 + 72));
  return swift_task_switch(sub_1001B1ECC, 0, 0);
}

uint64_t sub_1001E0F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 56);

  swift_bridgeObjectRelease(v1);
  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 72);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v8);
    v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FavoriteCollectionHandler: Error editing item name: %@", v9, 0xCu);
    v12 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    swift_errorRelease(v8);
  }

  v13 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 88) = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E0EE0, v14, v15);
}

uint64_t FavoriteCollectionHandler.storeSubscriptionTypes.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_storeSubscriptionTypes);
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_storeSubscriptionTypes, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t FavoriteCollectionHandler.storeSubscriptionTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_storeSubscriptionTypes);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*FavoriteCollectionHandler.storeSubscriptionTypes.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_storeSubscriptionTypes, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1001E13BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a4;
  *(_QWORD *)(v5 + 32) = a5;
  return swift_task_switch(sub_1001E13D4, 0, 0);
}

uint64_t sub_1001E13D4(__n128 a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v2 = v1[3];
  v3 = type metadata accessor for CollectionPlaceItemRequest(0, a1);
  v1[5] = CollectionPlaceItemRequest.__allocating_init()(v3);
  v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
  v4 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                  + 1));
  v1[6] = v4;
  *v4 = v1;
  v4[1] = sub_1001E1450;
  return v6(v2);
}

uint64_t sub_1001E1450(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 48);
  *(_QWORD *)(*v2 + 56) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1001E15EC;
  }
  else
  {

    *(_QWORD *)(v4 + 64) = a1;
    v6 = sub_1001E14CC;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1001E14CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 72) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001E1534, v2, v3);
}

uint64_t sub_1001E1534()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  __n128 v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(char **)(v0 + 32);
  swift_release();
  v3 = OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents;
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents];
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_queryContents] = v1;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)&v2[v3];
  swift_bridgeObjectRetain(v5);
  v7 = sub_10012D8E4(v6);
  swift_bridgeObjectRelease(v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "rebuildContent:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v9 = swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v9);
}

uint64_t sub_1001E15EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_101490E88 != -1)
    swift_once(&qword_101490E88, sub_10011470C);
  v1 = *(_QWORD *)(v0 + 56);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4AA8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 56);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FavoriteCollectionHandler: Error fetching contents: %@", v8, 0xCu);
    v11 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 56));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id FavoriteCollectionHandler.__allocating_init(collection:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCollection:", a1);
  swift_unknownObjectRelease(a1);
  return v3;
}

void FavoriteCollectionHandler.init(collection:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.FavoriteCollectionHandler", 30, "init(collection:)", 17, 0);
  __break(1u);
}

uint64_t type metadata accessor for FavoriteCollectionHandler()
{
  return objc_opt_self(_TtC4Maps25FavoriteCollectionHandler);
}

uint64_t _s4Maps25FavoriteCollectionHandlerC14storeDidChange5typesySaySSG_tF_0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v16;

  v1 = v0;
  v2 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MapsSyncQueryPredicate(0);
  v5 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v6 + 56) = &type metadata for Int16;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Int16;
  *(_WORD *)(v6 + 32) = 1;
  v7 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000010, 0x8000000100E51340, v6);
  swift_bridgeObjectRelease(v6);
  v8 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
  v9 = v7;
  v10 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v7, 0, 0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject(&unk_1011AA888, 48, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v10;
  v12[5] = v1;
  v13 = v10;
  v14 = v1;
  sub_1001B0C08((uint64_t)v4, (uint64_t)&unk_10149FAA0, (uint64_t)v12);

  return swift_release();
}

uint64_t sub_1001E1A44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E1A6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double sub_1001E1A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001E1A8C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1001E1A98()
{
  uint64_t v0;

  sub_1001DDB34(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001E1AA8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001E1AE4()
{
  uint64_t v0;

  sub_1001DF924(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1001E1AF0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001E1B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(dword_10149FA44);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000C0E0;
  *(_QWORD *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v5;
  return swift_task_switch(sub_1001E0CF4, 0, 0);
}

uint64_t sub_1001E1B9C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001E1BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount) = v4;
}

uint64_t sub_1001E1BE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E1BF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_10149FA7C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000DD08;
  return sub_1001DFF88(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1001E1C88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E1C98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E1CA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E1CBC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001E1D00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_10149FA8C);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000DD08;
  return sub_1001DEBDC(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1001E1D8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001E1D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps25FavoriteCollectionHandler_modficationCount) = v4;
}

uint64_t sub_1001E1DC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E1DD0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001E1E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc(dword_10149FA9C);
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000DD08;
  *(_OWORD *)(v2 + 24) = v3;
  return swift_task_switch(sub_1001E13D4, 0, 0);
}

id sub_1001E2084()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EVChargerUtility();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EVChargerUtility()
{
  return objc_opt_self(_TtC4Maps16EVChargerUtility);
}

uint64_t sub_1001E20D4(uint64_t a1, uint64_t a2, int a3, char a4)
{
  void *v6;
  NSString v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;
  _OWORD *object;
  void *v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  NSString v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v32;

  switch(a3)
  {
    case 2:
      if ((a4 & 1) != 0)
      {
        if (qword_101490ED0 != -1)
          swift_once(&qword_101490ED0, sub_10011833C);
        v17._countAndFlagsBits = 0xD00000000000002ALL;
        v32._countAndFlagsBits = 0xD00000000000002CLL;
        v32._object = (void *)0x8000000100E52270;
        v17._object = (void *)0x8000000100E52240;
        v18._countAndFlagsBits = 0x6C69617661206F6ELL;
        v18._object = (void *)0xEF7974696C696261;
        v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v18, v32);
        object = v19._object;
        v15 = static String.localizedStringWithFormat(_:_:)(v19._countAndFlagsBits, v19._object, _swiftEmptyArrayStorage);
        goto LABEL_17;
      }
      if (qword_101490ED0 == -1)
      {
LABEL_16:
        v23 = (void *)qword_1014D4B80;
        v24 = String._bridgeToObjectiveC()();
        v25 = String._bridgeToObjectiveC()();
        v26 = objc_msgSend(v23, "localizedStringForKey:value:table:", v24, v25, 0);

        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v29 = v28;

        v30 = sub_100008B04((uint64_t *)&unk_10149A4F0);
        object = (_OWORD *)swift_allocObject(v30, 112, 7);
        object[1] = xmmword_100E22F70;
        *((_QWORD *)object + 7) = &type metadata for UInt;
        *((_QWORD *)object + 8) = &protocol witness table for UInt;
        *((_QWORD *)object + 4) = a1;
        *((_QWORD *)object + 12) = &type metadata for UInt;
        *((_QWORD *)object + 13) = &protocol witness table for UInt;
        *((_QWORD *)object + 9) = a2;
        v15 = static String.localizedStringWithFormat(_:_:)(v27, v29, object);
        swift_bridgeObjectRelease(v29);
LABEL_17:
        v16 = object;
LABEL_18:
        swift_bridgeObjectRelease(v16);
        return v15;
      }
LABEL_15:
      swift_once(&qword_101490ED0, sub_10011833C);
      goto LABEL_16;
    case 1:
      if (qword_101490ED0 == -1)
        goto LABEL_16;
      goto LABEL_15;
    case 0:
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v6 = (void *)qword_1014D4B80;
      v7 = String._bridgeToObjectiveC()();
      v8 = String._bridgeToObjectiveC()();
      v9 = objc_msgSend(v6, "localizedStringForKey:value:table:", v7, v8, 0);

      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v13 = sub_100008B04((uint64_t *)&unk_10149A4F0);
      v14 = swift_allocObject(v13, 72, 7);
      *(_OWORD *)(v14 + 16) = xmmword_100E22F40;
      *(_QWORD *)(v14 + 56) = &type metadata for UInt;
      *(_QWORD *)(v14 + 64) = &protocol witness table for UInt;
      *(_QWORD *)(v14 + 32) = a2;
      v15 = static String.localizedStringWithFormat(_:_:)(v10, v12, v14);
      swift_bridgeObjectRelease(v12);
      v16 = (_OWORD *)v14;
      goto LABEL_18;
  }
  sub_1001E24F8();
  v21 = (void *)static OS_os_log.default.getter();
  v22 = static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)("[Refresh EV Charger] There is a new unsupported ev charger availability status in the response.", 95, 2, &_mh_execute_header, v21, v22, _swiftEmptyArrayStorage);

  return 0;
}

unint64_t sub_1001E24F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149E3A0;
  if (!qword_10149E3A0)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10149E3A0);
  }
  return result;
}

uint64_t sub_1001E2534(void *a1, char a2)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(SearchVirtualGarageManager), "sharedSearchVirtualGarageManager");
  v5 = objc_msgSend(v4, "virtualGarage");

  if (!v5)
    return sub_1001E20D4((uint64_t)objc_msgSend(a1, "availableEVChargers"), (uint64_t)objc_msgSend(a1, "totalEVChargers"), (int)objc_msgSend(a1, "_realTimePlugAvailabilityStatus"), a2 & 1);
  v6 = objc_msgSend((id)objc_opt_self(MUEVChargingHelper), "getRealTimeEVChargerInfo:charger:", v5, a1);
  v7 = (uint64_t)objc_msgSend(v6, "total");
  v8 = (uint64_t)objc_msgSend(v6, "available");
  v9 = objc_msgSend(v6, "status");
  if (v8 < 0 || v7 < 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    __break(1u);
  }
  else
  {
    v10 = sub_1001E20D4(v8, v7, v9, a2 & 1);

    return v10;
  }
  return result;
}

uint64_t sub_1001E26EC(uint64_t a1)
{
  void *v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v2 = (void *)qword_1014D4B80;
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, 0);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  v9 = sub_100008B04((uint64_t *)&unk_10149A4F0);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v10 + 56) = &type metadata for Int;
  *(_QWORD *)(v10 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v10 + 32) = a1;
  v11 = static String.localizedStringWithFormat(_:_:)(v6, v8, v10);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_1001E2838(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1001E2858(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t, __n128);
  __n128 v5;

  v4 = *(void (**)(uint64_t, __n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_retain(v3);
  v4(a2, v5);
  return swift_release(v3);
}

uint64_t sub_1001E2894()
{
  uint64_t v0;
  BOOL v1;
  uint64_t result;

  v0 = sub_1001E28B4();
  v1 = __OFADD__(v0, 1);
  result = v0 + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t sub_1001E28B4()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(v0
               + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController____lazy_storage___maxNumberOfCollections);
  if (*(_BYTE *)(v0
                + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController____lazy_storage___maxNumberOfCollections
                + 8) != 1)
    return *(_QWORD *)v1;
  result = GEOConfigGetUInteger(MapsConfig_MapsHomeMaxGuides, off_1014B3E68);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)v1 = result;
    v1[8] = 0;
  }
  return result;
}

id sub_1001E2910@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  a1[3] = type metadata accessor for HomeListCollectionsSectionController();
  a1[4] = &off_1011AA8A0;
  *a1 = v3;
  return v3;
}

unint64_t sub_1001E2950(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  char v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v44;
  uint64_t v46;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  _BYTE v51[24];
  unint64_t v52;

  v5 = v3;
  v52 = (unint64_t)_swiftEmptyArrayStorage;
  v7 = objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController_collectionsDataProvider), "collections");
  v8 = sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v7 = (id)v9;
    else
      v7 = (id)(v9 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v9);
    v11 = _CocoaArrayWrapper.endIndex.getter(v7);
    swift_bridgeObjectRelease(v9);
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFF8;
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_3:
      if (v11 < 1)
      {
        __break(1u);
        goto LABEL_45;
      }
      v44 = a2;
      v12 = 0;
      v13 = 0;
      v48 = v9 & 0xC000000000000001;
      v46 = v9;
      while (1)
      {
        v14 = v48
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v9)
            : *(id *)(v9 + 8 * v13 + 32);
        v15 = v14;
        v16 = objc_msgSend(v14, "_maps_diffableDataSourceIdentifier");
        if (v16)
        {
          v17 = v16;
          v18 = sub_1001FD8EC();
          v19 = objc_msgSend(v18, "identifierPathByAppendingIdentifier:", v17);

          if (v19)
            break;
        }

LABEL_6:
        if (v11 == ++v13)
        {
          swift_bridgeObjectRelease(v9);
          if ((v44 & 1) == 0)
            return v52;
LABEL_41:
          v7 = objc_msgSend((id)objc_opt_self(CollectionHandler), "addToCollection");
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
          v4 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v10 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v4 < v10 >> 1)
          {
LABEL_42:
            v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v7);
            specialized Array._endMutation()(v42);
            return v52;
          }
LABEL_45:
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v4 + 1, 1);
          goto LABEL_42;
        }
      }
      v20 = (uint64_t *)(v5 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
      swift_beginAccess(v5 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions, v51, 0, 0);
      v21 = *v20;
      if ((*v20 & 0xC000000000000001) != 0)
      {
        v22 = v11;
        v23 = v12;
        v24 = v5;
        if (v21 < 0)
          v25 = *v20;
        else
          v25 = v21 & 0xFFFFFFFFFFFFFF8;
        v26 = v19;
        swift_bridgeObjectRetain(v21);
        v27 = __CocoaDictionary.lookup(_:)(v26, v25);
        if (!v27)
        {

          swift_bridgeObjectRelease(v21);
          v12 = v23;
          v11 = v22;
          v9 = v46;
          goto LABEL_28;
        }
        v28 = v27;
        v49 = v27;
        v29 = sub_10000E4BC(0, (unint64_t *)&unk_10149A2C0, off_101196C58);
        swift_unknownObjectRetain(v28);
        swift_dynamicCast(&v50, &v49, (char *)&type metadata for Swift.AnyObject + 8, v29, 7);
        v30 = v50;
        swift_unknownObjectRelease(v28);

        swift_bridgeObjectRelease(v21);
        v5 = v24;
        v12 = v23;
        v11 = v22;
        v9 = v46;
        if (!v30)
          goto LABEL_28;
      }
      else
      {
        if (!*(_QWORD *)(v21 + 16))
          goto LABEL_28;
        v31 = v19;
        swift_bridgeObjectRetain(v21);
        v32 = sub_1000C1A60((uint64_t)v31);
        if ((v33 & 1) == 0)
        {

          swift_bridgeObjectRelease(v21);
          goto LABEL_28;
        }
        v30 = *(id *)(*(_QWORD *)(v21 + 56) + 8 * v32);

        swift_bridgeObjectRelease(v21);
        if (!v30)
        {
LABEL_28:
          if (v12 < a3)
          {
            v38 = v15;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
            v40 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v39 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v40 >= v39 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1);
            v41 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
            specialized Array._endMutation()(v41);

            ++v12;
            goto LABEL_6;
          }

          goto LABEL_33;
        }
      }

      if ((a1 & 1) != 0)
      {
        v34 = v15;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
        v36 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v35 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v36 >= v35 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
        v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v34);
        specialized Array._endMutation()(v37);

LABEL_33:
        goto LABEL_6;
      }
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease(v9);
  if ((a2 & 1) != 0)
    goto LABEL_41;
  return v52;
}

_QWORD *sub_1001E2DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 aBlock;
  __int128 v43;
  __int128 v44;
  _OWORD v45[4];

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  sub_1000AB280(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, &v39);
  Strong = swift_unknownObjectWeakLoadStrong((char *)&v40 + 8);
  sub_1000AB2BC((uint64_t)&v39);
  if (!Strong)
  {
    v43 = 0u;
    v44 = 0u;
    aBlock = 0u;
    goto LABEL_13;
  }
  sub_100139A44(a1, &aBlock);
  swift_unknownObjectRelease(Strong);
  if (!(_QWORD)aBlock)
  {
LABEL_13:
    sub_100010CC4((uint64_t)&aBlock, &qword_10149B500);
    return _swiftEmptyArrayStorage;
  }
  v45[0] = aBlock;
  v45[1] = v43;
  v45[2] = v44;
  sub_10000C1FC((uint64_t)v45 + 8, (uint64_t)&aBlock, (uint64_t *)&unk_10149B590);
  sub_10000BE48(&aBlock, (uint64_t)&v39);
  v7 = sub_100008B04(&qword_101496AB0);
  if ((swift_dynamicCast(&aBlock, &v39, v7, &type metadata for HomeListCollectionHandlerCellModel, 6) & 1) == 0)
  {
    sub_100084C10((id *)v45);
    return _swiftEmptyArrayStorage;
  }
  v38 = (unint64_t)_swiftEmptyArrayStorage;
  v8 = (id)aBlock;
  if (objc_msgSend(v8, "canDelete"))
  {
    v37 = swift_allocObject(&unk_1011AA928, 24, 7);
    swift_unknownObjectWeakInit(v37 + 16);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    sub_100084BD4((uint64_t)v45, (uint64_t)&v39);
    v9 = *(unsigned __int8 *)(v4 + 80);
    v10 = (v9 + 32) & ~v9;
    v11 = v8;
    v12 = (v5 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v13 = swift_allocObject(&unk_1011AAB30, v12 + 48, v9 | 7);
    *(_QWORD *)(v13 + 16) = v37;
    *(_QWORD *)(v13 + 24) = v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13 + v10, (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    v14 = (_OWORD *)(v13 + v12);
    v8 = v11;
    v15 = v40;
    *v14 = v39;
    v14[1] = v15;
    v14[2] = v41;
    *(_QWORD *)&v44 = sub_1001E52B4;
    *((_QWORD *)&v44 + 1) = v13;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v43 = sub_1001FABC8;
    *((_QWORD *)&v43 + 1) = &unk_1011AAB48;
    v16 = _Block_copy(&aBlock);
    v17 = v8;
    swift_release();
    v18 = sub_100A3CEB8(v16);
    _Block_release(v16);
    v19 = v18;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
    v20 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v20 >= v21 >> 1)
    {
      v37 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v20 + 1, 1);
      v20 = v37;
    }
    v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v19);
    specialized Array._endMutation()(v22);

  }
  if (objc_msgSend(v8, "canShare"))
  {
    v23 = swift_allocObject(&unk_1011AA928, 24, 7);
    swift_unknownObjectWeakInit(v23 + 16);
    sub_100084BD4((uint64_t)v45, (uint64_t)&v39);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    v24 = *(unsigned __int8 *)(v4 + 80);
    v25 = (v24 + 80) & ~v24;
    v26 = swift_allocObject(&unk_1011AAAE0, v25 + v5, v24 | 7);
    *(_QWORD *)(v26 + 16) = v23;
    *(_QWORD *)(v26 + 24) = v8;
    v27 = v40;
    *(_OWORD *)(v26 + 32) = v39;
    *(_OWORD *)(v26 + 48) = v27;
    *(_OWORD *)(v26 + 64) = v41;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v26 + v25, (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    *(_QWORD *)&v44 = sub_1001E51BC;
    *((_QWORD *)&v44 + 1) = v26;
    *(_QWORD *)&aBlock = _NSConcreteStackBlock;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v43 = sub_1001FABC8;
    *((_QWORD *)&v43 + 1) = &unk_1011AAAF8;
    v28 = _Block_copy(&aBlock);
    v29 = v8;
    swift_release();
    v30 = sub_100A3D0BC(v28);
    _Block_release(v28);
    v31 = v30;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
    v33 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v32 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v33 >= v32 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
    v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
    specialized Array._endMutation()(v34);

    sub_100084C10((id *)v45);
  }
  else
  {
    sub_100084C10((id *)v45);

  }
  return (_QWORD *)v38;
}

void sub_1001E3284(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  _BYTE v14[24];

  v11 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    sub_1001E33E4(a4, a5, a6, a1, a2);

  }
}

void sub_1001E3310(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _BYTE v16[24];

  v10 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_1001E3C58(a4, a5, a1);

  }
  swift_beginAccess(v10, &v15, 0, 0);
  v13 = swift_unknownObjectWeakLoadStrong(v10);
  if (v13)
  {
    v14 = (void *)v13;
    sub_1001E4FC0(a4, a6, 2037, 2008, 2082, 2096);

  }
}

void sub_1001E33E4(objc_class *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  int v27;
  void *v28;
  Class isa;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  Class v35;
  uint64_t v36;
  objc_class *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  void *v53;
  objc_class *v54;
  Class v55;
  uint64_t v56;
  char *v57;
  Class v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  _QWORD aBlock[6];
  _OWORD v65[3];
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;

  v62 = a5;
  v61 = a4;
  v63 = a3;
  v58 = a1;
  v7 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v7);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v56 - v15;
  v17 = (void **)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000AB280((uint64_t)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], v66);
  v18 = swift_unknownObjectWeakLoadStrong(&v67);
  sub_1000AB2BC((uint64_t)v66);
  v60 = v5;
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    v19 = v11;
LABEL_9:
    sub_100010CC4((uint64_t)v9, &qword_101499510);
    v30 = 0;
    goto LABEL_10;
  }
  v19 = v11;
  v57 = v13;
  v20 = a2;
  v21 = v10;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v23 = v5;
  else
    v23 = 0;
  if (!v23)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
    __break(1u);
    return;
  }
  v24 = *v63;
  v25 = v5;
  v26 = sub_1001385F0();
  v66[0] = v24;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v66);
  swift_unknownObjectRelease(v18);

  v10 = v21;
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v21);
  a2 = v20;
  v13 = v57;
  if (v27 == 1)
    goto LABEL_9;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v9, v10);
  v28 = *v17;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v28, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v10);
LABEL_10:
  sub_1000AB280((uint64_t)v17, v66);
  v31 = (void *)swift_unknownObjectWeakLoadStrong(&v68);
  sub_1000AB2BC((uint64_t)v66);
  if (v31
    && (v32 = objc_msgSend(v31, "homeDeleteDelegate"),
        swift_unknownObjectRelease(v31),
        v32))
  {
    v33 = sub_100008B04((uint64_t *)&unk_101493B10);
    v34 = swift_allocObject(v33, 40, 7);
    *(_OWORD *)(v34 + 16) = xmmword_100E23F50;
    v35 = v58;
    *(_QWORD *)(v34 + 32) = v58;
    *(_QWORD *)&v65[0] = v34;
    specialized Array._endMutation()(v34);
    v36 = *(_QWORD *)&v65[0];
    sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
    v37 = v35;
    v58 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v36);
    if (v30)
    {
      objc_msgSend(v30, "bounds");
      v39 = v38;
      v41 = v40;
      v43 = v42;
      v45 = v44;
    }
    else
    {
      v43 = 0.0;
      v45 = 0.0;
      v39 = 0.0;
      v41 = 0.0;
    }
    v46 = swift_allocObject(&unk_1011AA928, 24, 7);
    swift_unknownObjectWeakInit(v46 + 16);
    sub_100084BD4((uint64_t)v63, (uint64_t)v65);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v13, a2, v10);
    v47 = *(unsigned __int8 *)(v19 + 80);
    v48 = v10;
    v49 = (v47 + 96) & ~v47;
    v50 = swift_allocObject(&unk_1011AAA90, v49 + v59, v47 | 7);
    *(_QWORD *)(v50 + 16) = v46;
    *(_QWORD *)(v50 + 24) = v37;
    v51 = v65[1];
    *(_OWORD *)(v50 + 32) = v65[0];
    *(_OWORD *)(v50 + 48) = v51;
    *(_OWORD *)(v50 + 64) = v65[2];
    v52 = v62;
    *(_QWORD *)(v50 + 80) = v61;
    *(_QWORD *)(v50 + 88) = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v50 + v49, v13, v48);
    aBlock[4] = sub_1001E4F78;
    aBlock[5] = v50;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001E2858;
    aBlock[3] = &unk_1011AAAA8;
    v53 = _Block_copy(aBlock);
    v54 = v37;
    swift_retain();
    swift_release();
    v55 = v58;
    objc_msgSend(v32, "confirmDeleteCollections:sourceView:sourceRect:completion:", v58, v30, v53, v39, v41, v43, v45);
    swift_unknownObjectRelease(v32);

    _Block_release(v53);
  }
  else
  {

  }
}

void sub_1001E3938(char a1, uint64_t a2, void *a3, void **a4, void (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _BYTE v18[24];

  if ((a1 & 1) != 0)
  {
    v12 = a2 + 16;
    swift_beginAccess(a2 + 16, v18, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v12);
    if (Strong)
    {
      v14 = (void *)Strong;
      sub_1001E3A1C(a3, a4, (uint64_t)a5, a6);

    }
    swift_beginAccess(v12, &v17, 0, 0);
    v15 = swift_unknownObjectWeakLoadStrong(v12);
    if (v15)
    {
      v16 = (void *)v15;
      sub_1001E4FC0(a3, a7, 2038, 2009, 2081, 2088);

    }
  }
  else
  {
    a5(0);
  }
}

void sub_1001E3A1C(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t aBlock[6];
  _BYTE v15[40];

  v5 = (void *)sub_1001FED5C(a2, a3, a4);
  v6 = sub_100008B04((uint64_t *)&unk_101493B10);
  inited = swift_initStackObject(v6, v15);
  *(_OWORD *)(inited + 16) = xmmword_100E23F50;
  *(_QWORD *)(inited + 32) = v5;
  aBlock[0] = inited;
  specialized Array._endMutation()(inited);
  v8 = v5;
  sub_1001FE3BC(aBlock[0]);
  swift_bridgeObjectRelease(aBlock[0]);
  v9 = swift_allocObject(&unk_1011AA928, 24, 7);
  swift_unknownObjectWeakInit(v9 + 16);
  v10 = swift_allocObject(&unk_1011AAA18, 32, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  v11 = swift_allocObject(&unk_1011AAA40, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_1001E4EB8;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = (uint64_t)sub_10000BF08;
  aBlock[5] = v11;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100136AFC;
  aBlock[3] = (uint64_t)&unk_1011AAA58;
  v12 = _Block_copy(aBlock);
  v13 = v8;
  swift_release();
  objc_msgSend(a1, "deleteCollection:", v12);
  _Block_release(v12);

}

void sub_1001E3B90(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  _BYTE v12[40];
  _BYTE v13[24];

  if (a1)
  {
    v5 = a2 + 16;
    swift_beginAccess(a2 + 16, v13, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v7 = (void *)Strong;
      v8 = sub_100008B04((uint64_t *)&unk_101493B10);
      inited = swift_initStackObject(v8, v12);
      *(_OWORD *)(inited + 16) = xmmword_100E23F50;
      *(_QWORD *)(inited + 32) = a3;
      v11 = inited;
      specialized Array._endMutation()(inited);
      swift_errorRetain(a1);
      v10 = a3;
      sub_1001FEC44(v11, a1);
      swift_errorRelease(a1);
      swift_bridgeObjectRelease(v11);

    }
  }
}

void sub_1001E3C58(void *a1, uint64_t *a2, void (*a3)(uint64_t, __n128))
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void **v15;
  uint64_t Strong;
  void *v17;
  uint64_t ObjectType;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  int v23;
  void *v24;
  Class isa;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void **v39;
  _QWORD v40[6];
  _QWORD aBlock[3];
  _QWORD v42[2];
  uint64_t v43[4];

  v7 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v7);
  v9 = (char *)&v40[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v40[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(1, v12);
  v15 = (void **)&v3[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000AB280((uint64_t)&v3[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], aBlock);
  Strong = swift_unknownObjectWeakLoadStrong(v42);
  sub_1000AB2BC((uint64_t)aBlock);
  if (Strong)
  {
    v39 = v15;
    v17 = a1;
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
      v19 = v3;
    else
      v19 = 0;
    if (!v19)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
      __break(1u);
      return;
    }
    v20 = *a2;
    v21 = v3;
    v22 = sub_1001385F0();
    aBlock[0] = v20;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(aBlock);
    swift_unknownObjectRelease(Strong);

    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    a1 = v17;
    v15 = v39;
    if (v23 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
      v24 = *v15;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v26 = objc_msgSend(v24, "cellForItemAtIndexPath:", isa);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  sub_100010CC4((uint64_t)v9, &qword_101499510);
  v26 = 0;
LABEL_10:
  v27 = objc_opt_self(CuratedCollectionHandler);
  v28 = swift_dynamicCastObjCClass(a1, v27);
  if (v28)
  {
    v29 = (void *)v28;
    v30 = swift_allocObject(&unk_1011AA928, 24, 7);
    swift_unknownObjectWeakInit(v30 + 16);
    v31 = (_QWORD *)swift_allocObject(&unk_1011AA978, 40, 7);
    v31[2] = a1;
    v31[3] = v30;
    v31[4] = v26;
    v32 = swift_allocObject(&unk_1011AA9A0, 32, 7);
    *(_QWORD *)(v32 + 16) = sub_1001E4E80;
    *(_QWORD *)(v32 + 24) = v31;
    v42[1] = sub_10000BF08;
    v43[0] = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001E44E8;
    v42[0] = &unk_1011AA9B8;
    v33 = _Block_copy(aBlock);
    v34 = v26;
    v35 = a1;
    swift_release();
    objc_msgSend(v29, "retrieveGeoCollectionWithRefinedItems:", v33);

    _Block_release(v33);
  }
  else
  {
    sub_1000AB280((uint64_t)v15, aBlock);
    v36 = (void *)swift_unknownObjectWeakLoadStrong(v43);
    sub_1000AB2BC((uint64_t)aBlock);
    if (v36)
    {
      v37 = objc_msgSend(v36, "homeShareDelegate");
      swift_unknownObjectRelease(v36);
      if (v37)
      {
        v40[4] = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
        v40[5] = 0;
        v40[0] = _NSConcreteStackBlock;
        v40[1] = 1107296256;
        v40[2] = sub_1001BB8D4;
        v40[3] = &unk_1011AA940;
        v38 = _Block_copy(v40);
        objc_msgSend(v37, "shareCollection:sourceView:completion:", a1, v26, v38);
        swift_unknownObjectRelease(v37);
        _Block_release(v38);
      }
    }

  }
}

void sub_1001E4094(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t Strong;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *oslog;
  uint64_t aBlock;
  _QWORD v34[5];
  uint64_t v35[5];
  uint64_t v36;
  _BYTE v37[24];

  if (!a2 || !a1)
    goto LABEL_14;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 >= 0)
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
    else
      v16 = a2;
    swift_bridgeObjectRetain(a2);
    v17 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a2);
    if (v17 < 1)
      goto LABEL_14;
  }
  else if (*(uint64_t *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_14;
  }
  if (!a3)
  {
    swift_beginAccess(a5 + 16, v37, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(a5 + 16);
    if (Strong)
    {
      v12 = (void *)Strong;
      sub_1000AB280(Strong + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v35);

      v13 = (void *)swift_unknownObjectWeakLoadStrong(&v36);
      sub_1000AB2BC((uint64_t)v35);
      if (v13)
      {
        v14 = objc_msgSend(v13, "homeShareDelegate");
        swift_unknownObjectRelease(v13);
        if (v14)
        {
          v34[3] = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
          v34[4] = 0;
          aBlock = (uint64_t)_NSConcreteStackBlock;
          v34[0] = 1107296256;
          v34[1] = sub_1001BB8D4;
          v34[2] = &unk_1011AA9E0;
          v15 = _Block_copy(&aBlock);
          objc_msgSend(v14, "shareCollection:sourceView:completion:", a4, a6, v15);
          swift_unknownObjectRelease(v14);
          _Block_release(v15);
        }
      }
    }
    return;
  }
LABEL_14:
  if (qword_101490E98 != -1)
    swift_once(&qword_101490E98, sub_100114760);
  v18 = type metadata accessor for Logger(0);
  sub_10000E918(v18, (uint64_t)qword_1014D4AD8);
  v19 = a4;
  swift_errorRetain(a3);
  v20 = v19;
  v21 = swift_errorRetain(a3);
  oslog = Logger.logObject.getter(v21);
  v22 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = (uint64_t *)swift_slowAlloc(8, -1);
    v25 = swift_slowAlloc(32, -1);
    v35[0] = v25;
    *(_DWORD *)v23 = 136315394;
    v26 = objc_msgSend(v20, "identifier");
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
    v29 = v28;

    aBlock = sub_1000C28FC(v27, v29, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v34, v23 + 4, v23 + 12);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v23 + 12) = 2112;
    if (a3)
    {
      swift_errorRetain(a3);
      v30 = _swift_stdlib_bridgeErrorToNSError(a3);
      aBlock = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v34, v23 + 14, v23 + 22);
    }
    else
    {
      aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v34, v23 + 14, v23 + 22);
      v30 = 0;
    }
    *v24 = v30;
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    _os_log_impl((void *)&_mh_execute_header, oslog, v22, "Failed to resolve curated collection with id: %s error: %@", (uint8_t *)v23, 0x16u);
    v31 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v24, 1, v31);
    swift_slowDealloc(v24, -1, -1);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_errorRelease(a3);
    swift_errorRelease(a3);

  }
}

void sub_1001E44E8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v7)(id, uint64_t, id);
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, uint64_t, id))(a1 + 32);
  v8 = sub_10000E4BC(0, &qword_101493E78, MKMapItem_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v8);
  swift_retain();
  v11 = a2;
  v10 = a4;
  v7(v11, v9, v10);
  swift_release();
  swift_bridgeObjectRelease(v9);

}

void sub_1001E4594()
{
  uint64_t v0;

}

id sub_1001E45A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListCollectionsSectionController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomeListCollectionsSectionController()
{
  return objc_opt_self(_TtC4Maps36HomeListCollectionsSectionController);
}

uint64_t sub_1001E4604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v11;

  v3 = sub_1001E2950(0, 0, 0x7FFFFFFFFFFFFFFFLL);
  v4 = v3;
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v3 &= 0xFFFFFFFFFFFFFF8uLL;
    v5 = _CocoaArrayWrapper.endIndex.getter(v3);
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v4);
  v6 = sub_1001E28B4();
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  v11._countAndFlagsBits = 0xD000000000000035;
  v11._object = (void *)0x8000000100E426F0;
  v7._object = (void *)0x8000000100E52320;
  v8._countAndFlagsBits = 0x656469754720794DLL;
  v8._object = (void *)0xE900000000000073;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v8, v11);
  swift_unknownObjectRetain(v1);
  return sub_100117734(v9._countAndFlagsBits, (uint64_t)v9._object, 0, v6 < v5, v1, (uint64_t)&off_1011AA8C0, 0xD000000000000013, 0x8000000100E52340, a1);
}

id sub_1001E475C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  Class isa;
  id v8;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_1001E2DC4(a1);

  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  sub_10000E4BC(0, (unint64_t *)&unk_1014A0740, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  return v8;
}

uint64_t sub_1001E4824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v6;

  v1 = sub_100008B04((uint64_t *)&unk_101493B10);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E23F50;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController_collectionsDataProvider);
  *(_QWORD *)(v2 + 32) = v3;
  v6 = v2;
  specialized Array._endMutation()(v2);
  v4 = v3;
  return v6;
}

_QWORD *sub_1001E489C()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  id v3;
  _QWORD *v4;

  v1 = sub_1001E28B4();
  v2 = sub_1001E2950(1, 1, v1);
  v3 = v0;
  v4 = sub_1001E4BAC(v2);
  swift_bridgeObjectRelease(v2);

  return v4;
}

uint64_t sub_1001E4908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject(&unk_1011AA928, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  swift_retain();
  v3 = sub_1001FDFC8(a1, (uint64_t)sub_1001E4BA4, v2);
  swift_release_n(v2, 2);
  return v3;
}

uint64_t sub_1001E4980()
{
  uint64_t v0;
  void *v1;
  uint64_t result;
  _QWORD v3[5];
  uint64_t v4;

  sub_1000AB280(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v3);
  v1 = (void *)swift_unknownObjectWeakLoadStrong(&v4);
  result = sub_1000AB2BC((uint64_t)v3);
  if (v1)
  {
    objc_msgSend(v1, "homeSectionHeaderButtonTapped:", 3);
    return swift_unknownObjectRelease(v1);
  }
  return result;
}

uint64_t sub_1001E49F0()
{
  uint64_t Strong;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  char *v9;
  char v10[8];
  char v11[8];
  uint64_t v12;
  uint64_t v13;

  sub_1001E4604((uint64_t)v11);
  if (!v12)
  {
    v8 = &qword_1014A09B0;
    v9 = v11;
    return sub_100010CC4((uint64_t)v9, v8);
  }
  sub_10000C1FC((uint64_t)&v13, (uint64_t)v10, (uint64_t *)&unk_101498C70);
  sub_1000AE568((uint64_t)v11);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (!Strong)
  {
    v8 = (uint64_t *)&unk_101498C70;
    v9 = v10;
    return sub_100010CC4((uint64_t)v9, v8);
  }
  v1 = Strong;
  ObjectType = swift_getObjectType();
  v3 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionHeaderDelegate);
  if (v3)
    v4 = v3;
  else
    v4 = 0;
  if (v3)
    v5 = v1;
  else
    v5 = 0;
  if (v5)
  {
    sub_100010CC4((uint64_t)v10, (uint64_t *)&unk_101498C70);
    v6 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v4);
    return swift_unknownObjectRelease(v1);
  }
  else
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Maps/HashableWrappers.swift", 27, 2, 83, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001E4B04()
{
  uint64_t v0;
  _QWORD v2[2];
  unsigned __int8 v3;

  sub_1001E4604((uint64_t)v2);
  if (v2[1])
  {
    v0 = v3;
    sub_1000AE568((uint64_t)v2);
  }
  else
  {
    sub_100010CC4((uint64_t)v2, &qword_1014A09B0);
    return 0;
  }
  return v0;
}

uint64_t sub_1001E4B60()
{
  return sub_1001E49F0();
}

uint64_t sub_1001E4B80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_1001E4BA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E475C(a1, v1);
}

_QWORD *sub_1001E4BAC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _QWORD *v24;

  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v3 = _swiftEmptyArrayStorage;
    for (i = 4; ; ++i)
    {
      v24 = v3;
      v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1)
         : *(id *)(a1 + 8 * i);
      v6 = v5;
      v7 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v8 = v2;
      v9 = objc_msgSend(v5, "_maps_diffableDataSourceIdentifier");
      if (v9)
      {
        v10 = v9;
        v11 = sub_1001FD8EC();
        v12 = objc_msgSend(v11, "identifierPathByAppendingIdentifier:", v10);

        if (v12)
        {
          *(_QWORD *)&v23 = &type metadata for HomeListCollectionHandlerCellModel;
          *((_QWORD *)&v23 + 1) = sub_1001E4DF0();
          *(_QWORD *)&v21 = v12;
          *((_QWORD *)&v21 + 1) = v6;
          v2 = v8;
LABEL_14:
          v18 = v21;
          v19 = v22;
          v20 = v23;
          v3 = v24;
          if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
            v3 = sub_1000A8440(0, v3[2] + 1, 1, v3);
          v14 = v3[2];
          v13 = v3[3];
          if (v14 >= v13 >> 1)
            v3 = sub_1000A8440((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
          v3[2] = v14 + 1;
          v15 = &v3[6 * v14];
          v15[3] = v19;
          v15[4] = v20;
          v15[2] = v18;
          goto LABEL_5;
        }
      }
      v22 = 0u;
      v23 = 0u;
      v21 = 0u;

      v2 = v8;
      if ((_QWORD)v21)
        goto LABEL_14;
      sub_100010CC4((uint64_t)&v21, &qword_10149B500);
      v3 = v24;
LABEL_5:
      if (v7 == v2)
      {
        swift_bridgeObjectRelease(a1);
        return v3;
      }
    }
    __break(1u);
LABEL_21:
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v16);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_1001E4DF0()
{
  unint64_t result;

  result = qword_10149FB08;
  if (!qword_10149FB08)
  {
    result = swift_getWitnessTable(byte_100E240D8, &type metadata for HomeListCollectionHandlerCellModel);
    atomic_store(result, (unint64_t *)&qword_10149FB08);
  }
  return result;
}

double sub_1001E4E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001E4E44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001E4E4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001E4E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001E4094(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1001E4E8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001E4EB8(uint64_t a1)
{
  uint64_t v1;

  sub_1001E3B90(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001E4EC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E4EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 96) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release();

  sub_10000BEAC((_QWORD *)(v0 + 40));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001E4F78(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_1001E3938(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (void **)(v1 + 32), *(void (**)(_QWORD))(v1 + 80), *(_QWORD *)(v1 + 88), v1 + ((v3 + 96) & ~v3));
}

id sub_1001E4FC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  id result;
  uint64_t v13;
  char v14;

  v11 = (void *)objc_opt_self(GEOAPPortal);
  objc_msgSend(v11, "captureUserAction:target:value:", a3, 8, 0);
  objc_msgSend(v11, "captureUserAction:target:value:", a4, 8, 0);
  result = objc_msgSend(a1, "handlerType");
  if (result == (id)4)
  {
    v13 = IndexPath.item.getter();
    if (v13 < 0)
    {
      v14 = 2;
      result = (id)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v14, 3451, 0);
      __break(1u);
    }
    else
    {
      return objc_msgSend((id)objc_opt_self(HomeAnalyticsManager), "captureCuratedCollectionAction:withCollectionHandler:verticalIndex:", a6, a1, v13);
    }
  }
  else if (!result)
  {
    return objc_msgSend(v11, "captureUserAction:target:value:", a5, 8, 0);
  }
  return result;
}

uint64_t sub_1001E5130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 80) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release();

  sub_10000BEAC((_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001E51BC(void (*a1)(uint64_t, __n128), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_1001E3310(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), (uint64_t *)(v2 + 32), v2 + ((v5 + 80) & ~v5));
}

uint64_t sub_1001E5210()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10000BEAC((_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 48, v5);
}

void sub_1001E52B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1001E3284(a1, a2, *(_QWORD *)(v2 + 16), *(objc_class **)(v2 + 24), v2 + v6, (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001E534C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100008B04(&qword_10149C100);
  sub_10000E930(v0, qword_1014D5060);
  sub_10000E918(v0, (uint64_t)qword_1014D5060);
  v1 = sub_10000E4BC(0, &qword_10149FB58, off_1011961A8);
  return UICollectionView.CellRegistration.init(handler:)(sub_1001E53CC, 0, v1, &type metadata for HomeListFeatureDiscoveryCellModel);
}

void sub_1001E53CC(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  id v4;

  v3 = *a3;
  v4 = objc_msgSend(a1, "featureDiscoveryView");
  objc_msgSend(v4, "setModel:", v3);

}

uint64_t sub_1001E541C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101491118 != -1)
    swift_once(&qword_101491118, sub_1001E534C);
  v2 = sub_100008B04(&qword_10149C100);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D5060);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t sub_1001E5494()
{
  unint64_t result;

  result = qword_10149FB10;
  if (!qword_10149FB10)
  {
    result = swift_getWitnessTable("с7", &type metadata for HomeListFeatureDiscoveryCellModel);
    atomic_store(result, (unint64_t *)&qword_10149FB10);
  }
  return result;
}

unint64_t sub_1001E54D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1001E54FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001E54FC()
{
  unint64_t result;

  result = qword_10149FB50;
  if (!qword_10149FB50)
  {
    result = swift_getWitnessTable(byte_100E32A28, &type metadata for HomeListFeatureDiscoveryCellModel);
    atomic_store(result, (unint64_t *)&qword_10149FB50);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListFeatureDiscoveryCellModel()
{
  return &type metadata for HomeListFeatureDiscoveryCellModel;
}

unint64_t sub_1001E5554()
{
  unint64_t result;

  result = qword_10149FB60;
  if (!qword_10149FB60)
  {
    result = swift_getWitnessTable(byte_100E32B30, &type metadata for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149FB60);
  }
  return result;
}

uint64_t sub_1001E5598()
{
  return sub_100010D70(&qword_10149FB68, &qword_10149FB70, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1001E55C4()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D5078);
  sub_10000E918(v20, (uint64_t)qword_1014D5078);
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E523A0);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "A setting to avoid busy roads when cycling", 42, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_1001E57D8(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D5090);
  sub_10000E918(v1, (uint64_t)qword_1014D5090);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000022, 0x8000000100E524F0);
}

uint64_t sub_1001E5838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D50A8);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D50A8);
  IntentDescription.init(stringLiteral:)(0xD00000000000004BLL, 0x8000000100E524A0);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_1001E58C0()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E33000);
  qword_1014D50C0 = result;
  return result;
}

uint64_t sub_1001E58E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_1001E5900, 0, 0);
}

uint64_t sub_1001E5900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101491138 != -1)
    swift_once(&qword_101491138, sub_1001E58C0);
  v2 = qword_1014D50C0;
  *(_QWORD *)(v0 + 80) = qword_1014D50C0;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149FC70, &qword_10149FC78, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_1001E5A00;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_1001E5A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_1001E5A80;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001E5A80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D50C0;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_1001E5B14()
{
  double result;

  if (qword_101491138 != -1)
    swift_once(&qword_101491138, sub_1001E58C0);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_1001E5B58()
{
  unint64_t result;

  result = qword_10149FB78;
  if (!qword_10149FB78)
  {
    result = swift_getWitnessTable(byte_100E32BC0, &type metadata for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149FB78);
  }
  return result;
}

unint64_t sub_1001E5BA0()
{
  unint64_t result;

  result = qword_10149FB80;
  if (!qword_10149FB80)
  {
    result = swift_getWitnessTable("с7", &type metadata for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149FB80);
  }
  return result;
}

uint64_t sub_1001E5BE4(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10106B85C, 1) + 8);
}

uint64_t sub_1001E5C08(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1001E5554();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_1001E5C48@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491128, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D5090, (uint64_t)sub_1001E57D8, a1);
}

uint64_t sub_1001E5C6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101491130 != -1)
    swift_once(&qword_101491130, sub_1001E5838);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D50A8);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_1001E5CCC(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149FC8C);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_1001E5900, 0, 0);
}

uint64_t sub_1001E5D34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1001E681C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001E5D58()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_1001E5D78()
{
  unint64_t result;

  result = qword_10149FB90;
  if (!qword_10149FB90)
  {
    result = swift_getWitnessTable(byte_100E32C34, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FB90);
  }
  return result;
}

unint64_t sub_1001E5DC0()
{
  unint64_t result;

  result = qword_10149FB98;
  if (!qword_10149FB98)
  {
    result = swift_getWitnessTable(byte_100E32E2C, &type metadata for AvoidBusyRoadsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149FB98);
  }
  return result;
}

unint64_t sub_1001E5E08()
{
  unint64_t result;

  result = qword_10149FBA0;
  if (!qword_10149FBA0)
  {
    result = swift_getWitnessTable(byte_100E32C8C, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBA0);
  }
  return result;
}

unint64_t sub_1001E5E50()
{
  unint64_t result;

  result = qword_10149FBA8;
  if (!qword_10149FBA8)
  {
    result = swift_getWitnessTable(aU_3, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBA8);
  }
  return result;
}

unint64_t sub_1001E5E98()
{
  unint64_t result;

  result = qword_10149FBB0;
  if (!qword_10149FBB0)
  {
    result = swift_getWitnessTable(asc_100E32CF4, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBB0);
  }
  return result;
}

unint64_t sub_1001E5EE0()
{
  unint64_t result;

  result = qword_10149FBB8;
  if (!qword_10149FBB8)
  {
    result = swift_getWitnessTable(byte_100E32EA4, &type metadata for AvoidBusyRoadsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149FBB8);
  }
  return result;
}

uint64_t sub_1001E5F24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001E5F3C, 0, 0);
}

uint64_t sub_1001E5F3C()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  id v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)CyclePreferences), "initWithDefaults:", v2);

  LOBYTE(v2) = objc_msgSend(v3, "avoidBusyRoads");
  *v1 = (_BYTE)v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E5FD8(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_1001E5FF4, 0, 0);
}

uint64_t sub_1001E5FF4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  int BOOL;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)CyclePreferences), "initWithDefaults:", v2);

  objc_msgSend(v3, "setAvoidBusyRoads:", v1);
  objc_msgSend(v3, "synchronize");
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001E60C8()
{
  unint64_t result;

  result = qword_10149FBC0;
  if (!qword_10149FBC0)
  {
    result = swift_getWitnessTable(asc_100E32D2C, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBC0);
  }
  return result;
}

unint64_t sub_1001E6110()
{
  unint64_t result;

  result = qword_10149FBC8;
  if (!qword_10149FBC8)
  {
    result = swift_getWitnessTable(byte_100E32D54, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBC8);
  }
  return result;
}

unint64_t sub_1001E6158()
{
  unint64_t result;

  result = qword_10149FBD0;
  if (!qword_10149FBD0)
  {
    result = swift_getWitnessTable(byte_100E32D7C, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBD0);
  }
  return result;
}

unint64_t sub_1001E61A0()
{
  unint64_t result;

  result = qword_10149FBD8;
  if (!qword_10149FBD8)
  {
    result = swift_getWitnessTable(byte_100E32DD4, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBD8);
  }
  return result;
}

uint64_t sub_1001E61E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1001E63AC();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1001E6220@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491120, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D5078, (uint64_t)sub_1001E55C4, a1);
}

uint64_t sub_1001E6244()
{
  return sub_100010D70(&qword_10149FBE0, &qword_10149FBE8, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1001E6270(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E5D78();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001E62AC()
{
  unint64_t result;

  result = qword_10149FBF0;
  if (!qword_10149FBF0)
  {
    result = swift_getWitnessTable("Հ7", &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149FBF0);
  }
  return result;
}

uint64_t sub_1001E62F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E63AC();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1001E6328(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E61A0();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001E6364()
{
  unint64_t result;

  result = qword_10149FBF8;
  if (!qword_10149FBF8)
  {
    result = swift_getWitnessTable(byte_100E32E6C, &type metadata for AvoidBusyRoadsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149FBF8);
  }
  return result;
}

unint64_t sub_1001E63AC()
{
  unint64_t result;

  result = qword_10149FC00[0];
  if (!qword_10149FC00[0])
  {
    result = swift_getWitnessTable(byte_100E32C04, &type metadata for AvoidBusyRoadsInCyclingEntity);
    atomic_store(result, qword_10149FC00);
  }
  return result;
}

uint64_t sub_1001E63F0(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001E6448, 0, 0);
}

uint64_t sub_1001E6448()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149FB70);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E523A0);
  v3 = sub_100010D70(&qword_10149FC70, &qword_10149FC78, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149FC60, 0, &unk_10149FC68, 0, &type metadata for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E6504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1001E5DC0();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001E6570()
{
  unint64_t result;

  result = qword_10149FC18;
  if (!qword_10149FC18)
  {
    result = swift_getWitnessTable(aU_4, &type metadata for AvoidBusyRoadsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149FC18);
  }
  return result;
}

unint64_t sub_1001E65B8()
{
  unint64_t result;

  result = qword_10149FC20[0];
  if (!qword_10149FC20[0])
  {
    result = swift_getWitnessTable("M~7", &type metadata for AvoidBusyRoadsInCyclingQuery);
    atomic_store(result, qword_10149FC20);
  }
  return result;
}

uint64_t sub_1001E65FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1001E5DC0();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001E6668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1001E5DC0();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1001E66D4()
{
  unint64_t result;

  result = qword_10149FC38;
  if (!qword_10149FC38)
  {
    result = swift_getWitnessTable("5~7", &type metadata for AvoidBusyRoadsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149FC38);
  }
  return result;
}

unint64_t sub_1001E671C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149FC40;
  if (!qword_10149FC40)
  {
    v1 = sub_10000E5D4(qword_10149FC48);
    v2 = sub_1001E6158();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149FC40);
  }
  return result;
}

uint64_t sub_1001E6780(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1001E5EE0();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInCyclingQuery()
{
  return &type metadata for AvoidBusyRoadsInCyclingQuery;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value()
{
  return &type metadata for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInCyclingEntity()
{
  return &type metadata for AvoidBusyRoadsInCyclingEntity;
}

uint64_t sub_1001E681C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149FC80);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000025, 0x8000000100E52420);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_1001E5D78();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000044, 0x8000000100E52450);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_1001E6B40@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikingDifficulty()
{
  return &type metadata for PlaceSummaryUnitHikingDifficulty;
}

unint64_t sub_1001E6B60()
{
  unint64_t result;

  result = qword_10149FC90;
  if (!qword_10149FC90)
  {
    result = swift_getWitnessTable(byte_100E330A0, &type metadata for NearbyTransitDeparturesViewModel);
    atomic_store(result, (unint64_t *)&qword_10149FC90);
  }
  return result;
}

uint64_t sub_1001E6BA4()
{
  uint64_t *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  uint64_t v14;
  _BYTE v15[16];
  uint64_t v16;
  void *v17;

  v1 = (void *)v0[9];
  v2 = objc_msgSend(v1, "displayName");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = *v0;
    v6 = v0[1];
    swift_bridgeObjectRetain(v6);
  }
  v14 = v4;
  sub_1000207BC((uint64_t)(v0 + 6), (uint64_t)v15, &qword_101495CE0);
  sub_1000207BC((uint64_t)v15, (uint64_t)&v16, &qword_101495CE0);
  v7 = v17;
  if (v17)
  {
    v8 = v16;
    swift_bridgeObjectRetain(v6);
    v9._countAndFlagsBits = v8;
    v9._object = v7;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(v6);
    v14 = v4;
  }
  objc_msgSend(v1, "stopId");
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12._countAndFlagsBits = 2108704;
  v12._object = (void *)0xE300000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(0xE300000000000000);
  return v14;
}

uint64_t sub_1001E6CE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1001E6BA4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001E6D38(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[5];
  uint64_t v8;
  _OWORD v9[5];
  uint64_t v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 80);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return (unint64_t)sub_1001E702C((uint64_t *)v7, v9) & 1;
}

void sub_1001E6DA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  uint64_t v19;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[3];
  if (v6)
  {
    v7 = v2[2];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(a1, v7, v6);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v8 = v2[4];
  v9 = v2[5];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = v2[7];
  if (v10)
  {
    v11 = v2[6];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v10);
    String.hash(into:)(a1, v11, v10);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Hasher._combine(_:)(v2[8]);
  Hasher._combine(_:)(v2[10]);
  v12 = objc_msgSend((id)v2[9], "departures");
  if (!v12)
    return;
  v13 = v12;
  v14 = sub_100008B04((uint64_t *)&unk_10149FC98);
  v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

  if ((unint64_t)v15 >> 62)
  {
    if (v15 < 0)
      v19 = v15;
    else
      v19 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v16 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v15);
    if (v16)
      goto LABEL_10;
LABEL_21:
    swift_bridgeObjectRelease(v15);
    return;
  }
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
    goto LABEL_21;
LABEL_10:
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
      }
      else
      {
        v18 = *(void **)(v15 + 8 * i + 32);
        swift_unknownObjectRetain(v18);
      }
      Hasher._combine(_:)((Swift::UInt64)objc_msgSend(v18, "tripIdentifier"));
      swift_unknownObjectRelease(v18);
    }
    goto LABEL_21;
  }
  __break(1u);
}

Swift::Int sub_1001E6FB4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1001E6DA0((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1001E6FF4(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1001E6DA0((uint64_t)v2);
  return Hasher._finalize()();
}

id sub_1001E702C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 != *a2 || v5 != v6)
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
  v10 = a1[3];
  v11 = a2[3];
  if (!v10)
  {
    if (v11)
      return 0;
    goto LABEL_15;
  }
  if (!v11)
    return 0;
  v12 = a1[2];
  v13 = a2[2];
  v14 = v12 == v13 && v10 == v11;
  if (v14 || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v10, v13, v11, 0), result = 0, (v15 & 1) != 0))
  {
LABEL_15:
    v16 = a1[4];
    v17 = a1[5];
    v18 = a2[4];
    v19 = a2[5];
    if (v16 != v18 || v17 != v19)
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0);
      result = 0;
      if ((v20 & 1) == 0)
        return result;
    }
    v21 = a1[7];
    v22 = a2[7];
    if (v21)
    {
      if (v22)
      {
        v23 = a1[6];
        v24 = a2[6];
        if (v23 != v24 || v21 != v22)
        {
          v25 = _stringCompareWithSmolCheck(_:_:expecting:)(a1[6], a1[7], a2[6], a2[7], 0);
          result = 0;
          if ((v25 & 1) == 0)
            return result;
          v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v21, v24, v22, 0);
          result = 0;
          if ((v26 & 1) == 0)
            return result;
        }
        goto LABEL_26;
      }
    }
    else if (!v22)
    {
LABEL_26:
      if (a1[8] == a2[8] && a1[10] == a2[10])
        return objc_msgSend((id)a1[9], "isEqual:", a2[9]);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1001E71A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char **v18;
  void *v19;
  id v20;
  void *v21;
  char **v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  Class isa;
  Class v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;

  v4 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v4);
  v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v49 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v47 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v46 = (char *)v43 - v10;
  __chkstk_darwin(v11);
  v45 = (char *)v43 - v12;
  if (!a1)
    return 0;
  v44 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v42 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v42 = a1;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v42);
    v13 = result;
    if (result)
      goto LABEL_4;
LABEL_27:
    swift_bridgeObjectRelease(v44);
    return 0;
  }
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(a1);
  if (!v13)
    goto LABEL_27;
LABEL_4:
  if (v13 < 1)
  {
    __break(1u);
    return result;
  }
  v43[1] = a2;
  v15 = 0;
  v16 = v44;
  v17 = v44 & 0xC000000000000001;
  v48 = (char *)_swiftEmptyArrayStorage;
  v18 = &selRef_initWithTitle_subTitle_selectedBlock_;
  do
  {
    if (v17)
    {
      v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v16);
    }
    else
    {
      v19 = *(void **)(v16 + 8 * v15 + 32);
      swift_unknownObjectRetain(v19);
    }
    if ((objc_msgSend(v19, v18[491]) & 1) != 0)
    {
      swift_unknownObjectRelease(v19);
      goto LABEL_7;
    }
    v20 = objc_msgSend(v19, "departureDate");
    if (!v20)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v6, 1, 1, v7);
LABEL_20:
      swift_unknownObjectRelease(v19);
      sub_100010CC4((uint64_t)v6, (uint64_t *)&unk_10149E140);
      goto LABEL_7;
    }
    v21 = v20;
    v22 = v18;
    v23 = v7;
    v24 = v13;
    v25 = v17;
    v26 = v46;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v27 = v49;
    v28 = v26;
    v17 = v25;
    v13 = v24;
    v7 = v23;
    v18 = v22;
    v29 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
    v29(v6, v28, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v7) == 1)
      goto LABEL_20;
    v30 = v45;
    v29(v45, v6, v7);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v47, v30, v7);
    if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
      v48 = (char *)sub_1000A74C4(0, *((_QWORD *)v48 + 2) + 1, 1, (unint64_t)v48);
    v32 = *((_QWORD *)v48 + 2);
    v31 = *((_QWORD *)v48 + 3);
    if (v32 >= v31 >> 1)
      v48 = (char *)sub_1000A74C4(v31 > 1, v32 + 1, 1, (unint64_t)v48);
    v33 = v47;
    v34 = v48;
    *((_QWORD *)v48 + 2) = v32 + 1;
    v35 = v49;
    v29(&v34[((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v49 + 72) * v32], v33, v7);
    swift_unknownObjectRelease(v19);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v7);
    v16 = v44;
LABEL_7:
    ++v15;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease(v16);
  v36 = (void *)objc_opt_self(MKTransitDeparturesCell);
  v37 = v48;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v37);
  v39 = Date._bridgeToObjectiveC()().super.isa;
  v40 = objc_msgSend(v36, "_stringForCountdownDepartures:referenceDate:isShowingNoConnectionEmDash:", isa, v39, 0);

  if (v40)
  {
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);

    return v41;
  }
  return 0;
}

uint64_t sub_1001E75BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  Class v30;
  id v31;
  id v32;
  void *v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  Class v53;
  Class v54;
  id v55;
  Class isa;
  id v57;
  id v58;
  void *v59;
  Class v60;
  Class v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  Class v66;
  Class v67;
  id v68;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;

  v74 = a4;
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v72 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v70 - v11;
  v13 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v13);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v70 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - v20;
  *(_QWORD *)&v23 = __chkstk_darwin(v22).n128_u64[0];
  v25 = (char *)&v70 - v24;
  v75 = a1;
  v26 = sub_1001E89A4((uint64_t)objc_msgSend(a1, "departureTimeDisplayStyle", v23));
  if (v26 >= 2)
  {
    v73 = a3;
    if (v26 != 2)
    {
      v37 = v26;
      if (qword_101490E90 != -1)
        swift_once(&qword_101490E90, sub_100114734);
      v38 = type metadata accessor for Logger(0);
      sub_10000E918(v38, (uint64_t)qword_1014D4AC0);
      v28 = v75;
      v39 = swift_unknownObjectRetain_n(v75, 2);
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = swift_slowAlloc(22, -1);
        v43 = swift_slowAlloc(32, -1);
        v76 = v37;
        v77 = v43;
        *(_DWORD *)v42 = 134218242;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v42 + 4, v42 + 12);
        *(_WORD *)(v42 + 12) = 2080;
        v44 = objc_msgSend(v28, "description");
        v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
        v47 = v46;

        v76 = sub_1000C28FC(v45, v47, &v77);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v42 + 14, v42 + 22);
        swift_unknownObjectRelease_n(v28, 2);
        swift_bridgeObjectRelease(v47);
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unknown departureTimeDisplayStyle %lu for departureSequence %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1, -1);
        swift_slowDealloc(v42, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(v28, 2);
      }
      v27 = 0;
LABEL_27:
      isa = Date._bridgeToObjectiveC()().super.isa;
      v57 = objc_msgSend(v28, "frequencyToDescribeAtDate:", isa);

      if (v57)
      {
        swift_bridgeObjectRelease(0);
        v58 = objc_msgSend((id)objc_opt_self(NSString), "_navigation_formattedDescriptionForFrequency:", v57);
        if (v58)
        {
          v59 = v58;
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);

          swift_unknownObjectRelease(v57);
          return v27;
        }
        swift_unknownObjectRelease(v57);
      }
      else
      {
        v60 = Date._bridgeToObjectiveC()().super.isa;
        v61 = TimeZone._bridgeToObjectiveC()().super.isa;
        v62 = objc_msgSend(v28, "operatingHoursForDate:inTimeZone:", v60, v61);

        if (!v62)
          return v27;
        swift_bridgeObjectRelease(0);
        v63 = sub_100008B04(&qword_10149FCA8);
        v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, v63);

        v65 = (void *)objc_opt_self(NSString);
        v66 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v64);
        v67 = TimeZone._bridgeToObjectiveC()().super.isa;
        v68 = objc_msgSend(v65, "_navigation_formattedStringForOperatingHours:timeZone:", v66, v67);

        if (v68)
        {
          v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);

          return v27;
        }
      }
      return 0;
    }
    v30 = Date._bridgeToObjectiveC()().super.isa;
    v31 = objc_msgSend(v75, "firstDepartureOnOrAfterDate:", v30);

    if (!v31)
      goto LABEL_26;
    v32 = objc_msgSend(v31, "scheduledDepartureDate");
    v71 = v31;
    if (v32)
    {
      v33 = v32;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v34 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v34(v21, v12, v7);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v35(v21, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7) != 1)
      {
        v34(v25, v21, v7);
        v35(v25, 0, 1, v7);
        v36 = v72;
LABEL_20:
        sub_10000C1FC((uint64_t)v25, (uint64_t)v15, (uint64_t *)&unk_10149E140);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7) == 1)
        {
          sub_100010CC4((uint64_t)v25, (uint64_t *)&unk_10149E140);
          swift_unknownObjectRelease(v71);
          v51 = (uint64_t)v15;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v36, v15, v7);
          v52 = (void *)objc_opt_self(NSDateFormatter);
          v53 = Date._bridgeToObjectiveC()().super.isa;
          v54 = TimeZone._bridgeToObjectiveC()().super.isa;
          v55 = objc_msgSend(v52, "_navigation_localizedTimestampStringForDepartureArrivalDate:inTimeZone:canIncludeDate:showTimeZone:useShortFormat:", v53, v54, 0, 0, 0);

          if (v55)
          {
            v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);

            swift_unknownObjectRelease(v71);
            (*(void (**)(char *, uint64_t))(v8 + 8))(v36, v7);
            sub_100010CC4((uint64_t)v25, (uint64_t *)&unk_10149E140);
            return v27;
          }
          swift_unknownObjectRelease(v71);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v36, v7);
          v51 = (uint64_t)v25;
        }
        sub_100010CC4(v51, (uint64_t *)&unk_10149E140);
LABEL_26:
        v27 = 0;
        v28 = v75;
        goto LABEL_27;
      }
    }
    else
    {
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v35(v21, 1, 1, v7);
    }
    v36 = v72;
    v48 = objc_msgSend(v71, "departureDate");
    if (v48)
    {
      v49 = v48;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v50 = 0;
    }
    else
    {
      v50 = 1;
    }
    v35(v18, v50, 1, v7);
    sub_1000207BC((uint64_t)v18, (uint64_t)v25, (uint64_t *)&unk_10149E140);
    sub_100010CC4((uint64_t)v21, (uint64_t *)&unk_10149E140);
    goto LABEL_20;
  }
  v27 = sub_1001E71A8(a2, a3);
  v28 = v75;
  if (!v29)
    goto LABEL_27;
  return v27;
}

id sub_1001E7D14(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  id v24;
  id v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  Class v36;
  id v37;
  id result;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  id v43;
  void *v44;
  void (*v45)(char *, char *, uint64_t);
  void *v46;
  Class isa;
  Class v48;
  id v49;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;

  v4 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v51 - v12;
  v14 = sub_100008B04((uint64_t *)&unk_10149E730);
  __chkstk_darwin(v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TimeZone(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v52 = v20;
  sub_10000C1FC(a2, (uint64_t)v16, (uint64_t *)&unk_10149E730);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100010CC4((uint64_t)v16, (uint64_t *)&unk_10149E730);
    return 0;
  }
  v21 = v52;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v52, v16, v17);
  v22 = (char *)objc_msgSend((id)swift_unknownObjectRetain(a1), "liveStatus");
  if ((unint64_t)(v22 - 3) > 2)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    v42 = a1;
LABEL_10:
    swift_unknownObjectRelease(v42);
    return 0;
  }
  v23 = v22;
  v24 = objc_msgSend(a1, "liveStatusString");
  if (!v24)
  {
    v43 = objc_msgSend(a1, "departureDate");
    if (v43)
    {
      v44 = v43;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v45 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v45(v6, v10, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        v45(v13, v6, v7);
        v46 = (void *)objc_opt_self(MKTransitDeparturesCell);
        isa = Date._bridgeToObjectiveC()().super.isa;
        v48 = TimeZone._bridgeToObjectiveC()().super.isa;
        v49 = objc_msgSend(v46, "_stringFromTimestampDate:departureTimeZone:", isa, v48);

        v50 = objc_msgSend((id)objc_opt_self(NSString), "_navigation_formattedDescriptionForLiveStatus:updatedDepartureTimeString:", v23, v49);
        if (v50)
        {
          v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);

          swift_unknownObjectRelease(a1);
        }
        else
        {
          swift_unknownObjectRelease(a1);
          v41 = 0;
        }
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        goto LABEL_22;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    swift_unknownObjectRelease(a1);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v52, v17);
    sub_100010CC4((uint64_t)v6, (uint64_t *)&unk_10149E140);
    return 0;
  }
  v25 = v24;
  MKFormattedStringOptionsMakeDefault(&v53);
  v26 = v53;
  v27 = v54;
  v28 = v55;
  v29 = v56;
  v30 = v57;
  v31 = v58;
  v32 = objc_allocWithZone((Class)MKServerFormattedStringParameters);
  LOBYTE(v53) = v26;
  v54 = v27;
  v55 = v28;
  v56 = v29;
  v57 = v30;
  v58 = v31;
  v33 = objc_msgSend(v32, "initWithOptions:variableOverrides:", &v53, 0);
  v34 = objc_msgSend(objc_allocWithZone((Class)MKServerFormattedString), "initWithGeoServerString:parameters:", v25, v33);
  v35 = sub_100009758((uint64_t)_swiftEmptyArrayStorage);
  v36 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v35);
  v37 = objc_msgSend(v34, "multiPartAttributedStringWithAttributes:", v36);

  if (!v37)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v52, v17);
    swift_unknownObjectRelease(a1);

    v42 = v25;
    goto LABEL_10;
  }
  result = objc_msgSend(v37, "attributedString");
  if (result)
  {
    v39 = result;
    v40 = objc_msgSend(result, "string");

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    swift_unknownObjectRelease(v25);

    swift_unknownObjectRelease(a1);
LABEL_22:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v52, v17);
    return (id)v41;
  }
  __break(1u);
  return result;
}

id sub_1001E8254@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  Class isa;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  Class v36;
  Class v37;
  void *v38;
  unsigned int v39;
  id v40;
  uint64_t v41;
  id result;
  void *v43;
  uint64_t v44;
  id v45;
  Class v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  Class v52;
  Class v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(char *, uint64_t, uint64_t, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  char *v96;
  uint64_t v97;

  v90 = a4;
  v7 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v7);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v86 - v11;
  __chkstk_darwin(v13);
  v93 = (uint64_t)&v86 - v14;
  v15 = sub_100008B04((uint64_t *)&unk_10149E730);
  __chkstk_darwin(v15);
  v87 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v86 - v18;
  v20 = type metadata accessor for TimeZone(0);
  v97 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v86 - v24;
  v94 = a2;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v27 = objc_msgSend(a1, "departuresValidForDate:", isa);

  if (v27)
  {
    v28 = sub_100008B04((uint64_t *)&unk_10149FC98);
    v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  }
  else
  {
    v29 = 0;
  }
  v30 = objc_msgSend(a1, "timeZone");
  v96 = v25;
  v91 = v20;
  if (!v30)
  {
    v86 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56);
    v34 = v86(v19, 1, 1, v20);
    goto LABEL_8;
  }
  v31 = v30;
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

  v32 = v97;
  v33 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
  v33(v19, v22, v20);
  v86 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v86(v19, 0, 1, v20);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v19, 1, v20);
  if ((_DWORD)v34 == 1)
  {
    v25 = v96;
LABEL_8:
    static TimeZone.current.getter(v34);
    sub_100010CC4((uint64_t)v19, (uint64_t *)&unk_10149E730);
    goto LABEL_10;
  }
  v25 = v96;
  v33(v96, v19, v20);
LABEL_10:
  v35 = v94;
  v36 = Date._bridgeToObjectiveC()().super.isa;
  v37 = TimeZone._bridgeToObjectiveC()().super.isa;
  v38 = a1;
  v39 = objc_msgSend(a1, "isValidForDate:inTimeZone:", v36, v37);

  v95 = v38;
  v92 = a3;
  if (!v39)
  {
    swift_bridgeObjectRelease(v29);
    v46 = Date._bridgeToObjectiveC()().super.isa;
    v47 = objc_msgSend(v38, "serviceResumesAfterDate:", v46);

    if (v47)
    {
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v47);

      v48 = type metadata accessor for Date(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v12, 0, 1, v48);
    }
    else
    {
      v48 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v12, 1, 1, v48);
    }
    v49 = v93;
    sub_1000207BC((uint64_t)v12, v93, (uint64_t *)&unk_10149E140);
    sub_10000C1FC(v49, (uint64_t)v9, (uint64_t *)&unk_10149E140);
    type metadata accessor for Date(0);
    v50 = *(_QWORD *)(v48 - 8);
    v51 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v9, 1, v48) != 1)
    {
      v51 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v9, v48);
    }
    v52 = Date._bridgeToObjectiveC()().super.isa;
    v53 = TimeZone._bridgeToObjectiveC()().super.isa;
    v54 = (id)MKServiceGapDescription(v51, v52, v53, 0);

    if (v54)
    {
      v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
      v88 = v56;
      v89 = v55;

    }
    else
    {
      v88 = 0;
      v89 = 0;
    }
    v57 = v97;
    result = objc_msgSend(v95, "displayName");
    if (result)
    {
      v58 = result;
      v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v61 = v60;

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v35, v48);
      sub_100010CC4(v93, (uint64_t *)&unk_10149E140);
      v62 = 0;
      v63 = 0;
      v64 = 0;
      v65 = 0xE000000000000000;
      v66 = 0xE000000000000000;
      v44 = v91;
      v67 = v96;
LABEL_56:
      result = (id)(*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v67, v44);
      v83 = v89;
      v82 = v90;
      *v90 = v62;
      v82[1] = v65;
      v82[2] = (uint64_t)v63;
      v82[3] = v66;
      v82[4] = v59;
      v82[5] = v61;
      v84 = v88;
      v82[6] = v83;
      v82[7] = v84;
      v85 = (uint64_t)v95;
      v82[8] = (uint64_t)v64;
      v82[9] = v85;
      v82[10] = v92;
      return result;
    }
    goto LABEL_59;
  }
  if (!v29)
  {
    v43 = 0;
    v40 = v95;
LABEL_35:
    v44 = v91;
LABEL_36:
    v69 = objc_msgSend(v40, "displayName");
    if (!v69)
    {
      v93 = 0;
      v61 = 0;
      if (a3 == 4)
        goto LABEL_39;
      goto LABEL_42;
    }
    v45 = v69;
LABEL_38:
    v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v61 = v70;

    if (a3 == 4)
    {
LABEL_39:
      v71 = v44;
      v72 = objc_msgSend(v40, "originName");
      if (v72)
      {
        v73 = v72;
        v74 = static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
        v88 = v75;
        v89 = v74;

      }
      else
      {
        v88 = 0;
        v89 = 0;
      }
      v44 = v71;
      goto LABEL_45;
    }
LABEL_42:
    v88 = 0;
    v89 = 0;
LABEL_45:
    v76 = v97;
    v62 = sub_1001E75BC(v40, v29, v94, (uint64_t)v25);
    v65 = v77;
    swift_bridgeObjectRelease(v29);
    if (v43)
      v64 = objc_msgSend(v43, "liveStatus");
    else
      v64 = 0;
    v78 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
    v79 = (uint64_t)v87;
    v67 = v96;
    v78(v87, v96, v44);
    v86((char *)v79, 0, 1, v44);
    v63 = sub_1001E7D14(v43, v79);
    v66 = v80;
    sub_100010CC4(v79, (uint64_t *)&unk_10149E730);
    if (!v65)
    {
      v62 = 0;
      v65 = 0xE000000000000000;
    }
    swift_unknownObjectRelease(v43);
    if (v61)
      v59 = v93;
    else
      v59 = 0;
    if (!v61)
      v61 = 0xE000000000000000;
    v57 = v97;
    v81 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 8))(v94, v81);
    goto LABEL_56;
  }
  v40 = v95;
  if ((unint64_t)v29 >> 62)
  {
    if (v29 >= 0)
      v68 = v29 & 0xFFFFFFFFFFFFFF8;
    else
      v68 = v29;
    swift_bridgeObjectRetain(v29);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v68);
    if (result)
      goto LABEL_14;
    goto LABEL_34;
  }
  v41 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain(v29);
  if (!v41)
  {
LABEL_34:
    swift_bridgeObjectRelease(v29);
    v43 = 0;
    goto LABEL_35;
  }
LABEL_14:
  if ((v29 & 0xC000000000000001) != 0)
  {
    v43 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v29);
LABEL_17:
    v44 = v91;
    swift_bridgeObjectRelease(v29);
    v45 = objc_msgSend(v43, "displayName");
    if (v45)
      goto LABEL_38;
    goto LABEL_36;
  }
  if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v43 = *(void **)(v29 + 32);
    swift_unknownObjectRetain(v43);
    goto LABEL_17;
  }
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_1001E89A4(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 3)
    return 1;
  else
    return qword_100E33138[a1 - 2];
}

uint64_t destroy for NearbyTransitDeparturesViewModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_unknownObjectRelease(a1[9]);
}

_QWORD *initializeWithCopy for NearbyTransitDeparturesViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_unknownObjectRetain(v7);
  return a1;
}

_QWORD *assignWithCopy for NearbyTransitDeparturesViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  v12 = a2[9];
  v13 = a1[9];
  a1[9] = v12;
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v13);
  a1[10] = a2[10];
  return a1;
}

_QWORD *assignWithTake for NearbyTransitDeparturesViewModel(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  v6 = a2[3];
  v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[7];
  v11 = a1[7];
  a1[6] = a2[6];
  a1[7] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[9];
  v13 = a1[9];
  a1[8] = a2[8];
  a1[9] = v12;
  swift_unknownObjectRelease(v13);
  a1[10] = a2[10];
  return a1;
}

ValueMetadata *type metadata accessor for NearbyTransitDeparturesViewModel()
{
  return &type metadata for NearbyTransitDeparturesViewModel;
}

uint64_t sub_1001E8BEC(void *a1, char a2, uint64_t a3, char a4, char *a5, uint64_t a6, double a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v32 = a6;
  v30 = a3;
  v31 = a5;
  v11 = type metadata accessor for MapsElevationChart(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - v15;
  v17 = sub_100008B04(&qword_10149FD38);
  __chkstk_darwin(v17);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for MapsElevationChartViewModel(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_6;
  v24 = a1;
  if (!objc_msgSend(v24, "isValid", v30))
  {

LABEL_6:
    v27 = objc_allocWithZone((Class)sub_100008B04(&qword_10149FD40));
    return UIHostingController.init(rootView:)(v27);
  }
  sub_1001E8E4C(v24, a2 & 1, a4 & 1, v31, v32, (uint64_t)v19, a7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_100010CC4((uint64_t)v19, &qword_10149FD38);
    v25 = objc_allocWithZone((Class)sub_100008B04(&qword_10149FD40));
    v26 = UIHostingController.init(rootView:)(v25);

  }
  else
  {
    sub_10003F29C((uint64_t)v19, (uint64_t)v23, type metadata accessor for MapsElevationChartViewModel);
    sub_1000202AC((uint64_t)v23, (uint64_t)v16, type metadata accessor for MapsElevationChartViewModel);
    *(_QWORD *)&v16[*(int *)(v11 + 20)] = 0x4024000000000000;
    v29 = objc_allocWithZone((Class)sub_100008B04(&qword_10149FD48));
    sub_1000202AC((uint64_t)v16, (uint64_t)v13, type metadata accessor for MapsElevationChart);
    v26 = UIHostingController.init(rootView:)(v13);
    sub_1000202F0((uint64_t)v16, type metadata accessor for MapsElevationChart);

    sub_1000202F0((uint64_t)v23, type metadata accessor for MapsElevationChartViewModel);
  }
  return v26;
}

void sub_1001E8E4C(id a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X3>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  double v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  id v40;
  unsigned int v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  void *v49;
  unsigned int v50;
  id v51;
  double v52;
  double v53;
  unsigned int v54;
  double v55;
  unint64_t v56;
  id v57;
  Class isa;
  NSMutableArray *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  id v63;
  BOOL v64;
  id v65;
  id v66;
  void *v67;
  unsigned int v68;
  unsigned int v69;
  double v70;
  double v71;
  double v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  void (*v82)(char *, uint64_t);
  int v83;
  char *v84;
  char v85;
  char v86;
  char *v87;
  char *v88;
  int v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t *v92;
  double v93;
  unint64_t v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  char **v98;
  char **v99;
  id v100;
  void *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  int *v105;
  int *v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  void *v123;
  char *v124;
  int v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  char *v145;
  id v146;
  uint64_t *v147;
  uint64_t v148;
  void *v149;
  id v150;
  id v151;
  __int128 v152;
  uint64_t v153;
  _OWORD v154[2];
  char v155[8];

  v130 = a5;
  v141 = a4;
  v137 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  v136 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v147 = (uint64_t *)((char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_100008B04(&qword_10149A1F0);
  v148 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v127 = (char *)&v120 - v18;
  __chkstk_darwin(v19);
  v126 = (char *)&v120 - v20;
  __chkstk_darwin(v21);
  v140 = (char *)&v120 - v22;
  __chkstk_darwin(v23);
  v139 = (char *)&v120 - v24;
  __chkstk_darwin(v25);
  v138 = (char *)&v120 - v26;
  __chkstk_darwin(v27);
  v135 = (char *)&v120 - v28;
  __chkstk_darwin(v29);
  v134 = (char *)&v120 - v30;
  __chkstk_darwin(v31);
  v129 = (char *)&v120 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v120 - v34;
  v36 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v37 = (unint64_t)String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v36, "objectForKey:", v37);

  if (v38)
  {
    _bridgeAnyObjectToAny(_:)(v154);
    swift_unknownObjectRelease(v38);
  }
  else
  {
    memset(v154, 0, sizeof(v154));
  }
  sub_10000C138((uint64_t)v154, (uint64_t)v155);
  sub_1000110D4((uint64_t)v155, (uint64_t)&v152);
  if (!v153)
  {
    sub_100010CC4((uint64_t)&v152, (uint64_t *)&unk_101493350);
LABEL_19:
    sub_1001E9F10(a1, a2 & 1, (char **)(a3 & 1), v141, v130, a6, a7);
    sub_100010CC4((uint64_t)v155, (uint64_t *)&unk_101493350);
    return;
  }
  sub_10000BE60(&v152, v154);
  sub_100011E20((uint64_t)v154, (uint64_t)&v152);
  v39 = sub_10000E4BC(0, (unint64_t *)&qword_10149E3B0, NSNumber_ptr);
  swift_dynamicCast(&v151, &v152, (char *)&type metadata for Any + 8, v39, 7);
  v40 = v151;
  v41 = objc_msgSend(v151, "BOOLValue");

  if (!v41)
  {
    sub_10000BEAC(v154);
    goto LABEL_19;
  }
  v42 = objc_msgSend(a1, "points");
  if (!v42)
    goto LABEL_116;
  v43 = v42;
  v128 = v35;
  *(_QWORD *)&v152 = 0;
  v133 = sub_10000E4BC(0, &qword_10149FD50, GEOPoint_ptr);
  static Array._forceBridgeFromObjectiveC(_:result:)(v43, &v152, v133);
  v44 = v152;
  if ((_QWORD)v152)
  {

    v45 = v44 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v44 >> 62)
      goto LABEL_98;
    v46 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v44);
    if (!v46)
      goto LABEL_102;
LABEL_10:
    v47 = v46 - 1;
    if (!__OFSUB__(v46, 1))
    {
      v125 = a2;
      a2 = v44 & 0xC000000000000001;
      if ((v44 & 0xC000000000000001) != 0)
        goto LABEL_104;
      if ((v47 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v47 < *(_QWORD *)(v45 + 16))
      {
        v48 = *(id *)(v44 + 8 * v47 + 32);
        goto LABEL_15;
      }
      __break(1u);
LABEL_107:
      if (a3 < 0)
        v119 = a3;
      else
        v119 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(a3, 2);
      v61 = _CocoaArrayWrapper.endIndex.getter(v119);
      goto LABEL_26;
    }
    while (1)
    {
      __break(1u);
LABEL_104:
      v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v44);
LABEL_15:
      v49 = v48;
      v50 = objc_msgSend(v48, "offsetM", swift_bridgeObjectRelease(v44).n128_f64[0]);

      v124 = v16;
      v123 = a1;
      if (a2)
      {
        swift_bridgeObjectRetain(v44);
        v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v44);
        *(_QWORD *)&v52 = swift_bridgeObjectRelease(v44).n128_u64[0];
      }
      else
      {
        if (!*(_QWORD *)(v45 + 16))
          goto LABEL_113;
        v51 = *(id *)(v44 + 32);
      }
      v16 = v128;
      v53 = (double)v50;
      v54 = objc_msgSend(v51, "offsetM", v52);

      v55 = v53 - (double)v54;
      v56 = sub_100448204(v55, *(double *)&v141[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gapWidth]+ *(double *)&v141[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barWidth], a7);
      v7 = v55 / (double)v56;
      v146 = (id)objc_opt_self(NSUnitLength);
      v57 = objc_msgSend(v146, "meters");
      v142 = sub_10000E4BC(0, (unint64_t *)&qword_10149A210, NSUnitLength_ptr);
      Measurement.init(value:unit:)(v57, v142, v7);
      if (!v56)
        break;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v44);
      v59 = sub_1004478D8(isa, v56);

      v60 = sub_100008B04(&qword_10149FD58);
      a2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, v60);

      v37 = *(_QWORD *)(a2 + 16);
      if (!v37)
      {
        v97 = a2;
        goto LABEL_87;
      }
      v122 = a3;
      a3 = *(_QWORD *)(a2 + 32);
      if ((unint64_t)a3 >> 62)
        goto LABEL_107;
      v61 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(*(_QWORD *)(a2 + 32), 2);
LABEL_26:
      a1 = v129;
      if (!v61)
        goto LABEL_115;
      v62 = (a3 & 0xC000000000000001) == 0;
      v121 = a6;
      if ((a3 & 0xC000000000000001) != 0)
      {
        v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
      }
      else
      {
        if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          swift_bridgeObjectRelease(a3);
          __break(1u);
LABEL_116:
          __break(1u);
          goto LABEL_117;
        }
        v63 = *(id *)(a3 + 32);
      }
      v150 = v63;
      swift_bridgeObjectRelease(a3);
      v132 = OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition;
      v64 = __OFSUB__(v61, 1);
      v44 = v61 - 1;
      v45 = v64;
      swift_bridgeObjectRetain(a3);
      if ((v45 & 1) != 0)
      {
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
      }
      else
      {
        v45 = 0;
        v144 = 0;
        v131 = v37 - 1;
        v16 = (char *)_swiftEmptyArrayStorage;
        v143 = v14;
        while (1)
        {
          if (v62)
          {
            if (v44 < 0)
              goto LABEL_89;
            if ((unint64_t)v44 >= *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_90;
            v65 = *(id *)(a3 + 8 * v44 + 32);
          }
          else
          {
            v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, a3);
          }
          v149 = v65;
          v14 = (uint64_t)a1;
          a6 = a2;
          swift_bridgeObjectRelease(a3);
          v66 = objc_msgSend(objc_allocWithZone((Class)GEOPoint), "init");
          if (!v66)
            goto LABEL_114;
          v67 = v66;
          v44 = (uint64_t)&selRef_observedKeyPaths;
          a1 = v150;
          v37 = (unint64_t)objc_msgSend(v150, "offsetM");
          a2 = (unint64_t)objc_msgSend(v149, "offsetM");
          v68 = objc_msgSend(a1, "offsetM");
          v69 = a2 - v68;
          if (a2 < v68)
            break;
          if (__CFADD__((_DWORD)v37, v69 >> 1))
            goto LABEL_92;
          objc_msgSend(v67, "setOffsetM:", v37 + (v69 >> 1));
          v37 = (unint64_t)Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(a3);
          v70 = sub_100447598((void *)v37);

          v71 = v70 / v7;
          if ((~COERCE__INT64(v70 / v7) & 0x7FF0000000000000) == 0)
            goto LABEL_93;
          if (v71 <= -2147483650.0)
            goto LABEL_94;
          if (v71 >= 2147483650.0)
            goto LABEL_95;
          v145 = v16;
          objc_msgSend(v67, "setElevationCm:", (int)v71);
          v72 = (double)objc_msgSend(v67, "offsetM");
          v73 = objc_msgSend(v146, "meters");
          a1 = (id)v14;
          v74 = v142;
          Measurement.init(value:unit:)(v73, v142, v72);
          a2 = *(_QWORD *)(v148 + 16);
          if (v141[v132] == 1)
          {
            v75 = v14;
            v76 = v134;
            v77 = v14;
            v14 = v143;
            ((void (*)(char *, uint64_t, uint64_t))a2)(v134, v77, v143);
            v78 = v135;
            static Measurement<>.+ infix(_:_:)(v75, v128, v74);
            v79 = sub_1000DF588();
            v80 = v130;
            v81 = dispatch thunk of static Comparable.< infix(_:_:)(v76, v130, v14, v79);
            ((void (*)(char *, uint64_t, uint64_t))a2)(v138, v80, v14);
            ((void (*)(char *, char *, uint64_t))a2)(v139, v76, v14);
            ((void (*)(char *, char *, uint64_t))a2)(v140, v78, v14);
            if ((v81 & 1) != 0 || v45)
            {
              v84 = v138;
              v85 = dispatch thunk of static Comparable.< infix(_:_:)(v138, v139, v143, v79);
              v14 = v143;
              v86 = v85;
              v87 = v126;
              ((void (*)(char *, char *, uint64_t))a2)(v126, v84, v143);
              v88 = v127;
              ((void (*)(char *, char *, uint64_t))a2)(v127, v140, v14);
              if ((v86 & 1) != 0)
                v89 = 0;
              else
                v89 = static Measurement.< infix<A, B>(_:_:)(v87, v88, v142, v142, v142);
              a1 = v129;
              v90 = *(void (**)(char *, uint64_t))(v148 + 8);
              v90(v88, v14);
              v90(v87, v14);
              v90(v140, v14);
              v90(v139, v14);
              v90(v138, v14);
              v90(v135, v14);
              v90(v134, v14);
              v83 = v89 | v144;
            }
            else
            {
              v82 = *(void (**)(char *, uint64_t))(v148 + 8);
              v82(v140, v14);
              v82(v139, v14);
              v82(v138, v14);
              v82(v135, v14);
              v82(v134, v14);
              v83 = 1;
              a1 = v129;
            }
            v74 = v142;
          }
          else
          {
            v83 = v144;
            v14 = v143;
          }
          v91 = v137;
          v92 = v147;
          ((void (*)(char *, id, uint64_t))a2)((char *)v147 + *(int *)(v137 + 20), a1, v14);
          v93 = (double)(int)objc_msgSend(v67, "elevationCm");
          Measurement.init(value:unit:)(objc_msgSend(v146, "centimeters"), v74, v93);
          *v92 = v45;
          *((_BYTE *)v92 + *(int *)(v91 + 28)) = (v83 & 1) == 0;
          v16 = v145;
          if ((swift_isUniquelyReferenced_nonNull_native(v145) & 1) == 0)
            v16 = (char *)sub_1000A8AB4(0, *((_QWORD *)v16 + 2) + 1, 1, (unint64_t)v16);
          v37 = *((_QWORD *)v16 + 2);
          v94 = *((_QWORD *)v16 + 3);
          a3 = v37 + 1;
          v144 = v83;
          if (v37 >= v94 >> 1)
            v16 = (char *)sub_1000A8AB4(v94 > 1, v37 + 1, 1, (unint64_t)v16);
          *((_QWORD *)v16 + 2) = a3;
          sub_10003F29C((uint64_t)v147, (uint64_t)&v16[((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80))+ *(_QWORD *)(v136 + 72) * v37], type metadata accessor for MapsElevationChartViewModel.ElevationDatum);

          v44 = *(_QWORD *)(v148 + 8);
          ((void (*)(id, uint64_t))v44)(a1, v14);
          if (v131 == v45)
          {
            swift_bridgeObjectRelease(a6);
            if ((v125 & 1) != 0)
              v98 = &selRef_meters;
            else
              v98 = &selRef_feet;
            if ((v125 & 1) != 0)
              v99 = &selRef_kilometers;
            else
              v99 = &selRef_miles;
            v100 = sub_1001EB228(v123, v125 & 1);
            v149 = v101;
            v150 = v100;
            v102 = (uint64_t)v16;
            v104 = v103;
            v106 = v105;
            v107 = v146;
            v108 = objc_msgSend(v146, *v98);
            v109 = objc_msgSend(v107, *v99);
            v110 = (uint64_t)v124;
            ((void (*)(char *, uint64_t, uint64_t))a2)(v124, v130, v14);
            v111 = swift_allocObject(&unk_1011AB0E0, 25, 7);
            v112 = v141;
            *(_QWORD *)(v111 + 16) = v141;
            *(_BYTE *)(v111 + 24) = v122 & 1;
            v113 = v112;
            v114 = v121;
            sub_1000D7F3C(v102, v108, v109, v110, (uint64_t)v150, v149, v104, v106, v121, a7, 100.0, v113, 0, 0, 1u, (uint64_t)sub_1001EB658, (void *)v111);
            ((void (*)(char *, uint64_t))v44)(v128, v14);
            sub_10000BEAC(v154);
            sub_100010CC4((uint64_t)v155, (uint64_t *)&unk_101493350);
            v115 = type metadata accessor for MapsElevationChartViewModel(0);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v114, 0, 1, v115);
            return;
          }
          if ((unint64_t)(v45 + 1) >= *(_QWORD *)(a6 + 16))
            goto LABEL_96;
          a2 = a6;
          a3 = *(_QWORD *)(a6 + 8 * v45 + 40);
          if ((unint64_t)a3 >> 62)
          {
            if (a3 < 0)
              v96 = *(_QWORD *)(a6 + 8 * v45 + 40);
            else
              v96 = a3 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n(*(_QWORD *)(a6 + 8 * v45 + 40), 3);
            v44 = _CocoaArrayWrapper.endIndex.getter(v96);
            swift_bridgeObjectRelease(a3);
            if (!v44)
              goto LABEL_115;
          }
          else
          {
            v44 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n(*(_QWORD *)(a6 + 8 * v45 + 40), 2);
            if (!v44)
              goto LABEL_115;
          }
          v62 = (a3 & 0xC000000000000001) == 0;
          if ((a3 & 0xC000000000000001) != 0)
          {
            v95 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
          }
          else
          {
            if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_97;
            v95 = *(id *)(a3 + 32);
          }
          v150 = v95;
          swift_bridgeObjectRelease(a3);
          v64 = __OFSUB__(v44--, 1);
          v37 = v64;
          swift_bridgeObjectRetain(a3);
          ++v45;
          if ((v37 & 1) != 0)
            goto LABEL_88;
        }
      }
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      if (v44 >= 0)
        v118 = v45;
      else
        v118 = v44;
      swift_bridgeObjectRetain(v44);
      v46 = _CocoaArrayWrapper.endIndex.getter(v118);
      if (v46)
        goto LABEL_10;
LABEL_102:
      swift_bridgeObjectRelease(v44);
      __break(1u);
    }
    v97 = v44;
LABEL_87:
    v116 = swift_bridgeObjectRelease(v97);
    (*(void (**)(char *, uint64_t, __n128))(v148 + 8))(v16, v14, v116);
    sub_10000BEAC(v154);
    sub_100010CC4((uint64_t)v155, (uint64_t *)&unk_101493350);
    v117 = type metadata accessor for MapsElevationChartViewModel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(a6, 1, 1, v117);
    return;
  }
LABEL_117:
  __break(1u);
}

id sub_1001E9F10@<X0>(void *a1@<X0>, int a2@<W1>, char **a3@<X3>, char *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  unint64_t v7;
  double v8;
  double v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (**v18)(char *, char **, __n128);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (**v41)(char *, char **, __n128);
  uint64_t v42;
  double v43;
  uint64_t v44;
  id result;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  void *v52;
  unsigned int v53;
  id v54;
  double v55;
  double v56;
  unsigned int v57;
  double v58;
  unint64_t v59;
  id v60;
  Class isa;
  id v62;
  uint64_t v63;
  char **v64;
  const char *v65;
  id v66;
  uint64_t v67;
  int v68;
  id v69;
  void *v70;
  __n128 v71;
  uint64_t v72;
  int v73;
  int *v74;
  _QWORD *v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  char *v80;
  double v81;
  void (*v82)(char *, uint64_t);
  id v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (**v88)(char *, char **, __n128);
  uint64_t v89;
  void (*v90)(char *, char **, __n128);
  char *v91;
  void (*v92)(char *, char **, __n128);
  char *v93;
  unint64_t v94;
  uint64_t v95;
  char v96;
  void (*v97)(char *, char **, __n128);
  char **v98;
  char *v99;
  char v100;
  char *v101;
  void (*v102)(char *, char **, __n128);
  char *v103;
  void (**v104)(char *, char **, __n128);
  int v105;
  char *v106;
  int v107;
  void (*v108)(char *, char **, __n128);
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  id v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  double v117;
  void (*v118)(char *, uint64_t);
  id v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  int *v127;
  void (**v128)(char *, char **, __n128);
  char *v129;
  char **v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(char *, char **, __n128);
  void *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  int *v140;
  int *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  unsigned int v147;
  double Double;
  void (**v149)(char *, char **, __n128);
  id v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  double v155;
  double v156;
  double v157;
  double v158;
  double v159;
  void *v160;
  double v161;
  void (**v162)(char *, char **, __n128);
  id v163;
  char *v164;
  uint64_t v165;
  id v166;
  void (**v167)(char *, char **, __n128);
  void (**v168)(char *, char **, __n128);
  uint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  id v176;
  void *v177;
  void *v178;
  void (**v179)(char *, char **, __n128);
  char *v180;
  int v181;
  void *v182;
  void *v183;
  uint64_t v184;
  id v185;
  int v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  int v193;
  int *v194;
  char *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  unint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  void (*v206)(char *, char **, __n128);
  id v207;
  uint64_t v208;
  void (*v209)(char *, uint64_t);
  _QWORD *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  char *v214;
  uint64_t v215;
  int *v216;
  void (**v217)(char *, char **, __n128);
  void (**v218)(char *, char **, __n128);
  uint64_t v219;

  v191 = a5;
  v189 = a4;
  v186 = a2;
  v184 = a6;
  v200 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  v199 = *(_QWORD *)(v200 - 8);
  __chkstk_darwin(v200);
  v214 = (char *)&v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008B04(&qword_10149FD60);
  v198 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v213 = (char *)&v179 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v212 = (char *)&v179 - v17;
  v190 = sub_100008B04(&qword_10149A1F0);
  v18 = *(void (***)(char *, char **, __n128))(v190 - 8);
  __chkstk_darwin(v190);
  v20 = (char *)&v179 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v179 - v22;
  __chkstk_darwin(v24);
  v188 = (char *)&v179 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v179 - v27;
  __chkstk_darwin(v29);
  v205 = (char *)&v179 - v30;
  __chkstk_darwin(v31);
  v204 = (char *)&v179 - v32;
  __chkstk_darwin(v33);
  v203 = (char *)&v179 - v34;
  __chkstk_darwin(v35);
  v197 = (char *)&v179 - v36;
  __chkstk_darwin(v37);
  v196 = (char *)&v179 - v38;
  __chkstk_darwin(v39);
  v41 = (void (**)(char *, char **, __n128))((char *)&v179 - v40);
  *(_QWORD *)&v43 = __chkstk_darwin(v42).n128_u64[0];
  v195 = (char *)&v179 - v44;
  v182 = a1;
  result = objc_msgSend(a1, "points", v43);
  if (!result)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v46 = result;
  v218 = v18;
  v219 = 0;
  v187 = v28;
  v180 = v20;
  v47 = sub_10000E4BC(0, &qword_10149FD50, GEOPoint_ptr);
  result = (id)static Array._forceBridgeFromObjectiveC(_:result:)(v46, &v219, v47);
  v48 = v219;
  if (!v219)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }

  if (!((unint64_t)v48 >> 62))
  {
    v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v48);
    if (v49)
      goto LABEL_5;
LABEL_65:
    swift_bridgeObjectRelease(v48);
    __break(1u);
    goto LABEL_66;
  }
  if (v48 >= 0)
    v172 = v48 & 0xFFFFFFFFFFFFFF8;
  else
    v172 = v48;
  swift_bridgeObjectRetain(v48);
  v49 = _CocoaArrayWrapper.endIndex.getter(v172);
  if (!v49)
    goto LABEL_65;
LABEL_5:
  v50 = v49 - 1;
  if (__OFSUB__(v49, 1))
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v7 = v48 & 0xC000000000000001;
  v181 = (int)a3;
  v201 = v23;
  if ((v48 & 0xC000000000000001) == 0)
  {
    if ((v50 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v50 < *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v51 = *(id *)(v48 + 8 * v50 + 32);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_70;
  }
LABEL_67:
  v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v48);
LABEL_10:
  v52 = v51;
  a3 = &selRef_observedKeyPaths;
  v53 = objc_msgSend(v51, "offsetM", swift_bridgeObjectRelease(v48).n128_f64[0]);

  v217 = v41;
  if (v7)
  {
    swift_bridgeObjectRetain(v48);
    v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v48);
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v48).n128_u64[0];
  }
  else
  {
    if (!*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_71:
      __break(1u);
LABEL_72:
      if (v49 < 0)
        v173 = v49;
      else
        v173 = v49 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v49);
      v72 = _CocoaArrayWrapper.endIndex.getter(v173);
      v71 = swift_bridgeObjectRelease(v49);
      if (v72 >= 1)
        goto LABEL_32;
LABEL_76:
      v41[1](v195, a3, v71);
      swift_bridgeObjectRelease(v49);

      v174 = type metadata accessor for MapsElevationChartViewModel(0);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56))(v184, 1, 1, v174);
    }
    v54 = *(id *)(v48 + 32);
  }
  v56 = (double)v53;
  v57 = objc_msgSend(v54, "offsetM", v55);

  v58 = v56 - (double)v57;
  v9 = *(double *)&v189[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gapWidth]
     + *(double *)&v189[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barWidth];
  v59 = sub_100448204(v58, v9, a7);
  v8 = v58 / (double)v59;
  v41 = (void (**)(char *, char **, __n128))objc_opt_self(NSUnitLength);
  v60 = objc_msgSend(v41, "meters");
  v215 = sub_10000E4BC(0, (unint64_t *)&qword_10149A210, NSUnitLength_ptr);
  Measurement.init(value:unit:)(v60, v215, v8);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v62 = sub_100447F20(isa, v59, v9);

  v63 = sub_10000E4BC(0, &qword_10149FD68, off_101196118);
  v202 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v62, v63);

  v64 = &selRef_feet;
  if ((v186 & 1) != 0)
  {
    v64 = &selRef_meters;
    a3 = &selRef_kilometers;
  }
  else
  {
    a3 = &selRef_miles;
  }
  v185 = objc_msgSend(v41, *v64);
  v65 = *a3;
  v179 = v41;
  v66 = objc_msgSend(v41, v65);
  if (v49 < 1)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v183 = v66;
  v67 = 0;
  v9 = INFINITY;
  v8 = -INFINITY;
  do
  {
    if (v7)
      v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v67, v48);
    else
      v69 = *(id *)(v48 + 8 * v67 + 32);
    v70 = v69;
    if (v9 > (double)(int)objc_msgSend(v69, "elevationCm"))
      v9 = (double)(int)objc_msgSend(v70, "elevationCm");
    if (v8 < (double)(int)objc_msgSend(v70, "elevationCm"))
    {
      v68 = objc_msgSend(v70, "elevationCm");

      v8 = (double)v68;
    }
    else
    {

    }
    ++v67;
  }
  while (v49 != v67);
  v71 = swift_bridgeObjectRelease(v48);
  v49 = v202;
  v41 = v218;
  a3 = (char **)v190;
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0 || (~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
    goto LABEL_76;
  if (v202 >> 62)
    goto LABEL_72;
  v72 = *(_QWORD *)((v202 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v72 < 1)
    goto LABEL_76;
LABEL_32:
  v73 = 0;
  v74 = 0;
  v193 = v189[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition];
  v192 = v49 & 0xC000000000000001;
  v75 = _swiftEmptyArrayStorage;
  v211 = v14;
  v194 = (int *)v72;
  do
  {
    v210 = v75;
    v216 = v74;
    if (v192)
      v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v74, v49);
    else
      v76 = *(id *)(v49 + 8 * (_QWORD)v74 + 32);
    v77 = v76;
    v78 = objc_msgSend(v76, "offsetMeasurement");
    v79 = sub_10000E4BC(0, (unint64_t *)&unk_10149FD70, NSUnit_ptr);
    v80 = v212;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v78, v79);

    v81 = Measurement.value.getter(v14);
    v82 = *(void (**)(char *, uint64_t))(v198 + 8);
    v82(v80, v14);
    v83 = objc_msgSend(v77, "offsetMeasurement");
    v84 = v213;
    v208 = v79;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v83, v79);

    v85 = Measurement.unit.getter(v14);
    v209 = v82;
    v82(v84, v14);
    v86 = objc_opt_self(NSUnitLength);
    v87 = swift_dynamicCastObjCClassUnconditional(v85, v86, 0, 0, 0);
    v88 = v217;
    v89 = v215;
    Measurement.init(value:unit:)(v87, v215, v81);
    v90 = v218[2];
    v206 = v90;
    if (v193)
    {
      LODWORD(v207) = v73;
      v91 = v196;
      v92 = v90;
      ((void (*)(char *, void (**)(char *, char **, __n128), char **))v90)(v196, v88, a3);
      v93 = v197;
      static Measurement<>.+ infix(_:_:)(v88, v195, v89);
      v94 = sub_1000DF588();
      v95 = v191;
      v96 = dispatch thunk of static Comparable.< infix(_:_:)(v91, v191, a3, v94);
      ((void (*)(char *, uint64_t, char **))v92)(v203, v95, a3);
      ((void (*)(char *, char *, char **))v92)(v204, v91, a3);
      ((void (*)(char *, char *, char **))v92)(v205, v93, a3);
      if ((v96 & 1) != 0 || v216)
      {
        v99 = v203;
        v100 = dispatch thunk of static Comparable.< infix(_:_:)(v203, v204, a3, v94);
        v101 = v187;
        v102 = v206;
        ((void (*)(char *, char *, char **))v206)(v187, v99, a3);
        v103 = v188;
        ((void (*)(char *, char *, char **))v102)(v188, v205, a3);
        v104 = v218;
        if ((v100 & 1) != 0)
          v105 = 0;
        else
          v105 = static Measurement.< infix<A, B>(_:_:)(v101, v103, v215, v215, v215);
        v106 = v101;
        v107 = (int)v207;
        v108 = v104[1];
        v109 = v103;
        v110 = v190;
        ((void (*)(char *, uint64_t))v108)(v109, v190);
        v111 = v106;
        v98 = (char **)v110;
        ((void (*)(char *, uint64_t))v108)(v111, v110);
        ((void (*)(char *, uint64_t))v108)(v205, v110);
        ((void (*)(char *, uint64_t))v108)(v204, v110);
        ((void (*)(char *, uint64_t))v108)(v203, v110);
        ((void (*)(char *, uint64_t))v108)(v197, v110);
        ((void (*)(char *, uint64_t))v108)(v196, v110);
        v73 = v105 | v107;
      }
      else
      {
        v97 = v218[1];
        v98 = a3;
        ((void (*)(char *, char **))v97)(v205, a3);
        ((void (*)(char *, char **))v97)(v204, a3);
        ((void (*)(char *, char **))v97)(v203, a3);
        ((void (*)(char *, char **))v97)(v197, a3);
        ((void (*)(char *, char **))v97)(v196, a3);
        v73 = 1;
      }
      v88 = v217;
      v90 = v206;
    }
    else
    {
      v98 = a3;
    }
    v112 = v201;
    ((void (*)(char *, void (**)(char *, char **, __n128), char **))v90)(v201, v88, v98);
    v113 = objc_msgSend(v77, "elevationMeasurement");
    v114 = v212;
    v115 = v208;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v113, v208);

    v116 = v211;
    v117 = Measurement.value.getter(v211);
    v118 = v209;
    v209(v114, v116);
    v207 = v77;
    v119 = objc_msgSend(v77, "elevationMeasurement");
    v120 = v213;
    static Measurement._unconditionallyBridgeFromObjectiveC(_:)(v119, v115);

    v121 = Measurement.unit.getter(v116);
    v118(v120, v116);
    v122 = objc_opt_self(NSUnitLength);
    v123 = swift_dynamicCastObjCClassUnconditional(v121, v122, 0, 0, 0);
    v124 = v200;
    v126 = v214;
    v125 = v215;
    Measurement.init(value:unit:)(v123, v215, v117);
    v127 = v216;
    *(_QWORD *)v126 = v216;
    v128 = v218;
    v129 = v112;
    v130 = v98;
    ((void (*)(char *, char *, char **))v218[4])(&v126[*(int *)(v124 + 20)], v129, v98);
    v126[*(int *)(v124 + 28)] = (v73 & 1) == 0;
    v75 = v210;
    if ((swift_isUniquelyReferenced_nonNull_native(v210) & 1) == 0)
      v75 = (_QWORD *)sub_1000A8AB4(0, v75[2] + 1, 1, (unint64_t)v75);
    v132 = v75[2];
    v131 = v75[3];
    v14 = v211;
    if (v132 >= v131 >> 1)
      v75 = (_QWORD *)sub_1000A8AB4(v131 > 1, v132 + 1, 1, (unint64_t)v75);
    v74 = (int *)((char *)v127 + 1);
    v75[2] = v132 + 1;
    sub_10003F29C((uint64_t)v214, (uint64_t)v75+ ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80))+ *(_QWORD *)(v199 + 72) * v132, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);

    v133 = v128[1];
    a3 = v130;
    ((void (*)(void (**)(char *, char **, __n128), char **))v133)(v217, v130);
    v49 = v202;
  }
  while (v194 != v74);
  swift_bridgeObjectRelease(v202);
  v134 = v182;
  v135 = (char *)sub_1001EB228(v182, v186 & 1);
  v137 = v136;
  v139 = v138;
  v141 = v140;
  if (GEOConfigGetBOOL(MapsConfig_ElevationGraphSkipSmoothing, off_1014B38E8))
  {
    v142 = (uint64_t)v201;
    ((void (*)(char *, uint64_t, char **))v206)(v201, v191, v130);
    v143 = (uint64_t)v135;
    v144 = swift_allocObject(&unk_1011AB130, 25, 7);
    v145 = v189;
    *(_QWORD *)(v144 + 16) = v189;
    *(_BYTE *)(v144 + 24) = v181 & 1;
    v177 = (void *)v144;
    v175 = v145;
    v146 = v184;
    sub_1000D7F3C((uint64_t)v75, v185, v183, v142, v143, v137, v139, v141, v184, a7, 100.0, v175, 0, 0, 1u, (uint64_t)sub_1001EB658, v177);
LABEL_60:
    ((void (*)(char *, char **))v133)(v195, v130);
    v171 = type metadata accessor for MapsElevationChartViewModel(0);
    return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v146, 0, 1, v171);
  }
  v147 = objc_msgSend(v134, "hasMinimumVisibleElevationRange");
  v210 = v75;
  v216 = v141;
  v217 = (void (**)(char *, char **, __n128))v137;
  v218 = (void (**)(char *, char **, __n128))v139;
  v214 = v135;
  if (!v147
    || (GEOConfigGetBOOL(MapsConfig_ElevationGraphIgnoreServerMinimumRange, off_1014B3AB8) & 1) != 0)
  {
    Double = GEOConfigGetDouble(MapsConfig_ElevationGraphSmoothingAdjustment, off_1014B38D8);
    v149 = v179;
    v150 = objc_msgSend(v179, "meters");
    v151 = v180;
    Measurement.init(value:unit:)(v150, v125, Double);
    v152 = (uint64_t)v201;
    v153 = v125;
    v154 = v185;
    Measurement<>.converted(to:)(v185, v130);
    ((void (*)(char *, char **))v133)(v151, v130);
    v155 = Measurement.value.getter(v130);
    ((void (*)(uint64_t, char **))v133)(v152, v130);
    Measurement.init(value:unit:)(objc_msgSend(v149, "centimeters"), v153, v9);
    Measurement<>.converted(to:)(v154, v130);
    ((void (*)(char *, char **))v133)(v151, v130);
    v156 = Measurement.value.getter(v130);
    ((void (*)(uint64_t, char **))v133)(v152, v130);
    v157 = v155 + v156;
    Measurement.init(value:unit:)(objc_msgSend(v149, "centimeters"), v153, v8);
    Measurement<>.converted(to:)(v154, v130);
    ((void (*)(char *, char **))v133)(v151, v130);
    v158 = Measurement.value.getter(v130);
    ((void (*)(uint64_t, char **))v133)(v152, v130);
    v159 = v158 - v155;
LABEL_58:
    result = (id)((uint64_t (*)(uint64_t, uint64_t, char **))v206)(v152, v191, v130);
    v168 = v217;
    v167 = v218;
    if (v157 <= v159)
    {
      v169 = swift_allocObject(&unk_1011AB108, 25, 7);
      v170 = v189;
      *(_QWORD *)(v169 + 16) = v189;
      *(_BYTE *)(v169 + 24) = v181 & 1;
      v178 = (void *)v169;
      v176 = v170;
      v146 = v184;
      sub_1000D7F3C((uint64_t)v210, v185, v183, v152, (uint64_t)v214, v168, v167, v216, v184, a7, 100.0, v176, *(uint64_t *)&v157, *(uint64_t *)&v159, 0, (uint64_t)sub_1001EB630, v178);
      goto LABEL_60;
    }
    __break(1u);
    goto LABEL_78;
  }
  result = objc_msgSend(v134, "minimumVisibleElevationRange");
  if (result)
  {
    v160 = result;
    v161 = (double)(int)objc_msgSend(result, "lowerBoundCm");
    v162 = v179;
    v163 = objc_msgSend(v179, "centimeters");
    v164 = v180;
    Measurement.init(value:unit:)(v163, v125, v161);
    v152 = (uint64_t)v201;
    v165 = v125;
    v166 = v185;
    Measurement<>.converted(to:)(v185, v130);
    ((void (*)(char *, char **))v133)(v164, v130);
    v157 = Measurement.value.getter(v130);
    ((void (*)(uint64_t, char **))v133)(v152, v130);
    Measurement.init(value:unit:)(objc_msgSend(v162, "centimeters"), v165, (double)(int)objc_msgSend(v160, "upperBoundCm"));
    Measurement<>.converted(to:)(v166, v130);
    ((void (*)(char *, char **))v133)(v164, v130);
    v159 = Measurement.value.getter(v130);

    ((void (*)(uint64_t, char **))v133)(v152, v130);
    goto LABEL_58;
  }
LABEL_80:
  __break(1u);
  return result;
}

id sub_1001EB1D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsElevationGraphViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MapsElevationGraphViewController()
{
  return objc_opt_self(_TtC4Maps32MapsElevationGraphViewController);
}

id sub_1001EB228(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id result;
  void *v13;
  void *v14;
  uint64_t v15;
  char **v16;
  id v17;
  double v18;
  id v19;
  void *v20;
  void (*v21)(char *, uint64_t);
  double v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t countAndFlagsBits;
  double v27;
  id v28;
  void *v29;
  double v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;

  v4 = sub_100008B04(&qword_10149A1F0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  v11 = objc_msgSend(objc_allocWithZone((Class)NSLengthFormatter), "init");
  result = objc_msgSend(v11, "numberFormatter");
  if (result)
  {
    v13 = result;
    objc_msgSend(result, "setMaximumFractionDigits:", 1);

    objc_msgSend(v11, "setUnitStyle:", 2);
    v14 = (void *)objc_opt_self(NSUnitLength);
    if ((a2 & 1) != 0)
      v15 = 11;
    else
      v15 = 1282;
    v34 = v15;
    v16 = &selRef_feet;
    if ((a2 & 1) != 0)
      v16 = &selRef_meters;
    v17 = objc_msgSend(v14, *v16, v34);
    v35 = v17;
    v18 = (double)objc_msgSend(a1, "sumElevationGainCm") / 100.0;
    v37 = (id)objc_opt_self(NSUnitLength);
    v19 = objc_msgSend(v37, "meters");
    v36 = sub_10000E4BC(0, (unint64_t *)&qword_10149A210, NSUnitLength_ptr);
    Measurement.init(value:unit:)(v19, v36, v18);
    Measurement<>.converted(to:)(v17, v4);
    v20 = a1;
    v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v7, v4);
    v22 = Measurement.value.getter(v4);
    v21(v10, v4);
    v23 = objc_msgSend(v11, "stringFromValue:unit:", v15, ceil(v22));
    static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v25 = v24;

    countAndFlagsBits = String.uppercased()()._countAndFlagsBits;
    v27 = (double)objc_msgSend(v20, "sumElevationLossCm", swift_bridgeObjectRelease(v25).n128_f64[0])
        / 100.0;
    v28 = objc_msgSend(v37, "meters");
    Measurement.init(value:unit:)(v28, v36, v27);
    v29 = v35;
    Measurement<>.converted(to:)(v35, v4);
    v21(v7, v4);
    v30 = Measurement.value.getter(v4);
    v21(v10, v4);
    v31 = objc_msgSend(v11, "stringFromValue:unit:", v34, ceil(v30));
    static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v33 = v32;

    String.uppercased()();
    swift_bridgeObjectRelease(v33);
    return (id)countAndFlagsBits;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001EB574()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001EB598(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barHighlightColor);
  if (v5)
  {
    if ((a4 & 1) != 0)
      return v5;
    return *(_QWORD *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor);
  }
  if (*(_BYTE *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_usesCurrentPosition) != 1)
    return *(_QWORD *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor);
  v5 = *(_QWORD *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barElapsedColor);
  if (!v5
    || (*(_BYTE *)(a1 + *(int *)(type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0) + 28)) & 1) == 0)
  {
    return *(_QWORD *)(a3 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor);
  }
  return v5;
}

id sub_1001EB630(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (id)sub_1001EB598(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHighlightExtra()
{
  return &type metadata for PlaceSummaryUnitHighlightExtra;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitInUserLibrary()
{
  return &type metadata for PlaceSummaryUnitInUserLibrary;
}

id sub_1001EB67C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath);
  }
  else
  {
    v4 = sub_1001FD8EC();
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend(v4, "identifierPathByAppendingIdentifier:", v5);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

double sub_1001EB728@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  id v9;
  uint64_t v10;
  double result;
  _BYTE v12[8];
  id v13;
  uint64_t v14;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 64);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v4, "homeResult");
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, "isCuratedCollectionSectionValid");

      if ((v7 & 1) != 0)
      {
        v8 = v4;
        v9 = sub_1001EB67C();
        v13 = v8;
        swift_unknownObjectWeakInit(v12);
        swift_unknownObjectWeakAssign(v12, v1);
        sub_1000207BC((uint64_t)v12, (uint64_t)&v14, &qword_10149FDD8);
        *(_QWORD *)(a1 + 32) = &type metadata for HomeListCuratedCollectionsCellModel;
        *(_QWORD *)(a1 + 40) = sub_1001EC50C();
        v10 = swift_allocObject(&unk_1011AB1E0, 32, 7);
        *(_QWORD *)(a1 + 8) = v10;
        sub_1001EC57C(&v13, (_QWORD *)(v10 + 16));
        *(_QWORD *)a1 = v9;
        return result;
      }
    }
    else
    {

    }
  }
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

void sub_1001EB84C()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath));
}

id sub_1001EB85C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListCuratedCollectionsSectionController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomeListCuratedCollectionsSectionController()
{
  return objc_opt_self(_TtC4Maps43HomeListCuratedCollectionsSectionController);
}

_QWORD *sub_1001EB8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;
  _BYTE v11[40];

  v1 = sub_100008B04(&qword_10149FDD0);
  inited = swift_initStackObject(v1, v11);
  *(_OWORD *)(inited + 16) = xmmword_100E22F40;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 64);
  *(_QWORD *)(inited + 32) = v3;
  v10 = inited;
  specialized Array._endMutation()(inited);
  v4 = *(_QWORD *)(v10 + 32);
  if (v4)
  {
    swift_unknownObjectRetain(*(_QWORD *)(v10 + 32));
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    v6 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v5 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v6 >= v5 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
    v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
    specialized Array._endMutation()(v7);
  }
  else
  {
    v8 = v3;
  }
  swift_bridgeObjectRelease(v10);
  return _swiftEmptyArrayStorage;
}

void sub_1001EB9BC(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  unsigned int v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[8];

  v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 64);
  if (!v3)
    goto LABEL_8;
  v4 = v3;
  v5 = objc_msgSend(v4, "homeResult");
  if (!v5)
  {
LABEL_7:

LABEL_8:
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "isCuratedCollectionSectionValid");

  if (!v7)
  {
    v4 = v6;
    goto LABEL_7;
  }
  v8 = objc_msgSend(v6, "curatedCollectionSectionName");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v12;
  *(_WORD *)(a1 + 16) = 0;
  swift_unknownObjectWeakInit(v13);
  swift_unknownObjectWeakAssign(v13, 0);
  sub_1000207BC((uint64_t)v13, a1 + 24, (uint64_t *)&unk_101498C70);

  *(_QWORD *)(a1 + 32) = 0xD000000000000016;
  *(_QWORD *)(a1 + 40) = 0x8000000100E52630;
}

_QWORD *sub_1001EBAF0()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  _BYTE v11[48];
  __int128 v12;
  _BYTE v13[48];

  v12 = xmmword_100E22F40;
  sub_1001EB728((uint64_t)v13);
  sub_1001EC4C4((uint64_t)v13, (uint64_t)v11);
  sub_1000207BC((uint64_t)v11, (uint64_t)v10, &qword_10149B500);
  if (*(_QWORD *)&v10[0])
  {
    v7 = v10[0];
    v8 = v10[1];
    v9 = v10[2];
    v0 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v0 = sub_1000A8440(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v2 = v0[2];
    v1 = v0[3];
    if (v2 >= v1 >> 1)
      v0 = sub_1000A8440((_QWORD *)(v1 > 1), v2 + 1, 1, v0);
    v0[2] = v2 + 1;
    v3 = &v0[6 * v2];
    v3[3] = v8;
    v3[4] = v9;
    v3[2] = v7;
  }
  else
  {
    sub_100010CC4((uint64_t)v10, &qword_10149B500);
    v0 = _swiftEmptyArrayStorage;
  }
  v4 = v12;
  v5 = sub_100008B04(&qword_10149B500);
  swift_arrayDestroy(v13, v4, v5);
  return v0;
}

uint64_t sub_1001EBF70()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  id v12;
  id v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  Class v37;
  double v38;
  uint64_t result;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  _OWORD v45[5];

  v1 = v0;
  v2 = (void *)objc_opt_self(NSCollectionLayoutDimension);
  v3 = objc_msgSend(v2, "fractionalWidthDimension:", 1.0);
  objc_msgSend((id)objc_opt_self(HomeCuratedCollectionsCollectionViewCell), "estimatedCellHeight");
  v4 = objc_msgSend(v2, "estimatedDimension:");
  v44 = (id)objc_opt_self(NSCollectionLayoutSize);
  v5 = objc_msgSend(v44, "sizeWithWidthDimension:heightDimension:", v3, v4);

  v6 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutItem), "itemWithLayoutSize:", v5);
  v7 = (void *)objc_opt_self(NSCollectionLayoutGroup);
  v8 = sub_100008B04((uint64_t *)&unk_101493B10);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)&v45[0] = v9;
  specialized Array._endMutation()(v9);
  sub_10000E4BC(0, (unint64_t *)&qword_101498C50, NSCollectionLayoutItem_ptr);
  v10 = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v7, "verticalGroupWithLayoutSize:subitems:", v5, isa, swift_bridgeObjectRelease(*(_QWORD *)&v45[0]).n128_f64[0]);

  v13 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutSection), "sectionWithGroup:", v12);
  sub_1000AB280((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v45);
  Strong = swift_unknownObjectWeakLoadStrong((char *)&v45[1] + 8);
  sub_1000AB2BC((uint64_t)v45);
  if (!Strong)
  {

    return (uint64_t)v13;
  }
  v40 = v5;
  v15 = v8;
  v43 = v10;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v17 = v1;
  else
    v17 = 0;
  if (v17)
  {
    v41 = v12;
    v42 = v13;
    v18 = v1;
    v19 = sub_1001FDD20();
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v22 = v21;
    v23 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v23)
    {
      v24 = v20;
      v25 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000AE4F8(*(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot), v25);
      sub_1000AE4F8(v23, v25);
      v26 = v19;
      swift_bridgeObjectRetain(v22);
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v23);
      sub_10012F24C(v26, v24, v22, 0, v25, v45);
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease_n(v22, 2);

    }
    else
    {
      memset(v45, 0, 64);

      swift_bridgeObjectRelease(v22);
    }

    if (*(_QWORD *)&v45[0])
    {
      sub_100010CC4((uint64_t)v45, (uint64_t *)&unk_10149FDC0);
      v27 = objc_msgSend(v2, "fractionalWidthDimension:", 1.0);
      objc_msgSend((id)objc_opt_self(SectionHeaderCollectionReusableView), "estimatedHeight");
      v28 = objc_msgSend(v2, "estimatedDimension:");
      v29 = objc_msgSend(v44, "sizeWithWidthDimension:heightDimension:", v27, v28);

      static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
      v31 = v30;
      v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
      v33 = objc_msgSend((id)objc_opt_self(NSCollectionLayoutBoundarySupplementaryItem), "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v29, v32, 1);
      swift_unknownObjectRelease(Strong);

      v34 = swift_allocObject(v15, 40, 7);
      *(_OWORD *)(v34 + 16) = xmmword_100E23F50;
      *(_QWORD *)(v34 + 32) = v33;
      *(_QWORD *)&v45[0] = v34;
      specialized Array._endMutation()(v34);
      v35 = *(_QWORD *)&v45[0];
      sub_10000E4BC(0, (unint64_t *)&unk_101496360, NSCollectionLayoutBoundarySupplementaryItem_ptr);
      v36 = v33;
      v37 = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v38 = swift_bridgeObjectRelease(v35).n128_u64[0];
      v13 = v42;
      objc_msgSend(v42, "setBoundarySupplementaryItems:", v37, v38);

    }
    else
    {
      swift_unknownObjectRelease(Strong);
      sub_100010CC4((uint64_t)v45, (uint64_t *)&unk_10149FDC0);
    }

    return (uint64_t)v13;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001EC4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_10149B500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001EC50C()
{
  unint64_t result;

  result = qword_10149FDE0;
  if (!qword_10149FDE0)
  {
    result = swift_getWitnessTable("iw7", &type metadata for HomeListCuratedCollectionsCellModel);
    atomic_store(result, (unint64_t *)&qword_10149FDE0);
  }
  return result;
}

uint64_t sub_1001EC550()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 24);
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1001EC57C(_QWORD *a1, _QWORD *a2)
{
  initializeWithTake for HomeListCuratedCollectionsCellModel(a2, a1);
  return a2;
}

void sub_1001EC5B8(char a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  char v15;
  NSArray v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  Class isa;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_chromeViewController);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = sub_1001ECD0C();
    v6 = objc_msgSend(v4, "searchPinsManager");
    if (!v6)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    v7 = v6;
    v23 = objc_msgSend(v6, "singleSearchResultItemSource");

    if (!v23)
    {

      return;
    }
    if (!v5)
      goto LABEL_11;
    v8 = objc_msgSend(v5, "identifier");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v4, "mapSelectionManager");
      if (!v10)
      {
LABEL_22:
        __break(1u);
        return;
      }
      v11 = v10;
      v12 = objc_msgSend(v10, "labelMarker");

      if (v12)
      {
        v13 = objc_msgSend(v12, "identifier");
        if (v13)
        {
          v14 = v13;
          sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
          v15 = static NSObject.== infix(_:_:)(v14, v9);

          if ((v15 & 1) != 0)
          {

LABEL_11:
            sub_10000E4BC(0, &qword_101494570, off_101197F50);
            v16.super.isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v23, "setSearchResults:", v16.super.isa);
LABEL_19:

            return;
          }
          goto LABEL_17;
        }

      }
      else
      {
        v12 = v9;
      }

    }
LABEL_17:
    v17 = sub_100008B04((uint64_t *)&unk_101493B10);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v18 + 32) = v5;
    v24 = v18;
    specialized Array._endMutation()(v18);
    sub_10000E4BC(0, &qword_101494570, off_101197F50);
    v19 = v5;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v24);
    objc_msgSend(v23, "setSearchResults:", isa);

    v21 = objc_msgSend(v4, "mapSelectionManager");
    if (v21)
    {
      v22 = v21;
      v16.super.isa = (Class)v19;
      objc_msgSend(v22, "selectSearchResult:animated:", v16.super.isa, a1 & 1);

      goto LABEL_19;
    }
    goto LABEL_21;
  }
}

void sub_1001EC884(void *a1)
{
  uint64_t v1;
  void *v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration) = a1;
  v3 = a1;

  v4 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "defaultTraits");

    v7 = *(void **)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_newTraits);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_newTraits) = v6;

    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController), "setPlaceCardItem:withHistory:", *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem], v3[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory]);
    sub_1001EC5B8(1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for PlaceCardContextConfiguration()
{
  return objc_opt_self(_TtC4Maps29PlaceCardContextConfiguration);
}

id sub_1001ECB8C()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController], "resetState");
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "dealloc");
}

id sub_1001ECD0C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v4;
  void *v5;

  v1 = OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration;
  if ((objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration)+ OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem), "isCurrentLocation") & 1) == 0)
  {
    v2 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem), "searchResult");
    if (v2)
      return v2;
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + v1) + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem), "mapItem");
    if (v4)
    {
      v5 = v4;
      if ((objc_msgSend(v4, "isCurrentLocation") & 1) == 0)
      {
        v2 = objc_msgSend(objc_allocWithZone((Class)SearchResult), "initWithMapItem:", v5);

        return v2;
      }

    }
  }
  return 0;
}

uint64_t type metadata accessor for PlaceCardContext()
{
  return objc_opt_self(_TtC4Maps16PlaceCardContext);
}

id sub_1001ECE80(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  void *v4;
  char *v5;
  id result;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v1);
  v4 = (void *)objc_opt_self(MKMapService);
  v5 = v1;
  result = objc_msgSend(v4, "sharedService");
  if (result)
  {
    v7 = result;
    v8 = OBJC_IVAR____TtC4Maps16PlaceCardContext_newTraits;
    v9 = objc_msgSend(result, "defaultTraits");

    *(_QWORD *)&v5[v8] = v9;
    *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_displayedViewMode] = -1;
    swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_chromeViewController], 0);
    *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController] = 0;
    *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration] = a1;
    v10 = objc_allocWithZone((Class)PlaceCardViewController);
    v11 = a1;
    result = objc_msgSend(v10, "initWithVisualEffectDisabled:", 1);
    if (result)
    {
      *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController] = result;

      v12.receiver = v5;
      v12.super_class = ObjectType;
      return objc_msgSendSuper2(&v12, "init");
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall UIView.annotateViewForAvoidTolls()()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];

  v0 = type metadata accessor for AppEntityVisualState(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04(&qword_1014963A0);
  LocalizedStringResource.init(stringLiteral:)(0x6F542064696F7641, 0xEB00000000736C6CLL);
  v7 = sub_1001EE108(&qword_1014964B0, &qword_1014964B8);
  v8 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1014964A0, 0, &unk_1014964A8, 0, &type metadata for AvoidTollsEntity.UpdateIntent_value, v7);
  v12[3] = &type metadata for AvoidTollsEntity;
  v9 = sub_1000731B0();
  v12[4] = v9;
  v12[0] = v8;
  sub_10000BE88(v12, (uint64_t)&type metadata for AvoidTollsEntity);
  swift_retain_n(v8, 2);
  sub_10018598C();
  v11 = v8;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  swift_retain();
  v10 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v11, v3, &type metadata for AvoidTollsEntity, v9);
  UIView.annotate(with:)();

  sub_10000BEAC(v12);
  swift_release_n(v8, 2);
}

Swift::Void __swiftcall UIView.annotateViewForAvoidHighways()()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];

  v0 = type metadata accessor for AppEntityVisualState(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04(&qword_10149C410);
  LocalizedStringResource.init(stringLiteral:)(0x69482064696F7641, 0xEE00737961776867);
  v7 = sub_1001EE108(&qword_10149C510, &qword_10149C518);
  v8 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_10149C500, 0, &unk_10149C508, 0, &type metadata for AvoidHighwaysEntity.UpdateIntent_value, v7);
  v12[3] = &type metadata for AvoidHighwaysEntity;
  v9 = sub_10014B724();
  v12[4] = v9;
  v12[0] = v8;
  sub_10000BE88(v12, (uint64_t)&type metadata for AvoidHighwaysEntity);
  swift_retain_n(v8, 2);
  sub_10018598C();
  v11 = v8;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  swift_retain();
  v10 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v11, v3, &type metadata for AvoidHighwaysEntity, v9);
  UIView.annotate(with:)();

  sub_10000BEAC(v12);
  swift_release_n(v8, 2);
}

Swift::Void __swiftcall UIView.annotateViewForAvoidHillsInWalking()()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];

  v0 = type metadata accessor for AppEntityVisualState(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04(&qword_1014984C8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x8000000100E45B90);
  v7 = sub_1001EE108(&qword_1014985C8, &qword_1014985D0);
  v8 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_1014985B8, 0, &unk_1014985C0, 0, &type metadata for AvoidHillsInWalkingEntity.UpdateIntent_value, v7);
  v12[3] = &type metadata for AvoidHillsInWalkingEntity;
  v9 = sub_10009E72C();
  v12[4] = v9;
  v12[0] = v8;
  sub_10000BE88(v12, (uint64_t)&type metadata for AvoidHillsInWalkingEntity);
  swift_retain_n(v8, 2);
  sub_10018598C();
  v11 = v8;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  swift_retain();
  v10 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v11, v3, &type metadata for AvoidHillsInWalkingEntity, v9);
  UIView.annotate(with:)();

  sub_10000BEAC(v12);
  swift_release_n(v8, 2);
}

Swift::Void __swiftcall UIView.annotateViewForAvoidBusyRoadsInWalking()()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];

  v0 = type metadata accessor for AppEntityVisualState(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04(&qword_10149DC70);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E4D760);
  v7 = sub_1001EE108(&qword_10149DD70, &qword_10149DD78);
  v8 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_10149DD60, 0, &unk_10149DD68, 0, &type metadata for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value, v7);
  v12[3] = &type metadata for AvoidBusyRoadsInWalkingEntity;
  v9 = sub_1001770E8();
  v12[4] = v9;
  v12[0] = v8;
  sub_10000BE88(v12, (uint64_t)&type metadata for AvoidBusyRoadsInWalkingEntity);
  swift_retain_n(v8, 2);
  sub_10018598C();
  v11 = v8;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  swift_retain();
  v10 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v11, v3, &type metadata for AvoidBusyRoadsInWalkingEntity, v9);
  UIView.annotate(with:)();

  sub_10000BEAC(v12);
  swift_release_n(v8, 2);
}

Swift::Void __swiftcall UIView.annoateViewForAvoidStairs()()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];

  v0 = type metadata accessor for AppEntityVisualState(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04(&qword_10149E1E0);
  LocalizedStringResource.init(stringLiteral:)(0x74532064696F7641, 0xEC00000073726961);
  v7 = sub_1001EE108(&qword_10149E2E0, &qword_10149E2E8);
  v8 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_10149E2D0, 0, &unk_10149E2D8, 0, &type metadata for AvoidStairsEntity.UpdateIntent_value, v7);
  v12[3] = &type metadata for AvoidStairsEntity;
  v9 = sub_10017FDF0();
  v12[4] = v9;
  v12[0] = v8;
  sub_10000BE88(v12, (uint64_t)&type metadata for AvoidStairsEntity);
  swift_retain_n(v8, 2);
  sub_10018598C();
  v11 = v8;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  swift_retain();
  v10 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v11, v3, &type metadata for AvoidStairsEntity, v9);
  UIView.annotate(with:)();

  sub_10000BEAC(v12);
  swift_release_n(v8, 2);
}

Swift::Void __swiftcall UIView.annotateViewForAvoidHillsInCycling()()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];

  v0 = type metadata accessor for AppEntityVisualState(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04(&qword_10149C7F8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x8000000100E4CA50);
  v7 = sub_1001EE108(&qword_10149C8F8, &qword_10149C900);
  v8 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_10149C8E8, 0, &unk_10149C8F0, 0, &type metadata for AvoidHillsInCyclingEntity.UpdateIntent_value, v7);
  v12[3] = &type metadata for AvoidHillsInCyclingEntity;
  v9 = sub_10014FC7C();
  v12[4] = v9;
  v12[0] = v8;
  sub_10000BE88(v12, (uint64_t)&type metadata for AvoidHillsInCyclingEntity);
  swift_retain_n(v8, 2);
  sub_10018598C();
  v11 = v8;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  swift_retain();
  v10 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v11, v3, &type metadata for AvoidHillsInCyclingEntity, v9);
  UIView.annotate(with:)();

  sub_10000BEAC(v12);
  swift_release_n(v8, 2);
}

Swift::Void __swiftcall UIView.annotateViewForAvoidBusyRoadsInCycling()()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];

  v0 = type metadata accessor for AppEntityVisualState(0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v12[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  __chkstk_darwin(v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008B04(&qword_10149FB70);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E523A0);
  v7 = sub_1001EE108(&qword_10149FC70, &qword_10149FC78);
  v8 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v6, &unk_10149FC60, 0, &unk_10149FC68, 0, &type metadata for AvoidBusyRoadsInCyclingEntity.UpdateIntent_value, v7);
  v12[3] = &type metadata for AvoidBusyRoadsInCyclingEntity;
  v9 = sub_1001E5D78();
  v12[4] = v9;
  v12[0] = v8;
  sub_10000BE88(v12, (uint64_t)&type metadata for AvoidBusyRoadsInCyclingEntity);
  swift_retain_n(v8, 2);
  sub_10018598C();
  v11 = v8;
  objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
  swift_retain();
  v10 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v11, v3, &type metadata for AvoidBusyRoadsInCyclingEntity, v9);
  UIView.annotate(with:)();

  sub_10000BEAC(v12);
  swift_release_n(v8, 2);
}

void UIView.annotateViewForTransitPreferenceMode(mode:)(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  ValueMetadata *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[3];
  ValueMetadata *v20;
  unint64_t v21;

  v2 = type metadata accessor for AppEntityVisualState(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v19[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0, v3);
  __chkstk_darwin(v6);
  v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      sub_100008B04(&qword_101499D10);
      LocalizedStringResource.init(stringLiteral:)(0x4220726566657250, 0xEA00000000007375);
      v9 = sub_1001EE108(&qword_101499E10, &qword_101499E18);
      v10 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v8, &unk_101499E00, 0, &unk_101499E08, 0, &type metadata for TransitPreferBusEntity.UpdateIntent_value, v9);
      v11 = &type metadata for TransitPreferBusEntity;
      v20 = &type metadata for TransitPreferBusEntity;
      v12 = sub_1000D0978();
      goto LABEL_6;
    case 2:
      sub_100008B04(&qword_10149AF18);
      LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E4A320);
      v13 = sub_1001EE108(&qword_10149B018, &qword_10149B020);
      v10 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v8, &unk_10149B008, 0, &unk_10149B010, 0, &type metadata for TransitPreferSubwayEntity.UpdateIntent_value, v13);
      v11 = &type metadata for TransitPreferSubwayEntity;
      v20 = &type metadata for TransitPreferSubwayEntity;
      v12 = sub_1001122D0();
      goto LABEL_6;
    case 4:
      sub_100008B04(&qword_10149EBC0);
      LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x8000000100E4F160);
      v14 = sub_1001EE108(&qword_10149ECC0, &qword_10149ECC8);
      v10 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v8, &unk_10149ECB0, 0, &unk_10149ECB8, 0, &type metadata for TransitPreferCommuterRailEntity.UpdateIntent_value, v14);
      v11 = &type metadata for TransitPreferCommuterRailEntity;
      v20 = &type metadata for TransitPreferCommuterRailEntity;
      v12 = sub_1001A755C();
      goto LABEL_6;
    case 8:
      sub_100008B04(&qword_10149FE88);
      LocalizedStringResource.init(stringLiteral:)(0x4620726566657250, 0xEC00000079727265);
      v15 = sub_1001EE108(&qword_10149FE90, &qword_10149FE98);
      v10 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v8, &unk_1014A03F0, 0, &unk_1014A03F8, 0, &type metadata for TransitPreferFerryEntity.UpdateIntent_value, v15);
      v11 = &type metadata for TransitPreferFerryEntity;
      v20 = &type metadata for TransitPreferFerryEntity;
      v12 = sub_1001EE0C4();
LABEL_6:
      v16 = v12;
      v21 = v12;
      v19[0] = v10;
      sub_10000BE88(v19, (uint64_t)v11);
      swift_retain_n(v10, 2);
      sub_10018598C();
      v18 = v10;
      objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
      swift_retain();
      v17 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(&v18, v5, v11, v16);
      UIView.annotate(with:)();

      sub_10000BEAC(v19);
      swift_release_n(v10, 2);
      break;
    default:
      return;
  }
}

unint64_t sub_1001EE0C4()
{
  unint64_t result;

  result = qword_10149FEA0;
  if (!qword_10149FEA0)
  {
    result = swift_getWitnessTable(byte_100E33764, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_10149FEA0);
  }
  return result;
}

uint64_t sub_1001EE108(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10000E5D4(a2);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EE294()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *v8;

  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_10000BC84((unint64_t *)&qword_10149FFD8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x3A656C646E61680ALL;
  v4._object = (void *)0xE900000000000020;
  String.append(_:)(v4);
  v5 = type metadata accessor for Handle(0);
  v6 = sub_10000BC84(&qword_10149FFE8, (uint64_t (*)(uint64_t))&type metadata accessor for Handle, (uint64_t)&protocol conformance descriptor for Handle);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v8 = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v8);
  return 0x3A64692D7370616DLL;
}

id sub_1001EE3F0()
{
  return sub_100086D98(0, (uint64_t (*)(void))type metadata accessor for SearchFindMyHandle);
}

uint64_t sub_1001EE41C()
{
  return type metadata accessor for SearchFindMyHandle(0);
}

uint64_t type metadata accessor for SearchFindMyHandle(uint64_t a1)
{
  return sub_100021D9C(a1, (uint64_t *)&unk_10149FED0, (uint64_t)&nominal type descriptor for SearchFindMyHandle);
}

uint64_t sub_1001EE438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001EE8CC(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Handle);
}

uint64_t sub_1001EE4BC(uint64_t a1, _QWORD *a2, uint64_t (*a3)(char *, uint64_t))
{
  uint64_t v3;
  uint64_t ObjectType;
  void *v8;
  char v9;
  char *v11;
  _BYTE v12[24];
  uint64_t v13;

  ObjectType = swift_getObjectType();
  sub_1000110D4(a1, (uint64_t)v12);
  if (!v13)
  {
    sub_10000C180((uint64_t)v12);
    goto LABEL_5;
  }
  if ((swift_dynamicCast(&v11, v12, (char *)&type metadata for Any + 8, ObjectType, 6) & 1) == 0)
  {
LABEL_5:
    v9 = 0;
    return v9 & 1;
  }
  v8 = v11;
  v9 = a3(&v11[*a2], v3 + *a2);

  return v9 & 1;
}

uint64_t sub_1001EE580(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(char *, uint64_t))
{
  id v9;
  id v10;
  char v11;
  _OWORD v13[2];

  if (a3)
  {
    v9 = a1;
    swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v13);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v13, 0, sizeof(v13));
    v10 = a1;
  }
  v11 = sub_1001EE4BC((uint64_t)v13, a4, a5);

  sub_10000C180((uint64_t)v13);
  return v11 & 1;
}

id sub_1001EE654(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t sub_1001EE6AC()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *v8;

  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_10000BC84((unint64_t *)&qword_10149FFD8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x6F697461636F6C0ALL;
  v4._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v4);
  v5 = type metadata accessor for Location(0);
  v6 = sub_10000BC84(&qword_10149FFE0, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v8 = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v8);
  return 0x3A64692D7370616DLL;
}

id sub_1001EE80C()
{
  return sub_100086D98(0, (uint64_t (*)(void))type metadata accessor for SearchFindMyLocation);
}

uint64_t sub_1001EE838(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD), _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = a1 + *a3;
  v8 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + *a5;
  v10 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_1001EE8A4()
{
  return type metadata accessor for SearchFindMyLocation(0);
}

uint64_t type metadata accessor for SearchFindMyLocation(uint64_t a1)
{
  return sub_100021D9C(a1, (uint64_t *)&unk_10149FF08, (uint64_t)&nominal type descriptor for SearchFindMyLocation);
}

uint64_t sub_1001EE8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001EE8CC(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Location);
}

uint64_t sub_1001EE8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[2];

  result = a4(319);
  if (v6 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v7 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 2, v8, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_1001EEA50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  uint64_t v10;
  Swift::String v11;
  void *object;
  id v14;
  uint64_t v15;
  unint64_t v16;

  v1 = v0;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(0xE000000000000000);
  v15 = 0x203A656C646E6168;
  v16 = 0xE800000000000000;
  v2 = *(id *)(v0 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
  v3 = objc_msgSend(v2, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);

  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 0x6F697461636F6C0ALL;
  v8._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v8);
  v14 = *(id *)(v1 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location);
  v9 = v14;
  v10 = sub_100008B04(&qword_10149FFD0);
  v11._countAndFlagsBits = String.init<A>(describing:)(&v14, v10);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  return v15;
}

id sub_1001EEC0C(uint64_t a1)
{
  return sub_100086D98(a1, type metadata accessor for MapsFindMyLocationHandle);
}

uint64_t type metadata accessor for MapsFindMyLocationHandle()
{
  return objc_opt_self(_TtC4Maps24MapsFindMyLocationHandle);
}

id sub_1001EEDD0()
{
  id result;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  result = objc_msgSend((id)objc_opt_self(CNContact), "_mapkit_sharedLocationContactIdentifer");
  if (result)
  {
    v1 = result;
    v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v4 = v3;

    v6[0] = v2;
    v6[1] = v4;
    result = (id)String.init<A>(_:)(v6, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    qword_1014D50C8 = (uint64_t)result;
    unk_1014D50D0 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001EEFA0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id result;
  NSString v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (!v1)
  {
    v6 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
    if (!v6)
      return 0;
    v7 = v6;
    v8 = Handle.prettyName.getter();
    if (!v9)
      Handle.identifier.getter(v8);
    v10 = v9;
    v5 = String._bridgeToObjectiveC()();

    swift_bridgeObjectRelease(v10);
    return v5;
  }
  v2 = (void *)objc_opt_self(CNContactFormatter);
  v3 = v1;
  result = objc_msgSend(v2, "stringFromContact:style:", v3, 0);
  if (result || (result = objc_msgSend(v3, "givenName")) != 0)
  {
    v5 = result;

    return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001EF0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::String v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  void *object;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  unint64_t v41;

  v1 = v0;
  v2 = 0x65736C6166;
  v40 = 0;
  v41 = 0xE000000000000000;
  _StringGuts.grow(_:)(89);
  v3._countAndFlagsBits = 0x6C646E6148736168;
  v3._object = (void *)0xEB00000000203A65;
  String.append(_:)(v3);
  v4 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (v5)
    v6 = 1702195828;
  else
    v6 = 0x65736C6166;
  if (v5)
    v7 = 0xE400000000000000;
  else
    v7 = 0xE500000000000000;
  v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease(v7);
  v9._countAndFlagsBits = 0x61636F4C7361680ALL;
  v9._object = (void *)0xEE00203A6E6F6974;
  String.append(_:)(v9);
  v10 = *(_QWORD *)(v0 + v4);
  if (v10 && *(_QWORD *)(v10 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location))
  {
    v11 = 0xE400000000000000;
    v12 = 1702195828;
  }
  else
  {
    v11 = 0xE500000000000000;
    v12 = 0x65736C6166;
  }
  v13 = v11;
  String.append(_:)(*(Swift::String *)&v12);
  swift_bridgeObjectRelease(v11);
  v14._countAndFlagsBits = 0x746E6F437361680ALL;
  v14._object = (void *)0xED0000203A746361;
  String.append(_:)(v14);
  v15 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (v16)
    v17 = 1702195828;
  else
    v17 = 0x65736C6166;
  if (v16)
    v18 = 0xE400000000000000;
  else
    v18 = 0xE500000000000000;
  v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 0xD000000000000016;
  v20._object = (void *)0x8000000100E52FE0;
  String.append(_:)(v20);
  v21 = *(void **)(v0 + v15);
  if (!v21)
    goto LABEL_22;
  v22 = objc_msgSend(v21, "postalAddresses");
  v23 = sub_100008B04((uint64_t *)&unk_1014A0C80);
  v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  if ((unint64_t)v24 >> 62)
  {
    v38 = v24 < 0 ? v24 : v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v25 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v24);
  if (v25 > 0)
  {
    v26 = (void *)0xE400000000000000;
    v2 = 1702195828;
  }
  else
  {
LABEL_22:
    v26 = (void *)0xE500000000000000;
  }
  v27._countAndFlagsBits = v2;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v26);
  v28._object = (void *)0x8000000100E53000;
  v28._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v28);
  v29 = *(void **)(v1 + v15);
  if (v29)
  {
    v30 = objc_msgSend(v29, "identifier");
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

  }
  else
  {
    v31 = 0;
    v33 = 0;
  }
  v39[0] = v31;
  v39[1] = v33;
  v34 = sub_100008B04(&qword_101495CE0);
  v35._countAndFlagsBits = String.init<A>(describing:)(v39, v34);
  object = v35._object;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(object);
  return v40;
}

id sub_1001EF3D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  id v7;
  NSString v8;
  id v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (!v1)
    return 0;
  v2 = *(id *)(v1 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
  v3 = Handle.identifier.getter(v2);
  v5 = v4;

  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6._countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  v7 = objc_allocWithZone((Class)NSURL);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x8000000100E52FA0);
  v9 = objc_msgSend(v7, "initWithString:", v8, 0xD000000000000010);

  return v9;
}

void sub_1001EF510()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  Swift::String v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  Swift::String v32;
  Swift::String v33;
  id v34;
  NSString v35;
  uint64_t v36;
  uint64_t v37;

  v1 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (!v2)
    return;
  v3 = objc_msgSend(v2, "phoneNumbers");
  v4 = sub_100008B04((uint64_t *)&unk_1014A0C80);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v19 = v5;
    else
      v19 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v5);
    if (v20)
      goto LABEL_4;
LABEL_13:
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    v6 = *(id *)(v5 + 32);
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "value", swift_bridgeObjectRelease(v5).n128_f64[0]);

  v9 = objc_msgSend(v8, "unformattedInternationalStringValue");
  if (v9)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    _StringGuts.grow(_:)(121);
    v14._object = (void *)0x8000000100E52F20;
    v14._countAndFlagsBits = 0xD00000000000002ELL;
    String.append(_:)(v14);
    v15._countAndFlagsBits = v11;
    v15._object = v13;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v13);
    v16._countAndFlagsBits = 0xD000000000000049;
    v16._object = (void *)0x8000000100E52F50;
    String.append(_:)(v16);
    v17 = objc_allocWithZone((Class)NSURL);
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v17, "initWithString:", v18, swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0], 0);

    return;
  }
LABEL_14:
  v21 = *(void **)(v0 + v1);
  if (!v21)
    return;
  v22 = objc_msgSend(v21, "emailAddresses", v10);
  v23 = sub_100008B04((uint64_t *)&unk_1014A0C80);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v23);

  if ((unint64_t)v5 >> 62)
  {
LABEL_25:
    if (v5 < 0)
      v36 = v5;
    else
      v36 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v37 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v5);
    if (v37)
      goto LABEL_17;
LABEL_29:
    swift_bridgeObjectRelease(v5);
    return;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_29;
LABEL_17:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
  }
  else
  {
    if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v24 = *(id *)(v5 + 32);
  }
  v25 = v24;
  v26 = objc_msgSend(v24, "value", swift_bridgeObjectRelease(v5).n128_f64[0]);

  if (v26)
  {
    _StringGuts.grow(_:)(121);
    v27._object = (void *)0x8000000100E52F20;
    v27._countAndFlagsBits = 0xD00000000000002ELL;
    String.append(_:)(v27);
    v28 = objc_msgSend(v26, "description", 0);
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    v32._countAndFlagsBits = v29;
    v32._object = v31;
    String.append(_:)(v32);
    swift_bridgeObjectRelease(v31);
    v33._countAndFlagsBits = 0xD000000000000049;
    v33._object = (void *)0x8000000100E52F50;
    String.append(_:)(v33);
    v34 = objc_allocWithZone((Class)NSURL);
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v34, "initWithString:", v35, swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);

  }
}

uint64_t sub_1001EF990()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (!v1)
    return 0;
  v2 = *(id *)(v1 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
  Handle.identifier.getter(v2);
  v4 = v3;

  swift_bridgeObjectRelease(v4);
  result = (uint64_t)sub_1001EF3D4();
  if (result)
  {

    return 1;
  }
  return result;
}

uint64_t sub_1001EFA14(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v20;
  Class isa;
  Class v22;
  id v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v25 - v10;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (v12 && *(_QWORD *)(v12 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location))
  {
    v13 = Location.timestamp.getter(v9);
    v14 = Date.init()();
    Date.init(timeIntervalSince1970:)(v14, v13);
    if (Date.timeIntervalSince(_:)(v8) >= 60.0)
    {
      v20 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_dateFormatter);
      isa = Date._bridgeToObjectiveC()().super.isa;
      v22 = Date._bridgeToObjectiveC()().super.isa;
      v23 = objc_msgSend(v20, "localizedStringForDate:relativeToDate:", isa, v22);

      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v8, v4);
      v24(v11, v4);
      return v18;
    }
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v11, v4);
    if ((a1 & 1) != 0)
      v16 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowForPin;
    else
      v16 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowString;
  }
  else
  {
    v16 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString;
  }
  v17 = (uint64_t *)(v2 + v16);
  v18 = *v17;
  swift_bridgeObjectRetain(v17[1]);
  return v18;
}

NSString sub_1001EFC78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;

  v1 = sub_1001EFA14(0);
  v3 = v2;
  if (v1 == *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString)
    && v2 == *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString + 8))
  {
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString), *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString + 8), 0);
    swift_bridgeObjectRelease(v3);
    if ((v5 & 1) == 0)
    {
      v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationString);
      v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationString + 8);
      v8 = sub_100008B04((uint64_t *)&unk_10149A4F0);
      v9 = swift_allocObject(v8, 72, 7);
      *(_OWORD *)(v9 + 16) = xmmword_100E22F40;
      v10 = sub_1001EFA14(0);
      v12 = v11;
      *(_QWORD *)(v9 + 56) = &type metadata for String;
      *(_QWORD *)(v9 + 64) = sub_10000D8E0();
      *(_QWORD *)(v9 + 32) = v10;
      *(_QWORD *)(v9 + 40) = v12;
      static String.localizedStringWithFormat(_:_:)(v6, v7, v9);
      v14 = v13;
      swift_bridgeObjectRelease(v9);
      v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
      return v15;
    }
  }
  return String._bridgeToObjectiveC()();
}

unint64_t sub_1001EFDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  unint64_t v21;
  unint64_t v22;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (v5)
  {
    v6 = *(id *)(v5 + OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle);
    v7 = Handle.identifier.getter(v6);
  }
  else
  {
    v9 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
    if (!v9)
    {
      v21 = 0;
      v22 = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      v15 = swift_bridgeObjectRelease(v22);
      v21 = 0xD00000000000001BLL;
      v22 = 0x8000000100E52F00;
      v16 = UUID.init()(v15);
      v17 = UUID.uuidString.getter(v16);
      v19 = v18;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      v20._countAndFlagsBits = v17;
      v20._object = v19;
      String.append(_:)(v20);
      v13 = v19;
      goto LABEL_6;
    }
    v6 = objc_msgSend(v9, "identifier");
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  }
  v10 = v7;
  v11 = v8;

  v21 = 0;
  v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(v22);
  v21 = 0xD000000000000017;
  v22 = 0x8000000100E52EE0;
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  v13 = v11;
LABEL_6:
  swift_bridgeObjectRelease(v13);
  return v21;
}

id sub_1001EFF54(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  NSString v9;
  id v10;
  void *v11;
  void *v12;
  NSString v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Class v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Class isa;
  id v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  _QWORD v52[4];

  v3 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (!v4)
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), "init");
    v16 = sub_1001EFC78();
    v22 = objc_msgSend(a1, "_cnPostalAddress");
    if (!v22)
    {

      v8 = *(id *)(v1 + v3);
      v45 = v8;
      return v8;
    }
    v5 = v22;
    v21 = objc_opt_self(CNLabeledValue);
    if (qword_101491140 == -1)
      goto LABEL_12;
    goto LABEL_33;
  }
  v5 = v4;
  v6 = objc_msgSend(v5, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v52);
  swift_unknownObjectRelease(v6);
  v7 = sub_10000E4BC(0, &qword_10149E678, CNMutableContact_ptr);
  swift_dynamicCast(&v51, v52, (char *)&type metadata for Any + 8, v7, 7);
  v8 = v51;
  v9 = sub_1001EFC78();
  v10 = objc_msgSend(a1, "_cnPostalAddress");
  if (!v10)
  {

    return v8;
  }
  v11 = v10;
  v12 = (void *)objc_opt_self(CNLabeledValue);
  if (qword_101491140 != -1)
    swift_once(&qword_101491140, sub_1001EEDD0);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "entryWithIdentifier:label:value:", v13, v9, v11);

  v15 = objc_msgSend(v8, "postalAddresses");
  v16 = (void *)sub_100008B04((uint64_t *)&unk_1014A0C80);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v47 = v17;
    else
      v47 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v18 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v17);
  if (!v18)
  {
    v19 = v14;
    v37 = objc_msgSend(v8, "postalAddresses");
    v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v16);

    v52[0] = v38;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
    v40 = *(_QWORD *)((v52[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    v41 = *(_QWORD *)((v52[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v40 >= v41 >> 1)
    {
      v50 = *(_QWORD *)((v52[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v40 + 1, 1);
      v40 = v50;
    }
    v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v19);
    specialized Array._endMutation()(v42);
    goto LABEL_21;
  }
  v19 = v14;
  v20 = objc_msgSend(v8, "postalAddresses");
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v16);

  v52[0] = v21;
  if (!((unint64_t)v21 >> 62)
    || (v21 < 0 ? (v48 = v21) : (v48 = v21 & 0xFFFFFFFFFFFFFF8),
        swift_bridgeObjectRetain(v21),
        v49 = _CocoaArrayWrapper.endIndex.getter(v48),
        swift_bridgeObjectRelease(v21),
        (v49 & 0x8000000000000000) == 0))
  {
    sub_10020E464(0, 0, (uint64_t)v19);
LABEL_21:
    v43 = v52[0];
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setPostalAddresses:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

    return v8;
  }
  __break(1u);
LABEL_33:
  swift_once(&qword_101491140, sub_1001EEDD0);
LABEL_12:
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend((id)v21, "entryWithIdentifier:label:value:", v23, v16, v5);

  v25 = v24;
  v26 = objc_msgSend(v8, "postalAddresses");
  v27 = sub_100008B04((uint64_t *)&unk_1014A0C80);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

  v52[0] = v28;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)((v52[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)((v52[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v25);
  specialized Array._endMutation()(v32);
  v33 = v52[0];
  v34 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "setPostalAddresses:", v34, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = objc_msgSend(v8, "copy");
  _bridgeAnyObjectToAny(_:)(v52);

  swift_unknownObjectRelease(v35);
  v36 = sub_10000E4BC(0, (unint64_t *)&unk_10149E5F0, CNContact_ptr);
  if (swift_dynamicCast(&v51, v52, (char *)&type metadata for Any + 8, v36, 6))
    return v51;
  else
    return 0;
}

id sub_1001F04F8(void *a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  NSString *const *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id result;
  id v19;

  switch(a2)
  {
    case 0:
      v10 = &CNLabelOther;
      goto LABEL_6;
    case 1:
      v10 = &CNLabelHome;
      goto LABEL_6;
    case 2:
      v10 = &CNLabelWork;
      goto LABEL_6;
    case 3:
      v10 = &CNLabelSchool;
LABEL_6:
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v10);
      v13 = v12;
      sub_1001F05F0(a1, v11, v12, a3, a4, a5);
      v15 = v14;
      swift_bridgeObjectRelease(v13);
      goto LABEL_10;
    case 4:
      if (!a5)
        goto LABEL_9;
      v16 = a5;
      v17 = sub_1001EFF54(v16);

      result = v17;
      break;
    default:
LABEL_9:
      v15 = *(void **)(v5 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
      v19 = v15;
LABEL_10:
      result = v15;
      break;
  }
  return result;
}

void sub_1001F05F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v6;
  id v7;
  void *v8;
  char **v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  NSString v22;
  NSString v23;
  id v24;
  char **v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  Class isa;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  Class v37;
  id v38;
  void *v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  NSString v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char **v58;
  id v59;
  void *v60;
  _QWORD v61[4];

  v7 = v6;
  v8 = *(void **)&v6[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
  if (!v8)
    return;
  v14 = v8;
  v15 = objc_msgSend(v14, "mutableCopy");
  _bridgeAnyObjectToAny(_:)(v61);
  swift_unknownObjectRelease(v15);
  v16 = sub_10000E4BC(0, &qword_10149E678, CNMutableContact_ptr);
  swift_dynamicCast(&v60, v61, (char *)&type metadata for Any + 8, v16, 7);
  v17 = v60;
  v18 = objc_msgSend(a1, "_cnPostalAddress");
  if (v18)
  {
    v19 = v18;
    v58 = v14;
    v20 = objc_allocWithZone((Class)CNLabeledValue);
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a3);
    v21 = v19;
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    v23 = String._bridgeToObjectiveC()();
    v59 = objc_msgSend(v20, "initWithIdentifier:label:value:", v22, v23, v21, swift_bridgeObjectRelease(a3).n128_f64[0]);

    v24 = objc_msgSend(v17, "postalAddresses");
    v25 = (char **)sub_100008B04((uint64_t *)&unk_1014A0C80);
    v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v25);

    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v52 = v26;
      else
        v52 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v26);
      v27 = _CocoaArrayWrapper.endIndex.getter(v52);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v28 = swift_bridgeObjectRelease(v26).n128_u64[0];
    v14 = &selRef_setPerformChangeCommand_;
    if (v27)
    {
      v29 = objc_msgSend(v17, "postalAddresses", v28);
      v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v25);

      swift_bridgeObjectRetain(a5);
      v31 = sub_1001F0F24(v30, a4, a5);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(a5);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v17, "setPostalAddresses:", isa, swift_bridgeObjectRelease(v31).n128_f64[0]);

    }
    v33 = v59;
    v34 = objc_msgSend(v17, "postalAddresses");
    v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v34, v25);

    v61[0] = v35;
    if ((unint64_t)v35 >> 62)
    {
      v53 = v35 < 0 ? v35 : v35 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v35);
      v54 = _CocoaArrayWrapper.endIndex.getter(v53);
      swift_bridgeObjectRelease(v35);
      if (v54 < 0)
      {
        __break(1u);
LABEL_31:
        if (v21 < 0)
          v55 = v21;
        else
          v55 = v21 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v21);
        v46 = _CocoaArrayWrapper.endIndex.getter(v55);
        swift_bridgeObjectRelease(v21);
        goto LABEL_13;
      }
    }
    sub_10020E464(0, 0, (uint64_t)v33);
    v36 = v61[0];
    v37 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "setPostalAddresses:", v37, swift_bridgeObjectRelease(v36).n128_f64[0]);

    v14 = v58;
  }
  if (!a6)
  {

    return;
  }
  v33 = a6;
  v38 = objc_msgSend(v33, "_cnPostalAddress");
  if (!v38)
  {

    return;
  }
  v39 = v38;
  v40 = sub_1001EFC78();
  static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v42 = v41;

  v43 = objc_allocWithZone((Class)CNLabeledValue);
  v7 = v39;
  v44 = String._bridgeToObjectiveC()();
  v35 = (uint64_t)objc_msgSend(v43, "initWithLabel:value:", v44, v7, swift_bridgeObjectRelease(v42).n128_f64[0]);

  v25 = &selRef_persistsExpansions;
  v45 = objc_msgSend(v17, "postalAddresses");
  a6 = (void *)sub_100008B04((uint64_t *)&unk_1014A0C80);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, a6);

  if ((unint64_t)v21 >> 62)
    goto LABEL_31;
  v46 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
  swift_bridgeObjectRelease(v21);
  if (!v46)
  {

    goto LABEL_21;
  }
  v47 = (id)v35;
  v48 = objc_msgSend(v17, v25[411]);
  v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v48, a6);

  v61[0] = v49;
  if ((unint64_t)v49 >> 62)
  {
    if (v49 < 0)
      v56 = v49;
    else
      v56 = v49 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v49);
    v57 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v49);
    if (v57 >= 1)
      goto LABEL_16;
  }
  else if (*(uint64_t *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_16:
    sub_10020E464(1, 1, (uint64_t)v47);
    v50 = v61[0];
    v51 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v17, "setPostalAddresses:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

LABEL_21:
    return;
  }
  __break(1u);
}

void sub_1001F0C00(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  objc_class *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo);
  v5 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo);
  v7 = (objc_class *)type metadata accessor for MapsAutocompletePerson();
  v8 = objc_allocWithZone(v7);
  v13 = v6;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = sub_1001F10E0(v3, v4, v5, v6);

  a1[3] = v7;
  *a1 = v12;
}

id sub_1001F0E40(uint64_t a1)
{
  return sub_100086D98(a1, type metadata accessor for MapsAutocompletePerson);
}

uint64_t type metadata accessor for MapsAutocompletePerson()
{
  return objc_opt_self(_TtC4Maps22MapsAutocompletePerson);
}

_QWORD *sub_1001F0F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_20;
        v10 = v5;
        v11 = objc_msgSend(v7, "identifier");
        v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {

          swift_bridgeObjectRelease(a3);
        }
        else
        {
          v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, a2, a3, 0);
          v17 = swift_bridgeObjectRelease(v14);
          if ((v16 & 1) != 0)
          {

          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v17);
            v18 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
            v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v8);
            specialized ContiguousArray._endMutation()(v19);
          }
        }
        ++v6;
        v5 = v10;
        if (v9 == v10)
          return _swiftEmptyArrayStorage;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v21 = a1;
      else
        v21 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v21);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

id sub_1001F10E0(void *a1, void *a2, void *a3, void *a4)
{
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  NSBundle v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String *v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String *v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String *v23;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  objc_super v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;

  v6 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = 0;
  v7 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = 0;
  v8 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = 0;
  v9 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo] = 0;
  v4[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_placeSummaryShowsStackedIconsAndLabels] = 1;
  v10 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_dateFormatter;
  v11 = objc_allocWithZone((Class)NSRelativeDateTimeFormatter);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationString;
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v14.super.isa = (Class)qword_1014D4B80;
  v15._countAndFlagsBits = 0xD00000000000002DLL;
  v39._countAndFlagsBits = 0xD000000000000058;
  v39._object = (void *)0x8000000100E52D00;
  v15._object = (void *)0x8000000100E52CD0;
  v16._countAndFlagsBits = 0x6E6F697461636F4CLL;
  v16._object = (void *)0xEB00000000402520;
  *(Swift::String *)&v12[v13] = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v16, v39);
  v17 = (Swift::String *)&v12[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowString];
  v18._countAndFlagsBits = 0xD000000000000017;
  v40._countAndFlagsBits = 0xD00000000000003CLL;
  v40._object = (void *)0x8000000100E52D80;
  v18._object = (void *)0x8000000100E52D60;
  v19._countAndFlagsBits = 0x776F4E207473754ALL;
  v19._object = (void *)0xE800000000000000;
  *v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, v14, v19, v40);
  v20 = (Swift::String *)&v12[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_locationJustNowForPin];
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v41._countAndFlagsBits = 0xD000000000000075;
  v41._object = (void *)0x8000000100E52DE0;
  v21._object = (void *)0x8000000100E52DC0;
  v22._countAndFlagsBits = 0x776F4E207473754ALL;
  v22._object = (void *)0xE800000000000000;
  *v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, v14, v22, v41);
  v23 = (Swift::String *)&v12[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_noSharedLocationString];
  v42._countAndFlagsBits = 0xD000000000000020;
  v24._countAndFlagsBits = 0xD000000000000022;
  v42._object = (void *)0x8000000100E52EB0;
  v24._object = (void *)0x8000000100E52E60;
  v25._object = (void *)0x8000000100E52E90;
  v25._countAndFlagsBits = 0xD000000000000011;
  *v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, v14, v25, v42);
  v26 = *(void **)&v4[v6];
  *(_QWORD *)&v4[v6] = a1;
  v27 = a1;

  v28 = *(void **)&v4[v7];
  *(_QWORD *)&v4[v7] = a2;
  v29 = a2;

  v30 = *(void **)&v4[v8];
  *(_QWORD *)&v4[v8] = a3;
  v31 = a3;

  v32 = *(void **)&v4[v9];
  *(_QWORD *)&v4[v9] = a4;
  v33 = a4;

  v38.receiver = v12;
  v38.super_class = (Class)type metadata accessor for MapsAutocompletePerson();
  return objc_msgSendSuper2(&v38, "init");
}

BOOL sub_1001F13D0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL8 result;
  BOOL v22;
  id v23;
  id v24;
  char v25;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  v5 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact);
  if (v4)
  {
    if (!v5)
      return 0;
    sub_10000E4BC(0, (unint64_t *)&unk_10149E5F0, CNContact_ptr);
    v6 = v5;
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v5)
  {
    return 0;
  }
  v9 = *(void **)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo);
  v10 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo);
  if (v9)
  {
    if (!v10)
      return 0;
    sub_10000E4BC(0, &qword_10149FFC8, &off_101195E28);
    v11 = v10;
    v12 = v9;
    v13 = static NSObject.== infix(_:_:)(v12, v11);

    if ((v13 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  v14 = *(void **)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  v15 = *(void **)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle);
  if (!v14)
  {
    if (!v15)
      goto LABEL_14;
    return 0;
  }
  if (!v15)
    return 0;
  type metadata accessor for MapsFindMyLocationHandle();
  v16 = v15;
  v17 = v14;
  v18 = static NSObject.== infix(_:_:)(v17, v16);

  if ((v18 & 1) == 0)
    return 0;
LABEL_14:
  v19 = *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo);
  v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo);
  result = (v19 | v20) == 0;
  if (v19)
    v22 = v20 == 0;
  else
    v22 = 1;
  if (!v22)
  {
    sub_10000E4BC(0, &qword_10149FFC8, &off_101195E28);
    v23 = (id)v20;
    v24 = (id)v19;
    v25 = static NSObject.== infix(_:_:)(v24, v23);

    return v25 & 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikeRouteDuration()
{
  return &type metadata for PlaceSummaryUnitHikeRouteDuration;
}

ValueMetadata *type metadata accessor for NearbyTransitTeachableMomentAnimation()
{
  return &type metadata for NearbyTransitTeachableMomentAnimation;
}

uint64_t sub_1001F15A8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106BC9C, 1);
}

void sub_1001F15B8()
{
  qword_1014D50F8 = 0x4078000000000000;
}

void sub_1001F15C8(_QWORD *a1@<X8>)
{
  *a1 = &off_10119A930;
}

uint64_t sub_1001F15D8@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];

  v39 = a2;
  v3 = sub_100008B04(&qword_1014998E8);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100008B04(&qword_1014998F0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_1014A0030);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04(&qword_1014A0010);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100008B04(&qword_1014A0058);
  v15 = *(_QWORD *)(v38 - 8);
  v16 = __chkstk_darwin(v38);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  *v5 = static Alignment.leading.getter(v16);
  v5[1] = v19;
  v20 = sub_100008B04(&qword_1014A0060);
  v21 = sub_1001F191C((char)a1, (uint64_t)v5 + *(int *)(v20 + 44));
  v22 = static Alignment.center.getter(v21);
  sub_1000C7A04(0, 1, 0.0, 1, INFINITY, 0, 0, 1, (uint64_t)v8, v24, 0.0, 1, INFINITY, 0, v22, v23);
  v25 = sub_100010CC4((uint64_t)v5, &qword_1014998E8);
  v26 = static SafeAreaRegions.all.getter(v25);
  LOBYTE(a1) = static Edge.Set.all.getter(v27);
  sub_10000C1FC((uint64_t)v8, (uint64_t)v11, &qword_1014998F0);
  v28 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v28 = v26;
  v28[8] = (char)a1;
  sub_100010CC4((uint64_t)v8, &qword_1014998F0);
  sub_10000C1FC((uint64_t)v11, (uint64_t)v14, &qword_1014A0030);
  v29 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v29 = 0;
  *((_WORD *)v29 + 4) = 1;
  sub_100010CC4((uint64_t)v11, &qword_1014A0030);
  v30 = sub_100008B04(&qword_1014A0018);
  v31 = sub_10002067C(&qword_1014A0020, &qword_1014A0010, sub_1001F304C, (uint64_t)&protocol witness table for _AspectRatioLayout);
  v32 = type metadata accessor for EmptyVisualEffect(255);
  v33 = sub_1001F30F4();
  v40[0] = v32;
  v40[1] = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v40, &opaque type descriptor for <<opaque return type of VisualEffect.scaleEffect(_:anchor:)>>, 1);
  View.visualEffect<A>(_:)(sub_1001F2D68, 0, v12, v30, v31, OpaqueTypeConformance2);
  sub_100010CC4((uint64_t)v14, &qword_1014A0010);
  v36 = v38;
  v35 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v39, v18, v38);
  *(_WORD *)(v35 + *(int *)(sub_100008B04(&qword_10149FFF0) + 36)) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v36);
}

uint64_t sub_1001F191C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  __int128 v35;
  uint64_t *v36;
  char v37;
  double v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  int v57;
  _OWORD v58[3];

  v57 = a1 & 1;
  v4 = sub_100008B04(&qword_1014A0068);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = sub_100008B04(&qword_1014A0070);
  __chkstk_darwin(v50);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_100008B04(&qword_1014A0078);
  __chkstk_darwin(v51);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = (char *)sub_100008B04(&qword_1014A0080);
  __chkstk_darwin(v53);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - v17;
  v19 = sub_100008B04(&qword_10149DAE0);
  __chkstk_darwin(v19);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = Image.init(systemName:)(0x6C6C69662E6E6970, 0xE800000000000000);
  v22 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v55 = static Font.system(size:weight:design:)(0, 1, v21, 60.0);
  sub_100010CC4((uint64_t)v21, &qword_10149DAE0);
  KeyPath = swift_getKeyPath(&unk_100E333B8);
  v52 = static Color.yellow.getter(KeyPath);
  v48 = swift_getKeyPath(&unk_100E333E8);
  v23 = static UnitPoint.center.getter(v48);
  v25 = v24;
  if ((a1 & 1) != 0)
  {
    static Animation.spring(response:dampingFraction:blendDuration:)(0.4, 0.7, 0.0);
    v49 = Animation.delay(_:)(1.1);
    v27 = 1.0;
    v26 = 0x405A000000000000;
  }
  else
  {
    v26 = 0;
    static Animation.spring(response:dampingFraction:blendDuration:)(0.4, 0.85, 0.0);
    v49 = Animation.delay(_:)(1.5);
    v27 = 0.0;
  }
  swift_release();
  *v6 = static Alignment.leading.getter(v28);
  v6[1] = v29;
  v30 = sub_100008B04(&qword_1014A0088);
  v31 = sub_1001F1E60((uint64_t)v6 + *(int *)(v30 + 44));
  v32 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(v58, 0x4073E00000000000, 0, 0x405F800000000000, 0, v32, v33);
  sub_10000C1FC((uint64_t)v6, (uint64_t)v8, &qword_1014A0068);
  v34 = &v8[*(int *)(v50 + 36)];
  v35 = v58[1];
  *(_OWORD *)v34 = v58[0];
  *((_OWORD *)v34 + 1) = v35;
  *((_OWORD *)v34 + 2) = v58[2];
  sub_100010CC4((uint64_t)v6, &qword_1014A0068);
  sub_10000C1FC((uint64_t)v8, (uint64_t)v10, &qword_1014A0070);
  v36 = (uint64_t *)&v10[*(int *)(v51 + 36)];
  *v36 = v26;
  v36[1] = 0;
  sub_100010CC4((uint64_t)v8, &qword_1014A0070);
  v37 = v57;
  if (v57)
  {
    static Animation.spring(response:dampingFraction:blendDuration:)(0.35, 0.7, 0.0);
    v39 = Animation.delay(_:)(1.1);
    v38 = 1.0;
  }
  else
  {
    v38 = 0.0;
    static Animation.spring(response:dampingFraction:blendDuration:)(0.4, 0.85, 0.0);
    v39 = Animation.delay(_:)(1.5);
  }
  swift_release();
  sub_10000C1FC((uint64_t)v10, (uint64_t)v15, &qword_1014A0078);
  v40 = &v15[*((int *)v53 + 9)];
  *(_QWORD *)v40 = v39;
  v40[8] = v37;
  sub_100010CC4((uint64_t)v10, &qword_1014A0078);
  sub_1000207BC((uint64_t)v15, (uint64_t)v18, &qword_1014A0080);
  sub_10000C1FC((uint64_t)v18, (uint64_t)v12, &qword_1014A0080);
  v41 = v55;
  v42 = KeyPath;
  *(_QWORD *)a2 = v56;
  *(_QWORD *)(a2 + 8) = v42;
  v43 = v48;
  v44 = v49;
  *(_QWORD *)(a2 + 16) = v41;
  *(_QWORD *)(a2 + 24) = v43;
  v53 = v18;
  *(_QWORD *)(a2 + 32) = v52;
  *(double *)(a2 + 40) = v38;
  *(double *)(a2 + 48) = v38;
  *(double *)(a2 + 56) = v23;
  *(_QWORD *)(a2 + 64) = v25;
  *(double *)(a2 + 72) = v27;
  *(_QWORD *)(a2 + 80) = v44;
  *(_BYTE *)(a2 + 88) = v37;
  v45 = sub_100008B04(&qword_1014A0090);
  sub_10000C1FC((uint64_t)v12, a2 + *(int *)(v45 + 48), &qword_1014A0080);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100010CC4((uint64_t)v53, &qword_1014A0080);
  sub_100010CC4((uint64_t)v12, &qword_1014A0080);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1001F1E60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  __n128 v36;
  uint64_t v37;
  __n128 v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  _OWORD v51[2];
  uint64_t v52;

  v50 = a1;
  v1 = sub_100008B04(&qword_1014A0098);
  __chkstk_darwin(v1);
  v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_1014A00A0);
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - v8;
  v10 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v10);
  v12 = (_OWORD *)((char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_100008B04(&qword_101495850);
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - v17;
  v19 = (char *)v12 + *(int *)(v10 + 20);
  v20 = enum case for RoundedCornerStyle.continuous(_:);
  v21 = type metadata accessor for RoundedCornerStyle(0);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  __asm { FMOV            V0.2D, #20.0 }
  *v12 = _Q0;
  v28 = static Color.yellow.getter(v22);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v51, 0, 0, _swiftEmptyArrayStorage, 7.0, 10.0, 0.0);
  sub_10015553C((uint64_t)v12, (uint64_t)v15);
  v29 = &v15[*(int *)(sub_100008B04(&qword_101495878) + 36)];
  v30 = v51[1];
  *(_OWORD *)v29 = v51[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_QWORD *)v29 + 4) = v52;
  v31 = sub_100008B04(&qword_101495880);
  *(_QWORD *)&v15[*(int *)(v31 + 52)] = v28;
  *(_WORD *)&v15[*(int *)(v31 + 56)] = 256;
  v32 = static Alignment.center.getter(v31);
  v34 = v33;
  v35 = (uint64_t *)&v15[*(int *)(sub_100008B04(&qword_101495888) + 36)];
  *v35 = v32;
  v35[1] = v34;
  sub_100155580((uint64_t)v12);
  sub_1000207BC((uint64_t)v15, (uint64_t)v18, &qword_101495850);
  *(_QWORD *)v3 = static VerticalAlignment.center.getter(v36);
  *((_QWORD *)v3 + 1) = 0;
  v3[16] = 1;
  v37 = sub_100008B04(&qword_1014A00A8);
  sub_1001F21EC((uint64_t)&v3[*(int *)(v37 + 44)]);
  LOBYTE(v32) = static Edge.Set.all.getter(v38);
  v39 = EdgeInsets.init(_all:)(18.0);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  sub_10000C1FC((uint64_t)v3, (uint64_t)v6, &qword_1014A0098);
  v46 = &v6[*(int *)(v4 + 36)];
  *v46 = v32;
  *((double *)v46 + 1) = v39;
  *((_QWORD *)v46 + 2) = v41;
  *((_QWORD *)v46 + 3) = v43;
  *((_QWORD *)v46 + 4) = v45;
  v46[40] = 0;
  sub_100010CC4((uint64_t)v3, &qword_1014A0098);
  sub_1000207BC((uint64_t)v6, (uint64_t)v9, &qword_1014A00A0);
  sub_10000C1FC((uint64_t)v18, (uint64_t)v15, &qword_101495850);
  sub_10000C1FC((uint64_t)v9, (uint64_t)v6, &qword_1014A00A0);
  v47 = v50;
  sub_10000C1FC((uint64_t)v15, v50, &qword_101495850);
  v48 = sub_100008B04(&qword_1014A00B0);
  sub_10000C1FC((uint64_t)v6, v47 + *(int *)(v48 + 48), &qword_1014A00A0);
  sub_100010CC4((uint64_t)v9, &qword_1014A00A0);
  sub_100010CC4((uint64_t)v18, &qword_101495850);
  sub_100010CC4((uint64_t)v6, &qword_1014A00A0);
  return sub_100010CC4((uint64_t)v15, &qword_101495850);
}

uint64_t sub_1001F21EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = sub_100008B04(&qword_1014A00B8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - v6;
  v8 = sub_100008B04(&qword_1014A00C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v21 - v13;
  *(_QWORD *)v14 = static HorizontalAlignment.leading.getter(v12);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = sub_100008B04(&qword_1014A00C8);
  v16 = sub_1001F23B0((uint64_t)&v14[*(int *)(v15 + 44)]);
  *(_QWORD *)v7 = static HorizontalAlignment.trailing.getter(v16);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v17 = sub_100008B04(&qword_1014A00D0);
  sub_1001F29B0(&v7[*(int *)(v17 + 44)]);
  sub_10000C1FC((uint64_t)v14, (uint64_t)v10, &qword_1014A00C0);
  sub_10000C1FC((uint64_t)v7, (uint64_t)v4, &qword_1014A00B8);
  sub_10000C1FC((uint64_t)v10, a1, &qword_1014A00C0);
  v18 = sub_100008B04(&qword_1014A00D8);
  v19 = a1 + *(int *)(v18 + 48);
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  sub_10000C1FC((uint64_t)v4, a1 + *(int *)(v18 + 64), &qword_1014A00B8);
  sub_100010CC4((uint64_t)v7, &qword_1014A00B8);
  sub_100010CC4((uint64_t)v14, &qword_1014A00C0);
  sub_100010CC4((uint64_t)v4, &qword_1014A00B8);
  return sub_100010CC4((uint64_t)v10, &qword_1014A00C0);
}

uint64_t *sub_1001F23B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[9];
  _OWORD v85[9];
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  __int128 v96;
  _OWORD v97[3];
  _OWORD v98[3];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;

  v73 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v73);
  v3 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100008B04(&qword_1014A00E0);
  __chkstk_darwin(v69);
  v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100008B04(&qword_1014A00E8);
  __chkstk_darwin(v70);
  v72 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v71 = (uint64_t)&v63 - v8;
  __chkstk_darwin(v9);
  v68 = (uint64_t)&v63 - v10;
  __chkstk_darwin(v11);
  v74 = (uint64_t)&v63 - v12;
  v67 = static Color.yellow.getter(v13);
  v14 = static Alignment.center.getter(v67);
  v16 = _FrameLayout.init(width:height:alignment:)(&v86, 0x403C000000000000, 0, 0x403C000000000000, 0, v14, v15);
  v17 = v86;
  v18 = v87;
  v19 = v88;
  v20 = v89;
  v63 = v91;
  v64 = v90;
  v66 = (void (*)(char *, uint64_t, uint64_t))static Alignment.center.getter(v16);
  *(_QWORD *)&v65 = v21;
  static Color.white.getter(v66);
  v22 = Color.opacity(_:)(0.5);
  v23 = swift_release();
  v24 = static Alignment.center.getter(v23);
  _FrameLayout.init(width:height:alignment:)(&v92, 0x4028000000000000, 0, 0x4028000000000000, 0, v24, v25);
  *(_QWORD *)&v99 = v67;
  WORD4(v99) = 256;
  *(_QWORD *)&v100 = v17;
  BYTE8(v100) = v18;
  *(_QWORD *)&v101 = v19;
  BYTE8(v101) = v20;
  *(_QWORD *)&v102 = v64;
  *((_QWORD *)&v102 + 1) = v63;
  *(_QWORD *)&v103 = v22;
  WORD4(v103) = 256;
  *(_QWORD *)&v104 = v92;
  BYTE8(v104) = v93;
  *(_QWORD *)&v105 = v94;
  BYTE8(v105) = v95;
  v106 = v96;
  *(_QWORD *)&v107 = v66;
  *((_QWORD *)&v107 + 1) = v65;
  v26 = &v3[*(int *)(v73 + 20)];
  v27 = enum case for RoundedCornerStyle.continuous(_:);
  LODWORD(v67) = enum case for RoundedCornerStyle.continuous(_:);
  v28 = type metadata accessor for RoundedCornerStyle(0);
  v66 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104);
  v66(v26, v27, v28);
  __asm { FMOV            V0.2D, #4.0 }
  v65 = _Q0;
  *(_OWORD *)v3 = _Q0;
  v34 = (void *)objc_opt_self(UIColor);
  v35 = Color.init(uiColor:)(objc_msgSend(v34, "systemGray3Color"));
  sub_10015553C((uint64_t)v3, (uint64_t)v5);
  v36 = v69;
  *(_QWORD *)&v5[*(int *)(v69 + 52)] = v35;
  *(_WORD *)&v5[*(int *)(v36 + 56)] = 256;
  v37 = sub_100155580((uint64_t)v3);
  v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(v97, 0x4066800000000000, 0, 0x4034000000000000, 0, v38, v39);
  v40 = v68;
  sub_10000C1FC((uint64_t)v5, v68, &qword_1014A00E0);
  v41 = v70;
  v42 = (_OWORD *)(v40 + *(int *)(v70 + 36));
  v43 = v97[1];
  *v42 = v97[0];
  v42[1] = v43;
  v42[2] = v97[2];
  sub_100010CC4((uint64_t)v5, &qword_1014A00E0);
  sub_1000207BC(v40, v74, &qword_1014A00E8);
  v66(&v3[*(int *)(v73 + 20)], v67, v28);
  *(_OWORD *)v3 = v65;
  v44 = Color.init(uiColor:)(objc_msgSend(v34, "systemGray3Color"));
  sub_10015553C((uint64_t)v3, (uint64_t)v5);
  *(_QWORD *)&v5[*(int *)(v36 + 52)] = v44;
  *(_WORD *)&v5[*(int *)(v36 + 56)] = 256;
  v45 = sub_100155580((uint64_t)v3);
  v46 = static Alignment.center.getter(v45);
  _FrameLayout.init(width:height:alignment:)(v98, 0x4066800000000000, 0, 0x4034000000000000, 0, v46, v47);
  v48 = v71;
  sub_10000C1FC((uint64_t)v5, v71, &qword_1014A00E0);
  v49 = (_OWORD *)(v48 + *(int *)(v41 + 36));
  v50 = v98[1];
  *v49 = v98[0];
  v49[1] = v50;
  v49[2] = v98[2];
  sub_100010CC4((uint64_t)v5, &qword_1014A00E0);
  sub_1000207BC(v48, v40, &qword_1014A00E8);
  v81 = v105;
  v82 = v106;
  v83 = v107;
  v77 = v101;
  v78 = v102;
  v79 = v103;
  v80 = v104;
  v75 = v99;
  v76 = v100;
  v51 = v74;
  sub_10000C1FC(v74, v48, &qword_1014A00E8);
  v52 = v72;
  sub_10000C1FC(v40, v72, &qword_1014A00E8);
  v53 = v82;
  v84[6] = v81;
  v84[7] = v82;
  v54 = v83;
  v84[8] = v83;
  v55 = v77;
  v56 = v78;
  v84[2] = v77;
  v84[3] = v78;
  v58 = v79;
  v57 = v80;
  v84[4] = v79;
  v84[5] = v80;
  v60 = v75;
  v59 = v76;
  v84[0] = v75;
  v84[1] = v76;
  *(_OWORD *)(a1 + 96) = v81;
  *(_OWORD *)(a1 + 112) = v53;
  *(_OWORD *)(a1 + 128) = v54;
  *(_OWORD *)(a1 + 32) = v55;
  *(_OWORD *)(a1 + 48) = v56;
  *(_OWORD *)(a1 + 64) = v58;
  *(_OWORD *)(a1 + 80) = v57;
  *(_OWORD *)a1 = v60;
  *(_OWORD *)(a1 + 16) = v59;
  *(_QWORD *)(a1 + 144) = 0;
  *(_BYTE *)(a1 + 152) = 1;
  v61 = sub_100008B04(&qword_1014A00F8);
  sub_10000C1FC(v48, a1 + *(int *)(v61 + 64), &qword_1014A00E8);
  sub_10000C1FC(v52, a1 + *(int *)(v61 + 80), &qword_1014A00E8);
  sub_1001F314C(v84);
  sub_1001F314C(&v99);
  sub_100010CC4(v40, &qword_1014A00E8);
  sub_100010CC4(v51, &qword_1014A00E8);
  sub_1001F3180((uint64_t *)&v99);
  sub_100010CC4(v52, &qword_1014A00E8);
  sub_100010CC4(v48, &qword_1014A00E8);
  v85[6] = v81;
  v85[7] = v82;
  v85[8] = v83;
  v85[2] = v77;
  v85[3] = v78;
  v85[4] = v79;
  v85[5] = v80;
  v85[0] = v75;
  v85[1] = v76;
  return sub_1001F3180((uint64_t *)v85);
}

uint64_t sub_1001F29B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _OWORD v53[3];
  _OWORD v54[3];

  v52 = a1;
  v1 = type metadata accessor for RoundedRectangle(0);
  v49 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_1014A00E0);
  __chkstk_darwin(v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100008B04(&qword_1014A00E8);
  __chkstk_darwin(v50);
  v51 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  __chkstk_darwin(v14);
  v48 = (uint64_t)&v47 - v15;
  v16 = &v3[*(int *)(v1 + 20)];
  v17 = enum case for RoundedCornerStyle.continuous(_:);
  v18 = type metadata accessor for RoundedCornerStyle(0);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104);
  v20 = v19(v16, v17, v18);
  __asm { FMOV            V0.2D, #4.0 }
  v47 = _Q0;
  *(_OWORD *)v3 = _Q0;
  v26 = static Color.gray.getter(v20);
  sub_10015553C((uint64_t)v3, (uint64_t)v6);
  *(_QWORD *)&v6[*(int *)(v4 + 52)] = v26;
  *(_WORD *)&v6[*(int *)(v4 + 56)] = 256;
  v27 = sub_100155580((uint64_t)v3);
  v28 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v53, 0x4047000000000000, 0, 0x4034000000000000, 0, v28, v29);
  sub_10000C1FC((uint64_t)v6, (uint64_t)v13, &qword_1014A00E0);
  v30 = v50;
  v31 = &v13[*(int *)(v50 + 36)];
  v32 = v53[1];
  *(_OWORD *)v31 = v53[0];
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v53[2];
  sub_100010CC4((uint64_t)v6, &qword_1014A00E0);
  v33 = v48;
  sub_1000207BC((uint64_t)v13, v48, &qword_1014A00E8);
  v34 = v19(&v3[*(int *)(v49 + 20)], v17, v18);
  *(_OWORD *)v3 = v47;
  v35 = static Color.gray.getter(v34);
  sub_10015553C((uint64_t)v3, (uint64_t)v6);
  *(_QWORD *)&v6[*(int *)(v4 + 52)] = v35;
  *(_WORD *)&v6[*(int *)(v4 + 56)] = 256;
  v36 = sub_100155580((uint64_t)v3);
  v37 = static Alignment.center.getter(v36);
  _FrameLayout.init(width:height:alignment:)(v54, 0x4047000000000000, 0, 0x4034000000000000, 0, v37, v38);
  sub_10000C1FC((uint64_t)v6, (uint64_t)v10, &qword_1014A00E0);
  v39 = &v10[*(int *)(v30 + 36)];
  v40 = v54[1];
  *(_OWORD *)v39 = v54[0];
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v54[2];
  sub_100010CC4((uint64_t)v6, &qword_1014A00E0);
  sub_1000207BC((uint64_t)v10, (uint64_t)v13, &qword_1014A00E8);
  v41 = v33;
  sub_10000C1FC(v33, (uint64_t)v10, &qword_1014A00E8);
  v42 = v51;
  sub_10000C1FC((uint64_t)v13, v51, &qword_1014A00E8);
  v43 = v52;
  *v52 = 0;
  *((_BYTE *)v43 + 8) = 1;
  v44 = v43;
  v45 = sub_100008B04(&qword_1014A00F0);
  sub_10000C1FC((uint64_t)v10, (uint64_t)v44 + *(int *)(v45 + 48), &qword_1014A00E8);
  sub_10000C1FC(v42, (uint64_t)v44 + *(int *)(v45 + 64), &qword_1014A00E8);
  sub_100010CC4((uint64_t)v13, &qword_1014A00E8);
  sub_100010CC4(v41, &qword_1014A00E8);
  sub_100010CC4(v42, &qword_1014A00E8);
  return sub_100010CC4((uint64_t)v10, &qword_1014A00E8);
}

uint64_t sub_1001F2D68(__n128 a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  unint64_t v8;

  v2 = GeometryProxy.size.getter(a1);
  if (qword_101491148 != -1)
    v1 = swift_once(&qword_101491148, sub_1001F15B8);
  v3 = v2 / *(double *)&qword_1014D50F8;
  v4 = static UnitPoint.center.getter(v1);
  v6 = v5;
  v7 = type metadata accessor for EmptyVisualEffect(0);
  v8 = sub_1001F30F4();
  return VisualEffect.scaleEffect(_:anchor:)(v7, v8, v3, v3, v4, v6);
}

uint64_t sub_1001F2E20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _UNKNOWN **v6;

  v6 = &off_10119A958;
  v0 = sub_100008B04(&qword_10149FFF0);
  v1 = sub_100008B04(&qword_10149FFF8);
  v2 = sub_1001F2EEC();
  v3 = sub_1001F2F30();
  v4 = sub_100010D70(&qword_1014A0050, &qword_10149FFF8, (const char *)&protocol conformance descriptor for [A]);
  return ((uint64_t (*)(_UNKNOWN ***, uint64_t (*)@<X0>(_BYTE *@<X0>, uint64_t@<X8>), _QWORD, void *, _QWORD, ValueMetadata *, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))PhaseAnimator.init<A>(_:content:animation:))(&v6, sub_1001F15D8, 0, &j___s7SwiftUI9AnimationV7defaultACvgZ, 0, &type metadata for NearbyTransitTeachableMomentAnimation.AnimationPhase, v0, v1, v2, v3, v4);
}

unint64_t sub_1001F2EEC()
{
  unint64_t result;

  result = qword_1014A0000;
  if (!qword_1014A0000)
  {
    result = swift_getWitnessTable(byte_100E334A0, &type metadata for NearbyTransitTeachableMomentAnimation.AnimationPhase);
    atomic_store(result, (unint64_t *)&qword_1014A0000);
  }
  return result;
}

unint64_t sub_1001F2F30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[2];
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = qword_1014A0008;
  if (!qword_1014A0008)
  {
    v1 = sub_10000E5D4(&qword_10149FFF0);
    v2 = sub_10000E5D4(&qword_1014A0010);
    v3 = sub_10000E5D4(&qword_1014A0018);
    v4 = sub_10002067C(&qword_1014A0020, &qword_1014A0010, sub_1001F304C, (uint64_t)&protocol witness table for _AspectRatioLayout);
    v7 = type metadata accessor for EmptyVisualEffect(255);
    v8 = sub_1001F30F4();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of VisualEffect.scaleEffect(_:anchor:)>>, 1);
    v7 = v2;
    v8 = v3;
    v9 = v4;
    v10 = OpaqueTypeConformance2;
    v6[0] = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.visualEffect<A>(_:)>>, 1);
    v6[1] = sub_100010D70(&qword_101496730, &qword_101496738, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v6);
    atomic_store(result, (unint64_t *)&qword_1014A0008);
  }
  return result;
}

uint64_t sub_1001F304C()
{
  return sub_10002067C(&qword_1014A0028, &qword_1014A0030, (uint64_t (*)(void))sub_1001F3070, (uint64_t)&protocol witness table for _SafeAreaRegionsIgnoringLayout);
}

unint64_t sub_1001F3070()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0038;
  if (!qword_1014A0038)
  {
    v1 = sub_10000E5D4(&qword_1014998F0);
    v2[0] = sub_100010D70(&qword_1014A0040, &qword_1014998E8, (const char *)&protocol conformance descriptor for ZStack<A>);
    v2[1] = &protocol witness table for _FlexFrameLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0038);
  }
  return result;
}

unint64_t sub_1001F30F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014A0048;
  if (!qword_1014A0048)
  {
    v1 = type metadata accessor for EmptyVisualEffect(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for EmptyVisualEffect, v1);
    atomic_store(result, (unint64_t *)&qword_1014A0048);
  }
  return result;
}

_QWORD *sub_1001F314C(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[8];
  swift_retain(*a1);
  swift_retain(v2);
  return a1;
}

uint64_t *sub_1001F3180(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_release(a1[8]);
  swift_release(v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for NearbyTransitTeachableMomentAnimation.AnimationPhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F3200 + 4 * byte_100E33335[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F3234 + 4 * byte_100E33330[v4]))();
}

uint64_t sub_1001F3234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F323C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F3244);
  return result;
}

uint64_t sub_1001F3250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F3258);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F325C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F3264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitTeachableMomentAnimation.AnimationPhase()
{
  return &type metadata for NearbyTransitTeachableMomentAnimation.AnimationPhase;
}

uint64_t sub_1001F3280()
{
  return sub_100010D70(&qword_1014A0100, &qword_1014A0108, (const char *)&protocol conformance descriptor for PhaseAnimator<A, B>);
}

uint64_t sub_1001F32AC()
{
  return sub_100010D70((unint64_t *)&unk_1014A0110, &qword_10149FFF8, (const char *)&protocol conformance descriptor for [A]);
}

id sub_1001F32DC(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id result;
  id v14;
  objc_super v15;

  v7 = &v3[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_platformController];
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_platformController]);
  v8 = &v3[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  swift_unknownObjectWeakAssign(v7, a1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session] = a2;
  v10 = objc_allocWithZone((Class)NavigationRouteHistoryInfoProvider);
  v11 = v3;
  v12 = a2;
  result = objc_msgSend(v10, "initWithNavigationService:", a3);
  if (result)
  {
    *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_routeInfoProvider] = result;

    v15.receiver = v11;
    v15.super_class = (Class)type metadata accessor for NavigationProgressCapturingTask(0);
    v14 = objc_msgSendSuper2(&v15, "init");
    objc_msgSend(a3, "registerObserver:", v14);

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001F3580()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationProgressCapturingTask(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001F360C()
{
  return type metadata accessor for NavigationProgressCapturingTask(0);
}

uint64_t type metadata accessor for NavigationProgressCapturingTask(uint64_t a1)
{
  uint64_t result;

  result = qword_1014A01D8;
  if (!qword_1014A01D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for NavigationProgressCapturingTask);
  return result;
}

void sub_1001F3650(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1001F36D8(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_1001F36D8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1014A01E8)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1014A01E8);
  }
}

void *sub_1001F3744()
{
  uint64_t v0;
  void *result;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17;

  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_platformController);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, "sessionStack");

    v4 = sub_100008B04((uint64_t *)&unk_10149EE60);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    v17 = v5;
    if ((unint64_t)v5 >> 62)
      goto LABEL_16;
    v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
    {
      while (1)
      {
        while (__OFSUB__(v7--, 1))
        {
          __break(1u);
LABEL_14:
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          if (v5 < 0)
            v13 = v5;
          else
            v13 = v5 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v5);
          v7 = _CocoaArrayWrapper.endIndex.getter(v13);
          swift_bridgeObjectRelease(v5);
          if (!v7)
            goto LABEL_20;
        }
        if ((v5 & 0xC000000000000001) != 0)
        {
          v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
          goto LABEL_10;
        }
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_14;
        if (v7 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_15;
        v9 = *(_QWORD *)(v5 + 32 + 8 * v7);
        swift_unknownObjectRetain(v9);
LABEL_10:
        v10 = objc_opt_self(RoutePlanningSession);
        v11 = swift_dynamicCastObjCClass(v9, v10);
        v12 = v11 == 0;
        v6 = swift_unknownObjectRelease(v9);
        if (v11 || !v7)
          goto LABEL_21;
      }
    }
LABEL_20:
    v12 = 1;
LABEL_21:
    __chkstk_darwin(v6);
    v16[2] = &v17;
    v14 = sub_1001ABCC4((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_1001F499C, (uint64_t)v16, v7, v12);
    swift_bridgeObjectRelease(v5);
    if (v14)
    {
      v15 = objc_opt_self(RoutePlanningSession);
      result = (void *)swift_dynamicCastObjCClass(v14, v15);
      if (result)
        return result;
      swift_unknownObjectRelease(v14);
    }
    return 0;
  }
  return result;
}

void sub_1001F392C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  void *v25;
  void *v26;
  Class v27;
  id v28;
  __n128 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t *v46;
  uint64_t Strong;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __n128 v58;
  void (*v59)(char *, uint64_t, __n128);
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint8_t *v74;
  void *v75;
  Class isa;
  Class v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  Class v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[16];

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v80 - v11;
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - v14;
  v16 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v16);
  v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v80 - v20;
  if (MNNavigationServiceStateChangedToNavigating(a2, a3, v22))
  {
    if (a1)
    {
      v23 = (objc_class *)objc_msgSend(a1, "route");
      if (v23)
      {
        v83 = v23;
        v24 = v84;
        v25 = sub_1001F3744();
        if (v25
          && (v26 = v25,
              v27 = (Class)objc_msgSend(v25, "configuration"),
              v26,
              v27))
        {
          v28 = objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_routeInfoProvider], "currentHistoryEntryRouteIdentifier");
          if (v28)
          {
            v30 = v28;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

            v31 = 0;
          }
          else
          {
            v31 = 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v21, v31, 1, v6);
          v40 = (uint64_t)&v24[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
          swift_beginAccess(&v24[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier], &v86, 33, 0);
          sub_1001F490C((uint64_t)v21, v40);
          swift_endAccess(&v86);
          sub_1000A4FC0(v40, (uint64_t)v18);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6) == 1)
          {
            sub_1000A5008((uint64_t)v18);
            if (qword_101491150 != -1)
              swift_once(&qword_101491150, sub_1001F486C);
            v41 = type metadata accessor for Logger(0);
            sub_10000E918(v41, (uint64_t)qword_1014A0120);
            v42 = v24;
            v43 = Logger.logObject.getter(v42);
            v44 = static os_log_type_t.error.getter(v43);
            if (os_log_type_enabled(v43, v44))
            {
              v45 = (uint8_t *)swift_slowAlloc(12, -1);
              v46 = (uint64_t *)swift_slowAlloc(8, -1);
              *(_DWORD *)v45 = 138412290;
              Strong = swift_unknownObjectWeakLoadStrong(&v42[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_platformController]);
              v48 = Strong;
              if (Strong)
                v86 = Strong;
              else
                v86 = 0;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, v87, v45 + 4, v45 + 12);
              *v46 = v48;

              _os_log_impl((void *)&_mh_execute_header, v43, v44, "navigationService changed to navigating, but activeRouteIdentifier was nil. Current platform stack: %@", v45, 0xCu);
              v79 = sub_100008B04((uint64_t *)&unk_101494470);
              swift_arrayDestroy(v46, 1, v79);
              swift_slowDealloc(v46, -1, -1);
              swift_slowDealloc(v45, -1, -1);

            }
            else
            {

            }
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v18, v6);
            if (-[objc_class isResumingMultipointRoute](v27, "isResumingMultipointRoute"))
            {
              if (qword_101491150 != -1)
                swift_once(&qword_101491150, sub_1001F486C);
              v49 = type metadata accessor for Logger(0);
              sub_10000E918(v49, (uint64_t)qword_1014A0120);
              v50 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v12, v15, v6);
              v51 = Logger.logObject.getter(v50);
              v52 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v51, v52))
              {
                v53 = (uint8_t *)swift_slowAlloc(12, -1);
                v82 = swift_slowAlloc(32, -1);
                v86 = v82;
                *(_DWORD *)v53 = 136315138;
                v81 = v53 + 4;
                v54 = sub_1001F4954();
                v55 = dispatch thunk of CustomStringConvertible.description.getter(v6, v54);
                v57 = v56;
                v85 = sub_1000C28FC(v55, v56, &v86);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86, v81, v53 + 12);
                v58 = swift_bridgeObjectRelease(v57);
                v59 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
                v59(v12, v6, v58);
                _os_log_impl((void *)&_mh_execute_header, v51, v52, "navigationService changed to navigating with resume route flag present. Will log resume nav event with id: %s", v53, 0xCu);
                v60 = v82;
                swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v60, -1, -1);
                v61 = v53;
                v24 = v84;
                swift_slowDealloc(v61, -1, -1);
              }
              else
              {
                v59 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
                ((void (*)(char *, uint64_t))v59)(v12, v6);
              }

              v75 = *(void **)&v24[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session];
              isa = UUID._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v75, "resumeNavigationWithRouteID:", isa);
              v77 = v83;
              v83 = v27;
              v27 = isa;
            }
            else
            {
              if (qword_101491150 != -1)
                swift_once(&qword_101491150, sub_1001F486C);
              v63 = type metadata accessor for Logger(0);
              sub_10000E918(v63, (uint64_t)qword_1014A0120);
              v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v6);
              v65 = Logger.logObject.getter(v64);
              v66 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v65, v66))
              {
                v67 = (uint8_t *)swift_slowAlloc(12, -1);
                v82 = swift_slowAlloc(32, -1);
                v86 = v82;
                *(_DWORD *)v67 = 136315138;
                v81 = v67 + 4;
                v68 = sub_1001F4954();
                v69 = dispatch thunk of CustomStringConvertible.description.getter(v6, v68);
                v71 = v70;
                v85 = sub_1000C28FC(v69, v70, &v86);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86, v81, v67 + 12);
                v72 = swift_bridgeObjectRelease(v71);
                v59 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
                v59(v9, v6, v72);
                _os_log_impl((void *)&_mh_execute_header, v65, v66, "navigationService changed to navigating. Will log start nav event with id: %s", v67, 0xCu);
                v73 = v82;
                swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
                swift_slowDealloc(v73, -1, -1);
                v74 = v67;
                v24 = v84;
                swift_slowDealloc(v74, -1, -1);
              }
              else
              {
                v59 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
                ((void (*)(char *, uint64_t))v59)(v9, v6);
              }

              v78 = *(void **)&v24[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session];
              v77 = UUID._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v78, "startNavigationWithRouteID:isEVRoute:", v77, -[objc_class isEVRoute](v83, "isEVRoute"));
            }

            ((void (*)(char *, uint64_t))v59)(v15, v6);
          }
        }
        else
        {
          if (qword_101491150 != -1)
            swift_once(&qword_101491150, sub_1001F486C);
          v32 = type metadata accessor for Logger(0);
          sub_10000E918(v32, (uint64_t)qword_1014A0120);
          v33 = v24;
          v34 = Logger.logObject.getter(v33);
          v35 = static os_log_type_t.error.getter(v34);
          if (os_log_type_enabled(v34, v35))
          {
            v36 = (uint8_t *)swift_slowAlloc(12, -1);
            v37 = (uint64_t *)swift_slowAlloc(8, -1);
            *(_DWORD *)v36 = 138412290;
            v38 = swift_unknownObjectWeakLoadStrong(&v33[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_platformController]);
            v39 = v38;
            if (v38)
              v86 = v38;
            else
              v86 = 0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, v87, v36 + 4, v36 + 12);
            *v37 = v39;

            _os_log_impl((void *)&_mh_execute_header, v34, v35, "navigationService changed to navigating, but there was no RP session configuration. Current platform stack: %@", v36, 0xCu);
            v62 = sub_100008B04((uint64_t *)&unk_101494470);
            swift_arrayDestroy(v37, 1, v62);
            swift_slowDealloc(v37, -1, -1);
            swift_slowDealloc(v36, -1, -1);

          }
          else
          {

          }
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1001F42C0(void *a1, unint64_t a2)
{
  char *v2;
  void *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t *v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  int v31;
  _DWORD *v32;
  _DWORD *v33;
  __CFString *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  void *v42;
  Class isa;
  uint64_t v44;
  uint64_t v46;
  int v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[24];

  v4 = v2;
  v7 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    __break(1u);
  if (sub_100325B6C(a1, a2) || !objc_msgSend(a1, "isInNavigatingState"))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
    v26 = (uint64_t)&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
    swift_beginAccess(&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier], v53, 33, 0);
    sub_1001F490C((uint64_t)v9, v26);
    v27 = (uint64_t *)v53;
  }
  else
  {
    v17 = (uint64_t)&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier];
    swift_beginAccess(&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_activeRouteIdentifier], v53, 0, 0);
    sub_1000A4FC0(v17, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1000A5008((uint64_t)v12);
      if (qword_101491150 != -1)
        swift_once(&qword_101491150, sub_1001F486C);
      v18 = type metadata accessor for Logger(0);
      sub_10000E918(v18, (uint64_t)qword_1014A0120);
      v19 = v4;
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.error.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v49 = v17;
        v22 = (uint8_t *)swift_slowAlloc(12, -1);
        v23 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v22 = 138412290;
        Strong = swift_unknownObjectWeakLoadStrong((char *)v19 + OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_platformController);
        v25 = Strong;
        if (Strong)
          v51 = Strong;
        else
          v51 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v22 + 4, v22 + 12);
        *v23 = v25;

        _os_log_impl((void *)&_mh_execute_header, v20, v21, "navigationService willEnd, but activeRouteIdentifier was nil. Current platform stack: %@", v22, 0xCu);
        v44 = sub_100008B04((uint64_t *)&unk_101494470);
        swift_arrayDestroy(v23, 1, v44);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v22, -1, -1);
        v17 = v49;
      }
      else
      {

        v20 = v19;
      }

    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      if (qword_101491150 != -1)
        swift_once(&qword_101491150, sub_1001F486C);
      v28 = type metadata accessor for Logger(0);
      v29 = sub_10000E918(v28, (uint64_t)qword_1014A0120);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, (os_log_type_t)v31))
      {
        v47 = v31;
        v49 = v17;
        v32 = (_DWORD *)swift_slowAlloc(12, -1);
        v46 = swift_slowAlloc(32, -1);
        v51 = v46;
        v48 = (uint8_t *)v32;
        *v32 = 136315138;
        v33 = v32 + 1;
        if (a2 <= 0xA)
        {
          v3 = *(&off_1011AB3D8 + a2);
          v34 = *(&off_1011AB380 + a2);
        }
        v35 = v3;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
        v38 = v37;

        v39 = sub_1000C28FC(v36, v38, &v51);
        v40 = v48;
        v50 = v39;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v33, v48 + 12);
        swift_bridgeObjectRelease(v38);
        _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v47, "navigationService didEndWithReason: %s which did not result into a pause event, will log termination event instead", v40, 0xCu);
        v41 = v46;
        swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v40, -1, -1);

        v17 = v49;
      }
      else
      {

      }
      v42 = *(void **)&v4[OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session];
      isa = UUID._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v42, "terminateNavigationWithRouteID:", isa);

      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v9, 1, 1, v13);
    swift_beginAccess(v17, &v51, 33, 0);
    sub_1001F490C((uint64_t)v9, v17);
    v27 = &v51;
  }
  return swift_endAccess(v27);
}

uint64_t sub_1001F486C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for Logger(0);
  sub_10000E930(v0, qword_1014A0120);
  sub_10000E918(v0, (uint64_t)qword_1014A0120);
  v5 = type metadata accessor for NavigationProgressCapturingTask(0);
  v1 = sub_100008B04(&qword_1014A02B0);
  v2 = String.init<A>(describing:)(&v5, v1);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEE007370614D2E65, v2, v3);
}

uint64_t sub_1001F490C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149AA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001F4954()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149FFD8;
  if (!qword_10149FFD8)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_10149FFD8);
  }
  return result;
}

unint64_t sub_1001F499C@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1001ABD18(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1001F49B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint8_t *v32;
  void *v33;
  Class isa;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - v12;
  sub_1000A4FC0(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000A5008((uint64_t)v6);
    if (qword_101491150 != -1)
      swift_once(&qword_101491150, sub_1001F486C);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_10000E918(v14, (uint64_t)qword_1014A0120);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "routeInterrupter interrupted a route without an identifier, ignoring this action", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    if (qword_101491150 != -1)
      swift_once(&qword_101491150, sub_1001F486C);
    v19 = type metadata accessor for Logger(0);
    sub_10000E918(v19, (uint64_t)qword_1014A0120);
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc(12, -1);
      v36 = v2;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v38 = v25;
      *(_DWORD *)v24 = 136315138;
      v35 = v24 + 4;
      v26 = sub_1001F4954();
      v27 = dispatch thunk of CustomStringConvertible.description.getter(v7, v26);
      v29 = v28;
      v37 = sub_1000C28FC(v27, v28, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v35, v24 + 12);
      v30 = swift_bridgeObjectRelease(v29);
      v31 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      v31(v10, v7, v30);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "routeInterrupter interrupted a route with id: %s, will log analytics event", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      v32 = v24;
      v2 = v36;
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      ((void (*)(char *, uint64_t))v31)(v10, v7);
    }

    v33 = *(void **)(v2 + OBJC_IVAR____TtC4Maps31NavigationProgressCapturingTask_session);
    isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v33, "pauseNavigationWithRouteID:", isa);

    ((void (*)(char *, uint64_t))v31)(v13, v7);
  }
}

unint64_t sub_1001F4D44()
{
  unint64_t result;

  result = qword_1014A02B8;
  if (!qword_1014A02B8)
  {
    result = swift_getWitnessTable(byte_100E33560, &type metadata for HomeListOneLineCellModel);
    atomic_store(result, (unint64_t *)&qword_1014A02B8);
  }
  return result;
}

uint64_t sub_1001F4D88(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      type metadata accessor for LibraryItemsCount();
      v4 = v3;
      v5 = v2;
      v6 = static NSObject.== infix(_:_:)(v5, v4);

      if ((v6 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1001F4DFC()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_100008B04(&qword_10149C108);
  sub_10000E930(v0, qword_1014D5108);
  sub_10000E918(v0, (uint64_t)qword_1014D5108);
  v1 = sub_1001F53AC();
  return UICollectionView.CellRegistration.init(handler:)(sub_1001F4E6C, 0, v1, &type metadata for HomeListOneLineCellModel);
}

uint64_t sub_1001F4E6C(void *a1, uint64_t a2, id *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  Swift::String v26;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD v33[2];
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];

  v33[1] = a1;
  v5 = type metadata accessor for UIListContentConfiguration(0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_101492C58);
  __chkstk_darwin(v8);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for UICellAccessory.DisplayedState(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *a3;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityIdentifier:", v19);

  v20 = sub_100008B04(&qword_101492C60);
  v21 = type metadata accessor for UICellAccessory(0);
  v22 = swift_allocObject(v20, ((*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v21 - 8) + 80) | 7);
  *(_OWORD *)(v22 + 16) = xmmword_100E22F40;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for UICellAccessory.DisplayedState.always(_:), v15);
  v23 = type metadata accessor for UICellAccessory.LayoutDimension(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)(2, v10, 0);
  static UICellAccessory.disclosureIndicator(displayed:options:)(v18, v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  v24 = UICollectionViewListCell.accessories.setter(v22);
  UICollectionViewListCell.defaultContentConfiguration()(v24);
  if (v34)
  {
    v25 = v34;
    v26 = LibraryItemsCount.descriptionForLibrarySectionInHome()();
    countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;

  }
  else
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  UIListContentConfiguration.text.setter(countAndFlagsBits, object);
  v29 = v36;
  v37[3] = v36;
  v37[4] = &protocol witness table for UIListContentConfiguration;
  v30 = sub_100011DCC(v37);
  v31 = v35;
  (*(void (**)(_QWORD *, char *, uint64_t))(v35 + 16))(v30, v7, v29);
  UICollectionViewCell.contentConfiguration.setter(v37);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v7, v29);
}

uint64_t sub_1001F5154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101491158 != -1)
    swift_once(&qword_101491158, sub_1001F4DFC);
  v2 = sub_100008B04(&qword_10149C108);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D5108);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

id sub_1001F51C8()
{
  return objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PlaceLibraryHomeAction()), "init");
}

Swift::Int sub_1001F51EC()
{
  void **v0;
  void *v1;
  id v2;
  _QWORD v4[9];

  v1 = *v0;
  Hasher.init(_seed:)(v4, 0);
  Hasher._combine(_:)(0);
  if (v1)
  {
    Hasher._combine(_:)(1u);
    v2 = v1;
    NSObject.hash(into:)(v4);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_1001F5260(uint64_t a1)
{
  void **v1;
  void **v2;
  void *v4;
  id v5;

  v2 = v1;
  v4 = *v2;
  Hasher._combine(_:)(0);
  if (v4)
  {
    Hasher._combine(_:)(1u);
    v5 = v4;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1001F52D4(uint64_t a1)
{
  void **v1;
  void *v2;
  id v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  Hasher._combine(_:)(0);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    v3 = v2;
    NSObject.hash(into:)(v5);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

unint64_t sub_1001F5344(uint64_t a1)
{
  unint64_t result;

  result = sub_1001F5368();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001F5368()
{
  unint64_t result;

  result = qword_1014A02F8;
  if (!qword_1014A02F8)
  {
    result = swift_getWitnessTable(byte_100E33520, &type metadata for HomeListOneLineCellModel);
    atomic_store(result, (unint64_t *)&qword_1014A02F8);
  }
  return result;
}

unint64_t sub_1001F53AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149F928;
  if (!qword_10149F928)
  {
    v1 = objc_opt_self(MapsThemeCollectionViewListCell);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10149F928);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for HomeListOneLineCellModel(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for HomeListOneLineCellModel(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for HomeListOneLineCellModel(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListOneLineCellModel(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListOneLineCellModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListOneLineCellModel()
{
  return &type metadata for HomeListOneLineCellModel;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitCategory()
{
  return &type metadata for PlaceSummaryUnitCategory;
}

unint64_t sub_1001F554C()
{
  unint64_t result;

  result = qword_1014A0300;
  if (!qword_1014A0300)
  {
    result = swift_getWitnessTable(byte_100E33660, &type metadata for TransitPreferFerryEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1014A0300);
  }
  return result;
}

uint64_t sub_1001F5590()
{
  return sub_100010D70(&qword_1014A0308, &qword_10149FE88, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_1001F55BC()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D5120);
  sub_10000E918(v20, (uint64_t)qword_1014D5120);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x4620726566657250, 0xEC00000079727265);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "A setting to choose travel by ferry as a transit preference", 59, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_1001F57D4(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D5138);
  sub_10000E918(v1, (uint64_t)qword_1014D5138);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100E532F0);
}

uint64_t sub_1001F5834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D5150);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D5150);
  IntentDescription.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100E532C0);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_1001F58BC()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E33B30);
  qword_1014D5168 = result;
  return result;
}

uint64_t sub_1001F58E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_1001F58FC, 0, 0);
}

uint64_t sub_1001F58FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101491178 != -1)
    swift_once(&qword_101491178, sub_1001F58BC);
  v2 = qword_1014D5168;
  *(_QWORD *)(v0 + 80) = qword_1014D5168;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149FE90, &qword_10149FE98, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_1001F59FC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_1001F59FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_1001F5A7C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001F5A7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D5168;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_1001F5B10()
{
  double result;

  if (qword_101491178 != -1)
    swift_once(&qword_101491178, sub_1001F58BC);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_1001F5B54()
{
  unint64_t result;

  result = qword_1014A0310;
  if (!qword_1014A0310)
  {
    result = swift_getWitnessTable(byte_100E336F0, &type metadata for TransitPreferFerryEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1014A0310);
  }
  return result;
}

unint64_t sub_1001F5B9C()
{
  unint64_t result;

  result = qword_1014A0318;
  if (!qword_1014A0318)
  {
    result = swift_getWitnessTable(byte_100E33718, &type metadata for TransitPreferFerryEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_1014A0318);
  }
  return result;
}

uint64_t sub_1001F5BE0(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10106BDD0, 1) + 8);
}

uint64_t sub_1001F5C04(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1001F554C();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_1001F5C44@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491168, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D5138, (uint64_t)sub_1001F57D4, a1);
}

uint64_t sub_1001F5C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101491170 != -1)
    swift_once(&qword_101491170, sub_1001F5834);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D5150);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_1001F5CC8(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_1014A040C);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_1001F58FC, 0, 0);
}

uint64_t sub_1001F5D30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1001F67E8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001F5D54()
{
  return 0xD000000000000029;
}

unint64_t sub_1001F5D78()
{
  unint64_t result;

  result = qword_1014A0328;
  if (!qword_1014A0328)
  {
    result = swift_getWitnessTable(byte_100E3395C, &type metadata for TransitPreferFerryQuery);
    atomic_store(result, (unint64_t *)&qword_1014A0328);
  }
  return result;
}

unint64_t sub_1001F5DC0()
{
  unint64_t result;

  result = qword_1014A0330;
  if (!qword_1014A0330)
  {
    result = swift_getWitnessTable(aM_1, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0330);
  }
  return result;
}

unint64_t sub_1001F5E08()
{
  unint64_t result;

  result = qword_1014A0338;
  if (!qword_1014A0338)
  {
    result = swift_getWitnessTable(aU_5, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0338);
  }
  return result;
}

unint64_t sub_1001F5E50()
{
  unint64_t result;

  result = qword_1014A0340;
  if (!qword_1014A0340)
  {
    result = swift_getWitnessTable(asc_100E33824, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0340);
  }
  return result;
}

unint64_t sub_1001F5E98()
{
  unint64_t result;

  result = qword_1014A0348;
  if (!qword_1014A0348)
  {
    result = swift_getWitnessTable("m~7", &type metadata for TransitPreferFerryQuery);
    atomic_store(result, (unint64_t *)&qword_1014A0348);
  }
  return result;
}

uint64_t sub_1001F5EDC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001F5EF4, 0, 0);
}

uint64_t sub_1001F5EF4()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  id v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)TransitMutablePreferences), "initWithDefaults:", v2);

  LOBYTE(v2) = objc_msgSend(v3, "isModeDisabled:", 8);
  *v1 = v2 ^ 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F5F98(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_1001F5FB4, 0, 0);
}

uint64_t sub_1001F5FB4()
{
  uint64_t v0;
  char v1;
  id v2;
  id v3;
  int BOOL;

  v1 = *(_BYTE *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)TransitMutablePreferences), "initWithDefaults:", v2);

  objc_msgSend(v3, "setMode:disabled:", 8, (v1 & 1) == 0);
  objc_msgSend(v3, "synchronize");
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001F6090()
{
  unint64_t result;

  result = qword_1014A0350;
  if (!qword_1014A0350)
  {
    result = swift_getWitnessTable("]~7", &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0350);
  }
  return result;
}

unint64_t sub_1001F60D8()
{
  unint64_t result;

  result = qword_1014A0358;
  if (!qword_1014A0358)
  {
    result = swift_getWitnessTable(byte_100E33884, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0358);
  }
  return result;
}

unint64_t sub_1001F6120()
{
  unint64_t result;

  result = qword_1014A0360;
  if (!qword_1014A0360)
  {
    result = swift_getWitnessTable(byte_100E338AC, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0360);
  }
  return result;
}

unint64_t sub_1001F6168()
{
  unint64_t result;

  result = qword_1014A0368;
  if (!qword_1014A0368)
  {
    result = swift_getWitnessTable(byte_100E33904, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0368);
  }
  return result;
}

uint64_t sub_1001F61AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1001F6374();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1001F61E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491160, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D5120, (uint64_t)sub_1001F55BC, a1);
}

uint64_t sub_1001F620C()
{
  return sub_100010D70(&qword_1014A0370, &qword_1014A0378, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1001F6238(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001EE0C4();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001F6274()
{
  unint64_t result;

  result = qword_1014A0380;
  if (!qword_1014A0380)
  {
    result = swift_getWitnessTable(byte_100E33934, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, (unint64_t *)&qword_1014A0380);
  }
  return result;
}

uint64_t sub_1001F62B8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6374();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1001F62F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001F6168();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001F632C()
{
  unint64_t result;

  result = qword_1014A0388;
  if (!qword_1014A0388)
  {
    result = swift_getWitnessTable(byte_100E3399C, &type metadata for TransitPreferFerryQuery);
    atomic_store(result, (unint64_t *)&qword_1014A0388);
  }
  return result;
}

unint64_t sub_1001F6374()
{
  unint64_t result;

  result = qword_1014A0390[0];
  if (!qword_1014A0390[0])
  {
    result = swift_getWitnessTable(byte_100E33734, &type metadata for TransitPreferFerryEntity);
    atomic_store(result, qword_1014A0390);
  }
  return result;
}

uint64_t sub_1001F63B8(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001F6410, 0, 0);
}

uint64_t sub_1001F6410()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149FE88);
  LocalizedStringResource.init(stringLiteral:)(0x4620726566657250, 0xEC00000079727265);
  v3 = sub_100010D70(&qword_10149FE90, &qword_10149FE98, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_1014A03F0, 0, &unk_1014A03F8, 0, &type metadata for TransitPreferFerryEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001F64D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1001F5D78();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001F653C()
{
  unint64_t result;

  result = qword_1014A03A8;
  if (!qword_1014A03A8)
  {
    result = swift_getWitnessTable("U~7", &type metadata for TransitPreferFerryQuery);
    atomic_store(result, (unint64_t *)&qword_1014A03A8);
  }
  return result;
}

unint64_t sub_1001F6584()
{
  unint64_t result;

  result = qword_1014A03B0[0];
  if (!qword_1014A03B0[0])
  {
    result = swift_getWitnessTable("-|7", &type metadata for TransitPreferFerryQuery);
    atomic_store(result, qword_1014A03B0);
  }
  return result;
}

uint64_t sub_1001F65C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1001F5D78();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001F6634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_1001F5D78();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1001F66A0()
{
  unint64_t result;

  result = qword_1014A03C8;
  if (!qword_1014A03C8)
  {
    result = swift_getWitnessTable(byte_100E33AB4, &type metadata for TransitPreferFerryQuery);
    atomic_store(result, (unint64_t *)&qword_1014A03C8);
  }
  return result;
}

unint64_t sub_1001F66E8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1014A03D0;
  if (!qword_1014A03D0)
  {
    v1 = sub_10000E5D4(qword_1014A03D8);
    v2 = sub_1001F6120();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1014A03D0);
  }
  return result;
}

uint64_t sub_1001F674C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_1001F5E98();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransitPreferFerryQuery()
{
  return &type metadata for TransitPreferFerryQuery;
}

ValueMetadata *type metadata accessor for TransitPreferFerryEntity.UpdateIntent_value()
{
  return &type metadata for TransitPreferFerryEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for TransitPreferFerryEntity()
{
  return &type metadata for TransitPreferFerryEntity;
}

uint64_t sub_1001F67E8()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_1014A0400);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x8000000100E53270);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_1001EE0C4();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000026, 0x8000000100E53290);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_1001F6B0C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

char *sub_1001F6B18()
{
  char *v0;
  id v1;
  void *v2;
  char *v3;
  id v4;
  id v5;
  void *v6;
  objc_super v8;

  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps31PlaceSummaryEVChargerDownloader_garage] = 0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for PlaceSummaryEVChargerDownloader();
  v1 = objc_msgSendSuper2(&v8, "init");
  v2 = (void *)objc_opt_self(SearchVirtualGarageManager);
  v3 = (char *)v1;
  v4 = objc_msgSend(v2, "sharedSearchVirtualGarageManager");
  v5 = objc_msgSend(v4, "virtualGarage");

  v6 = *(void **)&v3[OBJC_IVAR____TtC4Maps31PlaceSummaryEVChargerDownloader_garage];
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps31PlaceSummaryEVChargerDownloader_garage] = v5;

  return v3;
}

id sub_1001F6C50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryEVChargerDownloader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaceSummaryEVChargerDownloader()
{
  return objc_opt_self(_TtC4Maps31PlaceSummaryEVChargerDownloader);
}

uint64_t sub_1001F6CB0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E33B80);
  v5 = swift_getKeyPath(&unk_100E33BA8);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_1001F6D2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E33B80);
  v6 = swift_getKeyPath(&unk_100E33BA8);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1001F6DAC@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E33BC8);
  v5 = swift_getKeyPath(&unk_100E33BF0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001F6E28(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  int v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E33BC8);
  v5 = swift_getKeyPath(&unk_100E33BF0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

void sub_1001F6E98(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char **v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  char **v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];

  v3 = sub_10008B270();
  if (!v3)
    return;
  v4 = v3;
  v5 = objc_msgSend(a2, "_realTimeAvailableEVCharger");
  if (!v5)
  {
LABEL_26:
    swift_bridgeObjectRelease(v4);
    return;
  }
  v6 = v5;
  if (!((unint64_t)v4 >> 62))
  {
    v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_5;
    goto LABEL_25;
  }
  if (v4 >= 0)
    v33 = v4 & 0xFFFFFFFFFFFFFF8;
  else
    v33 = v4;
  swift_bridgeObjectRetain(v4);
  v7 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v4);
  if (!v7)
  {
LABEL_25:

    goto LABEL_26;
  }
LABEL_5:
  v8 = objc_opt_self(SearchVirtualGarageManager);
  if (v7 < 1)
  {
    __break(1u);
LABEL_28:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    __break(1u);
  }
  else
  {
    v9 = (void *)v8;
    v10 = 0;
    v34 = v7;
    v11 = &selRef_setWindowScene_;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v4);
      }
      else
      {
        v15 = *(_QWORD *)(v4 + 8 * v10 + 32);
        *(_QWORD *)&v16 = swift_retain().n128_u64[0];
      }
      v17 = v11;
      v18 = objc_msgSend(v9, v11[233], v16);
      v19 = objc_msgSend(v18, "virtualGarage");

      if (v19)
      {
        v20 = objc_msgSend((id)objc_opt_self(MUEVChargingHelper), "getRealTimeEVChargerInfo:charger:", v19, v6);
        v21 = (uint64_t)objc_msgSend(v20, "total");
        v22 = (uint64_t)objc_msgSend(v20, "available");
        v23 = objc_msgSend(v20, "status");
        if (v22 < 0 || v21 < 0)
          goto LABEL_28;
        v24 = sub_1001E20D4(v22, v21, v23, 0);
        v26 = v25;

      }
      else
      {
        v24 = sub_1001E20D4((uint64_t)objc_msgSend(v6, "availableEVChargers"), (uint64_t)objc_msgSend(v6, "totalEVChargers"), (int)objc_msgSend(v6, "_realTimePlugAvailabilityStatus"), 0);
        v26 = v27;
      }
      KeyPath = swift_getKeyPath(&unk_100E33B80);
      v29 = swift_getKeyPath(&unk_100E33BA8);
      v35[0] = v24;
      v35[1] = v26;
      swift_retain();
      static Published.subscript.setter(v35, v15, KeyPath, v29);
      v11 = v17;
      v30 = objc_msgSend(v9, v17[233]);
      v31 = objc_msgSend(v30, "virtualGarage");

      if (v31)
      {
        v32 = objc_msgSend((id)objc_opt_self(MUEVChargingHelper), "getRealTimeEVChargerInfo:charger:", v31, v6);
        v12 = objc_msgSend(v32, "status");

      }
      else
      {
        v12 = objc_msgSend(v6, "_realTimePlugAvailabilityStatus");
      }
      ++v10;
      v13 = swift_getKeyPath(&unk_100E33BC8);
      v14 = swift_getKeyPath(&unk_100E33BF0);
      LODWORD(v35[0]) = v12;
      static Published.subscript.setter(v35, v15, v13, v14);
    }
    while (v34 != v10);

    swift_bridgeObjectRelease(v4);
  }
}

uint64_t sub_1001F726C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E33CB0);
  v5 = swift_getKeyPath(&unk_100E33CD8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001F72E8(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E33CB0);
  v5 = swift_getKeyPath(&unk_100E33CD8);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_1001F7354@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  double v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E33C58);
  v5 = swift_getKeyPath(&unk_100E33C80);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_1001F73D0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E33C58);
  v5 = swift_getKeyPath(&unk_100E33C80);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

double sub_1001F7444@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013610, (uint64_t)&_s10TapHandlerV20CuratedGuidesHandlerVN, a1);
}

uint64_t sub_1001F7458(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013610, (uint64_t)&_s10TapHandlerV20CuratedGuidesHandlerVN);
}

double sub_1001F746C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013654, (uint64_t)&_s10TapHandlerV25UserGeneratedGuideHandlerVN, a1);
}

uint64_t sub_1001F7480(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013654, (uint64_t)&_s10TapHandlerV25UserGeneratedGuideHandlerVN);
}

double sub_1001F7494@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013510, (uint64_t)&_s10TapHandlerV24ContainmentParentHandlerVN, a1);
}

uint64_t sub_1001F74A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013510, (uint64_t)&_s10TapHandlerV24ContainmentParentHandlerVN);
}

double sub_1001F74BC@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013444, (uint64_t)&_s10TapHandlerV18UserLibraryHandlerVN, a1);
}

uint64_t sub_1001F74D0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013444, (uint64_t)&_s10TapHandlerV18UserLibraryHandlerVN);
}

double sub_1001F74E4@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013400, (uint64_t)&_s10TapHandlerV15UserNoteHandlerVN, a1);
}

uint64_t sub_1001F74F8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013400, (uint64_t)&_s10TapHandlerV15UserNoteHandlerVN);
}

double sub_1001F750C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013368, (uint64_t)&_s10TapHandlerV19PhotoCarouseHandlerVN, a1);
}

uint64_t sub_1001F7520(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013368, (uint64_t)&_s10TapHandlerV19PhotoCarouseHandlerVN);
}

id sub_1001F7648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  NSString v6;
  id v7;
  id v8;
  double v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_delegate]);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_asyncDataManager]);
  v3[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_hasActionButtons] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel] = 0;
  if (a3)
  {
    swift_bridgeObjectRetain(a3);
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v6 = 0;
  }
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for PlaceSummaryTableViewCell();
  v7 = objc_msgSendSuper2(&v17, "initWithStyle:reuseIdentifier:", a1, v6);

  v8 = v7;
  if (a3)
  {
    v10 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v9 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v7, "setAccessibilityIdentifier:", v10, v9);

  v11 = objc_msgSend(v7, "contentView");
  v12 = (void *)objc_opt_self(UIColor);
  v13 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v11, "setBackgroundColor:", v13);

  v14 = v7;
  v15 = objc_msgSend(v12, "clearColor");
  objc_msgSend(v14, "setBackgroundColor:", v15);

  objc_msgSend(v14, "setSelectionStyle:", 0);
  return v14;
}

void sub_1001F7AD4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  void *v12;
  id v13;
  uint64_t KeyPath;
  uint64_t v15;
  double v16;
  id v17;
  void *v18;
  double v19;
  double v20;
  double v21;

  v4 = v3;
  swift_unknownObjectWeakAssign(v3 + OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_delegate, a2);
  v7 = OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel;
  v8 = *(void **)(v3 + OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel);
  if (v8)
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    v9 = a1;
    v10 = v8;
    v11 = static NSObject.== infix(_:_:)(v10, v9);

    if ((v11 & 1) != 0)
      return;
    v12 = *(void **)(v4 + v7);
  }
  else
  {
    v12 = 0;
  }
  *(_QWORD *)(v4 + v7) = a1;
  v13 = a1;

  swift_unknownObjectWeakAssign(v4 + OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_asyncDataManager, a3);
  if (a3)
  {
    KeyPath = swift_getKeyPath(&unk_100E33C58);
    v15 = swift_getKeyPath(&unk_100E33C80);
    static Published.subscript.getter(&v21, v13, KeyPath, v15);
    swift_release();
    swift_release();
    v16 = v21;
    v17 = objc_msgSend((id)objc_opt_self(MKSystemController), "sharedInstance");
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v17, "screenScale");
      v20 = v19;

      sub_1001118B0(v16, v20);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001F7D18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  objc_class *v15;
  void *v16;
  uint64_t Strong;
  uint64_t v18;
  _BYTE *v19;
  void *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD v49[5];
  objc_super v50;

  v1 = v0;
  v2 = sub_100008B04(&qword_1014A04E8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - v7;
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  v48 = (char *)&v46 - v13;
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v15 = (objc_class *)type metadata accessor for PlaceSummaryTableViewCell();
  v50.receiver = v0;
  v50.super_class = v15;
  objc_msgSendSuper2(&v50, "_bridgedUpdateConfigurationUsingState:", isa);

  v16 = *(void **)&v0[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel];
  if (v16)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_delegate]);
    if (Strong)
    {
      v46 = v3;
      v18 = Strong;
      v19 = v16;
      v20 = (void *)UICellConfigurationState.traitCollection.getter();
      objc_msgSend(v20, "userInterfaceStyle");

      __chkstk_darwin(v21);
      *(&v46 - 4) = (uint64_t)v19;
      *(&v46 - 3) = (uint64_t)v1;
      v47 = v18;
      *(&v46 - 2) = v18;
      *((_BYTE *)&v46 - 8) = v22;
      v23 = sub_100008B04(&qword_1014A04F0);
      v24 = sub_1001F92B8();
      UIHostingConfiguration<>.init(content:)(sub_1001F92A8, &v46 - 6, v23, v24, v25);
      v27 = static Edge.Set.leading.getter(v26);
      v28 = OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics;
      v29 = *(_QWORD *)&v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics];
      if (v29)
      {
        v30 = *(double *)(v29 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_leadingMargin);
      }
      else
      {
        v30 = 0.0;
        if (v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase] == 2)
          v30 = 16.0;
      }
      v31 = v48;
      v32 = v46;
      UIHostingConfiguration.margins(_:_:)(v27, v2, v30);
      v33 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
      v34 = v33(v5, v2);
      v35 = static Edge.Set.trailing.getter(v34);
      v36 = *(_QWORD *)&v19[v28];
      if (v36)
      {
        v37 = *(double *)(v36 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_trailingMargin);
      }
      else
      {
        v37 = 0.0;
        if (v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase] == 2)
          v37 = 16.0;
      }
      UIHostingConfiguration.margins(_:_:)(v35, v2, v37);
      v38 = v33(v8, v2);
      v39 = static Edge.Set.top.getter(v38);
      v40 = *(_QWORD *)&v19[v28];
      if (v40)
      {
        v41 = *(double *)(v40 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_topMargin);
      }
      else
      {
        v41 = 0.0;
        if (v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase] == 2)
          v41 = 16.0;
      }
      UIHostingConfiguration.margins(_:_:)(v39, v2, v41);
      v42 = v33(v11, v2);
      v43 = static Edge.Set.bottom.getter(v42);
      v44 = *(_QWORD *)&v19[v28];
      if (v44)
      {
        v45 = *(double *)(v44 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_bottomMargin);
      }
      else if (v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase] == 2)
      {
        v45 = 16.0;
      }
      else
      {
        v45 = 0.0;
      }
      v49[3] = v2;
      v49[4] = sub_100010D70((unint64_t *)&unk_1014A05D0, &qword_1014A04E8, (const char *)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      sub_100011DCC(v49);
      UIHostingConfiguration.margins(_:_:)(v43, v2, v45);
      v33(v31, v2);
      UITableViewCell.contentConfiguration.setter(v49);

      swift_unknownObjectRelease(v47);
    }
  }
}

uint64_t sub_1001F80B8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t KeyPath;
  uint64_t v74;
  uint64_t v75;
  int IsEnabled_SearchAndDiscovery;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;

  v80 = a4;
  v79 = sub_100008B04(&qword_1014A05C8);
  __chkstk_darwin(v79);
  v75 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PlaceSummaryViewModelTemplate(0);
  v11 = sub_1001F975C();
  v12 = EnvironmentObject.init()(v10, v11);
  v77 = v13;
  v78 = v12;
  IsEnabled_SearchAndDiscovery = MapsFeature_IsEnabled_SearchAndDiscovery(v12);
  v74 = static ObservableObject.environmentStore.getter(v10, v11);
  KeyPath = swift_getKeyPath(&unk_100E33CF8);
  v14 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1011AB918, 32, 7);
  v72 = v15;
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a3;
  v71 = swift_getKeyPath(&unk_100E33D20);
  v16 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = swift_allocObject(&unk_1011AB940, 32, 7);
  v70 = v17;
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = a3;
  v69 = swift_getKeyPath(&unk_100E33D48);
  v18 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v19 = swift_allocObject(&unk_1011AB968, 32, 7);
  v68 = v19;
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = a3;
  v67 = swift_getKeyPath(&unk_100E33D70);
  v20 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v21 = swift_allocObject(&unk_1011AB990, 32, 7);
  v66 = v21;
  *(_QWORD *)(v21 + 16) = v20;
  *(_QWORD *)(v21 + 24) = a3;
  v65 = swift_getKeyPath(&unk_100E33D98);
  v22 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  v23 = swift_allocObject(&unk_1011AB9B8, 32, 7);
  v64 = v23;
  *(_QWORD *)(v23 + 16) = v22;
  *(_QWORD *)(v23 + 24) = a3;
  v63 = swift_getKeyPath(&unk_100E33DC0);
  v24 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  v25 = swift_allocObject(&unk_1011AB9E0, 32, 7);
  v62 = v25;
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = a3;
  v61 = swift_getKeyPath(&unk_100E33DE8);
  v26 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16);
  v27 = swift_allocObject(&unk_1011ABA08, 32, 7);
  v60 = v27;
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = a3;
  swift_unknownObjectRetain(a3);
  v59 = swift_getKeyPath(&unk_100E33E10);
  v28 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16);
  v29 = swift_allocObject(&unk_1011ABA30, 32, 7);
  *(_QWORD *)(v29 + 16) = v28;
  *(_QWORD *)(v29 + 24) = a3;
  swift_unknownObjectRetain(a3);
  v58 = swift_getKeyPath(&unk_100E33E38);
  v30 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v30 + 16);
  v31 = swift_allocObject(&unk_1011ABA58, 32, 7);
  *(_QWORD *)(v31 + 16) = v30;
  *(_QWORD *)(v31 + 24) = a3;
  swift_unknownObjectRetain(a3);
  v57 = swift_getKeyPath(&unk_100E33E60);
  v32 = swift_allocObject(&unk_1011AB8F0, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16);
  v33 = swift_allocObject(&unk_1011ABA80, 32, 7);
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)(v33 + 24) = a3;
  swift_unknownObjectRetain_n(a3, 7);
  v34 = a1;
  v35 = a1;
  v36 = static Alignment.center.getter(v35);
  v38 = v37;
  v39 = v75;
  sub_1001F8CE0((uint64_t)v35, a2, v80, v75);
  v40 = (uint64_t *)(v39 + *(int *)(v79 + 36));
  *v40 = v36;
  v40[1] = v38;
  v41 = sub_100008B04(&qword_1014A04F0);
  sub_10000C1FC(v39, a5 + *(int *)(v41 + 36), &qword_1014A05C8);
  v42 = v77;
  *(_QWORD *)a5 = v78;
  *(_QWORD *)(a5 + 8) = v42;
  *(_BYTE *)(a5 + 16) = IsEnabled_SearchAndDiscovery;
  v43 = KeyPath;
  *(_QWORD *)(a5 + 24) = v74;
  *(_QWORD *)(a5 + 32) = v34;
  *(_QWORD *)(a5 + 40) = v43;
  *(_QWORD *)(a5 + 48) = sub_1001F9804;
  v44 = v71;
  *(_QWORD *)(a5 + 56) = v72;
  *(_QWORD *)(a5 + 64) = v44;
  v46 = v69;
  v45 = v70;
  *(_QWORD *)(a5 + 72) = sub_1001F9860;
  *(_QWORD *)(a5 + 80) = v45;
  *(_QWORD *)(a5 + 88) = v46;
  *(_QWORD *)(a5 + 96) = sub_1001F98A4;
  v47 = v67;
  *(_QWORD *)(a5 + 104) = v68;
  *(_QWORD *)(a5 + 112) = v47;
  v49 = v65;
  v48 = v66;
  *(_QWORD *)(a5 + 120) = sub_1001F98E8;
  *(_QWORD *)(a5 + 128) = v48;
  *(_QWORD *)(a5 + 136) = v49;
  *(_QWORD *)(a5 + 144) = sub_1001F992C;
  v50 = v63;
  *(_QWORD *)(a5 + 152) = v64;
  *(_QWORD *)(a5 + 160) = v50;
  v52 = v61;
  v51 = v62;
  *(_QWORD *)(a5 + 168) = sub_1001F9988;
  *(_QWORD *)(a5 + 176) = v51;
  *(_QWORD *)(a5 + 184) = v52;
  *(_QWORD *)(a5 + 192) = sub_1001F99CC;
  v53 = v59;
  *(_QWORD *)(a5 + 200) = v60;
  *(_QWORD *)(a5 + 208) = v53;
  *(_QWORD *)(a5 + 216) = sub_1001F9A28;
  *(_QWORD *)(a5 + 224) = v29;
  *(_QWORD *)(a5 + 232) = v58;
  *(_QWORD *)(a5 + 240) = sub_1001F9A84;
  v54 = v57;
  *(_QWORD *)(a5 + 248) = v31;
  *(_QWORD *)(a5 + 256) = v54;
  *(_QWORD *)(a5 + 264) = sub_1001F9AC8;
  *(_QWORD *)(a5 + 272) = v33;
  return sub_100010CC4(v39, &qword_1014A05C8);
}

void sub_1001F8614(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  objc_class *v9;
  Class isa;
  double v11;
  uint64_t v12;
  uint64_t v13;
  char **v14;
  uint64_t v15;
  _BYTE v16[24];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v15 = v4;
      else
        v15 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v4);
      if (_CocoaArrayWrapper.endIndex.getter(v15))
      {
LABEL_4:
        if ((v4 & 0xC000000000000001) != 0)
        {
          v9 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
        }
        else
        {
          if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v9 = (objc_class *)*(id *)(v4 + 32);
        }
        isa = v9;
        *(_QWORD *)&v11 = swift_bridgeObjectRelease(v4).n128_u64[0];
        if ((unint64_t)v4 >> 62)
        {
          if (v4 < 0)
            v12 = v4;
          else
            v12 = v4 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v4);
          v13 = _CocoaArrayWrapper.endIndex.getter(v12);
          *(_QWORD *)&v11 = swift_bridgeObjectRelease(v4).n128_u64[0];
          if (v13 != 1)
            goto LABEL_9;
        }
        else if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) != 1)
        {
LABEL_9:

LABEL_20:
          sub_1000D6A00();
          isa = Array._bridgeToObjectiveC()().super.isa;
          v14 = &selRef_didTapOnCuratedGuides_cell_;
          goto LABEL_21;
        }
        v14 = &selRef_didTapOnCuratedGuide_cell_;
LABEL_21:
        objc_msgSend(a3, *v14, isa, v7, v11);

        return;
      }
    }
    else
    {
      v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v4);
      if (v8)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease(v4);
    goto LABEL_20;
  }
}

double sub_1001F878C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013598, (uint64_t)&_s10TapHandlerV19ActionButtonHandlerVN, a1);
}

uint64_t sub_1001F87A0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013598, (uint64_t)&_s10TapHandlerV19ActionButtonHandlerVN);
}

void sub_1001F87B4(uint64_t *a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v5 = *a1;
  v6 = *a2;
  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    swift_unknownObjectRetain(v5);
    v10 = objc_opt_self(ChildItemsViewModel);
    v11 = swift_dynamicCastObjCClass(v5, v10);
    if (v11)
    {
      objc_msgSend(a4, "didTapOnItemInChildItems:cell:buttonIndex:", v11, v9, v6);
      swift_unknownObjectRelease(v5);

    }
    else
    {

      swift_unknownObjectRelease(v5);
    }
  }
}

double sub_1001F886C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013554, (uint64_t)&_s10TapHandlerV22AccessoryEntityHandlerVN, a1);
}

uint64_t sub_1001F8880(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013554, (uint64_t)&_s10TapHandlerV22AccessoryEntityHandlerVN);
}

uint64_t sub_1001F8894(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
    __asm { BR              X11 }
  return result;
}

_QWORD *sub_1001F892C()
{
  uint64_t v0;

  return ((_QWORD *(*)(char **__return_ptr))((char *)&loc_1001F8904
                                                      + 4 * byte_100E33C15[__ROR8__(v0, 3) ^ 0x1000000000000000]))(&selRef_didTapOnAccessoryEntityFlyoverWithCell_);
}

void sub_1001F8954()
{
  JUMPOUT(0x1001F8904);
}

void sub_1001F8960()
{
  JUMPOUT(0x1001F8904);
}

void sub_1001F896C()
{
  JUMPOUT(0x1001F8904);
}

void sub_1001F8978()
{
  JUMPOUT(0x1001F8904);
}

double sub_1001F8984@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_1000134CC, (uint64_t)&_s10TapHandlerV23RefinementButtonHandlerVN, a1);
}

uint64_t sub_1001F8998(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_1000134CC, (uint64_t)&_s10TapHandlerV23RefinementButtonHandlerVN);
}

void sub_1001F89AC(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    swift_unknownObjectRetain(v4);
    v8 = objc_opt_self(GEOResultRefinement);
    v9 = swift_dynamicCastObjCClass(v4, v8);
    if (v9)
    {
      objc_msgSend(a3, "didTapOnResultRefinement:cell:", v9, v7);
      swift_unknownObjectRelease(v4);

    }
    else
    {

      swift_unknownObjectRelease(v4);
    }
  }
}

double sub_1001F8A5C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013488, (uint64_t)&_s10TapHandlerV20TappableEntryHandlerVN, a1);
}

double sub_1001F8A70@<D0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X4>, _OWORD *a3@<X8>)
{
  uint64_t v5;
  double result;
  __int128 v7;

  v5 = a1();
  EnvironmentValues.subscript.getter(&v7, a2, a2, v5);
  result = *(double *)&v7;
  *a3 = v7;
  return result;
}

uint64_t sub_1001F8AC4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013488, (uint64_t)&_s10TapHandlerV20TappableEntryHandlerVN);
}

uint64_t sub_1001F8AD8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *, uint64_t), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  _QWORD v11[2];

  v7 = a1[1];
  v11[0] = *a1;
  v11[1] = v7;
  v8 = a5(a1, a2);
  v9 = swift_retain(v7);
  return EnvironmentValues.subscript.setter(v11, a6, a6, v8, v9);
}

void sub_1001F8B34(uint64_t *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v6 = *a1;
  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    objc_msgSend(a3, *a4, v6, Strong);

  }
}

void sub_1001F8BA8(void **a1, uint64_t a2, void *a3)
{
  void *v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  id v9;
  id v10;
  _BYTE v11[24];

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = objc_msgSend(v4, "_geoMapItem");
    if (v8)
    {
      v9 = v8;
      v10 = objc_msgSend(v8, "_identifier");
      swift_unknownObjectRelease(v9);
      if (v10)
      {
        objc_msgSend(a3, "didTapOnTappableEntryWithMapItemIdentifier:cell:", v10, v7);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1001F8C6C(uint64_t *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v6 = *a1;
  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    objc_msgSend(a3, *a4, Strong, v6);

  }
}

uint64_t sub_1001F8CE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _BOOL8 v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  LODWORD(v42) = a3;
  v41 = sub_100008B04(&qword_101498DC0);
  __chkstk_darwin(v41);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UnevenRoundedRectangle(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04(&qword_101498DC8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - v17;
  if (!MapsFeature_IsEnabled_SearchAndDiscovery(v19))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a4, 1, 1, v12);
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase) != 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a4, 1, 1, v12);
  v40 = OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a4, 1, 1, v12);
  v20 = -[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(a2);
  if (v20)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a4, 1, 1, v12);
  if ((v42 & 1) != 0)
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemGroupedBackgroundColor");
    v23 = Color.init(_:)(v22);
  }
  else
  {
    v23 = static Color.white.getter(v20);
  }
  v39 = v23;
  v24 = v40;
  KeyPath = swift_getKeyPath(&unk_100E33E88);
  v26 = *(_QWORD *)(a1 + v24);
  v42 = KeyPath;
  if (v26)
  {
    v27 = *(double *)(v26 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_topLeadingCornerRadius);
    v28 = *(double *)(v26 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_bottomLeadingCornerRadius);
    v29 = *(double *)(v26 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_bottomTrailingCornerRadius);
    v30 = *(double *)(v26 + OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_topTrailingCornerRadius);
  }
  else
  {
    v30 = 0.0;
    v27 = 0.0;
    v28 = 0.0;
    v29 = 0.0;
  }
  v31 = v41;
  v32 = &v11[*(int *)(v9 + 20)];
  v33 = enum case for RoundedCornerStyle.continuous(_:);
  v34 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v32, v33, v34);
  *(double *)v11 = RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)(v27, v30, v29, v28);
  *((_QWORD *)v11 + 1) = v35;
  *((_QWORD *)v11 + 2) = v36;
  *((_QWORD *)v11 + 3) = v37;
  sub_1000B1270((uint64_t)v11, (uint64_t)v8);
  *(_WORD *)&v8[*(int *)(v31 + 36)] = 256;
  sub_10000C1FC((uint64_t)v8, (uint64_t)v15 + *(int *)(v12 + 36), &qword_101498DC0);
  v38 = v39;
  *v15 = v42;
  v15[1] = v38;
  swift_retain();
  swift_retain();
  sub_100010CC4((uint64_t)v8, &qword_101498DC0);
  sub_1000B12B4((uint64_t)v11);
  swift_release();
  swift_release();
  sub_1001F9B88((uint64_t)v15, (uint64_t)v18);
  sub_1001F9B88((uint64_t)v18, a4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a4, 0, 1, v12);
}

id sub_1001F9184()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaceSummaryTableViewCell()
{
  return objc_opt_self(_TtC4Maps25PlaceSummaryTableViewCell);
}

uint64_t sub_1001F92A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001F80B8(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

unint64_t sub_1001F92B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A04F8;
  if (!qword_1014A04F8)
  {
    v1 = sub_10000E5D4(&qword_1014A04F0);
    v2[0] = sub_1001F933C();
    v2[1] = sub_100010D70(&qword_1014A05C0, &qword_1014A05C8, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A04F8);
  }
  return result;
}

unint64_t sub_1001F933C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0500;
  if (!qword_1014A0500)
  {
    v1 = sub_10000E5D4(&qword_1014A0508);
    v2[0] = sub_1001F93C0();
    v2[1] = sub_100010D70(&qword_10149A010, &qword_10149A018, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0500);
  }
  return result;
}

unint64_t sub_1001F93C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0510;
  if (!qword_1014A0510)
  {
    v1 = sub_10000E5D4(&qword_1014A0518);
    v2[0] = sub_1001F9444();
    v2[1] = sub_100010D70(&qword_10149A000, &qword_10149A008, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0510);
  }
  return result;
}

unint64_t sub_1001F9444()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0520;
  if (!qword_1014A0520)
  {
    v1 = sub_10000E5D4(&qword_1014A0528);
    v2[0] = sub_1001F94C8();
    v2[1] = sub_100010D70(&qword_10149A000, &qword_10149A008, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0520);
  }
  return result;
}

unint64_t sub_1001F94C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0530;
  if (!qword_1014A0530)
  {
    v1 = sub_10000E5D4(&qword_1014A0538);
    v2[0] = sub_1001F954C();
    v2[1] = sub_100010D70(&qword_1014A05B0, &qword_1014A05B8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0530);
  }
  return result;
}

unint64_t sub_1001F954C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0540;
  if (!qword_1014A0540)
  {
    v1 = sub_10000E5D4(&qword_1014A0548);
    v2[0] = sub_1001F95D0();
    v2[1] = sub_100010D70(&qword_1014A05A0, &qword_1014A05A8, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0540);
  }
  return result;
}

unint64_t sub_1001F95D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0550;
  if (!qword_1014A0550)
  {
    v1 = sub_10000E5D4(&qword_1014A0558);
    v2[0] = sub_1001F9654();
    v2[1] = sub_100010D70(&qword_10149A000, &qword_10149A008, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0550);
  }
  return result;
}

unint64_t sub_1001F9654()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0560;
  if (!qword_1014A0560)
  {
    v1 = sub_10000E5D4(&qword_1014A0568);
    v2[0] = sub_1001F96D8();
    v2[1] = sub_100010D70(&qword_1014A0590, &qword_1014A0598, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0560);
  }
  return result;
}

unint64_t sub_1001F96D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1014A0570;
  if (!qword_1014A0570)
  {
    v1 = sub_10000E5D4(&qword_1014A0578);
    v2[0] = sub_1000D3DD8();
    v2[1] = sub_100010D70(&qword_1014A0580, &qword_1014A0588, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1014A0570);
  }
  return result;
}

unint64_t sub_1001F975C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101494BB0;
  if (!qword_101494BB0)
  {
    v1 = type metadata accessor for PlaceSummaryViewModelTemplate(255);
    result = swift_getWitnessTable(byte_100E2857C, v1);
    atomic_store(result, (unint64_t *)&qword_101494BB0);
  }
  return result;
}

double sub_1001F97A4@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013654, (uint64_t)&_s10TapHandlerV25UserGeneratedGuideHandlerVN, a1);
}

uint64_t sub_1001F97B8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013654, (uint64_t)&_s10TapHandlerV25UserGeneratedGuideHandlerVN);
}

uint64_t sub_1001F97DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001F9804(uint64_t *a1)
{
  uint64_t v1;

  sub_1001F8B34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnUserGeneratedGuide_cell_);
}

double sub_1001F9824@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013610, (uint64_t)&_s10TapHandlerV20CuratedGuidesHandlerVN, a1);
}

uint64_t sub_1001F9838(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013610, (uint64_t)&_s10TapHandlerV20CuratedGuidesHandlerVN);
}

void sub_1001F9860(uint64_t *a1)
{
  uint64_t v1;

  sub_1001F8614(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

double sub_1001F9868@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013598, (uint64_t)&_s10TapHandlerV19ActionButtonHandlerVN, a1);
}

uint64_t sub_1001F987C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013598, (uint64_t)&_s10TapHandlerV19ActionButtonHandlerVN);
}

void sub_1001F98A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1001F87B4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

double sub_1001F98AC@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013554, (uint64_t)&_s10TapHandlerV22AccessoryEntityHandlerVN, a1);
}

uint64_t sub_1001F98C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013554, (uint64_t)&_s10TapHandlerV22AccessoryEntityHandlerVN);
}

uint64_t sub_1001F98E8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1001F8894(a1, *(_QWORD *)(v1 + 16));
}

double sub_1001F98F0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013510, (uint64_t)&_s10TapHandlerV24ContainmentParentHandlerVN, a1);
}

uint64_t sub_1001F9904(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013510, (uint64_t)&_s10TapHandlerV24ContainmentParentHandlerVN);
}

void sub_1001F992C(uint64_t *a1)
{
  uint64_t v1;

  sub_1001F8B34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnContainmentParentMapItem_cell_);
}

double sub_1001F994C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_1000134CC, (uint64_t)&_s10TapHandlerV23RefinementButtonHandlerVN, a1);
}

uint64_t sub_1001F9960(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_1000134CC, (uint64_t)&_s10TapHandlerV23RefinementButtonHandlerVN);
}

void sub_1001F9988(uint64_t *a1)
{
  uint64_t v1;

  sub_1001F89AC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

double sub_1001F9990@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013488, (uint64_t)&_s10TapHandlerV20TappableEntryHandlerVN, a1);
}

uint64_t sub_1001F99A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013488, (uint64_t)&_s10TapHandlerV20TappableEntryHandlerVN);
}

void sub_1001F99CC(uint64_t *a1)
{
  uint64_t v1;

  sub_1001F8B34(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnTappableEntryWithMapItemIdentifier_cell_);
}

double sub_1001F99EC@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013444, (uint64_t)&_s10TapHandlerV18UserLibraryHandlerVN, a1);
}

uint64_t sub_1001F9A00(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013444, (uint64_t)&_s10TapHandlerV18UserLibraryHandlerVN);
}

void sub_1001F9A28(uint64_t *a1)
{
  uint64_t v1;

  sub_1001F8C6C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnUserLibrary_mapItem_);
}

double sub_1001F9A48@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013400, (uint64_t)&_s10TapHandlerV15UserNoteHandlerVN, a1);
}

uint64_t sub_1001F9A5C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013400, (uint64_t)&_s10TapHandlerV15UserNoteHandlerVN);
}

void sub_1001F9A84(void **a1)
{
  uint64_t v1;

  sub_1001F8BA8(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

double sub_1001F9A8C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1001F8A70((uint64_t (*)(void))sub_100013368, (uint64_t)&_s10TapHandlerV19PhotoCarouseHandlerVN, a1);
}

uint64_t sub_1001F9AA0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001F8AD8(a1, a2, a3, a4, (uint64_t (*)(_QWORD *, uint64_t))sub_100013368, (uint64_t)&_s10TapHandlerV19PhotoCarouseHandlerVN);
}

void sub_1001F9AC8(uint64_t *a1)
{
  uint64_t v1;

  sub_1001F8C6C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), (SEL *)&selRef_didTapOnPhotoCarousel_photoIndex_);
}

uint64_t sub_1001F9AE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001F9B10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001F9B38(_QWORD *a1)
{
  __n128 v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1001F9B60(_QWORD *a1)
{
  __n128 v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1001F9B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04(&qword_101498DC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1001F9BD0()
{
  uint64_t v0;
  uint64_t Strong;
  double result;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_asyncDataManager);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(id *)(Strong + OBJC_IVAR____TtC4Maps28PlaceSummaryAsyncDataManager_imageDownloader);

    v5 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTableViewCell_viewModel);
    if (v5)
    {
      v6 = v5;
      v7 = (void *)sub_10008B680();

    }
    else
    {
      v7 = 0;
    }
    sub_1001A2708(v7);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

char *sub_1001F9CDC(void *a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  objc_super v16;

  v5 = &v2[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_delegate];
  swift_unknownObjectWeakInit(&v2[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_delegate]);
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = 0;
  v6 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController;
  v7 = objc_allocWithZone((Class)UISearchController);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "initWithSearchResultsController:", 0);
  v9 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakAssign(v5, a2);

  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for ChargingNetworkPickerViewController();
  v10 = objc_msgSendSuper2(&v16, "initWithNibName:bundle:", 0, 0);
  v11 = (char *)objc_allocWithZone((Class)type metadata accessor for ChargingNetworksDataSource());
  v12 = (char *)v10;
  v13 = sub_1001FA970(a1, 1, v12, v11);

  swift_unknownObjectRelease(a2);
  v14 = *(void **)&v12[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource];
  *(_QWORD *)&v12[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = v13;

  return v12;
}

void sub_1001F9EF0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_delegate], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = 0;
  v1 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UISearchController), "initWithSearchResultsController:", 0);
  v2 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000018, 0x8000000100E53670, "Maps/ChargingNetworkPickerViewController.swift", 46, 2, 47, 0);
  __break(1u);
}

id sub_1001FA024()
{
  char *v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  NSString v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  NSString v16;
  id result;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  Class isa;
  objc_super v41;
  Swift::String v42;

  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for ChargingNetworkPickerViewController();
  objc_msgSendSuper2(&v41, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController];
  v2 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource;
  objc_msgSend(v1, "setSearchResultsUpdater:", *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource]);
  objc_msgSend(v1, "setObscuresBackgroundDuringPresentation:", 0);
  v3 = objc_msgSend(v1, "searchBar");
  objc_msgSend(v3, "setReturnKeyType:", 9);

  v4 = objc_msgSend(v1, "searchBar");
  objc_msgSend(v4, "setShowsCancelButton:", 1);

  v5 = objc_msgSend(v1, "searchBar");
  objc_msgSend(v5, "setDelegate:", v0);

  objc_msgSend(v1, "setHidesNavigationBarDuringPresentation:", 0);
  v6 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v6, "setSearchController:", v1);

  v7 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v7, "setHidesSearchBarWhenScrolling:", 0);

  v8 = objc_msgSend(v0, "navigationItem");
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v9._countAndFlagsBits = 0xD000000000000025;
  v42._countAndFlagsBits = 0xD000000000000027;
  v42._object = (void *)0x8000000100E535D0;
  v9._object = (void *)0x8000000100E53580;
  v10._object = (void *)0x8000000100E535B0;
  v10._countAndFlagsBits = 0xD000000000000014;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v10, v42)._object;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setTitle:", v12, swift_bridgeObjectRelease(object).n128_f64[0]);

  v13 = *(void **)&v0[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView];
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setDataSource:", *(_QWORD *)&v0[v2]);
  objc_msgSend(v13, "setDelegate:", *(_QWORD *)&v0[v2]);
  v14 = sub_10000E4BC(0, &qword_1014A0688, UITableViewCell_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v16);

  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v18 = result;
  objc_msgSend(result, "addSubview:", v13);

  v19 = sub_100008B04((uint64_t *)&unk_101493B10);
  v20 = swift_allocObject(v19, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100E2A2C0;
  v21 = objc_msgSend(v13, "leadingAnchor");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v22 = result;
  v23 = objc_msgSend(result, "leadingAnchor");

  v24 = objc_msgSend(v21, "constraintEqualToAnchor:", v23);
  *(_QWORD *)(v20 + 32) = v24;
  v25 = objc_msgSend(v13, "trailingAnchor");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v26 = result;
  v27 = objc_msgSend(result, "trailingAnchor");

  v28 = objc_msgSend(v25, "constraintEqualToAnchor:", v27);
  *(_QWORD *)(v20 + 40) = v28;
  v29 = objc_msgSend(v13, "topAnchor");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v30 = result;
  v31 = objc_msgSend(result, "topAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:", v31);
  *(_QWORD *)(v20 + 48) = v32;
  v33 = objc_msgSend(v13, "bottomAnchor");
  result = objc_msgSend(v0, "view");
  if (result)
  {
    v34 = result;
    v35 = (void *)objc_opt_self(NSLayoutConstraint);
    v36 = objc_msgSend(v34, "bottomAnchor");

    v37 = objc_msgSend(v33, "constraintEqualToAnchor:", v36);
    *(_QWORD *)(v20 + 56) = v37;
    specialized Array._endMutation()(v38);
    v39 = v20;
    sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v35, "activateConstraints:", isa, swift_bridgeObjectRelease(v39).n128_f64[0]);

    return objc_msgSend(v13, "reloadData");
  }
LABEL_13:
  __break(1u);
  return result;
}

id sub_1001FA62C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChargingNetworkPickerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ChargingNetworkPickerViewController()
{
  return objc_opt_self(_TtC4Maps35ChargingNetworkPickerViewController);
}

void sub_1001FA6D8(void *a1, char a2)
{
  char *v2;
  char *v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Class isa;
  id v15;
  id v16;
  uint64_t v17;

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (v6)
  {
    v7 = v6;
    if ((a2 & 1) != 0)
      v8 = 455;
    else
      v8 = 443;
    objc_msgSend(v6, "captureUserAction:onTarget:eventValue:", v8, 122, 0);

    Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_delegate]);
    if (Strong)
    {
      v10 = (void *)Strong;
      v11 = sub_100008B04((uint64_t *)&unk_101493B10);
      v12 = swift_allocObject(v11, 40, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100E23F50;
      *(_QWORD *)(v12 + 32) = a1;
      v17 = v12;
      specialized Array._endMutation()(v12);
      sub_10000E4BC(0, (unint64_t *)&unk_1014994F0, VGChargingNetwork_ptr);
      v13 = a1;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v10, "networkPickerControllerDidSelectNetworks:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

      swift_unknownObjectRelease(v10);
    }
    v15 = objc_msgSend(v3, "presentingViewController");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

char *sub_1001FA970(void *a1, uint64_t a2, void *a3, char *a4)
{
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  objc_super v17;

  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_provider] = 0;
  v8 = swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_delegate], 0);
  v9 = &a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_searchString];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_suggestedNetworks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_otherNetworks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredSuggestedNetworks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_filteredOtherNetworks] = _swiftEmptyArrayStorage;
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_selectedNetworks] = &_swiftEmptySetSingleton;
  if (a1)
    v10 = a1;
  else
    v10 = &_swiftEmptySetSingleton;
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_excludedNetworks] = v10;
  swift_unknownObjectWeakAssign(v8, a3);
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_context] = a2;
  v17.receiver = a4;
  v17.super_class = (Class)type metadata accessor for ChargingNetworksDataSource();
  v11 = objc_msgSendSuper2(&v17, "init");
  v12 = objc_allocWithZone((Class)VGChargingNetworkAvailabilityProvider);
  v13 = (char *)v11;
  v14 = objc_msgSend(v12, "initWithDelegate:", v13);

  v15 = *(void **)&v13[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_provider];
  *(_QWORD *)&v13[OBJC_IVAR____TtC4Maps26ChargingNetworksDataSource_provider] = v14;

  return v13;
}

void sub_1001FAAE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_delegate], 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_dataSource] = 0;
  v7 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_searchController;
  *(_QWORD *)&v3[v7] = objc_msgSend(objc_allocWithZone((Class)UISearchController), "initWithSearchResultsController:", 0);
  v8 = OBJC_IVAR____TtC4Maps35ChargingNetworkPickerViewController_tableView;
  *(_QWORD *)&v3[v8] = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, a1, a2, "Maps/ChargingNetworkPickerViewController.swift", 46, 2, a3, 0);
  __break(1u);
}

uint64_t sub_1001FABC8(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(uint64_t (*)(char), uint64_t, __n128);
  void *v4;
  uint64_t v5;
  __n128 v6;

  v3 = *(void (**)(uint64_t (*)(char), uint64_t, __n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1011ABCA0, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  v6 = swift_retain(v2);
  v3(sub_10000BF84, v5, v6);
  swift_release(v2);
  return swift_release(v5);
}

void sub_1001FAC38(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  _QWORD *v41;
  void *v42;
  _QWORD *v43;
  void *v44;
  id v45;
  _BYTE *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = a1 & 1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v60 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v59 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v56 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive;
  v10 = v2[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive];
  v2[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = a1;
  if (v10 == v4)
    goto LABEL_48;
  v55 = v10;
  ObjectType = swift_getObjectType();
  v12 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing);
  if (v12)
    v13 = v12;
  else
    v13 = 0;
  if (v12)
    v14 = v2;
  else
    v14 = 0;
  if (!v14)
    goto LABEL_64;
  v15 = swift_getObjectType();
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
  v17 = v2;
  v18 = v16(v15, v13);

  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v22 = v18;
    else
      v22 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v19 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v18);
    if (!v19)
      goto LABEL_21;
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v19)
      goto LABEL_21;
  }
  if (v19 < 1)
  {
    __break(1u);
LABEL_52:
    if (v18 < 0)
      v52 = v18;
    else
      v52 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v30 = _CocoaArrayWrapper.endIndex.getter(v52);
    swift_bridgeObjectRelease(v18);
    if (!v30)
      goto LABEL_47;
    goto LABEL_31;
  }
  for (i = 0; i != v19; ++i)
  {
    if ((v18 & 0xC000000000000001) != 0)
    {
      v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v18);
    }
    else
    {
      v21 = *(void **)(v18 + 8 * i + 32);
      swift_unknownObjectRetain(v21);
    }
    objc_msgSend(v21, "setActive:", v2[v9]);
    swift_unknownObjectRelease(v21);
  }
LABEL_21:
  swift_bridgeObjectRelease(v18);
  v23 = v2[v9];
  v24 = swift_getObjectType();
  v25 = swift_conformsToProtocol2(v24, &protocol descriptor for HomeListSectionControllerSubclassing);
  if (v25)
    v26 = v25;
  else
    v26 = 0;
  if (v25)
    v27 = v2;
  else
    v27 = 0;
  if (v23 != 1)
  {
    if (v27)
    {
      v34 = swift_getObjectType();
      v35 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
      v36 = v17;
      v18 = v35(v34, v26);

      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0)
          v53 = v18;
        else
          v53 = v18 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v18);
        v37 = _CocoaArrayWrapper.endIndex.getter(v53);
        swift_bridgeObjectRelease(v18);
        if (!v37)
          goto LABEL_47;
      }
      else
      {
        v37 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v37)
          goto LABEL_47;
      }
      v54 = v5;
      if (v37 >= 1)
      {
        v38 = 0;
        do
        {
          if ((v18 & 0xC000000000000001) != 0)
          {
            v39 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v18);
          }
          else
          {
            v39 = *(void **)(v18 + 8 * v38 + 32);
            swift_unknownObjectRetain(v39);
          }
          ++v38;
          v40 = objc_msgSend(v39, "observers", v54);
          objc_msgSend(v40, "unregisterObserver:", v36);
          swift_unknownObjectRelease(v39);

        }
        while (v37 != v38);
        goto LABEL_46;
      }
      goto LABEL_63;
    }
LABEL_64:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
    __break(1u);
    return;
  }
  if (!v27)
    goto LABEL_64;
  v28 = swift_getObjectType();
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
  v17 = v17;
  v18 = v29(v28, v26);

  if ((unint64_t)v18 >> 62)
    goto LABEL_52;
  v30 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v30)
  {
LABEL_31:
    v54 = v5;
    if (v30 >= 1)
    {
      v31 = 0;
      do
      {
        if ((v18 & 0xC000000000000001) != 0)
        {
          v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v18);
        }
        else
        {
          v32 = *(void **)(v18 + 8 * v31 + 32);
          swift_unknownObjectRetain(v32);
        }
        ++v31;
        v33 = objc_msgSend(v32, "observers", v54);
        objc_msgSend(v33, "registerObserver:", v17);
        swift_unknownObjectRelease(v32);

      }
      while (v30 != v31);
LABEL_46:
      v5 = v54;
      goto LABEL_47;
    }
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
LABEL_47:
  swift_bridgeObjectRelease(v18);
  LOBYTE(v10) = v55;
LABEL_48:
  if (!(v10 & 1 | ((v2[v9] & 1) == 0)))
  {
    v41 = sub_1001FB508();
    v42 = *(void **)&v2[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilter];
    v43 = (_QWORD *)swift_allocObject(&unk_1011ABB60, 40, 7);
    v43[2] = v42;
    v43[3] = v41;
    v43[4] = v2;
    aBlock[4] = sub_1001FD614;
    aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BB8D4;
    aBlock[3] = &unk_1011ABB78;
    v44 = _Block_copy(aBlock);
    v45 = v42;
    v46 = v2;
    v47 = v56;
    static DispatchQoS.unspecified.getter(v46);
    v61 = _swiftEmptyArrayStorage;
    v48 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v49 = sub_100008B04((uint64_t *)&unk_101492FB0);
    v50 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
    v51 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v61, v49, v50, v5, v48);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v51, v44);
    _Block_release(v44);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v51, v5);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v47, v58);
    swift_release();
  }
}

id sub_1001FB210(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id result;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[6];
  objc_super v25;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for HomeListRecentsSectionController();
  v25.receiver = v1;
  v25.super_class = v11;
  result = objc_msgSendSuper2(&v25, "homeDataProvidingObjectDidUpdate:", a1);
  if (v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] == 1)
  {
    v13 = sub_1001FB508();
    v22 = v4;
    v14 = v13;
    v15 = *(void **)&v1[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilter];
    v16 = (_QWORD *)swift_allocObject(&unk_1011ABCF0, 40, 7);
    v16[2] = v15;
    v16[3] = v14;
    v16[4] = v1;
    aBlock[4] = sub_1001FD7BC;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BB8D4;
    aBlock[3] = &unk_1011ABD08;
    v17 = _Block_copy(aBlock);
    v18 = v15;
    static DispatchQoS.unspecified.getter(v1);
    v23 = _swiftEmptyArrayStorage;
    v19 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_100008B04((uint64_t *)&unk_101492FB0);
    v21 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v20, v21, v3, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_1001FB49C()
{
  uint64_t result;

  result = GEOConfigGetUInteger(MapsConfig_MapsHomeMaxRecents, off_1014B3E58);
  if (result < 0)
    __break(1u);
  return result;
}

id sub_1001FB4C8@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  a1[3] = type metadata accessor for HomeListRecentsSectionController();
  a1[4] = &off_1011ABAB0;
  *a1 = v3;
  return v3;
}

_QWORD *sub_1001FB508()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _QWORD *v12;

  v12 = _swiftEmptyArrayStorage;
  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_markedLocationDataProvider), "markedLocation");
  if (v1)
  {
    v2 = v1;
    v11 = sub_10000E4BC(0, &qword_101494570, off_101197F50);
    *(_QWORD *)&v10 = v2;
    v3 = v2;
    v4 = sub_1000A72A4(0, 1, 1, _swiftEmptyArrayStorage);
    v6 = v4[2];
    v5 = v4[3];
    if (v6 >= v5 >> 1)
      v4 = sub_1000A72A4((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
    v4[2] = v6 + 1;
    sub_10000BE60(&v10, &v4[4 * v6 + 4]);

    v12 = v4;
  }
  v7 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider), "recents");
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, (char *)&type metadata for Any + 8);

  sub_100120438(v8);
  return v12;
}

uint64_t sub_1001FB648(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Class isa;
  Class v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v9 = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(a1, "filteredRecents:excludingDuplicatesOfEntries:", isa, v9);

  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, (char *)&type metadata for Any + 8);
  v12 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = swift_allocObject(&unk_1011ABB38, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_1011ABBB0, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v11;
  aBlock[4] = sub_1001FD664;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011ABBC8;
  v16 = _Block_copy(aBlock);
  v17 = swift_release();
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v20 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v22);
}

void sub_1001FB8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  _BYTE v15[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive) == 1
      && (v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents),
          *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) = a2,
          swift_bridgeObjectRetain(a2),
          swift_bridgeObjectRelease(v6),
          sub_1000AB280((uint64_t)v5 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v13),
          v7 = swift_unknownObjectWeakLoadStrong(&v14),
          sub_1000AB2BC((uint64_t)v13),
          v7))
    {
      v8 = sub_100008B04(&qword_10149C0A0);
      inited = swift_initStackObject(v8, &v12);
      *(_OWORD *)(inited + 16) = xmmword_100E22F40;
      *(_QWORD *)(inited + 32) = v5;
      *(_QWORD *)(inited + 40) = &off_1011ABAE0;
      v10 = v5;
      sub_100139E90(inited, 1);
      swift_setDeallocating(inited);
      v11 = sub_100008B04(&qword_101494000);
      swift_arrayDestroy(inited + 32, 1, v11);

      swift_unknownObjectRelease(v7);
    }
    else
    {

    }
  }
}

double sub_1001FBA2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  id v17;
  id v18[2];
  char v19;
  _BYTE v20[32];

  sub_100011E20(a1, (uint64_t)v20);
  v4 = sub_100008B04(&qword_1014A07B8);
  if (swift_dynamicCast(v18, v20, (char *)&type metadata for Any + 8, v4, 6))
  {
    v5 = v18[0];
    v6 = objc_msgSend(v18[0], "_maps_diffableDataSourceIdentifier");
    if (v6)
    {
      v7 = v6;
      v8 = sub_1001FD8EC();
      v9 = objc_msgSend(v8, "identifierPathByAppendingIdentifier:", v7);

      swift_unknownObjectRelease(v5);
      if (v9)
      {
        sub_100011E20(a1, (uint64_t)v20);
        v10 = sub_10000E4BC(0, &qword_101494570, off_101197F50);
        if ((swift_dynamicCast(&v17, v20, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
        {
          v11 = v17;
          if (objc_msgSend(v17, "type") == 3)
          {
            v18[0] = v11;
            v12 = 3;
LABEL_13:
            v19 = v12;
            *(_QWORD *)(a2 + 32) = &type metadata for HomeListTwoLinesCellModel;
            *(_QWORD *)(a2 + 40) = sub_100124564();
            v15 = swift_allocObject(&unk_1011ABCC8, 33, 7);
            *(_QWORD *)(a2 + 8) = v15;
            sub_100124610((uint64_t)v18, v15 + 16);
            *(_QWORD *)a2 = v9;
            return result;
          }

        }
        else
        {
          sub_100011E20(a1, (uint64_t)v20);
          v13 = sub_100008B04((uint64_t *)&unk_10149B490);
          if (swift_dynamicCast(&v17, v20, (char *)&type metadata for Any + 8, v13, 6))
          {
            v18[0] = v17;
            v12 = 4;
            goto LABEL_13;
          }
          sub_100011E20(a1, (uint64_t)v20);
          v14 = sub_10000E4BC(0, (unint64_t *)&unk_1014A07C0, CRRecentContact_ptr);
          if ((swift_dynamicCast(&v17, v20, (char *)&type metadata for Any + 8, v14, 6) & 1) != 0)
          {
            v18[0] = v17;
            v12 = 5;
            goto LABEL_13;
          }

        }
      }
    }
    else
    {
      swift_unknownObjectRelease(v5);
    }
  }
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

_QWORD *sub_1001FBC68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v20;
  _OWORD v21[3];
  __int128 aBlock;
  __int128 v23;
  __int128 v24;
  _OWORD v25[3];

  v2 = v1;
  sub_1000AB280(v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, &v20);
  Strong = swift_unknownObjectWeakLoadStrong((char *)v21 + 8);
  sub_1000AB2BC((uint64_t)&v20);
  if (!Strong)
  {
    v23 = 0u;
    v24 = 0u;
    aBlock = 0u;
    goto LABEL_10;
  }
  sub_100139A44(a1, &aBlock);
  swift_unknownObjectRelease(Strong);
  if (!(_QWORD)aBlock)
  {
LABEL_10:
    sub_100010CC4((uint64_t)&aBlock, &qword_10149B500);
    return _swiftEmptyArrayStorage;
  }
  v25[0] = aBlock;
  v25[1] = v23;
  v25[2] = v24;
  v5 = swift_allocObject(&unk_1011ABB38, 24, 7);
  swift_unknownObjectWeakInit(v5 + 16);
  sub_100084BD4((uint64_t)v25, (uint64_t)&v20);
  v6 = swift_allocObject(&unk_1011ABC50, 72, 7);
  v7 = v21[0];
  *(_OWORD *)(v6 + 24) = v20;
  *(_QWORD *)(v6 + 16) = v5;
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = v21[1];
  *(_QWORD *)&v24 = sub_1001FD6CC;
  *((_QWORD *)&v24 + 1) = v6;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v23 = sub_1001FABC8;
  *((_QWORD *)&v23 + 1) = &unk_1011ABC68;
  v8 = _Block_copy(&aBlock);
  swift_release();
  v9 = sub_100A3CEB8(v8);
  _Block_release(v8);
  v10 = v9;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
  v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v11 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
  specialized Array._endMutation()(v13);
  v14 = sub_1001FFB3C((uint64_t)v25, 0, 0);
  if (v14)
  {
    v15 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
    specialized Array._endMutation()(v18);

    sub_100084C10((id *)v25);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100084C10((id *)v25);

    return _swiftEmptyArrayStorage;
  }
}

void sub_1001FBEE8(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    sub_1001FBF5C(a4, a1, a2);

  }
}

void sub_1001FBF5C(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  id v13;
  void *v14;
  void *Strong;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  _QWORD v27[2];
  void (*v28)(uint64_t, void *);
  void *v29;
  void (*v30)(uint64_t);
  uint64_t v31[4];
  _BYTE v32[40];
  _QWORD v33[2];
  char v34;
  __int128 v35[2];

  v4 = v3;
  sub_10000C1FC((uint64_t)(a1 + 1), (uint64_t)v35, (uint64_t *)&unk_10149B590);
  sub_10000BE48(v35, (uint64_t)v27);
  v8 = sub_100008B04(&qword_101496AB0);
  if (!swift_dynamicCast(v33, v27, v8, &type metadata for HomeListTwoLinesCellModel, 6))
  {
    v33[0] = 0;
    v33[1] = 0;
    v34 = -1;
    sub_100010CC4((uint64_t)v33, &qword_1014A0750);
    return;
  }
  sub_100124610((uint64_t)v33, (uint64_t)v35);
  v9 = (void *)sub_1001FED5C(a1, a2, a3);
  v10 = sub_100008B04((uint64_t *)&unk_101493B10);
  inited = swift_initStackObject(v10, v32);
  *(_OWORD *)(inited + 16) = xmmword_100E23F50;
  *(_QWORD *)(inited + 32) = v9;
  v27[0] = inited;
  specialized Array._endMutation()(inited);
  v12 = v27[0];
  v13 = v9;
  sub_1001FE3BC(v12);
  swift_bridgeObjectRelease(v12);
  sub_10011F150((uint64_t)v35, (uint64_t)v27);
  if (v28 == 3)
  {
    v14 = (void *)v27[0];
    sub_1000AB280(v4 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v27);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v31);
    sub_1000AB2BC((uint64_t)v27);
    if (!Strong
      || (v16 = objc_msgSend(Strong, "homeDeleteDelegate"),
          swift_unknownObjectRelease(Strong),
          !v16))
    {
      sub_10011F1C8(v35);

      return;
    }
    objc_msgSend(v16, "deleteMarkedLocation:", v14);

    swift_unknownObjectRelease(v16);
  }
  else
  {
    sub_10011F1C8(v27);
    sub_10011E6EC();
    if (v17)
    {
      v18 = v17;
      v19 = *(void **)(v4 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider);
      v20 = sub_100008B04((uint64_t *)&unk_101499120);
      v21 = swift_allocObject(v20, 64, 7);
      *(_OWORD *)(v21 + 16) = xmmword_100E22F40;
      *(_QWORD *)(v21 + 56) = swift_getObjectType();
      *(_QWORD *)(v21 + 32) = v18;
      swift_unknownObjectRetain(v18);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v21);
      v23 = swift_allocObject(&unk_1011ABB38, 24, 7);
      swift_unknownObjectWeakInit(v23 + 16);
      v24 = swift_allocObject(&unk_1011ABC00, 32, 7);
      *(_QWORD *)(v24 + 16) = v23;
      *(_QWORD *)(v24 + 24) = v13;
      v30 = sub_1001E4EB8;
      v31[0] = v24;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 1107296256;
      v28 = sub_1000B3780;
      v29 = &unk_1011ABC18;
      v25 = _Block_copy(v27);
      v26 = v13;
      swift_release();
      objc_msgSend(v19, "deleteRecents:completion:", isa, v25);
      _Block_release(v25);

      swift_unknownObjectRelease(v18);
    }
    else
    {

    }
  }
  sub_10011F1C8(v35);
}

id sub_1001FC288(uint64_t a1, __n128 a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  objc_class *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_super v31;
  _QWORD v32[9];

  v3 = v2;
  v30 = a1;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0, a2);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_markedLocationDataProvider;
  *(_QWORD *)&v3[v13] = objc_msgSend(objc_allocWithZone((Class)MarkedLocationDataProvider), "init");
  v14 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider;
  *(_QWORD *)&v3[v14] = objc_msgSend(objc_allocWithZone((Class)RecentsDataProvider), "init");
  v15 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilter;
  *(_QWORD *)&v3[v15] = objc_msgSend(objc_allocWithZone((Class)RecentsDataFilter), "initWithSearchMode:filterPredicate:", 1, 0);
  v16 = OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataFilterQueue;
  v17 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v17);
  v32[0] = _swiftEmptyArrayStorage;
  v18 = sub_10000BC84((unint64_t *)&unk_10149AB40, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100008B04((uint64_t *)&unk_101499CA0);
  v20 = sub_1000D00AC((unint64_t *)&unk_10149AB50, (uint64_t *)&unk_101499CA0);
  dispatch thunk of SetAlgebra.init<A>(_:)(v32, v19, v20, v7, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v29);
  *(_QWORD *)&v3[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000029, 0x8000000100E53900, v12, v9, v6, 0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents] = _swiftEmptyArrayStorage;
  v21 = v30;
  sub_1000AB280(v30, v32);
  v22 = &v3[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v23 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  v24 = v3;
  *(_QWORD *)&v3[v23] = sub_100009B78((uint64_t)_swiftEmptyArrayStorage);
  v24[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(_QWORD *)&v24[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000AB280((uint64_t)v32, &v24[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v25 = (objc_class *)type metadata accessor for HomeListSectionController();
  v31.receiver = v24;
  v31.super_class = v25;
  v26 = objc_msgSendSuper2(&v31, "init");
  sub_1000AB2BC((uint64_t)v32);
  sub_1000AB2BC(v21);
  return v26;
}

uint64_t sub_1001FC5A0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents));
}

id sub_1001FC5FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListRecentsSectionController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomeListRecentsSectionController()
{
  return objc_opt_self(_TtC4Maps32HomeListRecentsSectionController);
}

uint64_t sub_1001FC6B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v8;

  v1 = sub_100008B04((uint64_t *)&unk_101493B10);
  v2 = swift_allocObject(v1, 48, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E250A0;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_markedLocationDataProvider);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_recentsDataProvider);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v8 = v2;
  specialized Array._endMutation()(v2);
  v5 = v3;
  v6 = v4;
  return v8;
}

unint64_t sub_1001FC738@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  unint64_t v6;
  unint64_t result;
  char v8;
  Swift::String v9;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v9._countAndFlagsBits = 0xD00000000000003ELL;
  v9._object = (void *)0x8000000100E538C0;
  v3._object = (void *)0x8000000100E53890;
  v3._countAndFlagsBits = 0xD000000000000020;
  v4._countAndFlagsBits = 0x73746E65636552;
  v4._object = (void *)0xE700000000000000;
  v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v4, v9);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) + 16);
  result = GEOConfigGetUInteger(MapsConfig_MapsHomeMaxRecents, off_1014B3E58);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result < v6;
    swift_unknownObjectRetain(v1);
    return sub_100117734(v5._countAndFlagsBits, (uint64_t)v5._object, 0, v8, v1, (uint64_t)&off_1011ABAD0, 0x65636552656D6F48, 0xEB0000000073746ELL, a1);
  }
  return result;
}

id sub_1001FC874(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  Class isa;
  id v8;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_1001FBC68(a1);

  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  sub_10000E4BC(0, (unint64_t *)&unk_1014A0740, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  return v8;
}

_QWORD *sub_1001FC944()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents];
  v2 = v0;
  swift_bridgeObjectRetain(v1);
  v4 = sub_1001FD11C(v3);
  swift_bridgeObjectRelease(v1);

  return v4;
}

uint64_t sub_1001FC9A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject(&unk_1011ABB38, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  swift_retain();
  v3 = sub_1001FDFC8(a1, (uint64_t)sub_1001FD114, v2);
  swift_release_n(v2, 2);
  return v3;
}

uint64_t sub_1001FCA20()
{
  uint64_t v0;
  void *v1;
  uint64_t result;
  _QWORD v3[5];
  uint64_t v4;

  sub_1000AB280(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v3);
  v1 = (void *)swift_unknownObjectWeakLoadStrong(&v4);
  result = sub_1000AB2BC((uint64_t)v3);
  if (v1)
  {
    objc_msgSend(v1, "homeSectionHeaderButtonTapped:", 5);
    return swift_unknownObjectRelease(v1);
  }
  return result;
}

unint64_t sub_1001FCA90()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  _BYTE v8[48];
  Swift::String v9;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v9._countAndFlagsBits = 0xD00000000000003ELL;
  v9._object = (void *)0x8000000100E538C0;
  v1._object = (void *)0x8000000100E53890;
  v1._countAndFlagsBits = 0xD000000000000020;
  v2._countAndFlagsBits = 0x73746E65636552;
  v2._object = (void *)0xE700000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v2, v9);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) + 16);
  result = GEOConfigGetUInteger(MapsConfig_MapsHomeMaxRecents, off_1014B3E58);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = result < v4;
    swift_unknownObjectRetain(v0);
    sub_100117734(v3._countAndFlagsBits, (uint64_t)v3._object, 0, v6, v0, (uint64_t)&off_1011ABAD0, 0x65636552656D6F48, 0xEB0000000073746ELL, (uint64_t)v8);
    v7 = v8[17];
    sub_1000AE568((uint64_t)v8);
    return v7;
  }
  return result;
}

uint64_t sub_1001FCBD4()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  unint64_t UInteger;
  char v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15[8];
  _BYTE v16[24];
  uint64_t v17;
  Swift::String v18;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v18._countAndFlagsBits = 0xD00000000000003ELL;
  v18._object = (void *)0x8000000100E538C0;
  v1._object = (void *)0x8000000100E53890;
  v1._countAndFlagsBits = 0xD000000000000020;
  v2._countAndFlagsBits = 0x73746E65636552;
  v2._object = (void *)0xE700000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v2, v18);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps32HomeListRecentsSectionController_filteredRecents) + 16);
  UInteger = GEOConfigGetUInteger(MapsConfig_MapsHomeMaxRecents, off_1014B3E58);
  if ((UInteger & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = UInteger < v4;
    swift_unknownObjectRetain(v0);
    sub_100117734(v3._countAndFlagsBits, (uint64_t)v3._object, 0, v6, v0, (uint64_t)&off_1011ABAD0, 0x65636552656D6F48, 0xEB0000000073746ELL, (uint64_t)v16);
    sub_10000C1FC((uint64_t)&v17, (uint64_t)v15, (uint64_t *)&unk_101498C70);
    sub_1000AE568((uint64_t)v16);
    Strong = swift_unknownObjectWeakLoadStrong(v15);
    if (!Strong)
      return sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_101498C70);
    v8 = Strong;
    ObjectType = swift_getObjectType();
    v10 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionHeaderDelegate);
    if (v10)
      v11 = v10;
    else
      v11 = 0;
    if (v10)
      v12 = v8;
    else
      v12 = 0;
    if (v12)
    {
      sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_101498C70);
      v13 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v11);
      return swift_unknownObjectRelease(v8);
    }
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Maps/HashableWrappers.swift", 27, 2, 83, 0);
  __break(1u);
  return result;
}

unint64_t sub_1001FCDDC()
{
  return sub_1001FCA90() & 1;
}

uint64_t sub_1001FCE00()
{
  return sub_1001FCBD4();
}

_QWORD *sub_1001FCE20(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  Class isa;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t *v11;
  objc_super *v12;
  __int128 v14[2];
  id v15;
  uint64_t v16;
  _QWORD v17[2];
  char v18;
  _QWORD v19[2];
  unsigned __int8 v20;
  objc_super v21[5];
  objc_super v22;

  v3 = v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for HomeListRecentsSectionController();
  objc_msgSendSuper2(&v22, "collectionView:didSelectItemAtIndexPath:", a1, isa);

  sub_1000AB280((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v21);
  Strong = swift_unknownObjectWeakLoadStrong(&v21[1].super_class);
  sub_1000AB2BC((uint64_t)v21);
  if (Strong)
  {
    sub_100139A44(a2, v21);
    swift_unknownObjectRelease(Strong);
  }
  else
  {
    memset(v21, 0, 48);
  }
  sub_10000C1FC((uint64_t)v21, (uint64_t)&v15, &qword_10149B500);
  if (!v15)
  {
    sub_100010CC4((uint64_t)&v15, &qword_10149B500);
    goto LABEL_10;
  }
  sub_10000C1FC((uint64_t)&v16, (uint64_t)v14, (uint64_t *)&unk_10149B590);
  sub_10000BE48(v14, (uint64_t)v17);
  sub_100084C10(&v15);
  v8 = sub_100008B04(&qword_101496AB0);
  if ((swift_dynamicCast(v19, v17, v8, &type metadata for HomeListTwoLinesCellModel, 6) & 1) == 0)
  {
LABEL_10:
    v19[0] = 0;
    v19[1] = 0;
    v20 = -1;
    goto LABEL_11;
  }
  if (v20 == 255)
  {
LABEL_11:
    sub_100010CC4((uint64_t)v21, &qword_10149B500);
    v11 = &qword_1014A0750;
    v12 = (objc_super *)v19;
    return (_QWORD *)sub_100010CC4((uint64_t)v12, v11);
  }
  sub_100124610((uint64_t)v19, (uint64_t)&v15);
  sub_10011F150((uint64_t)&v15, (uint64_t)v17);
  if (v18 != 4)
  {
    sub_10011F1C8(&v15);
    sub_100010CC4((uint64_t)v21, &qword_10149B500);
    return sub_10011F1C8(v17);
  }
  v9 = v17[0];
  v10 = objc_msgSend((id)swift_unknownObjectRetain(v17[0]), "mspHistoryEntry");
  sub_1001FD260((uint64_t)v10);
  swift_unknownObjectRelease_n(v9, 2);
  swift_unknownObjectRelease(v10);
  sub_10011F1C8(&v15);
  v11 = &qword_10149B500;
  v12 = v21;
  return (_QWORD *)sub_100010CC4((uint64_t)v12, v11);
}

uint64_t sub_1001FD0F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_1001FD114(uint64_t a1)
{
  uint64_t v1;

  return sub_1001FC874(a1, v1);
}

_QWORD *sub_1001FD11C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v12[3];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  v4 = _swiftEmptyArrayStorage;
  do
  {
    sub_1001FBA2C(v3, (uint64_t)v12);
    if (*(_QWORD *)&v12[0])
    {
      v9 = v12[0];
      v10 = v12[1];
      v11 = v12[2];
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_1000A8440(0, v4[2] + 1, 1, v4);
      v6 = v4[2];
      v5 = v4[3];
      if (v6 >= v5 >> 1)
        v4 = sub_1000A8440((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
      v4[2] = v6 + 1;
      v7 = &v4[6 * v6];
      v7[3] = v10;
      v7[4] = v11;
      v7[2] = v9;
    }
    else
    {
      sub_100010CC4((uint64_t)v12, &qword_10149B500);
    }
    v3 += 32;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(a1);
  return v4;
}

void sub_1001FD260(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __objc2_prot *v37;

  v2 = objc_opt_self(CuratedCollectionHistoryEntry);
  if (swift_dynamicCastObjCClass(a1, v2))
  {
    v3 = (void *)objc_opt_self(GEOAPPortal);
    v32 = IndexPath.item.getter(v3);
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "captureUserAction:target:value:", 175, 8, v6, swift_bridgeObjectRelease(v5).n128_f64[0], v32);
  }
  else
  {
    v37 = &OBJC_PROTOCOL___MSPHistoryEntryRoute;
    v7 = swift_dynamicCastObjCProtocolConditional(a1, 1, &v37);
    if (v7)
    {
      v8 = (void *)v7;
      swift_unknownObjectRetain(a1);
      v6 = objc_msgSend(v8, "endWaypoint");
      v9 = objc_opt_self(GEOComposedWaypointToRoute);
      v10 = (void *)swift_dynamicCastObjCClass(v6, v9);
      if (v10)
      {
        v11 = objc_msgSend(v10, "route");
        v12 = objc_msgSend(v11, "source");

        switch((unint64_t)v12)
        {
          case 2uLL:
            v13 = (void *)objc_opt_self(GEOAPPortal);
            v33 = IndexPath.item.getter(v13);
            dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v15 = v14;
            v16 = String._bridgeToObjectiveC()();
            objc_msgSend(v13, "captureUserAction:target:value:", 462, 8, v16, swift_bridgeObjectRelease(v15).n128_f64[0], v33);
            goto LABEL_16;
          case 3uLL:
            v28 = (void *)objc_opt_self(GEOAPPortal);
            v36 = IndexPath.item.getter(v28);
            dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v30 = v29;
            v16 = String._bridgeToObjectiveC()();
            objc_msgSend(v28, "captureUserAction:target:value:", 468, 8, v16, swift_bridgeObjectRelease(v30).n128_f64[0], v36);
LABEL_16:

            break;
          default:
            break;
        }
      }
      else
      {
        swift_unknownObjectRelease(a1);

        swift_unknownObjectRetain(a1);
        v20 = objc_msgSend(v8, "waypoints");
        v21 = sub_10000E4BC(0, (unint64_t *)&qword_101491C90, GEOComposedWaypoint_ptr);
        v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

        if ((unint64_t)v22 >> 62)
        {
          if (v22 < 0)
            v31 = v22;
          else
            v31 = v22 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v22);
          v23 = _CocoaArrayWrapper.endIndex.getter(v31);
          swift_bridgeObjectRelease(v22);
        }
        else
        {
          v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v22);
        if (v23 > 2)
          v24 = 302;
        else
          v24 = 303;
        v25 = (void *)objc_opt_self(GEOAPPortal);
        v35 = IndexPath.item.getter(v25);
        dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v27 = v26;
        v6 = String._bridgeToObjectiveC()();
        objc_msgSend(v25, "captureUserAction:target:value:", v24, 8, v6, swift_bridgeObjectRelease(v27).n128_f64[0], v35);
      }
      swift_unknownObjectRelease(a1);
    }
    else
    {
      v17 = (void *)objc_opt_self(GEOAPPortal);
      v34 = IndexPath.item.getter(v17);
      dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v19 = v18;
      v6 = String._bridgeToObjectiveC()();
      objc_msgSend(v17, "captureUserAction:target:value:", 2064, 8, v6, swift_bridgeObjectRelease(v19).n128_f64[0], v34);
    }
  }

}

uint64_t sub_1001FD614()
{
  uint64_t v0;

  return sub_1001FB648(*(void **)(v0 + 16));
}

double sub_1001FD620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001FD630(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1001FD638()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001FD664()
{
  uint64_t v0;

  sub_1001FB8E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1001FD66C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FD698()
{
  uint64_t v0;

  swift_release();

  sub_10000BEAC((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1001FD6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001FBEE8(a1, a2, *(_QWORD *)(v2 + 16), (void **)(v2 + 24));
}

uint64_t sub_1001FD6D8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001FD6FC()
{
  uint64_t v0;

  switch(*(_BYTE *)(v0 + 32))
  {
    case 0:
    case 2:
    case 3:
    case 5:

      break;
    case 1:

      swift_unknownObjectWeakDestroy(v0 + 24);
      break;
    case 4:
      swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
      break;
    default:
      return swift_deallocObject(v0, 33, 7);
  }
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1001FD768()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikeRouteLength()
{
  return &type metadata for PlaceSummaryUnitHikeRouteLength;
}

void *sub_1001FD7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;

  v2 = a2;
  v3 = a1;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if ((a2 & 0xC000000000000001) != 0)
      goto LABEL_5;
LABEL_11:
    if (v4 > *(_QWORD *)(v2 + 16) >> 3)
      return sub_10002EE2C(v3, v2);
    goto LABEL_13;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v4 = __CocoaSet.count.getter(a1);
  if ((v2 & 0xC000000000000001) == 0)
    goto LABEL_11;
LABEL_5:
  if (v2 < 0)
    v5 = v2;
  else
    v5 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v4 > __CocoaSet.count.getter(v5) / 8)
  {
    swift_bridgeObjectRetain(v2);
    v6 = __CocoaSet.count.getter(v5);
    v7 = sub_10002E874(v5, v6);
    swift_bridgeObjectRelease(v2);
    v2 = v7;
    return sub_10002EE2C(v3, v2);
  }
LABEL_13:
  sub_10002E548(v3);
  return (void *)v2;
}

uint64_t sub_1001FD8C4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive);
}

uint64_t sub_1001FD8D4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive) = a1;
  return sub_1002004C8(v2);
}

id sub_1001FD8EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 16);
    swift_bridgeObjectRetain(v4);
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    v6 = objc_msgSend((id)objc_opt_self(IdentifierPath), "identifierPathWithIdentifier:", v5);

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

uint64_t sub_1001FD9A8()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t (*v31)(void);
  _QWORD *v32;
  id v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v1 = (char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot;
  v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
  v2 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 8);
  v4 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 16);
  v5 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 24);
  if (v3)
  {
    v6 = *(id *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
LABEL_27:
    sub_1002028E0(v3, v2, v4, v5);
    return (uint64_t)v6;
  }
  v7 = v0;
  v55 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 24);
  v56 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 16);
  v57 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 8);
  ObjectType = swift_getObjectType();
  v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing);
  if (v9)
    v10 = v9;
  else
    v10 = 0;
  if (v9)
    v11 = v0;
  else
    v11 = 0;
  if (v11)
  {
    v12 = swift_getObjectType();
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
    v14 = v0;
    v15 = v13(v12, v10);

    sub_1001FF6C0(v15);
    v16 = v14;
    v17 = sub_100201D50(v15, (uint64_t)v16);
    swift_bridgeObjectRelease(v15);

    v18 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0x188);
    v19 = v16;
    v20 = v18();

    v21 = sub_1001B0EA8(v20, v17);
    v53 = v22;
    v24 = v23;
    v26 = v25;
    v27 = v25 >> 1;
    if (v23 == v25 >> 1)
    {
      v28 = _swiftEmptyArrayStorage;
      goto LABEL_17;
    }
    v29 = swift_getObjectType();
    if (swift_conformsToProtocol2(v29, &protocol descriptor for HomeListSectionControllerSubclassing))
      v30 = v7;
    else
      v30 = 0;
    if (v30)
    {
      v31 = *(uint64_t (**)(void))((swift_isaMask & *v30) + 0x190);
      v32 = v19;
      v28 = (_QWORD *)v31();

LABEL_17:
      v33 = sub_1001FD8EC();
      if ((v26 & 1) != 0)
      {
        v35 = v28;
        v36 = type metadata accessor for __ContiguousArrayStorageBase(0);
        v37 = swift_unknownObjectRetain_n(v21, 3);
        v38 = (_QWORD *)swift_dynamicCastClass(v37, v36);
        if (!v38)
        {
          swift_unknownObjectRelease(v21);
          v38 = _swiftEmptyArrayStorage;
        }
        v39 = v38[2];
        v40 = swift_release();
        if (__OFSUB__(v27, v24))
        {
          __break(1u);
        }
        else
        {
          v40 = v21;
          if (v39 == v27 - v24)
          {
            v34 = (_QWORD *)swift_dynamicCastClass(v21, v36);
            v28 = v35;
            if (!v34)
            {
              swift_unknownObjectRelease(v21);
              v34 = _swiftEmptyArrayStorage;
            }
            goto LABEL_26;
          }
        }
        swift_unknownObjectRelease(v40);
        v28 = v35;
      }
      else
      {
        swift_unknownObjectRetain(v21);
      }
      v34 = sub_1000D8A44(v21, v53, v24, v26);
LABEL_26:
      swift_unknownObjectRelease(v21);
      v41 = (void *)sub_100135B28(v33, (uint64_t)v34, (uint64_t)v28);
      v43 = v42;
      v45 = v44;
      v47 = v46;

      swift_bridgeObjectRelease(v28);
      v54 = v21;
      v48 = *(void **)v1;
      v49 = *((_QWORD *)v1 + 1);
      v51 = *((_QWORD *)v1 + 2);
      v50 = *((_QWORD *)v1 + 3);
      *(_QWORD *)v1 = v41;
      *((_QWORD *)v1 + 1) = v43;
      *((_QWORD *)v1 + 2) = v45;
      *((_QWORD *)v1 + 3) = v47;
      v6 = v41;
      swift_bridgeObjectRetain(v43);
      swift_bridgeObjectRetain(v45);
      swift_bridgeObjectRetain(v47);
      sub_1001420E0(v48, v49, v51, v50);
      swift_unknownObjectRelease(v54);
      v2 = v57;
      v3 = 0;
      v5 = v55;
      v4 = v56;
      goto LABEL_27;
    }
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
  __break(1u);
  return result;
}

void *sub_1001FDD00()
{
  uint64_t v0;
  _OWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (_OWORD *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 8);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 16);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot + 24);
  *v1 = 0u;
  v1[1] = 0u;
  return sub_1001420E0(v2, v3, v4, v5);
}

id sub_1001FDD20()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath);
  }
  else
  {
    v4 = sub_1001FD8EC();
    v5 = objc_msgSend(v4, "identifierPathByAppendingIdentifier:", UICollectionElementKindSectionHeader);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_1001FDDB0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD v25[3];
  uint64_t v26;
  _BYTE v27[48];

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing);
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (!v5)
    v1 = 0;
  if (!v1)
  {
LABEL_21:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
    __break(1u);
    return result;
  }
  v7 = swift_getObjectType();
  v8 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 16);
  v9 = v2;
  v8(v25, v7, v6);

  if (v25[1])
  {
    sub_100117FC0((uint64_t)v25, (uint64_t)v27);
    sub_1000AB280((uint64_t)v9 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v25);
    v10 = swift_unknownObjectWeakLoadStrong(&v26);
    sub_1000AB2BC((uint64_t)v25);
    if (!v10)
      goto LABEL_17;
    v11 = swift_getObjectType();
    v12 = swift_conformsToProtocol2(v11, &protocol descriptor for HomeListSectionControllerSubclassing);
    if (v12)
      v13 = v12;
    else
      v13 = 0;
    if (!v12)
      v2 = 0;
    if (v2)
    {
      v14 = swift_getObjectType();
      v15 = v9;
      sub_100140E10(v2, v10, v14, v13);
      v17 = v16;
      swift_unknownObjectRelease(v10);

      if (v17)
      {

        v18 = 0;
LABEL_18:
        v27[16] = v18;
        v19 = sub_1001FDD20();
        v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
        v22 = v21;
        *(_QWORD *)(a1 + 48) = &type metadata for HomeListSectionHeaderViewModel;
        *(_QWORD *)(a1 + 56) = sub_100202868();
        v23 = swift_allocObject(&unk_1011ABF10, 64, 7);
        *(_QWORD *)(a1 + 24) = v23;
        result = sub_100117FC0((uint64_t)v27, v23 + 16);
        *(_QWORD *)a1 = v19;
        *(_QWORD *)(a1 + 8) = v20;
        *(_QWORD *)(a1 + 16) = v22;
        return result;
      }
LABEL_17:
      v18 = 1;
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  result = sub_100010CC4((uint64_t)v25, &qword_1014A09B0);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1001FDFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t ObjectType;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char *v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[5];

  v44 = a2;
  v6 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode(0);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  v7 = __chkstk_darwin(v6);
  v41 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UICollectionLayoutListConfiguration(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v9, v16);
  UICollectionLayoutListConfiguration.init(appearance:)(v13);
  sub_1000AB280((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v45);
  Strong = swift_unknownObjectWeakLoadStrong((char *)&v45[1] + 8);
  sub_1000AB2BC((uint64_t)v45);
  if (!Strong)
  {
LABEL_12:
    v35 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    UICollectionLayoutListConfiguration.backgroundColor.setter(v35);
    UICollectionLayoutListConfiguration.headerTopPadding.setter(0, 0);
    v36 = v44;
    sub_10000C128(v44, a3);
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter(v36, a3);
    sub_10000E4BC(0, (unint64_t *)&unk_101496350, NSCollectionLayoutSection_ptr);
    v37 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)(v18, a1);
    objc_msgSend(v37, "contentInsets");
    objc_msgSend(v37, "setContentInsets:", 0.0);
    objc_msgSend(v37, "contentInsets");
    objc_msgSend(v37, "setContentInsets:");
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    return (uint64_t)v37;
  }
  v40 = a3;
  ObjectType = swift_getObjectType(v3);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v21 = v3;
  else
    v21 = 0;
  if (v21)
  {
    v22 = v3;
    v23 = sub_1001FDD20();
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v26 = v25;
    v27 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v27)
    {
      v28 = v24;
      v39 = a1;
      v29 = v15;
      v30 = v14;
      v31 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000AE4F8(v27, v31);
      sub_1000AE4F8(v27, v31);
      v32 = v23;
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v27);
      sub_10012F24C(v32, v28, v26, 0, v31, v45);
      v33 = v31;
      v14 = v30;
      v15 = v29;
      a1 = v39;
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease_n(v26, 2);

    }
    else
    {
      memset(v45, 0, 64);

      swift_bridgeObjectRelease(v26);
    }

    a3 = v40;
    if (*(_QWORD *)&v45[0])
    {
      sub_100010CC4((uint64_t)v45, (uint64_t *)&unk_10149FDC0);
      v34 = v41;
      (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v41, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v43);
      UICollectionLayoutListConfiguration.headerMode.setter(v34);
      swift_unknownObjectRelease(Strong);
    }
    else
    {
      swift_unknownObjectRelease(Strong);
      sub_100010CC4((uint64_t)v45, (uint64_t *)&unk_10149FDC0);
    }
    goto LABEL_12;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
  __break(1u);
  return result;
}

void sub_1001FE3BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  __n128 v8;
  uint64_t v9;
  NSObject *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t Strong;
  void *v15;
  uint64_t ObjectType;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  NSObject **v26;
  uint64_t v27;
  NSObject **v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  NSObject **v34;
  uint64_t v35;
  uint64_t *v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  NSObject *v45;
  unint64_t v46;
  char v47;
  Swift::Int v48;
  NSObject *v49;
  NSObject *v50;
  uint64_t v51;
  NSObject *v52;
  NSObject *v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t inited;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t *v72;
  __n128 v73;
  char *v74;
  uint64_t v75;
  _BYTE *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  char v80[48];
  _QWORD v81[3];
  _BYTE v82[48];
  char v83[32];

  v2 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v2);
  v4 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_53:
    if (a1 < 0)
      v57 = a1;
    else
      v57 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v57);
    v7 = &qword_1014A0000;
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v7 = &qword_1014A0000;
    if (v6)
    {
LABEL_3:
      v70 = v5;
      v77 = &v74[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
      v78 = a1 & 0xC000000000000001;
      v72 = (uint64_t *)&v74[OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions];
      v8 = swift_beginAccess(&v74[OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions], v83, 0, 0);
      v76 = v82;
      v9 = 4;
      v8.n128_u64[0] = 138412290;
      v73 = v8;
      v71 = (char *)&type metadata for Swift.AnyObject + 8;
      v75 = v6;
      while (1)
      {
        if (v78)
          v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a1);
        else
          v11 = *(id *)(a1 + 8 * v9);
        v12 = v11;
        v13 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
        {
          __break(1u);
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        sub_1000AB280((uint64_t)v77, v81);
        Strong = swift_unknownObjectWeakLoadStrong(v76);
        sub_1000AB2BC((uint64_t)v81);
        if (!Strong)
          break;
        v5 = a1;
        v15 = v74;
        ObjectType = swift_getObjectType(v74);
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
          v17 = v15;
        else
          v17 = 0;
        if (!v17)
          goto LABEL_73;
        v18 = v15;
        v19 = objc_msgSend(v12, "identifierPath");
        v20 = sub_1001385F0();
        v81[0] = v19;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v81);
        swift_unknownObjectRelease(Strong);

        v21 = type metadata accessor for IndexPath(0);
        a1 = v5;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v4, 1, v21) == 1)
          goto LABEL_21;
        sub_100010CC4((uint64_t)v4, &qword_101499510);
        if (qword_101490E98 != -1)
          swift_once(&qword_101490E98, sub_100114760);
        v22 = type metadata accessor for Logger(0);
        sub_10000E918(v22, (uint64_t)qword_1014D4AD8);
        v10 = v12;
        v23 = Logger.logObject.getter(v10);
        v24 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = swift_slowAlloc(12, -1);
          v26 = (NSObject **)swift_slowAlloc(8, -1);
          *(_DWORD *)v25 = v73.n128_u32[0];
          *(_QWORD *)(v25 + 4) = v10;
          *v26 = v10;

          _os_log_impl((void *)&_mh_execute_header, v23, v24, "Starting deletion: %@", (uint8_t *)v25, 0xCu);
          v27 = sub_100008B04((uint64_t *)&unk_101494470);
          swift_arrayDestroy(v26, 1, v27);
          v28 = v26;
          a1 = v5;
          swift_slowDealloc(v28, -1, -1);
          swift_slowDealloc(v25, -1, -1);
        }
        else
        {

          v23 = v10;
        }
        v36 = v72;

        v37 = -[NSObject identifierPath](v10, "identifierPath");
        if ((-[NSObject completed](v10, "completed") & 1) != 0)
        {
          v31 = v10;
          v10 = v37;
        }
        else
        {
          v38 = *v36;
          if ((*v36 & 0xC000000000000001) != 0)
          {
            if (v38 < 0)
              v39 = *v36;
            else
              v39 = v38 & 0xFFFFFFFFFFFFFF8;
            v40 = v37;
            swift_bridgeObjectRetain(v38);
            v41 = __CocoaDictionary.lookup(_:)(v40, v39);
            if (!v41)
            {

              swift_bridgeObjectRelease(v38);
              a1 = v5;
LABEL_41:
              v36 = v72;
LABEL_42:
              swift_beginAccess(v36, v81, 33, 0);
              v48 = *v36;
              if ((*v36 & 0xC000000000000001) != 0)
              {
                if (v48 >= 0)
                  v48 &= 0xFFFFFFFFFFFFFF8uLL;
                v49 = v10;
                v50 = v37;
                v51 = __CocoaDictionary.count.getter(v48);
                if (__OFADD__(v51, 1))
                  goto LABEL_52;
                v48 = sub_100201498(v48, v51 + 1);
                *v36 = v48;
              }
              else
              {
                v52 = v10;
                v53 = v37;
              }
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
              v79 = *v36;
              *v36 = 0x8000000000000000;
              sub_1001A01F0((uint64_t)v10, v37, isUniquelyReferenced_nonNull_native);
              v55 = *v36;
              *v36 = v79;

              swift_bridgeObjectRelease(v55);
              swift_endAccess(v81);
              v31 = v37;
              goto LABEL_5;
            }
            v42 = v41;
            v79 = v41;
            v43 = sub_10000E4BC(0, (unint64_t *)&unk_10149A2C0, off_101196C58);
            swift_unknownObjectRetain(v42);
            swift_dynamicCast(v81, &v79, v71, v43, 7);
            v44 = v81[0];
            swift_unknownObjectRelease(v42);

            swift_bridgeObjectRelease(v38);
            a1 = v5;
          }
          else
          {
            if (!*(_QWORD *)(v38 + 16))
              goto LABEL_42;
            v45 = v37;
            swift_bridgeObjectRetain(v38);
            v46 = sub_1000C1A60((uint64_t)v45);
            if ((v47 & 1) == 0)
            {

              swift_bridgeObjectRelease(v38);
              goto LABEL_41;
            }
            v44 = *(id *)(*(_QWORD *)(v38 + 56) + 8 * v46);

            swift_bridgeObjectRelease(v38);
          }
          v36 = v72;
          if (!v44)
            goto LABEL_42;

          v31 = v37;
          v10 = v44;
        }
LABEL_5:

        ++v9;
        if (v13 == v75)
        {
          swift_bridgeObjectRelease(a1);
          v7 = &qword_1014A0000;
          if (v70)
            goto LABEL_58;
LABEL_50:
          v56 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          goto LABEL_62;
        }
      }
      v29 = type metadata accessor for IndexPath(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v4, 1, 1, v29);
LABEL_21:
      sub_100010CC4((uint64_t)v4, &qword_101499510);
      if (qword_101490E98 != -1)
        swift_once(&qword_101490E98, sub_100114760);
      v30 = type metadata accessor for Logger(0);
      sub_10000E918(v30, (uint64_t)qword_1014D4AD8);
      v31 = v12;
      v10 = Logger.logObject.getter(v31);
      v32 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v10, v32))
      {
        v33 = swift_slowAlloc(12, -1);
        v34 = (NSObject **)swift_slowAlloc(8, -1);
        *(_DWORD *)v33 = v73.n128_u32[0];
        *(_QWORD *)(v33 + 4) = v31;
        *v34 = v31;
        _os_log_impl((void *)&_mh_execute_header, v10, v32, "Cannot start deletion because the deleted item is not present in the collection view: %@", (uint8_t *)v33, 0xCu);
        v35 = sub_100008B04((uint64_t *)&unk_101494470);
        swift_arrayDestroy(v34, 1, v35);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v33, -1, -1);
      }
      else
      {

        v10 = v31;
      }
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease(a1);
  if (!v5)
    goto LABEL_50;
LABEL_58:
  if (a1 < 0)
    v58 = a1;
  else
    v58 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v56 = _CocoaArrayWrapper.endIndex.getter(v58);
  swift_bridgeObjectRelease(a1);
LABEL_62:
  v59 = v74;
  if (v56 >= 1)
  {
    sub_1000AB280((uint64_t)&v74[v7[298]], v81);
    v60 = swift_unknownObjectWeakLoadStrong(v82);
    sub_1000AB2BC((uint64_t)v81);
    if (v60)
    {
      v61 = swift_getObjectType(v59);
      v62 = swift_conformsToProtocol2(v61, &protocol descriptor for HomeListSectionControllerSubclassing);
      if (v62)
        v63 = v62;
      else
        v63 = 0;
      if (v62)
        v64 = v59;
      else
        v64 = 0;
      if (v64)
      {
        v65 = sub_100008B04(&qword_10149C0A0);
        inited = swift_initStackObject(v65, v80);
        *(_OWORD *)(inited + 16) = xmmword_100E22F40;
        *(_QWORD *)(inited + 32) = v64;
        *(_QWORD *)(inited + 40) = v63;
        v67 = v59;
        sub_100139E90(inited, 1);
        swift_setDeallocating(inited);
        v68 = sub_100008B04(&qword_101494000);
        swift_arrayDestroy(inited + 32, 1, v68);

        swift_unknownObjectRelease(v60);
      }
      else
      {
LABEL_73:
        _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
        __break(1u);
      }
    }
  }
}

void sub_1001FEC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(a1);
    sub_1001FF058(a1);
    return;
  }
  if (a1 < 0)
    v9 = a1;
  else
    v9 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v9);
  if (!v4)
    goto LABEL_15;
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v6 = *(id *)(a1 + 8 * i + 32);
      v7 = v6;
      if ((objc_msgSend(v6, "completed") & 1) == 0)
      {
        v8 = _convertErrorToNSError(_:)(a2);
        objc_msgSend(v7, "markAsCompletedWithSuccess:error:", 0, v8);

        v7 = (void *)v8;
      }

    }
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_1001FED5C(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t Strong;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void *v20;
  id v21;
  id v22;
  int v23;
  id v24;
  uint64_t v25;
  Class isa;
  void *v27;
  id v28;
  uint64_t result;
  uint64_t v30;
  _QWORD aBlock[3];
  _QWORD v32[6];

  v7 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v7);
  v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  sub_1000AB280((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, aBlock);
  Strong = swift_unknownObjectWeakLoadStrong(v32);
  v16 = v14;
  sub_1000AB2BC((uint64_t)aBlock);
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_9;
  }
  v30 = a3;
  v17 = a2;
  v18 = v10;
  ObjectType = swift_getObjectType(v3);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v20 = v3;
  else
    v20 = 0;
  if (v20)
  {
    v21 = v3;
    v22 = sub_1001385F0();
    aBlock[0] = v16;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(aBlock);
    swift_unknownObjectRelease(Strong);

    v10 = v18;
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v18);
    a2 = v17;
    a3 = v30;
    if (v23 != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
LABEL_10:
      v24 = objc_allocWithZone((Class)HomeDeletion);
      sub_100084BD4((uint64_t)a1, (uint64_t)aBlock);
      swift_retain();
      v25 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(aBlock, &type metadata for HomeListCellSnapshot);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v32[1] = a2;
      v32[2] = a3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001E2858;
      v32[0] = &unk_1011ABED8;
      v27 = _Block_copy(aBlock);
      swift_release();
      v28 = objc_msgSend(v24, "initWithObject:indexPath:identifierPath:contextualActionCompletionHandler:", v25, isa, v16, v27);
      _Block_release(v27);

      swift_unknownObjectRelease(v25);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return (uint64_t)v28;
    }
LABEL_9:
    IndexPath.init(item:section:)(0, 0);
    sub_100010CC4((uint64_t)v9, &qword_101499510);
    goto LABEL_10;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
  __break(1u);
  return result;
}

void sub_1001FF058(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  NSObject **v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  char v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  char v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t inited;
  _QWORD *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  unsigned __int8 v56;
  char v57;
  uint64_t v58;
  char v59[48];
  _QWORD v60[3];
  uint64_t v61;
  char v62[32];

  v3 = (uint64_t *)(a1 & 0xFFFFFFFFFFFFFF8);
  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v5)
    {
      swift_bridgeObjectRelease(a1);
LABEL_47:
      if (v3[2] < 1)
        return;
LABEL_48:
      if ((v5 & 1) != 0)
      {
        sub_1000AB280((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v60);
        v43 = swift_unknownObjectWeakLoadStrong(&v61);
        sub_1000AB2BC((uint64_t)v60);
        if (v43)
        {
          ObjectType = swift_getObjectType(v1);
          v45 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing);
          if (v45)
            v46 = v45;
          else
            v46 = 0;
          if (v45)
            v47 = v1;
          else
            v47 = 0;
          if (v47)
          {
            v48 = sub_100008B04(&qword_10149C0A0);
            inited = swift_initStackObject(v48, v59);
            *(_OWORD *)(inited + 16) = xmmword_100E22F40;
            *(_QWORD *)(inited + 32) = v47;
            *(_QWORD *)(inited + 40) = v46;
            v50 = v1;
            sub_100139E90(inited, 1);
            swift_setDeallocating(inited);
            v51 = sub_100008B04(&qword_101494000);
            swift_arrayDestroy(inited + 32, 1, v51);

            swift_unknownObjectRelease(v43);
          }
          else
          {
            _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
            __break(1u);
          }
        }
      }
      return;
    }
    goto LABEL_3;
  }
LABEL_60:
  if (a1 < 0)
    v52 = (uint64_t *)a1;
  else
    v52 = v3;
  swift_bridgeObjectRetain(a1);
  v53 = _CocoaArrayWrapper.endIndex.getter(v52);
  v5 = v53;
  if (!v53)
  {
LABEL_66:
    swift_bridgeObjectRelease(a1);
    goto LABEL_41;
  }
  if (v53 < 1)
  {
    __break(1u);
    goto LABEL_66;
  }
LABEL_3:
  v54 = v4;
  v55 = v1;
  v3 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions, v62, 0, 0);
  v57 = 0;
  v4 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
    else
      v7 = *(id *)(a1 + 8 * v4 + 32);
    v8 = v7;
    if (qword_101490E98 != -1)
      swift_once(&qword_101490E98, sub_100114760);
    v9 = type metadata accessor for Logger(0);
    sub_10000E918(v9, (uint64_t)qword_1014D4AD8);
    v10 = v8;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(12, -1);
      v14 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 138412290;
      *(_QWORD *)(v13 + 4) = v10;
      *v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Ending deletion: %@", (uint8_t *)v13, 0xCu);
      v15 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v14, 1, v15);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {

      v11 = v10;
    }

    v16 = -[NSObject identifierPath](v10, "identifierPath");
    if (!-[NSObject completed](v10, "completed"))
    {
LABEL_4:
      v6 = v16;
      goto LABEL_5;
    }
    v17 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
    {
      if (v17 < 0)
        v18 = *v3;
      else
        v18 = v17 & 0xFFFFFFFFFFFFFF8;
      v6 = v16;
      swift_bridgeObjectRetain(v17);
      v19 = __CocoaDictionary.lookup(_:)(v6, v18);
      if (!v19)
        goto LABEL_32;
      v20 = v19;
      v58 = v19;
      v21 = sub_10000E4BC(0, (unint64_t *)&unk_10149A2C0, off_101196C58);
      swift_unknownObjectRetain(v20);
      swift_dynamicCast(v60, &v58, (char *)&type metadata for Swift.AnyObject + 8, v21, 7);
      v22 = (id)v60[0];
      swift_unknownObjectRelease(v20);
    }
    else
    {
      if (!*(_QWORD *)(v17 + 16))
        goto LABEL_4;
      v6 = v16;
      swift_bridgeObjectRetain(v17);
      v23 = sub_1000C1A60((uint64_t)v6);
      if ((v24 & 1) == 0)
      {
LABEL_32:

        swift_bridgeObjectRelease(v17);
        goto LABEL_5;
      }
      v22 = *(id *)(*(_QWORD *)(v17 + 56) + 8 * v23);
    }

    swift_bridgeObjectRelease(v17);
    if (!v22)
      goto LABEL_4;

    v25 = -[NSObject success](v10, "success");
    swift_beginAccess(v3, v60, 33, 0);
    v26 = *v3;
    if ((*v3 & 0xC000000000000001) != 0)
    {
      v56 = v25;
      if (v26 < 0)
        v27 = *v3;
      else
        v27 = v26 & 0xFFFFFFFFFFFFFF8;
      v28 = v16;
      swift_bridgeObjectRetain(v26);
      v29 = __CocoaDictionary.lookup(_:)(v28, v27);

      if (v29)
      {
        swift_unknownObjectRelease(v29);
        v30 = __CocoaDictionary.count.getter(v27);
        v1 = (_QWORD *)sub_100201498(v27, v30);
        swift_retain();
        v31 = sub_1000C1A60((uint64_t)v28);
        v33 = v32;
        swift_release();
        if ((v33 & 1) == 0)
        {
          __break(1u);
          goto LABEL_60;
        }

        v6 = *(id *)(v1[7] + 8 * v31);
        sub_10019FCD8(v31, (uint64_t)v1);
        v34 = *v3;
        *v3 = (uint64_t)v1;
        swift_bridgeObjectRelease(v34);
        v25 = v56;
      }
      else
      {
        swift_bridgeObjectRelease(v26);
        v6 = 0;
        v25 = v56;
      }
    }
    else
    {
      swift_bridgeObjectRetain(*v3);
      v35 = sub_1000C1A60((uint64_t)v16);
      v37 = v36;
      swift_bridgeObjectRelease(v26);
      if ((v37 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
        v39 = *v3;
        v58 = *v3;
        *v3 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1001A10E0();
          v39 = v58;
        }

        v6 = *(id *)(*(_QWORD *)(v39 + 56) + 8 * v35);
        sub_10019FCD8(v35, v39);
        v40 = *v3;
        *v3 = v39;
        swift_bridgeObjectRelease(v40);
      }
      else
      {
        v6 = 0;
      }
    }
    v57 |= v25 ^ 1;
    swift_endAccess(v60);

LABEL_5:
    ++v4;

  }
  while (v5 != v4);
  swift_bridgeObjectRelease(a1);
  v3 = (uint64_t *)(a1 & 0xFFFFFFFFFFFFFF8);
  v1 = v55;
  LOBYTE(v5) = v57;
  if (!v54)
    goto LABEL_47;
LABEL_41:
  if (a1 < 0)
    v41 = (uint64_t *)a1;
  else
    v41 = v3;
  swift_bridgeObjectRetain(a1);
  v42 = _CocoaArrayWrapper.endIndex.getter(v41);
  swift_bridgeObjectRelease(a1);
  if (v42 >= 1)
    goto LABEL_48;
}

void sub_1001FF6C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  id v7;
  id *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  id v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  _QWORD v51[5];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int64_t v56;
  Swift::Int v57;
  _QWORD v58[2];
  id v59[6];
  _QWORD *v60;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v60 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = a1 + 32;
    do
    {
      sub_100084BD4(v6, (uint64_t)v59);
      v7 = v59[0];
      v8 = sub_100084C10(v59);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = v60[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
      specialized ContiguousArray._endMutation()(v10);
      v6 += 48;
      --v3;
    }
    while (v3);
    v4 = v60;
  }
  sub_100035AB4((uint64_t)v4);
  v12 = v11;
  swift_bridgeObjectRelease(v4);
  v13 = (_QWORD *)(v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
  swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions, v59, 0, 0);
  swift_bridgeObjectRetain(*v13);
  sub_10002AF24(v14);
  v16 = sub_1001FD7D0(v12, v15);
  swift_bridgeObjectRelease(v12);
  __chkstk_darwin(*v13);
  v51[2] = v16;
  swift_bridgeObjectRetain(v17);
  v19 = sub_1002022EC(v18, (uint64_t (*)(id, id))sub_100202860, (uint64_t)v51);
  swift_bridgeObjectRelease(v16);
  v53 = v2;
  v55 = v19 & 0xC000000000000001;
  if ((v19 & 0xC000000000000001) != 0)
  {
    if (v19 < 0)
      v20 = v19;
    else
      v20 = v19 & 0xFFFFFFFFFFFFFF8;
    v21 = __CocoaDictionary.makeIterator()(v20);
    v57 = 0;
    v22 = 0;
    v23 = 0;
    v24 = v21 | 0x8000000000000000;
  }
  else
  {
    v25 = -1 << *(_BYTE *)(v19 + 32);
    v22 = ~v25;
    v26 = *(_QWORD *)(v19 + 64);
    v57 = v19 + 64;
    v27 = -v25;
    if (v27 < 64)
      v28 = ~(-1 << v27);
    else
      v28 = -1;
    v23 = v28 & v26;
    v24 = v19;
  }
  v52 = v19;
  v29 = swift_bridgeObjectRetain(v19);
  v30 = 0;
  v54 = v22;
  v56 = (unint64_t)(v22 + 64) >> 6;
  while ((v24 & 0x8000000000000000) != 0)
  {
    v34 = __CocoaDictionary.Iterator.next()(v29);
    if (!v34)
      goto LABEL_39;
    v36 = v34;
    v37 = v35;
    v58[0] = v34;
    v38 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
    swift_unknownObjectRetain(v36);
    swift_dynamicCast(&v60, v58, (char *)&type metadata for Swift.AnyObject + 8, v38, 7);
    v39 = v60;
    swift_unknownObjectRelease(v36);
    v58[0] = v37;
    v40 = sub_10000E4BC(0, (unint64_t *)&unk_10149A2C0, off_101196C58);
    swift_unknownObjectRetain(v37);
    swift_dynamicCast(&v60, v58, (char *)&type metadata for Swift.AnyObject + 8, v40, 7);
    v41 = v60;
    swift_unknownObjectRelease(v37);
    v33 = v30;
    v31 = v23;
    if (!v39)
      goto LABEL_39;
LABEL_37:

    if ((objc_msgSend(v41, "completed") & 1) == 0)
      objc_msgSend(v41, "markAsCompletedWithSuccess:error:", 1, 0);

    v30 = v33;
    v23 = v31;
  }
  if (v23)
  {
    v31 = (v23 - 1) & v23;
    v32 = __clz(__rbit64(v23)) | (v30 << 6);
    v33 = v30;
    goto LABEL_36;
  }
  v42 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    return;
  }
  if (v42 >= v56)
    goto LABEL_39;
  v43 = *(_QWORD *)(v57 + 8 * v42);
  v33 = v30 + 1;
  if (v43)
    goto LABEL_35;
  v33 = v30 + 2;
  if (v30 + 2 >= v56)
    goto LABEL_39;
  v43 = *(_QWORD *)(v57 + 8 * v33);
  if (v43)
    goto LABEL_35;
  v33 = v30 + 3;
  if (v30 + 3 >= v56)
    goto LABEL_39;
  v43 = *(_QWORD *)(v57 + 8 * v33);
  if (v43)
    goto LABEL_35;
  v33 = v30 + 4;
  if (v30 + 4 >= v56)
    goto LABEL_39;
  v43 = *(_QWORD *)(v57 + 8 * v33);
  if (v43)
  {
LABEL_35:
    v31 = (v43 - 1) & v43;
    v32 = __clz(__rbit64(v43)) + (v33 << 6);
LABEL_36:
    v45 = 8 * v32;
    v46 = *(void **)(*(_QWORD *)(v24 + 56) + v45);
    v39 = *(id *)(*(_QWORD *)(v24 + 48) + v45);
    v41 = v46;
    if (!v39)
      goto LABEL_39;
    goto LABEL_37;
  }
  v44 = v30 + 5;
  while (v56 != v44)
  {
    v43 = *(_QWORD *)(v57 + 8 * v44++);
    if (v43)
    {
      v33 = v44 - 1;
      goto LABEL_35;
    }
  }
LABEL_39:
  sub_100035E28(v24);
  if (v55)
  {
    v47 = v52;
    if (v52 < 0)
      v48 = v52;
    else
      v48 = v52 & 0xFFFFFFFFFFFFFF8;
    v49 = __CocoaDictionary.count.getter(v48);
  }
  else
  {
    v47 = v52;
    v49 = *(_QWORD *)(v52 + 16);
  }
  if (v49 < 1)
  {
    swift_bridgeObjectRelease(v47);
  }
  else
  {
    v50 = sub_1000D894C(v47);
    swift_bridgeObjectRelease(v47);
    sub_1001FF058((uint64_t)v50);
    swift_release();
  }
}

id sub_1001FFB3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  void *v14;
  id v15;
  __int128 v17;
  uint64_t (*v18)(uint64_t, void *);
  void *v19;
  void (*v20)(void (*)(uint64_t), uint64_t);
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  sub_10000C1FC(a1 + 8, (uint64_t)&v17, (uint64_t *)&unk_10149B590);
  sub_10000BE48(&v17, (uint64_t)&v22);
  v6 = *((_QWORD *)&v23 + 1);
  v7 = v24;
  sub_10000BE88(&v22, *((uint64_t *)&v23 + 1));
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
  if (!v8)
  {
    sub_10000BEAC(&v22);
    return 0;
  }
  v9 = v8;
  sub_10000BEAC(&v22);
  v10 = objc_msgSend((id)objc_opt_self(ShareItem), "shareItemForObject:", v9);
  swift_unknownObjectRelease(v10);
  if (!v10)
  {
    swift_unknownObjectRelease(v9);
    return 0;
  }
  v11 = swift_allocObject(&unk_1011ABE70, 24, 7);
  swift_unknownObjectWeakInit(v11 + 16);
  sub_100084BD4(a1, (uint64_t)&v22);
  v12 = swift_allocObject(&unk_1011ABE98, 88, 7);
  v13 = v23;
  *(_OWORD *)(v12 + 40) = v22;
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  *(_QWORD *)(v12 + 32) = v11;
  *(_OWORD *)(v12 + 56) = v13;
  *(_OWORD *)(v12 + 72) = v24;
  v20 = sub_100202850;
  v21 = v12;
  *(_QWORD *)&v17 = _NSConcreteStackBlock;
  *((_QWORD *)&v17 + 1) = 1107296256;
  v18 = sub_1001FABC8;
  v19 = &unk_1011ABEB0;
  v14 = _Block_copy(&v17);
  sub_10000C128(a2, a3);
  swift_release();
  v15 = sub_100A3D0BC(v14);
  swift_unknownObjectRelease(v9);
  _Block_release(v14);
  return v15;
}

void sub_1001FFD08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  __int128 aBlock;
  uint64_t (*v16)(uint64_t);
  void *v17;
  Swift::Void (__swiftcall *v18)(DataSource *__struct_ptr, Swift::OpaquePointer);
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  sub_10000C1FC((uint64_t)(a1 + 1), (uint64_t)&aBlock, (uint64_t *)&unk_10149B590);
  sub_10000BE48(&aBlock, (uint64_t)v20);
  v4 = v21;
  v5 = v22;
  sub_10000BE88(v20, v21);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(v4, v5);
  if (v6)
  {
    v7 = v6;
    sub_10000BEAC(v20);
    v8 = objc_msgSend((id)objc_opt_self(ShareItem), "shareItemForObject:", v7);
    if (v8)
    {
      v9 = v8;
      v10 = (id)sub_1001FFEF0(a1);
      sub_1000AB280(v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v20);
      v11 = (void *)swift_unknownObjectWeakLoadStrong(&v23);
      sub_1000AB2BC((uint64_t)v20);
      if (v11
        && (v12 = objc_msgSend(v11, "homeShareDelegate"),
            swift_unknownObjectRelease(v11),
            v12))
      {
        v18 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
        v19 = 0;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v16 = sub_1001BB8D4;
        v17 = &unk_1011ABE38;
        v13 = _Block_copy(&aBlock);
        swift_unknownObjectRetain(v9);
        v10 = v10;
        objc_msgSend(v12, "shareItem:sourceView:completion:", v9, v10, v13);
        swift_unknownObjectRelease(v12);

        swift_unknownObjectRelease(v9);
        swift_unknownObjectRelease(v7);
        _Block_release(v13);
        v14 = (uint64_t)v9;
      }
      else
      {
        swift_unknownObjectRelease(v9);
        v14 = v7;
      }
      swift_unknownObjectRelease(v14);

    }
    else
    {
      swift_unknownObjectRelease(v7);
    }
  }
  else
  {
    sub_10000BEAC(v20);
  }
}

uint64_t sub_1001FFEF0(uint64_t *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void **v10;
  uint64_t v11;
  uint64_t ObjectType;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  Class isa;
  id v19;
  uint64_t result;
  _QWORD v22[3];
  uint64_t v23;

  v3 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v3);
  v5 = (char *)&v22[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void **)&v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000AB280((uint64_t)&v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], v22);
  v11 = swift_unknownObjectWeakLoadStrong(&v23);
  sub_1000AB2BC((uint64_t)v22);
  if (!v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_9;
  }
  ObjectType = swift_getObjectType(v1);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v13 = v1;
  else
    v13 = 0;
  if (v13)
  {
    v14 = *a1;
    v15 = v1;
    v16 = sub_1001385F0();
    v22[0] = v14;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v22);
    swift_unknownObjectRelease(v11);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      v17 = *v10;
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v19 = objc_msgSend(v17, "cellForItemAtIndexPath:", isa);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (uint64_t)v19;
    }
LABEL_9:
    sub_100010CC4((uint64_t)v5, &qword_101499510);
    return 0;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
  __break(1u);
  return result;
}

uint64_t sub_10020012C()
{
  return 0x7FFFFFFFFFFFFFFFLL;
}

_QWORD *sub_100200134()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[4];
  _BYTE v12[64];
  __int128 v13;
  _BYTE v14[64];

  v13 = xmmword_100E22F40;
  sub_1001FDDB0((uint64_t)v14);
  sub_10000C1FC((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_10149FDC0);
  sub_100202788((uint64_t)v12, (uint64_t)v11);
  if (*(_QWORD *)&v11[0])
  {
    v7 = v11[0];
    v8 = v11[1];
    v9 = v11[2];
    v10 = v11[3];
    v0 = _swiftEmptyArrayStorage;
    if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
      v0 = sub_1000A889C(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
    v2 = v0[2];
    v1 = v0[3];
    if (v2 >= v1 >> 1)
      v0 = sub_1000A889C((_QWORD *)(v1 > 1), v2 + 1, 1, v0);
    v0[2] = v2 + 1;
    v3 = &v0[8 * v2];
    v3[4] = v9;
    v3[5] = v10;
    v3[2] = v7;
    v3[3] = v8;
  }
  else
  {
    sub_100010CC4((uint64_t)v11, (uint64_t *)&unk_10149FDC0);
    v0 = _swiftEmptyArrayStorage;
  }
  v4 = v13;
  v5 = sub_100008B04((uint64_t *)&unk_10149FDC0);
  swift_arrayDestroy(v14, v4, v5);
  return v0;
}

uint64_t sub_100200274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t Strong;
  uint64_t ObjectType;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t result;
  _OWORD v25[5];

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  if (v6 == a2 && v7 == a3)
  {
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v6, v7, 0);
    swift_bridgeObjectRelease(v9);
    if ((v10 & 1) == 0)
      return 0;
  }
  sub_1000AB280((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v25);
  Strong = swift_unknownObjectWeakLoadStrong((char *)&v25[1] + 8);
  sub_1000AB2BC((uint64_t)v25);
  if (!Strong)
    return 0;
  ObjectType = swift_getObjectType();
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v13 = v3;
  else
    v13 = 0;
  if (v13)
  {
    v14 = v3;
    v15 = sub_1001FDD20();
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
    v18 = v17;
    v19 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v19)
    {
      v20 = v16;
      v21 = *(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000AE4F8(*(_QWORD *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot), v21);
      sub_1000AE4F8(v19, v21);
      v22 = v15;
      swift_bridgeObjectRetain(v18);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v19);
      sub_10012F24C(v22, v20, v18, 0, v21, v25);
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease_n(v18, 2);

    }
    else
    {
      memset(v25, 0, 64);

      swift_bridgeObjectRelease(v18);
    }

    if (*(_QWORD *)&v25[0])
    {
      sub_100010CC4((uint64_t)v25, (uint64_t *)&unk_10149FDC0);
      v23 = sub_1001FDD20();
      swift_unknownObjectRelease(Strong);
      return (uint64_t)v23;
    }
    swift_unknownObjectRelease(Strong);
    sub_100010CC4((uint64_t)v25, (uint64_t *)&unk_10149FDC0);
    return 0;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002004C8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;

  v2 = OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive) != (result & 1))
  {
    v3 = v1;
    ObjectType = swift_getObjectType(v1);
    v5 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing);
    if (v5)
      v6 = v5;
    else
      v6 = 0;
    if (!v5)
      v1 = 0;
    if (!v1)
      goto LABEL_59;
    v7 = swift_getObjectType(v1);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v9 = (id)v3;
    v10 = v8(v7, v6);

    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v14 = v10;
      else
        v14 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease(v10);
      if (!v11)
        goto LABEL_21;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v11)
        goto LABEL_21;
    }
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_47;
    }
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
      }
      else
      {
        v13 = *(void **)(v10 + 8 * i + 32);
        swift_unknownObjectRetain(v13);
      }
      objc_msgSend(v13, "setActive:", *(unsigned __int8 *)(v3 + v2));
      swift_unknownObjectRelease(v13);
    }
LABEL_21:
    swift_bridgeObjectRelease(v10);
    v15 = *(unsigned __int8 *)(v3 + v2);
    v16 = swift_getObjectType(v9);
    v17 = swift_conformsToProtocol2(v16, &protocol descriptor for HomeListSectionControllerSubclassing);
    if (v17)
      v18 = v17;
    else
      v18 = 0;
    if (v17)
      v19 = v3;
    else
      v19 = 0;
    if (v15 == 1)
    {
      if (v19)
      {
        v20 = swift_getObjectType(v19);
        v21 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
        v9 = v9;
        v3 = v21(v20, v18);

        if (!((unint64_t)v3 >> 62))
        {
          v22 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v22)
          {
LABEL_31:
            if (v22 >= 1)
            {
              v23 = 0;
              do
              {
                if ((v3 & 0xC000000000000001) != 0)
                {
                  v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v3);
                }
                else
                {
                  v24 = *(void **)(v3 + 8 * v23 + 32);
                  swift_unknownObjectRetain(v24);
                }
                ++v23;
                v25 = objc_msgSend(v24, "observers");
                objc_msgSend(v25, "registerObserver:", v9);
                swift_unknownObjectRelease(v24);

              }
              while (v22 != v23);
              return swift_bridgeObjectRelease(v3);
            }
            __break(1u);
            goto LABEL_58;
          }
          return swift_bridgeObjectRelease(v3);
        }
LABEL_47:
        if (v3 < 0)
          v33 = v3;
        else
          v33 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v3);
        v22 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease(v3);
        if (v22)
          goto LABEL_31;
        return swift_bridgeObjectRelease(v3);
      }
    }
    else if (v19)
    {
      v26 = swift_getObjectType(v19);
      v27 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
      v28 = v9;
      v3 = v27(v26, v18);

      if ((unint64_t)v3 >> 62)
      {
        if (v3 < 0)
          v34 = v3;
        else
          v34 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v3);
        v29 = _CocoaArrayWrapper.endIndex.getter(v34);
        swift_bridgeObjectRelease(v3);
        if (!v29)
          return swift_bridgeObjectRelease(v3);
      }
      else
      {
        v29 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v29)
          return swift_bridgeObjectRelease(v3);
      }
      if (v29 >= 1)
      {
        v30 = 0;
        do
        {
          if ((v3 & 0xC000000000000001) != 0)
          {
            v31 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v3);
          }
          else
          {
            v31 = *(void **)(v3 + 8 * v30 + 32);
            swift_unknownObjectRetain(v31);
          }
          ++v30;
          v32 = objc_msgSend(v31, "observers");
          objc_msgSend(v32, "unregisterObserver:", v28);
          swift_unknownObjectRelease(v31);

        }
        while (v29 != v30);
        return swift_bridgeObjectRelease(v3);
      }
LABEL_58:
      __break(1u);
    }
LABEL_59:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
    __break(1u);
  }
  return result;
}

void sub_1002008AC(void (*a1)(uint64_t), uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _BYTE v11[24];

  v8 = a5 + 16;
  if (a3)
    a3();
  a1(1);
  swift_beginAccess(v8, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_1001FFD08(a6);

  }
}

id sub_100200960()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListSectionController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomeListSectionController()
{
  return objc_opt_self(_TtC4Maps25HomeListSectionController);
}

uint64_t sub_100200A20(void *a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t result;
  uint64_t v5;
  uint64_t Strong;
  uint64_t ObjectType;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[3];
  _BYTE v18[48];

  v2 = v1;
  result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB8))();
  if ((result & 1) != 0)
  {
    result = (uint64_t)objc_msgSend(a1, "active");
    if ((_DWORD)result)
    {
      v5 = (uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
      sub_1000AB280((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v17);
      Strong = swift_unknownObjectWeakLoadStrong(v18);
      sub_1000AB2BC((uint64_t)v17);
      if (Strong)
      {
        ObjectType = swift_getObjectType();
        if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
          v8 = v2;
        else
          v8 = 0;
        if (!v8)
          goto LABEL_19;
        v9 = v2;
        sub_10013DA20((uint64_t)a1);

        swift_unknownObjectRelease(Strong);
      }
      sub_1000AB280(v5, v17);
      v10 = swift_unknownObjectWeakLoadStrong(v18);
      result = sub_1000AB2BC((uint64_t)v17);
      if (!v10)
        return result;
      v11 = swift_getObjectType();
      v12 = swift_conformsToProtocol2(v11, &protocol descriptor for HomeListSectionControllerSubclassing);
      if (v12)
        v13 = v12;
      else
        v13 = 0;
      if (v12)
        v14 = v2;
      else
        v14 = 0;
      if (v14)
      {
        v15 = swift_getObjectType();
        v16 = v2;
        sub_10014165C(v14, 1, v10, v15, v13);

        return swift_unknownObjectRelease(v10);
      }
LABEL_19:
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100200DB0(void *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  Class isa;
  uint64_t result;
  int v21;
  __int128 v22[2];
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[3];

  v5 = (uint64_t)v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
  sub_1000AB280((uint64_t)v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, &v26);
  v6 = swift_unknownObjectWeakLoadStrong(&v28);
  sub_1000AB2BC((uint64_t)&v26);
  if (v6)
  {
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
      v8 = v2;
    else
      v8 = 0;
    if (!v8)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
      __break(1u);
      goto LABEL_19;
    }
    v9 = v2;
    sub_100139A44(a2, v30);
    swift_unknownObjectRelease(v6);

  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  sub_10000C1FC((uint64_t)v30, (uint64_t)&v26, &qword_10149B500);
  if (!v26)
  {
    sub_100010CC4((uint64_t)&v26, &qword_10149B500);
    goto LABEL_17;
  }
  sub_10000C1FC((uint64_t)&v27, (uint64_t)v22, (uint64_t *)&unk_10149B590);
  sub_10000BE48(v22, (uint64_t)v23);
  sub_100084C10(&v26);
  v10 = v24;
  v11 = v25;
  sub_10000BE88(v23, v24);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  sub_10000BEAC(v23);
  if (!v12)
  {
LABEL_17:
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a1, "deselectItemAtIndexPath:animated:", isa, 1);

    return sub_100010CC4((uint64_t)v30, &qword_10149B500);
  }
  sub_1000AB280(v5, &v26);
  v13 = (void *)swift_unknownObjectWeakLoadStrong(&v29);
  sub_1000AB2BC((uint64_t)&v26);
  if (v13)
  {
    objc_msgSend(v13, "homeItemTapped:", v12);
    swift_unknownObjectRelease(v13);
  }
  swift_unknownObjectRetain(v12);
  v14 = objc_opt_self(CuratedCollectionHandler);
  v15 = swift_dynamicCastObjCClass(v12, v14);
  if (!v15)
  {
LABEL_15:
    swift_unknownObjectRelease_n(v12, 2);
    goto LABEL_17;
  }
  v16 = v15;
  v17 = objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", 2007, 8, 0);
  v18 = IndexPath.row.getter(v17);
  if ((v18 & 0x8000000000000000) == 0)
  {
    objc_msgSend((id)objc_opt_self(HomeAnalyticsManager), "captureCuratedCollectionAction:withCollectionHandler:verticalIndex:", 2099, v16, v18);
    goto LABEL_15;
  }
LABEL_19:
  LOBYTE(v21) = 2;
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, v21, 3451, 0);
  __break(1u);
  return result;
}

void destroy for HomeListSectionController.Configuration(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_unknownObjectWeakDestroy(a1 + 24);
  swift_unknownObjectWeakDestroy(a1 + 40);

}

_QWORD *initializeWithCopy for HomeListSectionController.Configuration(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(_QWORD *)(a2 + 16);
  a1[2] = v6;
  v7 = a1 + 3;
  v8 = a2 + 24;
  v9 = v4;
  swift_bridgeObjectRetain(v6);
  swift_unknownObjectWeakCopyInit(v7, v8);
  a1[4] = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakCopyInit(a1 + 5, a2 + 40);
  v10 = *(void **)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  a1[6] = v10;
  a1[7] = v11;
  v12 = *(void **)(a2 + 64);
  a1[8] = v12;
  v13 = v10;
  v14 = v11;
  v15 = v12;
  return a1;
}

uint64_t assignWithCopy for HomeListSectionController.Configuration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  swift_unknownObjectWeakCopyAssign(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakCopyAssign(a1 + 40, a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 56);
  v13 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  v14 = v12;

  v15 = *(void **)(a1 + 64);
  v16 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v16;
  v17 = v16;

  return a1;
}

uint64_t initializeWithTake for HomeListSectionController.Configuration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakTakeInit(a1 + 40, a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for HomeListSectionController.Configuration(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  swift_unknownObjectWeakTakeAssign(a1 + 24, a2 + 3);
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_unknownObjectWeakTakeAssign(a1 + 40, a2 + 5);
  v7 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = a2[6];

  v8 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = a2[7];

  v9 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = a2[8];

  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListSectionController.Configuration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListSectionController.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListSectionController.Configuration()
{
  return &type metadata for HomeListSectionController.Configuration;
}

Swift::Int sub_100201498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (a2)
  {
    sub_100008B04(&qword_101491BF0);
    v4 = static _DictionaryStorage.convert(_:capacity:)(a1, a2);
    v29 = v4;
    __CocoaDictionary.makeIterator()(a1);
    v5 = __CocoaDictionary.Iterator.next()();
    if (v5)
    {
      v7 = v5;
      v8 = v6;
      v9 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
      do
      {
        v27 = v7;
        swift_dynamicCast(&v28, &v27, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
        v26 = v8;
        v20 = sub_10000E4BC(0, (unint64_t *)&unk_10149A2C0, off_101196C58);
        swift_dynamicCast(&v27, &v26, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v4 = v29;
        v21 = *(_QWORD *)(v29 + 16);
        if (*(_QWORD *)(v29 + 24) <= v21)
        {
          sub_1000DA138(v21 + 1, 1);
          v4 = v29;
        }
        v11 = v27;
        v10 = v28;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v13 = v4 + 64;
        v14 = -1 << *(_BYTE *)(v4 + 32);
        v15 = result & ~v14;
        v16 = v15 >> 6;
        if (((-1 << v15) & ~*(_QWORD *)(v4 + 64 + 8 * (v15 >> 6))) != 0)
        {
          v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v4 + 64 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v22 = 0;
          v23 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v23 && (v22 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v24 = v16 == v23;
            if (v16 == v23)
              v16 = 0;
            v22 |= v24;
            v25 = *(_QWORD *)(v13 + 8 * v16);
          }
          while (v25 == -1);
          v17 = __clz(__rbit64(~v25)) + (v16 << 6);
        }
        *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        v18 = 8 * v17;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18) = v10;
        *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v11;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaDictionary.Iterator.next()();
        v8 = v19;
      }
      while (v7);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v4;
}

Swift::Int sub_1002016E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  Swift::Int v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Swift::Int v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;

  if (!a3)
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100008B04(&qword_101491BF0);
  result = static _DictionaryStorage.allocate(capacity:)(v5);
  v8 = result;
  v32 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v32)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v32)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v32)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v32)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v32)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = 8 * v13;
    v18 = *(void **)(*(_QWORD *)(v4 + 56) + v17);
    v19 = *(_QWORD *)(v8 + 40);
    v20 = *(id *)(*(_QWORD *)(v4 + 48) + v17);
    v21 = v18;
    result = NSObject._rawHashValue(seed:)(v19);
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = 8 * v25;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v30) = v20;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v30) = v21;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10020197C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v59 = type metadata accessor for Location(0);
  v53 = *(_QWORD *)(v59 - 8);
  v8 = __chkstk_darwin(v59);
  v58 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v52 = (char *)&v46 - v10;
  v11 = type metadata accessor for Handle(0);
  v51 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v57 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v50 = (char *)&v46 - v14;
  if (!a3)
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  if (a4[2] == a3)
  {
    swift_retain(a4);
    return (uint64_t)a4;
  }
  sub_100008B04(&qword_1014A09C0);
  result = static _DictionaryStorage.allocate(capacity:)(a3);
  v16 = result;
  v46 = a1;
  v47 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v48 = a4;
  v49 = result;
  v20 = v52;
  while (1)
  {
    v56 = a3;
    if (v17)
    {
      v54 = (v17 - 1) & v17;
      v55 = v18;
      v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v47)
        return v16;
      v23 = v46[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v47)
          return v16;
        v23 = v46[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v47)
            return v16;
          v23 = v46[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v47)
              return v16;
            v23 = v46[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v47)
                  return v16;
                v23 = v46[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v54 = (v23 - 1) & v23;
      v55 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v50;
    v27 = v51;
    v28 = *(_QWORD *)(v51 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v50, a4[6] + v28 * v21, v11);
    v29 = a4[7];
    v30 = v53;
    v31 = *(_QWORD *)(v53 + 72);
    v32 = v29 + v31 * v21;
    v33 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v20, v32, v59);
    v34 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v34(v57, v26, v11);
    v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v35(v58, v20, v33);
    v16 = v49;
    v36 = *(_QWORD *)(v49 + 40);
    v37 = sub_10020292C();
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v36, v11, v37);
    v38 = -1 << *(_BYTE *)(v16 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v41 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v43 && (v42 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v44 = v40 == v43;
        if (v40 == v43)
          v40 = 0;
        v42 |= v44;
        v45 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v45 == -1);
      v41 = __clz(__rbit64(~v45)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v41;
    v34((char *)(*(_QWORD *)(v16 + 48) + v41 * v28), v57, v11);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(*(_QWORD *)(v16 + 56) + v41 * v31, v58, v59);
    ++*(_QWORD *)(v16 + 16);
    a3 = v56 - 1;
    if (__OFSUB__(v56, 1))
      break;
    a4 = v48;
    v17 = v54;
    v18 = v55;
    if (v56 == 1)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_100201D50(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[3];
  _BYTE v28[24];
  _QWORD *v29;

  v3 = _swiftEmptyArrayStorage;
  v29 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions);
  swift_beginAccess(a2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions, v28, 0, 0);
  if (v4)
  {
    for (i = a1 + 32; ; i += 48)
    {
      sub_100084BD4(i, (uint64_t)v27);
      v7 = *v5;
      if ((*v5 & 0xC000000000000001) != 0)
      {
        if (v7 < 0)
          v8 = *v5;
        else
          v8 = v7 & 0xFFFFFFFFFFFFFF8;
        v9 = *(id *)&v27[0];
        swift_bridgeObjectRetain(v7);
        v10 = __CocoaDictionary.lookup(_:)(v9, v8);
        if (!v10)
          goto LABEL_16;
        v11 = v10;
        v23 = v10;
        v12 = sub_10000E4BC(0, (unint64_t *)&unk_10149A2C0, off_101196C58);
        swift_unknownObjectRetain(v11);
        swift_dynamicCast(&v24, &v23, (char *)&type metadata for Swift.AnyObject + 8, v12, 7);
        v13 = (id)v24;
        swift_unknownObjectRelease(v11);
      }
      else
      {
        if (!*(_QWORD *)(v7 + 16))
          goto LABEL_17;
        v9 = *(id *)&v27[0];
        swift_bridgeObjectRetain(v7);
        v14 = sub_1000C1A60((uint64_t)v9);
        if ((v15 & 1) == 0)
        {
LABEL_16:

          swift_bridgeObjectRelease(v7);
LABEL_17:
          v24 = v27[0];
          v25 = v27[1];
          v26 = v27[2];
          v16 = v29;
          if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
          {
            sub_100132548(0, v16[2] + 1, 1);
            v16 = v29;
          }
          v18 = v16[2];
          v17 = v16[3];
          if (v18 >= v17 >> 1)
          {
            sub_100132548(v17 > 1, v18 + 1, 1);
            v16 = v29;
          }
          v16[2] = v18 + 1;
          v19 = &v16[6 * v18];
          v20 = v24;
          v21 = v26;
          v19[3] = v25;
          v19[4] = v21;
          v19[2] = v20;
          goto LABEL_4;
        }
        v13 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v14);
      }

      swift_bridgeObjectRelease(v7);
      if (!v13)
        goto LABEL_17;

      sub_100084C10((id *)v27);
LABEL_4:
      if (!--v4)
        return v29;
    }
  }
  return v3;
}

void sub_100201F8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id, id))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;

  v21 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v23 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v23)
      goto LABEL_24;
    v16 = *(_QWORD *)(v22 + 8 * v15);
    ++v6;
    if (!v16)
    {
      v6 = v15 + 1;
      if (v15 + 1 >= v23)
        goto LABEL_24;
      v16 = *(_QWORD *)(v22 + 8 * v6);
      if (!v16)
      {
        v6 = v15 + 2;
        if (v15 + 2 >= v23)
          goto LABEL_24;
        v16 = *(_QWORD *)(v22 + 8 * v6);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v9 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_5:
    v12 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v11);
    v13 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    v14 = v12;
    LOBYTE(v12) = a4(v13, v14);

    if ((v12 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1002016E8(a1, a2, v21, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v23)
    goto LABEL_24;
  v16 = *(_QWORD *)(v22 + 8 * v17);
  if (v16)
  {
    v6 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v23)
      goto LABEL_24;
    v16 = *(_QWORD *)(v22 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_10020217C(uint64_t isStackAllocationSafe, uint64_t (*a2)(id, id), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = isStackAllocationSafe;
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = v7 & 0x3F;
  v9 = (1 << v7) + 63;
  v10 = v9 >> 6;
  v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    sub_100201F8C((unint64_t *)((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, v6, a2);
    if (v3)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v11, -1);
    bzero(v13, v11);
    sub_100201F8C((unint64_t *)v13, v10, v6, a2);
    a3 = v14;
    swift_slowDealloc(v13, -1, -1);
  }
  return a3;
}

Swift::Int sub_1002022EC(uint64_t a1, uint64_t (*a2)(id, id), uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  _QWORD *v20;
  unint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  Swift::Int result;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  _QWORD *v39;

  v4 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = _swiftEmptyDictionarySingleton;
    v39 = _swiftEmptyDictionarySingleton;
    if (a1 >= 0)
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    v6 = __CocoaDictionary.makeIterator()(a1);
    v7 = __CocoaDictionary.Iterator.next()();
    if (v7)
    {
      v9 = v7;
      v10 = v8;
      v11 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
      do
      {
        v36 = v9;
        swift_dynamicCast(&v37, &v36, (char *)&type metadata for Swift.AnyObject + 8, v11, 7);
        v36 = v10;
        v15 = sub_10000E4BC(0, (unint64_t *)&unk_10149A2C0, off_101196C58);
        swift_dynamicCast(&v38, &v36, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        v16 = v38;
        v17 = v37;
        v18 = v16;
        v19 = a2(v17, v18);

        if ((v19 & 1) != 0)
        {
          v20 = v39;
          v21 = v39[2];
          if (v39[3] <= v21)
          {
            v24 = v21 + 1;
            v25 = v17;
            v26 = v18;
            sub_1000DA138(v24, 1);
            v20 = v39;
          }
          else
          {
            v22 = v17;
            v23 = v18;
          }
          result = NSObject._rawHashValue(seed:)(v20[5]);
          v28 = v20 + 8;
          v29 = -1 << *((_BYTE *)v20 + 32);
          v30 = result & ~v29;
          v31 = v30 >> 6;
          if (((-1 << v30) & ~v20[(v30 >> 6) + 8]) != 0)
          {
            v12 = __clz(__rbit64((-1 << v30) & ~v20[(v30 >> 6) + 8])) | v30 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v32 = 0;
            v33 = (unint64_t)(63 - v29) >> 6;
            do
            {
              if (++v31 == v33 && (v32 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v34 = v31 == v33;
              if (v31 == v33)
                v31 = 0;
              v32 |= v34;
              v35 = v28[v31];
            }
            while (v35 == -1);
            v12 = __clz(__rbit64(~v35)) + (v31 << 6);
          }
          *(_QWORD *)((char *)v28 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
          v13 = 8 * v12;
          *(_QWORD *)(v20[6] + v13) = v17;
          *(_QWORD *)(v20[7] + v13) = v18;
          ++v20[2];
        }

        v9 = __CocoaDictionary.Iterator.next()();
        v10 = v14;
      }
      while (v9);
      v5 = v39;
    }
    v37 = 0;
    v38 = 0;
    sub_100035E28(v6 | 0x8000000000000000);
  }
  else
  {
    v5 = (_QWORD *)sub_10020217C(a1, a2, a3);
    swift_bridgeObjectRelease(v4);
  }
  return (Swift::Int)v5;
}

uint64_t sub_1002025C4(uint64_t a1)
{
  void *v1;
  uint64_t Strong;
  uint64_t ObjectType;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  __int128 v11[2];
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  _OWORD v17[5];

  sub_1000AB280((uint64_t)v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v17);
  Strong = swift_unknownObjectWeakLoadStrong((char *)&v17[1] + 8);
  sub_1000AB2BC((uint64_t)v17);
  if (Strong)
  {
    ObjectType = swift_getObjectType();
    if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
      v5 = v1;
    else
      v5 = 0;
    if (!v5)
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
      __break(1u);
      return result;
    }
    v6 = v1;
    sub_100139A44(a1, v17);
    swift_unknownObjectRelease(Strong);

  }
  else
  {
    memset(v17, 0, 48);
  }
  sub_10000C1FC((uint64_t)v17, (uint64_t)&v15, &qword_10149B500);
  if (v15)
  {
    sub_10000C1FC((uint64_t)&v16, (uint64_t)v11, (uint64_t *)&unk_10149B590);
    sub_10000BE48(v11, (uint64_t)v12);
    sub_100084C10(&v15);
    v7 = v13;
    v8 = v14;
    sub_10000BE88(v12, v13);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
    sub_100010CC4((uint64_t)v17, &qword_10149B500);
    sub_10000BEAC(v12);
    if (v9)
    {
      swift_unknownObjectRelease(v9);
      return 1;
    }
  }
  else
  {
    sub_100010CC4((uint64_t)v17, &qword_10149B500);
    sub_100010CC4((uint64_t)&v15, &qword_10149B500);
  }
  return 0;
}

uint64_t sub_100202788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149FDC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1002027D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1002027E0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1002027E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020280C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();

  sub_10000BEAC((_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 88, 7);
}

void sub_100202850(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_1002008AC(a1, a2, *(void (**)(void))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), (uint64_t *)(v2 + 40));
}

uint64_t sub_100202860(void *a1)
{
  uint64_t v1;

  return sub_10012B320(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_100202868()
{
  unint64_t result;

  result = qword_1014A09B8;
  if (!qword_1014A09B8)
  {
    result = swift_getWitnessTable(")q7", &type metadata for HomeListSectionHeaderViewModel);
    atomic_store(result, (unint64_t *)&qword_1014A09B8);
  }
  return result;
}

uint64_t sub_1002028AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectWeakDestroy(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void *sub_1002028E0(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;

  if (result)
  {
    v7 = result;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    return (void *)swift_bridgeObjectRetain(a4);
  }
  return result;
}

unint64_t sub_10020292C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101499250;
  if (!qword_101499250)
  {
    v1 = type metadata accessor for Handle(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for Handle, v1);
    atomic_store(result, &qword_101499250);
  }
  return result;
}

void _s4Maps16LibraryAnalyticsC26captureAddOrEditNoteAction9placeMUID05isNewH0ys6UInt64V_SbtFZ_0(uint64_t a1, char a2)
{
  id v3;
  void *v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;

  v3 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (v3)
  {
    v4 = v3;
    v5 = (a2 & 1) == 0;
    if ((a2 & 1) != 0)
      v6 = 139;
    else
      v6 = 138;
    if (v5)
      v7 = 471;
    else
      v7 = 472;
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v4, "captureUserAction:onTarget:eventValue:", v7, v6, v10);

  }
  else
  {
    __break(1u);
  }
}

void _s4Maps16LibraryAnalyticsC21captureAddOrRemovePin9placeMUID0dE06targetys6UInt64V_SbSo11GEOUITargetVtFZ_0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  NSString v9;
  uint64_t v10;

  if (a1)
  {
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (v7)
  {
    v8 = v7;
    if (v6)
    {
      v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      v9 = 0;
    }
    if ((a2 & 1) != 0)
      v10 = 475;
    else
      v10 = 473;
    objc_msgSend(v8, "captureUserAction:onTarget:eventValue:", v10, a3, v9);

  }
  else
  {
    __break(1u);
  }
}

void _s4Maps16LibraryAnalyticsC022captureAddOrRemoveFromB09placeMUID0dE06targetys6UInt64V_SbSo11GEOUITargetVtFZ_0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  NSString v9;
  uint64_t v10;

  if (a1)
  {
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (v7)
  {
    v8 = v7;
    if (v6)
    {
      v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
    }
    else
    {
      v9 = 0;
    }
    if ((a2 & 1) != 0)
      v10 = 469;
    else
      v10 = 477;
    objc_msgSend(v8, "captureUserAction:onTarget:eventValue:", v10, a3, v9);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for LibraryAnalytics()
{
  return objc_opt_self(_TtC4Maps16LibraryAnalytics);
}

void sub_100202CBC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  id v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t inited;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  Class isa;
  char v80[88];
  uint64_t v81;
  CGRect v82;

  v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints])
  {
    v2 = v0;
    v3 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v3, "bounds");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;

    v82.origin.x = v5;
    v82.origin.y = v7;
    v82.size.width = v9;
    v82.size.height = v11;
    CGRectGetWidth(v82);
    v12 = *(void **)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView];
    if (v12)
    {
      v13 = sub_100008B04((uint64_t *)&unk_101493B10);
      v14 = swift_allocObject(v13, 64, 7);
      *(_OWORD *)(v14 + 16) = xmmword_100E2A2C0;
      v15 = v12;
      v16 = objc_msgSend(v15, "topAnchor");
      v17 = objc_msgSend(v2, "view");
      if (v17)
      {
        v18 = v17;
        v19 = objc_msgSend(v17, "topAnchor");

        v20 = objc_msgSend(v16, "constraintEqualToAnchor:", v19);
        *(_QWORD *)(v14 + 32) = v20;
        v21 = objc_msgSend(v15, "leadingAnchor");
        v22 = objc_msgSend(v2, "view");
        if (v22)
        {
          v23 = v22;
          v24 = objc_msgSend(v22, "leadingAnchor");

          v25 = objc_msgSend(v21, "constraintEqualToAnchor:", v24);
          *(_QWORD *)(v14 + 40) = v25;
          v26 = objc_msgSend(v15, "trailingAnchor");
          v27 = objc_msgSend(v2, "view");
          if (v27)
          {
            v28 = v27;
            v29 = objc_msgSend(v27, "trailingAnchor");

            v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);
            *(_QWORD *)(v14 + 48) = v30;
            v31 = objc_msgSend(v15, "bottomAnchor");
            v32 = objc_msgSend(v2, "view");
            if (v32)
            {
              v33 = v32;
              v34 = objc_msgSend(v32, "bottomAnchor");

              v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);
              *(_QWORD *)(v14 + 56) = v35;
              v81 = v14;
              specialized Array._endMutation()(v36);
              inited = swift_initStackObject(v13, v80);
              *(_OWORD *)(inited + 16) = xmmword_100E31750;
              v38 = objc_msgSend(v15, "heightAnchor");
              v39 = objc_msgSend(v38, "constraintEqualToConstant:", 44.0);

              *(_QWORD *)(inited + 32) = v39;
              v40 = sub_100203570();
              v41 = objc_msgSend(v40, "leadingAnchor");

              v42 = objc_msgSend(v15, "contentView");
              if (v42)
              {
                v43 = v42;
                v44 = objc_msgSend(v42, "leadingAnchor");

                v45 = objc_msgSend(v41, "constraintEqualToAnchor:", v44);
                *(_QWORD *)(inited + 40) = v45;
                v46 = sub_100203570();
                v47 = objc_msgSend(v46, "trailingAnchor");

                v48 = objc_msgSend(v15, "contentView");
                if (v48)
                {
                  v49 = v48;
                  v50 = objc_msgSend(v48, "trailingAnchor");

                  v51 = objc_msgSend(v47, "constraintEqualToAnchor:", v50);
                  *(_QWORD *)(inited + 48) = v51;
                  v52 = sub_100203570();
                  v53 = objc_msgSend(v52, "topAnchor");

                  v54 = objc_msgSend(v15, "contentView");
                  if (v54)
                  {
                    v55 = v54;
                    v56 = objc_msgSend(v54, "topAnchor");

                    v57 = objc_msgSend(v53, "constraintEqualToAnchor:", v56);
                    *(_QWORD *)(inited + 56) = v57;
                    v58 = sub_100203570();
                    v59 = objc_msgSend(v58, "bottomAnchor");

                    v60 = objc_msgSend(v15, "contentView");
                    if (v60)
                    {
                      v61 = v60;
                      v62 = objc_msgSend(v60, "bottomAnchor");

                      v63 = objc_msgSend(v59, "constraintEqualToAnchor:", v62);
                      *(_QWORD *)(inited + 64) = v63;
                      v64 = sub_100203570();
                      v65 = objc_msgSend(v64, "bottomAnchor");

                      v66 = objc_msgSend(v15, "contentView");
                      if (v66)
                      {
                        v67 = v66;
                        v68 = objc_msgSend(v66, "bottomAnchor");

                        v69 = objc_msgSend(v65, "constraintEqualToAnchor:", v68);
                        *(_QWORD *)(inited + 72) = v69;
                        v70 = sub_1002034A8();
                        v71 = objc_msgSend(v70, "centerYAnchor");

                        v72 = sub_1002036B4();
                        v73 = objc_msgSend(v72, "centerYAnchor");

                        v74 = objc_msgSend(v71, "constraintEqualToAnchor:", v73);
                        *(_QWORD *)(inited + 80) = v74;
                        specialized Array._endMutation()(v75);
                        sub_10011FE24(inited);
                        v76 = v81;
                        v77 = *(_QWORD *)&v2[v1];
                        *(_QWORD *)&v2[v1] = v81;
                        swift_bridgeObjectRetain(v76);
                        swift_bridgeObjectRelease(v77);
                        v78 = (void *)objc_opt_self(NSLayoutConstraint);
                        sub_1000174D4();
                        isa = Array._bridgeToObjectiveC()().super.isa;
                        swift_bridgeObjectRelease(v76);
                        objc_msgSend(v78, "activateConstraints:", isa);

                        return;
                      }
LABEL_22:
                      __break(1u);
                      return;
                    }
LABEL_21:
                    __break(1u);
                    goto LABEL_22;
                  }
LABEL_20:
                  __break(1u);
                  goto LABEL_21;
                }
LABEL_19:
                __break(1u);
                goto LABEL_20;
              }
LABEL_18:
              __break(1u);
              goto LABEL_19;
            }
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_16;
    }
  }
}

void sub_1002033C8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  Class isa;
  uint64_t v10;

  v5 = v2 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle + 8) & 1) != 0)
  {
    if ((a2 & 1) != 0)
      goto LABEL_9;
  }
  else if ((a2 & 1) == 0 && *(_QWORD *)v5 == a1)
  {
    goto LABEL_9;
  }
  v6 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints;
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints);
  if (v7)
  {
    v8 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_1000174D4();
    swift_bridgeObjectRetain(v7);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v8, "deactivateConstraints:", isa);

    v10 = *(_QWORD *)(v2 + v6);
    *(_QWORD *)(v2 + v6) = 0;
    swift_bridgeObjectRelease(v10);
  }
  sub_100202CBC();
LABEL_9:
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
}

id sub_1002034A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(MapsThemeButton), "buttonWithType:", 0);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v3 = v4;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setAccessibilityIdentifier:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_100203570()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView);
  }
  else
  {
    v4 = sub_1002035CC();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1002035CC()
{
  id v0;
  NSString v1;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v1);

  objc_msgSend(v0, "setAxis:", 0);
  objc_msgSend(v0, "setSpacing:", 8.0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v0, "setLayoutMargins:", 0.0, 16.0, 0.0, 16.0);
  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  return v0;
}

id sub_1002036B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v3 = v4;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setAccessibilityIdentifier:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

void sub_100203798()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for RedoSearchContainerViewController();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v1 = objc_msgSend(objc_allocWithZone((Class)CardView), "initAllowingBlurredForButton:", 1);
  v2 = OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView];
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView] = v1;

  v4 = *(void **)&v0[v2];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v5, "setLayoutStyle:", 6);
    v6 = objc_msgSend(v0, "view");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "addSubview:", v5);

      v8 = objc_msgSend(v5, "contentView");
      if (v8)
      {
        v9 = v8;
        v10 = sub_100203570();
        objc_msgSend(v9, "addSubview:", v10);

        v11 = sub_100203570();
        v12 = sub_1002036B4();
        objc_msgSend(v11, "addArrangedSubview:", v12);

        v13 = sub_100203570();
        v14 = sub_1002034A8();
        objc_msgSend(v13, "addArrangedSubview:", v14);

        v15 = sub_1002034A8();
        objc_msgSend(v15, "addTarget:action:forControlEvents:", v0, "redoSearchButtonClicked:", 64);

        sub_100203948();
        sub_100202CBC();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_100203948()
{
  uint64_t v0;
  int v1;
  Swift::String v2;
  Swift::String v3;
  void *v4;
  id v5;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  void *object;
  id v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  id v24;
  NSString v25;
  id v26;
  char v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state);
  if (v1 == 2)
  {
    v10 = sub_1002036B4();
    objc_msgSend(v10, "stopAnimating");

    v11 = sub_1002036B4();
    objc_msgSend(v11, "setHidden:", 1);

    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v12._countAndFlagsBits = 0xD00000000000001ELL;
    v13._countAndFlagsBits = 0xD000000000000020;
    v29._countAndFlagsBits = 0xD000000000000038;
    v29._object = (void *)0x8000000100E53BC0;
    v13._object = (void *)0x8000000100E53B70;
    v12._object = (void *)0x8000000100E53BA0;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v12, v29)._object;
    v15 = sub_1002034A8();
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v15, "setTitle:forState:", v16, 0);

    v17 = sub_1002034A8();
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
    goto LABEL_13;
  }
  if (v1 == 1)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v28._countAndFlagsBits = 0xD000000000000027;
    v28._object = (void *)0x8000000100E53C20;
    v2._object = (void *)0x8000000100E53C00;
    v2._countAndFlagsBits = 0xD00000000000001ALL;
    v3._countAndFlagsBits = 0x6820686372616553;
    v3._object = (void *)0xEB00000000657265;
    v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v3, v28)._object;
    v5 = sub_1002034A8();
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    objc_msgSend(v5, "setTitle:forState:", v6, 0);

    v7 = sub_1002034A8();
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "tintColor");
    objc_msgSend(v7, "setTitleColor:forState:", v8, 0);

    v9 = sub_1002036B4();
    objc_msgSend(v9, "stopAnimating");

    v26 = sub_1002036B4();
    objc_msgSend(v26, "setHidden:", 1);
    goto LABEL_14;
  }
  if (!*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state))
  {
    v19 = sub_1002036B4();
    objc_msgSend(v19, "setHidden:", 0);

    v20 = sub_1002036B4();
    objc_msgSend(v20, "startAnimating");

    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v21._countAndFlagsBits = 0xD00000000000001DLL;
    v30._countAndFlagsBits = 0xD000000000000037;
    v30._object = (void *)0x8000000100E53C70;
    v21._object = (void *)0x8000000100E53C50;
    v22._countAndFlagsBits = 0x6E69686372616553;
    v22._object = (void *)0xEE00657265682067;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v22, v30)._object;
    v24 = sub_1002034A8();
    v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    objc_msgSend(v24, "setTitle:forState:", v25, 0);

    v17 = sub_1002034A8();
    v18 = objc_msgSend((id)objc_opt_self(UIColor), "grayColor");
LABEL_13:
    v26 = v18;
    objc_msgSend(v17, "setTitleColor:forState:");

LABEL_14:
    return;
  }
  v27 = *(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state);
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for SearchHereFloatingControlState, &v27, &type metadata for SearchHereFloatingControlState, &type metadata for UInt8);
  __break(1u);
}

void sub_100203DC0(unsigned __int8 a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *oslog;
  char v13;

  v2 = a1;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state) != a1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state) = a1;
    sub_100203948();
    switch(v2)
    {
      case 0:
        if (qword_101490EB0 != -1)
          swift_once(&qword_101490EB0, sub_1001147D8);
        v8 = type metadata accessor for Logger(0);
        v9 = sub_10000E918(v8, (uint64_t)qword_1014D4B20);
        oslog = Logger.logObject.getter(v9);
        v5 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(oslog, v5))
          goto LABEL_18;
        v6 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v6 = 0;
        v7 = "Searching here is being displayed in Search overlay";
        goto LABEL_17;
      case 2:
        if (qword_101490EB0 != -1)
          swift_once(&qword_101490EB0, sub_1001147D8);
        v3 = type metadata accessor for Logger(0);
        v4 = sub_10000E918(v3, (uint64_t)qword_1014D4B20);
        oslog = Logger.logObject.getter(v4);
        v5 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(oslog, v5))
          goto LABEL_18;
        v6 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v6 = 0;
        v7 = "Error or No results found is being displayed in Search Overlay";
LABEL_17:
        _os_log_impl((void *)&_mh_execute_header, oslog, v5, v7, v6, 2u);
        swift_slowDealloc(v6, -1, -1);
LABEL_18:

        return;
      case 1:
        if (qword_101490EB0 != -1)
          swift_once(&qword_101490EB0, sub_1001147D8);
        v10 = type metadata accessor for Logger(0);
        v11 = sub_10000E918(v10, (uint64_t)qword_1014D4B20);
        oslog = Logger.logObject.getter(v11);
        v5 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(oslog, v5))
          goto LABEL_18;
        v6 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v6 = 0;
        v7 = "Search here is being displayed in Search overlay";
        goto LABEL_17;
    }
    v13 = v2;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for SearchHereFloatingControlState, &v13, &type metadata for SearchHereFloatingControlState, &type metadata for UInt8);
    __break(1u);
  }
}

id sub_10020403C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RedoSearchContainerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RedoSearchContainerViewController()
{
  return objc_opt_self(_TtC4Maps33RedoSearchContainerViewController);
}

id sub_100204154(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state] = 1;
  v3 = (uint64_t *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_buttonActionHandler];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_redoSearchButtonSizeHeight] = 0x4046000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints] = 0;
  v4 = &v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator] = 0;
  v5 = *v3;
  v6 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  swift_retain(a2);
  sub_10000BF74(v5, v6);
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for RedoSearchContainerViewController();
  return objc_msgSendSuper2(&v8, "initWithNibName:bundle:", 0, 0);
}

void sub_100204238()
{
  _BYTE *v0;
  _QWORD *v1;
  char *v2;

  v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state] = 1;
  v1 = &v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_buttonActionHandler];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_redoSearchButtonSizeHeight] = 0x4046000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_cardView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_constraints] = 0;
  v2 = &v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_containerStyle];
  *(_QWORD *)v2 = 0;
  v2[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___redoSearchButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___stackView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController____lazy_storage___activityIndicator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E41970, "Maps/RedoSearchContainerViewController.swift", 44, 2, 61, 0);
  __break(1u);
}

void sub_100204314()
{
  uint64_t v0;
  void (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  id v4;
  id v5;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state) = 0;
  sub_100203948();
  v1 = *(void (**)(__n128))(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_buttonActionHandler);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_buttonActionHandler + 8);
    v3 = swift_retain();
    v1(v3);
    sub_10000BF74((uint64_t)v1, v2);
  }
  v4 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "captureUserAction:onTarget:eventValue:", 461, 503, 0);

  }
  else
  {
    __break(1u);
  }
}

char *sub_10020446C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  id v15;
  objc_super v17;

  v9 = OBJC_IVAR____TtC4Maps34RAPPhotoCarouselCollectionViewCell_photoCarouselCell;
  v10 = objc_allocWithZone((Class)UGCPhotoCarouselCell);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for RAPPhotoCarouselCollectionViewCell();
  v12 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v13 = *(void **)&v12[OBJC_IVAR____TtC4Maps34RAPPhotoCarouselCollectionViewCell_photoCarouselCell];
  v14 = v12;
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setSectionInset:", UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right);
  v15 = objc_msgSend(v14, "contentView");
  objc_msgSend(v15, "addSubview:", v13);

  sub_10020459C();
  return v14;
}

void sub_10020459C()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100008B04((uint64_t *)&unk_101493B10);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100E2A2C0;
  v5 = *(void **)&v1[OBJC_IVAR____TtC4Maps34RAPPhotoCarouselCollectionViewCell_photoCarouselCell];
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, 16.0);
  *(_QWORD *)(v4 + 32) = v9;
  v10 = objc_msgSend(v5, "bottomAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "bottomAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, -16.0);
  *(_QWORD *)(v4 + 40) = v13;
  v14 = objc_msgSend(v5, "leadingAnchor");
  v15 = objc_msgSend(v1, "contentView");
  v16 = objc_msgSend(v15, "leadingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, 16.0);
  *(_QWORD *)(v4 + 48) = v17;
  v18 = objc_msgSend(v5, "trailingAnchor");
  v19 = objc_msgSend(v1, "contentView");
  v20 = objc_msgSend(v19, "trailingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v20, -16.0);
  *(_QWORD *)(v4 + 56) = v21;
  specialized Array._endMutation()(v22);
  sub_1000174D4();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

id sub_100204910()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RAPPhotoCarouselCollectionViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RAPPhotoCarouselCollectionViewCell()
{
  return objc_opt_self(_TtC4Maps34RAPPhotoCarouselCollectionViewCell);
}

id sub_100204970()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___openAtLabel;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___openAtLabel);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___openAtLabel);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1002049F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___datePicker;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___datePicker);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell____lazy_storage___datePicker);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIDatePicker), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, "setPreferredDatePickerStyle:", 0);
    objc_msgSend(v4, "setDatePickerMode:", 0);
    objc_msgSend(v4, "setMinuteInterval:", 15);
    objc_msgSend(v4, "setRoundsToMinuteInterval:", 0);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_100204BCC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v10 = v9;
  swift_retain(v6);
  v7(a2, v8, v10, a4);
  swift_release(v6);
  return swift_bridgeObjectRelease(v10);
}

void sub_100204CAC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  __n128 v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  Class isa;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  Class v61;
  double v62;
  id v63;
  double v64;
  double v65;
  id v66;
  uint64_t v67;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149E1C8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = static UIBackgroundConfiguration.clear()(v7);
  v11 = type metadata accessor for UIBackgroundConfiguration(0, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
  UICollectionViewCell.backgroundConfiguration.setter(v9);
  v12 = objc_msgSend(v1, "contentView");
  v13 = sub_100204970();
  objc_msgSend(v12, "addSubview:", v13);

  v14 = objc_msgSend(v1, "contentView");
  v15 = sub_1002049F4();
  objc_msgSend(v14, "addSubview:", v15);

  v16 = sub_1002049F4();
  v17 = objc_msgSend((id)objc_opt_self(NSLocale), "currentLocale");
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v16, "setLocale:", isa);

  v19 = sub_1002049F4();
  objc_msgSend(v19, "addTarget:action:forControlEvents:", v1, "datePickedValueChanged:", 4096);

  v20 = sub_1002049F4();
  objc_msgSend(v20, "addTarget:action:forControlEvents:", v1, "datePickerTapped:", 0x10000);

  v21 = sub_1002049F4();
  v22 = objc_msgSend(v21, "bottomAnchor");

  v23 = objc_msgSend(v1, "contentView");
  v24 = objc_msgSend(v23, "bottomAnchor");

  v25 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v24, -8.0);
  v66 = (id)objc_opt_self(NSLayoutConstraint);
  v26 = sub_100008B04((uint64_t *)&unk_101493B10);
  v27 = swift_allocObject(v26, 88, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100E31750;
  v28 = sub_1002049F4();
  v29 = objc_msgSend(v28, "topAnchor");

  v30 = objc_msgSend(v1, "contentView");
  v31 = objc_msgSend(v30, "topAnchor");

  v32 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v31, 12.0);
  *(_QWORD *)(v27 + 32) = v32;
  v33 = sub_1002049F4();
  v34 = objc_msgSend(v33, "trailingAnchor");

  v35 = objc_msgSend(v1, "contentView");
  v36 = objc_msgSend(v35, "trailingAnchor");

  v37 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v36, -20.0);
  *(_QWORD *)(v27 + 40) = v37;
  *(_QWORD *)(v27 + 48) = v25;
  v38 = v25;
  v39 = sub_100204970();
  v40 = objc_msgSend(v39, "topAnchor");

  v41 = sub_1002049F4();
  v42 = objc_msgSend(v41, "topAnchor");

  v43 = objc_msgSend(v40, "constraintEqualToAnchor:", v42);
  *(_QWORD *)(v27 + 56) = v43;
  v44 = sub_100204970();
  v45 = objc_msgSend(v44, "leadingAnchor");

  v46 = objc_msgSend(v1, "contentView");
  v47 = objc_msgSend(v46, "leadingAnchor");

  v48 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v47, 16.0);
  *(_QWORD *)(v27 + 64) = v48;
  v49 = sub_100204970();
  v50 = objc_msgSend(v49, "bottomAnchor");

  v51 = sub_1002049F4();
  v52 = objc_msgSend(v51, "bottomAnchor");

  v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
  *(_QWORD *)(v27 + 72) = v53;
  v54 = sub_1002049F4();
  v55 = objc_msgSend(v54, "leadingAnchor");

  v56 = sub_100204970();
  v57 = objc_msgSend(v56, "trailingAnchor");

  v58 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v57, 8.0);
  *(_QWORD *)(v27 + 80) = v58;
  v67 = v27;
  specialized Array._endMutation()(v59);
  v60 = v67;
  sub_1000174D4();
  v61 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v62 = swift_bridgeObjectRelease(v60).n128_u64[0];
  objc_msgSend(v66, "activateConstraints:", v61, v62);

  v63 = sub_1002049F4();
  LODWORD(v64) = 1144750080;
  objc_msgSend(v63, "setContentCompressionResistancePriority:forAxis:", 0, v64);

  LODWORD(v65) = 1132068864;
  objc_msgSend(v38, "setPriority:", v65);
  objc_msgSend(v38, "setActive:", 1);

}

uint64_t sub_100205454(double a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  id v17;
  NSString v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Class isa;
  _BYTE v29[4];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a4;
  v5 = type metadata accessor for Date(0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  v6 = __chkstk_darwin(v5);
  v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for UIListContentConfiguration.TextProperties(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = type metadata accessor for UIListContentConfiguration(0);
  v13 = *(_QWORD *)(v31 - 8);
  v14 = __chkstk_darwin(v31);
  v16 = &v29[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static UIListContentConfiguration.cell()(v14);
  v17 = sub_100204970();
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v18);

  v19 = sub_100204970();
  v20 = UIListContentConfiguration.textProperties.getter();
  v21 = (void *)UIListContentConfiguration.TextProperties.font.getter(v20);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v19, "setFont:", v21);

  v22 = sub_1002049F4();
  v23 = v22;
  if (a1 == 0.0 || (v30 & 1) == 0)
    Date.init()(v22);
  else
    Date.init(timeIntervalSince1970:)(v22, a1);
  v25 = v32;
  v24 = v33;
  v26 = v31;
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(_BYTE *, uint64_t))(v25 + 8))(v8, v24);
  objc_msgSend(v23, "setDate:", isa);

  return (*(uint64_t (**)(_BYTE *, uint64_t))(v13 + 8))(v16, v26);
}

void sub_1002056D0(void *a1)
{
  sub_100205734(a1, 1);
}

void sub_10020572C(void *a1)
{
  sub_100205734(a1, 0);
}

void sub_100205734(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, uint64_t, uint64_t, double);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v8 = __chkstk_darwin(v6).n128_u64[0];
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, "date", v8);
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v11);

  v13 = Date.timeIntervalSince1970.getter(v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v14 = sub_1002059AC(v13);
  v16 = v15;
  v17 = v4 + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell_dateSelectionHandler;
  v18 = *(void (**)(_QWORD, uint64_t, uint64_t, double))(v4
                                                                + OBJC_IVAR____TtC4Maps24AllRefinementsOpenAtCell_dateSelectionHandler);
  if (v18)
  {
    v19 = v14;
    v20 = *(_QWORD *)(v17 + 8);
    swift_retain();
    v18(a2 & 1, v19, v16, v13);
    sub_10000BF74((uint64_t)v18, v20);
  }
  swift_bridgeObjectRelease(v16);
}

id sub_100205910()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AllRefinementsOpenAtCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AllRefinementsOpenAtCell()
{
  return objc_opt_self(_TtC4Maps24AllRefinementsOpenAtCell);
}

uint64_t sub_1002059AC(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  Class isa;
  Class v15;
  NSString v16;
  uint64_t v17;
  Class v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v28 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TimeZone(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Locale(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  static Locale.current.getter();
  isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v13, "setLocale:", isa);

  static TimeZone.current.getter();
  v15 = TimeZone._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v13, "setTimeZone:", v15);

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setDateFormat:", v16);

  Date.init(timeIntervalSince1970:)(v17, a1);
  v18 = Date._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v13, "stringFromDate:", v18);

  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  v29 = 0x5F54415F4E45504FLL;
  v30 = 0xE800000000000000;
  v23._countAndFlagsBits = v20;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v22);
  v24 = v30;
  v25 = String.init(format:_:)(v29, v30, _swiftEmptyArrayStorage);

  swift_bridgeObjectRelease(v24);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v28);
  return v25;
}

uint64_t sub_100205C24()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100205C48(char a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, _QWORD, id, double))(v5 + 16))(v5, a1 & 1, v6, a2);

}

double sub_100205CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100205CB8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100205CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = _convertErrorToNSError(_:)(a1);
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id sub_100205D0C(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_10020E76C(a1);

  return v4;
}

uint64_t sub_100205D48(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v4 = sub_100008B04(&qword_10149E610);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

BOOL sub_100205F3C()
{
  uint64_t v0;
  void *v1;
  int v2;
  int v3;
  int v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  v2 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(v1, "favoriteType"));
  if (v2 == (unsigned __int16)FavoriteItemType.rawValue.getter(2))
    return 1;
  v3 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(v1, "favoriteType"));
  if (v3 == (unsigned __int16)FavoriteItemType.rawValue.getter(3))
    return 1;
  v5 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(v1, "favoriteType"));
  return v5 == (unsigned __int16)FavoriteItemType.rawValue.getter(5);
}

uint64_t sub_100206010()
{
  char *v0;
  int v1;
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v1 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem], "favoriteType"));
  if (v1 != (unsigned __int16)FavoriteItemType.rawValue.getter(6))
    return 0;
  result = (uint64_t)objc_msgSend(v0, "identifier");
  if (result)
  {
    v3 = (void *)result;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v6 = v5;

    if (v4 == 0x725479627261654ELL && v6 == 0xED00007469736E61)
    {
      swift_bridgeObjectRelease(0xED00007469736E61);
      return 1;
    }
    else
    {
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 0x725479627261654ELL, 0xED00007469736E61, 0);
      swift_bridgeObjectRelease(v6);
      return v8 & 1;
    }
  }
  return result;
}

id sub_1002061AC(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  int v19;
  id v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FavoriteItem(0, v9);
  v10 = (id)MapsSyncObject.__allocating_init()();
  v11 = a1;
  dispatch thunk of MapsSyncObject.createTime.getter(v12);

  dispatch thunk of MapsSyncObject.createTime.setter(v8);
  v13 = dispatch thunk of FavoriteItem.type.setter(1);
  v14 = dispatch thunk of CollectionPlaceItem.mapItemStorage.getter(v13);
  v15 = dispatch thunk of FavoriteItem.mapItemStorage.setter(v14);
  v16 = dispatch thunk of CollectionPlaceItem.customName.getter(v15);
  dispatch thunk of FavoriteItem.customName.setter(v16, v17);
  v18 = objc_msgSend(v1, "initWithFavoriteItem:", v10);
  v19 = dispatch thunk of CollectionPlaceItem.type.getter(v18);
  dispatch thunk of CollectionPlaceItem.type.setter(v19 | 2u);
  v20 = v10;
  dispatch thunk of MapsSyncObject.identifier.getter(v20);

  dispatch thunk of CollectionPlaceItem.originalIdentifier.setter(v5);
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v21 = type metadata accessor for Logger(0);
  sub_10000E918(v21, (uint64_t)qword_1014D4938);
  v22 = v18;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v33 = v20;
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v35 = v26;
    *(_DWORD *)v25 = 136315138;
    v32 = v25 + 4;
    v27 = objc_msgSend(v22, "debugDescription");
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

    v34 = sub_1000C28FC(v28, v30, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v32, v25 + 12);

    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Created favorite from collection item: %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

  }
  return v22;
}

uint64_t sub_1002064E8()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  objc_super v24;
  uint64_t v25;
  unint64_t v26;

  v1 = v0;
  v25 = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for MapsFavoriteItem();
  v2 = objc_msgSendSuper2(&v24, "debugDescription");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;
  swift_bridgeObjectRelease(0xE000000000000000);

  v25 = v3;
  v26 = v5;
  v6._countAndFlagsBits = 0x203A65707974203ALL;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  objc_msgSend(v0, "type");
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 0x203A6469202CLL;
  v9._object = (void *)0xE600000000000000;
  String.append(_:)(v9);
  v10 = objc_msgSend(v0, "identifier");
  if (v10)
  {
    v11 = v10;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v14 = v13;

  }
  else
  {
    v14 = (void *)0xE400000000000000;
    v12 = 1701736270;
  }
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 0x6567616E616D202CLL;
  v16._object = (void *)0xED0000203A644964;
  String.append(_:)(v16);
  v17 = *(id *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem];
  v18 = objc_msgSend(v17, "description");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);

  swift_bridgeObjectRelease(v21);
  return v25;
}

id sub_1002066C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsFavoriteItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MapsFavoriteItem()
{
  return objc_opt_self(_TtC4Maps16MapsFavoriteItem);
}

uint64_t sub_100206764()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch(sub_10020677C, 0, 0);
}

uint64_t sub_10020677C()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  v1 = objc_msgSend(*(id *)(v0 + 24), "shortcutIdentifier");
  if (!v1)
  {
    v2 = *(void **)(v0 + 24);
    v1 = objc_msgSend(v2, "createUniqueIdentifier");
    objc_msgSend(v2, "setShortcutIdentifier:", v1);
  }

  v3 = *(void **)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  dispatch thunk of FavoriteItem.version.setter(2);
  dispatch thunk of FavoriteItem.originatingAddressString.setter(0, 0);
  v4 = type metadata accessor for MapsSyncStore(0);
  *(_QWORD *)(v0 + 32) = static MapsSyncStore.sharedStore.getter(v4);
  v5 = sub_100008B04((uint64_t *)&unk_101493B10);
  v6 = swift_allocObject(v5, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v6 + 32) = v3;
  v12 = v6;
  specialized Array._endMutation()(v6);
  *(_QWORD *)(v0 + 40) = v12;
  v7 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:) + 1);
  v11 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  v8 = v3;
  v9 = (_QWORD *)swift_task_alloc(v7);
  *(_QWORD *)(v0 + 48) = v9;
  *v9 = v0;
  v9[1] = sub_1002068C8;
  return v11(v12);
}

uint64_t sub_1002068C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100206B2C;
  }
  else
  {
    v5 = *(void **)(v2 + 32);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 40));

    v4 = sub_100206938;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100206938()
{
  uint64_t v0;
  void **v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint8_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (void **)(v0 + 24);
  *(_BYTE *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) = 1;
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v2 = *v1;
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_1014D4938);
  v4 = Logger.logObject.getter(v2);
  v5 = static os_log_type_t.default.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *v1;
  if (v6)
  {
    v15 = (uint64_t *)(v0 + 16);
    v16 = v0;
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = objc_msgSend(v7, "debugDescription");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    *v15 = sub_1000C28FC(v11, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v15, v1, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Saved item: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    v0 = v16;
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100206B2C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100206C80(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  id v5;
  _QWORD *v6;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_1014A0C7C;
  v5 = a2;
  v6 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_100103770;
  v6[3] = v5;
  return swift_task_switch(sub_10020677C, 0, 0);
}

uint64_t sub_100206E14(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 120) = a2;
  *(_QWORD *)(v2 + 128) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch(sub_100206E5C, 0, 0);
}

uint64_t sub_100206E5C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_100206EEC;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100205D48;
  v4[3] = &unk_1011AC408;
  v4[4] = v3;
  objc_msgSend(v2, "deleteWithDeleteFromLibrary:completionHandler:", 0, v4);
  return swift_continuation_await(v1);
}

uint64_t sub_100206EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    v2 = sub_100206F94;
  else
    v2 = sub_100206F4C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100206F4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);

  (*(void (**)(uint64_t, _QWORD))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100206F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(void **)(v0 + 120);
  swift_willThrow();

  v4 = (void *)_convertErrorToNSError(_:)(v2);
  swift_errorRelease(v2);
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v4);

  _Block_release(*(const void **)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100207010(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 264) = v1;
  *(_BYTE *)(v2 + 496) = a1;
  v3 = sub_100008B04((uint64_t *)&unk_10149E140);
  *(_QWORD *)(v2 + 272) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100008B04((uint64_t *)&unk_10149AA90) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 280) = swift_task_alloc(v4);
  *(_QWORD *)(v2 + 288) = swift_task_alloc(v4);
  v5 = type metadata accessor for UUID(0);
  *(_QWORD *)(v2 + 296) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 304) = v6;
  *(_QWORD *)(v2 + 312) = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002070CC, 0, 0);
}

uint64_t sub_1002070CC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  void *v18;
  __n128 v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(uint64_t);
  uint64_t (*v26)(uint64_t);
  uint64_t v27;

  v1 = *(char **)(v0 + 264);
  if (v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] == 1)
  {
    v2 = v0 + 16;
    objc_msgSend(*(id *)(v0 + 264), "setIsHidden:", 1);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1002073DC;
    v3 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v4 = (_QWORD *)(v0 + 80);
    v4[1] = 0x40000000;
    v4[2] = sub_100205D48;
    v4[3] = &unk_1011AC378;
    v4[4] = v3;
    objc_msgSend(v1, "saveWithCompletionHandler:", v4);
    return swift_continuation_await(v2);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 304);
    v8 = *(_QWORD *)(v0 + 288);
    *(_QWORD *)(v0 + 256) = _swiftEmptyArrayStorage;
    v9 = sub_100008B04((uint64_t *)&unk_101493B10);
    v10 = swift_allocObject(v9, 40, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100E23F50;
    v11 = *(void **)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem];
    *(_QWORD *)(v0 + 328) = v11;
    *(_QWORD *)(v10 + 32) = v11;
    v27 = v10;
    specialized Array._endMutation()(v10);
    *(_QWORD *)(v0 + 336) = v27;
    *(_QWORD *)(v0 + 248) = v27;
    dispatch thunk of MapsSyncObject.identifier.getter(v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
    {
      sub_100010CC4(*(_QWORD *)(v0 + 288), (uint64_t *)&unk_10149AA90);
      v12 = type metadata accessor for MapsSyncStore(0);
      *(_QWORD *)(v0 + 472) = static MapsSyncStore.sharedStore.getter(v12);
      v13 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:) + 1);
      v25 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                            + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
      swift_bridgeObjectRetain(v27);
      v14 = (_QWORD *)swift_task_alloc(v13);
      *(_QWORD *)(v0 + 480) = v14;
      *v14 = v0;
      v14[1] = sub_100207E44;
      return v25(v27);
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 32))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
      type metadata accessor for MapsSyncQueryPredicate(0);
      v15 = sub_100008B04((uint64_t *)&unk_10149A4F0);
      v16 = swift_allocObject(v15, 72, 7);
      *(_OWORD *)(v16 + 16) = xmmword_100E22F40;
      isa = UUID._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)(v16 + 56) = sub_10000E4BC(0, &qword_10149F0C8, NSUUID_ptr);
      *(_QWORD *)(v16 + 64) = sub_1001BA488();
      *(_QWORD *)(v16 + 32) = isa;
      v18 = (void *)static MapsSyncQueryPredicate.withFormat(_:_:)(0xD000000000000018, 0x8000000100E501C0, v16);
      *(_QWORD *)(v0 + 344) = v18;
      v19 = swift_bridgeObjectRelease(v16);
      v20 = type metadata accessor for CollectionPlaceItemRequest(0, v19);
      *(_QWORD *)(v0 + 352) = CollectionPlaceItemRequest.__allocating_init()(v20);
      v21 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
      v22 = v18;
      v23 = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v18, 0, 0);
      *(_QWORD *)(v0 + 360) = v23;
      v26 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                            + async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:));
      v24 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of CollectionPlaceItemRequest.fetch(options:)
                                       + 1));
      *(_QWORD *)(v0 + 368) = v24;
      *v24 = v0;
      v24[1] = sub_100207498;
      return v26(v23);
    }
  }
}

uint64_t sub_1002073DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 320) = v1;
  if (v1)
    v2 = sub_1002080D4;
  else
    v2 = sub_10020743C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020743C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100207498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  void *v7;

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 368);
  v3[47] = a1;
  v3[48] = v1;
  swift_task_dealloc(v4);
  v6 = v3 + 44;
  v5 = (void *)v3[44];

  if (v1)
    v7 = sub_1002081BC;
  else
    v7 = sub_100207510;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100207510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t (*v56)(uint64_t);
  uint64_t v57;

  v3 = (_QWORD *)(v2 + 248);
  v4 = *(_QWORD *)(v2 + 376);
  if (*(_BYTE *)(v2 + 496) == 1)
  {
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v24 = *(_QWORD *)(v2 + 376);
      else
        v24 = v4 & 0xFFFFFFFFFFFFFF8;
      v25 = type metadata accessor for MapsSyncObject(0, a2);
      swift_bridgeObjectRetain(v4);
      v7 = _bridgeCocoaArray<A>(_:)(v24, v25);
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v2 + 376));
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v5);
      type metadata accessor for MapsSyncObject(0, v6);
      v7 = *(_QWORD *)(v2 + 376);
    }
    sub_1001207D4(v7);
    goto LABEL_26;
  }
  if (!((unint64_t)v4 >> 62))
  {
    v8 = v4 & 0xFFFFFFFFFFFFF8;
    v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_7;
LABEL_24:
    v27 = *(_QWORD *)(v2 + 272);
    type metadata accessor for CollectionPlaceItem(0);
    v28 = (void *)MapsSyncObject.__allocating_init()();
    dispatch thunk of MapsSyncObject.createTime.getter(v29);
    v30 = dispatch thunk of MapsSyncObject.createTime.setter(v27);
    v31 = dispatch thunk of FavoriteItem.customName.getter(v30);
    v33 = dispatch thunk of CollectionPlaceItem.customName.setter(v31, v32);
    v34 = dispatch thunk of FavoriteItem.mapItemStorage.getter(v33);
    dispatch thunk of CollectionPlaceItem.mapItemStorage.setter(v34);
    v9 = v28;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
    v4 = *(_QWORD *)((*(_QWORD *)(v2 + 256) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v8 = *(_QWORD *)((*(_QWORD *)(v2 + 256) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v4 < v8 >> 1)
    {
LABEL_25:
      v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v9);
      specialized Array._endMutation()(v35);

      goto LABEL_26;
    }
LABEL_32:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v4 + 1, 1);
    goto LABEL_25;
  }
  if (v4 < 0)
    v26 = *(_QWORD *)(v2 + 376);
  else
    v26 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 376));
  v9 = _CocoaArrayWrapper.endIndex.getter(v26);
  swift_bridgeObjectRelease(v4);
  if (!v9)
    goto LABEL_24;
LABEL_7:
  if (v9 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  v10 = *(_QWORD *)(v2 + 376);
  v11 = *(_QWORD *)(v2 + 304);
  v12 = v4 & 0xC000000000000001;
  v13 = v10 + 32;
  swift_bridgeObjectRetain(v10);
  v14 = 0;
  do
  {
    if (v12)
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, *(_QWORD *)(v2 + 376));
    else
      v15 = *(id *)(v13 + 8 * v14);
    v16 = v15;
    v17 = *(_QWORD *)(v2 + 296);
    v18 = *(_QWORD *)(v2 + 280);
    v19 = dispatch thunk of CollectionPlaceItem.type.getter(v15);
    dispatch thunk of CollectionPlaceItem.type.setter(v19 & 0xFFFFFFFD);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, 1, 1, v17);
    dispatch thunk of CollectionPlaceItem.originalIdentifier.setter(v18);
    v20 = v16;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)((*(_QWORD *)(v2 + 256) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)((*(_QWORD *)(v2 + 256) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    ++v14;
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);

  }
  while (v9 != v14);
  swift_bridgeObjectRelease(*(_QWORD *)(v2 + 376));
  v3 = (_QWORD *)(v2 + 248);
LABEL_26:
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v36 = type metadata accessor for Logger(0);
  v37 = sub_10000E918(v36, (uint64_t)qword_1014D4938);
  *(_QWORD *)(v2 + 392) = v37;
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc(12, -1);
    v41 = swift_slowAlloc(32, -1);
    v57 = v41;
    *(_DWORD *)v40 = 136315138;
    swift_beginAccess(v3, v2 + 144, 0, 0);
    v42 = *v3;
    v44 = type metadata accessor for MapsSyncObject(0, v43);
    swift_bridgeObjectRetain(v42);
    v46 = Array.description.getter(v45, v44);
    v47 = v3;
    v49 = v48;
    swift_bridgeObjectRelease(v42);
    *(_QWORD *)(v2 + 240) = sub_1000C28FC(v46, v49, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 240, v47, v40 + 4, v40 + 12);
    swift_bridgeObjectRelease(v49);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Deleted item: %s", v40, 0xCu);
    swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v40, -1, -1);
  }

  v50 = type metadata accessor for MapsSyncStore(0);
  *(_QWORD *)(v2 + 400) = v50;
  v51 = static MapsSyncStore.sharedStore.getter(v50);
  v52 = *(_QWORD *)(v2 + 256);
  *(_QWORD *)(v2 + 408) = v51;
  *(_QWORD *)(v2 + 416) = v52;
  v53 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:) + 1);
  v56 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.save(objects:)
                                        + async function pointer to dispatch thunk of MapsSyncStore.save(objects:));
  swift_bridgeObjectRetain(v52);
  v54 = (_QWORD *)swift_task_alloc(v53);
  *(_QWORD *)(v2 + 424) = v54;
  *v54 = v2;
  v54[1] = sub_1002079A8;
  return v56(v52);
}

uint64_t sub_1002079A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  *(_QWORD *)(*(_QWORD *)v1 + 432) = v0;
  swift_task_dealloc(v3);
  v5 = (void *)v2[51];
  v4 = v2[52];
  if (v0)
  {
    v6 = v2[47];
    swift_bridgeObjectRelease(v4);

    swift_bridgeObjectRelease(v6);
    v7 = sub_10020824C;
  }
  else
  {
    swift_bridgeObjectRelease(v4);

    v7 = sub_100207A34;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100207A34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v1[55] = static MapsSyncStore.sharedStore.getter(a1);
  swift_beginAccess(v1 + 31, v1 + 21, 0, 0);
  v2 = v1[31];
  v1[56] = v2;
  v3 = *((unsigned int *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:) + 1);
  v6 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of MapsSyncStore.delete(objects:)
                                       + async function pointer to dispatch thunk of MapsSyncStore.delete(objects:));
  swift_bridgeObjectRetain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  v1[57] = v4;
  *v4 = v1;
  v4[1] = sub_100207AD8;
  return v6(v2);
}

uint64_t sub_100207AD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 456);
  *(_QWORD *)(*(_QWORD *)v1 + 464) = v0;
  swift_task_dealloc(v3);
  v5 = (void *)v2[55];
  v4 = v2[56];
  if (v0)
  {
    v6 = v2[47];
    swift_bridgeObjectRelease(v4);

    swift_bridgeObjectRelease(v6);
    v7 = sub_1002082D8;
  }
  else
  {
    swift_bridgeObjectRelease(v4);

    v7 = sub_100207B64;
  }
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100207B64()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 376));
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 376);
  if (v4)
  {
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v32 = v7;
    *(_DWORD *)v6 = 136315394;
    if (v5 >> 62)
    {
      v26 = *(_QWORD *)(v0 + 376);
      if (v26 < 0)
        v27 = *(_QWORD *)(v0 + 376);
      else
        v27 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v0 + 376));
      v8 = _CocoaArrayWrapper.endIndex.getter(v27);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v9 = *(_QWORD *)(v0 + 376);
    v30 = *(void **)(v0 + 344);
    v31 = *(_QWORD *)(v0 + 312);
    if (v8)
      v10 = 0x64657461647055;
    else
      v10 = 0x64657461657243;
    v28 = *(_QWORD *)(v0 + 304);
    v29 = *(_QWORD *)(v0 + 296);
    *(_QWORD *)(v0 + 216) = sub_1000C28FC(v10, 0xE700000000000000, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(0xE700000000000000);
    swift_bridgeObjectRelease_n(v9, 2);
    *(_WORD *)(v6 + 12) = 2080;
    swift_beginAccess(v0 + 256, v0 + 192, 0, 0);
    v11 = *(_QWORD *)(v0 + 256);
    v13 = type metadata accessor for MapsSyncObject(0, v12);
    swift_bridgeObjectRetain(v11);
    v15 = Array.description.getter(v14, v13);
    v17 = v16;
    swift_bridgeObjectRelease(v11);
    *(_QWORD *)(v0 + 224) = sub_1000C28FC(v15, v17, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v6 + 14, v6 + 22);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s collection item for delete: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v29);
  }
  else
  {
    v18 = *(void **)(v0 + 344);
    v20 = *(_QWORD *)(v0 + 304);
    v19 = *(_QWORD *)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 296);

    swift_bridgeObjectRelease_n(v5, 2);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 256));
  v22 = *(_QWORD *)(v0 + 280);
  v23 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v23);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100207E44()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  void *v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 480);
  *(_QWORD *)(*v1 + 488) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10020813C;
  }
  else
  {
    v5 = *(void **)(v2 + 472);
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 336));

    v4 = sub_100207EB8;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100207EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_10000E918(v1, (uint64_t)qword_1014D4938);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v19 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_beginAccess(v0 + 248, v0 + 120, 0, 0);
    v7 = *(_QWORD *)(v0 + 248);
    v9 = type metadata accessor for MapsSyncObject(0, v8);
    swift_bridgeObjectRetain(v7);
    v11 = Array.description.getter(v10, v9);
    v13 = v12;
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v0 + 232) = sub_1000C28FC(v11, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Deleted lacking identifier item: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
    v14 = *(_QWORD **)(v0 + 256);
  }
  else
  {

    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
    v14 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(v0 + 280);
  v16 = *(_QWORD *)(v0 + 288);
  v17 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002080D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_willThrow();
  v2 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020813C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 472);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 336));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v3 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002081BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10020824C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 256));
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002082D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 304);
  v1 = *(_QWORD *)(v0 + 312);
  v3 = *(_QWORD *)(v0 + 296);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 248));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 256));
  v5 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 288);
  v6 = *(_QWORD *)(v0 + 272);
  swift_task_dealloc(*(_QWORD *)(v0 + 312));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100208490(char a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  _QWORD *v7;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v6 = dword_1014A0C2C;
  a3;
  v7 = (_QWORD *)swift_task_alloc(v6);
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_100108D5C;
  return sub_100207010(a1);
}

void sub_100208504(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Class isa;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD aBlock[6];
  _BYTE v23[24];
  _BYTE v24[24];

  v21 = a2;
  v3 = sub_100008B04(&qword_1014A0C00);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  if (qword_101490E30 != -1)
    swift_once(&qword_101490E30, sub_1000F999C);
  v6 = (uint64_t *)(qword_1014D49B0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess(qword_1014D49B0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts, v24, 0, 0);
  v7 = *v6;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRetain(v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_release();
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v19 = v8;
    else
      v19 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v9 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v8);
  v10 = (uint64_t *)(qword_1014D49B0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts);
  swift_beginAccess(qword_1014D49B0 + OBJC_IVAR____TtC4Maps20MapsFavoritesManager__shortcuts, v23, 0, 0);
  v11 = *v10;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRetain(v12);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
  swift_release();
  type metadata accessor for MapsFavoriteItem();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = swift_bridgeObjectRelease(v12);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v14);
  v15 = *(unsigned __int8 *)(v4 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = swift_allocObject(&unk_1011AC2C0, v16 + v5, v15 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v17 + v16, (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_1001085BC;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000B3780;
  aBlock[3] = &unk_1011AC2D8;
  v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v21, "moveToIndex:with:completion:", v9, isa, v18);
  _Block_release(v18);

}

uint64_t sub_10020889C(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch(sub_1002088E4, 0, 0);
}

uint64_t sub_1002088E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc(32);
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_100208980;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v3, 0, 0, 0x61426F5465766F6DLL, 0xEC00000029286B63, sub_10020F074, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_100208980()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100208A34;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 32));
    v4 = sub_1002089EC;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002089EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, _QWORD))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100208A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);

  swift_task_dealloc(v2);
  v4 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);

  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100208AAC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v9 = (_QWORD *)swift_allocObject(&unk_1011AC168, 40, 7);
  v9[2] = v4;
  v9[3] = a3;
  v9[4] = a4;
  v10 = v4;
  swift_retain();
  sub_100209000(a1, a2, (unint64_t)sub_10020EF4C, (uint64_t)v9);
  swift_release();
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v11 = type metadata accessor for Logger(0);
  sub_10000E918(v11, (uint64_t)qword_1014D4938);
  v12 = v10;
  swift_bridgeObjectRetain_n(a2, 2);
  v13 = v12;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(32, -1);
    v17 = swift_slowAlloc(32, -1);
    v25 = a1;
    v26 = v17;
    *(_DWORD *)v16 = 134218498;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v16 + 4, v16 + 12);
    *(_WORD *)(v16 + 12) = 2048;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v24 = a2;
      else
        v24 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v18 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a2);
    v25 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v16 + 14, v16 + 22);
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(a2).n128_u64[0];
    *(_WORD *)(v16 + 22) = 2080;
    v20 = objc_msgSend(v13, "debugDescription", v19);
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    v25 = sub_1000C28FC(v21, v23, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v16 + 24, v16 + 32);

    swift_bridgeObjectRelease(v23);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Moved to index %ld within %ld: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

uint64_t sub_100208D74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v15;

  v8 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (_QWORD *)swift_allocObject(&unk_1011AC208, 64, 7);
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a2;
  v12[5] = a3;
  v12[6] = a4;
  v12[7] = a1;
  v13 = a2;
  swift_retain();
  swift_errorRetain(a1);
  sub_1001B0C08((uint64_t)v10, (uint64_t)&unk_1014A0BD0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_100208E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[17] = a6;
  v7[18] = a7;
  v7[15] = a4;
  v7[16] = a5;
  return swift_task_switch(sub_100208E78, 0, 0);
}

uint64_t sub_100208E78()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[15];
  v0[2] = v0;
  v0[3] = sub_100208F04;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100205D48;
  v4[3] = &unk_1011AC220;
  v4[4] = v3;
  objc_msgSend(v2, "saveWithCompletionHandler:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_100208F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 152) = v1;
  if (v1)
    v2 = sub_100208F98;
  else
    v2 = sub_100208F64;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100208F64()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 128))(*(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100208F98()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void (**)(uint64_t))(v0 + 128);
  swift_willThrow();
  swift_errorRetain(v1);
  v2(v1);
  swift_errorRelease(v1);
  swift_errorRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100209000(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  char v35;
  unint64_t v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void **aBlock;
  uint64_t v66;
  void (*v67)(uint64_t, void *);
  void *v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v7 = a2;
  v71 = a2;
  v8 = a2 >> 62;
  if (!(a2 >> 62))
  {
    v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(a2, 2);
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v7);
    if (v8)
    {
      if (v7 < 0)
        v59 = v7;
      else
        v59 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v10 = _CocoaArrayWrapper.endIndex.getter(v59);
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    goto LABEL_15;
  }
LABEL_97:
  if (v7 < 0)
    v52 = v7;
  else
    v52 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v7, 2);
  v9 = _CocoaArrayWrapper.endIndex.getter(v52);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    v10 = 0;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      v4 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup);
      swift_unknownObjectRelease(v11);
      if ((_DWORD)v4 == 1)
        break;
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
        goto LABEL_89;
      }
      ++v10;
      if (v12 == v9)
        goto LABEL_13;
    }
  }
  else
  {
    v10 = 0;
    while (*(_BYTE *)(*(_QWORD *)(v7 + 8 * v10 + 32) + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) != 1)
    {
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      ++v10;
      if (v13 == v9)
        goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease(v7);
  v31 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_120:
    if (v7 < 0)
      v60 = v7;
    else
      v60 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v61 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(v7);
    if (v31 != v61)
      goto LABEL_38;
LABEL_15:
    v15 = v7;
    if ((unint64_t)v7 >> 62)
      goto LABEL_75;
    goto LABEL_16;
  }
  if (v8)
    goto LABEL_120;
  if (v31 == *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_38:
  v62 = a3;
  v32 = v10 + 5;
  v4 = (uint64_t)&qword_1014A0000;
  v15 = v7;
  do
  {
    v33 = v32 - 4;
    a3 = v15 & 0xC000000000000001;
    if ((v15 & 0xC000000000000001) != 0)
    {
      v34 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v15);
    }
    else
    {
      if ((v33 & 0x8000000000000000) != 0)
        goto LABEL_86;
      if (v33 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_87;
      v34 = *(id *)(v15 + 8 * v32);
    }
    v35 = v34[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup];

    if ((v35 & 1) == 0)
    {
      if (v33 != v10)
      {
        if (a3)
        {
          a3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v15);
          v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32 - 4, v15);
        }
        else
        {
          if (v10 < 0)
            goto LABEL_91;
          v36 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v10 >= v36)
            goto LABEL_92;
          v37 = *(id *)(v15 + 8 * v10 + 32);
          if ((v33 & 0x8000000000000000) != 0)
            goto LABEL_93;
          if (v33 >= v36)
            goto LABEL_94;
          a3 = (unint64_t)v37;
          v38 = *(id *)(v15 + 8 * v32);
        }
        v39 = v38;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v15)
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          v15 = sub_10020D920(v15);
          v71 = v15;
        }
        v40 = *(void **)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
        *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v39;

        specialized Array._endMutation()(v41);
        v42 = v71;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v71)
          || (v71 & 0x8000000000000000) != 0
          || (v71 & 0x4000000000000000) != 0)
        {
          v42 = sub_10020D920(v71);
          v71 = v42;
        }
        if ((v33 & 0x8000000000000000) != 0)
          goto LABEL_95;
        v43 = v42 & 0xFFFFFFFFFFFFFF8;
        if (v33 >= *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_96;
        v44 = *(void **)(v43 + 8 * v32);
        *(_QWORD *)(v43 + 8 * v32) = a3;

        specialized Array._endMutation()(v45);
      }
      if (__OFADD__(v10++, 1))
        goto LABEL_90;
    }
    a3 = v32 - 3;
    if (__OFADD__(v33, 1))
      goto LABEL_88;
    v15 = v71;
    if (v71 >> 62)
    {
      if ((v71 & 0x8000000000000000) != 0)
        v48 = v71;
      else
        v48 = v71 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v71);
      v47 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease(v71);
    }
    else
    {
      v47 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    ++v32;
  }
  while (a3 != v47);
  a3 = v62;
  if (v71 >> 62)
  {
LABEL_75:
    if (v15 < 0)
      v49 = v15;
    else
      v49 = v15 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v15);
    v16 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(v15);
    if (v16 < v10)
      goto LABEL_79;
LABEL_17:
    sub_10020E89C(v10, v16, v14, (uint64_t (*)(uint64_t))type metadata accessor for MapsFavoriteItem);
    if (v8)
    {
      if (v7 < 0)
        v18 = v7;
      else
        v18 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v17 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v17 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v7 = v71;
    if (v71 >> 62)
    {
      if ((v71 & 0x8000000000000000) != 0)
        v53 = v71;
      else
        v53 = v71 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v71);
      v54 = _CocoaArrayWrapper.endIndex.getter(v53);
      swift_bridgeObjectRelease(v71);
      v20 = v17 - v54;
      if (!__OFSUB__(v17, v54))
      {
LABEL_25:
        v4 = a1;
        v8 = a1 - v20;
        if (!__OFSUB__(a1, v20))
        {
          if (!(v71 >> 62))
          {
            v21 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
            if ((unint64_t)v21 <= 1)
              goto LABEL_114;
            goto LABEL_28;
          }
LABEL_109:
          if ((v71 & 0x8000000000000000) != 0)
            v55 = v71;
          else
            v55 = v71 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v71);
          v56 = _CocoaArrayWrapper.endIndex.getter(v55);
          swift_bridgeObjectRelease(v71);
          if (v56 < 2)
            goto LABEL_114;
          swift_bridgeObjectRetain(v71);
          v21 = _CocoaArrayWrapper.endIndex.getter(v55);
          swift_bridgeObjectRelease(v71);
LABEL_28:
          v22 = v8 & ~(v8 >> 63);
          if (v22 < v21)
          {
            if (v8 <= 0)
              goto LABEL_80;
            swift_bridgeObjectRetain(v71);
            sub_10020A2E0(v4, v71);
            v24 = v23;
            swift_bridgeObjectRelease(v71);
            v25 = v22 - ((v24 & 1) == 0);
            v26 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
            v27 = *(void **)(v63 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
            if ((v71 & 0xC000000000000001) == 0)
            {
              if ((v25 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v25 < *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                v28 = (char *)*(id *)(v71 + 8 * v25 + 32);
LABEL_34:
                v29 = *(id *)&v28[v26];

                v69 = a3;
                v70 = a4;
                aBlock = _NSConcreteStackBlock;
                v66 = 1107296256;
                v67 = sub_1000B3780;
                v68 = &unk_1011AC1A8;
                v30 = _Block_copy(&aBlock);
                swift_retain();
                swift_release();
                objc_msgSend(v27, "moveAfterItem:completion:", v29, v30, v62);
LABEL_84:
                _Block_release(v30);
                swift_bridgeObjectRelease(v7);

                return;
              }
              __break(1u);
              goto LABEL_128;
            }
            v28 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v71);
            v26 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
            goto LABEL_34;
          }
LABEL_114:
          v57 = *(void **)(v63 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
          v69 = a3;
          v70 = a4;
          aBlock = _NSConcreteStackBlock;
          v66 = 1107296256;
          v67 = sub_1000B3780;
          v68 = &unk_1011AC180;
          v58 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          objc_msgSend(v57, "moveToBackWithCompletion:", v58);
          _Block_release(v58);
          swift_bridgeObjectRelease(v7);
          return;
        }
LABEL_108:
        __break(1u);
        goto LABEL_109;
      }
    }
    else
    {
      v19 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
      v20 = v17 - v19;
      if (!__OFSUB__(v17, v19))
        goto LABEL_25;
    }
    __break(1u);
    goto LABEL_108;
  }
LABEL_16:
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 >= v10)
    goto LABEL_17;
LABEL_79:
  __break(1u);
LABEL_80:
  v50 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
  v27 = *(void **)(v63 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_128:
    v51 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
    v50 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem;
    goto LABEL_83;
  }
  if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v51 = (char *)*(id *)(v7 + 32);
LABEL_83:
    v29 = *(id *)&v51[v50];

    v69 = a3;
    v70 = a4;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_1000B3780;
    v68 = &unk_1011AC1D0;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, "moveBeforeItem:completion:", v29, v30, v62);
    goto LABEL_84;
  }
  __break(1u);
}

void sub_100209814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  unint64_t v6;
  unint64_t v7;
  char *v9;
  void *v10;
  void *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  void *v31;
  uint64_t v32;
  double v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  Class v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void **v45;
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48;
  void **aBlock;
  uint64_t v50;
  void (*v51)(uint64_t, void *);
  void *v52;
  uint64_t v53;
  uint64_t v54;

  v6 = (unint64_t)a1 >> 62;
  if (!sub_100205F3C() && (sub_100206010() & 1) == 0)
  {
    if (!v6)
    {
      v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_34:
      type metadata accessor for MapsFavoriteItem();
      isa = Array._bridgeToObjectiveC()().super.isa;
      v53 = a2;
      v54 = a3;
      aBlock = _NSConcreteStackBlock;
      v50 = 1107296256;
      v51 = sub_1000B3780;
      v52 = &unk_1011AC0E0;
      v31 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v3, "moveToIndex:with:completion:", v29, isa, v31);
      _Block_release(v31);

      return;
    }
LABEL_51:
    if (a1 < 0)
      v42 = a1;
    else
      v42 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v29 = _CocoaArrayWrapper.endIndex.getter(v42);
    swift_bridgeObjectRelease(a1);
    goto LABEL_34;
  }
  v43 = a3;
  if (v6)
    goto LABEL_45;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
  {
LABEL_23:
    a3 = 0;
    goto LABEL_26;
  }
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (__OFSUB__(v7--, 1))
        {
          __break(1u);
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
        if ((a1 & 0xC000000000000001) != 0)
          break;
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_43;
        if (v7 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v9 = (char *)*(id *)(a1 + 32 + 8 * v7);
          goto LABEL_13;
        }
LABEL_44:
        __break(1u);
LABEL_45:
        if (a1 < 0)
          v41 = a1;
        else
          v41 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v7 = _CocoaArrayWrapper.endIndex.getter(v41);
        swift_bridgeObjectRelease(a1);
        if (!v7)
          goto LABEL_23;
      }
      v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
LABEL_13:
      v10 = v9;
      if ((v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] & 1) == 0)
      {
        v11 = *(void **)&v9[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem];
        v12 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(v11, "favoriteType"));
        if (v12 == (unsigned __int16)FavoriteItemType.rawValue.getter(2)
          || (v13 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(v11, "favoriteType")),
              v13 == (unsigned __int16)FavoriteItemType.rawValue.getter(3))
          || (v14 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(v11, "favoriteType")),
              v14 == (unsigned __int16)FavoriteItemType.rawValue.getter(5)))
        {

          goto LABEL_25;
        }
        v15 = (unsigned __int16)FavoriteItemType.rawValue.getter(objc_msgSend(v11, "favoriteType"));
        if (v15 == (unsigned __int16)FavoriteItemType.rawValue.getter(6))
        {
          v16 = objc_msgSend(v10, "identifier");
          if (v16)
            break;
        }
      }

      if (!v7)
        goto LABEL_23;
    }
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

    if (v18 == 0x725479627261654ELL && v20 == 0xED00007469736E61)
      break;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, 0x725479627261654ELL, 0xED00007469736E61, 0);

    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) != 0)
      goto LABEL_25;
    if (!v7)
      goto LABEL_23;
  }

  swift_bridgeObjectRelease(0xED00007469736E61);
LABEL_25:
  a3 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
LABEL_26:
  v48 = a3;
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v22 = type metadata accessor for Logger(0);
  sub_10000E918(v22, (uint64_t)qword_1014D4938);
  swift_bridgeObjectRetain_n(a1, 2);
  v23 = v3;
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(32, -1);
    v27 = (void **)swift_slowAlloc(32, -1);
    aBlock = v27;
    *(_DWORD *)v26 = 134218498;
    v46 = a3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v26 + 4, v26 + 12);
    *(_WORD *)(v26 + 12) = 2048;
    v45 = v27;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v32 = a1;
      else
        v32 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v28 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v28 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a1);
    v46 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v26 + 14, v26 + 22);
    *(_QWORD *)&v33 = swift_bridgeObjectRelease(a1).n128_u64[0];
    *(_WORD *)(v26 + 22) = 2080;
    v34 = objc_msgSend(v23, "debugDescription", v33);
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    v46 = sub_1000C28FC(v35, v37, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v26 + 24, v26 + 32);

    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Moving h/w/s or nearby transit to index %ld within %ld: %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  swift_beginAccess(&v48, &v46, 0, 0);
  v38 = v48;
  type metadata accessor for MapsFavoriteItem();
  v39 = Array._bridgeToObjectiveC()().super.isa;
  v53 = a2;
  v54 = v43;
  aBlock = _NSConcreteStackBlock;
  v50 = 1107296256;
  v51 = sub_1000B3780;
  v52 = &unk_1011AC108;
  v40 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v23, "moveToIndex:with:completion:", v38, v39, v40);
  _Block_release(v40);

}

void sub_100209EF0(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  __int16 v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  objc_class *v44;
  id v45;
  id v46;
  id v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;

  v65 = a1;
  v2 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for FavoriteItem(0, v5);
  v64 = v1;
  v6 = dispatch thunk of FavoriteItem.customName.getter();
  v61 = v7;
  v62 = v6;
  v8 = dispatch thunk of FavoriteItem.hidden.getter();
  v60 = v8;
  v59 = dispatch thunk of FavoriteItem.latitude.getter(v8);
  v58 = dispatch thunk of FavoriteItem.longitude.getter();
  v9 = dispatch thunk of FavoriteItem.mapItemCategory.getter();
  v56 = v10;
  v57 = v9;
  v11 = dispatch thunk of FavoriteItem.mapItemCategory.getter();
  v54 = v12;
  v55 = v11;
  v13 = dispatch thunk of FavoriteItem.mapItemLastRefreshed.getter();
  v14 = dispatch thunk of FavoriteItem.mapItemName.getter(v13);
  v52 = v15;
  v53 = v14;
  v51 = dispatch thunk of FavoriteItem.muid.getter();
  v16 = dispatch thunk of FavoriteItem.originatingAddressString.getter();
  v18 = v17;
  v19 = dispatch thunk of FavoriteItem.positionIndex.getter();
  v20 = dispatch thunk of FavoriteItem.shortcutIdentifier.getter();
  v22 = v21;
  v23 = dispatch thunk of FavoriteItem.source.getter();
  v24 = dispatch thunk of FavoriteItem.type.getter();
  WORD2(v49) = dispatch thunk of FavoriteItem.version.getter();
  WORD1(v49) = v24;
  LOWORD(v49) = v23;
  v25 = (void *)FavoriteItem.__allocating_init(customName:hidden:latitude:longitude:mapItemAddress:mapItemCategory:mapItemLastRefreshed:mapItemName:muid:originatingAddressString:positionIndex:shortcutIdentifier:source:type:version:)(v62, v61, v60 & 1, v59, v58, v57, v56, v55, v54, v4, v53, v52, v51, v16, v18, v19, v20, v22, v49);
  v26 = dispatch thunk of FavoriteItem.mapItemStorage.getter(v25);
  v27 = dispatch thunk of FavoriteItem.mapItemStorage.setter(v26);
  v28 = dispatch thunk of FavoriteItem.fetchContactHandles()(v27);
  v29 = v28;
  v30 = *(_QWORD *)(v28 + 16);
  if (v30)
  {
    v31 = (_QWORD *)(v28 + 40);
    do
    {
      v32 = *(v31 - 1);
      v33 = *v31;
      swift_bridgeObjectRetain(*v31);
      dispatch thunk of FavoriteItem.addContactHandle(_:)(v32, v33);
      swift_bridgeObjectRelease(v33);
      v31 += 2;
      --v30;
    }
    while (v30);
  }
  swift_bridgeObjectRelease(v29);
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v34 = type metadata accessor for Logger(0);
  sub_10000E918(v34, (uint64_t)qword_1014D4938);
  v35 = v64;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v67 = v39;
    *(_DWORD *)v38 = 136315138;
    v64 = v38 + 4;
    v40 = objc_msgSend(v35, "debugDescription");
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v66 = sub_1000C28FC(v41, v43, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v64, v38 + 12);

    swift_bridgeObjectRelease(v43);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Created a copy of item: %s", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

  }
  v44 = (objc_class *)type metadata accessor for MapsFavoriteItem();
  v45 = objc_allocWithZone(v44);
  v46 = v25;
  v47 = sub_10020E76C(v46);

  v48 = v65;
  v65[3] = v44;

  *v48 = v47;
}

void sub_10020A2E0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, char *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, char *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a1;
  v4 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v37 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100008B04(&qword_10149AA88);
  __chkstk_darwin(v43);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v39 = (uint64_t)&v34 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - v14;
  if ((unint64_t)a2 >> 62)
    goto LABEL_26;
  v16 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  if (!v16)
  {
LABEL_30:
    swift_bridgeObjectRelease(a2);
    return;
  }
LABEL_3:
  v41 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = *(id *)(a2 + 32);
LABEL_6:
    v18 = v17;
    if (v44 <= 0)
    {
LABEL_22:
      swift_bridgeObjectRelease(a2);

      return;
    }
    v38 = v10;
    v19 = 0;
    v42 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem);
    v35 = a2;
    v36 = a2 & 0xFFFFFFFFFFFFFF8;
    v40 = v16 - 1;
    v10 = (char *)v4;
    v4 = v39;
    while (1)
    {
      v20 = dispatch thunk of MapsSyncObject.identifier.getter(v17);
      dispatch thunk of MapsSyncObject.identifier.getter(v20);
      v21 = (uint64_t)&v7[*(int *)(v43 + 48)];
      sub_1000A4FC0((uint64_t)v15, (uint64_t)v7);
      sub_1000A4FC0(v4, v21);
      v22 = *(unsigned int (**)(char *, uint64_t, char *))(v45 + 48);
      if (v22(v7, 1, v10) == 1)
        break;
      v23 = (uint64_t)v38;
      sub_1000A4FC0((uint64_t)v7, (uint64_t)v38);
      if (v22((char *)v21, 1, v10) == 1)
      {

        v24 = v39;
        sub_100010CC4(v39, (uint64_t *)&unk_10149AA90);
        sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_10149AA90);
        v25 = v23;
        v4 = v24;
        (*(void (**)(uint64_t, char *))(v45 + 8))(v25, v10);
LABEL_13:
        sub_100010CC4((uint64_t)v7, &qword_10149AA88);
        goto LABEL_15;
      }
      v26 = v45;
      v27 = v37;
      (*(void (**)(char *, uint64_t, char *))(v45 + 32))(v37, v21, v10);
      v28 = sub_10000BC84(&qword_1014A0BC0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v29 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v27, v10, v28);

      v30 = *(void (**)(char *, char *))(v26 + 8);
      a2 = v35;
      v30(v27, v10);
      v31 = v39;
      sub_100010CC4(v39, (uint64_t *)&unk_10149AA90);
      sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_10149AA90);
      v32 = v23;
      v4 = v31;
      v30((char *)v32, v10);
      sub_100010CC4((uint64_t)v7, (uint64_t *)&unk_10149AA90);
      if ((v29 & 1) != 0)
        goto LABEL_30;
LABEL_15:
      if (v40 == v19)
        goto LABEL_30;
      v2 = v19 + 1;
      if (v41)
      {
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 + 1, a2);
      }
      else
      {
        if (v2 >= *(_QWORD *)(v36 + 16))
          goto LABEL_25;
        v17 = *(id *)(a2 + 8 * v19 + 40);
      }
      v18 = v17;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        if (a2 < 0)
          v33 = a2;
        else
          v33 = a2 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a2);
        v16 = _CocoaArrayWrapper.endIndex.getter(v33);
        if (!v16)
          goto LABEL_30;
        goto LABEL_3;
      }
      if (++v19 >= v44)
        goto LABEL_22;
    }

    sub_100010CC4(v4, (uint64_t *)&unk_10149AA90);
    sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_10149AA90);
    if (v22((char *)v21, 1, v10) == 1)
    {
      sub_100010CC4((uint64_t)v7, (uint64_t *)&unk_10149AA90);
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  __break(1u);
}

void *sub_10020A75C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;

  v1 = 0;
  switch((unint64_t)objc_msgSend(v0, "type"))
  {
    case 1uLL:
      v2 = dispatch thunk of FavoriteItem.customName.getter();
      if (v5)
        return (void *)v2;
      v15 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter(v2);
      v1 = v15;
      if (v15)
      {
        v16 = objc_msgSend(v15, "name");

        if (v16)
          goto LABEL_20;
        return 0;
      }
      return v1;
    case 2uLL:
    case 3uLL:
    case 5uLL:
      v2 = dispatch thunk of FavoriteItem.customName.getter();
      if (v3)
        return (void *)v2;
      v4 = (id)MapsSuggestionsLocalizedTitleForShortcutType(objc_msgSend(v0, "type"));
      v1 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

      return v1;
    case 6uLL:
      v7 = objc_msgSend(v0, "identifier");
      if (!v7)
        return 0;
      v8 = v7;
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v11 = v10;

      if (v9 == 0x725479627261654ELL && v11 == 0xED00007469736E61)
      {
        v14 = swift_bridgeObjectRelease(0xED00007469736E61);
      }
      else
      {
        v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, 0x725479627261654ELL, 0xED00007469736E61, 0);
        v14 = swift_bridgeObjectRelease(v11);
        if ((v13 & 1) == 0)
          return 0;
      }
      v17 = (id)MapsSuggestionsLocalizedNearbyTransitShortString(v14);
      if (!v17)
        return 0;
      v16 = v17;
LABEL_20:
      v1 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v16);

      return v1;
    default:
      return v1;
  }
}

uint64_t sub_10020A974()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  if (objc_msgSend(v0, "type") == (id)6)
  {
    v1 = objc_msgSend(v0, "identifier");
    if (v1)
    {
      v2 = v1;
      v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
      v5 = v4;

      if (v3 == 0x725479627261654ELL && v5 == 0xED00007469736E61)
      {
        v8 = swift_bridgeObjectRelease(0xED00007469736E61);
      }
      else
      {
        v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, 0x725479627261654ELL, 0xED00007469736E61, 0);
        v8 = swift_bridgeObjectRelease(v5);
        if ((v7 & 1) == 0)
          goto LABEL_8;
      }
      v13 = (id)MapsSuggestionsLocalizedNearbyTransitShortSubtitleString(v8);
      if (!v13)
        return 0;
      v10 = v13;
      goto LABEL_16;
    }
  }
LABEL_8:
  if (v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] == 1)
  {
    v9 = (id)MapsSuggestionsLocalizedAddShortcutString();
    v10 = v9;
LABEL_17:
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

    return v12;
  }
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle + 8];
  if (!v11)
  {
    v14 = objc_msgSend(v0, "mapItemStorage");
    v10 = (id)MapsSuggestionsMapItemCityName();

    if (!v10)
      return 0;
LABEL_16:
    v9 = v10;
    goto LABEL_17;
  }
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
  swift_bridgeObjectRetain(v11);
  return v12;
}

uint64_t sub_10020AB88()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) == 1)
  {
    v1 = objc_msgSend(v0, "customName");
    if (!v1)
    {
      v2 = objc_msgSend(v0, "geoMapItem");
      v3 = (uint64_t)v2;
      if (!v2)
        return v3;
      v1 = objc_msgSend(v2, "name");
      swift_unknownObjectRelease(v3);
      if (!v1)
        return 0;
    }
  }
  else if (*((_BYTE *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) == 1)
  {
    v1 = (id)MapsSuggestionsLocalizedTitleForShortcutType(objc_msgSend(v0, "type"));
  }
  else
  {
    v4 = objc_msgSend(v0, "geoMapItem");
    if (!v4
      || (v5 = v4, v1 = objc_msgSend(v4, "name"),
                   swift_unknownObjectRelease(v5),
                   !v1))
    {
      v1 = objc_msgSend(v0, "customName");
      if (!v1)
        return 0;
    }
  }
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

uint64_t sub_10020ACF8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  unsigned __int8 v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  char v39;

  v1 = v0;
  if (objc_msgSend(v0, "type") == (id)6)
  {
    v2 = objc_msgSend(v0, "identifier");
    if (v2)
    {
      v3 = v2;
      v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      v6 = v5;

      if (v4 == 0x725479627261654ELL && v6 == 0xED00007469736E61)
      {
        v9 = swift_bridgeObjectRelease(0xED00007469736E61);
      }
      else
      {
        v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, 0x725479627261654ELL, 0xED00007469736E61, 0);
        v9 = swift_bridgeObjectRelease(v6);
        if ((v8 & 1) == 0)
          goto LABEL_8;
      }
      v17 = (id)MapsSuggestionsLocalizedNearbyTransitShortSubtitleString(v9);
      if (!v17)
        return 0;
      v11 = v17;
LABEL_15:
      v10 = v11;
      goto LABEL_16;
    }
  }
LABEL_8:
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) != 1)
  {
    v12 = objc_msgSend(v1, "mapItemStorage");
    v13 = (id)MapsSuggestionsMapItemShortAddress();

    if (v13)
    {
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    v18 = objc_msgSend(v1, "mkMapItem");
    if (v18)
    {
      v19 = v18;
      v20 = objc_msgSend(v18, "_isMapItemTypeBusiness");

    }
    else
    {
      v20 = 0;
    }
    v21 = objc_msgSend(v1, "mapItemStorage");
    if (!v21
      || (v22 = v21, v23 = objc_msgSend(v21, "name"), v22, !v23))
    {
LABEL_28:
      if (v16)
        return v14;
      return 0;
    }
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    v27 = objc_msgSend(v1, "customName");
    if (!v27
      || (v27, objc_msgSend(v1, "type") == (id)2)
      || objc_msgSend(v1, "type") == (id)3
      || objc_msgSend(v1, "type") == (id)5)
    {
      swift_bridgeObjectRelease(v26);
      goto LABEL_28;
    }
    v29 = objc_msgSend(v1, "mapItemStorage");
    v30 = (id)MapsSuggestionsMapItemCityName();

    if (v30)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      v32 = v31;
    }
    else
    {
      v32 = 0;
    }
    v33 = objc_msgSend(v1, "mapItemStorage");
    v34 = (id)MapsSuggestionsMapItemStreetWithNumber();

    if (v34)
    {
      v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
      v37 = v36;

      if ((v20 & 1) != 0)
      {
        if (v37)
        {
          if (v35 == v24 && v37 == v26)
          {

            swift_bridgeObjectRelease_n(v26, 2);
            goto LABEL_45;
          }
          v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v24, v26, 0);
          swift_bridgeObjectRelease(v37);
          if ((v39 & 1) != 0)
          {
            swift_bridgeObjectRelease(v26);

LABEL_45:
            swift_bridgeObjectRelease(v32);
            if (v16)
              return v14;
            return 0;
          }
        }
        goto LABEL_41;
      }
    }
    else
    {
      if ((v20 & 1) != 0)
      {
LABEL_41:
        if (!v32)
        {
          swift_bridgeObjectRelease(v26);

          if (v16)
            return v14;
          return 0;
        }
        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease(v16);
        v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v26);
        v11 = (id)MapsSuggestionsLocalizedShortcutSubString(v38, v30);

        goto LABEL_15;
      }
      v37 = 0;
    }
    swift_bridgeObjectRelease(v26);

    swift_bridgeObjectRelease(v37);
    goto LABEL_45;
  }
  v10 = (id)MapsSuggestionsLocalizedAddShortcutString();
  v11 = v10;
LABEL_16:
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);

  return v14;
}

id sub_10020B154()
{
  void *v0;
  id v1;
  id result;
  void *v3;
  void *v4;
  id v5;

  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) & 1) != 0)
    return objc_msgSend(v0, "styleAttributes");
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) & 1) != 0)
    return objc_msgSend(v0, "styleAttributes");
  v1 = objc_msgSend(v0, "type");
  if (v1 == (id)6)
    return objc_msgSend(v0, "styleAttributes");
  v3 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter(v1);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, "_styleAttributes");

    if (v5)
      return v5;
  }
  result = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "markerStyleAttributes");
  v5 = result;
  if (result)
    return v5;
  __break(1u);
  return result;
}

id sub_10020B25C()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v1 = objc_msgSend(v0, "type");
  switch((unint64_t)v1)
  {
    case 0uLL:
    case 1uLL:
      v2 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter(v1);
      if (!v2
        || (v3 = v2, v4 = objc_msgSend(v2, "_styleAttributes"),
                     v3,
                     !v4))
      {
        v4 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "markerStyleAttributes");
        if (!v4)
        {
          __break(1u);
          goto LABEL_6;
        }
      }
      return v4;
    case 2uLL:
LABEL_6:
      v4 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "homeStyleAttributes");
      if (!v4)
      {
        __break(1u);
        goto LABEL_8;
      }
      return v4;
    case 3uLL:
LABEL_8:
      v1 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "workStyleAttributes");
      v4 = v1;
      if (!v1)
      {
        __break(1u);
        goto LABEL_10;
      }
      return v4;
    case 5uLL:
      goto LABEL_14;
    case 6uLL:
      goto LABEL_16;
    default:
LABEL_10:
      v5 = (void *)dispatch thunk of FavoriteItem.mapItemStorage.getter(v1);
      if (v5)
      {
        v6 = v5;
        v4 = objc_msgSend(v5, "_styleAttributes");

        if (v4)
          return v4;
      }
      v4 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "markerStyleAttributes");
      if (v4)
        return v4;
      __break(1u);
LABEL_14:
      v4 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "schoolStyleAttributes");
      if (v4)
        return v4;
      __break(1u);
LABEL_16:
      v4 = objc_msgSend((id)objc_opt_self(GEOFeatureStyleAttributes), "nearbyTransitStyleAttributes");
      if (!v4)
      {
        __break(1u);
        JUMPOUT(0x10020B420);
      }
      return v4;
  }
}

uint64_t sub_10020B43C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  v4 = type metadata accessor for DispatchTime(0);
  v3[15] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[16] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[17] = swift_task_alloc(v6);
  v3[18] = swift_task_alloc(v6);
  v8 = type metadata accessor for DispatchQoS.QoSClass(0, v7);
  v3[19] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[20] = v9;
  v3[21] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v3[22] = v10;
  v3[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10020B4FC, 0, 0);
}

uint64_t sub_10020B4FC()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  void *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  void *v54;
  uint8_t *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  Swift::String v64;
  Swift::String v65;
  void *object;
  NSString v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  Swift::String v78;

  v1 = *(_BYTE **)(v0 + 112);
  if ((v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] & 1) != 0)
    goto LABEL_32;
  v2 = objc_msgSend(v1, "mapItemStorage");
  *(_QWORD *)(v0 + 192) = v2;
  if (!v2)
    goto LABEL_32;
  v3 = v2;
  v4 = *(_QWORD *)(v0 + 112);
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted) != 1)
    goto LABEL_31;
  v5 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA;
  *(_QWORD *)(v0 + 200) = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA;
  if ((*(_BYTE *)(v4 + v5) & 1) != 0)
    goto LABEL_31;
  v6 = *(void **)(v0 + 104);
  if (v6)
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = v6;
    objc_msgSend(v8, "coordinate");
    v10 = v9;
    objc_msgSend(v8, "coordinate");
    v12 = v11;
    v13 = objc_msgSend(v3, "coordinate");
    v16 = j__GEOCalculateDistance(v13, v10, v12, v14, v15);
    v17 = (void *)objc_opt_self(GEOIdealTransportTypeFinder);
    objc_msgSend(v3, "coordinate");
    if ((unint64_t)(v7 + 1) > 7)
      v20 = 1;
    else
      v20 = dword_100E34124[v7 + 1];
    v61 = *(_QWORD *)(v0 + 112);
    v62 = objc_msgSend(v17, "idealTransportTypeForOrigin:destination:mapType:", v20, v10, v12, v18, v19);

    *(_QWORD *)(v61 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType) = v62;
    if (qword_101490E00 != -1)
      swift_once(&qword_101490E00, sub_1000F97F8);
    if (v16 < *(double *)&qword_1014D4980)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v63 = *(void **)(v0 + 112);
      v78._countAndFlagsBits = 0xD000000000000041;
      v78._object = (void *)0x8000000100E543C0;
      v64._object = (void *)0x8000000100E543A0;
      v64._countAndFlagsBits = 0xD000000000000019;
      v65._countAndFlagsBits = 0x79622065736F6C43;
      v65._object = (void *)0xE800000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v65, v78)._object;
      v67 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v68 = swift_bridgeObjectRelease(object).n128_u64[0];
      goto LABEL_30;
    }
    if (qword_101490E28 != -1)
      swift_once(&qword_101490E28, sub_1000F98D4);
    if (*(double *)&qword_1014D49A8 < v16
      || objc_msgSend(*(id *)(v0 + 112), "type", *(double *)&qword_1014D49A8) == (id)1)
    {
      v63 = *(void **)(v0 + 112);
      v67 = objc_msgSend((id)objc_opt_self(NSString), "_navigation_localizedStringForDistance:context:extraDetail:", 2, 1, v16);
LABEL_30:
      objc_msgSend(v63, "setSubtitle:", v67, v68);

      v3 = v67;
      goto LABEL_31;
    }
  }
  else
  {
    v16 = 0.0;
  }
  *(double *)(v0 + 208) = v16;
  if (!sub_100205F3C())
  {
LABEL_31:

LABEL_32:
    v69 = *(_QWORD *)(v0 + 168);
    v71 = *(_QWORD *)(v0 + 136);
    v70 = *(_QWORD *)(v0 + 144);
    swift_task_dealloc(*(_QWORD *)(v0 + 184));
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v21 = *(char **)(v0 + 112);
  v22 = 1;
  *(_BYTE *)(v4 + v5) = 1;
  v23 = objc_msgSend(objc_allocWithZone((Class)MKDirectionsRequest), "init");
  *(_QWORD *)(v0 + 216) = v23;
  v24 = objc_msgSend((id)objc_opt_self(MKMapItem), "mapItemForCurrentLocation");
  objc_msgSend(v23, "setSource:", v24);

  v25 = objc_msgSend(v21, "mkMapItem");
  objc_msgSend(v23, "setDestination:", v25);

  v26 = *(_QWORD *)&v21[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] - 1;
  if (v26 <= 3)
    v22 = qword_100E34148[v26];
  v28 = *(_QWORD *)(v0 + 176);
  v27 = *(_QWORD *)(v0 + 184);
  v29 = *(_QWORD *)(v0 + 160);
  v30 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 152);
  v32 = *(void **)(v0 + 112);
  objc_msgSend(v23, "setTransportType:", v22);
  v76 = objc_msgSend(objc_allocWithZone((Class)MKDirections), "initWithRequest:", v23);
  *(_QWORD *)(v0 + 224) = v76;
  v33 = swift_allocObject(&unk_1011AC028, 24, 7);
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)(v0 + 48) = sub_10020EE74;
  *(_QWORD *)(v0 + 56) = v33;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_1001BB8D4;
  *(_QWORD *)(v0 + 40) = &unk_1011AC040;
  v34 = _Block_copy((const void *)(v0 + 16));
  *(_QWORD *)(v0 + 64) = _swiftEmptyArrayStorage;
  v35 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v36 = v32;
  v37 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v38 = sub_10000E588();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 64, v37, v38, v28, v35);
  v39 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v40 = DispatchWorkItem.init(flags:block:)(v27, v34);
  *(_QWORD *)(v0 + 232) = v40;
  swift_release();
  sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104))(v30, enum case for DispatchQoS.QoSClass.default(_:), v31);
  v41 = (void *)static OS_dispatch_queue.global(qos:)(v30);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v30, v31);
  static DispatchTime.now()(v42, v43);
  if (qword_101490E10 != -1)
    swift_once(&qword_101490E10, sub_1000F9850);
  v45 = *(_QWORD *)(v0 + 136);
  v44 = *(_QWORD *)(v0 + 144);
  v46 = *(_QWORD *)(v0 + 120);
  v47 = *(_QWORD *)(v0 + 128);
  + infix(_:_:)(v45, *(double *)&qword_1014D4990);
  v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v48(v45, v46);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v44, v40);

  v48(v44, v46);
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v49 = *(void **)(v0 + 112);
  v50 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 240) = sub_10000E918(v50, (uint64_t)qword_1014D4938);
  v51 = Logger.logObject.getter(v49);
  v52 = static os_log_type_t.default.getter();
  v53 = os_log_type_enabled(v51, v52);
  v54 = *(void **)(v0 + 112);
  if (v53)
  {
    v55 = (uint8_t *)swift_slowAlloc(12, -1);
    v56 = swift_slowAlloc(32, -1);
    v77 = v56;
    *(_DWORD *)v55 = 136315138;
    v57 = objc_msgSend(v54, "debugDescription");
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
    v60 = v59;

    *(_QWORD *)(v0 + 88) = sub_1000C28FC(v58, v60, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v55 + 4, v55 + 12);
    swift_bridgeObjectRelease(v60);

    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Refreshing ETA: %s", v55, 0xCu);
    swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1, -1);
    swift_slowDealloc(v55, -1, -1);
  }
  else
  {

  }
  v73 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 248) = v73;
  *(_QWORD *)(v73 + 16) = v76;
  v74 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 256) = v74;
  v75 = sub_100008B04((uint64_t *)&unk_1014A0BA8);
  *v74 = v0;
  v74[1] = sub_10020BD58;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD00000000000001BLL, 0x8000000100E54380, sub_10020EE94, v73, v75);
}

uint64_t sub_10020BD58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 256);
  *(_QWORD *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10020C12C;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 248));
    v4 = sub_10020BDC4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10020BDC4(__n128 a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  NSString v7;
  void *v8;
  double v9;
  void *v10;
  void *v11;
  void *v12;
  char *v13;
  char *v14;
  Swift::String v15;
  Swift::String v16;
  void *object;
  NSString v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v33;

  v2 = *(void **)(v1 + 72);
  dispatch thunk of DispatchWorkItem.cancel()(a1);
  if (!v2)
  {
    v7 = *(NSString *)(v1 + 224);
    v8 = *(void **)(v1 + 216);

    swift_release();
LABEL_21:

    v14 = (char *)(*(_QWORD *)(v1 + 112) + *(_QWORD *)(v1 + 200));
    goto LABEL_22;
  }
  v3 = *(_QWORD *)(v1 + 104);
  objc_msgSend(v2, "expectedTravelTime");
  v5 = v4;
  if (v3)
  {
    v6 = *(double *)(v1 + 208);
  }
  else
  {
    objc_msgSend(v2, "distance");
    v6 = v9;
  }
  if (qword_101490E00 != -1)
    swift_once(&qword_101490E00, sub_1000F97F8);
  *(_BYTE *)(*(_QWORD *)(v1 + 112) + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere) = v6 < *(double *)&qword_1014D4980;
  if (qword_101490E08 != -1)
    swift_once(&qword_101490E08, sub_1000F9824);
  if (v5 >= *(double *)&qword_1014D4988)
  {
    v19 = objc_msgSend(objc_allocWithZone((Class)NSDateComponentsFormatter), "init");
    objc_msgSend(v19, "setAllowedUnits:", 112);
    objc_msgSend(v19, "setMaximumUnitCount:", 2);
    objc_msgSend(v19, "setZeroFormattingBehavior:", 2);
    if (v5 >= 3600.0)
      v20 = 1;
    else
      v20 = 2;
    objc_msgSend(v19, "setUnitsStyle:", v20);
    v21 = objc_msgSend(v19, "stringFromTimeInterval:", v5);
    if (v21)
    {
      v22 = v21;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      v7 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v25 = swift_bridgeObjectRelease(v24).n128_u64[0];
    }
    else
    {

      v7 = 0;
    }
    v26 = *(void **)(v1 + 224);
    v27 = *(void **)(v1 + 216);
    v28 = *(void **)(v1 + 192);
    objc_msgSend(*(id *)(v1 + 112), "setSubtitle:", v7, v25);

    swift_release();
    goto LABEL_21;
  }
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v10 = *(void **)(v1 + 224);
  v11 = *(void **)(v1 + 216);
  v12 = *(void **)(v1 + 192);
  v13 = *(char **)(v1 + 112);
  v14 = &v13[*(_QWORD *)(v1 + 200)];
  v33._countAndFlagsBits = 0xD000000000000041;
  v33._object = (void *)0x8000000100E543C0;
  v15._object = (void *)0x8000000100E543A0;
  v15._countAndFlagsBits = 0xD000000000000019;
  v16._countAndFlagsBits = 0x79622065736F6C43;
  v16._object = (void *)0xE800000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v16, v33)._object;
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setSubtitle:", v18, swift_bridgeObjectRelease(object).n128_f64[0]);

  swift_release();
LABEL_22:
  *v14 = 0;
  v29 = *(_QWORD *)(v1 + 168);
  v31 = *(_QWORD *)(v1 + 136);
  v30 = *(_QWORD *)(v1 + 144);
  swift_task_dealloc(*(_QWORD *)(v1 + 184));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10020C12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v17;
  NSObject *v18;

  v1 = *(_QWORD *)(v0 + 264);
  swift_task_dealloc(*(_QWORD *)(v0 + 248));
  swift_release();
  swift_errorRetain(v1);
  v2 = swift_errorRetain(v1);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(_QWORD *)(v0 + 264);
    v17 = *(void **)(v0 + 224);
    v18 = *(NSObject **)(v0 + 216);
    v6 = *(void **)(v0 + 192);
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    swift_errorRetain(v5);
    v9 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v0 + 80) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v7 + 4, v7 + 12);
    *v8 = v9;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error updating ETA: %@", v7, 0xCu);
    v10 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v8, 1, v10);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

    v3 = v18;
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 264);
    v12 = *(void **)(v0 + 216);
    v11 = *(void **)(v0 + 224);

    swift_errorRelease(v5);
    swift_errorRelease(v5);
  }
  swift_errorRelease(v5);

  *(_BYTE *)(*(_QWORD *)(v0 + 112) + *(_QWORD *)(v0 + 200)) = 0;
  v13 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 184));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10020C328(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  objc_msgSend(a1, "setSubtitle:", 0);
  *((_BYTE *)a1 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere) = 0;
  if (qword_101490DC8 != -1)
    swift_once(&qword_101490DC8, sub_1000F9670);
  v2 = type metadata accessor for Logger(0);
  sub_10000E918(v2, (uint64_t)qword_1014D4938);
  v11 = a1;
  v3 = Logger.logObject.getter(v11);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend(v11, "debugDescription");
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v12 = sub_1000C28FC(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Timed out refreshing ETA: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_10020C664(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  v8 = dword_1014A0BA4;
  v9 = a2;
  a4;
  v10 = (_QWORD *)swift_task_alloc(v8);
  v4[5] = v10;
  *v10 = v4;
  v10[1] = sub_10020C6E4;
  return sub_10020B43C(a1, (uint64_t)a2);
}

uint64_t sub_10020C6E4()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  void *v3;
  uint64_t v5;

  v1 = *(void (***)(_QWORD))(*v0 + 32);
  v3 = *(void **)(*v0 + 16);
  v2 = *(void **)(*v0 + 24);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_10020C9C4()
{
  unsigned __int16 v0;

  v0 = dispatch thunk of FavoriteItem.type.getter();
  if (v0 > 6u)
    return 0;
  else
    return qword_100E34168[(__int16)v0];
}

id sub_10020CACC(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void sub_10020CB48(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (a3)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = a1;
  a4(v6, v8);

}

uint64_t sub_10020D00C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v8 = v7;
  v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_10020D168()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  Swift::String v8;
  id v9;
  id v10;
  id v11;

  v1 = objc_msgSend(v0, "customName");
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

    if (objc_msgSend(v0, "type") == (id)6)
      return v3;
    swift_bridgeObjectRelease(v5);
  }
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup) == 1)
  {
    v6 = (id)NSStringFromMapsSuggestionsShortcutType(objc_msgSend(v0, "type"));
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);

    v8._countAndFlagsBits = 0x70757465535FLL;
    v8._object = (void *)0xE600000000000000;
    String.append(_:)(v8);
    return v7;
  }
  else
  {
    v9 = objc_msgSend(v0, "geoMapItem");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "coordinate");
      v11 = objc_msgSend(v0, "identifierForCoordinateWithCoordinate:");
      v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      swift_unknownObjectRelease(v10);

    }
    else
    {
      return 0;
    }
  }
  return v3;
}

void sub_10020D2FC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD aBlock[6];

  v4 = sub_100008B04(&qword_1014A0BB8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1011AC078, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_10020EEAC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000142F0;
  aBlock[3] = &unk_1011AC090;
  v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, "calculateETAWithCompletionHandler:", v11);
  _Block_release(v11);
}

uint64_t sub_10020D42C(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  void *v6;

  if (a2)
  {
    v6 = a2;
    swift_errorRetain(a2);
    v2 = sub_100008B04(&qword_1014A0BB8);
    return CheckedContinuation.resume(throwing:)(&v6, v2);
  }
  else
  {
    v6 = a1;
    v4 = a1;
    v5 = sub_100008B04(&qword_1014A0BB8);
    return CheckedContinuation.resume(returning:)(&v6, v5);
  }
}

id sub_10020D49C()
{
  _BYTE *v0;
  int v1;
  id v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSString v10;
  NSString v11;
  double v12;
  uint64_t v13;
  uint64_t v14;

  if (v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled] != 1)
    return 0;
  v1 = (unsigned __int16)FavoriteItemSourceType.rawValue.getter(objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem], "sourceType"));
  if (v1 == (unsigned __int16)FavoriteItemSourceType.rawValue.getter(1)
    || objc_msgSend(v0, "type") != (id)2 && objc_msgSend(v0, "type") != (id)3 && objc_msgSend(v0, "type") != (id)5)
  {
    return 0;
  }
  v4 = objc_msgSend(v0, "geoMapItem");
  v2 = v4;
  if (!v4)
    return v2;
  v5 = objc_msgSend(v4, "addressObject");
  swift_unknownObjectRelease(v2);
  if (!v5)
    return 0;
  v2 = objc_msgSend(v5, "cnPostalAddress");

  if (v2)
  {
    sub_100104650((unint64_t)objc_msgSend(v0, "type"));
    v7 = v6;
    v8 = objc_allocWithZone((Class)CNLabeledValue);
    v9 = v2;
    v10 = String._bridgeToObjectiveC()();
    v2 = objc_msgSend(v8, "initWithLabel:value:", v10, v9, swift_bridgeObjectRelease(v7).n128_f64[0]);

    v11 = objc_msgSend(v2, "identifier");
    if (!v11)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v14 = v13;
      v11 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v12 = swift_bridgeObjectRelease(v14).n128_u64[0];
    }
    objc_msgSend(v0, "setShortcutIdentifier:", v11, v12);

  }
  return v2;
}

uint64_t sub_10020D6B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_10000DD08;
  return v6();
}

uint64_t sub_10020D704(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_10000DD08;
  return v7();
}

uint64_t sub_10020D758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD v20[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_100010CC4(a1, &qword_101494070);
    v9 = 7168;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
    {
LABEL_3:
      v11 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v10);
      swift_unknownObjectRetain(v10);
      v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
      v15 = v14;
      swift_unknownObjectRelease(v10);
      goto LABEL_6;
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v9 = v16 | 0x1C00;
    v10 = *(_QWORD *)(a3 + 16);
    if (v10)
      goto LABEL_3;
  }
  v13 = 0;
  v15 = 0;
LABEL_6:
  v17 = swift_allocObject(&unk_1011AC000, 32, 7);
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if (v15 | v13)
  {
    v20[0] = 0;
    v20[1] = 0;
    v18 = v20;
    v20[2] = v13;
    v20[3] = v15;
  }
  else
  {
    v18 = 0;
  }
  return swift_task_create(v9, v18, (char *)&type metadata for () + 8, &unk_1014A0B98, v17);
}

_QWORD *sub_10020D8A4(_QWORD *a1)
{
  return sub_1000A72A4(0, a1[2], 0, a1);
}

uint64_t sub_10020D8BC(unint64_t a1)
{
  return sub_1000A8304(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_10020D8D0(_QWORD *a1)
{
  return sub_1000A877C(0, a1[2], 0, a1);
}

uint64_t sub_10020D8E4(unint64_t a1)
{
  return sub_1000A8AC8(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_10020D8F8(_QWORD *a1)
{
  return sub_1000A89A8(0, a1[2], 0, a1);
}

uint64_t sub_10020D90C(unint64_t a1)
{
  return sub_1000A7E94(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_10020D920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_10020D988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v7 = a1;
    v6 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v6 < 0)
    v24 = v6;
  else
    v24 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v9 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v6);
  if (v9 < v5)
    goto LABEL_34;
LABEL_4:
  v9 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v6 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v6 < 0)
      v26 = v6;
    else
      v26 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v14 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v6);
    goto LABEL_15;
  }
LABEL_37:
  if (v6 < 0)
    v25 = v6;
  else
    v25 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  v10 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v6);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v6 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v6;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v13 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v6);
  v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v6);
  swift_bridgeObjectRelease(*v4);
  *v4 = v6;
  v13 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v7);
  v16 = sub_10000E4BC(0, (unint64_t *)&qword_101491C90, GEOComposedWaypoint_ptr);
  v17 = (char *)swift_arrayDestroy(v15, v9, v16);
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return specialized Array._endMutation()(v17);
  }
  if (!((unint64_t)v6 >> 62))
  {
    v18 = *(_QWORD *)(v13 + 16);
    v19 = v18 - v5;
    if (!__OFSUB__(v18, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v6 < 0)
    v27 = v6;
  else
    v27 = v13;
  swift_bridgeObjectRetain(v6);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v6);
  v19 = v28 - v5;
  if (__OFSUB__(v28, v5))
    goto LABEL_52;
LABEL_21:
  if ((v19 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v15 + 1);
    v20 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v20 || v17 >= &v20[8 * v19])
      v17 = (char *)memmove(v17, v20, 8 * v19);
    if (!((unint64_t)v6 >> 62))
    {
      v21 = *(_QWORD *)(v13 + 16);
      v22 = v21 + v8;
      if (!__OFADD__(v21, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v22;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v6 < 0)
      v29 = v6;
    else
      v29 = v13;
    swift_bridgeObjectRetain(v6);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    v17 = (char *)swift_bridgeObjectRelease(v6);
    v22 = v30 + v8;
    if (!__OFADD__(v30, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10020DC70(uint64_t a1, int64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1000A877C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = (uint64_t)&v5[5 * a1 + 4];
  v15 = sub_100008B04(&qword_101497910);
  swift_arrayDestroy(v14, v8, v15);
  if (!v9)
    goto LABEL_20;
  v16 = v5[2];
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_26;
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v14 + 40);
    v20 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v20 || v19 >= &v20[40 * v18])
      memmove(v19, v20, 40 * v18);
    v21 = v5[2];
    v17 = __OFADD__(v21, v9);
    v22 = v21 + v9;
    if (!v17)
    {
      v5[2] = v22;
LABEL_20:
      sub_100084C44(a3, v14);
      return sub_100010CC4(a3, &qword_1014A0C90);
    }
    goto LABEL_27;
  }
LABEL_28:
  v24 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v24, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10020DE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v7);
  if (v9 < v5)
    goto LABEL_34;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v26 = v7;
    else
      v26 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v14 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v7);
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v25 = v7;
  else
    v25 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v7);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v7);
  v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v7);
  swift_bridgeObjectRelease(*v4);
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  v16 = type metadata accessor for InfoCardButtonConfiguration();
  v17 = (char *)swift_arrayDestroy(v15, v9, v16);
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return specialized Array._endMutation()(v17);
  }
  if (!((unint64_t)v7 >> 62))
  {
    v18 = *(_QWORD *)(v13 + 16);
    v19 = v18 - v5;
    if (!__OFSUB__(v18, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v7 < 0)
    v27 = v7;
  else
    v27 = v13;
  swift_bridgeObjectRetain(v7);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v7);
  v19 = v28 - v5;
  if (__OFSUB__(v28, v5))
    goto LABEL_52;
LABEL_21:
  if ((v19 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v15 + 1);
    v20 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v20 || v17 >= &v20[8 * v19])
      v17 = (char *)memmove(v17, v20, 8 * v19);
    if (!((unint64_t)v7 >> 62))
    {
      v21 = *(_QWORD *)(v13 + 16);
      v22 = v21 + v8;
      if (!__OFADD__(v21, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v22;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v7 < 0)
      v29 = v7;
    else
      v29 = v13;
    swift_bridgeObjectRetain(v7);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    v17 = (char *)swift_bridgeObjectRelease(v7);
    v22 = v30 + v8;
    if (!__OFADD__(v30, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10020E0F4(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  char v28;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1000A8304(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = type metadata accessor for RefinementsBarButtonViewModel(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy(v18, v8, v14);
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    v28 = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v28, 1046, 0);
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack(v21, v22, v20, v14);
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront(v21);
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    sub_100021908(a3, v18);
  return sub_100010CC4(a3, &qword_10149B2F8);
}

uint64_t sub_10020E2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  char v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v6 += v9;
    swift_bridgeObjectRetain(v5);
    v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(isUniquelyReferenced_nonNull_native, v6, 1, v5);
    swift_bridgeObjectRelease(*v3);
    *v3 = v5;
  }
  v13 = (_QWORD *)(v5 + 32 + 8 * a1);
  v14 = sub_100008B04(&qword_1014A0C98);
  v15 = (char *)swift_arrayDestroy(v13, v8, v14);
  if (!v9)
    goto LABEL_19;
  v16 = *(_QWORD *)(v5 + 16);
  v17 = __OFSUB__(v16, a2);
  v18 = v16 - a2;
  if (v17)
    goto LABEL_25;
  if ((v18 & 0x8000000000000000) == 0)
  {
    v15 = (char *)(v13 + 1);
    v19 = (char *)(v5 + 32 + 8 * a2);
    if (v13 + 1 != (_QWORD *)v19 || v15 >= &v19[8 * v18])
      v15 = (char *)memmove(v15, v19, 8 * v18);
    v20 = *(_QWORD *)(v5 + 16);
    v17 = __OFADD__(v20, v9);
    v21 = v20 + v9;
    if (!v17)
    {
      *(_QWORD *)(v5 + 16) = v21;
LABEL_19:
      *v13 = a3;
      return specialized Array._endMutation()(v15);
    }
    goto LABEL_26;
  }
LABEL_27:
  v23 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v23, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10020E464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v7 < 0)
    v24 = v7;
  else
    v24 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v7);
  if (v9 < v5)
    goto LABEL_34;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v7 < 0)
      v26 = v7;
    else
      v26 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v14 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v7);
    goto LABEL_15;
  }
LABEL_37:
  if (v7 < 0)
    v25 = v7;
  else
    v25 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v10 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v7);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v7 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v7);
  v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v7);
  swift_bridgeObjectRelease(*v4);
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  v16 = sub_100008B04((uint64_t *)&unk_1014A0C80);
  v17 = (char *)swift_arrayDestroy(v15, v9, v16);
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return specialized Array._endMutation()(v17);
  }
  if (!((unint64_t)v7 >> 62))
  {
    v18 = *(_QWORD *)(v13 + 16);
    v19 = v18 - v5;
    if (!__OFSUB__(v18, v5))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v7 < 0)
    v27 = v7;
  else
    v27 = v13;
  swift_bridgeObjectRetain(v7);
  v28 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v7);
  v19 = v28 - v5;
  if (__OFSUB__(v28, v5))
    goto LABEL_52;
LABEL_21:
  if ((v19 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v15 + 1);
    v20 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v20 || v17 >= &v20[8 * v19])
      v17 = (char *)memmove(v17, v20, 8 * v19);
    if (!((unint64_t)v7 >> 62))
    {
      v21 = *(_QWORD *)(v13 + 16);
      v22 = v21 + v8;
      if (!__OFADD__(v21, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v22;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v7 < 0)
      v29 = v7;
    else
      v29 = v13;
    swift_bridgeObjectRetain(v7);
    v30 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease(v7);
    v22 = v30 + v8;
    if (!__OFADD__(v30, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10020E740@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_10020E75C(uint64_t a1, uint64_t a2)
{
  return sub_10020E89C(a1, a2, 0, (uint64_t (*)(uint64_t))type metadata accessor for InfoCardButtonConfiguration);
}

id sub_10020E76C(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_cachedSubtitle];
  *v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isUpdatingETA] = 0;
  v4 = &v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_analyticsGrouping];
  *v4 = 0x6966654472657355;
  v4[1] = 0xEB0000000064656ELL;
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_number] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isShortcutForSetup] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isPersisted] = 0;
  v1[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isAlreadyThere] = 0;
  v5 = OBJC_IVAR____TtC4Maps16MapsFavoriteItem_isMeCardWritebackEnabled;
  v6 = qword_101490E18;
  v7 = v1;
  if (v6 != -1)
    swift_once(&qword_101490E18, sub_1000F987C);
  v7[v5] = byte_1014D4998;
  *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_transportType] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps16MapsFavoriteItem_favoriteItem] = a1;
  v8 = a1;

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for MapsFavoriteItem();
  return objc_msgSendSuper2(&v10, "init");
}

uint64_t sub_10020E88C(uint64_t a1, uint64_t a2)
{
  return sub_10020E89C(a1, a2, 0, (uint64_t (*)(uint64_t))&type metadata accessor for ServerEvaluationStatus);
}

uint64_t sub_10020E89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = a4;
    v8 = a3;
    v4 = a2;
    v7 = a1;
    v9 = *v5;
    if (!((unint64_t)*v5 >> 62))
    {
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  if (v9 < 0)
    v19 = v9;
  else
    v19 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v9);
  if (v20 < v4)
    goto LABEL_18;
LABEL_4:
  v6 = v4 - v7;
  if (__OFSUB__(v4, v7))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v7 - v4;
  if (__OFSUB__(0, v6))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    if (v9 < 0)
      v21 = v9;
    else
      v21 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v9);
    v13 = v22 + v39;
    if (!__OFADD__(v22, v39))
      goto LABEL_8;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *v5;
  v39 = v7 - v4;
  v40 = v7;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_21;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 - v6;
  if (__OFADD__(v12, v11))
    goto LABEL_26;
LABEL_8:
  v9 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v9;
  v15 = 0;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
    goto LABEL_28;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
  if (v13 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    v17 = v8;
    v18 = v10;
    goto LABEL_33;
  }
LABEL_27:
  v15 = 1;
LABEL_28:
  v17 = v8;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v23 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v23 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = v10;
  if (v23 <= v13)
    v23 = v13;
  swift_bridgeObjectRetain(v9);
  v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v15, v23, 1, v9);
  swift_bridgeObjectRelease(*v5);
  *v5 = v9;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_33:
  v24 = (char *)(v16 + 32 + 8 * v40);
  v25 = v18(v17);
  v26 = (void *)swift_arrayDestroy(v24, v6, v25);
  v27 = v39;
  if (!v39)
    return specialized Array._endMutation()(v26);
  if (!((unint64_t)v9 >> 62))
  {
    v28 = *(_QWORD *)(v16 + 16);
    v29 = v28 - v4;
    if (!__OFSUB__(v28, v4))
      goto LABEL_36;
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v9 < 0)
    v35 = v9;
  else
    v35 = v16;
  swift_bridgeObjectRetain(v9);
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  v26 = (void *)swift_bridgeObjectRelease(v9);
  v27 = v39;
  v29 = v36 - v4;
  if (__OFSUB__(v36, v4))
    goto LABEL_53;
LABEL_36:
  if ((v29 & 0x8000000000000000) == 0)
  {
    v30 = (char *)(v16 + 32 + 8 * v4);
    if (v40 != v4 || v24 >= &v30[8 * v29])
    {
      v26 = memmove(v24, v30, 8 * v29);
      v27 = v39;
    }
    if (!((unint64_t)v9 >> 62))
    {
      v31 = *(_QWORD *)(v16 + 16);
      v32 = v31 + v27;
      if (!__OFADD__(v31, v27))
      {
LABEL_42:
        *(_QWORD *)(v16 + 16) = v32;
        return specialized Array._endMutation()(v26);
      }
      goto LABEL_59;
    }
LABEL_54:
    if (v9 < 0)
      v37 = v9;
    else
      v37 = v16;
    swift_bridgeObjectRetain(v9);
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    v26 = (void *)swift_bridgeObjectRelease(v9);
    v32 = v38 + v39;
    if (!__OFADD__(v38, v39))
      goto LABEL_42;
LABEL_59:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_10020EBA4(double a1, double a2)
{
  double v2;
  double v3;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1 * 100000.0;
  if (v2 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v3 = a2 * 100000.0;
  if ((*(_QWORD *)&v2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_12;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 9.22337204e18)
  {
    v5 = (double)((uint64_t)v2 / 5) * 5.0 / 100000.0;
    v6 = (double)((uint64_t)v3 / 5) * 5.0 / 100000.0;
    v7 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v8 = swift_allocObject(v7, 112, 7);
    *(_OWORD *)(v8 + 16) = xmmword_100E22F70;
    *(_QWORD *)(v8 + 56) = &type metadata for Double;
    *(_QWORD *)(v8 + 64) = &protocol witness table for Double;
    *(double *)(v8 + 32) = v5;
    *(_QWORD *)(v8 + 96) = &type metadata for Double;
    *(_QWORD *)(v8 + 104) = &protocol witness table for Double;
    *(double *)(v8 + 72) = v6;
    String.init(format:_:)(0x352E252C66352E25, 0xE900000000000066, v8);
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_10020ED08()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10020ED3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1014A0B64);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000DD08;
  return ((uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_1014A0B60 + dword_1014A0B60))(v2, v3, v5, v4);
}

uint64_t sub_10020EDBC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10020EDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1014A0B94);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1014A0B90 + dword_1014A0B90))(a1, v4);
}

uint64_t sub_10020EE50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10020EE74()
{
  uint64_t v0;

  sub_10020C328(*(void **)(v0 + 16));
}

double sub_10020EE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10020EE8C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10020EE94(uint64_t a1)
{
  uint64_t v1;

  sub_10020D2FC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10020EEA0()
{
  return sub_1001087AC(&qword_1014A0BB8);
}

uint64_t sub_10020EEAC(void *a1, void *a2)
{
  sub_100008B04(&qword_1014A0BB8);
  return sub_10020D42C(a1, a2);
}

uint64_t sub_10020EEFC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10020EF20()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10020EF4C(uint64_t a1)
{
  uint64_t v1;

  return sub_100208D74(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10020EF58()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  swift_errorRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10020EF94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc(dword_1014A0BCC);
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_QWORD *)(v4 + 136) = v2;
  *(_QWORD *)(v4 + 144) = v3;
  *(_OWORD *)(v4 + 120) = v5;
  return swift_task_switch(sub_100208E78, 0, 0);
}

uint64_t sub_10020F008()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1014A0BE4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000C0E0;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1014A0BE0 + dword_1014A0BE0))(v2, v3);
}

void sub_10020F074(uint64_t a1)
{
  uint64_t v1;

  sub_100208504(a1, *(void **)(v1 + 16));
}

uint64_t sub_10020F07C()
{
  return sub_1001087AC(&qword_1014A0C00);
}

uint64_t sub_10020F088()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10020F0B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = *(_BYTE *)(v0 + 16);
  v4 = *(void **)(v0 + 24);
  v3 = *(void **)(v0 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1014A0C0C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_10000DD08;
  return ((uint64_t (*)(char, void *, void *))((char *)&dword_1014A0C08 + dword_1014A0C08))(v2, v4, v3);
}

uint64_t sub_10020F12C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1014A0C3C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DD08;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1014A0C38 + dword_1014A0C38))(v2, v3);
}

uint64_t sub_10020F19C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_1014A0C5C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000DD08;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1014A0C58 + dword_1014A0C58))(v2, v3);
}

char *sub_10020F248(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  id v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  objc_super v29;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_attributedText] = 0;
  v11 = objc_allocWithZone((Class)UILabel);
  v12 = v5;
  v13 = objc_msgSend(v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_label] = v13;
  v14 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 6);
  v15 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v14);
  *(_QWORD *)&v12[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_blurView] = v15;
  v16 = objc_msgSend((id)objc_opt_self(UIVibrancyEffect), "effectForBlurEffect:style:", v14, 1);
  v17 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v16);

  *(_QWORD *)&v12[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_labelVibrantView] = v17;
  v29.receiver = v12;
  v29.super_class = ObjectType;
  v18 = (char *)objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v18, "setClipsToBounds:", 1);
  v19 = *(void **)&v18[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_label];
  objc_msgSend(v19, "setNumberOfLines:", 1);
  v20 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCaption2);
  objc_msgSend(v19, "setFont:", v20);

  v21 = *(void **)&v18[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_blurView];
  objc_msgSend(v18, "addSubview:", v21);
  v22 = *(void **)&v18[OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_labelVibrantView];
  objc_msgSend(v22, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v23 = objc_msgSend(v22, "contentView");
  objc_msgSend(v23, "addSubview:", v19);

  v24 = objc_msgSend(v21, "contentView");
  objc_msgSend(v24, "addSubview:", v22);

  v25 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v26 = objc_msgSend(v25, "userInterfaceLayoutDirection");

  if (qword_101491190 != -1)
    swift_once(&qword_101491190, sub_10020F8F8);
  if (v26 == (id)1)
    v27 = 2;
  else
    v27 = 1;
  objc_msgSend(v21, "_setCornerRadius:continuous:maskedCorners:", 1, v27, *(double *)&qword_1014A0CB0);
  sub_10020F570();

  return v18;
}

void sub_10020F570()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  Class isa;
  uint64_t v19;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_labelVibrantView);
  v2 = *(id *)(v0 + OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_label);
  v3 = objc_msgSend(v1, "contentView");
  v4 = objc_msgSend(objc_allocWithZone((Class)MUEdgeLayout), "initWithItem:container:", v2, v3);

  v5 = *(void **)(v0 + OBJC_IVAR____TtC4Maps26UGCPhotoThumbnailBadgeView_blurView);
  v6 = v1;
  v7 = objc_msgSend(v5, "contentView");
  if (qword_101491180 != -1)
    swift_once(&qword_101491180, sub_10020F8D0);
  v8 = *(double *)&qword_1014A0CA0;
  v9 = *(double *)&qword_1014A0CA0;
  if (qword_101491188 != -1)
  {
    swift_once(&qword_101491188, sub_10020F8E0);
    v9 = *(double *)&qword_1014A0CA0;
  }
  v10 = objc_msgSend(objc_allocWithZone((Class)MUEdgeLayout), "initWithItem:container:insets:", v6, v7, v8, *(double *)&qword_1014A0CA8, v9, *(double *)&qword_1014A0CA8);

  v11 = objc_msgSend(objc_allocWithZone((Class)MUEdgeLayout), "initWithItem:container:", v5, v0);
  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = sub_100008B04((uint64_t *)&unk_101493B10);
  v14 = swift_allocObject(v13, 56, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100E25080;
  *(_QWORD *)(v14 + 32) = v4;
  *(_QWORD *)(v14 + 40) = v10;
  *(_QWORD *)(v14 + 48) = v11;
  v19 = v14;
  specialized Array._endMutation()(v14);
  sub_10020F9BC();
  v15 = v4;
  v16 = v10;
  v17 = v11;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "_mapsui_activateLayouts:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

}

void sub_10020F8D0()
{
  qword_1014A0CA0 = 0x4008000000000000;
}

double sub_10020F8E0()
{
  double result;

  result = kMUPlaceSystemSpacing;
  qword_1014A0CA8 = kMUPlaceSystemSpacing;
  return result;
}

void sub_10020F8F8()
{
  qword_1014A0CB0 = 0x4010000000000000;
}

uint64_t type metadata accessor for UGCPhotoThumbnailBadgeView()
{
  return objc_opt_self(_TtC4Maps26UGCPhotoThumbnailBadgeView);
}

unint64_t sub_10020F9BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014A0D00;
  if (!qword_1014A0D00)
  {
    v1 = objc_opt_self(MUConstraintLayout);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1014A0D00);
  }
  return result;
}

uint64_t sub_10020F9F8()
{
  return sub_10000BC84(&qword_1014A0D08, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34218);
}

uint64_t type metadata accessor for PlaceEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_1014A0E08;
  if (!qword_1014A0E08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PlaceEntity);
  return result;
}

uint64_t sub_10020FA60()
{
  return sub_10000BC84(&qword_1014A0D10, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34250);
}

uint64_t sub_10020FA8C()
{
  return sub_10000BC84(&qword_1014A0D18, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34280);
}

unint64_t sub_10020FABC()
{
  unint64_t result;

  result = qword_1014A0D20;
  if (!qword_1014A0D20)
  {
    result = swift_getWitnessTable(aA_1, &type metadata for PlaceQuery);
    atomic_store(result, (unint64_t *)&qword_1014A0D20);
  }
  return result;
}

void sub_10020FB00(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  double v67;
  id v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  double v100;
  id v101;
  void *v102;
  uint64_t v103;
  id v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  void *v129;
  int v130;
  uint64_t v131;
  _QWORD v132[4];

  v131 = a2;
  v129 = a1;
  v4 = type metadata accessor for URL(0);
  v120 = *(_QWORD *)(v4 - 8);
  v121 = v4;
  __chkstk_darwin(v4);
  v114 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04((uint64_t *)&unk_101499B30);
  __chkstk_darwin(v6);
  v118 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v119 = (char *)&v112 - v9;
  v10 = type metadata accessor for PlaceEntity(0);
  __chkstk_darwin(v10);
  v113 = (uint64_t)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v115 = (uint64_t)&v112 - v13;
  v14 = type metadata accessor for UUID(0);
  v15 = *(_QWORD *)(v14 - 8);
  v125 = v14;
  v126 = v15;
  v16 = v15;
  v17 = __chkstk_darwin(v14);
  v128 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for LocalizedStringResource.BundleDescription(0, v17);
  v19 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v21 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Locale(0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for String.LocalizationValue(0, v23);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for LocalizedStringResource(0, v27);
  v31 = __chkstk_darwin(v30);
  v33 = (char *)&v112 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  v130 = 1;
  *(_BYTE *)(a3 + 24) = 1;
  v122 = a3;
  v123 = v10;
  v127 = a3 + *(int *)(v10 + 24);
  (*(void (**)(__n128))(v16 + 56))(v31);
  v34 = *(int *)(v10 + 32);
  sub_100008B04(&qword_1014A0EB0);
  v35 = String.LocalizationValue.init(stringLiteral:)(0x72616D6563616C50, 0xE90000000000006BLL);
  static Locale.current.getter(v35);
  v36 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 104);
  v38 = v124;
  v37(v21, enum case for LocalizedStringResource.BundleDescription.main(_:), v124);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v29, 0, 0, v25, v21, "The location of the Place", 25, 2);
  v39 = EntityProperty<>.init(title:)(v33);
  v117 = v34;
  *(_QWORD *)(a3 + v34) = v39;
  v40 = v123;
  v41 = *(int *)(v123 + 36);
  sub_100008B04(&qword_1014A0EB8);
  v42 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v42);
  v43 = v36;
  v44 = v129;
  v37(v21, v43, v38);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v29, 0, 0, v25, v21, "Name of the place", 17, 2);
  v45 = EntityProperty<>.init(title:)(v33);
  v116 = v41;
  v46 = v122;
  *(_QWORD *)(v122 + v41) = v45;
  v47 = v46;
  v48 = v40;
  v49 = (_QWORD *)(v46 + *(int *)(v40 + 40));
  *v49 = 0;
  v49[1] = 0;
  v50 = (_QWORD *)(v46 + *(int *)(v40 + 44));
  *v50 = 0;
  v50[1] = 0;
  v51 = v48;
  v52 = (uint64_t *)(v46 + *(int *)(v48 + 48));
  *v52 = 0;
  v52[1] = 0;
  v53 = v128;
  v54 = UUID.init()(v45);
  v55 = UUID.uuidString.getter(v54);
  v57 = v56;
  (*(void (**)(char *, uint64_t))(v126 + 8))(v53, v125);
  v58 = (uint64_t *)(v47 + *(int *)(v51 + 28));
  *v58 = v55;
  v58[1] = v57;
  sub_1002149DC(v131, v127);
  if (objc_msgSend(v44, "_hasMUID"))
  {
    if (objc_msgSend(v44, "_muid"))
    {
      v59 = objc_msgSend(v44, "_muid");
      v130 = 0;
    }
    else
    {
      v59 = 0;
      v130 = 1;
    }
  }
  else
  {
    v59 = 0;
  }
  v60 = objc_msgSend(v44, "identifier");
  v61 = v60;
  v112 = v52;
  v124 = (uint64_t)v50;
  if (v60)
  {
    v62 = objc_msgSend(v60, "identifierString");

    v61 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
    v64 = v63;

  }
  else
  {
    v64 = 0;
  }
  v65 = objc_msgSend(v44, "_geoMapItem", v112);
  v66 = objc_msgSend((id)objc_opt_self(CLPlacemark), "placemarkWithGEOMapItem:", v65);
  swift_unknownObjectRelease(v65);
  *(_QWORD *)&v67 = swift_bridgeObjectRelease(*(_QWORD *)(v47 + 8)).n128_u64[0];
  *(_QWORD *)v47 = v61;
  *(_QWORD *)(v47 + 8) = v64;
  *(_QWORD *)(v47 + 16) = v59;
  *(_BYTE *)(v47 + 24) = v130;
  v68 = objc_msgSend(v44, "_geoMapItem", v67);
  v69 = (uint64_t)v68;
  if (v68)
  {
    v70 = objc_msgSend(v68, "name");
    swift_unknownObjectRelease(v69);
    if (v70)
    {
      v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
      v72 = v71;

      goto LABEL_14;
    }
    v69 = 0;
  }
  v72 = 0;
LABEL_14:
  v132[0] = v69;
  v132[1] = v72;
  EntityProperty.wrappedValue.setter(v132);
  v132[0] = v66;
  v73 = v66;
  EntityProperty.wrappedValue.setter(v132);
  v74 = v44;
  v75 = objc_msgSend(v44, "_geoMapItem");
  if (v75)
  {
    v76 = v75;
    if (objc_msgSend(v75, "_hasBusinessHours"))
    {
      sub_100185C80(v47, v115);
      v77 = objc_msgSend(v76, "_businessHours");
      if (v77)
      {
        v78 = v77;
        v79 = v73;
        v80 = sub_10000E4BC(0, &qword_1014A0F38, GEOBusinessHours_ptr);
        v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v80);

      }
      else
      {
        v79 = v73;
        v81 = 0;
      }
      v82 = v115;
      sub_100210A2C(v81);
      v84 = v83;
      v86 = v85;
      swift_unknownObjectRelease(v76);
      swift_bridgeObjectRelease(v81);
      sub_100185CC4(v82);
      swift_bridgeObjectRelease(v49[1]);
      *v49 = v84;
      v49[1] = v86;
      v74 = v44;
      v73 = v79;
    }
    else
    {
      swift_unknownObjectRelease(v76);
    }
  }
  v87 = objc_msgSend(v74, "url");
  if (v87)
  {
    v88 = v87;
    v89 = (uint64_t)v118;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v87);

    v90 = 0;
    v92 = v120;
    v91 = v121;
  }
  else
  {
    v90 = 1;
    v92 = v120;
    v91 = v121;
    v89 = (uint64_t)v118;
  }
  v93 = (uint64_t)v119;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56))(v89, v90, 1, v91);
  sub_1001A2A94(v89, v93);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v93, 1, v91))
  {
    sub_100010CC4(v93, (uint64_t *)&unk_101499B30);
    v94 = 0;
    v95 = 0;
  }
  else
  {
    v96 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v114, v93, v91);
    v97 = sub_100010CC4(v93, (uint64_t *)&unk_101499B30);
    v94 = URL.absoluteString.getter(v97);
    v95 = v98;
    (*(void (**)(char *, uint64_t))(v92 + 8))(v96, v91);
  }
  v99 = (_QWORD *)v124;
  *(_QWORD *)&v100 = swift_bridgeObjectRelease(*(_QWORD *)(v124 + 8)).n128_u64[0];
  *v99 = v94;
  v99[1] = v95;
  v101 = objc_msgSend(v74, "_geoMapItem", v100);
  if (!v101)
  {

LABEL_33:
    sub_100010CC4(v131, (uint64_t *)&unk_10149AA90);
    return;
  }
  v102 = v101;
  if ((objc_msgSend(v101, "_hasAnyAmenities") & 1) == 0)
  {

    swift_unknownObjectRelease(v102);
    goto LABEL_33;
  }
  v103 = v113;
  sub_100185C80(v47, v113);
  v104 = objc_msgSend(v102, "_amenities");
  if (v104)
  {
    v105 = v104;
    v106 = sub_10000E4BC(0, &qword_1014A0F30, GEOAmenityItem_ptr);
    v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v105, v106);

  }
  else
  {
    v107 = 0;
  }
  v108 = sub_100210C10(v107);
  v110 = v109;

  swift_unknownObjectRelease(v102);
  swift_bridgeObjectRelease(v107);
  sub_100010CC4(v131, (uint64_t *)&unk_10149AA90);
  sub_100185CC4(v103);
  v111 = v112;
  swift_bridgeObjectRelease(v112[1]);
  *v111 = v108;
  v111[1] = v110;
}

uint64_t sub_1002103DC()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TypeDisplayRepresentation(0, v6);
  sub_10000E930(v9, qword_1014D5170);
  sub_10000E918(v9, (uint64_t)qword_1014D5170);
  LocalizedStringResource.init(stringLiteral:)(0x6563616C50, 0xE500000000000000);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v8, v3);
}

uint64_t sub_1002104E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  __n128 v26;
  Swift::String v27;
  void *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;

  v1 = v0;
  v2 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[1];
  if (!v9)
  {
    v13 = type metadata accessor for PlaceEntity(0);
    sub_10000C1FC((uint64_t)v1 + *(int *)(v13 + 24), (uint64_t)v4, (uint64_t *)&unk_10149AA90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      v23 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v24._countAndFlagsBits = UUID.uuidString.getter(v23);
      object = v24._object;
      v30 = 0x636E79737370616DLL;
      v31 = 0xE90000000000003ALL;
      String.append(_:)(v24);
      v26 = swift_bridgeObjectRelease(object);
      v11 = v30;
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v26);
      return v11;
    }
    sub_100010CC4((uint64_t)v4, (uint64_t *)&unk_10149AA90);
    if ((v1[3] & 1) == 0)
    {
      v30 = v1[2];
      v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v28 = v27._object;
      v30 = 0x3A6469756DLL;
      v31 = 0xE500000000000000;
      String.append(_:)(v27);
      swift_bridgeObjectRelease(v28);
      return v30;
    }
    EntityProperty.wrappedValue.getter(&v30);
    v14 = (id)v30;
    if (v30)
    {
      v15 = objc_msgSend((id)v30, "location");
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v15, "coordinate");
        v18 = v17;
        v20 = v19;

        v30 = 0;
        v31 = 0xE000000000000000;
        v21._countAndFlagsBits = 0x3A676E6F6C74616CLL;
        v21._object = (void *)0xE800000000000000;
        String.append(_:)(v21);
        Double.write<A>(to:)(&v30, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v18);
        v22._countAndFlagsBits = 44;
        v22._object = (void *)0xE100000000000000;
        String.append(_:)(v22);
        Double.write<A>(to:)(&v30, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v20);

        return v30;
      }

    }
    v29 = (uint64_t *)((char *)v1 + *(int *)(v13 + 28));
    v11 = *v29;
    swift_bridgeObjectRetain(v29[1]);
    return v11;
  }
  v10 = *v1;
  v30 = 0x3A74696B70616DLL;
  v31 = 0xE700000000000000;
  String.append(_:)(*(Swift::String *)(&v9 - 1));
  return v30;
}

uint64_t sub_1002107A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  id v22;
  unint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  id v31;
  unint64_t v32;

  v29 = a1;
  v1 = 0xD000000000000013;
  v2 = sub_100008B04(&qword_101494368);
  __chkstk_darwin(v2);
  v30 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_101494370);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource(0, v5);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - v16;
  type metadata accessor for PlaceEntity(0);
  EntityProperty.wrappedValue.getter(&v31);
  if (v32)
    v18 = (unint64_t)v31;
  else
    v18 = 0xD000000000000010;
  if (v32)
    v19 = v32;
  else
    v19 = 0x8000000100E545F0;
  LocalizedStringResource.init(stringLiteral:)(v18, v19);
  EntityProperty.wrappedValue.getter(&v31);
  v20 = v31;
  v21 = 0x8000000100E54610;
  if (v31)
  {
    v22 = objc_msgSend(v31, "locality");

    if (v22)
    {
      v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v21 = v23;

    }
  }
  LocalizedStringResource.init(stringLiteral:)(v1, v21);
  v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v24(v11, v17, v8);
  v24(v7, v14, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  v25 = type metadata accessor for DisplayRepresentation.Image(0);
  v26 = v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v30, 1, 1, v25);
  DisplayRepresentation.init(title:subtitle:image:)(v11, v7, v26);
  v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27(v14, v8);
  return ((uint64_t (*)(char *, uint64_t))v27)(v17, v8);
}

void sub_100210A2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v2 = sub_100008B04((uint64_t *)&unk_10149E730);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v14 = a1;
      swift_bridgeObjectRetain(a1);
      if (_CocoaArrayWrapper.endIndex.getter(v14))
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_20;
          }
          v6 = *(id *)(a1 + 32);
        }
        v7 = v6;
        swift_bridgeObjectRelease(a1);
        v8 = v7;
        static TimeZone.current.getter(v8);
        v9 = type metadata accessor for TimeZone(0);
        v10 = *(_QWORD *)(v9 - 8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
        isa = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) != 1)
        {
          isa = TimeZone._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
        }
        v12 = objc_msgSend(objc_allocWithZone((Class)_MKLocalizedHoursBuilder), "initWithBusinessHours:timeZone:localizedHoursStringOptions:", v8, isa, 128);

        if (v12)
        {
          v13 = objc_msgSend(v12, "localizedOperatingHours");

          if (v13)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(v13);

            return;
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
    }
    else
    {
      v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v5)
        goto LABEL_4;
    }
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_100210C10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = a1;
  if (!a1)
    return v1;
  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_4;
LABEL_21:
    swift_bridgeObjectRelease(v1);
    v16 = sub_100008B04((uint64_t *)&unk_101492C00);
    v17 = sub_100010D70((unint64_t *)&qword_10149A590, (uint64_t *)&unk_101492C00, (const char *)&protocol conformance descriptor for [A]);
    v1 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v16, v17);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return v1;
  }
  if (a1 >= 0)
    v15 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v15 = a1;
  swift_bridgeObjectRetain(a1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v2)
    goto LABEL_21;
LABEL_4:
  result = sub_1001323FC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v5 = *(id *)(v1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, "amenityTitle");
      if (v7)
      {
        v8 = v7;
        v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        v11 = v10;

      }
      else
      {

        v9 = 0;
        v11 = 0xE000000000000000;
      }
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_1001323FC(v12 > 1, v13 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
    }
    while (v2 != v4);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_100210E00@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  _QWORD v60[3];

  v56 = a2;
  v58 = a1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  v54 = v5;
  v6 = v5;
  v7 = __chkstk_darwin(v4);
  v59 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for LocalizedStringResource.BundleDescription(0, v7);
  v9 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0, v13);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0, v17);
  __chkstk_darwin(v20);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  v23 = (int *)type metadata accessor for PlaceEntity(0);
  v55 = a3 + v23[6];
  (*(void (**)(void))(v6 + 56))();
  v24 = v23[8];
  sub_100008B04(&qword_1014A0EB0);
  v25 = String.LocalizationValue.init(stringLiteral:)(0x72616D6563616C50, 0xE90000000000006BLL);
  static Locale.current.getter(v25);
  v26 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v27 = v52;
  v51(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v52);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v15, v11, "The location of the Place", 25, 2);
  v28 = EntityProperty<>.init(title:)(v22);
  v57 = v24;
  *(_QWORD *)(a3 + v24) = v28;
  v29 = v23[9];
  sub_100008B04(&qword_1014A0EB8);
  v30 = String.LocalizationValue.init(stringLiteral:)(1701667150, 0xE400000000000000);
  static Locale.current.getter(v30);
  v51(v11, v26, v27);
  v31 = v56;
  v32 = v11;
  v33 = v58;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v15, v32, "Name of the place", 17, 2);
  v34 = EntityProperty<>.init(title:)(v22);
  *(_QWORD *)(a3 + v29) = v34;
  v35 = (_QWORD *)(a3 + v23[10]);
  *v35 = 0;
  v35[1] = 0;
  v36 = (_QWORD *)(a3 + v23[11]);
  *v36 = 0;
  v36[1] = 0;
  v37 = (_QWORD *)(a3 + v23[12]);
  *v37 = 0;
  v37[1] = 0;
  v38 = v59;
  v39 = UUID.init()(v34);
  v40 = UUID.uuidString.getter(v39);
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v53);
  v43 = (uint64_t *)(a3 + v23[7]);
  *v43 = v40;
  v43[1] = v42;
  sub_1002149DC(v31, v55);
  v44 = objc_msgSend(v33, "name");
  if (v44)
  {
    v45 = v44;
    v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    v48 = v47;

  }
  else
  {
    v46 = 0;
    v48 = 0;
  }
  v60[0] = v46;
  v60[1] = v48;
  EntityProperty.wrappedValue.setter(v60);
  v60[0] = v33;
  v49 = v33;
  EntityProperty.wrappedValue.setter(v60);

  return sub_100010CC4(v31, (uint64_t *)&unk_10149AA90);
}

id sub_1002111A8()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  Swift::String v12;
  id v14[2];

  type metadata accessor for PlaceEntity(0);
  EntityProperty.wrappedValue.getter(v14);
  v0 = v14[0];
  if (!v14[0])
    return 0;
  v1 = objc_msgSend(v14[0], "postalAddress");
  if (!v1)
  {
    v6 = objc_msgSend(v0, "location");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "coordinate");
      v9 = v8;
      v11 = v10;

      v14[0] = 0;
      v14[1] = (id)0xE000000000000000;
      Double.write<A>(to:)(v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v9);
      v12._countAndFlagsBits = 44;
      v12._object = (void *)0xE100000000000000;
      String.append(_:)(v12);
      Double.write<A>(to:)(v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v11);

      return v14[0];
    }

    return 0;
  }
  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone((Class)CNPostalAddressFormatter), "init");
  v4 = objc_msgSend(v3, "stringFromPostalAddress:", v2);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return (id)v5;
}

uint64_t sub_100211320@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *object;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  Swift::String v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t result;
  id v24;
  void (*v25)(char *, char *, uint64_t);
  _QWORD v26[2];
  _QWORD v27[2];

  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04((uint64_t *)&unk_101499B30);
  __chkstk_darwin(v7);
  object = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v26 - v11;
  if ((*(_BYTE *)(v1 + 24) & 1) == 0)
  {
    v18 = *(_QWORD *)(v1 + 16);
    strcpy((char *)v27, "maps://?auid=");
    HIWORD(v27[1]) = -4864;
    v26[1] = v18;
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
    object = (char *)v19._object;
    String.append(_:)(v19);
    v20 = swift_bridgeObjectRelease(object);
    v21 = v27[1];
    URL.init(string:)(v27[0], v27[1], v20);
    v22 = swift_bridgeObjectRelease(v21);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v4 + 48))(v12, 1, v3, v22) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v12, v3);
    __break(1u);
    goto LABEL_12;
  }
  sub_1002111A8();
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v14);
  type metadata accessor for PlaceEntity(0);
  EntityProperty.wrappedValue.getter(v27);
  v16 = v27[1];
  if (v27[1])
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v17 = 0;
  }
  v24 = objc_msgSend((id)objc_opt_self(_MKURLBuilder), "URLForAddress:label:", v15, v17);

  if (!v24)
  {
LABEL_12:
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(object, 1, 1, v3);
    goto LABEL_13;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

  v25 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v25(object, v6, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(object, 0, 1, v3);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(object, 1, v3);
  if ((_DWORD)result == 1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(a1, object, v3);
}

uint64_t sub_1002115AC()
{
  return sub_10000BC84(&qword_1014A0D28, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E342B8);
}

uint64_t sub_1002115D8()
{
  return sub_10000BC84(&qword_1014A0D30, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E342E0);
}

uint64_t sub_100211604()
{
  return sub_10000BC84(&qword_1014A0D38, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34308);
}

uint64_t sub_100211630()
{
  return sub_10000BC84(&qword_1014A0D40, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34360);
}

uint64_t sub_10021165C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1002104E4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100211680@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_101491198 != -1)
    swift_once(&qword_101491198, sub_1002103DC);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_10000E918(v3, (uint64_t)qword_1014D5170);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_1002116F0()
{
  return sub_100010D70(&qword_1014A0D48, &qword_1014A0D50, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10021171C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000BC84(&qword_10149E3D0, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E341C0);
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10021176C()
{
  return sub_10000BC84((unint64_t *)&unk_1014A0D58, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34390);
}

uint64_t sub_10021179C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000BC84(&qword_1014A0D40, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34360);
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1002117EC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106C640, 1);
}

uint64_t sub_1002117FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100211320(a1);
}

uint64_t sub_100211824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for URL(0);
  v5 = sub_10000BC84(&qword_1014A0F28, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  return ProxyRepresentation.init(exporting:)(sub_1002117FC, 0, a1, v4, a2, v5);
}

uint64_t sub_100211898(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[222] = a1;
  v2 = sub_100008B04((uint64_t *)&unk_10149AA90);
  v1[223] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_QWORD *)(type metadata accessor for PlaceEntity(0) - 8);
  v1[224] = v3;
  v1[225] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100211918, 0, 0);
}

uint64_t sub_100211918()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  double v3;
  double v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  id v20;
  Swift::String v21;
  unint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  unsigned __int8 v34;
  BOOL v35;
  unint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  id v40;
  Swift::String v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  uint64_t v46;
  unsigned __int8 *v47;
  unsigned int v48;
  unsigned __int8 v49;
  unint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  unsigned int v53;
  char v54;
  char v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;

  v1 = v0[222];
  v2 = &_swiftEmptySetSingleton;
  v0[221] = &_swiftEmptySetSingleton;
  v0[203] = &_swiftEmptySetSingleton;
  v0[209] = &_swiftEmptySetSingleton;
  v72 = *(_QWORD *)(v1 + 16);
  if (!v72)
  {
    v56 = &_swiftEmptySetSingleton;
LABEL_80:
    v57 = swift_allocObject(&unk_1011AC4C8, 24, 7);
    v0[226] = v57;
    *(_QWORD *)(v57 + 16) = v56;
    swift_bridgeObjectRetain(v56);
    swift_retain();
    v58 = sub_10000E5D4(qword_1014A0D98);
    swift_asyncLet_begin(v0 + 2, 0, v58, &unk_1014A0E80, v57, v0 + 215, v59);
    type metadata accessor for MapsSyncQueryPredicate(0);
    v60 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v61 = swift_allocObject(v60, 72, 7);
    *(_OWORD *)(v61 + 16) = xmmword_100E22F40;
    *(_QWORD *)(v61 + 56) = sub_100008B04(&qword_1014A0E88);
    *(_QWORD *)(v61 + 64) = sub_100010D70(&qword_1014A0E90, &qword_1014A0E88, (const char *)&protocol conformance descriptor for Set<A>);
    *(_QWORD *)(v61 + 32) = v2;
    swift_bridgeObjectRetain(v2);
    v62 = (void *)NSPredicate.init(format:_:)(0xD000000000000010, 0x8000000100E54530, v61);
    v0[227] = v62;
    v63 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions(0));
    v64 = v62;
    v0[228] = MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)(v62, 0, 0);
    v65 = v0[209];
    swift_bridgeObjectRetain(v65);
    v67 = sub_1000D8EA4(v66);
    swift_bridgeObjectRelease(v65);
    v68 = swift_allocObject(&unk_1011AC4F0, 24, 7);
    v0[229] = v68;
    *(_QWORD *)(v68 + 16) = v67;
    swift_retain();
    v69 = sub_10000E5D4(&qword_1014A0EA8);
    swift_asyncLet_begin(v0 + 82, 0, v69, &unk_1014A0EA0, v68, v0 + 191, v70);
    v0[197] = _swiftEmptyArrayStorage;
    return swift_asyncLet_get(v0 + 2, v0 + 215, sub_10021225C, v0 + 216);
  }
  v71 = v1 + 32;
  v3 = MKCoordinateInvalid[0];
  v4 = MKCoordinateInvalid[1];
  swift_bridgeObjectRetain(v1);
  v5 = 0;
  while (1)
  {
    v11 = (uint64_t *)(v71 + 16 * v5);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    v14._countAndFlagsBits = 0x3A74696B70616DLL;
    v14._object = (void *)0xE700000000000000;
    if (String.hasPrefix(_:)(v14))
    {
      v0[173] = v12;
      v0[174] = v13;
      v0[171] = 0x3A74696B70616DLL;
      v0[172] = 0xE700000000000000;
      v0[167] = 0;
      v0[168] = 0xE000000000000000;
      v15 = sub_10006C008();
      StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v0 + 171, v0 + 167, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v15, v15, v15);
      v17 = v16;
      v18 = objc_allocWithZone((Class)MKMapItemIdentifier);
      v19 = String._bridgeToObjectiveC()();
      v20 = objc_msgSend(v18, "initWithIdentifierString:", v19, swift_bridgeObjectRelease(v17).n128_f64[0]);

      if (v20)
      {
        sub_10002E104((Swift::Int *)&v73, v20);

      }
    }
    v21._countAndFlagsBits = 0x3A6469756DLL;
    v21._object = (void *)0xE500000000000000;
    if (!String.hasPrefix(_:)(v21))
    {
      v31 = v12;
      goto LABEL_48;
    }
    v0[185] = v12;
    v0[186] = v13;
    v0[177] = 0x3A6469756DLL;
    v0[178] = 0xE500000000000000;
    v0[175] = 0;
    v0[176] = 0xE000000000000000;
    v22 = sub_10006C008();
    result = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v0 + 177, v0 + 175, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v22, v22, v22);
    v25 = v24;
    v26 = HIBYTE(v24) & 0xF;
    v27 = result & 0xFFFFFFFFFFFFLL;
    if ((v25 & 0x2000000000000000) != 0)
      v28 = v26;
    else
      v28 = result & 0xFFFFFFFFFFFFLL;
    if (!v28)
    {
      v31 = v12;
      swift_bridgeObjectRelease(v25);
      goto LABEL_48;
    }
    if ((v25 & 0x1000000000000000) == 0)
      break;
    v31 = v12;
    v30 = sub_1000F2930(result, v25, 10);
    v55 = v54;
    swift_bridgeObjectRelease(v25);
    if ((v55 & 1) == 0)
    {
LABEL_46:
      v40 = objc_msgSend(objc_allocWithZone((Class)MKMapItemIdentifier), "initWithMUID:resultProviderID:coordinate:", v30, 0, v3, v4);
      if (v40)
      {
        sub_10002E104((Swift::Int *)&v73, v40);

      }
    }
LABEL_48:
    v41._countAndFlagsBits = 0x636E79737370616DLL;
    v41._object = (void *)0xE90000000000003ALL;
    if (String.hasPrefix(_:)(v41))
    {
      v0[169] = v31;
      v0[170] = v13;
      v0[187] = 0x636E79737370616DLL;
      v0[188] = 0xE90000000000003ALL;
      v0[189] = 0;
      v0[190] = 0xE000000000000000;
      v42 = sub_10006C008();
      v43 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v0 + 187, v0 + 189, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v42, v42, v42);
      sub_10002D534((uint64_t *)&v73, v43, v44);
      swift_bridgeObjectRelease(v74);
    }
    v45._countAndFlagsBits = 0x3A676E6F6C74616CLL;
    v45._object = (void *)0xE800000000000000;
    if (String.hasPrefix(_:)(v45))
    {
      v0[179] = v31;
      v0[180] = v13;
      v0[181] = 0x3A676E6F6C74616CLL;
      v0[182] = 0xE800000000000000;
      v0[183] = 0;
      v0[184] = 0xE000000000000000;
      v6 = sub_10006C008();
      v7 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v0 + 181, v0 + 183, 0, 0, 0, 1, &type metadata for String, &type metadata for String, &type metadata for String, v6, v6, v6);
      v9 = v8;
      swift_bridgeObjectRelease(v13);
      sub_10002D534((uint64_t *)&v73, v7, v9);
      v10 = v74;
    }
    else
    {
      v10 = v13;
    }
    swift_bridgeObjectRelease(v10);
    if (++v5 == v72)
    {
      swift_bridgeObjectRelease(v0[222]);
      v56 = (void *)v0[221];
      v2 = (void *)v0[203];
      goto LABEL_80;
    }
  }
  if ((v25 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v29 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v25);
    v30 = (unint64_t)sub_1000F291C(v29, v27, 10);
    v31 = v12;
    v33 = v32 & 1;
LABEL_45:
    swift_bridgeObjectRelease(v25);
    if ((v33 & 1) == 0)
      goto LABEL_46;
    goto LABEL_48;
  }
  v73 = (id)result;
  v74 = v25 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v26)
      goto LABEL_82;
    if (v26 == 1 || (BYTE1(result) - 48) > 9u)
      goto LABEL_42;
    v30 = (BYTE1(result) - 48);
    if (v26 == 2)
      goto LABEL_53;
    if ((BYTE2(result) - 48) > 9u)
      goto LABEL_42;
    v31 = v12;
    v30 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
    v37 = v26 - 3;
    if (v37)
    {
      v38 = (unsigned __int8 *)&v73 + 3;
      while (1)
      {
        v39 = *v38 - 48;
        if (v39 > 9)
          goto LABEL_43;
        if (!is_mul_ok(v30, 0xAuLL))
          goto LABEL_43;
        v35 = __CFADD__(10 * v30, v39);
        v30 = 10 * v30 + v39;
        if (v35)
          goto LABEL_43;
        v33 = 0;
        ++v38;
        if (!--v37)
          goto LABEL_45;
      }
    }
    goto LABEL_66;
  }
  if (result != 45)
  {
    if (!v26 || (result - 48) > 9u)
      goto LABEL_42;
    v30 = (result - 48);
    if (v26 == 1)
    {
LABEL_53:
      v31 = v12;
      v33 = 0;
      goto LABEL_45;
    }
    if ((BYTE1(result) - 48) > 9u)
      goto LABEL_42;
    v31 = v12;
    v30 = 10 * (result - 48) + (BYTE1(result) - 48);
    v46 = v26 - 2;
    if (v46)
    {
      v47 = (unsigned __int8 *)&v73 + 2;
      while (1)
      {
        v48 = *v47 - 48;
        if (v48 > 9)
          goto LABEL_43;
        if (!is_mul_ok(v30, 0xAuLL))
          goto LABEL_43;
        v35 = __CFADD__(10 * v30, v48);
        v30 = 10 * v30 + v48;
        if (v35)
          goto LABEL_43;
        v33 = 0;
        ++v47;
        if (!--v46)
          goto LABEL_45;
      }
    }
LABEL_66:
    v33 = 0;
    goto LABEL_45;
  }
  if (v26)
  {
    if (v26 != 1)
    {
      v34 = BYTE1(result) - 48;
      if ((BYTE1(result) - 48) <= 9u)
      {
        v30 = 0;
        v35 = v34 == 0;
        v36 = -(uint64_t)v34;
        if (!v35)
        {
          v31 = v12;
LABEL_44:
          v33 = 1;
          goto LABEL_45;
        }
        if (v26 == 2)
        {
          v31 = v12;
          v33 = 0;
          v30 = v36;
          goto LABEL_45;
        }
        v49 = BYTE2(result) - 48;
        if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v36, 0xAuLL))
        {
          v31 = v12;
          v50 = 10 * v36;
          v30 = v50 - v49;
          if (v50 >= v49)
          {
            v51 = v26 - 3;
            if (!v51)
              goto LABEL_66;
            v52 = (unsigned __int8 *)&v73 + 3;
            while (1)
            {
              v53 = *v52 - 48;
              if (v53 > 9)
                break;
              if (!is_mul_ok(v30, 0xAuLL))
                break;
              v35 = 10 * v30 >= v53;
              v30 = 10 * v30 - v53;
              if (!v35)
                break;
              v33 = 0;
              ++v52;
              if (!--v51)
                goto LABEL_45;
            }
          }
LABEL_43:
          v30 = 0;
          goto LABEL_44;
        }
      }
    }
LABEL_42:
    v31 = v12;
    goto LABEL_43;
  }
  __break(1u);
LABEL_82:
  __break(1u);
  return result;
}

uint64_t sub_10021225C()
{
  return swift_task_switch(sub_100212270, 0, 0);
}

uint64_t sub_100212270()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 1720));
  sub_100120BC0(v1);
  return swift_asyncLet_get_throwing(v0 + 656, v0 + 1528, sub_1002122CC, v0 + 1632);
}

uint64_t sub_1002122CC()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;

  v1[230] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease(v1[197]);
    swift_bridgeObjectRelease(v1[209]);
    swift_bridgeObjectRelease(v1[203]);
    swift_bridgeObjectRelease(v1[221]);
    v2 = sub_100212624;
  }
  else
  {
    v2 = sub_100212334;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100212334()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;

  v1 = v0[191];
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v0[191]);
    if (v2)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[209]);
    swift_bridgeObjectRelease(v0[203]);
    swift_bridgeObjectRelease(v0[221]);
    sub_100120BC0((uint64_t)_swiftEmptyArrayStorage);
    v0[231] = v0[197];
    return swift_asyncLet_finish(v0 + 82, v0 + 191, sub_100212524, v0 + 210, v15);
  }
  if (v1 < 0)
    v14 = v0[191];
  else
    v14 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v0[191]);
  v2 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v2)
    goto LABEL_16;
LABEL_3:
  result = sub_100132608(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v0[224];
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v6 = *(id *)(v1 + 8 * v4 + 32);
      v7 = v6;
      v8 = v0[225];
      v9 = v0[223];
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
      sub_100210E00(v7, v9, v8);
      v12 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        sub_100132608(v11 > 1, v12 + 1, 1);
      v13 = v0[225];
      ++v4;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      sub_100214998(v13, (uint64_t)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12);
    }
    while (v2 != v4);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_100212524()
{
  return swift_task_switch(sub_100212538, 0, 0);
}

uint64_t sub_100212538()
{
  uint64_t v0;
  void *v1;
  __n128 v2;

  v1 = *(void **)(v0 + 1824);

  swift_release();
  return swift_asyncLet_finish(v0 + 16, v0 + 1720, sub_1002125A8, v0 + 1584, v2);
}

uint64_t sub_1002125A8()
{
  return swift_task_switch(sub_1002125BC, 0, 0);
}

uint64_t sub_1002125BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1832);
  v2 = *(_QWORD *)(v0 + 1800);
  v3 = *(_QWORD *)(v0 + 1784);
  swift_release_n(*(_QWORD *)(v0 + 1808), 2);
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 1848));
}

uint64_t sub_100212624(__n128 a1)
{
  uint64_t v1;

  return swift_asyncLet_finish(v1 + 656, v1 + 1528, sub_10021263C, v1 + 1536, a1);
}

uint64_t sub_10021263C()
{
  return swift_task_switch(sub_100212650, 0, 0);
}

uint64_t sub_100212650()
{
  uint64_t v0;
  void *v1;
  __n128 v2;

  v1 = *(void **)(v0 + 1824);

  swift_release();
  return swift_asyncLet_finish(v0 + 16, v0 + 1720, sub_1002126C0, v0 + 1296, v2);
}

uint64_t sub_1002126C0()
{
  return swift_task_switch(sub_1002126D4, 0, 0);
}

uint64_t sub_1002126D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1832);
  v2 = *(_QWORD *)(v0 + 1800);
  v3 = *(_QWORD *)(v0 + 1784);
  swift_release_n(*(_QWORD *)(v0 + 1808), 2);
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100212738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_task_switch(sub_100212750, 0, 0);
}

uint64_t sub_100212750()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t **v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[4];
  swift_bridgeObjectRetain(v1);
  v3 = sub_1000D8FA8(v2);
  v0[5] = v3;
  swift_bridgeObjectRelease(v1);
  v4 = swift_task_alloc(32);
  v0[6] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[7] = v5;
  v6 = sub_100008B04(qword_1014A0D98);
  *v5 = v0;
  v5[1] = sub_10021281C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000001FLL, 0x8000000100E54590, sub_100214D44, v4, v6);
}

uint64_t sub_10021281C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100212878, 0, 0);
}

uint64_t sub_100212878()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  *v1 = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002128B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(dword_1014A0EC4);
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1000BFEBC;
  v4[3] = a2;
  return swift_task_switch(sub_100214A3C, 0, 0);
}

uint64_t sub_10021291C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[24] = a3;
  v4[25] = a4;
  v4[23] = a2;
  v5 = (*(_QWORD *)(*(_QWORD *)(sub_100008B04(&qword_101494070) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[26] = swift_task_alloc(v5);
  v4[27] = swift_task_alloc(v5);
  v6 = sub_100008B04(&qword_1014A0EE0);
  v4[28] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[29] = v7;
  v4[30] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1002129B8, 0, 0);
}

uint64_t sub_1002129B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  BOOL v17;
  BOOL v18;
  char v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  __n128 v26;
  unsigned __int8 *v27;
  unint64_t v28;
  _BYTE *v29;
  BOOL v30;
  _QWORD *v31;
  _BYTE *v32;
  BOOL v33;
  char *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  int v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  _BYTE *v58;
  __n128 v59;
  _BYTE *v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  id v67;
  id v68;
  uint64_t v69;
  BOOL *v70;
  _QWORD *v71;
  unint64_t v72;
  BOOL *v73;
  uint64_t v74;
  void *v75;
  double *v76;

  v1 = *(_QWORD *)(v0 + 192);
  v67 = objc_msgSend(objc_allocWithZone((Class)CLGeocoder), "init");
  *(_QWORD *)(v0 + 248) = v67;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v70 = (BOOL *)(v0 + 272);
    v3 = v0 + 112;
    v76 = (double *)(v0 + 160);
    v71 = (_QWORD *)(v0 + 176);
    v73 = (BOOL *)(v0 + 273);
    v4 = *(_QWORD *)(v0 + 192);
    v5 = sub_10006C008();
    swift_bridgeObjectRetain(v4);
    v6 = (_QWORD *)(v4 + 40);
    v72 = v5;
    while (1)
    {
      v7 = *(v6 - 1);
      v8 = (_QWORD *)*v6;
      *(_QWORD *)(v0 + 144) = v7;
      *(_QWORD *)(v0 + 152) = v8;
      *(_QWORD *)(v0 + 112) = 44;
      *(_QWORD *)(v0 + 120) = 0xE100000000000000;
      swift_bridgeObjectRetain(v8);
      v9 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(v3, &type metadata for String, &type metadata for String, v5, v5);
      v10 = v9;
      if (v9[2] == 2)
        break;
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v10);
LABEL_4:
      v6 += 2;
      if (!--v2)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 192));
        goto LABEL_62;
      }
    }
    v74 = v7;
    v11 = v9[4];
    v12 = v9[5];
    *v76 = 0.0;
    v13 = swift_task_alloc(32);
    *(_QWORD *)(v13 + 16) = v76;
    if ((v12 & 0x1000000000000000) != 0 || !(v12 & 0x2000000000000000 | v11 & 0x1000000000000000))
    {
      v61 = swift_bridgeObjectRetain(v12);
      _StringGuts._slowWithCString<A>(_:)(sub_100214C10, v13, v11, v12, &type metadata for Bool, v61);
      v15 = (char *)(v0 + 273);
    }
    else
    {
      v14 = swift_task_alloc(32);
      *(_QWORD *)(v14 + 16) = sub_100214C10;
      *(_QWORD *)(v14 + 24) = v13;
      v15 = (char *)(v0 + 273);
      if ((v12 & 0x2000000000000000) != 0)
      {
        *(_QWORD *)(v0 + 96) = v11;
        *(_QWORD *)(v0 + 104) = v12 & 0xFFFFFFFFFFFFFFLL;
        switch((char)v11)
        {
          case 0:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
            swift_bridgeObjectRetain(v12);
            goto LABEL_18;
          default:
            v59 = swift_bridgeObjectRetain(v12);
            v60 = (_BYTE *)_swift_stdlib_strtod_clocale(v0 + 96, v76, v59);
            if (v60)
              v18 = *v60 == 0;
            else
LABEL_18:
              v18 = 0;
            *v73 = v18;
            swift_bridgeObjectRelease(v12);
            swift_task_dealloc(v14);
            break;
        }
LABEL_20:
        v19 = *v15;
        swift_task_dealloc(v13);
        if ((v19 & 1) == 0)
        {
          swift_bridgeObjectRelease(v8);
          v31 = v10;
          goto LABEL_46;
        }
        if (v10[2] < 2uLL)
        {
          __break(1u);
          JUMPOUT(0x1002130D4);
        }
        v20 = *v76;
        v22 = v10[6];
        v21 = v10[7];
        swift_bridgeObjectRetain(v21);
        swift_bridgeObjectRelease(v10);
        *v71 = 0;
        v23 = swift_task_alloc(32);
        *(_QWORD *)(v23 + 16) = v71;
        if ((v21 & 0x1000000000000000) != 0 || !(v21 & 0x2000000000000000 | v22 & 0x1000000000000000))
        {
          v34 = (char *)(v0 + 272);
          _StringGuts._slowWithCString<A>(_:)(sub_100214C10, v23, v22, v21, &type metadata for Bool, v24);
        }
        else
        {
          v25 = swift_task_alloc(32);
          *(_QWORD *)(v25 + 16) = sub_100214C10;
          *(_QWORD *)(v25 + 24) = v23;
          if ((v21 & 0x2000000000000000) != 0)
          {
            *(_QWORD *)(v0 + 128) = v22;
            *(_QWORD *)(v0 + 136) = v21 & 0xFFFFFFFFFFFFFFLL;
            v33 = (v22 > 0x20u || ((0x100003E01uLL >> v22) & 1) == 0)
               && (v32 = (_BYTE *)_swift_stdlib_strtod_clocale(v0 + 128, v71, v26)) != 0
               && *v32 == 0;
            v34 = (char *)(v0 + 272);
            *v70 = v33;
            swift_bridgeObjectRelease(v21);
            swift_task_dealloc(v25);
            goto LABEL_41;
          }
          if ((v22 & 0x1000000000000000) != 0)
            v27 = (unsigned __int8 *)((v21 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v27 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v22, v21);
          v28 = *v27;
          v30 = (v28 >= 0x21 || ((0x100003E01uLL >> v28) & 1) == 0)
             && (v29 = (_BYTE *)_swift_stdlib_strtod_clocale(v27, v71, v26)) != 0
             && *v29 == 0;
          v34 = (char *)(v0 + 272);
          *v70 = v30;
          swift_task_dealloc(v25);
        }
        swift_bridgeObjectRelease(v21);
LABEL_41:
        v35 = *v34;
        swift_task_dealloc(v23);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)(v0 + 216);
          v69 = *(_QWORD *)(v0 + 208);
          v68 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v20, *(double *)(v0 + 176));
          v37 = type metadata accessor for TaskPriority(0);
          v38 = *(_QWORD *)(v37 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v36, 1, 1, v37);
          v39 = (_QWORD *)swift_allocObject(&unk_1011AC518, 64, 7);
          v39[2] = 0;
          v40 = v39 + 2;
          v39[3] = 0;
          v39[4] = v67;
          v39[5] = v68;
          v39[6] = v74;
          v39[7] = v8;
          sub_10000C1FC(v36, v69, &qword_101494070);
          v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v69, 1, v37);
          v42 = v67;
          v43 = v68;
          v75 = v43;
          v44 = *(_QWORD *)(v0 + 208);
          if (v41 == 1)
          {
            sub_100010CC4(*(_QWORD *)(v0 + 208), &qword_101494070);
            v45 = 0;
            v46 = *v40;
            if (*v40)
            {
LABEL_44:
              v47 = v39[3];
              ObjectType = swift_getObjectType();
              swift_unknownObjectRetain(v46);
              v49 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v47);
              v51 = v50;
              swift_unknownObjectRelease(v46);
LABEL_49:
              v53 = **(_QWORD **)(v0 + 184);
              v54 = sub_100008B04(&qword_1014A0EC8);
              v55 = v51 | v49;
              if (v51 | v49)
              {
                v55 = v0 + 16;
                *(_QWORD *)(v0 + 16) = 0;
                *(_QWORD *)(v0 + 24) = 0;
                *(_QWORD *)(v0 + 32) = v49;
                *(_QWORD *)(v0 + 40) = v51;
              }
              v56 = *(_QWORD *)(v0 + 216);
              *(_QWORD *)(v0 + 48) = 1;
              *(_QWORD *)(v0 + 56) = v55;
              *(_QWORD *)(v0 + 64) = v53;
              swift_task_create(v45 | 0x3100, v0 + 48, v54, &unk_1014A0EF0, v39);

              swift_release();
              sub_100010CC4(v56, &qword_101494070);
              goto LABEL_52;
            }
          }
          else
          {
            v52 = TaskPriority.rawValue.getter(v43);
            (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v44, v37);
            v45 = v52;
            v46 = *v40;
            if (*v40)
              goto LABEL_44;
          }
          v49 = 0;
          v51 = 0;
          goto LABEL_49;
        }
        v31 = v8;
LABEL_46:
        swift_bridgeObjectRelease(v31);
LABEL_52:
        v5 = v72;
        v3 = v0 + 112;
        goto LABEL_4;
      }
      if ((v11 & 0x1000000000000000) != 0)
        v16 = (_BYTE *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v16 = (_BYTE *)_StringObject.sharedUTF8.getter(v11, v12);
      switch(*v16)
      {
        case 0:
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
        case 0xD:
        case 0x20:
          swift_bridgeObjectRetain(v12);
          goto LABEL_13;
        default:
          v57 = swift_bridgeObjectRetain(v12);
          v58 = (_BYTE *)_swift_stdlib_strtod_clocale(v16, v76, v57);
          if (v58)
            v17 = *v58 == 0;
          else
LABEL_13:
            v17 = 0;
          *v73 = v17;
          swift_task_dealloc(v14);
          break;
      }
    }
    swift_bridgeObjectRelease(v12);
    goto LABEL_20;
  }
LABEL_62:
  v62 = **(_QWORD **)(v0 + 184);
  v63 = sub_100008B04(&qword_1014A0EC8);
  v64 = sub_100008B04(&qword_10149E610);
  ThrowingTaskGroup.makeAsyncIterator()(v62, v63, v64, &protocol self-conformance witness table for Error);
  v65 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  *(_QWORD *)(v0 + 256) = v65;
  *v65 = v0;
  v65[1] = sub_1002131DC;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 224), v0 + 168);
}

uint64_t sub_1002131DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 256));
  if (v0)
    v2 = sub_1002133D4;
  else
    v2 = sub_100213240;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100213240()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 80);
  if (v1)
  {
    v2 = *(void **)(v0 + 88);
    swift_bridgeObjectRelease(v1);
    if (v2)
    {
      v3 = *(_QWORD **)(v0 + 200);
      v4 = v2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v4);
      v6 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v5 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v6 >= v5 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v5 > 1, v6 + 1, 1);
      v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v4);
      specialized Array._endMutation()(v7);

    }
    v8 = (_QWORD *)swift_task_alloc(_sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(_QWORD *)(v0 + 264) = v8;
    *v8 = v0;
    v8[1] = sub_100213370;
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 72, 0, 0, *(_QWORD *)(v0 + 224), v0 + 168);
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 240);
    v11 = *(void **)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 216);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(v10, *(_QWORD *)(v0 + 224));

    swift_task_dealloc(v10);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100213370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 264));
  if (v0)
    v2 = sub_1002133D4;
  else
    v2 = sub_100213240;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002133D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 216);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100213448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v7[16] = a1;
  return swift_task_switch(sub_100213468, 0, 0);
}

uint64_t sub_100213468()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v3 = (void *)v0[17];
  v2 = v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100213508;
  v4 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1002136A4;
  v5[3] = &unk_1011AC530;
  v5[4] = v4;
  objc_msgSend(v3, "reverseGeocodeLocation:completionHandler:", v2, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_100213508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 168) = v1;
  if (v1)
    v2 = sub_100213634;
  else
    v2 = sub_100213568;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100213568()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD **)(v0 + 128);
  *v2 = *(_QWORD *)(v0 + 152);
  v2[1] = v1;
  v4 = *(_QWORD *)(v0 + 160);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v8 = v3;
    else
      v8 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v3);
    v5 = _CocoaArrayWrapper.endIndex.getter(v8);
    result = swift_bridgeObjectRelease(v3);
    if (!v5)
      goto LABEL_7;
  }
  else
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v4);
    if (!v5)
    {
LABEL_7:
      swift_bridgeObjectRelease(v3);
      *(_QWORD *)(*(_QWORD *)(v0 + 128) + 16) = v5;
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(v3 + 32);
LABEL_6:
    v5 = (uint64_t)v7;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100213634()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v1 = v0[20];
  v2 = v0[21];
  v3 = v0[19];
  v4 = (_QWORD *)v0[16];
  swift_willThrow();
  swift_errorRelease(v2);
  *v4 = v3;
  v4[1] = v1;
  v4[2] = 0;
  v6 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain(v1);
  return v6();
}

uint64_t sub_1002136A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008B04(&qword_10149E610);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v11 = sub_10000E4BC(0, &qword_1014A0EF8, CLPlacemark_ptr);
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }
}

double sub_10021374C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *, uint64_t))
{
  _QWORD *v5;
  double result;

  if (a1)
    v5 = sub_10018D444(a1);
  else
    v5 = 0;
  a3(v5, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t sub_10021379C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_100008B04(&qword_1014A0F00);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 16) & ~v8;
  v10 = swift_allocObject(&unk_1011AC558, v9 + v6, v8 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_100214E00(a2, (uint64_t)sub_100214DB0, v10);
  return swift_release();
}

uint64_t sub_10021387C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v4;

  if (a1)
  {
    sub_100214FD4(a1);
    v4 = v1;
  }
  else
  {
    v4 = _swiftEmptyArrayStorage;
  }
  v2 = sub_100008B04(&qword_1014A0F00);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

uint64_t sub_1002138D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  return swift_task_switch(sub_1002138EC, 0, 0);
}

uint64_t sub_1002138EC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100213980;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100213A30;
  v4[3] = &unk_1011AC610;
  v4[4] = v3;
  objc_msgSend(v2, "startWithCompletionHandler:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_100213980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 144) = v1;
  if (v1)
    v2 = sub_1002139F4;
  else
    v2 = sub_1002139E0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002139E0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 128) = *(_QWORD *)(v0 + 120);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002139F4()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100213A30(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = sub_100008B04(&qword_10149E610);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100213ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1014A0F08 + dword_1014A0F08);
  v6 = (_QWORD *)swift_task_alloc(unk_1014A0F0C);
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_100073A34;
  return v8(a2, a3);
}

unint64_t sub_100213B30()
{
  unint64_t result;

  result = qword_1014A0D68;
  if (!qword_1014A0D68)
  {
    result = swift_getWitnessTable(aI_5, &type metadata for PlaceQuery);
    atomic_store(result, (unint64_t *)&qword_1014A0D68);
  }
  return result;
}

unint64_t sub_100213B78()
{
  unint64_t result;

  result = qword_1014A0D70[0];
  if (!qword_1014A0D70[0])
  {
    result = swift_getWitnessTable(byte_100E344D8, &type metadata for PlaceQuery);
    atomic_store(result, qword_1014A0D70);
  }
  return result;
}

uint64_t sub_100213BBC()
{
  return sub_10000BC84(&qword_10149E3D0, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E341C0);
}

uint64_t sub_100213BE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1014A0E74);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100073B94;
  return sub_100211898(a1);
}

uint64_t sub_100213C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000C0E0;
  return EntityQuery.suggestedEntities()(a1, a2, a3);
}

unint64_t sub_100213CA4()
{
  unint64_t result;

  result = qword_1014A0D88;
  if (!qword_1014A0D88)
  {
    result = swift_getWitnessTable(asc_100E34500, &type metadata for PlaceQuery);
    atomic_store(result, (unint64_t *)&qword_1014A0D88);
  }
  return result;
}

unint64_t sub_100213CEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1014A0D90;
  if (!qword_1014A0D90)
  {
    v1 = sub_10000E5D4(qword_1014A0D98);
    v2 = sub_10000BC84(&qword_1014A0D38, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E34308);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1014A0D90);
  }
  return result;
}

uint64_t sub_100213D68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10020FABC();
  *v5 = v2;
  v5[1] = sub_10000DD08;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for PlaceQuery()
{
  return &type metadata for PlaceQuery;
}

_QWORD *sub_100213DE4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a3[6];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UUID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v12 + 48);
    v14 = swift_bridgeObjectRetain(v7);
    if (v13(v10, 1, v11, v14))
    {
      v15 = sub_100008B04((uint64_t *)&unk_10149AA90);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v17 = a3[7];
    v18 = a3[8];
    v19 = (_QWORD *)((char *)v4 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    *(_QWORD *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    v22 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[11];
    v27 = a3[12];
    v28 = (_QWORD *)((char *)v4 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = (_QWORD *)((char *)v4 + v27);
    v32 = (uint64_t *)((char *)a2 + v27);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    swift_bridgeObjectRetain(v21);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v33);
  }
  return v4;
}

uint64_t sub_100213F84(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[6];
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_release(*(_QWORD *)(a1 + a2[8]));
  swift_release(*(_QWORD *)(a1 + a2[9]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[10] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[11] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[12] + 8));
}

uint64_t sub_100214050(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v11 + 48);
  v13 = swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10, v13))
  {
    v14 = sub_100008B04((uint64_t *)&unk_10149AA90);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v20 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[11];
  v25 = a3[12];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (_QWORD *)(a1 + v25);
  v30 = (_QWORD *)(a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain(v19);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v31);
  return a1;
}

uint64_t sub_1002141C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v8;
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_100008B04((uint64_t *)&unk_10149AA90);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v21 = v20[1];
  v22 = v19[1];
  v19[1] = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v22);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v26 = v25[1];
  v27 = v24[1];
  v24[1] = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v27);
  v28 = a3[11];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  *v29 = *v30;
  v31 = v30[1];
  v32 = v29[1];
  v29[1] = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  v33 = a3[12];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v36 = v35[1];
  v37 = v34[1];
  v34[1] = v36;
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRelease(v37);
  return a1;
}

uint64_t sub_1002143EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100008B04((uint64_t *)&unk_10149AA90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_100214504(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_100008B04((uint64_t *)&unk_10149AA90);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_release();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[11];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v30[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease(v34);
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  v40 = v36[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease(v40);
  return a1;
}

uint64_t sub_1002146CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002146D8);
}

uint64_t sub_1002146D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100008B04((uint64_t *)&unk_10149AA90);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100214760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021476C);
}

uint64_t sub_10021476C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100008B04((uint64_t *)&unk_10149AA90);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  return result;
}

void sub_1002147F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_100E34538;
  v4[1] = &unk_100E34550;
  sub_1001F36D8(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_100E34568;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = &unk_100E34538;
    v4[7] = &unk_100E34538;
    v4[8] = &unk_100E34538;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
  }
}

uint64_t sub_10021488C()
{
  return sub_100010D70(&qword_1014A0E60, &qword_1014A0E68, (const char *)&protocol conformance descriptor for ProxyRepresentation<A, B>);
}

uint64_t sub_1002148B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002148DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1014A0E7C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000DD08;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch(sub_100212750, 0, 0);
}

uint64_t sub_100214940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1014A0E9C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000DD08;
  return sub_1002128B8(a1, v4);
}

uint64_t sub_100214998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaceEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002149DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149AA90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100214A24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch(sub_100214A3C, 0, 0);
}

uint64_t sub_100214A3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v0[2] = _swiftEmptyArrayStorage;
  sub_100008B04(&qword_1014A0EC8);
  v2 = swift_task_alloc(32);
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 2;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withThrowingTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_100214AF0;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100214AF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 40);
  *(_QWORD *)(*v1 + 48) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100214B68;
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v2 + 32));
    v4 = sub_100214B5C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100214B5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100214B68()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100214BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc(dword_1014A0ED4);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_10000DD08;
  return sub_10021291C(a1, a2, v7, v6);
}

_BYTE *sub_100214C10@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100214C24(a1, a2);
}

_BYTE *sub_100214C24@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_100214C90()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100214CCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = swift_task_alloc(dword_1014A0EEC);
  v7 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_10000C0E0;
  *(_QWORD *)(v6 + 152) = v4;
  *(_QWORD *)(v6 + 160) = v5;
  *(_OWORD *)(v6 + 136) = v7;
  *(_QWORD *)(v6 + 128) = a1;
  return swift_task_switch(sub_100213468, 0, 0);
}

uint64_t sub_100214D44(uint64_t a1)
{
  uint64_t v1;

  return sub_10021379C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_100214D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_100008B04(&qword_1014A0F00);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100214DB0(uint64_t a1)
{
  sub_100008B04(&qword_1014A0F00);
  return sub_10021387C(a1);
}

void sub_100214E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  Class isa;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void **v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;

  v5 = objc_msgSend(objc_allocWithZone((Class)MKMapService), "init");
  sub_10000E4BC(0, &qword_10149A2F0, MKMapItemIdentifier_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "ticketForIdentifiers:traits:", isa, 0);

  if (v7)
  {
    v8 = swift_allocObject(&unk_1011AC580, 32, 7);
    *(_QWORD *)(v8 + 16) = a2;
    *(_QWORD *)(v8 + 24) = a3;
    v15 = sub_100214FB4;
    v16 = v8;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_100028E50;
    v14 = &unk_1011AC598;
    v9 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    v15 = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
    v16 = 0;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_1001E2858;
    v14 = &unk_1011AC5C0;
    v10 = _Block_copy(&v11);
    objc_msgSend(v7, "submitWithHandler:networkActivity:", v9, v10);
    _Block_release(v10);
    _Block_release(v9);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100214F90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100214FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10021374C(a1, a2, *(void (**)(_QWORD *, uint64_t))(v2 + 16));
}

double sub_100214FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100214FCC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100214FD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v2 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PlaceEntity(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - v10;
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v12)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v21 = a1;
  else
    v21 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v12 = _CocoaArrayWrapper.endIndex.getter(v21);
  if (!v12)
    goto LABEL_18;
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
  }
  else
  {
    v13 = 0;
    v22 = a1 & 0xC000000000000001;
    v14 = _swiftEmptyArrayStorage;
    v23 = a1;
    do
    {
      if (v22)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
      else
        v15 = *(id *)(a1 + 8 * v13 + 32);
      v16 = v15;
      v17 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v4, 1, 1, v17);
      v18 = v16;
      sub_10020FB00(v18, (uint64_t)v4, (uint64_t)v11);
      sub_100185C80((uint64_t)v11, (uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
        v14 = (_QWORD *)sub_1000A928C(0, v14[2] + 1, 1, (unint64_t)v14);
      v20 = v14[2];
      v19 = v14[3];
      if (v20 >= v19 >> 1)
        v14 = (_QWORD *)sub_1000A928C(v19 > 1, v20 + 1, 1, (unint64_t)v14);
      ++v13;
      v14[2] = v20 + 1;
      sub_100214998((uint64_t)v8, (uint64_t)v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v20);

      sub_100185CC4((uint64_t)v11);
      a1 = v23;
    }
    while (v12 != v13);
    swift_bridgeObjectRelease(v23);
  }
}

uint64_t sub_100215234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 720) = a2;
  *(_QWORD *)(v2 + 712) = a1;
  return swift_task_switch(sub_100215250, 0, 0);
}

uint64_t sub_100215250()
{
  _QWORD *v0;
  id v1;
  NSString v2;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  __n128 v7;

  v1 = objc_msgSend(objc_allocWithZone((Class)MKLocalSearchRequest), "init");
  v0[91] = v1;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setNaturalLanguageQuery:", v2);

  v3 = objc_msgSend(objc_allocWithZone((Class)MKLocalSearch), "initWithRequest:", v1);
  v0[92] = v3;
  v4 = swift_allocObject(&unk_1011AC5F8, 24, 7);
  v0[93] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  v5 = v3;
  swift_retain();
  v6 = sub_10000E4BC(255, &qword_1014A0F20, MKLocalSearchResponse_ptr);
  swift_asyncLet_begin(v0 + 2, 0, v6, &unk_1014A0F18, v4, v0 + 87, v7);
  v0[88] = _swiftEmptyArrayStorage;
  return swift_asyncLet_get_throwing(v0 + 2, v0 + 87, sub_100215388, v0 + 82);
}

uint64_t sub_100215388()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  *(_QWORD *)(v1 + 752) = v0;
  if (v0)
    v2 = sub_1002154D8;
  else
    v2 = sub_1002153B0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002153B0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = objc_msgSend(*(id *)(v0 + 696), "mapItems");
  v2 = sub_10000E4BC(0, &qword_101493E78, MKMapItem_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  sub_100214FD4(v3);
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  sub_100120BC0(v5);
  *(_QWORD *)(v0 + 760) = *(_QWORD *)(v0 + 704);
  return swift_asyncLet_finish(v0 + 16, v0 + 696, sub_100215474, v0 + 656, v6);
}

uint64_t sub_100215474()
{
  return swift_task_switch(sub_100215488, 0, 0);
}

uint64_t sub_100215488()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(void **)(v0 + 736);

  swift_release_n(v1, 2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 760));
}

uint64_t sub_1002154D8(__n128 a1)
{
  uint64_t v1;

  return swift_asyncLet_finish(v1 + 16, v1 + 696, sub_1002154F0, v1 + 656, a1);
}

uint64_t sub_1002154F0()
{
  return swift_task_switch(sub_100215504, 0, 0);
}

uint64_t sub_100215504()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 744);
  v2 = *(void **)(v0 + 736);

  swift_release_n(v1, 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100215550()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100215574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1014A0F14);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000DD08;
  v5[16] = a1;
  v5[17] = v4;
  return swift_task_switch(sub_1002138EC, 0, 0);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC4MapsP33_EE741913413A5E755F344FDCF6033C0F19ResourceBundleClass);
}

void sub_100215C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100215CA8(id result)
{
  ++*(_QWORD *)(*((_QWORD *)result + 4) + 40);
  if (!*((_BYTE *)result + 48))
    return objc_msgSend(*((id *)result + 5), "setHidden:", 0);
  return result;
}

id sub_100215CD0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_updateAlpha");
}

void sub_100215CD8(uint64_t a1)
{
  _QWORD *WeakRetained;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t v6;
  _QWORD *v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained[5];
    v4 = v3 == 1;
    v5 = v3 < 1;
    v6 = v3 - 1;
    if (!v5)
    {
      WeakRetained[5] = v6;
      if (v4)
      {
        if (*((_BYTE *)WeakRetained + 25))
        {
          v7 = WeakRetained;
          objc_msgSend(*(id *)(a1 + 32), "setHidden:", 1);
          WeakRetained = v7;
        }
      }
    }
  }

}

id sub_100216008(uint64_t a1)
{
  uint64_t v2;

  if (objc_msgSend(*(id *)(a1 + 32), "trackingStateReason") == (id)2)
    v2 = 3;
  else
    v2 = 2;
  return objc_msgSend(*(id *)(a1 + 40), "setCurrentState:", v2);
}

void sub_100216080(id a1)
{
  void *v1;

  v1 = (void *)qword_1014D1D60;
  qword_1014D1D60 = (uint64_t)&off_101272E40;

}

id sub_100217BC8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "sizeToFit");
}

void sub_100217BD0(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void (**v7)(id, id, uint64_t, _QWORD);

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  v7 = (void (**)(id, id, uint64_t, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "customizationBlock"));
  v7[2](v7, v6, a3, *(_QWORD *)(a1 + 40));

}

id sub_100217C38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layoutBelowIfNeeded");
}

void sub_100218258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10021827C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10021828C(uint64_t a1)
{

}

void sub_100218294(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;

  v22 = a2;
  objc_msgSend(*(id *)(a1 + 32), "addSubview:", v22);
  v5 = *(void **)(a1 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "trailingAnchor"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "constraintEqualToAnchor:constant:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), -*(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24)));
  objc_msgSend(v5, "addObject:", v7);

  v8 = objc_msgSend(*(id *)(a1 + 48), "verticalArrangement");
  v9 = *(void **)(a1 + 40);
  if (v8)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "centerYAnchor"));
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "centerYAnchor"));
  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "topAnchor"));
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topAnchor"));
  }
  v12 = (void *)v11;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "constraintEqualToAnchor:", v11));
  objc_msgSend(v9, "addObject:", v13);

  if ((char *)objc_msgSend(*(id *)(a1 + 56), "count") - 1 == a3)
  {
    v14 = *(void **)(a1 + 40);
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "leadingAnchor"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "leadingAnchor"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "constraintGreaterThanOrEqualToAnchor:", v16));
    objc_msgSend(v14, "addObject:", v17);

  }
  v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "leadingAnchor"));
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v20 = *(void **)(v19 + 40);
  *(_QWORD *)(v19 + 40) = v18;

  objc_msgSend(*(id *)(a1 + 48), "interItemHorizontalPadding");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = v21;

}

void sub_1002195B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1002195D0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1002195E0(uint64_t a1)
{

}

void sub_1002195F0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = a2;
  v4 = objc_alloc((Class)MKMapItem);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "geoMapItem"));

  v9 = objc_msgSend(v4, "initWithGeoMapItem:isPlaceHolderPlace:", v5, 1);
  v6 = objc_msgSend(objc_alloc(*(Class *)(a1 + 40)), "initWithMapItem:", v9);
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

}

void sub_100219E88(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  v3 = *(void **)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "resolvedMapItem"));
  objc_msgSend(v3, "_didResolveMapItem:", v4);

  objc_msgSend(*(id *)(a1 + 40), "setCompletedUnitCount:", objc_msgSend(*(id *)(a1 + 40), "totalUnitCount"));
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

id sub_100219EE8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "cancel");
}

void sub_10021A244(uint64_t a1)
{
  void *v2;
  void (**v3)(void);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "cancellationHandler"));

  if (v2)
  {
    v3 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "cancellationHandler"));
    v3[2]();

  }
}

void sub_10021A2B4(uint64_t a1, void *a2)
{
  id v3;
  _QWORD *v4;
  _QWORD *v5;
  void ***v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned int v13;
  void **v14;
  uint64_t v15;
  id (*v16)(uint64_t, void *);
  void *v17;
  id v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;

  v3 = a2;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_10021A4A0;
  v20[3] = &unk_1011ACA58;
  v22 = *(id *)(a1 + 56);
  v21 = *(id *)(a1 + 32);
  v4 = objc_retainBlock(v20);
  v14 = _NSConcreteStackBlock;
  v15 = 3221225472;
  v16 = sub_10021A4D8;
  v17 = &unk_1011ACA80;
  v18 = *(id *)(a1 + 40);
  v5 = v4;
  v19 = v5;
  v6 = objc_retainBlock(&v14);
  v7 = *(void **)(a1 + 40);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeUTF8PlainText, "identifier", v14, v15, v16, v17));
  LODWORD(v7) = objc_msgSend(v7, "isEqualToString:", v8);

  if ((_DWORD)v7)
  {
    if (*(_QWORD *)(*(_QWORD *)(a1 + 48) + 24))
    {
      v9 = objc_alloc_init((Class)CNContactFormatter);
      objc_msgSend(v9, "setStyle:", 0);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 24), "contact"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "stringFromContact:", v10));

    }
    else
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "name"));
    }
    ((void (*)(void ***, void *))v6[2])(v6, v11);

  }
  else
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[MKMapItem writableTypeIdentifiersForItemProvider](MKMapItem, "writableTypeIdentifiersForItemProvider"));
    v13 = objc_msgSend(v12, "containsObject:", *(_QWORD *)(a1 + 40));

    if (v13)
      ((void (*)(void ***, id))v6[2])(v6, v3);
  }

}

id sub_10021A4A0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return objc_msgSend(*(id *)(a1 + 32), "setCompletedUnitCount:", objc_msgSend(*(id *)(a1 + 32), "totalUnitCount"));
}

id sub_10021A4D8(uint64_t a1, void *a2)
{
  if (a2)
    return objc_msgSend(a2, "loadDataWithTypeIdentifier:forItemProviderCompletionHandler:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  else
    return (id)(*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t sub_10021A514(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56));
}

void sub_10021C8D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "VLFSessionMonitor");
  v2 = (void *)qword_1014D1D70;
  qword_1014D1D70 = (uint64_t)v1;

}

id sub_10021CD10(id a1, MKMapItem *a2, unint64_t a3)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(-[MKMapItem _cnPostalAddress](a2, "_cnPostalAddress", a3));
  v4 = objc_msgSend(v3, "copy");

  return v4;
}

id sub_10021DFE8()
{
  if (qword_1014D1D88 != -1)
    dispatch_once(&qword_1014D1D88, &stru_1011ACC90);
  return (id)qword_1014D1D80;
}

void sub_10021E174(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10021E204;
  v6[3] = &unk_1011ACAD0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_10021E204(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_10021E214(uint64_t a1, void *a2, uint64_t a3, void *a4, double a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD block[4];
  id v15;
  id v16;
  id v17;
  double v18;
  uint64_t v19;

  v9 = a2;
  v10 = a4;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10021E2E8;
  block[3] = &unk_1011ACB80;
  v11 = *(id *)(a1 + 32);
  v16 = v10;
  v17 = v11;
  v18 = a5;
  v19 = a3;
  v15 = v9;
  v12 = v10;
  v13 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

uint64_t sub_10021E2E8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, double))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 40), *(double *)(a1 + 56));
}

uint64_t sub_10021E304(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10021E468(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10021E4F8;
  v6[3] = &unk_1011ACAD0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_10021E4F8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_10021E508(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "image"));
  objc_msgSend(v3, "_prepareImageThumbnailWithOriginalImage:targetSize:scale:completion:", v4, *(_QWORD *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));

}

void sub_10021E6E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10021E704(uint64_t a1, void *a2, void *a3)
{
  UIImage *v5;
  id v6;
  id WeakRetained;
  void *v8;
  unsigned int v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  CGFloat Double;
  NSData *v14;
  void *v15;
  UGCPhotoWithMetadata *v16;
  int v17;
  uint64_t v18;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", PHImageResultIsDegradedKey));
    v9 = objc_msgSend(v8, "BOOLValue");

    if (v9)
    {
      v10 = sub_10021DFE8();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        v12 = *(_QWORD *)(a1 + 32);
        v17 = 138412290;
        v18 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "UGCARPPhotoCarouselController loaded asset of low-resolution image quality: %@", (uint8_t *)&v17, 0xCu);
      }

    }
    if (v5)
    {
      Double = GEOConfigGetDouble(MapsConfig_ARPUserSelectedPhotoJPEGCompressionQuality, off_1014B4A98);
      v14 = UIImageJPEGRepresentation(v5, Double);
      v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
      v16 = -[UGCPhotoWithMetadata initWithImageData:PHAsset:sourceType:]([UGCPhotoWithMetadata alloc], "initWithImageData:PHAsset:sourceType:", v15, *(_QWORD *)(a1 + 32), 2);
      -[UGCPhotoWithMetadata setIsSuggestedPhoto:](v16, "setIsSuggestedPhoto:", 1);
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

    }
    else
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    }
  }

}

uint64_t sub_10021E970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 40);
  if (!a2)
    a2 = *(_QWORD *)(a1 + 32);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v3, a2);
}

void sub_10021EA64(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "UGCARPPhotoCarouselController");
  v2 = (void *)qword_1014D1D80;
  qword_1014D1D80 = (uint64_t)v1;

}

id sub_10021EE70()
{
  if (qword_1014D1D98 != -1)
    dispatch_once(&qword_1014D1D98, &stru_1011ACCD8);
  return (id)qword_1014D1D90;
}

void sub_10021EEB0(uint64_t a1, char a2)
{
  id WeakRetained;
  id v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  uint8_t buf[4];
  uint64_t v9;

  if ((a2 & 1) == 0)
  {
    if (objc_msgSend(*(id *)(a1 + 32), "_isValidURLForWebView:", *(_QWORD *)(a1 + 40)))
    {
      v7 = objc_msgSend(objc_alloc((Class)SFSafariViewController), "initWithURL:", *(_QWORD *)(a1 + 40));
      if (!sub_1002A8AA0(v7))
        objc_msgSend(v7, "setModalPresentationStyle:", 2);
      WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 8));
      objc_msgSend(WeakRetained, "_maps_topMostPresentViewController:animated:completion:", v7, 1, 0);

      goto LABEL_8;
    }
    if (objc_msgSend(*(id *)(a1 + 32), "_isValidURLToOpen:", *(_QWORD *)(a1 + 40)))
    {
      v7 = (id)objc_claimAutoreleasedReturnValue(+[MKSystemController sharedInstance](MKSystemController, "sharedInstance"));
      objc_msgSend(v7, "openURL:completionHandler:", *(_QWORD *)(a1 + 40), 0);
LABEL_8:

      return;
    }
    v4 = sub_10021EE70();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412290;
      v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "can't open the URL: %@", buf, 0xCu);
    }

  }
}

void sub_10021F0E0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "MapsWebLinkPresentation");
  v2 = (void *)qword_1014D1D90;
  qword_1014D1D90 = (uint64_t)v1;

}

void sub_100221060(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v11 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "mapItem"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_identifier"));

  if (v4)
  {
    v5 = *(void **)(*(_QWORD *)(a1 + 32) + 168);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "mapItem"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "_identifier"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v7));

    if (v8)
    {
      v9 = *(void **)(*(_QWORD *)(a1 + 32) + 136);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "mapItem"));
      objc_msgSend(v9, "refreshResultForForTemplate:mapItem:", v8, v10);

    }
  }

}

__CFString *sub_1002218C0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  __CFString *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "_isItemVenue:", v3))
  {
    v4 = *(void **)(*(_QWORD *)(a1 + 32) + 88);
    v5 = v3;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "mapItem"));
    objc_msgSend(v4, "addVenueProviderForMapItem:", v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifierCache"));
    v8 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "identifierForObject:", v5));

LABEL_8:
    goto LABEL_9;
  }
  v9 = objc_opt_class(VenueDropDownOutlineCellModel);
  if ((objc_opt_isKindOfClass(v3, v9) & 1) != 0)
  {
    v8 = CFSTR("VenueDropDownIdentifier");
  }
  else
  {
    v10 = objc_opt_class(ReportASearchAutocompleteResult);
    if ((objc_opt_isKindOfClass(v3, v10) & 1) == 0)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifierCache"));
      v8 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "identifierForObject:", v3));
      goto LABEL_8;
    }
    v8 = (__CFString *)objc_claimAutoreleasedReturnValue(+[ReportASearchAutocompleteResult identifier](ReportASearchAutocompleteResult, "identifier"));
  }
LABEL_9:

  return v8;
}

_TtC4Maps28PlaceSummaryOutlineCellModel *sub_1002219E4(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  PlaceContextViewModel *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  double v20;
  void *v21;
  _TtC4Maps28PlaceSummaryOutlineCellModel *v22;
  uint64_t v23;
  _TtC4Maps28PlaceSummaryOutlineCellModel *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  PlaceContextViewModel *v28;
  void *v29;
  SearchResultOutlineCellModel *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v35;
  _TtC4Maps28PlaceSummaryOutlineCellModel *v36;
  void *v37;
  id v38;
  NSObject *v39;
  uint8_t buf[4];
  id v41;

  v3 = a2;
  v4 = objc_opt_class(SearchResult);
  if ((objc_opt_isKindOfClass(v3, v4) & 1) != 0)
  {
    v5 = v3;
    v6 = v5;
    v7 = *(_QWORD *)(a1 + 32);
    if (*(_BYTE *)(v7 + 152))
    {
      v8 = *(void **)(v7 + 160);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "mapItem"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "_identifier"));
      v11 = (PlaceContextViewModel *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", v10));

      if (!v11)
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "placeSummaryMetadata"));
        v13 = *(_QWORD *)(a1 + 48);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "openAt"));
        v11 = (PlaceContextViewModel *)objc_claimAutoreleasedReturnValue(+[PlaceSummaryViewModelTemplateFactory viewModelWithSearchResult:metadata:currentLocation:searchAlongRoute:openAt:](_TtC4Maps36PlaceSummaryViewModelTemplateFactory, "viewModelWithSearchResult:metadata:currentLocation:searchAlongRoute:openAt:", v6, v12, v13, 0, v14));

        v15 = *(void **)(*(_QWORD *)(a1 + 32) + 160);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "mapItem"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "_identifier"));
        objc_msgSend(v15, "setObject:forKey:", v11, v17);

      }
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configuration"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "collectionView"));
      objc_msgSend(v19, "frame");
      -[PlaceContextViewModel setContainerWidth:](v11, "setContainerWidth:", v20);

      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "placeSummaryMetadata"));
      -[PlaceContextViewModel setContainsPhotoCarouselLine:](v11, "setContainsPhotoCarouselLine:", objc_msgSend(v21, "containsPhotoCarouselLine"));

      objc_msgSend(*(id *)(a1 + 32), "addMetricsForPlaceSummaryTemplate:", v11);
      v22 = -[PlaceSummaryOutlineCellModel initWithSearchResult:placeSummaryViewModelTemplate:delegate:asyncDataManager:curatedCollectionImageDownloader:]([_TtC4Maps28PlaceSummaryOutlineCellModel alloc], "initWithSearchResult:placeSummaryViewModelTemplate:delegate:asyncDataManager:curatedCollectionImageDownloader:", v6, v11, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 128), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 144));
    }
    else
    {
      v28 = [PlaceContextViewModel alloc];
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "mapItem"));
      v11 = -[PlaceContextViewModel initWithMapItem:context:](v28, "initWithMapItem:context:", v29, 0);

      v30 = [SearchResultOutlineCellModel alloc];
      v31 = *(_QWORD *)(a1 + 48);
      v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "searchFieldItem"));
      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "currentCategory"));
      v22 = -[SearchResultOutlineCellModel initWithSearchResult:currentLocation:searchCategory:displayDistance:distanceUnit:prefersAddressOverCategory:placeContextViewModel:placeContextViewModelDelegate:](v30, "initWithSearchResult:currentLocation:searchCategory:displayDistance:distanceUnit:prefersAddressOverCategory:placeContextViewModel:placeContextViewModelDelegate:", v6, v31, v33, 1, *(_QWORD *)(a1 + 56), objc_msgSend(*(id *)(a1 + 40), "prefersAddressOverCategory"), v11, *(_QWORD *)(a1 + 32));

    }
    goto LABEL_15;
  }
  v23 = objc_opt_class(HomeSearchResultsFilterItem);
  if ((objc_opt_isKindOfClass(v3, v23) & 1) != 0)
  {
    v24 = (_TtC4Maps28PlaceSummaryOutlineCellModel *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "cellModel"));
LABEL_12:
    v22 = v24;
    goto LABEL_15;
  }
  v25 = objc_opt_class(VenueDropDownOutlineCellModel);
  if ((objc_opt_isKindOfClass(v3, v25) & 1) != 0
    || (v26 = objc_opt_class(RelatedSearchSuggestionOutlineCellModel),
        (objc_opt_isKindOfClass(v3, v26) & 1) != 0)
    || (v27 = objc_opt_class(HomeSearchStatusOutlineCellModel), (objc_opt_isKindOfClass(v3, v27) & 1) != 0))
  {
    v24 = (_TtC4Maps28PlaceSummaryOutlineCellModel *)v3;
    goto LABEL_12;
  }
  v35 = objc_opt_class(ReportASearchAutocompleteResult);
  if ((objc_opt_isKindOfClass(v3, v35) & 1) != 0)
  {
    v36 = [_TtC4Maps28PlaceSummaryOutlineCellModel alloc];
    v37 = (void *)objc_claimAutoreleasedReturnValue(+[PlaceSummaryViewModelTemplateFactory addAPlaceSearchViewModel](_TtC4Maps36PlaceSummaryViewModelTemplateFactory, "addAPlaceSearchViewModel"));
    v22 = -[PlaceSummaryOutlineCellModel initWithRapObject:placeSummaryViewModelTemplate:delegate:asyncDataManager:curatedCollectionImageDownloader:](v36, "initWithRapObject:placeSummaryViewModelTemplate:delegate:asyncDataManager:curatedCollectionImageDownloader:", v3, v37, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 128), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 144));

  }
  else
  {
    v38 = sub_100432EDC();
    v39 = objc_claimAutoreleasedReturnValue(v38);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v41 = v3;
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_INFO, "No items are returned. Item is : %@", buf, 0xCu);
    }

    v22 = 0;
  }
LABEL_15:

  return v22;
}

id sub_100221E1C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "_isItemVenue:", v3))
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_childItemsInVenueSearchResult:", v3));
  else
    v4 = &__NSArray0__struct;

  return v4;
}

id sub_100221E78(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = *(void **)(a1 + 32);
  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "expandedIdentifierPaths"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "topIdentifierPath"));

  v7 = objc_msgSend(v5, "containsObject:", v6);
  return v7;
}

void sub_100223ADC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = *(void **)(a1 + 40);
  v8 = *(id *)(a1 + 32);
  objc_msgSend(v2, "addChildViewController:", v8);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "view"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "titleHeaderView"));
  objc_msgSend(v3, "insertSubview:belowSubview:", v4, v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "view"));
  objc_msgSend(v6, "setAlpha:", 1.0);

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "cardPresentationController"));
  objc_msgSend(v7, "wantsLayout:", 2);

  objc_msgSend(v8, "didMoveToParentViewController:", *(_QWORD *)(a1 + 40));
}

void sub_100223FBC(uint64_t a1)
{
  void *v2;
  void *v3;
  double v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 176), "scrollView"));
  objc_msgSend(v2, "contentInset");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 176), "scrollView"));
  objc_msgSend(v3, "contentOffset");

  if (*(_BYTE *)(a1 + 40))
    v4 = 1.0;
  else
    v4 = 0.0;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "titleHeaderView"));
  objc_msgSend(v5, "setHairLineAlpha:", v4);

}

void sub_1002246D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1002246F8(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "menuElementForActionItem:", v3));
  else
    v6 = 0;

  return v6;
}

void sub_100224874(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100224894(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  id WeakRetained;

  v2 = objc_msgSend(*(id *)(a1 + 32), "selected");
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "selectedItem"));
    objc_msgSend(WeakRetained, "performAction:options:completion:", v3, &__NSDictionary0__struct, &stru_1011ACDE8);

  }
  else
  {
    objc_msgSend(WeakRetained, "performAction:options:completion:", *(_QWORD *)(a1 + 32), &__NSDictionary0__struct, &stru_1011ACE08);
  }

}

UIColor *__cdecl sub_100225934(id a1, MapsTheme *a2)
{
  return -[MapsTheme keyColor](a2, "keyColor");
}

void sub_100225B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100225B8C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id obj;
  _QWORD v20[4];
  id v21;
  id v22;
  _QWORD v23[5];
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];

  v17 = a2;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "displayString"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "subcategories"));
  v3 = objc_msgSend(v2, "count");

  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "subcategories"));
    v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    if (v5)
    {
      v6 = *(_QWORD *)v26;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(_QWORD *)v26 != v6)
            objc_enumerationMutation(obj);
          v8 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "displayString"));
          v23[0] = _NSConcreteStackBlock;
          v23[1] = 3221225472;
          v23[2] = sub_100225F00;
          v23[3] = &unk_1011ACEC0;
          objc_copyWeak(&v24, (id *)(a1 + 48));
          v23[4] = v8;
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[UIAction actionWithTitle:image:identifier:handler:](UIAction, "actionWithTitle:image:identifier:handler:", v9, 0, 0, v23));
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "selectedCategory"));
          objc_msgSend(v10, "setState:", objc_msgSend(v11, "isEqual:", v8));

          objc_msgSend(v4, "addObject:", v10);
          objc_destroyWeak(&v24);

        }
        v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
      }
      while (v5);
    }

    v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:children:](UIMenu, "menuWithTitle:children:", v16, v4));
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v12);

  }
  else
  {
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_100225F3C;
    v20[3] = &unk_1011ACEC0;
    objc_copyWeak(&v22, (id *)(a1 + 48));
    v13 = v17;
    v21 = v13;
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[UIAction actionWithTitle:image:identifier:handler:](UIAction, "actionWithTitle:image:identifier:handler:", v16, 0, 0, v20));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "selectedCategory"));
    objc_msgSend(v14, "setState:", objc_msgSend(v15, "isEqual:", v13));

    objc_msgSend(*(id *)(a1 + 40), "addObject:", v14);
    objc_destroyWeak(&v22);
  }

}

void sub_100225ED8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100225F00(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_itemSelectedCategory:", *(_QWORD *)(a1 + 32));

}

void sub_100225F3C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_itemSelectedCategory:", *(_QWORD *)(a1 + 32));

}

void sub_1002260A0(uint64_t a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = objc_msgSend(*(id *)(a1 + 32), "registrationWithCellClass:configurationHandler:", objc_opt_class(VenueDropDownOutlineCell), &stru_1011ACF28);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_1014D1DA0;
  qword_1014D1DA0 = v2;

}

void sub_1002260EC(id a1, VenueDropDownOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  VenueDropDownOutlineCell *v9;

  v9 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[MapsUIDiffableDataSourceOutlineNodeSnapshot viewModel](a4, "viewModel"));
  v6 = objc_opt_class(VenueDropDownOutlineCellModel);
  if ((objc_opt_isKindOfClass(v5, v6) & 1) != 0)
    v7 = v5;
  else
    v7 = 0;
  v8 = v7;

  -[VenueDropDownOutlineCell setCellModel:](v9, "setCellModel:", v8);
}

id sub_100226C6C()
{
  if (qword_1014D1DB8 != -1)
    dispatch_once(&qword_1014D1DB8, &stru_1011ACF68);
  return (id)qword_1014D1DB0;
}

void sub_100227CE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "MapsLoopingVideoPlayerView");
  v2 = (void *)qword_1014D1DB0;
  qword_1014D1DB0 = (uint64_t)v1;

}

int64_t sub_100229304(id a1, RAPUserPathEntry *a2, RAPUserPathEntry *a3)
{
  RAPUserPathEntry *v4;
  RAPUserPathEntry *v5;
  unsigned int v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v4 = a3;
  v5 = a2;
  v6 = -[RAPUserPathEntry routeIndex](v5, "routeIndex");
  if (v6 == -[RAPUserPathEntry routeIndex](v4, "routeIndex"))
  {
    v7 = (id)-[RAPUserPathEntry stepIndex](v5, "stepIndex");

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v7));
    v9 = (id)-[RAPUserPathEntry stepIndex](v4, "stepIndex");
  }
  else
  {
    v10 = (id)-[RAPUserPathEntry routeIndex](v5, "routeIndex");

    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v10));
    v9 = (id)-[RAPUserPathEntry routeIndex](v4, "routeIndex");
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v9));
  v12 = objc_msgSend(v8, "compare:", v11);

  return (int64_t)v12;
}

void sub_1002293F8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  NSMutableIndexSet *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  id v17;
  void *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  id v22;
  uint8_t buf[4];
  __CFString *v24;
  __int16 v25;
  id v26;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", objc_msgSend(v3, "routeIndex")));
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", v5));

  if (v6)
    goto LABEL_4;
  v7 = sub_1004483CC(*(void **)(*(_QWORD *)(a1 + 40) + 16), objc_msgSend(v3, "routeIndex"));
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (v8)
  {
    v6 = v8;
    v9 = *(void **)(a1 + 32);
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", objc_msgSend(v3, "routeIndex")));
    objc_msgSend(v9, "setObject:forKeyedSubscript:", v6, v10);

    v11 = *(void **)(a1 + 48);
    v12 = objc_opt_new(NSMutableIndexSet);
    objc_msgSend(v11, "setObject:forKey:", v12, v6);

LABEL_4:
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKey:", v6));
    objc_msgSend(v13, "addIndex:", objc_msgSend(v3, "stepIndex"));
    if (objc_msgSend(v3, "traversal") == 2)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "objectForKey:", v6));

      if (v14)
      {
        v15 = sub_100431F8C();
        v16 = objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_FAULT))
        {
          v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 16), "userPaths"));
          v18 = v17;
          if (v17)
          {
            if (objc_msgSend(v17, "count"))
            {
              v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "componentsJoinedByString:", CFSTR(", ")));
              v20 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("<%p> [%@]"), v18, v19));

            }
            else
            {
              v20 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("<%p> (empty)"), v18));
            }
          }
          else
          {
            v20 = CFSTR("<nil>");
          }

          *(_DWORD *)buf = 138412290;
          v24 = v20;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_FAULT, "One route has multiple missed indexes. That's unexpected. userPaths: %@", buf, 0xCu);

        }
      }
      else
      {
        v21 = *(void **)(a1 + 56);
        v16 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", objc_msgSend(v3, "stepIndex")));
        objc_msgSend(v21, "setObject:forKey:", v16, v6);
      }

    }
    goto LABEL_18;
  }
  v22 = sub_100431F8C();
  v6 = objc_claimAutoreleasedReturnValue(v22);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 134218242;
    v24 = (__CFString *)objc_msgSend(v3, "routeIndex");
    v25 = 2112;
    v26 = v3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to create a route for index: %lu for userPath: %@", buf, 0x16u);
  }
LABEL_18:

}

int64_t sub_100229720(id a1, NSNumber *a2, NSNumber *a3)
{
  return -[NSNumber compare:](a2, "compare:", a3);
}

void sub_100229728(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  NSObject *v16;
  void *v17;
  int v18;
  id v19;
  __int16 v20;
  id v21;
  __int16 v22;
  void *v23;

  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v5));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKey:", v6));
  v8 = v7;
  if (v6 && objc_msgSend(v7, "count"))
  {
    v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKey:", v6));
    v10 = v9;
    v11 = *(void **)(a1 + 56);
    if (v9)
      v12 = (uint64_t)-[NSObject unsignedIntegerValue](v9, "unsignedIntegerValue");
    else
      v12 = 0x7FFFFFFFFFFFFFFFLL;
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "_buildDataSourceForRoute:displayedStepIndices:missedStepIndex:includeOrigin:includeDestination:", v6, v8, v12, a3 == 0, (char *)objc_msgSend(*(id *)(a1 + 64), "count") - 1 == a3));
    v15 = sub_100431F8C();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "uniqueRouteID"));
      v18 = 138412802;
      v19 = v5;
      v20 = 2112;
      v21 = v17;
      v22 = 2112;
      v23 = v8;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Will create route/indices pair. index: %@, id: %@, displayedIndices: %@", (uint8_t *)&v18, 0x20u);

    }
    objc_msgSend(*(id *)(a1 + 72), "addObject:", v14);

  }
  else
  {
    v13 = sub_100431F8C();
    v10 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      v18 = 138412802;
      v19 = v8;
      v20 = 2112;
      v21 = v5;
      v22 = 2112;
      v23 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to create a route/indices pair for indices: %@, routeIndex: %@, route: %@", (uint8_t *)&v18, 0x20u);
    }
  }

}

void sub_100229DBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100229DE8(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned int v11;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "route"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "uniqueRouteID"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "composedRoute"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "uniqueRouteID"));
  v11 = objc_msgSend(v8, "isEqual:", v10);

  if (v11)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
}

id sub_10022A1BC(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setTraitCollection:", *(_QWORD *)(a1 + 32));
}

id sub_10022A2A8(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setVehicle:", *(_QWORD *)(a1 + 32));
}

void sub_10022A448(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  unsigned int v9;
  void *v10;
  id v11;

  v5 = a2;
  objc_msgSend(v5, "setShowsHairline:", 1);
  v11 = v5;
  v6 = objc_opt_class(RouteStepManeuverItem);
  if ((objc_opt_isKindOfClass(v11, v6) & 1) != 0)
    v7 = v11;
  else
    v7 = 0;
  v8 = v7;

  v9 = objc_msgSend(v8, "isMissedStep");
  if (v9)
  {
    objc_msgSend(v11, "setShowsHairline:", 0);
    if (a3)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3 - 1));
      objc_msgSend(v10, "setShowsHairline:", 0);

    }
  }

}

id sub_10022A950(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_updateData");
}

void sub_10022AC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10022AC6C(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "virtualGarageDidUpdate:", v3);

}

id sub_10022AF38(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  id result;
  double v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v2, "reloadData");

  objc_msgSend(*(id *)(a1 + 32), "_updateTableHeightConstraint");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 104), "cgFloatValue");
  v4 = v3;
  result = objc_msgSend(*(id *)(a1 + 32), "_cellContentWidth");
  if (vabdd_f64(v4, v6) > 2.22044605e-16)
    return objc_msgSend(*(id *)(a1 + 32), "_reloadTableViewIfNeeded");
  return result;
}

void sub_10022CD10(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "selectedVehicle"));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "setVehicle:", v2);

}

void sub_10022D3D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10022D3F4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10022D404(uint64_t a1)
{

}

void sub_10022D40C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "object"));
  if (!v9)
    goto LABEL_3;
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "searchInfo"));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "results"));
  v7 = objc_msgSend(v6, "count");

  v8 = v9;
  if (!v7)
  {
LABEL_3:
    objc_msgSend(*(id *)(a1 + 32), "failedTest");
    v8 = v9;
  }

}

void sub_10022D4A4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if (v3
    && (v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "results")),
        v5 = objc_msgSend(v4, "count"),
        v4,
        v5))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "results"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "firstObject"));

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "testCoordinator"));
    objc_msgSend(v8, "pptTestPresentPlaceCardForSearchResult:animated:", v7, 1);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "failedTest");
  }

}

id sub_10022D560(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("loadPlaceCard"));
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:", CFSTR("loadRoute"));
}

id sub_10022D598(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("loadRoute"));
  return _objc_msgSend(*(id *)(a1 + 32), "doAfterSubTestForDisplayingRoutes");
}

void sub_10022D5C8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[5];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "results"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "firstObject"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mapItem"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "_geoMapItem"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10022D6AC;
  v7[3] = &unk_1011AD210;
  v7[4] = *(_QWORD *)(a1 + 32);
  v6 = +[GEOComposedWaypoint composedWaypointForMapItem:traits:clientAttributes:completionHandler:networkActivityHandler:](GEOComposedWaypoint, "composedWaypointForMapItem:traits:clientAttributes:completionHandler:networkActivityHandler:", v5, 0, 0, v7, 0);

}

void sub_10022D6AC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id location;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "failedTest");
  }
  else
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    v7 = *(void **)(a1 + 32);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10022D79C;
    v8[3] = &unk_1011AD1E8;
    objc_copyWeak(&v10, &location);
    v9 = v5;
    objc_msgSend(v7, "addFullyDrawnCallback:", v8);

    objc_destroyWeak(&v10);
    objc_destroyWeak(&location);
  }

}

void sub_10022D780(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10022D79C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_requestRouteWithResolvedDestination:", *(_QWORD *)(a1 + 32));

}

void sub_10022D7D8(uint64_t a1)
{
  void *v2;
  dispatch_time_t v3;
  void *v4;
  _QWORD v5[5];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "testCoordinator"));
  objc_msgSend(v2, "pptSelectKeyboardInteractionModel");

  v3 = dispatch_time(0, 2000000000);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10022D880;
  v5[3] = &unk_1011AC8B0;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, v5);

}

void sub_10022D880(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "testCoordinator"));
  objc_msgSend(v2, "pptTestSearchForFieldItem:", *(_QWORD *)(a1 + 40));

}

void sub_10022D9C4(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_mapstest_directionsPlanWithResolvedDestination:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(*(id *)(a1 + 48), "startedTest");
  objc_msgSend(*(id *)(a1 + 48), "startedSubTest:", CFSTR("directionsSetup"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "testCoordinator"));
  objc_msgSend(v2, "setPPTTestDirectionsPlan:", v3);

}

id sub_10022E4A0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("placeRequest:total"), &off_101272E58);
}

id sub_10022E510(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("placeRequest:total"));
}

id sub_10022E578(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("placeRequest:prepareRequest"), &off_101272E70);
}

id sub_10022E5E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("placeRequest:prepareRequest"));
}

void sub_10022E674(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 40);
  v2 = *(id *)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "object"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("placeRequest:handleResponse:%@"), v4));
  objc_msgSend(v2, "startedSubTest:withMetrics:", v3, &off_101272E88);

}

void sub_10022E774(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 40);
  v2 = *(id *)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "object"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("placeRequest:handleResponse:%@"), v4));
  objc_msgSend(v2, "finishedSubTest:", v3);

}

void sub_10022E86C(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 40);
  v2 = *(id *)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "object"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("placeRequest:geod:%@"), v4));
  objc_msgSend(v2, "startedSubTest:withMetrics:", v3, &off_101272EA0);

}

void sub_10022E96C(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 40);
  v2 = *(id *)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "object"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("placeRequest:geod:%@"), v4));
  objc_msgSend(v2, "finishedSubTest:", v3);

}

id sub_10022EA40(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("route:setDirectionsPlan"), &off_101272EB8);
}

id sub_10022EAB0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("route:setDirectionsPlan"));
}

id sub_10022EB18(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("route:setDirectionsPlan:directionsStarted"), &off_101272ED0);
}

id sub_10022EB88(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("route:setDirectionsPlan:directionsStarted"));
}

id sub_10022EBF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("route:setDirectionsPlan:routePicking"), &off_101272EE8);
}

id sub_10022EC60(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("route:setDirectionsPlan:routePicking"));
}

id sub_10022ECC8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("route:setDirectionsPlan:routePicking:loadingFromWaypoints"), &off_101272F00);
}

id sub_10022ED38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("route:setDirectionsPlan:routePicking:loadingFromWaypoints"));
}

id sub_10022EDA0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("route:setDirectionsPlan:directionsSearch"), &off_101272F18);
}

id sub_10022EE10(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("route:setDirectionsPlan:directionsSearch"));
}

id sub_10022EE78(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:withMetrics:", CFSTR("composeWaypoint"), &off_101272F30);
}

id sub_10022EEE8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("composeWaypoint"));
}

id sub_10022F25C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("displayRoutes"));
  return _objc_msgSend(*(id *)(a1 + 32), "doAfterSubTestForDisplayingRoutes");
}

void sub_10022F430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10022F44C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  id v3;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "startedTest");

  v3 = objc_loadWeakRetained(v1);
  objc_msgSend(v3, "tapOnSearchBar");

}

id sub_10022F648(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:", CFSTR("transitRouteUpdate:route"));
}

id sub_10022F658(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("transitRouteUpdate:route"));
}

id sub_10022F668(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:", CFSTR("transitRouteUpdate:summary"));
}

void sub_10022F678(uint64_t a1)
{
  dispatch_time_t v2;
  _QWORD block[5];

  objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("transitRouteUpdate:summary"));
  v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10022F700;
  block[3] = &unk_1011AC860;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10022F700(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_performRouteUpdateWithDetails");
}

void sub_10022F77C(uint64_t a1)
{
  dispatch_time_t v2;
  _QWORD block[5];
  _QWORD v4[5];
  _QWORD v5[5];

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10022F878;
  v5[3] = &unk_1011AD1C0;
  v5[4] = *(_QWORD *)(a1 + 32);
  +[PPTNotificationCenter addOnceObserverForName:object:usingBlock:](PPTNotificationCenter, "addOnceObserverForName:object:usingBlock:", CFSTR("MapsTestingTransitRouteUpdateWillUpdateDetails"), 0, v5);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10022F888;
  v4[3] = &unk_1011AD1C0;
  v4[4] = *(_QWORD *)(a1 + 32);
  +[PPTNotificationCenter addOnceObserverForName:object:usingBlock:](PPTNotificationCenter, "addOnceObserverForName:object:usingBlock:", CFSTR("MapsTestingTransitRouteUpdateDidUpdateDetails"), 0, v4);
  v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10022F8B8;
  block[3] = &unk_1011AC860;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10022F878(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "startedSubTest:", CFSTR("transitRouteUpdate:details"));
}

id sub_10022F888(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "finishedSubTest:", CFSTR("transitRouteUpdate:details"));
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest");
}

void sub_10022F8B8(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "testCoordinator"));
  objc_msgSend(v1, "pptTestResumeRealtimeTransitUpdates");

}

void sub_10022FA24(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10022FA40(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_setupDirectionsPlan:", *(_QWORD *)(a1 + 32));

}

void sub_10022FB5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10022FB7C(uint64_t a1)
{
  dispatch_time_t v2;
  _QWORD block[4];
  id v4;

  v2 = dispatch_time(0, 4000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10022FC18;
  block[3] = &unk_1011AD260;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_10022FC18(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "chromeDelegate"));
  objc_msgSend(v1, "directionsPlanDidSetup");

}

void sub_10022FD7C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "testCoordinator"));
  objc_msgSend(v1, "pptTestPresentDirectionsDetails");

}

id sub_10022FDAC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest");
}

id sub_10022FE4C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_performScrollTest");
}

void sub_100230034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100230080(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "finishedSubTest:", *(_QWORD *)(a1 + 32));
    objc_msgSend(v3, "finishedTest");
    WeakRetained = v3;
  }

}

id sub_100230184(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_performRotationTest");
}

id sub_1002301F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest");
}

void sub_100230290(uint64_t a1)
{
  dispatch_time_t v2;
  _QWORD block[5];

  v2 = dispatch_time(0, 3000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100230308;
  block[3] = &unk_1011AC860;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100230308(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_performRotationTest");
}

id sub_100230374(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest");
}

id sub_100230468(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "finishedTest");
}

void sub_100230550(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100230570(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "testCoordinator"));
  v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "pptTestContaineeForDirectionsDetails"));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "userInfo"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("ContainerContainee")));

  v9 = (void *)v11;
  if (v8 == (void *)v11)
  {
    v10 = *(_QWORD *)(a1 + 32);
    if (v10)
    {
      (*(void (**)(void))(v10 + 16))();
      v9 = (void *)v11;
    }
  }

}

void sub_100230668(id a1)
{
  NavdLocationLeecher *v1;
  void *v2;

  v1 = objc_alloc_init(NavdLocationLeecher);
  v2 = (void *)qword_1014D1DC0;
  qword_1014D1DC0 = (uint64_t)v1;

}

id sub_100230834(uint64_t a1)
{
  uint64_t Log;
  NSObject *v3;
  uint8_t v5[16];

  Log = GEOFindOrCreateLog(DefaultLoggingSubsystem, "NavdLocationManager");
  v3 = objc_claimAutoreleasedReturnValue(Log);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Starting to leech locations.", v5, 2u);
  }

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 24) = 1;
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "startUpdatingLocation");
}

void sub_100230920(uint64_t a1)
{
  uint64_t v1;
  uint64_t Log;
  NSObject *v3;
  uint8_t v4[16];

  v1 = *(_QWORD *)(a1 + 32);
  if (!*(_BYTE *)(v1 + 25))
  {
    *(_BYTE *)(v1 + 25) = 1;
    Log = GEOFindOrCreateLog(DefaultLoggingSubsystem, "NavdLocationManager");
    v3 = objc_claimAutoreleasedReturnValue(Log);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Pausing location leeching.", v4, 2u);
    }

  }
}

void sub_100230A04(uint64_t a1)
{
  uint64_t v1;
  uint64_t Log;
  NSObject *v3;
  uint8_t v4[16];

  v1 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(v1 + 25))
  {
    *(_BYTE *)(v1 + 25) = 0;
    Log = GEOFindOrCreateLog(DefaultLoggingSubsystem, "NavdLocationManager");
    v3 = objc_claimAutoreleasedReturnValue(Log);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Unpausing location leeching.", v4, 2u);
    }

  }
}

id sub_100230AE4(uint64_t a1)
{
  uint64_t Log;
  NSObject *v3;
  id result;
  uint8_t v5[16];

  Log = GEOFindOrCreateLog(DefaultLoggingSubsystem, "NavdLocationManager");
  v3 = objc_claimAutoreleasedReturnValue(Log);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Stopping leeching locations.", v5, 2u);
  }

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "stopUpdatingLocation");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 24) = 0;
  return result;
}

void sub_100230D2C(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v12;

  objc_msgSend(*(id *)(a1 + 32), "coordinate");
  v3 = v2;
  v5 = v4;
  v12 = *(id *)(*(_QWORD *)(a1 + 40) + 56);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "firstObject"));
  objc_msgSend(v6, "coordinate");
  v8 = v7;
  v10 = v9;

  if (v8 != v3 && v10 != v5)
    objc_msgSend(v12, "insertObject:atIndex:", *(_QWORD *)(a1 + 32), 0);
  objc_msgSend(*(id *)(a1 + 40), "_pruneLeachedLocations");

}

void sub_100230E04(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100230ECC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100230EDC(uint64_t a1)
{

}

void sub_100230EE4(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(*(id *)(a1 + 32), "_pruneLeachedLocations");
  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_100230FA8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_100231030(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_100231504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  id *v40;

  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100231528(uint64_t a1, double a2, double a3)
{
  id WeakRetained;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[8];
  _OWORD v12[2];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = *(_OWORD *)(a1 + 152);
  v11[6] = *(_OWORD *)(a1 + 136);
  v11[7] = v7;
  v12[0] = *(_OWORD *)(a1 + 168);
  *(_OWORD *)((char *)v12 + 12) = *(_OWORD *)(a1 + 180);
  v8 = *(_OWORD *)(a1 + 88);
  v11[2] = *(_OWORD *)(a1 + 72);
  v11[3] = v8;
  v9 = *(_OWORD *)(a1 + 120);
  v11[4] = *(_OWORD *)(a1 + 104);
  v11[5] = v9;
  v10 = *(_OWORD *)(a1 + 56);
  v11[0] = *(_OWORD *)(a1 + 40);
  v11[1] = v10;
  objc_msgSend(WeakRetained, "_handleShiftedCoordinate:fromClientLocation:", v11, a2, a3);

}

void sub_1002315BC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t Log;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  id v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;

  v3 = a2;
  Log = GEOFindOrCreateLog(DefaultLoggingSubsystem, "NavdLocationManager");
  v5 = objc_claimAutoreleasedReturnValue(Log);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v8 = 138478339;
    v9 = v3;
    v10 = 2049;
    v11 = v6;
    v12 = 2049;
    v13 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "NavdLocationLeecher failed while shifting location: %{private}@. Original location was: %{private}f, %{private}f.", (uint8_t *)&v8, 0x20u);
  }

}

void sub_100231A24(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_handleLeechedLocation:", *(_QWORD *)(a1 + 32));

}

void sub_100231BE4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_notifyObserversAboutError:", *(_QWORD *)(a1 + 32));

}

void sub_100231DA4(uint64_t a1)
{
  id WeakRetained;
  id v3;

  if (*(_BYTE *)(a1 + 40))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "_clearLeachedLocations");

  }
  v3 = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(v3, "_notifyObserversAboutPrecision");

}

UIColor *__cdecl sub_100233574(id a1, UITraitCollection *a2)
{
  void *v2;
  id v3;
  void *v4;

  if ((id)-[UITraitCollection userInterfaceStyle](a2, "userInterfaceStyle") == (id)2)
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor lightTextColor](UIColor, "lightTextColor"));
  else
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor darkTextColor](UIColor, "darkTextColor"));
  v3 = objc_retainAutorelease(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(v3, "CGColor")));

  return (UIColor *)v4;
}

UIColor *__cdecl sub_10023394C(id a1, UITraitCollection *a2)
{
  void *v2;
  id v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UITraitCollection traitCollectionWithUserInterfaceStyle:](UITraitCollection, "traitCollectionWithUserInterfaceStyle:", -[UITraitCollection _car_userInterfaceStyle](a2, "_car_userInterfaceStyle")));
  v3 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor _mapkit_colorNamed:compatibleWithTraitCollection:](UIColor, "_mapkit_colorNamed:compatibleWithTraitCollection:", CFSTR("CartographyBackgroundColor"), v2)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(v3, "CGColor")));

  return (UIColor *)v4;
}

id sub_1002347C4(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  id v8;
  NSObject *v9;
  id v10;
  void *v11;
  objc_class *v12;
  NSString *v13;
  void *v14;
  void *v15;
  void *v16;
  __CFString *v17;
  __CFString *v18;
  id v19;
  void *v20;
  objc_class *v21;
  NSString *v22;
  void *v23;
  void *v24;
  void *v25;
  __CFString *v26;
  __CFString *v27;
  __CFString *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  id v33;
  NSObject *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  _QWORD v46[4];
  id v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint8_t buf[4];
  __CFString *v53;
  __int16 v54;
  __CFString *v55;
  __int16 v56;
  __CFString *v57;
  _BYTE v58[128];

  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  v51 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v48, v58, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v49;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v49 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v48 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(*(id *)(a1 + 40), "containsObject:", v7) & 1) == 0
          && (objc_opt_respondsToSelector(v7, "setChromeViewController:") & 1) != 0)
        {
          objc_msgSend(v7, "setChromeViewController:", 0);
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v48, v58, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 48), "_preserveFocusedItemFromContext:toContext:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  objc_storeWeak((id *)(*(_QWORD *)(a1 + 48) + 696), *(id *)(a1 + 64));
  v8 = sub_10043364C();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    v10 = *(id *)(a1 + 56);
    v11 = v10;
    if (!v10)
    {
      v17 = CFSTR("<nil>");
LABEL_20:

      v18 = v17;
      v19 = *(id *)(a1 + 64);
      v20 = v19;
      if (!v19)
      {
        v26 = CFSTR("<nil>");
        goto LABEL_28;
      }
      v21 = (objc_class *)objc_opt_class(v19);
      v22 = NSStringFromClass(v21);
      v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      if ((objc_opt_respondsToSelector(v20, "accessibilityIdentifier") & 1) != 0)
      {
        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "performSelector:", "accessibilityIdentifier"));
        v25 = v24;
        if (v24 && !objc_msgSend(v24, "isEqualToString:", v23))
        {
          v26 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p, %@>"), v23, v20, v25));

          goto LABEL_26;
        }

      }
      v26 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p>"), v23, v20));
LABEL_26:

LABEL_28:
      if (*(_BYTE *)(a1 + 72))
        v27 = CFSTR("YES");
      else
        v27 = CFSTR("NO");
      v28 = v27;
      *(_DWORD *)buf = 138412802;
      v53 = v18;
      v54 = 2112;
      v55 = v26;
      v56 = 2112;
      v57 = v28;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "%@ => %@ (animated:%@)", buf, 0x20u);

      goto LABEL_32;
    }
    v12 = (objc_class *)objc_opt_class(v10);
    v13 = NSStringFromClass(v12);
    v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
    if ((objc_opt_respondsToSelector(v11, "accessibilityIdentifier") & 1) != 0)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "performSelector:", "accessibilityIdentifier"));
      v16 = v15;
      if (v15 && !objc_msgSend(v15, "isEqualToString:", v14))
      {
        v17 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p, %@>"), v14, v11, v16));

        goto LABEL_18;
      }

    }
    v17 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p>"), v14, v11));
LABEL_18:

    goto LABEL_20;
  }
LABEL_32:

  if (*(_BYTE *)(a1 + 72))
  {
    if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 64), "showsMapView") & 1) != 0)
      v29 = (uint64_t)objc_msgSend(*(id *)(a1 + 64), "showsMapView");
    else
      v29 = 1;
  }
  else
  {
    v29 = 0;
  }
  objc_msgSend(*(id *)(a1 + 48), "updateCardsForContext:animated:completion:", *(_QWORD *)(a1 + 64), v29, 0);
  v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "navigationDisplay"));
  if (v30)
  {
    v31 = (void *)v30;
    v32 = objc_opt_respondsToSelector(*(_QWORD *)(a1 + 64), "configureNavigationDisplay:");

    if ((v32 & 1) != 0)
    {
      v33 = sub_10043364C();
      v34 = objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEBUG, "Will configure navigation display for incoming context", buf, 2u);
      }

      v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "navigationDisplay"));
      v46[0] = _NSConcreteStackBlock;
      v46[1] = 3221225472;
      v46[2] = sub_100234D7C;
      v46[3] = &unk_1011AD430;
      v47 = *(id *)(a1 + 64);
      objc_msgSend(v35, "configureDisplay:animated:", v46, *(unsigned __int8 *)(a1 + 72));

    }
  }
  objc_msgSend(*(id *)(a1 + 48), "_reloadFocusContainerGuidesForContext:", *(_QWORD *)(a1 + 64));
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 56), "trackingController") & 1) != 0)
  {
    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "mapControlsOverlay"));
    objc_msgSend(v36, "setTrackingController:", 0);

  }
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 64), "trackingController") & 1) != 0)
  {
    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "mapControlsOverlay"));
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "trackingController"));
    objc_msgSend(v37, "setTrackingController:", v38);

  }
  v39 = *(id *)(a1 + 64);
  if (objc_msgSend(v39, "conformsToProtocol:", &OBJC_PROTOCOL___NavAudioControlViewDelegate))
    v40 = v39;
  else
    v40 = 0;
  v41 = v40;

  v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "mapControlsOverlay"));
  objc_msgSend(v42, "setAudioControlDelegate:", v41);

  v43 = *(void **)(a1 + 48);
  v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "topContext"));
  LODWORD(v43) = objc_msgSend(v43, "_autohidingContentIsHiddenForContext:", v44);

  if ((_DWORD)v43)
    objc_msgSend(*(id *)(a1 + 48), "setAutohidingContentHiddenForCurrentContext:", 0);
  objc_msgSend(*(id *)(a1 + 48), "_requestAutohideBehaviorForContext:", *(_QWORD *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 48), "_updateAutohideBehavior");
  return objc_msgSend(*(id *)(a1 + 48), "updateHardwareBackButtonBehavior");
}

id sub_100234D7C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "configureNavigationDisplay:", a2);
}

id sub_100234D8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isKindOfClass;
  uint64_t v7;

  objc_msgSend(*(id *)(a1 + 32), "_updateNudgerizer");
  objc_msgSend(*(id *)(a1 + 32), "_updateRouteSelectionController");
  v2 = *(_QWORD *)(a1 + 40);
  v3 = objc_opt_class(CarNavigationModeController);
  if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "isDisplayingNavigation");
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 40);
    v5 = objc_opt_class(CarIncompatibleNavigationModeController);
    isKindOfClass = objc_opt_isKindOfClass(v4, v5);
    if (objc_msgSend(*(id *)(a1 + 32), "isDisplayingNavigation"))
    {
      if ((isKindOfClass & 1) == 0)
      {
        v7 = *(_QWORD *)(a1 + 40);
        if (!v7
          || (objc_opt_respondsToSelector(v7, "shouldTimeoutDuringNavigation") & 1) == 0
          || objc_msgSend(*(id *)(a1 + 40), "shouldTimeoutDuringNavigation"))
        {
          objc_msgSend(*(id *)(a1 + 32), "_startNavigationObscuredTimeout");
          return objc_msgSend(*(id *)(a1 + 32), "updateMapViewFrameRate");
        }
      }
    }
  }
  objc_msgSend(*(id *)(a1 + 32), "_stopNavigationObscuredTimeout");
  return objc_msgSend(*(id *)(a1 + 32), "updateMapViewFrameRate");
}

void sub_100236000(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_100236024(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSObject *v12;
  const char *v13;
  uint8_t *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint8_t buf[2];
  __int16 v20;

  v7 = a2;
  v8 = *(_QWORD *)(a1 + 48);
  if (v8)
    (*(void (**)(uint64_t, unint64_t))(v8 + 16))(v8, a4);
  v9 = *(_QWORD *)(a1 + 56);
  if (v9 == 5)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v10, "postNotificationName:object:", CFSTR("LocationAuthorizationDismissedNotification"), 0);

    v9 = *(_QWORD *)(a1 + 56);
  }
  if (v9 == 7)
  {
    if (a4 == 1)
    {
      v15 = sub_10043364C();
      v12 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        LOWORD(v18) = 0;
        v13 = "CarChromeViewController: user accepted End Navigation prompt";
        v14 = (uint8_t *)&v18;
LABEL_15:
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, v13, v14, 2u);
      }
    }
    else
    {
      if (a4)
      {
        if (a4 != -1)
          goto LABEL_17;
        v11 = sub_10043364C();
        v12 = objc_claimAutoreleasedReturnValue(v11);
        if (!os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
          goto LABEL_16;
        v20 = 0;
        v13 = "CarChromeViewController: superseded End Navigation prompt";
        v14 = (uint8_t *)&v20;
        goto LABEL_15;
      }
      v16 = sub_10043364C();
      v12 = objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        v13 = "CarChromeViewController: user canceled End Navigation prompt";
        v14 = buf;
        goto LABEL_15;
      }
    }
LABEL_16:

  }
LABEL_17:
  if (a3 != 3)
    objc_msgSend(*(id *)(a1 + 32), "_dismissAlertViewController:animated:", v7, 1);
  if (objc_msgSend(*(id *)(a1 + 40), "count", v18) && (unint64_t)objc_msgSend(*(id *)(a1 + 40), "count") > a4)
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", a4));
    objc_msgSend(v17, "fire");

  }
}

void sub_1002361D0(uint64_t a1)
{
  void *v1;
  id v3;
  NSObject *v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  int v15;
  void *v16;

  v3 = sub_10043364C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v5 = (id)(a1 + 40);
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "alertTitle"));
    v8 = objc_loadWeakRetained((id *)(a1 + 40));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "alertTitle"));
    v10 = objc_msgSend(v9, "length");
    if ((unint64_t)v10 > 0x13)
    {
      v11 = 20;
    }
    else
    {
      v5 = objc_loadWeakRetained((id *)(a1 + 40));
      v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "alertTitle"));
      v11 = (uint64_t)objc_msgSend(v1, "length");
    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "substringToIndex:", v11));
    v15 = 138412290;
    v16 = v12;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Alert was dismissed %@", (uint8_t *)&v15, 0xCu);
    if ((unint64_t)v10 <= 0x13)
    {

    }
  }

  v13 = *(void **)(a1 + 32);
  v14 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v13, "_dismissAlertViewController:animated:", v14, 1);

}

void sub_10023656C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100236598(uint64_t a1, uint64_t a2)
{
  id v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  id WeakRetained;
  int v11;
  void *v12;

  v4 = sub_10043364C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2));
    v11 = 138412290;
    v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Search refinement controller did complete (selectedIndex:%@)", (uint8_t *)&v11, 0xCu);

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v7, a2);
  v8 = sub_10043364C();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(v11) = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Will dismiss search refinement controller", (uint8_t *)&v11, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "dismissViewControllerAnimated:completion:", 1, 0);

}

void sub_1002366D4(uint64_t a1, uint64_t a2)
{
  id v4;
  NSObject *v5;
  id WeakRetained;
  uint8_t v7[16];

  v4 = sub_10043364C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Will dismiss search refinment controller", v7, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "dismissViewControllerAnimated:completion:", a2, 0);

}

void sub_100236B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100236B98(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_presentAnyPendingAlert:", *(unsigned __int8 *)(a1 + 40));

}

id sub_100237078(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_presentAnyPendingAlert:", *(unsigned __int8 *)(a1 + 40));
}

id sub_1002372B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_presentAnyPendingAlert:", *(unsigned __int8 *)(a1 + 40));
}

void sub_100238518(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  objc_class *v6;
  NSString *v7;
  void *v8;
  void *v9;
  void *v10;
  __CFString *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  uint8_t buf[4];
  __CFString *v19;

  v2 = sub_100432D1C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(id *)(a1 + 32);
    v5 = v4;
    if (!v4)
    {
      v11 = CFSTR("<nil>");
      goto LABEL_10;
    }
    v6 = (objc_class *)objc_opt_class(v4);
    v7 = NSStringFromClass(v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    if ((objc_opt_respondsToSelector(v5, "accessibilityIdentifier") & 1) != 0)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "performSelector:", "accessibilityIdentifier"));
      v10 = v9;
      if (v9 && !objc_msgSend(v9, "isEqualToString:", v8))
      {
        v11 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p, %@>"), v8, v5, v10));

        goto LABEL_8;
      }

    }
    v11 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p>"), v8, v5));
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    v19 = v11;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}@] Will change mapView light level", buf, 0xCu);

  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapView"));
  objc_msgSend(v12, "setCustomOverrideInterfaceStyle:", *(_QWORD *)(a1 + 40));

  v13 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapReplacementColor")));
  v14 = objc_msgSend(v13, "CGColor");
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapView"));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "_mapLayer"));
  objc_msgSend(v16, "setBackgroundColor:", v14);

  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapView"));
  objc_msgSend(v17, "layoutIfNeeded");

}

void sub_10023B5F8(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  uint8_t v12[16];
  uint8_t buf[16];

  if (objc_msgSend(*(id *)(a1 + 32), "isSuppressed"))
  {
    v2 = sub_10043364C();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Will not respond to focus deferral, chrome is suppressed", buf, 2u);
    }

  }
  else if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 704))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[CarDisplayController sharedInstance](CarDisplayController, "sharedInstance"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "window"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "windowScene"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "focusSystem"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "focusedItem"));

    if (!v8)
    {
      v9 = sub_10043364C();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Restoring focus in response to focus deferral change", v12, 2u);
      }

      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topContext"));
      objc_storeWeak((id *)(*(_QWORD *)(a1 + 32) + 696), v11);

      objc_msgSend(*(id *)(a1 + 32), "setNeedsFocusUpdate");
      objc_msgSend(*(id *)(a1 + 32), "updateFocusIfNeeded");
    }
  }
}

BOOL sub_10023BC68(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "nextFocusedItem"));

  return v4 == v3;
}

BOOL sub_10023BCB8(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "previouslyFocusedItem"));

  return v4 == v3;
}

void sub_10023C134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10023C164(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10023C174(uint64_t a1)
{

}

id sub_10023C17C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:");
}

void sub_10023C18C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v5 = a2;
  switch(a3)
  {
    case 3:
      v10 = v5;
      v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusBannerOverlay"));
      goto LABEL_7;
    case 1:
      v10 = v5;
      v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardsOverlay"));
      goto LABEL_7;
    case 0:
      v10 = v5;
      v6 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapControlsOverlay"));
LABEL_7:
      v8 = v7;
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "preferredFocusEnvironments"));
      objc_msgSend(v6, "addObjectsFromArray:", v9);

      v5 = v10;
      break;
  }

}

void sub_10023C448(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_10023C460(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:");
}

void sub_10023C470(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  unsigned int v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v5 = a2;
  v18 = v5;
  switch(a3)
  {
    case 0:
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapControlsOverlay"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "focusOrderSubItems"));

      if (objc_msgSend(v18, "flipForRHD"))
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "reverseObjectEnumerator"));
        v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "allObjects"));

        v7 = (void *)v9;
      }
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObjectsFromArray:", v7);
      goto LABEL_11;
    case 1:
      v16 = *(void **)(a1 + 32);
      v12 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "cardsOverlay"));
      goto LABEL_9;
    case 2:
      v10 = objc_msgSend(*(id *)(a1 + 32), "_canSelectAlternateRoutes");
      v5 = v18;
      if (!v10)
        break;
      v11 = *(void **)(a1 + 32);
      v12 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "routeSelectionController"));
      v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "focusableRouteItems"));
      goto LABEL_10;
    case 3:
      v14 = *(void **)(a1 + 32);
      v12 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "statusBannerOverlay"));
LABEL_9:
      v7 = v15;
      v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "focusOrderSubItems"));
LABEL_10:
      v17 = (void *)v13;
      objc_msgSend(v12, "addObjectsFromArray:", v13);

LABEL_11:
      v5 = v18;
      break;
    default:
      break;
  }

}

void sub_10023C5C0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];

  v3 = a2;
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "removeAllObjects");
  v26 = 0u;
  v27 = 0u;
  v24 = 0u;
  v25 = 0u;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "items", 0));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v25;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v25 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)v8), "ifFocusItem:ifRepresentativeItem:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
    }
    while (v6);
  }

  v9 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithBlock:](NSPredicate, "predicateWithBlock:", &stru_1011AD620));
  objc_msgSend(v9, "filterUsingPredicate:", v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedApplication](UIApplication, "sharedApplication"));
  v12 = objc_msgSend(v11, "userInterfaceLayoutDirection");

  if (v12 == (id)1)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "reverseObjectEnumerator"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "allObjects"));
    v15 = objc_msgSend(v14, "mutableCopy");
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

  }
  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "count"))
  {
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstObject"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "items"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "firstObject"));

    if (v20)
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addObject:", v20);
    v21 = *(void **)(a1 + 32);
    v22 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "copy");
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[_UIFocusLinearMovementSequence sequenceWithItems:loops:restrictEnteringSequence:](_UIFocusLinearMovementSequence, "sequenceWithItems:loops:restrictEnteringSequence:", v22, objc_msgSend(v3, "isLooping"), 0));
    objc_msgSend(v21, "insertObject:atIndex:", v23, 0);

  }
}

BOOL sub_10023C838(id a1, UIFocusItem *a2, NSDictionary *a3)
{
  return -[UIFocusItem canBecomeFocused](a2, "canBecomeFocused", a3);
}

void sub_10023CD3C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "accessoriesOverlay"));
  objc_msgSend(v2, "configureAccessoriesOverlay:forContext:", v3, *(_QWORD *)(a1 + 40));

  objc_msgSend(*(id *)(a1 + 32), "_reloadAccessoriesInsetsForContext:", *(_QWORD *)(a1 + 40));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoriesOverlay"));
  objc_msgSend(v4, "reloadAnimated:", 0);

}

void sub_10023CDB4(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(*(id *)(a1 + 32), "_areAccessoriesHiddenForCurrentContext");
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "accessoriesOverlay"));
  objc_msgSend(v3, "setHidden:animated:", v2, *(unsigned __int8 *)(a1 + 40));

}

void sub_10023D10C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusBannerOverlay"));
  objc_msgSend(v1, "reloadAnimated:", 0);

}

void sub_10023D140(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(*(id *)(a1 + 32), "_hideStatusBanner");
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "statusBannerOverlay"));
  objc_msgSend(v3, "setHidden:animated:", v2, *(unsigned __int8 *)(a1 + 40));

}

void sub_10023D92C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

id sub_10023D95C(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id WeakRetained;
  uint64_t v15;
  void *v16;
  _BOOL8 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (objc_msgSend(*(id *)(a1 + 32), "isRunningNavigationDisplay"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "navigationDisplay"));
    v3 = objc_msgSend(v2, "isCameraPanning");

    v4 = v3 ^ 1;
    if (v3)
      v5 = 6;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 40), "mapControlsConfiguration") & 1) != 0)
  {
    v6 = *(void **)(a1 + 40);
    if (v6)
    {
      objc_msgSend(v6, "mapControlsConfiguration");
      v8 = v24;
      v7 = v25;
      v9 = v26;
    }
    else
    {
      v9 = 0;
      v7 = 0;
      v8 = 0;
    }
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = v5;
  }
  v10 = v9;
  v11 = v7;
  v12 = v8;
  if (objc_msgSend(*(id *)(a1 + 32), "isAutohidingContentHiddenForCurrentContext"))
  {
    v11 = 0;
    v12 = 0;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v4;
    v10 = v5;
  }
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapControlsOverlay"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v24 = v12;
  v25 = v11;
  v26 = v10;
  objc_msgSend(v13, "setConfiguration:withAnimation:", &v24, WeakRetained);

  objc_msgSend(*(id *)(a1 + 32), "_reloadMapControlsInsetsForContext:", *(_QWORD *)(a1 + 40));
  v15 = objc_msgSend(*(id *)(a1 + 32), "isRunningNavigationDisplay") ^ 1;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapControlsOverlay"));
  objc_msgSend(v16, "setTrackingButtonEnabled:", v15);

  objc_msgSend(*(id *)(a1 + 32), "_update3DButton");
  objc_msgSend(*(id *)(a1 + 32), "_updateAudioControls");
  v22 = v8 == 4 || v7 == 4 || v9 == 4 || v8 == 5 || v7 == 5 || v9 == 5;
  return objc_msgSend(*(id *)(a1 + 32), "_enableZoomGesture:", v22);
}

id sub_10023DB00(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10023DB60;
  v2[3] = &unk_1011AC860;
  v2[4] = *(_QWORD *)(a1 + 32);
  return +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v2);
}

id sub_10023DB60(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateCameraToggleButton");
}

void sub_10023DF28(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapView"));
  objc_msgSend(v5, "_zoomLevel");
  v3 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "defaultMapSettings"));
  objc_msgSend(v4, "setZoomLevel:", v3);

}

void sub_10023E110(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mapView"));
  objc_msgSend(v5, "_zoomLevel");
  v3 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "defaultMapSettings"));
  objc_msgSend(v4, "setZoomLevel:", v3);

}

void sub_10023EA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10023EA6C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "zoomInButtonPressed");

}

void sub_10023EADC(id a1, int64_t a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  int64_t v7;

  v3 = sub_10043364C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v6 = 134217984;
    v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "carStatusBannerDidTapBanner: button = %ld", (uint8_t *)&v6, 0xCu);
  }

  if (a2)
  {
    if (a2 != 1)
      return;
    v5 = 0;
  }
  else
  {
    v5 = 1;
  }
  GEOConfigSetBOOL(MapsConfig_OfflineOnlyData, off_1014B4C08, v5);
}

void sub_10023F454(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id sub_10023F480(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_reloadCardsAnimated:", 0);
}

uint64_t sub_10023F48C(uint64_t a1, uint64_t a2)
{
  id v4;
  NSObject *v5;
  id v6;
  void *v7;
  objc_class *v8;
  NSString *v9;
  void *v10;
  void *v11;
  void *v12;
  __CFString *v13;
  id WeakRetained;
  uint64_t result;
  uint8_t buf[4];
  __CFString *v17;

  v4 = sub_10043333C();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(id *)(a1 + 32);
    v7 = v6;
    if (!v6)
    {
      v13 = CFSTR("<nil>");
      goto LABEL_10;
    }
    v8 = (objc_class *)objc_opt_class(v6);
    v9 = NSStringFromClass(v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    if ((objc_opt_respondsToSelector(v7, "accessibilityIdentifier") & 1) != 0)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "performSelector:", "accessibilityIdentifier"));
      v12 = v11;
      if (v11 && !objc_msgSend(v11, "isEqualToString:", v10))
      {
        v13 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p, %@>"), v10, v7, v12));

        goto LABEL_8;
      }

    }
    v13 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@<%p>"), v10, v7));
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    v17 = v13;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] Chrome finished configuring cards.", buf, 0xCu);

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  objc_msgSend(WeakRetained, "setNeedsUpdateMapInsets");

  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 40), "chromeDidEndConfiguringCards:") & 1) != 0)
    objc_msgSend(*(id *)(a1 + 40), "chromeDidEndConfiguringCards:", *(_QWORD *)(a1 + 48));
  result = *(_QWORD *)(a1 + 56);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

void sub_10024027C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topContext"));
  objc_msgSend(v5, "configureCard:forKey:", v4, *(_QWORD *)(a1 + 40));

}

void sub_1002418B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1002418E4(uint64_t a1)
{
  id v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v2, "duration");
  objc_msgSend(WeakRetained, "setTemporaryDisplayRate:forDuration:", -1);

}

void sub_100241EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100241ECC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_humanPresenceDidChange");

}

id sub_100245B70(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setKeyboardDisabled:", *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 48));
}

void sub_100245D90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_BYTE *)(a1 + 40))
    v2 = 3;
  else
    v2 = 2;
  +[NSLayoutConstraint deactivateConstraints:](NSLayoutConstraint, "deactivateConstraints:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___CarUserInputCell__dictationButton[v2]));
  if (*(_BYTE *)(a1 + 40))
    v3 = 2;
  else
    v3 = 3;
  +[NSLayoutConstraint activateConstraints:](NSLayoutConstraint, "activateConstraints:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___CarUserInputCell__dictationButton[v3]));
  if (*(_BYTE *)(a1 + 40))
    v4 = 2;
  else
    v4 = 3;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 40), *(id *)(*(_QWORD *)(a1 + 32) + OBJC_IVAR___CarUserInputCell__dictationButton[v4]));
}

uint64_t sub_100245E30(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  v3 = 0.0;
  if (!*(_BYTE *)(a1 + 56))
    v3 = 1.0;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setAlpha:", v3);
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_100245E9C(uint64_t a1)
{
  id v2;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentView"));
  objc_msgSend(v2, "layoutIfNeeded");

}

_BYTE *sub_1002475B8(uint64_t a1)
{
  _BYTE *result;
  _QWORD v3[5];

  result = *(_BYTE **)(a1 + 32);
  if (result[8])
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100247628;
    v3[3] = &unk_1011AD860;
    v3[4] = result;
    result = objc_msgSend(result, "_notifyObserversWithBlock:", v3);
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) = 0;
  }
  return result;
}

id sub_100247628(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "maneuverGuidanceInfoDidChange:", *(_QWORD *)(a1 + 32));
}

void sub_10024849C(uint64_t a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = objc_msgSend(*(id *)(a1 + 32), "registrationWithCellClass:configurationHandler:", objc_opt_class(HomeSearchStatusOutlineCell), &stru_1011AD8A0);
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_1014D1DD0;
  qword_1014D1DD0 = v2;

}

void sub_1002484E8(id a1, HomeSearchStatusOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  HomeSearchStatusOutlineCell *v9;

  v9 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[MapsUIDiffableDataSourceOutlineNodeSnapshot viewModel](a4, "viewModel"));
  v6 = objc_opt_class(HomeSearchStatusOutlineCellModel);
  if ((objc_opt_isKindOfClass(v5, v6) & 1) != 0)
    v7 = v5;
  else
    v7 = 0;
  v8 = v7;

  -[HomeSearchStatusOutlineCell setCellModel:](v9, "setCellModel:", v8);
}

id sub_100248910()
{
  if (qword_1014D1DE8 != -1)
    dispatch_once(&qword_1014D1DE8, &stru_1011AD8C0);
  return (id)qword_1014D1DE0;
}

void sub_10024B97C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "VLFSessionStateManager");
  v2 = (void *)qword_1014D1DE0;
  qword_1014D1DE0 = (uint64_t)v1;

}

void sub_10024BF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10024BF84(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  uint64_t Log;
  NSObject *v7;
  int v8;
  char *v9;
  __int16 v10;
  int v11;
  __int16 v12;
  const char *v13;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_selectPaymentType");
  }
  else
  {
    Log = GEOFindOrCreateLog(MapsSuggestionsLoggingSubsystem, "RidesharingDetailsPickingViewController");
    v7 = (id)objc_claimAutoreleasedReturnValue(Log);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      v8 = 136446722;
      v9 = "RidesharingDetailsPickingViewController.m";
      v10 = 1026;
      v11 = 128;
      v12 = 2082;
      v13 = "-[RidesharingDetailsPickingViewController viewDidLoad]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }

  }
}

void sub_10024C0A0(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  uint64_t Log;
  NSObject *v4;
  int v5;
  char *v6;
  __int16 v7;
  int v8;
  __int16 v9;
  const char *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_openApp");
  }
  else
  {
    Log = GEOFindOrCreateLog(MapsSuggestionsLoggingSubsystem, "RidesharingDetailsPickingViewController");
    v4 = (id)objc_claimAutoreleasedReturnValue(Log);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v5 = 136446722;
      v6 = "RidesharingDetailsPickingViewController.m";
      v7 = 1026;
      v8 = 136;
      v9 = 2082;
      v10 = "-[RidesharingDetailsPickingViewController viewDidLoad]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }

  }
}

void sub_10024CF58(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void **v8;
  uint64_t v9;
  void (*v10)(uint64_t, void *);
  void *v11;
  id v12;
  id location;

  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 232), "requiresPassengerSelection"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requestRideStatus"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[RidesharingPartySizeSelectionAlertController ridesharingPartySizeSelectionAlertControllerWithRequestRideStatus:](RidesharingPartySizeSelectionAlertController, "ridesharingPartySizeSelectionAlertControllerWithRequestRideStatus:", v2));

    objc_initWeak(&location, *(id *)(a1 + 32));
    v8 = _NSConcreteStackBlock;
    v9 = 3221225472;
    v10 = sub_10024D0F8;
    v11 = &unk_1011AD910;
    objc_copyWeak(&v12, &location);
    objc_msgSend(v3, "setDidFinishSelectingPartySize:", &v8);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 152), "actionButtonStackView", v8, v9, v10, v11));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "arrangedSubviews"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "popoverPresentationController"));
    objc_msgSend(v7, "setSourceView:", v6);

    objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", v3, 1, 0);
    objc_destroyWeak(&v12);
    objc_destroyWeak(&location);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_requestRide");
  }
}

void sub_10024D0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10024D0F8(uint64_t a1, void *a2)
{
  id v3;
  _BYTE *WeakRetained;
  void *v5;
  void *v6;
  uint64_t Log;
  NSObject *v8;
  int v9;
  char *v10;
  __int16 v11;
  int v12;
  __int16 v13;
  const char *v14;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    if (v3)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "requestRideOptionProxy"));
      objc_msgSend(v6, "updateRequestRidePassengers:", v3);

      objc_msgSend(v5, "_requestRide");
    }
    else
    {
      WeakRetained[200] = 0;
    }
  }
  else
  {
    Log = GEOFindOrCreateLog(MapsSuggestionsLoggingSubsystem, "RidesharingDetailsPickingViewController");
    v8 = (id)objc_claimAutoreleasedReturnValue(Log);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      v9 = 136446722;
      v10 = "RidesharingDetailsPickingViewController.m";
      v11 = 1026;
      v12 = 348;
      v13 = 2082;
      v14 = "-[RidesharingDetailsPickingViewController _request]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v9, 0x1Cu);
    }

  }
}

uint64_t sub_10024D244(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 200) = 0;
  return result;
}

uint64_t sub_10024D258(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10024D710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10024D734(uint64_t a1, void *a2)
{
  id v3;
  id *WeakRetained;
  id *v5;
  id v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  uint64_t Log;
  RidesharingErrorAlertProvider *v12;
  void *v13;
  void *v14;
  RidesharingErrorAlertProvider *v15;
  uint64_t v16;
  RidesharingErrorAlertProvider *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  int v26;
  char *v27;
  __int16 v28;
  int v29;
  __int16 v30;
  const char *v31;

  v3 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "setRequestingRide:", 0);
    if (objc_msgSend(v3, "rideStatusError") == (id)1)
    {
      if (objc_msgSend(v3, "phase"))
      {
        v6 = objc_loadWeakRetained(v5 + 28);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "containerViewController"));
        objc_msgSend(v7, "updateForDismissingDetailsPickingAnimated:", 0);

        v8 = objc_loadWeakRetained(v5 + 28);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "identifier"));
        -[NSObject presentConfirmedRideWithApplicationIdentifier:](v8, "presentConfirmedRideWithApplicationIdentifier:", v10);

        goto LABEL_11;
      }
      v17 = [RidesharingErrorAlertProvider alloc];
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userActivity"));
      v15 = v17;
      v16 = 1;
    }
    else
    {
      v12 = [RidesharingErrorAlertProvider alloc];
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "application"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "userActivity"));
      v15 = v12;
      v16 = 0;
    }
    v8 = -[RidesharingErrorAlertProvider _initWithCause:application:activity:](v15, "_initWithCause:application:activity:", v16, v13, v14);

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5[30], "analyticsBookingSession"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject title](v8, "title"));
    objc_msgSend(v18, "captureErrorMessage:", v19);

    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "coordinator"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "containerViewController"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "chromeViewController"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "_maps_mapsSceneDelegate"));
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "topMostPresentedViewController"));

    v25 = objc_loadWeakRetained(v5 + 28);
    objc_msgSend(v25, "viewController:presentErrorAlertIfNeeded:", v24, v8);

    goto LABEL_11;
  }
  Log = GEOFindOrCreateLog(MapsSuggestionsLoggingSubsystem, "RidesharingDetailsPickingViewController");
  v8 = (id)objc_claimAutoreleasedReturnValue(Log);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    v26 = 136446722;
    v27 = "RidesharingDetailsPickingViewController.m";
    v28 = 1026;
    v29 = 438;
    v30 = 2082;
    v31 = "-[RidesharingDetailsPickingViewController _requestRide]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v26, 0x1Cu);
  }

LABEL_11:
}

id sub_10024FFC0()
{
  if (qword_1014D1DF8 != -1)
    dispatch_once(&qword_1014D1DF8, &stru_1011AD9A8);
  return (id)qword_1014D1DF0;
}

id sub_100250D08(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_checkIfLockScreenMitigationShouldActivate");
}

void sub_100250E3C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "ThermalWarning");
  v2 = (void *)qword_1014D1DF0;
  qword_1014D1DF0 = (uint64_t)v1;

}

void sub_1002541C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002541E4(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100254290;
  v5[3] = &unk_1011AD1E8;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_100254290(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id *v8;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v8 = WeakRetained;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "editLocationMapView"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mapView"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "placemark"));
    objc_msgSend(v5, "coordinate");
    objc_msgSend(v4, "setCenterCoordinate:animated:", 1);

    objc_msgSend(v8[22], "dismissViewControllerAnimated:completion:", 1, 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "promptText"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "navigationItem"));
    objc_msgSend(v7, "setPrompt:", v6);

    objc_msgSend(v8[23], "setHidden:", 1);
    WeakRetained = v8;
  }

}

void sub_100255D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a27);
  _Unwind_Resume(a1);
}

void sub_100255DA8(uint64_t a1)
{
  id WeakRetained;
  _QWORD v3[4];
  id v4;

  +[MapsWelcomeScreenViewController _markWelcomeScreenAsDisplayed](MapsWelcomeScreenViewController, "_markWelcomeScreenAsDisplayed");
  byte_1014D1E00 = 0;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100255E40;
  v3[3] = &unk_1011ADA00;
  v4 = *(id *)(a1 + 32);
  objc_msgSend(WeakRetained, "dismissViewControllerAnimated:completion:", 1, v3);

}

uint64_t sub_100255E40(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t result;
  uint8_t v5[16];

  v2 = sub_100431A4C();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "MapsWelcomeScreen: alert dismissed", v5, 2u);
  }

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1002560A8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  id v13;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = sub_100431A4C();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      v12 = 138412290;
      v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "OpenLookAroundAction resolveMapItem: %@", (uint8_t *)&v12, 0xCu);
    }

    v9 = *(id *)(a1 + 32);
  }
  else
  {
    v9 = *(id *)(a1 + 32);
    if (objc_msgSend(v5, "count"))
    {
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));

      v9 = (id)v10;
    }
  }
  v11 = *(_QWORD *)(a1 + 40);
  if (v11)
    (*(void (**)(uint64_t, id))(v11 + 16))(v11, v9);

}

void sub_100256F18(id a1, MapsDebugTableSection *a2)
{
  id v2;
  double v3;
  double v4;
  id v5;
  double v6;
  double v7;
  id v8;
  id v9;
  MapsDebugTableSection *v10;

  v10 = a2;
  v2 = -[MapsDebugTableSection addSwitchRowWithTitle:get:set:](v10, "addSwitchRowWithTitle:get:set:", CFSTR("Enable Preflight"), &stru_1011ADAD0, &stru_1011ADB10);
  LODWORD(v3) = 1140457472;
  LODWORD(v4) = 0;
  v5 = -[MapsDebugTableSection addSliderRowWithTitle:subtitleStringFormat:min:max:get:set:](v10, "addSliderRowWithTitle:subtitleStringFormat:min:max:get:set:", CFSTR("Minimum number of results to display Index List"), CFSTR("%1.0f results"), &stru_1011ADB50, &stru_1011ADB90, v4, v3);
  LODWORD(v6) = 0;
  LODWORD(v7) = 26.0;
  v8 = -[MapsDebugTableSection addSliderRowWithTitle:subtitleStringFormat:min:max:get:set:](v10, "addSliderRowWithTitle:subtitleStringFormat:min:max:get:set:", CFSTR("Minimum number of unique first letters to display index list"), CFSTR("%1.0f letters"), &stru_1011ADBB0, &stru_1011ADBD0, v6, v7);
  v9 = -[MapsDebugTableSection addSwitchRowWithTitle:get:set:](v10, "addSwitchRowWithTitle:get:set:", CFSTR("Inject venue-go-inside style attribute"), &stru_1011ADBF0, &stru_1011ADC10);

}

BOOL sub_100256FFC(id a1)
{
  return GEOConfigGetBOOL(GeoServicesConfig_VenuesPreflightEnabled[0], GeoServicesConfig_VenuesPreflightEnabled[1]);
}

void sub_10025700C(id a1, BOOL a2)
{
  GEOConfigSetBOOL(GeoServicesConfig_VenuesPreflightEnabled[0], GeoServicesConfig_VenuesPreflightEnabled[1], a2);
  +[MapsMapDisplayDebugController completelyFlushTiles](MapsMapDisplayDebugController, "completelyFlushTiles");
}

float sub_100257038(id a1)
{
  return (float)(unint64_t)GEOConfigGetUInteger(GeoServicesConfig_VenuesMinimumResultsNumberForIndexList[0], GeoServicesConfig_VenuesMinimumResultsNumberForIndexList[1]);
}

void sub_10025705C(id a1, float a2)
{
  GEOConfigSetUInteger(GeoServicesConfig_VenuesMinimumResultsNumberForIndexList[0], GeoServicesConfig_VenuesMinimumResultsNumberForIndexList[1], (unint64_t)a2);
}

float sub_100257070(id a1)
{
  return (float)(unint64_t)GEOConfigGetUInteger(GeoServicesConfig_VenuesMinimumSectionsNumberForDisplayIndexList[0], GeoServicesConfig_VenuesMinimumSectionsNumberForDisplayIndexList[1]);
}

void sub_100257094(id a1, float a2)
{
  GEOConfigSetUInteger(GeoServicesConfig_VenuesMinimumSectionsNumberForDisplayIndexList[0], GeoServicesConfig_VenuesMinimumSectionsNumberForDisplayIndexList[1], (unint64_t)a2);
}

BOOL sub_1002570A8(id a1)
{
  return GEOConfigGetBOOL(GeoServicesConfig_VenuesInjectVenueGoInsideStyleAttribute[0], GeoServicesConfig_VenuesInjectVenueGoInsideStyleAttribute[1]);
}

void sub_1002570B8(id a1, BOOL a2)
{
  GEOConfigSetBOOL(GeoServicesConfig_VenuesInjectVenueGoInsideStyleAttribute[0], GeoServicesConfig_VenuesInjectVenueGoInsideStyleAttribute[1], a2);
}

void sub_1002571F0(id a1)
{
  TrafficIncidentsStorageManager *v1;
  void *v2;

  v1 = objc_alloc_init(TrafficIncidentsStorageManager);
  v2 = (void *)qword_1014D1E08;
  qword_1014D1E08 = (uint64_t)v1;

}

BOOL sub_100257394(id a1, TrafficIncidentReport *a2, NSDictionary *a3)
{
  return !-[TrafficIncidentReport isHidden](a2, "isHidden", a3);
}

void sub_100257520(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100257580;
  v2[3] = &unk_1011AC860;
  v3 = v1;
  objc_msgSend(v3, "submitWithCompletionHandler:", v2);

}

void sub_100257580(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = sub_100257624();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = 138412290;
    v6 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "TrafficIncidentsStorageManager resubmitted last report : %@", (uint8_t *)&v5, 0xCu);
  }

}

id sub_100257624()
{
  if (qword_1014D1E20 != -1)
    dispatch_once(&qword_1014D1E20, &stru_1011ADD10);
  return (id)qword_1014D1E18;
}

id sub_100257B1C(id a1, NSData *a2, unint64_t a3)
{
  NSData *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v11;
  uint8_t buf[4];
  id v13;

  v3 = a2;
  v11 = 0;
  v4 = +[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", objc_opt_class(TrafficIncidentReport), v3, &v11);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v6 = v11;
  if (v6)
  {
    v7 = sub_100257624();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "TrafficIncidentsStorageManager error decoding report %@", buf, 0xCu);
    }

    v9 = 0;
  }
  else
  {
    v9 = v5;
  }

  return v9;
}

id sub_100257C78(id a1, VKTrafficIncidentFeature *a2, unint64_t a3)
{
  return -[VKTrafficIncidentFeature uniqueIdentifier](a2, "uniqueIdentifier", a3);
}

void sub_100258070(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "TrafficIncidentsStorageManager");
  v2 = (void *)qword_1014D1E18;
  qword_1014D1E18 = (uint64_t)v1;

}

void sub_1002582A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

id sub_1002582C4()
{
  if (qword_1014D1E30 != -1)
    dispatch_once(&qword_1014D1E30, &stru_1011ADD78);
  return (id)qword_1014D1E28;
}

void sub_100258304(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  os_signpost_id_t v10;
  id WeakRetained;
  uint64_t v12;
  id v13;
  id v14;
  uint8_t v15[16];

  v5 = a2;
  v6 = a3;
  v7 = sub_1002582C4();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 48);
  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v8))
  {
    *(_WORD *)v15 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_INTERVAL_END, v10, "FetchingCollectionsListViewBatch", "", v15, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v6)
    {
      v12 = 0;
      v13 = v6;
      v14 = 0;
    }
    else
    {
      v12 = 1;
      v13 = 0;
      v14 = v5;
    }
    (*(void (**)(_QWORD, uint64_t, id, id))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), v12, v13, v14);
  }

}

void sub_100258418(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "CuratedCollectionsListFetcher");
  v2 = (void *)qword_1014D1E28;
  qword_1014D1E28 = (uint64_t)v1;

}

uint64_t sub_1002589D4(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isKindOfClass;
  uint64_t v6;

  v1 = a1;
  v3 = objc_opt_class(IncompleteTransitLineItem, v2);
  if ((objc_opt_isKindOfClass(v1, v3) & 1) != 0)
  {
    isKindOfClass = 1;
  }
  else
  {
    v6 = objc_opt_class(MSPTransitStorageLineItem, v4);
    isKindOfClass = objc_opt_isKindOfClass(v1, v6);
  }

  return isKindOfClass & 1;
}

double sub_100259280(uint64_t a1, void *a2)
{
  if (objc_msgSend(a2, "row") == (id)(*(_QWORD *)(a1 + 32) - 1))
    return _UICollectionViewListSectionSeparatorInsetHidden;
  else
    return _UICollectionViewListLayoutSectionAutomaticDimension;
}

void sub_100259C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100259C40(uint64_t a1, void *a2)
{
  id *WeakRetained;
  id *v4;
  id v5;

  v5 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained[3], "setImage:", v5);

}

void sub_10025A180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10025A19C(uint64_t a1)
{
  _BYTE *WeakRetained;
  void *v2;
  _BYTE *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[96] = 1;
    v3 = WeakRetained;
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "rowsGroup"));
    objc_msgSend(v2, "checkmarkRowDidChangeChecked:", v3);

    WeakRetained = v3;
  }

}

void sub_10025A8D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10025A8F8(uint64_t a1, void *a2)
{
  id WeakRetained;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "value"));
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);

    }
    objc_msgSend(WeakRetained, "update");
  }

}

void sub_10025B38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10025B3B0()
{
  if (qword_1014D1E40 != -1)
    dispatch_once(&qword_1014D1E40, &stru_1011ADEA8);
  return (id)qword_1014D1E38;
}

void sub_10025B3F0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  os_signpost_id_t v9;
  id WeakRetained;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void (**v16)(_QWORD, _QWORD, _QWORD);
  void (**v17)(_QWORD, _QWORD, _QWORD);
  void *v18;
  id v19;
  uint8_t v20[16];
  uint8_t buf[16];

  v5 = a2;
  v6 = sub_10025B3B0();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 56);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "FetchingGuidesHomeView", "", buf, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v11 = WeakRetained;
  if (!v5 || a3)
  {
    v17 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "stateHandler"));
    ((void (**)(_QWORD, id, uint64_t))v17)[2](v17, objc_msgSend(v11, "state"), 3);

    objc_msgSend(v11, "setState:", 3);
    goto LABEL_11;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "filteredGuidesSection"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "filteredGuides"));
    objc_msgSend(v11, "setFilteredCollections:", v13);

    v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "filteredGuidesSection"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject filteredGuideIds](v14, "filteredGuideIds"));
    objc_msgSend(v11, "setFilteredCollectionsIds:", v15);

  }
  else
  {
    objc_msgSend(WeakRetained, "setGuideHomeResult:", v5);
    objc_msgSend(v11, "clearFilteredData");
    objc_msgSend(v11, "initializeSingleCollectionFromResponseIfApplicable");
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "singlePlaceCollection"));

    if (!v18)
      goto LABEL_9;
    v19 = sub_1004316CC();
    v14 = objc_claimAutoreleasedReturnValue(v19);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Guides Home contains single guide in response, would be opening guide view.", v20, 2u);
    }
  }

LABEL_9:
  v16 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "stateHandler"));
  ((void (**)(_QWORD, id, uint64_t))v16)[2](v16, objc_msgSend(v11, "state"), 2);

  objc_msgSend(v11, "setState:", 2);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_11:

}

void sub_10025B7CC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10025B7F0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  os_signpost_id_t v10;
  id WeakRetained;
  void *v12;
  uint8_t v13[16];

  v5 = a2;
  v6 = a3;
  v7 = sub_10025B3B0();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  v10 = *(_QWORD *)(a1 + 48);
  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v8))
  {
    *(_WORD *)v13 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_INTERVAL_END, v10, "FetchingGuidesHomeViewBatch", "", v13, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v12 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
      objc_msgSend(WeakRetained, "setPlaceCollections:", 0);
    else
      objc_msgSend(WeakRetained, "setPlaceCollections:", v5);
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_10025BA30(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "curatedGuides"));
  v4 = objc_msgSend(v3, "count");

  if (v4)
  {
    v5 = *(void **)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "curatedGuides"));
    objc_msgSend(v5, "addObjectsFromArray:", v6);

  }
}

void sub_10025BDE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "GuidesHomeAPIController");
  v2 = (void *)qword_1014D1E38;
  qword_1014D1E38 = (uint64_t)v1;

}

id sub_10025C5D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_10025C740(double *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v10[2];

  v3 = a2;
  v4 = objc_alloc_init((Class)CAGradientLayer);
  objc_msgSend(v4, "setBounds:", a1[4], a1[5], a1[6], a1[7]);
  v5 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(+[UIColor whiteColor](UIColor, "whiteColor")));
  v10[0] = objc_msgSend(v5, "CGColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor whiteColor](UIColor, "whiteColor"));
  v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "colorWithAlphaComponent:", 0.0)));
  v10[1] = objc_msgSend(v7, "CGColor");
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v10, 2));
  objc_msgSend(v4, "setColors:", v8);

  v9 = objc_msgSend(v3, "CGContext");
  objc_msgSend(v4, "renderInContext:", v9);

}

void sub_10025CA54(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSMutableDictionary);
  v2 = (void *)qword_1014D1E48;
  qword_1014D1E48 = (uint64_t)v1;

}

void sub_10025F1E0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10025F218(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "trafficAlertView"));
  objc_msgSend(v1, "setAcceptProgress:", 1.0);

}

void sub_10025F260(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_dismissTrafficAlertWithResult:", 6);

}

void sub_10025F940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_100261628(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1002618D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002618F0(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[MapsSyncStore sharedStore](_TtC8MapsSync13MapsSyncStore, "sharedStore"));
    objc_msgSend(v3, "subscribe:", *(_QWORD *)(a1 + 32));

    v8 = objc_opt_class(MSCollection);
    v9 = objc_opt_class(MSCollectionItem);
    v10 = objc_opt_class(MSCollectionPlaceItem);
    v11 = objc_opt_class(MSCollectionTransitItem);
    v12 = objc_opt_class(MSCuratedCollection);
    v4 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 5));
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(void **)(v5 + 72);
    *(_QWORD *)(v5 + 72) = v4;

    v7 = (void *)WeakRetained[4];
    WeakRetained[4] = &__NSArray0__struct;

    objc_msgSend(WeakRetained, "storeDidChangeWithTypes:", &__NSArray0__struct, v8, v9, v10, v11);
  }

}

id sub_100261AD0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_reloadCollectionPlaceItems");
}

uint64_t sub_100261B94(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100261BA4(uint64_t a1)
{

}

void sub_100261BAC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_100261F1C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 64);
  *(_QWORD *)(v1 + 64) = &__NSArray0__struct;

}

id sub_100261F3C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_notifyObserversItemsDidChange");
}

void sub_100261F44(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v2;

}

id sub_100261F7C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_notifyObserversItemsDidChange");
}

void sub_100262090(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[5];
  id v9;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions);
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[MSCollectionPlaceItem excludeShadowItemsPredicate](MSCollectionPlaceItem, "excludeShadowItemsPredicate"));
    v6 = objc_msgSend(v4, "initWithPredicate:sortDescriptors:range:", v5, 0, 0);

    v7 = objc_alloc_init((Class)MSCollectionPlaceItemRequest);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_1002621A8;
    v8[3] = &unk_1011ADF70;
    objc_copyWeak(&v9, v2);
    v8[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v7, "fetchWithOptions:completionHandler:", v6, v8);

    objc_destroyWeak(&v9);
  }

}

void sub_100262194(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1002621A8(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  _QWORD *WeakRetained;
  id v6;
  void *v7;
  NSObject *v8;
  _QWORD block[4];
  id v10;

  v3 = a2;
  v4 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v6 = objc_msgSend(v3, "copy");
    v7 = (void *)WeakRetained[4];
    WeakRetained[4] = v6;

    v8 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 40);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100262280;
    block[3] = &unk_1011AD260;
    objc_copyWeak(&v10, v4);
    dispatch_async(v8, block);
    objc_destroyWeak(&v10);
  }

}

void sub_100262280(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_reloadCollectionPlaceItems");
    WeakRetained = v2;
  }

}

void sub_100262644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100262670(uint64_t a1)
{
  _QWORD *WeakRetained;
  _QWORD *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "setNeedsTablePartsUpdateWithSender:scroll:", WeakRetained[6], 0);
    WeakRetained = v2;
  }

}

void sub_1002627F4(id a1, id a2, RAPReportComposerPlaceClosureIssueSection *a3)
{
  -[RAPTablePartSection didChange](a3, "didChange");
}

void sub_100262E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100262E64(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_maps_topMostPresentViewController:animated:completion:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 152), 1, 0);
}

void sub_100262E84(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "setPresentingViewController:", v7);
    v5 = *(_QWORD *)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "presentingViewController"));
    (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);

  }
}

id sub_100262F5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "invokeCompletion");
}

void sub_100263564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10026357C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10026358C(uint64_t a1)
{

}

void sub_100263594(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_1002635A4(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;
  int v5;
  NSError *v6;

  v2 = a2;
  v3 = sub_100432A0C();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v5 = 138412290;
    v6 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "No view model to return with error %@", (uint8_t *)&v5, 0xCu);
  }

}

void sub_1002637B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1002637DC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  id v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  int v17;
  id v18;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (v6)
    {
      v8 = sub_100432A0C();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        v17 = 138412290;
        v18 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Failed Sundew call when attempting to fetch with error %@", (uint8_t *)&v17, 0xCu);
      }

      v10 = objc_claimAutoreleasedReturnValue(+[Result resultWithError:](Result, "resultWithError:", v6));
      v11 = (void *)*((_QWORD *)WeakRetained + 26);
      *((_QWORD *)WeakRetained + 26) = v10;

    }
    else if (objc_msgSend(v5, "attributePhotos"))
    {
      v12 = objc_alloc((Class)MUPlaceUserAttributionViewModel);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "attributionName"));
      v14 = objc_msgSend(v12, "initWithAttributionName:", v13);
      v15 = objc_claimAutoreleasedReturnValue(+[Result resultWithValue:](Result, "resultWithValue:", v14));
      v16 = (void *)*((_QWORD *)WeakRetained + 26);
      *((_QWORD *)WeakRetained + 26) = v15;

      objc_msgSend(*((id *)WeakRetained + 18), "reloadUserAttribution");
    }
  }

}

void sub_100263B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100263B94(id *a1, void *a2, uint64_t a3)
{
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _TtC4Maps9UGCReport *v21;
  void *v22;
  _TtC4Maps9UGCReport *v23;
  id v24;

  v24 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v6 = WeakRetained;
  if (!a3 && WeakRetained)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "mapItem"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_geoMapItem"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "_placeQuestionnaire"));

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "previousSubmission"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "images"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[UGCPhotosForm editPhotosFormWithPlaceQuestionnaire:previouslySubmittedImages:](UGCPhotosForm, "editPhotosFormWithPlaceQuestionnaire:previouslySubmittedImages:", v9, v11));

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "previousSubmission"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "scorecard"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[UGCRatingsForm editRatingFormWithPlaceQuestionnaire:existingScorecard:](UGCRatingsForm, "editRatingFormWithPlaceQuestionnaire:existingScorecard:", v9, v14));

    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "uid"));
    objc_msgSend(v12, "removePhotoWithIdentifier:", v16);

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication sharedMapsDelegate](UIApplication, "sharedMapsDelegate"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "submissionManager"));

    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "mapItem"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[UGCPOIEnrichmentForm addPOIEnrichmentFormWithMapItem:photosForm:ratingsForm:](UGCPOIEnrichmentForm, "addPOIEnrichmentFormWithMapItem:photosForm:ratingsForm:", v19, v12, v15));

    v21 = [_TtC4Maps9UGCReport alloc];
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "mapItem"));
    v23 = -[UGCReport initWithReportType:initialForm:mapItem:submitter:](v21, "initWithReportType:initialForm:mapItem:submitter:", 0, v20, v22, v18);

    if (MapsFeature_IsEnabled_ARPCommunityID())
    {
      -[UGCReport setShouldMigrateRatingsWithICloud:](v23, "setShouldMigrateRatingsWithICloud:", objc_msgSend(v24, "hasRatingsWithICloud"));
      -[UGCReport submitRatingsAndPhotosWithUploadPolicy:progressBlock:completion:](v23, "submitRatingsAndPhotosWithUploadPolicy:progressBlock:completion:", 1, 0, &stru_1011AE0D0);
    }
    else
    {
      -[UGCReport submitRatingsAndPhotosSimultaneouslyUsingDSIDWithUploadPolicy:progressBlock:completion:](v23, "submitRatingsAndPhotosSimultaneouslyUsingDSIDWithUploadPolicy:progressBlock:completion:", 1, 0, &stru_1011AE0F0);
    }

  }
}

void sub_100263DDC(id a1, GEORPFeedbackResponse *a2, NSError *a3)
{
  NSError *v3;
  id v4;
  NSObject *v5;
  int v6;
  NSError *v7;

  v3 = a3;
  if (v3)
  {
    v4 = sub_10043310C();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error with submission %@", (uint8_t *)&v6, 0xCu);
    }

  }
  else
  {
    +[GEOAPPortal captureUserAction:target:value:](GEOAPPortal, "captureUserAction:target:value:", 331, 76, 0);
  }

}

void sub_100263EA4(id a1, GEORPFeedbackResponse *a2, NSError *a3)
{
  NSError *v3;
  id v4;
  NSObject *v5;
  int v6;
  NSError *v7;

  v3 = a3;
  if (v3)
  {
    v4 = sub_10043310C();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error with submission %@", (uint8_t *)&v6, 0xCu);
    }

  }
  else
  {
    +[GEOAPPortal captureUserAction:target:value:](GEOAPPortal, "captureUserAction:target:value:", 331, 76, 0);
  }

}

id sub_1002644A8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "stopAnimatingActivityIndicatorViewForRAP");
}

void sub_100264D0C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  if (!a3)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(void **)(v5 + 24);
    *(_QWORD *)(v5 + 24) = v4;

  }
  objc_msgSend(*(id *)(a1 + 32), "_invokeCompletionBlocksWithFinishedFlag:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24) != 0);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v7 + 8);
  *(_QWORD *)(v7 + 8) = 0;

}

void sub_1002654F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  v5 = a1;
  if (IOHIDEventGetType(a4) == 12)
    objc_msgSend(v5, "_handleIOHIDEvent:", a4);

}

void sub_10026604C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100266088(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = sub_1004317AC();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "low light level timer fired", v5, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setAmbientLightLevel:", objc_msgSend(WeakRetained, "_computedLightLevel"));
  objc_msgSend(WeakRetained, "setDarkUpdateTimer:", 0);

}

void sub_10026611C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = sub_1004317AC();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "regular light level timer fired", v5, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setAmbientLightLevel:", objc_msgSend(WeakRetained, "_computedLightLevel"));
  objc_msgSend(WeakRetained, "setLightUpdateTimer:", 0);

}

id sub_100269010()
{
  if (qword_1014D1E68 != -1)
    dispatch_once(&qword_1014D1E68, &stru_1011AE1C8);
  return (id)qword_1014D1E60;
}

void sub_100269050(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "ARConfigurationRecording");
  v2 = (void *)qword_1014D1E60;
  qword_1014D1E60 = (uint64_t)v1;

}

void sub_1002694F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10026950C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result;

  result = objc_msgSend(a2, "conformsToProtocol:", &OBJC_PROTOCOL___VenuePlaceCardItem);
  if ((result & 1) == 0)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_1002695F8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v2 = objc_alloc_init((Class)MSCollectionPlaceItem);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "name"));
  objc_msgSend(v2, "setCustomName:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_geoMapItem"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[GEOMapItemStorage mapItemStorageForGEOMapItem:](GEOMapItemStorage, "mapItemStorageForGEOMapItem:", v4));
  objc_msgSend(v2, "setMapItemStorage:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[MapsSyncStore sharedStore](_TtC8MapsSync13MapsSyncStore, "sharedStore"));
  v10 = v2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v10, 1));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100269750;
  v8[3] = &unk_1011AE218;
  v9 = *(id *)(a1 + 40);
  objc_msgSend(v6, "saveWithObjects:completionHandler:", v7, v8);

}

void sub_100269750(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1002697E0;
  v6[3] = &unk_1011ACAD0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_1002697E0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100269888(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  void *v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", objc_msgSend(*(id *)(a1 + 32), "_muid")));
  v9 = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[MapsSyncQueryPredicate queryPredicateWithFormat:argumentArray:](_TtC8MapsSync22MapsSyncQueryPredicate, "queryPredicateWithFormat:argumentArray:", CFSTR("collections.@count == 0 AND muid == %@"), v3));

  v5 = objc_msgSend(objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions), "initWithPredicate:sortDescriptors:range:", v4, 0, 0);
  v6 = objc_alloc_init((Class)MSCollectionPlaceItemRequest);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1002699DC;
  v7[3] = &unk_1011AE268;
  v8 = *(id *)(a1 + 40);
  objc_msgSend(v6, "fetchWithOptions:completionHandler:", v5, v7);

}

void sub_1002699DC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id *v8;
  _QWORD v9[4];
  id v10;
  _QWORD block[4];
  id v12;
  id v13;

  v5 = a2;
  v6 = a3;
  if (objc_msgSend(v5, "count"))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[MapsSyncStore sharedStore](_TtC8MapsSync13MapsSyncStore, "sharedStore"));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100269B18;
    v9[3] = &unk_1011AE218;
    v8 = &v10;
    v10 = *(id *)(a1 + 32);
    objc_msgSend(v7, "deleteWithObjects:completionHandler:", v5, v9);
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100269B08;
    block[3] = &unk_1011ACAD0;
    v8 = &v13;
    v13 = *(id *)(a1 + 32);
    v12 = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    v7 = v12;
  }

}

uint64_t sub_100269B08(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100269B18(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100269BA8;
  v6[3] = &unk_1011ACAD0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_100269BA8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_100269C50(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  void *v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", objc_msgSend(*(id *)(a1 + 32), "_muid")));
  v10 = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v10, 1));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[MapsSyncQueryPredicate queryPredicateWithFormat:argumentArray:](_TtC8MapsSync22MapsSyncQueryPredicate, "queryPredicateWithFormat:argumentArray:", CFSTR("collections.@count == 0 AND muid == %@"), v3));

  v5 = objc_msgSend(objc_alloc((Class)_TtC8MapsSync20MapsSyncQueryOptions), "initWithPredicate:sortDescriptors:range:", v4, 0, 0);
  v6 = objc_msgSend(objc_alloc((Class)_TtC8MapsSync13MapsSyncRange), "initWithOffset:limit:", 0, 1);
  objc_msgSend(v5, "setRange:", v6);

  v7 = objc_alloc_init((Class)MSCollectionPlaceItemRequest);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100269DD0;
  v8[3] = &unk_1011AE2B8;
  v9 = *(id *)(a1 + 40);
  objc_msgSend(v7, "countWithOptions:completionHandler:", v5, v8);

}

void sub_100269DD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  uint64_t v10;

  v5 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100269E70;
  block[3] = &unk_1011AE290;
  v9 = *(id *)(a1 + 32);
  v10 = a2;
  v8 = v5;
  v6 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

uint64_t sub_100269E70(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, BOOL, _QWORD))(a1[5] + 16))(a1[5], a1[6] > 0, a1[4]);
}

id sub_10026A0B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_reloadLogsSync");
}

uint64_t sub_10026A1CC(uint64_t a1, uint64_t a2)
{
  objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
  return 1;
}

void sub_10026A1EC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  objc_msgSend(v5, "reloadData");

}

void sub_10026A424(uint64_t a1)
{
  dispatch_queue_global_t global_queue;
  NSObject *v3;
  void *v4;
  _QWORD v5[5];
  id v6;

  global_queue = dispatch_get_global_queue(25, 0);
  v3 = objc_claimAutoreleasedReturnValue(global_queue);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10026A4B0;
  v5[3] = &unk_1011AC8B0;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  dispatch_async(v3, v5);

}

void sub_10026A4B0(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD block[4];
  id v9;
  uint64_t v10;
  id v11;
  unsigned int v12;
  id v13;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  v13 = 0;
  v3 = objc_msgSend(v2, "restoreOrphanedEntries:", &v13);
  v4 = v13;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10026A580;
  block[3] = &unk_1011AE330;
  v5 = *(id *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 32);
  v9 = v5;
  v10 = v6;
  v12 = v3;
  v11 = v4;
  v7 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_msgSend(*(id *)(a1 + 32), "_reloadLogsSync");

}

void sub_10026A580(uint64_t a1)
{
  void *v1;
  _QWORD v2[5];
  id v3;
  int v4;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10026A600;
  v2[3] = &unk_1011AE308;
  v1 = *(void **)(a1 + 32);
  v2[4] = *(_QWORD *)(a1 + 40);
  v4 = *(_DWORD *)(a1 + 56);
  v3 = *(id *)(a1 + 48);
  objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, v2);

}

id sub_10026A600(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_rebuildComplete:error:", *(unsigned int *)(a1 + 48), *(_QWORD *)(a1 + 40));
}

id sub_10026A824(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_reallyFlushDB");
}

void sub_10026A8FC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD block[4];
  id v8;
  uint64_t v9;
  id v10;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  v10 = 0;
  objc_msgSend(v3, "pruneEntriesOlderThan:error:", v2, &v10);
  v4 = v10;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10026A9A4;
  block[3] = &unk_1011AC8B0;
  v5 = *(_QWORD *)(a1 + 32);
  v8 = v4;
  v9 = v5;
  v6 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_msgSend(*(id *)(a1 + 32), "_reloadLogsAsync");

}

id sub_10026A9A4(id result)
{
  uint64_t v1;

  v1 = *((_QWORD *)result + 4);
  if (v1)
    return objc_msgSend(*((id *)result + 5), "_showError:forTask:", v1, CFSTR("Flushing DB"));
  return result;
}

void sub_10026B820(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "datePicker"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "date"));
  GEOConfigSetDate(GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt[0], GeoServicesConfig_MapsRequestResponseLoggingPersistedStopAt[1], v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "tableView"));
  v6 = *(_QWORD *)(a1 + 48);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
  objc_msgSend(v4, "reloadRowsAtIndexPaths:withRowAnimation:", v5, 100);

}

void sub_10026C250(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v9[6];

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "name"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%u - %@"), a3, v5));

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10026C320;
  v9[3] = &unk_1011AE380;
  v7 = *(void **)(a1 + 32);
  v9[4] = *(_QWORD *)(a1 + 40);
  v9[5] = a3;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", v6, 0, v9));
  objc_msgSend(v7, "addAction:", v8);

}

id sub_10026C320(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_showPlaceCardAt:", *(_QWORD *)(a1 + 40));
}

void sub_10026CDD0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2;
  v4 = objc_msgSend(v3, "length");
  v5 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v6 = objc_msgSend(*(id *)(a1 + 40), "row");
  if (v4)
  {
    objc_msgSend(v5, "setObject:atIndexedSubscript:", v3, v6);
    v7 = *(void **)(a1 + 48);
    v11 = *(_QWORD *)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v11, 1));
    objc_msgSend(v7, "reloadRowsAtIndexPaths:withRowAnimation:", v8, 100);
  }
  else
  {
    objc_msgSend(v5, "removeObjectAtIndex:", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    v10 = *(_QWORD *)(a1 + 40);
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v10, 1));
    objc_msgSend(v8, "deleteRowsAtIndexPaths:withRowAnimation:", v9, 100);

  }
}

void sub_10026D0AC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObjectAtIndex:", objc_msgSend(*(id *)(a1 + 40), "row"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v5 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v5, 1));
  objc_msgSend(v2, "deleteRowsAtIndexPaths:withRowAnimation:", v3, 100);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)));
  GEOConfigSetSet(GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds[0], GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds[1], v4);

}

void sub_10026D1FC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = a2;
  if (objc_msgSend(v3, "length"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "count"), 0));
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addObject:", v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
    v8 = v4;
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
    objc_msgSend(v5, "insertRowsAtIndexPaths:withRowAnimation:", v6, 100);

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)));
    GEOConfigSetSet(GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds[0], GeoServicesConfig_MapsRequestResponseLoggingPersistedLimitBundleIds[1], v7);

  }
}

uint64_t sub_10026D3E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10026D61C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  id *v24;
  id *v25;
  uint64_t v26;

  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  _Block_object_dispose(&a24, 8);
  objc_destroyWeak((id *)(v26 - 88));
  _Unwind_Resume(a1);
}

uint64_t sub_10026D65C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10026D66C(uint64_t a1)
{

}

void sub_10026D674(uint64_t a1, void *a2)
{
  id WeakRetained;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend(v5, "setText:", *(_QWORD *)(a1 + 32));
    objc_msgSend(v5, "addTarget:action:forControlEvents:", WeakRetained, "_textFieldValueDidChange:", 0x20000);
    objc_msgSend(v5, "setAutocapitalizationType:", 0);
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  }

}

void sub_10026D708(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(_QWORD *)(a1 + 32);
    v5 = WeakRetained;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "text"));
    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);

    WeakRetained = v5;
  }

}

void sub_10026DEA8(id *a1)
{

}

id sub_10026F3AC()
{
  if (qword_1014D1E78 != -1)
    dispatch_once(&qword_1014D1E78, &stru_1011AE4D8);
  return (id)qword_1014D1E70;
}

void sub_10027068C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "CarDisplayConfigAuxiliaryTask");
  v2 = (void *)qword_1014D1E70;
  qword_1014D1E70 = (uint64_t)v1;

}

void sub_100270730(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_1014D1E80;
  qword_1014D1E80 = (uint64_t)v1;

}

void sub_100270CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  id *v12;
  id *v13;
  uint64_t v14;

  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v14 - 160));
  _Unwind_Resume(a1);
}

id sub_100270D38()
{
  if (qword_1014D1E98 != -1)
    dispatch_once(&qword_1014D1E98, &stru_1011AE6C8);
  return (id)qword_1014D1E90;
}

void sub_100270D78(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  id WeakRetained;
  void *v15;
  unsigned __int8 v16;
  id v17;
  id v18;
  NSObject *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *i;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  NSObject *v33;
  id v34;
  NSObject *v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  id *location;
  void *v42;
  id v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  id v48;
  id v49;
  uint8_t buf[4];
  id v51;
  __int16 v52;
  id v53;
  __int16 v54;
  id v55;
  __int16 v56;
  NSObject *v57;
  _BYTE v58[128];

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "attachments"));
  v40 = v5;
  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "screenshots"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "arrayByAddingObjectsFromArray:", v8));

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v49 = 0;
  v42 = v6;
  LOBYTE(v8) = objc_msgSend(v10, "removeItemAtPath:error:", v6, &v49);
  v11 = v49;

  if ((v8 & 1) == 0)
  {
    v12 = sub_100270D38();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)buf = 134349570;
      v51 = WeakRetained;
      v52 = 2112;
      v53 = v6;
      v54 = 2112;
      v55 = v11;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "[%{public}p] Error removing folder at path: %@ (%@)", buf, 0x20u);

    }
  }
  v39 = v11;
  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v48 = 0;
  v16 = objc_msgSend(v15, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v6, 1, 0, &v48);
  v17 = v48;

  if ((v16 & 1) == 0)
  {
    v18 = sub_100270D38();
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      v20 = objc_loadWeakRetained((id *)(a1 + 32));
      *(_DWORD *)buf = 134349570;
      v51 = v20;
      v52 = 2112;
      v53 = v6;
      v54 = 2112;
      v55 = v17;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "[%{public}p] Error creating folder at path: %@ (%@)", buf, 0x20u);

    }
  }
  v38 = v17;
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  v21 = v9;
  v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v44, v58, 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)v45;
    location = (id *)(a1 + 32);
    do
    {
      for (i = 0; i != v23; i = (char *)i + 1)
      {
        if (*(_QWORD *)v45 != v24)
          objc_enumerationMutation(v21);
        v26 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * (_QWORD)i);
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "temporaryFileURL"));

        if (v27)
        {
          v28 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "temporaryFileURL"));
          v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "fileName"));
          v30 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@/%@"), v42, v29));
          v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v30));

          v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
          v43 = 0;
          LOBYTE(v30) = objc_msgSend(v32, "moveItemAtURL:toURL:error:", v28, v31, &v43);
          v33 = v43;

          if ((v30 & 1) == 0)
          {
            v34 = sub_100270D38();
            v35 = objc_claimAutoreleasedReturnValue(v34);
            if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
            {
              v36 = objc_loadWeakRetained(location);
              *(_DWORD *)buf = 134349826;
              v51 = v36;
              v52 = 2112;
              v53 = v28;
              v54 = 2112;
              v55 = v31;
              v56 = 2112;
              v57 = v33;
              _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "[%{public}p] Error moving attachment from %@ to %@: %@", buf, 0x2Au);

            }
          }

        }
        else
        {
          v37 = sub_100270D38();
          v33 = objc_claimAutoreleasedReturnValue(v37);
          if (!os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
            goto LABEL_23;
          v28 = objc_loadWeakRetained(location);
          *(_DWORD *)buf = 134349314;
          v51 = v28;
          v52 = 2112;
          v53 = v26;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "[%{public}p] Invalid attachment: %@", buf, 0x16u);
        }

LABEL_23:
      }
      v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v44, v58, 16);
    }
    while (v23);
  }

}

void sub_100271230(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t);
  MapsRadarDraft *v12;

  notify_post("com.apple.Maps.DEMapsExtension.CollectionAcknowledgement");
  v7 = 0;
  v8 = &v7;
  v9 = 0x3032000000;
  v10 = sub_100271334;
  v11 = sub_100271344;
  v12 = objc_opt_new(MapsRadarDraft);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = v8[5];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10027134C;
  v4[3] = &unk_1011AE540;
  v5 = *(id *)(a1 + 32);
  v6 = &v7;
  objc_msgSend(WeakRetained, "_collectAttachmentsWithRadarDraft:completion:", v3, v4);

  _Block_object_dispose(&v7, 8);
}

void sub_10027131C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100271334(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100271344(uint64_t a1)
{

}

uint64_t sub_10027134C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager _maps_globalCachesURL](NSFileManager, "_maps_globalCachesURL"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "URLByAppendingPathComponent:", CFSTR("DiagnosticLogs")));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "path"));

  (*(void (**)(uint64_t, uint64_t, void *))(v1 + 16))(v1, v2, v5);
  return notify_post("com.apple.Maps.DEMapsExtension.CollectionResponse");
}

void sub_1002713DC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  id v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  __int128 *p_buf;
  __int128 buf;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t);
  MapsRadarDraft *v14;

  v2 = sub_100270D38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    LODWORD(buf) = 134349056;
    *(_QWORD *)((char *)&buf + 4) = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Got CarPlay TTR button notification", (uint8_t *)&buf, 0xCu);

  }
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v11 = 0x3032000000;
  v12 = sub_100271334;
  v13 = sub_100271344;
  v14 = objc_opt_new(MapsRadarDraft);
  v5 = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100271574;
  v7[3] = &unk_1011AE540;
  v8 = *(id *)(a1 + 32);
  p_buf = &buf;
  objc_msgSend(v5, "_collectAttachmentsWithRadarDraft:completion:", v6, v7);

  _Block_object_dispose(&buf, 8);
}

void sub_100271554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100271574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager _maps_globalCachesURL](NSFileManager, "_maps_globalCachesURL"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "URLByAppendingPathComponent:", CFSTR("DiagnosticLogs")));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "path"));

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingPathComponent:", CFSTR("__CarPlay__")));
  (*(void (**)(uint64_t, uint64_t, id))(v1 + 16))(v1, v2, v6);

}

void sub_100271F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24,char a25)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a24);
  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

void sub_100271FFC(uint64_t a1)
{
  const char *label;
  const char *v3;
  BOOL v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  id v21;
  NSObject *v22;
  char *v23;
  id v24;
  NSObject *v25;
  id v26;
  NSObject *v27;
  char *v28;
  _QWORD v29[4];
  id v30;
  id v31;
  id v32;
  uint8_t buf[4];
  const char *v34;
  __int16 v35;
  const char *v36;
  __int16 v37;
  int v38;
  __int16 v39;
  const char *v40;
  __int16 v41;
  const char *v42;
  __int16 v43;
  const char *v44;

  label = dispatch_queue_get_label((dispatch_queue_t)&_dispatch_main_q);
  v3 = dispatch_queue_get_label(0);
  if (label != v3)
  {
    v4 = !label || v3 == 0;
    if (v4 || strcmp(label, v3))
    {
      v19 = sub_1004318FC();
      v20 = objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136316418;
        v34 = "-[MapsRadarController launchTTRWithRadar:promptTitle:fromViewController:]_block_invoke";
        v35 = 2080;
        v36 = "MapsRadarController.m";
        v37 = 1024;
        v38 = 178;
        v39 = 2080;
        v40 = "dispatch_get_main_queue()";
        v41 = 2080;
        v42 = dispatch_queue_get_label((dispatch_queue_t)&_dispatch_main_q);
        v43 = 2080;
        v44 = dispatch_queue_get_label(0);
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion on queue failed: %s/%s; actual queue: %s",
          buf,
          0x3Au);

      }
      if (sub_100A70734())
      {
        v21 = sub_1004318FC();
        v22 = objc_claimAutoreleasedReturnValue(v21);
        if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        {
          v23 = (char *)objc_claimAutoreleasedReturnValue(+[NSThread callStackSymbols](NSThread, "callStackSymbols"));
          *(_DWORD *)buf = 138412290;
          v34 = v23;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);

        }
      }
    }
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager _maps_globalCachesURL](NSFileManager, "_maps_globalCachesURL"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "URLByAppendingPathComponent:", CFSTR("DiagnosticLogs")));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "path"));

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "stringByAppendingPathComponent:", CFSTR("lastLaunchedTTR.txt")));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  objc_msgSend(v10, "removeItemAtPath:error:", v9, 0);

  if (v5)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager _maps_globalCachesURL](NSFileManager, "_maps_globalCachesURL"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "URLByAppendingPathComponent:", CFSTR("DiagnosticLogs")));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "path"));

    objc_msgSend(v11, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v14, 1, 0, 0);
    objc_msgSend(v5, "timeIntervalSinceReferenceDate");
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "stringValue"));
    objc_msgSend(v16, "writeToFile:atomically:encoding:error:", v9, 1, 4, 0);

  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "tapToRadarURL"));
  if (!v17)
  {
    v24 = sub_1004318FC();
    v25 = objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      v34 = "-[MapsRadarController launchTTRWithRadar:promptTitle:fromViewController:]_block_invoke";
      v35 = 2080;
      v36 = "MapsRadarController.m";
      v37 = 1024;
      v38 = 181;
      v39 = 2080;
      v40 = "tapToRadarURL != nil";
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
    }

    if (sub_100A70734())
    {
      v26 = sub_1004318FC();
      v27 = objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        v28 = (char *)objc_claimAutoreleasedReturnValue(+[NSThread callStackSymbols](NSThread, "callStackSymbols"));
        *(_DWORD *)buf = 138412290;
        v34 = v28;
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);

      }
    }
  }
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_1002724D8;
  v29[3] = &unk_1011AE5B8;
  objc_copyWeak(&v32, (id *)(a1 + 48));
  v18 = v17;
  v30 = v18;
  v31 = *(id *)(a1 + 32);
  +[UIApplication _maps_unlockApplicationWithCompletion:](UIApplication, "_maps_unlockApplicationWithCompletion:", v29);

  objc_destroyWeak(&v32);
}

void sub_1002724BC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1002724D8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  id WeakRetained;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[4];
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint8_t buf[4];
  id v26;
  __int16 v27;
  id v28;

  v3 = a2;
  v4 = sub_100270D38();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v3)
  {
    if (v6)
    {
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
      *(_DWORD *)buf = 134349314;
      v26 = WeakRetained;
      v27 = 2112;
      v28 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] Error unlocking device: %@", buf, 0x16u);

    }
  }
  else
  {
    if (v6)
    {
      v8 = objc_loadWeakRetained((id *)(a1 + 48));
      *(_DWORD *)buf = 134349056;
      v26 = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] Successfully unlocked device", buf, 0xCu);

    }
    v9 = sub_100270D38();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v11 = objc_loadWeakRetained((id *)(a1 + 48));
      v12 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 134349314;
      v26 = v11;
      v27 = 2112;
      v28 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "[%{public}p] Launching TTR with URL: %@", buf, 0x16u);

    }
    v5 = objc_alloc_init((Class)_LSOpenConfiguration);
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[MNNavigationService sharedService](MNNavigationService, "sharedService"));
    v14 = objc_msgSend(v13, "isInNavigatingState");

    v23 = LSOpenInBackgroundKey;
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v14));
    v24 = v15;
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v24, &v23, 1));
    -[NSObject setFrontBoardOptions:](v5, "setFrontBoardOptions:", v16);

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[LSApplicationWorkspace defaultWorkspace](LSApplicationWorkspace, "defaultWorkspace"));
    v18 = *(_QWORD *)(a1 + 32);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1002727B8;
    v19[3] = &unk_1011AE590;
    objc_copyWeak(&v21, (id *)(a1 + 48));
    v20 = *(id *)(a1 + 40);
    v22 = (char)v14;
    objc_msgSend(v17, "openURL:configuration:completionHandler:", v18, v5, v19);

    objc_destroyWeak(&v21);
  }

}

void sub_10027279C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1002727B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  id WeakRetained;
  id *v9;
  id v10;
  _QWORD v11[4];
  id v12;
  _QWORD block[4];
  id v14;
  id v15;
  uint8_t buf[4];
  id v17;
  __int16 v18;
  id v19;

  v4 = a3;
  v5 = sub_100270D38();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (v7)
    {
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
      *(_DWORD *)buf = 134349314;
      v17 = WeakRetained;
      v18 = 2112;
      v19 = v4;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}p] Error launching TTR: %@", buf, 0x16u);

    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10027299C;
    block[3] = &unk_1011AC8B0;
    v9 = &v14;
    v14 = v4;
    v15 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    goto LABEL_9;
  }
  if (v7)
  {
    v10 = objc_loadWeakRetained((id *)(a1 + 40));
    *(_DWORD *)buf = 134349056;
    v17 = v10;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}p] Successfully launched TTR", buf, 0xCu);

  }
  if (*(_BYTE *)(a1 + 48))
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_100272AF4;
    v11[3] = &unk_1011AC860;
    v9 = &v12;
    v12 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);
LABEL_9:

  }
}

void sub_10027299C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("There was an error launching TTR: %@"), *(_QWORD *)(a1 + 32)));
  v10 = (id)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", CFSTR("[Internal only]\nTap to Radar"), v2, 1));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", CFSTR("OK"), 0, 0));
  objc_msgSend(v10, "addAction:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[MapsInternalAlertPresentationController sharedInstance](MapsInternalAlertPresentationController, "sharedInstance"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "window"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "windowScene"));
  if (v7)
  {
    objc_msgSend(v4, "presentAlertController:fromWindowScene:", v10, v7);
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication _maps_keyMapsWindow](UIApplication, "_maps_keyMapsWindow"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "windowScene"));
    objc_msgSend(v4, "presentAlertController:fromWindowScene:", v10, v9);

  }
}

void sub_100272AF4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = (id)objc_claimAutoreleasedReturnValue(+[UIAlertController alertControllerWithTitle:message:preferredStyle:](UIAlertController, "alertControllerWithTitle:message:preferredStyle:", CFSTR("[Internal only]\nTap-to-Radar"), CFSTR("Tap-to-Radar was successfully launched in the background because you are navigating."), 1));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIAlertAction actionWithTitle:style:handler:](UIAlertAction, "actionWithTitle:style:handler:", CFSTR("OK"), 0, 0));
  objc_msgSend(v9, "addAction:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[MapsInternalAlertPresentationController sharedInstance](MapsInternalAlertPresentationController, "sharedInstance"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "window"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "windowScene"));
  if (v6)
  {
    objc_msgSend(v3, "presentAlertController:fromWindowScene:", v9, v6);
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication _maps_keyMapsWindow](UIApplication, "_maps_keyMapsWindow"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "windowScene"));
    objc_msgSend(v3, "presentAlertController:fromWindowScene:", v9, v8);

  }
}

void sub_100272C24(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_collectAttachmentsWithRadarDraft:completion:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(_QWORD *)(a1 + 32));

}

void sub_100273058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_100273090(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id WeakRetained;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  _BYTE *v16;
  id v17;
  _BYTE buf[24];
  uint64_t (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t);
  MapsRadarDraft *v21;

  v3 = a2;
  v4 = sub_100270D38();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)buf = 134349314;
    *(_QWORD *)&buf[4] = WeakRetained;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] Generating attachments for %@", buf, 0x16u);

  }
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v19 = sub_100271334;
  v20 = sub_100271344;
  v21 = objc_opt_new(MapsRadarDraft);
  v7 = *(_QWORD *)(*(_QWORD *)&buf[8] + 40);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100273294;
  v11[3] = &unk_1011AE658;
  objc_copyWeak(&v17, (id *)(a1 + 56));
  v8 = v3;
  v16 = buf;
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(void **)(a1 + 48);
  v12 = v8;
  v13 = v9;
  v14 = v10;
  v15 = *(id *)(a1 + 32);
  objc_msgSend(v8, "generateAttachmentsForRadarDraft:withCompletion:", v7, v11);

  objc_destroyWeak(&v17);
  _Block_object_dispose(buf, 8);

}

void sub_10027326C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  id *v19;

  objc_destroyWeak(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_100273294(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id WeakRetained;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  id v11;
  __int128 v12;
  _QWORD block[4];
  id v14;
  __int128 v15;
  uint8_t buf[4];
  id v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;

  v2 = sub_100270D38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    v5 = *(_QWORD *)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "attachments"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "screenshots"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "keywords"));
    *(_DWORD *)buf = 134350082;
    v17 = WeakRetained;
    v18 = 2112;
    v19 = v5;
    v20 = 2112;
    v21 = v6;
    v22 = 2112;
    v23 = v7;
    v24 = 2112;
    v25 = v8;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Generated attachments for %@; attachments: %@, screenshots: %@, keywords: %@",
      buf,
      0x34u);

  }
  v9 = *(void **)(a1 + 48);
  v10 = *(NSObject **)(*(_QWORD *)(a1 + 40) + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100273448;
  block[3] = &unk_1011AE630;
  v14 = v9;
  v12 = *(_OWORD *)(a1 + 56);
  v11 = (id)v12;
  v15 = v12;
  dispatch_async(v10, block);

}

void sub_100273448(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "attachments"));
  objc_msgSend(v2, "addAttachments:", v3);

  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "screenshots"));
  objc_msgSend(v4, "addScreenshots:", v5);

  v6 = *(void **)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "keywords"));
  objc_msgSend(v6, "addKeywords:", v7);

  v8 = *(void **)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "collaborationContactHandles"));
  objc_msgSend(v8, "addCollaborationContactHandles:", v9);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100273520(uint64_t a1)
{
  void *v1;
  id v2;
  NSObject *v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  uint64_t v13;
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  NSObject *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *j;
  uint64_t v25;
  id v26;
  NSObject *v27;
  id v28;
  id v29;
  NSObject *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *k;
  uint64_t v37;
  id v38;
  NSObject *v39;
  id v40;
  id v41;
  NSObject *v42;
  id v43;
  uint64_t v44;
  void *v45;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE v59[128];
  uint8_t v60[128];
  uint8_t buf[4];
  id v62;
  __int16 v63;
  uint64_t v64;
  _BYTE v65[128];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v1, "removeObjectForKey:", off_1014A3148);

  v2 = sub_100270D38();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)buf = 134349056;
    v62 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "[%{public}p] Finished collecting diagnostic attachments. Will log them below:", buf, 0xCu);

  }
  v5 = sub_100270D38();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)buf = 134349056;
    v62 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}p] ***Attachments***", buf, 0xCu);

  }
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "attachments"));
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v55, v65, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v56;
    do
    {
      for (i = 0; i != v10; i = (char *)i + 1)
      {
        if (*(_QWORD *)v56 != v11)
          objc_enumerationMutation(v8);
        v13 = *(_QWORD *)(*((_QWORD *)&v55 + 1) + 8 * (_QWORD)i);
        v14 = sub_100270D38();
        v15 = objc_claimAutoreleasedReturnValue(v14);
        if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
        {
          v16 = objc_loadWeakRetained((id *)(a1 + 56));
          *(_DWORD *)buf = 134349314;
          v62 = v16;
          v63 = 2112;
          v64 = v13;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[%{public}p] %@", buf, 0x16u);

        }
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v55, v65, 16);
    }
    while (v10);
  }

  v17 = sub_100270D38();
  v18 = objc_claimAutoreleasedReturnValue(v17);
  if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
  {
    v19 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)buf = 134349056;
    v62 = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "[%{public}p] ***Screenshots***", buf, 0xCu);

  }
  v53 = 0u;
  v54 = 0u;
  v51 = 0u;
  v52 = 0u;
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "screenshots"));
  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v51, v60, 16);
  if (v21)
  {
    v22 = v21;
    v23 = *(_QWORD *)v52;
    do
    {
      for (j = 0; j != v22; j = (char *)j + 1)
      {
        if (*(_QWORD *)v52 != v23)
          objc_enumerationMutation(v20);
        v25 = *(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * (_QWORD)j);
        v26 = sub_100270D38();
        v27 = objc_claimAutoreleasedReturnValue(v26);
        if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
        {
          v28 = objc_loadWeakRetained((id *)(a1 + 56));
          *(_DWORD *)buf = 134349314;
          v62 = v28;
          v63 = 2112;
          v64 = v25;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "[%{public}p] %@", buf, 0x16u);

        }
      }
      v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v51, v60, 16);
    }
    while (v22);
  }

  v29 = sub_100270D38();
  v30 = objc_claimAutoreleasedReturnValue(v29);
  if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
  {
    v31 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)buf = 134349056;
    v62 = v31;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_INFO, "[%{public}p] ***Keywords***", buf, 0xCu);

  }
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "keywords"));
  v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v47, v59, 16);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)v48;
    do
    {
      for (k = 0; k != v34; k = (char *)k + 1)
      {
        if (*(_QWORD *)v48 != v35)
          objc_enumerationMutation(v32);
        v37 = *(_QWORD *)(*((_QWORD *)&v47 + 1) + 8 * (_QWORD)k);
        v38 = sub_100270D38();
        v39 = objc_claimAutoreleasedReturnValue(v38);
        if (os_log_type_enabled(v39, OS_LOG_TYPE_INFO))
        {
          v40 = objc_loadWeakRetained((id *)(a1 + 56));
          *(_DWORD *)buf = 134349314;
          v62 = v40;
          v63 = 2112;
          v64 = v37;
          _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_INFO, "[%{public}p] %@", buf, 0x16u);

        }
      }
      v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v47, v59, 16);
    }
    while (v34);
  }

  v41 = sub_100270D38();
  v42 = objc_claimAutoreleasedReturnValue(v41);
  if (os_log_type_enabled(v42, OS_LOG_TYPE_INFO))
  {
    v43 = objc_loadWeakRetained((id *)(a1 + 56));
    *(_DWORD *)buf = 134349056;
    v62 = v43;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_INFO, "[%{public}p] ***Done***", buf, 0xCu);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v44 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v45 = *(void **)(v44 + 40);
  *(_QWORD *)(v44 + 40) = 0;

}

void sub_100273BB8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "MapsRadarController");
  v2 = (void *)qword_1014D1E90;
  qword_1014D1E90 = (uint64_t)v1;

}

void sub_100275494(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id location;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainMKMapView"));
  objc_msgSend(v2, "_setLocationPulseEnabled:", 0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mainVKMapView"));
  v4 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(a1 + 40))
    objc_msgSend((id)v4, "performSelector:");
  else
    objc_msgSend(v3, "_mapstest_jumpToCoords:pitch:yaw:altitudeIsRegionSize:", *(unsigned __int8 *)(v4 + 69), *(double *)(v4 + 96), *(double *)(v4 + 104), *(double *)(v4 + 112), *(double *)(v4 + 80), *(double *)(v4 + 88));
  objc_initWeak(&location, *(id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[VKDebugSettings sharedSettings](VKDebugSettings, "sharedSettings"));
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 70) = objc_msgSend(v5, "layoutContinuously");

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[VKDebugSettings sharedSettings](VKDebugSettings, "sharedSettings"));
  objc_msgSend(v6, "setLayoutContinuously:", 1);

  v7 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100275608;
  v8[3] = &unk_1011AD260;
  objc_copyWeak(&v9, &location);
  objc_msgSend(v7, "addFullyDrawnCallback:", v8);
  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);

}

void sub_1002755E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100275608(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "didFinishJumping");

}

id sub_1002756D4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "startRendering");
}

void sub_100276E7C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *j;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  _BYTE v26[128];

  v5 = a2;
  v6 = a3;
  if (v6 || !objc_msgSend(v5, "count"))
  {
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    v7 = *(id *)(a1 + 40);
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v18;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(_QWORD *)v18 != v10)
            objc_enumerationMutation(v7);
          (*(void (**)(_QWORD))(*(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i) + 16))(*(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i));
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v25, 16);
      }
      while (v9);
    }
  }
  else
  {
    v7 = (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithArray:](NSArray, "arrayWithArray:", v5));
    objc_setAssociatedObject(*(id *)(a1 + 32), &unk_1014D1EA1, v7, (void *)1);
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v12 = *(id *)(a1 + 40);
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v22;
      do
      {
        for (j = 0; j != v14; j = (char *)j + 1)
        {
          if (*(_QWORD *)v22 != v15)
            objc_enumerationMutation(v12);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)j) + 16))();
        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
      }
      while (v14);
    }

  }
  objc_setAssociatedObject(*(id *)(a1 + 32), &unk_1014D1EA2, 0, (void *)1);

}

CLLocation *__cdecl sub_1002775C8(id a1, CLLocation *a2, double a3)
{
  return a2;
}

id sub_100278348()
{
  if (qword_1014D1EB0 != -1)
    dispatch_once(&qword_1014D1EB0, &stru_1011AE7E8);
  return (id)qword_1014D1EA8;
}

void sub_100278388(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  NSObject *v8;
  uint8_t v9[16];
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v6) + 16))();
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

  objc_msgSend(*(id *)(a1 + 56), "_completeOperation");
  v7 = sub_10043196C();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_signpost_enabled(v8))
  {
    *(_WORD *)v9 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "\"ContextOperation\"", "", v9, 2u);
  }

}

void sub_100278E64(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  os_signpost_id_t v12;
  uint64_t v13;
  uint8_t v14[16];

  v7 = a2;
  v8 = a3;
  v9 = sub_10043196C();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  v11 = v10;
  v12 = *(_QWORD *)(a1 + 40);
  if (v12 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
  {
    *(_WORD *)v14 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, v12, "\"CoordinatedContextChange\"", "", v14, 2u);
  }

  v13 = *(_QWORD *)(a1 + 32);
  if (v13)
    (*(void (**)(uint64_t, id, id, uint64_t))(v13 + 16))(v13, v7, v8, a4);

}

uint64_t sub_10027943C(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  char isKindOfClass;

  isKindOfClass = objc_opt_isKindOfClass(a2, *(_QWORD *)(a1 + 32));
  if ((isKindOfClass & 1) != 0)
    *a4 = 1;
  return isKindOfClass & 1;
}

void sub_100279524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10027953C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10027954C(uint64_t a1)
{

}

void sub_100279554(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  if ((objc_opt_isKindOfClass(v7, *(_QWORD *)(a1 + 40)) & 1) != 0)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_10027966C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100279684(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;

  v7 = a2;
  if ((objc_opt_isKindOfClass(v7, *(_QWORD *)(a1 + 40)) & 1) != 0)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_1002798DC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "ChromeContextCoordination");
  v2 = (void *)qword_1014D1EA8;
  qword_1014D1EA8 = (uint64_t)v1;

}

void sub_100279AF8(uint64_t a1)
{
  id *WeakRetained;
  id v3;
  NSObject *v4;
  objc_class *v5;
  NSString *v6;
  void *v7;
  NSString *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint8_t v20[128];
  uint8_t buf[4];
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  uint64_t v26;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = sub_10043276C();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = (objc_class *)objc_opt_class(*(_QWORD *)(a1 + 32));
      v6 = NSStringFromClass(v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
      v8 = NSStringFromSelector(*(SEL *)(a1 + 56));
      v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      v10 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412802;
      v22 = v7;
      v23 = 2112;
      v24 = v9;
      v25 = 2112;
      v26 = v10;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%@ %@, weather location = %@", buf, 0x20u);

    }
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v11 = objc_msgSend(WeakRetained[1], "copy", 0);
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v17;
      do
      {
        v15 = 0;
        do
        {
          if (*(_QWORD *)v17 != v14)
            objc_enumerationMutation(v11);
          objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v15), "weatherLocationDataProvider:didChangeLocation:", WeakRetained, *(_QWORD *)(a1 + 40));
          v15 = (char *)v15 + 1;
        }
        while (v13 != v15);
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      }
      while (v13);
    }

  }
}

void sub_10027A114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10027A138()
{
  if (qword_1014D1EC0 != -1)
    dispatch_once(&qword_1014D1EC0, &stru_1011AE898);
  return (id)qword_1014D1EB8;
}

void sub_10027A178(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id WeakRetained;
  void *v10;
  void (**v11)(_QWORD, _QWORD, _QWORD);
  id v12;
  NSObject *v13;
  NSObject *v14;
  os_signpost_id_t v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  os_signpost_id_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void (**v26)(_QWORD, _QWORD, _QWORD);
  void (**v27)(_QWORD, _QWORD, _QWORD);
  uint8_t v28[16];
  uint8_t buf[16];

  v7 = a2;
  v8 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v10 = WeakRetained;
  if (a4)
  {
    v11 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "stateHandler"));
    ((void (**)(_QWORD, id, uint64_t))v11)[2](v11, objc_msgSend(v10, "state"), 3);

    objc_msgSend(v10, "setState:", 3);
    v12 = sub_10027A138();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    v14 = v13;
    v15 = *(_QWORD *)(a1 + 48);
    if (v15 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v13))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_INTERVAL_END, v15, "FetchingAllCollectionsView", "", buf, 2u);
    }

  }
  else
  {
    v16 = sub_10027A138();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    v18 = v17;
    v19 = *(_QWORD *)(a1 + 48);
    if (v19 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v17))
    {
      *(_WORD *)v28 = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v18, OS_SIGNPOST_INTERVAL_END, v19, "FetchingAllCollectionsView", "", v28, 2u);
    }

    if (!v7)
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "allCollectionViewFilters"));
      v21 = objc_msgSend(v20, "count");

      if (!v21)
        goto LABEL_16;
    }
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "allCollectionViewFilters"));
    v23 = objc_msgSend(v22, "count");

    if (v7 && !v23)
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "resultFilters"));
      objc_msgSend(v10, "setFilters:", v24);

    }
    if (objc_msgSend(v8, "count"))
    {
      objc_msgSend(v10, "setCollectionResults:", v8);
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "collectionIdentifiers"));
      objc_msgSend(v10, "setCollectionIds:", v25);

      v26 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "stateHandler"));
      ((void (**)(_QWORD, id, uint64_t))v26)[2](v26, objc_msgSend(v10, "state"), 2);

      objc_msgSend(v10, "setState:", 2);
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    }
    else
    {
LABEL_16:
      v27 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "stateHandler"));
      ((void (**)(_QWORD, id, uint64_t))v27)[2](v27, objc_msgSend(v10, "state"), 3);

      objc_msgSend(v10, "setState:", 3);
    }
  }

}

void sub_10027A614(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10027A638(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  os_signpost_id_t v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  os_signpost_id_t v16;
  uint8_t v17[16];
  uint8_t buf[16];

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
    {
      objc_msgSend(WeakRetained, "setPlaceCollections:", 0);
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
      v9 = sub_10027A138();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      v11 = v10;
      v12 = *(_QWORD *)(a1 + 48);
      if (v12 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v10))
      {
        *(_WORD *)buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_INTERVAL_END, v12, "FetchingAllCollectionsViewBatch", "", buf, 2u);
      }

    }
    else
    {
      v13 = sub_10027A138();
      v14 = objc_claimAutoreleasedReturnValue(v13);
      v15 = v14;
      v16 = *(_QWORD *)(a1 + 48);
      if (v16 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v14))
      {
        *(_WORD *)v17 = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, OS_SIGNPOST_INTERVAL_END, v16, "FetchingAllCollectionsViewBatch", "", v17, 2u);
      }

      objc_msgSend(v8, "setPlaceCollections:", v5);
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    }
  }

}

void sub_10027A8CC(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.Maps", "AllCollectionsAPIController");
  v2 = (void *)qword_1014D1EB8;
  qword_1014D1EB8 = (uint64_t)v1;

}

id sub_10027B1D4(double a1, double a2, uint64_t a3, void *a4)
{
  LODWORD(a2) = -1.0;
  return _objc_msgSend(a4, "_loadCompressionTestCardWithHeight:priority:", -1.0, a2);
}

void sub_10027C0BC(_Unwind_Exception *a1)
{
  id *v1;
  char v2;
  uint64_t v3;

  if ((v2 & 1) == 0)
    objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 216));
  _Unwind_Resume(a1);
}

void sub_10027C0DC(uint64_t a1, double a2, double a3)
{
  id v6;
  NSObject *v7;
  id WeakRetained;
  int v9;
  double v10;
  __int16 v11;
  double v12;

  v6 = sub_10043364C();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v9 = 134218240;
    v10 = a2;
    v11 = 2048;
    v12 = a3;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "_configureCard: user tapped at (%f,%f)", (uint8_t *)&v9, 0x16u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "handleUserSelectionAtPoint:", a2, a3);

}

void sub_10027C3BC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "chromeViewController"));
  objc_msgSend(v2, "setHardwareBackButtonBehavior:forContext:", 2, *(_QWORD *)(a1 + 32));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "chromeViewController"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "mapView"));
  objc_msgSend(v4, "_setApplicationState:", 2);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "chromeViewController"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "mapView"));
  objc_msgSend(v6, "_setDisplayedSearchResultsType:", 0);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[MNNavigationService sharedService](MNNavigationService, "sharedService"));
  objc_msgSend(v7, "registerObserver:", *(_QWORD *)(a1 + 32));

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[MSPSharedTripService sharedInstance](MSPSharedTripService, "sharedInstance"));
  objc_msgSend(v8, "addSendingObserver:", *(_QWORD *)(a1 + 32));

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waypointController"));
  objc_msgSend(v9, "registerObserver:", *(_QWORD *)(a1 + 32));

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waypointController"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "displayedWaypoints"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waypointsOverviewCardController"));
  objc_msgSend(v12, "setWaypoints:", v11);

  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v14 = objc_msgSend(v13, "integerForKey:", CFSTR("NavigationCarPlayPersistedGuidanceSignStyle"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "guidanceCardController"));
  objc_msgSend(v15, "setNavigationGuidanceSignStyle:", v14);

  v16 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v16, "addObserver:selector:name:object:", *(_QWORD *)(a1 + 32), "_maneuverBannerViewEVStationsNotification:", off_1014A6C00, 0);

}

void sub_10027C574(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  unsigned __int8 *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "cameraStyleManager"));
  objc_msgSend(v2, "setCameraStyle:animated:", objc_msgSend(v3, "centerConsoleCameraStyle"), *(unsigned __int8 *)(a1 + 40));

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[MSPSharedTripService sharedInstance](MSPSharedTripService, "sharedInstance"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "receivers"));
  v6 = objc_msgSend(v5, "count");
  v7 = *(unsigned __int8 **)(a1 + 32);
  if (v6)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "contactSharingSuggestion"));
    if (!v8)
    {

      goto LABEL_8;
    }
    v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 17);

  }
  else
  {
    v9 = v7[17];
  }

  if (!v9)
  {
    objc_msgSend(*(id *)(a1 + 32), "_updateShareETADisclosureAutoDismissTimer");
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 17) = 1;
  }
LABEL_8:
  objc_msgSend(*(id *)(a1 + 32), "_updateShareButtonContentAndVisibility:", 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[MNNavigationService sharedService](MNNavigationService, "sharedService"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "route"));
  objc_msgSend(*(id *)(a1 + 32), "setCurrentRoute:", v11);

  objc_msgSend(*(id *)(a1 + 32), "_captureCurrentNavigationModeState");
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "chromeViewController"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "userLocationView"));
  objc_msgSend(v13, "setMode:animated:", 1, *(unsigned __int8 *)(a1 + 40));

  objc_msgSend(*(id *)(a1 + 32), "_setupGuidanceDisplays:", *(unsigned __int8 *)(a1 + 40));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "etaCardController"));
  objc_msgSend(v14, "setExpanded:animated:completion:", 0, *(unsigned __int8 *)(a1 + 40), 0);

  v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "etaCardController"));
  objc_msgSend(v15, "updateContent");

}

void sub_10027C708(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  double width;
  double height;
  id v5;

  v1 = *(_QWORD **)(a1 + 32);
  if ((unint64_t)(v1[9] - 3) <= 3)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "chromeViewController"));
    objc_msgSend(v2, "interruptAutohideForIncidentalInteraction");

  }
  v5 = (id)objc_claimAutoreleasedReturnValue(+[CarDisplayController sharedInstance](CarDisplayController, "sharedInstance"));
  if (objc_msgSend(v5, "isCurrentlyConnectedToCarAppScene"))
  {
    objc_msgSend(v5, "screenSize");
  }
  else
  {
    width = CGSizeZero.width;
    height = CGSizeZero.height;
  }
  +[NavJunctionViewController updateJunctionImageSizeForScreenSize:](NavJunctionViewController, "updateJunctionImageSizeForScreenSize:", width, height);

}

void sub_10027C83C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[MSPSharedTripService sharedInstance](MSPSharedTripService, "sharedInstance"));
  objc_msgSend(v2, "removeSendingObserver:", *(_QWORD *)(a1 + 32));

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[MNNavigationService sharedService](MNNavigationService, "sharedService"));
  objc_msgSend(v3, "unregisterObserver:", *(_QWORD *)(a1 + 32));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "guidanceObserver"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "guidanceCardController"));
  objc_msgSend(v4, "removeOutlet:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "guidanceObserver"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "etaCardController"));
  objc_msgSend(v6, "removeOutlet:", v7);

  +[NavJunctionViewController updateJunctionImageSizeForScreenSize:](NavJunctionViewController, "updateJunctionImageSizeForScreenSize:", CGSizeZero.width, CGSizeZero.height);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waypointController"));
  objc_msgSend(v8, "unregisterObserver:", *(_QWORD *)(a1 + 32));

  v9 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v9, "removeObserver:name:object:", *(_QWORD *)(a1 + 32), off_1014A6C00, 0);

}

void sub_10027C970(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "etaCardController"));
  objc_msgSend(v1, "setExpanded:animated:completion:", 0, 0, 0);

}

void sub_10027DBEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

