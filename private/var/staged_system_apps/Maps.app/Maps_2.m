uint64_t sub_100117858()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v0 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000E930(v3, qword_1014D4B68);
  v4 = sub_10000E918(v0, (uint64_t)qword_1014D4B68);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(UICollectionElementKindSectionHeader);
  v7 = v6;
  *v2 = v5;
  v2[1] = v6;
  v2[2] = (uint64_t)sub_100117960;
  v2[3] = 0;
  v8 = sub_100117F1C();
  swift_bridgeObjectRetain(v7);
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)(v5, v7, CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:), 0, v8);
  return sub_1000207BC((uint64_t)v2, v4, (uint64_t *)&unk_10149C0E0);
}

void sub_100117960(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  NSString v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];
  _BYTE v16[48];
  Swift::String v17;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setTitle:", v7);

  objc_msgSend(a1, "setFirstNonEmptySection:", *(unsigned __int8 *)(a5 + 16));
  objc_msgSend(a1, "setShowsBottomHairline:", 0);
  if (*(_BYTE *)(a5 + 17) == 1)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v17._countAndFlagsBits = 0xD00000000000002DLL;
    v17._object = (void *)0x8000000100E4AA00;
    v8._object = (void *)0x8000000100E4A9E0;
    v8._countAndFlagsBits = 0xD00000000000001CLL;
    v9._countAndFlagsBits = 1701998413;
    v9._object = (void *)0xE400000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v9, v17)._object;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(a1, "setActionTitle:", v11);

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityIdentifiersWithBaseString:", v12);

  sub_100117F58(a5, (uint64_t)v16);
  v13 = swift_allocObject(&unk_1011A37C8, 64, 7);
  sub_100117FC0((uint64_t)v16, v13 + 16);
  aBlock[4] = sub_100118008;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011A37E0;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, "setActionHandler:", v14);
  _Block_release(v14);
}

uint64_t sub_100117B58(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_unknownObjectWeakLoadStrong(a1 + 24);
  if (result)
  {
    v2 = result;
    ObjectType = swift_getObjectType(result);
    v4 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionHeaderDelegate);
    if (v4)
      v5 = v4;
    else
      v5 = 0;
    if (v4)
      v6 = v2;
    else
      v6 = 0;
    if (v6)
    {
      v7 = swift_getObjectType(v6);
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v5);
      return swift_unknownObjectRelease(v2);
    }
    else
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Maps/HashableWrappers.swift", 27, 2, 83, 0);
      __break(1u);
    }
  }
  return result;
}

double sub_100117C18(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  Swift::UInt v7;
  Swift::UInt v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  Hasher._combine(_:)(*((_BYTE *)v2 + 16));
  Hasher._combine(_:)(*((_BYTE *)v2 + 17));
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 3);
  if (Strong
    && (v12 = Strong,
        (swift_dynamicCast(&v13, &v12, (char *)&type metadata for Swift.AnyObject + 8, &type metadata for AnyHashable, 6) & 1) != 0))
  {
    if (*((_QWORD *)&v14 + 1))
    {
      v16[0] = v13;
      v16[1] = v14;
      v17 = v15;
      AnyHashable.hash(into:)(a1);
      sub_100012C48((uint64_t)v16);
      goto LABEL_8;
    }
  }
  else
  {
    v15 = 0;
    v13 = 0u;
    v14 = 0u;
  }
  sub_100012C08((uint64_t)&v13);
  v7 = swift_unknownObjectWeakLoadStrong(v2 + 3);
  if (v7)
  {
    v8 = v7;
    Hasher._combine(_:)(v7);
    swift_unknownObjectRelease(v8);
  }
LABEL_8:
  v9 = v2[4];
  v10 = v2[5];
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(a1, v9, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_100117D48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101490EC8 != -1)
    swift_once(&qword_101490EC8, sub_100117858);
  v2 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4B68);
  return sub_100117ED4(v3, a1);
}

Swift::Int sub_100117DA8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100117C18((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100117DE8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100117C18((uint64_t)v2);
  return Hasher._finalize()();
}

unint64_t sub_100117E28()
{
  unint64_t result;

  result = qword_10149B1A0;
  if (!qword_10149B1A0)
  {
    result = swift_getWitnessTable("Yq7", &type metadata for HomeListSectionHeaderViewModel);
    atomic_store(result, (unint64_t *)&qword_10149B1A0);
  }
  return result;
}

unint64_t sub_100117E6C(uint64_t a1)
{
  unint64_t result;

  result = sub_100117E90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100117E90()
{
  unint64_t result;

  result = qword_10149B1C8;
  if (!qword_10149B1C8)
  {
    result = swift_getWitnessTable("Aq7", &type metadata for HomeListSectionHeaderViewModel);
    atomic_store(result, (unint64_t *)&qword_10149B1C8);
  }
  return result;
}

uint64_t sub_100117ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100117F1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149B1D8;
  if (!qword_10149B1D8)
  {
    v1 = objc_opt_self(SectionHeaderCollectionReusableView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10149B1D8);
  }
  return result;
}

uint64_t sub_100117F58(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HomeListSectionHeaderViewModel(a2, a1);
  return a2;
}

uint64_t sub_100117F8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectWeakDestroy(v0 + 40);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100117FC0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_WORD *)(a2 + 16) = *(_WORD *)(a1 + 16);
  swift_unknownObjectWeakTakeInit(a2 + 24, a1 + 24);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  return a2;
}

uint64_t sub_100118008()
{
  uint64_t v0;

  return sub_100117B58(v0 + 16);
}

double sub_100118010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100118020(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100118028(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    if (*((unsigned __int8 *)a1 + 16) == *(unsigned __int8 *)(a2 + 16)
      && *((unsigned __int8 *)a1 + 17) == *(unsigned __int8 *)(a2 + 17)
      && (sub_100012C7C(a1 + 3, a2 + 24) & 1) != 0)
    {
      v10 = a1[4];
      v11 = a1[5];
      v12 = *(_QWORD *)(a2 + 32);
      v13 = *(_QWORD *)(a2 + 40);
      if (v10 == v12 && v11 == v13)
        return 1;
      else
        return _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for HomeListSectionHeaderViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_unknownObjectWeakDestroy(a1 + 24);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = a2 + 24;
  swift_bridgeObjectRetain(v4);
  swift_unknownObjectWeakCopyInit(a1 + 24, v5);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  swift_unknownObjectWeakCopyAssign(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t initializeWithTake for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_unknownObjectWeakTakeInit(a1 + 24, a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for HomeListSectionHeaderViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  swift_unknownObjectWeakTakeAssign(a1 + 24, a2 + 24);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListSectionHeaderViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListSectionHeaderViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListSectionHeaderViewModel()
{
  return &type metadata for HomeListSectionHeaderViewModel;
}

id sub_10011833C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  qword_1014D4B80 = (uint64_t)result;
  return result;
}

uint64_t sub_100118374()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for SwiftUtils.Strings()
{
  return objc_opt_self(_TtCO4Maps10SwiftUtils7Strings);
}

id sub_100118458(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id result;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  objc_class *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  id v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  _QWORD *v53;
  _BYTE v54[24];
  _QWORD *v55;

  v3 = sub_100008B04(&qword_10149B2F8);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149B300);
  __chkstk_darwin(v6);
  v8 = (unsigned __int8 *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for RefinementsBarButtonViewModel(0);
  v10 = *((_QWORD *)v9 - 1);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v51 = (uint64_t)&v45 - v14;
  *(_QWORD *)&v16 = __chkstk_darwin(v15).n128_u64[0];
  v50 = (uint64_t)&v45 - v17;
  v18 = objc_msgSend(a1, "resultRefinementBar", v16);
  v19 = objc_msgSend(v18, "resultRefinements");

  v20 = sub_10000E4BC(0, &qword_10149A658, GEOResultRefinement_ptr);
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v44 = v21;
    else
      v44 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v44);
    v22 = (uint64_t)result;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain(v21);
  }
  v45 = v12;
  v46 = v5;
  v47 = v1;
  v48 = a1;
  if (v22)
  {
    if (v22 < 1)
    {
      __break(1u);
      return result;
    }
    v24 = 0;
    v25 = _swiftEmptyArrayStorage;
    v49 = v9;
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v21);
      else
        v26 = *(id *)(v21 + 8 * v24 + 32);
      v27 = v26;
      sub_100118920(v26, v8);

      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, int *))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_100010CC4((uint64_t)v8, &qword_10149B300);
      }
      else
      {
        v28 = v50;
        sub_10003F29C((uint64_t)v8, v50, type metadata accessor for RefinementsBarButtonViewModel);
        sub_10003F29C(v28, v51, type metadata accessor for RefinementsBarButtonViewModel);
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
          v25 = (_QWORD *)sub_1000A8304(0, v25[2] + 1, 1, (unint64_t)v25);
        v30 = v25[2];
        v29 = v25[3];
        if (v30 >= v29 >> 1)
          v25 = (_QWORD *)sub_1000A8304(v29 > 1, v30 + 1, 1, (unint64_t)v25);
        v25[2] = v30 + 1;
        sub_10003F29C(v51, (uint64_t)v25+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v30, type metadata accessor for RefinementsBarButtonViewModel);
        v9 = v49;
      }
      ++v24;
    }
    while (v22 != v24);
  }
  else
  {
    v25 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n(v21, 2);
  v55 = v25;
  v31 = objc_msgSend(v48, "resultRefinementView");
  if (v31)
  {
    v32 = v31;
    v33 = sub_10011922C(v31);

    if (v33)
    {
      v34 = v33;
      v35 = (uint64_t)v45;
      UUID.init()(v34);
      v36 = v35 + v9[5];
      *(_QWORD *)v36 = 0xD000000000000021;
      *(_QWORD *)(v36 + 8) = 0x8000000100E4AC90;
      *(_BYTE *)(v36 + 16) = 1;
      *(_BYTE *)(v35 + v9[6]) = 0;
      *(_BYTE *)(v35 + v9[7]) = 0;
      v37 = (_OWORD *)(v35 + v9[8]);
      *v37 = 0u;
      v37[1] = 0u;
      *(_QWORD *)(v35 + v9[9]) = v34;
      v38 = v35 + v9[10];
      *(_QWORD *)v38 = 0;
      *(_BYTE *)(v38 + 8) = 1;
      v39 = (uint64_t)v46;
      sub_100021908(v35, (uint64_t)v46);
      sub_10020E0F4(0, 0, v39);

      sub_10002194C(v35);
      v25 = v55;
    }
  }
  if (v25[2])
  {
    v40 = (objc_class *)type metadata accessor for RefinementsBarViewModel(0);
    v41 = objc_allocWithZone(v40);
    v41[OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled] = 1;
    swift_beginAccess(&v41[OBJC_IVAR____TtC4Maps23RefinementsBarViewModel__refinements], v54, 33, 0);
    v53 = v25;
    v42 = v41;
    v43 = sub_100008B04(&qword_1014936F0);
    Published.init(initialValue:)(&v53, v43);
    swift_endAccess(v54);

    v52.receiver = v42;
    v52.super_class = v40;
    return objc_msgSendSuper2(&v52, "init");
  }
  else
  {
    swift_bridgeObjectRelease(v25);
    return 0;
  }
}

uint64_t sub_100118920@<X0>(id a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char **v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  char v22;
  _QWORD *v23;
  id v24;
  _BOOL8 v25;
  id v26;
  char v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  id v53;
  void *v54;
  unsigned __int8 v55;
  unsigned int v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  uint64_t v61;
  unsigned int v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  unsigned __int8 *v72;
  int *v73;
  unsigned __int8 *v74;
  uint64_t v75;
  unsigned __int8 *v76;
  unsigned __int8 *v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unsigned int v84;
  unsigned __int8 *v85;
  uint64_t v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  v4 = sub_100008B04(&qword_10149B2E8);
  __chkstk_darwin(v4);
  v6 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char **)type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element(0);
  v8 = (unsigned __int8 *)*(v7 - 1);
  __chkstk_darwin(v7);
  v91 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v11 = __chkstk_darwin(v10).n128_u64[0];
  v88 = (uint64_t)&v82 - v12;
  v13 = objc_msgSend(a1, "type", v11);
  switch((unint64_t)v13)
  {
    case 1uLL:
      v14 = objc_msgSend(a1, "toggle");
      if (!v14)
        goto LABEL_68;
      v15 = v14;
      v87 = a1;
      v85 = a2;
      v16 = objc_msgSend(v14, "displayName");
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v86 = v18;

      v84 = objc_msgSend(v15, "isSelected");
      v19 = objc_msgSend(v15, "selectionSequenceNumber");
      if (v19)
      {
        v20 = v19;
        v21 = objc_msgSend(v19, "integerValue");

        v22 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        v26 = 0;
        v27 = 0;
      }
      else
      {

        v21 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        v26 = 0;
        v27 = 0;
        v22 = 1;
      }
      goto LABEL_56;
    case 2uLL:
      v14 = objc_msgSend(a1, "multiSelect");
      if (!v14)
        goto LABEL_68;
      v28 = v14;
      v29 = objc_msgSend(v14, "displayName");
      if (v29)
      {
        v30 = v29;
        v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v32 = v31;

      }
      else
      {
        v17 = 0;
        v32 = 0;
      }
      v57 = objc_msgSend(v28, "multiSelect");
      v58 = sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
      v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v57, v58);

      if ((unint64_t)v59 >> 62)
      {
        if (v59 < 0)
          v80 = v59;
        else
          v80 = v59 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v59);
        v38 = _CocoaArrayWrapper.endIndex.getter(v80);
        swift_bridgeObjectRelease(v59);
        if (v38)
          goto LABEL_34;
LABEL_66:

        swift_bridgeObjectRelease(v59);
        v56 = 0;
        if (!v32)
          goto LABEL_67;
        goto LABEL_54;
      }
      v38 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v38)
        goto LABEL_66;
LABEL_34:
      v86 = v32;
      v87 = a1;
      v83 = v17;
      v8 = a2;
      a1 = (id)(v59 & 0xC000000000000001);
      v6 = 4;
      v7 = &selRef_isChinaUserOutsideOfChina;
      while (1)
      {
        if (a1)
          v60 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v59);
        else
          v60 = (unsigned __int8 *)*(id *)(v59 + 8 * v6);
        a2 = v60;
        v61 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
LABEL_58:
          if (v38 < 0)
            v79 = v38;
          else
            v79 = v38 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v38);
          v39 = _CocoaArrayWrapper.endIndex.getter(v79);
LABEL_11:
          v85 = a2;
          v87 = a1;
          v82 = v28;
          if (v39)
          {
            if (v39 < 1)
            {
              __break(1u);
              JUMPOUT(0x1001191A0);
            }
            v40 = 0;
            v90 = v38 & 0xC000000000000001;
            v23 = _swiftEmptyArrayStorage;
            v89 = v38;
            do
            {
              if (v90)
                v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v38);
              else
                v41 = *(id *)(v38 + 8 * v40 + 32);
              v42 = v41;
              v43 = objc_msgSend(v41, "displayName", v82);
              v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
              v46 = v45;

              v47 = v42;
              UUID.init()(v47);
              v48 = (uint64_t *)(v6 + *((int *)v7 + 5));
              *v48 = v44;
              v48[1] = v46;
              *(_QWORD *)(v6 + *((int *)v7 + 6)) = v47;
              (*((void (**)(uint64_t, _QWORD, uint64_t, char **))v8 + 7))(v6, 0, 1, v7);

              if ((*((unsigned int (**)(uint64_t, uint64_t, char **))v8 + 6))(v6, 1, v7) == 1)
              {
                sub_100010CC4(v6, &qword_10149B2E8);
                v38 = v89;
              }
              else
              {
                v49 = v88;
                sub_10003F29C(v6, v88, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                sub_10003F29C(v49, v91, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
                if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
                  v23 = (_QWORD *)sub_1000A8B04(0, v23[2] + 1, 1, (unint64_t)v23);
                v38 = v89;
                v51 = v23[2];
                v50 = v23[3];
                if (v51 >= v50 >> 1)
                  v23 = (_QWORD *)sub_1000A8B04(v50 > 1, v51 + 1, 1, (unint64_t)v23);
                v23[2] = v51 + 1;
                sub_10003F29C(v91, (uint64_t)v23 + ((v8[80] + 32) & ~(unint64_t)v8[80]) + *((_QWORD *)v8 + 9) * v51, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
              }
              ++v40;
            }
            while (v39 != v40);
          }
          else
          {
            v23 = _swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRelease_n(v38, 2);
          v63 = objc_msgSend(v82, "selectedElementIndex");
          v64 = v63;
          if (v63)
          {
            v24 = objc_msgSend(v63, "integerValue");

          }
          else
          {
            v24 = 0;
          }
          v65 = v82;
          v17 = v83;
          v25 = v64 == 0;
          v66 = objc_msgSend(v82, "defaultSelectedElementIndex");
          v26 = objc_msgSend(v66, "integerValue");

          v21 = 0;
          goto LABEL_55;
        }
        v62 = objc_msgSend(v60, "isSelected");

        if (v62)
          break;
        ++v6;
        if (v61 == v38)
        {

          swift_bridgeObjectRelease(v59);
          v56 = 0;
          goto LABEL_50;
        }
      }

      swift_bridgeObjectRelease(v59);
      v56 = 1;
LABEL_50:
      a2 = v8;
      v32 = v86;
      a1 = v87;
      v17 = v83;
      if (v86)
      {
LABEL_54:
        v84 = v56;
        v86 = v32;
        v87 = a1;
        v85 = a2;
        v21 = 0;
        v23 = 0;
        v24 = 0;
        v25 = 0;
        v26 = 0;
LABEL_55:
        v22 = 1;
        v27 = 1;
LABEL_56:
        v71 = v87;
        v72 = v85;
        UUID.init()(v71);
        v73 = (int *)type metadata accessor for RefinementsBarButtonViewModel(0);
        v74 = &v72[v73[5]];
        v75 = v86;
        *(_QWORD *)v74 = v17;
        *((_QWORD *)v74 + 1) = v75;
        v74[16] = 0;
        v72[v73[6]] = v84;
        v72[v73[7]] = v27;
        v76 = &v72[v73[8]];
        *(_QWORD *)v76 = v23;
        *((_QWORD *)v76 + 1) = v24;
        *((_QWORD *)v76 + 2) = v25;
        *((_QWORD *)v76 + 3) = v26;
        *(_QWORD *)&v72[v73[9]] = v71;
        v77 = &v72[v73[10]];
        *(_QWORD *)v77 = v21;
        v77[8] = v22;
        return (*(uint64_t (**)(unsigned __int8 *, _QWORD, uint64_t, int *))(*((_QWORD *)v73 - 1) + 56))(v72, 0, 1, v73);
      }
LABEL_67:
      v14 = 0;
LABEL_68:
      v81 = type metadata accessor for RefinementsBarButtonViewModel((uint64_t)v14);
      return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(a2, 1, 1, v81);
    case 3uLL:
      v14 = objc_msgSend(a1, "sort");
      if (!v14)
        goto LABEL_68;
      v28 = v14;
      v33 = objc_msgSend(v14, "displayName");
      v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v86 = v34;

      v35 = objc_msgSend(v28, "selectedElementIndex");
      v84 = v35 != 0;
      v36 = objc_msgSend(v28, "sorts");
      v37 = sub_10000E4BC(0, &qword_10149B2F0, GEOResultRefinementSortElement_ptr);
      v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

      if ((unint64_t)v38 >> 62)
        goto LABEL_58;
      v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v38);
      goto LABEL_11;
    case 4uLL:
      if (!MapsFeature_IsEnabled_SearchAndDiscovery(v13))
        goto LABEL_67;
      v14 = objc_msgSend(a1, "openOptions");
      if (!v14)
        goto LABEL_68;
      v52 = v14;
      v53 = objc_msgSend(v14, "openAt");
      if (v53 && (v54 = v53, v55 = objc_msgSend(v53, "isSelected"), v54, (v55 & 1) != 0))
      {
        v56 = 1;
      }
      else
      {
        v67 = objc_msgSend(v52, "openNow");
        if (v67)
        {
          v68 = v67;
          v56 = objc_msgSend(v67, "isSelected");

        }
        else
        {
          v56 = 0;
        }
      }
      v69 = v52;
      v17 = sub_10011A8CC(v52);
      v32 = v70;

      if (v32)
        goto LABEL_54;
      goto LABEL_67;
    default:
      goto LABEL_67;
  }
}

id sub_10011922C(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  id v19;
  Class isa;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  id v27;
  uint64_t v28;
  Swift::String v29;

  v1 = objc_msgSend(a1, "sections");
  v2 = sub_10000E4BC(0, &qword_10149B2B8, GEOResultRefinementSection_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  v28 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)v3 >> 62)
    goto LABEL_15;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v5 = 4;
    while (1)
    {
      v7 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v3)
         : *(id *)(v3 + 8 * v5);
      v8 = v7;
      v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v27 = v7;
      sub_100119550(&v27, &v26);

      v11 = v26;
      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v13 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v12 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v6);
      }
      ++v5;
      if (v9 == v4)
      {
        swift_bridgeObjectRelease(v3);
        v14 = v28;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_15:
    if (v3 < 0)
      v15 = v3;
    else
      v15 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
  swift_bridgeObjectRelease(v3);
  v14 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease(v3);
  if (!((unint64_t)v14 >> 62))
  {
    if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_22;
LABEL_29:
    swift_bridgeObjectRelease(v14);
    return 0;
  }
  if (v14 < 0)
    v23 = v14;
  else
    v23 = v14 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v14);
  v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v14);
  if (!v24)
    goto LABEL_29;
LABEL_22:
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v29._object = (void *)0x8000000100E4AAB0;
  v16._countAndFlagsBits = 0x737265746C6946;
  v16._object = (void *)0xE700000000000000;
  v17._countAndFlagsBits = 0x737265746C6946;
  v17._object = (void *)0xE700000000000000;
  v29._countAndFlagsBits = 0xD00000000000005BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v17, v29)._object;
  v19 = objc_allocWithZone((Class)AllRefinementsViewModel);
  sub_100008B04((uint64_t *)&unk_10149B2C0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v19, "initWithSections:displayName:viewTakesFullHeight:", isa, v21, 1, swift_bridgeObjectRelease(object).n128_f64[0]);

  return v22;
}

void sub_100119550(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSString v25;
  NSString v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  void *v36;
  double v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char **v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  Swift::String v70;
  Swift::String v71;
  void *object;
  double v73;
  id v74;
  id v75;
  id v76;
  NSString v77;
  id v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  NSString v86;
  NSString v87;
  id v88;
  NSString v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  NSArray v107;
  NSString v108;
  id v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  void *v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  NSString v137;
  NSString v138;
  id v139;
  id v140;
  id v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  _BOOL8 v147;
  id v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  char v153;
  void *v154;
  id v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  id v165;
  id v166;
  _QWORD *v167;
  uint64_t v168;
  unint64_t v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  id v174;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  id v179;
  id v180;
  unsigned int v181;
  id v182;
  unsigned int v183;
  char v184;
  unsigned int v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  Swift::String v189;

  v5 = v2;
  v174 = *a1;
  v6 = objc_msgSend(*a1, "refinementsType");
  switch((unint64_t)v6)
  {
    case 1uLL:
      v7 = objc_msgSend(v174, "resultRefinements");
      v8 = sub_10000E4BC(0, &qword_10149A658, GEOResultRefinement_ptr);
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

      if ((unint64_t)v9 >> 62)
      {
        if (v9 < 0)
          v101 = v9;
        else
          v101 = v9 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v9);
        v10 = _CocoaArrayWrapper.endIndex.getter(v101);
        if (v10)
          goto LABEL_4;
      }
      else
      {
        v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v9);
        if (v10)
        {
LABEL_4:
          if (v10 >= 1)
          {
            v11 = 0;
            v176 = v10;
            v179 = (id)(v9 & 0xC000000000000001);
            do
            {
              if (v179)
                v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
              else
                v12 = *(id *)(v9 + 8 * v11 + 32);
              v13 = v12;
              v14 = objc_msgSend(v12, "toggle");
              if (v14)
              {
                v15 = v14;
                v16 = objc_msgSend(v14, "displayName");
                static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
                v18 = v17;

                v183 = objc_msgSend(v15, "isSelected");
                v19 = v15;
                v20 = objc_msgSend(v19, "refinementKey");
                static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
                v21 = v9;
                v23 = v22;

                v24 = objc_allocWithZone((Class)AllRefinementsViewModelToggle);
                v25 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease(v18);
                swift_unknownObjectRetain(v19);
                v26 = String._bridgeToObjectiveC()();
                v27 = v23;
                v9 = v21;
                v28 = objc_msgSend(v24, "initWithDisplayName:isSelected:data:refinementKey:", v25, v183, v19, v26, swift_bridgeObjectRelease(v27).n128_f64[0]);

                v10 = v176;
                if (v28)
                {
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
                  v31 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v30 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v31 >= v30 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
                  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v28);
                  specialized Array._endMutation()(v32);
                }
              }
              else
              {

              }
              ++v11;
            }
            while (v10 != v11);
            goto LABEL_70;
          }
          __break(1u);
          goto LABEL_92;
        }
      }
LABEL_70:
      swift_bridgeObjectRelease(v9);
      v102 = swift_bridgeObjectRelease(v9).n128_u64[0];
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        if ((uint64_t)_swiftEmptyArrayStorage < 0)
          v112 = _swiftEmptyArrayStorage;
        else
          v112 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        v113 = _CocoaArrayWrapper.endIndex.getter(v112);
        v102 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
        if (v113)
          goto LABEL_72;
      }
      else if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_72:
        v103 = objc_msgSend(v174, "sectionHeader", *(double *)&v102);
        if (v103)
        {
          v104 = v103;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v103);
          v106 = v105;

        }
        else
        {
          v106 = 0;
        }
        sub_10000E4BC(0, &qword_10149EF90, off_101195E10);
        v107.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        if (v106)
        {
          v108 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v106);
        }
        else
        {
          v108 = 0;
        }
        v109 = objc_msgSend(objc_allocWithZone((Class)AllRefinementsViewModelSectionToggles), "initWithToggles:displayName:", v107.super.isa, v108);

        *a2 = v109;
        return;
      }
      v111 = _swiftEmptyArrayStorage;
      goto LABEL_89;
    case 2uLL:
      v33 = objc_msgSend(v174, "resultRefinements");
      v34 = sub_10000E4BC(0, &qword_10149A658, GEOResultRefinement_ptr);
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, v34);

      if (!((unint64_t)v9 >> 62))
      {
        v5 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v5)
          goto LABEL_18;
LABEL_83:
        v111 = (_QWORD *)v9;
LABEL_89:
        swift_bridgeObjectRelease(v111);
        goto LABEL_90;
      }
      if (v9 < 0)
        v110 = v9;
      else
        v110 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v5 = _CocoaArrayWrapper.endIndex.getter(v110);
      swift_bridgeObjectRelease(v9);
      if (!v5)
        goto LABEL_83;
LABEL_18:
      if ((v9 & 0xC000000000000001) == 0)
      {
        if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v35 = *(id *)(v9 + 32);
          goto LABEL_21;
        }
        __break(1u);
LABEL_94:
        if (v3 < 0)
          v114 = v3;
        else
          v114 = v3 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v3);
        v41 = _CocoaArrayWrapper.endIndex.getter(v114);
        swift_bridgeObjectRelease(v3);
        if (!v41)
        {
LABEL_98:
          swift_bridgeObjectRelease(v3);
          v9 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_99:
          v38 = (id)v5;
          if ((unint64_t)v9 >> 62)
          {
            if (v9 < 0)
              v117 = v9;
            else
              v117 = v9 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v9);
            v118 = _CocoaArrayWrapper.endIndex.getter(v117);
            swift_bridgeObjectRelease(v9);
            if (v118)
            {
LABEL_101:
              if ((v9 & 0xC000000000000001) == 0)
              {
                if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
LABEL_113:
                  if (v41 < 0)
                    v119 = v41;
                  else
                    v119 = v41 & 0xFFFFFFFFFFFFFF8;
                  swift_bridgeObjectRetain(v41);
                  v42 = _CocoaArrayWrapper.endIndex.getter(v119);
                  if (v42)
                    goto LABEL_25;
                  goto LABEL_117;
                }
                v115 = *(id *)(v9 + 32);
LABEL_104:
                v116 = v115;
                swift_bridgeObjectRelease(v9);
                *a2 = v116;
                return;
              }
LABEL_111:
              v115 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
              goto LABEL_104;
            }
          }
          else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_101;
          }
          swift_bridgeObjectRelease(v9);
          *a2 = 0;
          return;
        }
LABEL_38:
        if (v41 < 1)
        {
          __break(1u);
          goto LABEL_111;
        }
        v57 = 0;
        v58 = v3 & 0xC000000000000001;
        v59 = &selRef_observedKeyPaths;
        v171 = v5;
        v172 = v3;
        v169 = v3 & 0xC000000000000001;
        v170 = (id)v41;
        while (1)
        {
          if (v58)
            v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v3);
          else
            v63 = *(id *)(v3 + 8 * v57 + 32);
          v62 = v63;
          v64 = objc_msgSend(v63, v59[124]);
          if (!v64)
            goto LABEL_45;
          v65 = v64;
          v61 = objc_msgSend(v64, "openNow");

          if (!v61)
            goto LABEL_45;
          v66 = objc_msgSend(v62, v59[124]);
          if (v66)
            break;
LABEL_44:

LABEL_45:
          ++v57;

          if (v41 == v57)
          {
            swift_bridgeObjectRelease(v3);
            v9 = v188;
            goto LABEL_99;
          }
        }
        v67 = v66;
        v68 = objc_msgSend(v66, "openAt");
        if (v68)
        {
          v69 = v68;
          if (qword_101490ED0 != -1)
            swift_once(&qword_101490ED0, sub_10011833C);
          v189._countAndFlagsBits = 0xD000000000000023;
          v70._object = (void *)0x8000000100E4AB10;
          v189._object = (void *)0x8000000100E4AB30;
          v70._countAndFlagsBits = 0xD000000000000011;
          v71._countAndFlagsBits = 0xE27461206E65704FLL;
          v71._object = (void *)0xAA0000000000A680;
          object = NSLocalizedString(_:tableName:bundle:value:comment:)(v70, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v71, v189)._object;
          objc_msgSend(v69, "timeStamp");
          v4 = v73;
          v185 = objc_msgSend(v69, "isSelected");
          v74 = objc_msgSend(v69, "isNextDay");
          v75 = objc_allocWithZone((Class)AllRefinementsViewModelOpenAt);
          v76 = v69;
          v77 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(object);
          v78 = v76;
          v60 = objc_msgSend(v75, "initWithDisplayName:timeStamp:isSelected:isNextDay:data:", v77, v185, v74, v78, v4);

          if (!v60)
          {
            v5 = v171;
            v3 = v172;
            v58 = v169;
            v41 = (uint64_t)v170;
            goto LABEL_43;
          }
          v79 = objc_msgSend(v61, "displayName");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
          v81 = v80;

          v186 = objc_msgSend(v61, "isSelected");
          v67 = v61;
          v82 = objc_msgSend(v67, "refinementKey");
          static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
          v84 = v83;

          v85 = objc_allocWithZone((Class)AllRefinementsViewModelToggle);
          v86 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v81);
          swift_unknownObjectRetain(v67);
          v87 = String._bridgeToObjectiveC()();
          v61 = objc_msgSend(v85, "initWithDisplayName:isSelected:data:refinementKey:", v86, v186, v67, v87, swift_bridgeObjectRelease(v84).n128_f64[0]);

          v88 = objc_msgSend(v174, "sectionHeader");
          v89 = v88;
          if (v88)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(v88);
            v91 = v90;

            v92 = v61;
            v93 = v60;
            v89 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v91);
          }
          else
          {
            v94 = v61;
            v95 = v60;
          }
          v96 = objc_msgSend(objc_allocWithZone((Class)AllRefinementsViewModelSectionOpenOption), "initWithOpenNow:openAt:displayName:", v61, v60, v89);

          v97 = v96;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v97);
          v99 = *(_QWORD *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v98 = *(_QWORD *)((v188 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v99 >= v98 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1, v99 + 1, 1);
          v100 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v97);
          specialized Array._endMutation()(v100);

          v3 = v172;
          v58 = v169;
          v41 = (uint64_t)v170;
        }
        else
        {
          v60 = v61;
          v61 = v62;
        }

        v62 = v67;
        v5 = v171;
LABEL_43:
        v59 = &selRef_observedKeyPaths;
        goto LABEL_44;
      }
LABEL_92:
      v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v9);
LABEL_21:
      v36 = v35;
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(v9).n128_u64[0];
      v9 = (uint64_t)&selRef_templateId;
      v38 = objc_msgSend(v36, "multiSelect", v37);

      if (!v38)
      {
LABEL_90:
        *a2 = 0;
        return;
      }
      v4 = 0.0;
      v170 = v38;
      if ((objc_msgSend(v38, "showEqualWidthButtonsOnFilterView") & 1) == 0)
        goto LABEL_118;
      v39 = objc_msgSend(v38, "multiSelect");
      v40 = sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
      v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v39, v40);

      if ((unint64_t)v41 >> 62)
        goto LABEL_113;
      v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v41);
      if (!v42)
      {
LABEL_117:
        swift_bridgeObjectRelease_n(v41, 2);
LABEL_118:
        v184 = 1;
        goto LABEL_119;
      }
LABEL_25:
      v180 = (id)objc_opt_self(UIFont);
      if (v42 < 1)
      {
LABEL_164:
        __break(1u);
        JUMPOUT(0x10011A61CLL);
      }
      v43 = 0;
      v44 = 0.0;
      v177 = v41 & 0xC000000000000001;
      v184 = 1;
      v45 = v41;
      do
      {
        if (v177)
          v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v41);
        else
          v46 = *(id *)(v41 + 8 * v43 + 32);
        v47 = v46;
        v48 = objc_msgSend(v46, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v50 = v49;

        v51 = String._bridgeToObjectiveC()();
        v52 = objc_msgSend(v180, "preferredFontForTextStyle:", UIFontTextStyleBody, swift_bridgeObjectRelease(v50).n128_f64[0]);
        objc_msgSend(v51, "_maps_sizeWithFont:", v52);
        v54 = v53;

        v55 = v44;
        if ((v184 & 1) != 0)
          v55 = 0.0;
        if (v55 < v54)
          v44 = v54;
        v184 &= v55 >= v54;
        ++v43;
        v41 = v45;
      }
      while (v42 != v43);
      swift_bridgeObjectRelease_n(v45, 2);
      v4 = v44;
      v38 = v170;
      v9 = 0x10143D000;
LABEL_119:
      v120 = objc_msgSend(v38, *(SEL *)(v9 + 856));
      v121 = sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
      v122 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v120, v121);

      if (!((unint64_t)v122 >> 62))
      {
        v123 = *(_QWORD *)((v122 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v122);
        if (v123)
          goto LABEL_121;
LABEL_145:
        swift_bridgeObjectRelease(v122);
        goto LABEL_146;
      }
      if (v122 < 0)
        v145 = v122;
      else
        v145 = v122 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v122);
      v123 = _CocoaArrayWrapper.endIndex.getter(v145);
      if (!v123)
        goto LABEL_145;
LABEL_121:
      if (v123 < 1)
      {
        __break(1u);
        goto LABEL_164;
      }
      v124 = 0;
      v173 = v122 & 0xC000000000000001;
      do
      {
        if (v173)
          v126 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v124, v122);
        else
          v126 = *(id *)(v122 + 8 * v124 + 32);
        v127 = v126;
        v128 = objc_msgSend(v126, "displayName");
        static String._unconditionallyBridgeFromObjectiveC(_:)(v128);
        v130 = v129;

        v181 = objc_msgSend(v127, "isSelected");
        if ((v184 & 1) != 0)
          v131 = 0;
        else
          v131 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v4);
        v132 = v122;
        v133 = objc_msgSend(v127, "refinementKey");
        if (v133)
        {
          v134 = v133;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
          v136 = v135;

        }
        else
        {
          v136 = 0;
        }
        v137 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v130);
        if (v136)
        {
          v138 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v136);
        }
        else
        {
          v138 = 0;
        }
        v122 = v132;
        v139 = objc_allocWithZone((Class)AllRefinementsViewModelMultiSelectElement);
        v140 = v127;
        v141 = objc_msgSend(v139, "initWithDisplayName:isSelected:optionalLabelWidth:refinementKey:data:", v137, v181, v131, v138, v140);

        if (v141)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v142);
          v144 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
          v143 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v144 >= v143 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v143 > 1, v144 + 1, 1);
          v125 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v144, v141);
          specialized Array._endMutation()(v125);
        }
        ++v124;
      }
      while (v123 != v124);
      swift_bridgeObjectRelease(v122);
      v38 = v170;
LABEL_146:
      v146 = swift_bridgeObjectRelease(v122).n128_u64[0];
      if ((unint64_t)_swiftEmptyArrayStorage >> 62)
      {
        if ((uint64_t)_swiftEmptyArrayStorage < 0)
          v167 = _swiftEmptyArrayStorage;
        else
          v167 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
        v168 = _CocoaArrayWrapper.endIndex.getter(v167);
        v146 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
        if (v168)
          goto LABEL_148;
LABEL_162:
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

        goto LABEL_90;
      }
      if (!*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_162;
LABEL_148:
      v147 = objc_msgSend(v38, "clauseType", *(double *)&v146) == (id)1;
      v148 = objc_msgSend(v174, "sectionHeader");
      v187 = v147;
      if (v148)
      {
        v149 = v148;
        v150 = static String._unconditionallyBridgeFromObjectiveC(_:)(v148);
        v178 = v151;
        v182 = (id)v150;

      }
      else
      {
        v178 = 0;
        v182 = 0;
      }
      v152 = objc_msgSend(v38, "maximumNumberOfSelectElements");
      v153 = objc_msgSend(v38, "showEqualWidthButtonsOnFilterView");
      v154 = v38;
      v155 = objc_msgSend(v38, "displayNameForMultiSelected");
      if (v155)
      {
        v156 = v155;
        v157 = static String._unconditionallyBridgeFromObjectiveC(_:)(v155);
        v159 = v158;

      }
      else
      {
        v157 = 0;
        v159 = 0;
      }
      v160 = objc_msgSend(v38, "multiSelectIdentifier");
      if (v160)
      {
        v161 = v160;
        v162 = static String._unconditionallyBridgeFromObjectiveC(_:)(v160);
        v164 = v163;

      }
      else
      {
        v162 = 0;
        v164 = 0;
      }
      v165 = objc_allocWithZone((Class)AllRefinementsViewModelSectionMultiSelect);
      v166 = sub_10011A784((uint64_t)_swiftEmptyArrayStorage, (uint64_t)v182, v178, (uint64_t)v152, v187, v153, v157, v159, v162, v164);

      *a2 = v166;
      return;
    case 4uLL:
      if (!MapsFeature_IsEnabled_SearchAndDiscovery(v6))
        goto LABEL_40;
      v188 = (uint64_t)_swiftEmptyArrayStorage;
      v9 = (uint64_t)objc_msgSend(v174, "resultRefinements");
      v56 = sub_10000E4BC(0, &qword_10149A658, GEOResultRefinement_ptr);
      v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v56);

      if ((unint64_t)v3 >> 62)
        goto LABEL_94;
      v41 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v41)
        goto LABEL_38;
      goto LABEL_98;
    default:
LABEL_40:
      *a2 = 0;
      return;
  }
}

id sub_10011A63C(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  id v6;
  void *v7;

  swift_getObjCClassMetadata(a1);
  v6 = a3;
  v7 = (void *)a4();

  return v7;
}

id sub_10011A734()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RefinementsViewModelFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RefinementsViewModelFactory()
{
  return objc_opt_self(_TtC4Maps27RefinementsViewModelFactory);
}

id sub_10011A784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10;
  NSArray v17;
  unint64_t v18;
  NSString v19;
  uint64_t v20;
  NSString v21;
  NSString v22;
  id v23;

  sub_10000E4BC(0, &qword_10149B2E0, off_101195E08);
  v17.super.isa = Array._bridgeToObjectiveC()().super.isa;
  v18 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (a3)
  {
    v19 = String._bridgeToObjectiveC()();
    v18 = swift_bridgeObjectRelease(a3).n128_u64[0];
    v20 = a10;
    if (a8)
      goto LABEL_3;
LABEL_6:
    v21 = 0;
    if (v20)
      goto LABEL_4;
LABEL_7:
    v22 = 0;
    goto LABEL_8;
  }
  v19 = 0;
  v20 = a10;
  if (!a8)
    goto LABEL_6;
LABEL_3:
  v21 = String._bridgeToObjectiveC()();
  v18 = swift_bridgeObjectRelease(a8).n128_u64[0];
  if (!v20)
    goto LABEL_7;
LABEL_4:
  v22 = String._bridgeToObjectiveC()();
  v18 = swift_bridgeObjectRelease(v20).n128_u64[0];
LABEL_8:
  v23 = objc_msgSend(v10, "initWithElements:displayName:maximumNumberOfSelectableElements:clauseType:showEqualWidthButtonsOnFilterView:displayNameForMultiSelected:multiSelectIdentifier:", v17.super.isa, v19, a4, a5, a6 & 1, v21, *(double *)&v18, v22);

  return v23;
}

uint64_t sub_10011A8CC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  double v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  double v27;
  id v28;
  Class isa;
  uint64_t v30;
  Class v31;
  NSString v32;
  Class v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t object;
  NSString v44;
  id v45;
  Class v46;
  NSString v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  NSBundle v53;
  unint64_t v54;
  const char *v55;
  unint64_t v56;
  Swift::String v57;
  unint64_t v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  Swift::String v71;

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  *(_QWORD *)&v12 = __chkstk_darwin(v10).n128_u64[0];
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  v67 = v11;
  v15 = objc_msgSend(a1, "openAt", v12);
  if (!v15)
    goto LABEL_11;
  v16 = v15;
  v66 = v10;
  if (!objc_msgSend(v15, "isSelected"))
  {

LABEL_11:
    v24 = objc_msgSend(a1, "displayName");
    if (v24)
    {
      v19 = v24;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
LABEL_13:

      return v25;
    }
    return 0;
  }
  objc_msgSend(v16, "timeStamp");
  if (v17 == 0.0 && objc_msgSend(v16, "isSelected"))
  {
    if (qword_101490EA8 != -1)
      swift_once(&qword_101490EA8, sub_1001147B8);
    v18 = type metadata accessor for Logger(0);
    sub_10000E918(v18, (uint64_t)qword_1014D4B08);
    v19 = v16;
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(18, -1);
      *(_DWORD *)v22 = 134218240;
      objc_msgSend(v19, "timeStamp");
      v69 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v22 + 4, v22 + 12);
      *(_WORD *)(v22 + 12) = 1024;
      v68 = objc_msgSend(v19, "isSelected");
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69, v22 + 14, v22 + 18);

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "The openAt timestamp is %f and openAt selection is %{BOOL}d.", (uint8_t *)v22, 0x12u);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

    }
    v62 = objc_msgSend(a1, "displayName");
    if (v62)
    {
      v63 = v62;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);

      goto LABEL_13;
    }

    return 0;
  }
  v26 = objc_msgSend(v16, "timeStamp");
  Date.init(timeIntervalSince1970:)(v26, v27);
  v28 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  static Calendar.current.getter();
  isa = Calendar._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  objc_msgSend(v28, "setCalendar:", isa);

  static Locale.current.getter(v30);
  v31 = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v28, "setLocale:", v31);

  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setDateFormat:", v32);

  v33 = Date._bridgeToObjectiveC()().super.isa;
  v34 = objc_msgSend(v28, "stringFromDate:", v33);

  v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v37 = v36;

  if (objc_msgSend(v16, "isNextDay"))
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v38._countAndFlagsBits = 0xD000000000000011;
    v39._countAndFlagsBits = 0xD00000000000001ALL;
    v71._countAndFlagsBits = 0xD000000000000054;
    v71._object = (void *)0x8000000100E4AC30;
    v39._object = (void *)0x8000000100E4ABF0;
    v38._object = (void *)0x8000000100E4AC10;
    v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v38, v71);
    v41 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v42 = swift_allocObject(v41, 72, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100E22F40;
    *(_QWORD *)(v42 + 56) = &type metadata for String;
    *(_QWORD *)(v42 + 64) = sub_10000D8E0();
    *(_QWORD *)(v42 + 32) = v35;
    *(_QWORD *)(v42 + 40) = v37;
    v25 = String.init(format:_:)(v40._countAndFlagsBits, v40._object, v42);

    object = (uint64_t)v40._object;
  }
  else
  {
    v44 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setDateFormat:", v44);

    v45 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
    v46 = Date._bridgeToObjectiveC()().super.isa;
    v47 = objc_msgSend(v28, "stringFromDate:", v46);

    if (!v47)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v50 = v49;
      v47 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v48 = swift_bridgeObjectRelease(v50).n128_u64[0];
    }
    v51 = objc_msgSend(v45, "numberFromString:", v47, v48);

    if (v51 && (v52 = objc_msgSend(v51, "integerValue"), v51, v52 == (id)1))
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v53.super.isa = (Class)qword_1014D4B80;
      v54 = 0xD00000000000001BLL;
      v65 = 0x8000000100E4AB80;
      v55 = "[Open At] Open At Time 1:xx";
    }
    else
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v53.super.isa = (Class)qword_1014D4B80;
      v54 = 0xD000000000000019;
      v65 = 0x8000000100E4AB80;
      v55 = "[Open At] Open At Time %@";
    }
    v56 = (unint64_t)(v55 - 32) | 0x8000000000000000;
    v57._countAndFlagsBits = 0x207441206E65704FLL;
    v57._object = (void *)0xEA00000000004025;
    v58 = 0xD000000000000043;
    v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v54, (Swift::String_optional)0, v53, v57, *(Swift::String *)(&v65 - 1));
    v60 = sub_100008B04((uint64_t *)&unk_10149A4F0);
    v61 = swift_allocObject(v60, 72, 7);
    *(_OWORD *)(v61 + 16) = xmmword_100E22F40;
    *(_QWORD *)(v61 + 56) = &type metadata for String;
    *(_QWORD *)(v61 + 64) = sub_10000D8E0();
    *(_QWORD *)(v61 + 32) = v35;
    *(_QWORD *)(v61 + 40) = v37;
    v25 = static String.localizedStringWithFormat(_:_:)(v59._countAndFlagsBits, v59._object, v61);

    swift_bridgeObjectRelease(v59._object);
    object = v61;
  }
  swift_bridgeObjectRelease(object);

  (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v66);
  return v25;
}

id sub_10011B034(void *a1)
{
  id v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  NSString v11;
  id v12;
  Swift::String v14;

  if (!a1)
    return 0;
  v1 = objc_msgSend(a1, "openAt");
  if (v1)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v14._countAndFlagsBits = 0xD000000000000023;
    v14._object = (void *)0x8000000100E4AB30;
    v2._object = (void *)0x8000000100E4AB10;
    v2._countAndFlagsBits = 0xD000000000000011;
    v3._countAndFlagsBits = 0xE27461206E65704FLL;
    v3._object = (void *)0xAA0000000000A680;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v3, v14)._object;
    objc_msgSend(v1, "timeStamp");
    v6 = v5;
    v7 = objc_msgSend(v1, "isSelected");
    v8 = objc_msgSend(v1, "isNextDay");
    v9 = objc_allocWithZone((Class)AllRefinementsViewModelOpenAt);
    v10 = v1;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v12 = v10;
    v1 = objc_msgSend(v9, "initWithDisplayName:timeStamp:isSelected:isNextDay:data:", v11, v7, v8, v12, v6);

  }
  return v1;
}

uint64_t sub_10011B1D8(void *a1, uint64_t a2)
{
  void *v2;
  double v3;
  char **v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  double v11;
  char v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  NSString v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _BOOL8 v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  NSArray v65;
  NSString v66;
  NSString v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  NSArray v76;
  NSString v77;
  id v78;
  id v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v2 = a1;
  v3 = 0.0;
  v4 = &selRef_templateId;
  if (!objc_msgSend(a1, "showEqualWidthButtonsOnFilterView"))
    goto LABEL_20;
  v5 = objc_msgSend(v2, "multiSelect");
  v6 = sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  v87 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v24 = v7;
    else
      v24 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v24);
    if (v8)
      goto LABEL_4;
    goto LABEL_19;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v7);
  if (!v8)
  {
LABEL_19:
    swift_bridgeObjectRelease_n(v7, 2);
LABEL_20:
    v12 = 1;
    goto LABEL_21;
  }
LABEL_4:
  result = objc_opt_self(UIFont);
  v85 = (id)result;
  if (v8 < 1)
    goto LABEL_75;
  v10 = 0;
  v11 = 0.0;
  v12 = 1;
  v13 = v8;
  do
  {
    if ((v87 & 0xC000000000000001) != 0)
      v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v87);
    else
      v14 = *(id *)(v87 + 8 * v10 + 32);
    v15 = v14;
    v16 = objc_msgSend(v14, "displayName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v18 = v17;

    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v85, "preferredFontForTextStyle:", UIFontTextStyleBody, swift_bridgeObjectRelease(v18).n128_f64[0]);
    objc_msgSend(v19, "_maps_sizeWithFont:", v20);
    v22 = v21;

    v23 = v11;
    if ((v12 & 1) != 0)
      v23 = 0.0;
    if (v23 < v22)
      v11 = v22;
    v12 &= v23 >= v22;
    ++v10;
  }
  while (v13 != v10);
  swift_bridgeObjectRelease_n(v87, 2);
  v3 = v11;
  v2 = a1;
  v4 = &selRef_templateId;
LABEL_21:
  v25 = objc_msgSend(v2, v4[107]);
  v26 = sub_10000E4BC(0, (unint64_t *)&unk_10149B2D0, GEOResultRefinementMultiSelectElement_ptr);
  v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

  if ((unint64_t)v27 >> 62)
  {
    if (v27 < 0)
      v50 = v27;
    else
      v50 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    result = _CocoaArrayWrapper.endIndex.getter(v50);
    v28 = result;
    if (result)
      goto LABEL_23;
LABEL_47:
    swift_bridgeObjectRelease(v27);
    goto LABEL_48;
  }
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain(v27);
  if (!v28)
    goto LABEL_47;
LABEL_23:
  if (v28 >= 1)
  {
    v29 = 0;
    v84 = v27 & 0xC000000000000001;
    v86 = (id)v28;
    v88 = v27;
    do
    {
      if (v84)
        v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      else
        v31 = *(id *)(v27 + 8 * (_QWORD)v29 + 32);
      v32 = v31;
      v33 = objc_msgSend(v31, "displayName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v35 = v34;

      v36 = objc_msgSend(v32, "isSelected");
      if ((v12 & 1) != 0)
        v37 = 0;
      else
        v37 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v3);
      v38 = objc_msgSend(v32, "refinementKey");
      if (v38)
      {
        v39 = v38;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v41 = v40;

      }
      else
      {
        v41 = 0;
      }
      v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v35);
      if (v41)
      {
        v43 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v41);
      }
      else
      {
        v43 = 0;
      }
      v44 = objc_allocWithZone((Class)AllRefinementsViewModelMultiSelectElement);
      v45 = v32;
      v46 = objc_msgSend(v44, "initWithDisplayName:isSelected:optionalLabelWidth:refinementKey:data:", v42, v36, v37, v43, v45);

      if (v46)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
        v49 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v48 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v49 >= v48 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
        v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v46);
        specialized Array._endMutation()(v30);
      }
      v29 = (char *)v29 + 1;
      v27 = v88;
    }
    while (v86 != v29);
    swift_bridgeObjectRelease(v88);
    v2 = a1;
LABEL_48:
    v51 = swift_bridgeObjectRelease(v27).n128_u64[0];
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
      if ((uint64_t)_swiftEmptyArrayStorage < 0)
        v80 = _swiftEmptyArrayStorage;
      else
        v80 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v81 = _CocoaArrayWrapper.endIndex.getter(v80);
      v51 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
      if (v81)
      {
LABEL_50:
        v52 = objc_msgSend(v2, "clauseType", *(double *)&v51) == (id)1;
        v53 = objc_msgSend(v2, "maximumNumberOfSelectElements");
        v54 = objc_msgSend(v2, "showEqualWidthButtonsOnFilterView");
        v55 = v2;
        v56 = v54;
        v57 = objc_msgSend(v55, "displayNameForMultiSelected");
        if (v57)
        {
          v58 = v57;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
          v60 = v59;

        }
        else
        {
          v60 = 0;
        }
        v61 = objc_msgSend(a1, "multiSelectIdentifier");
        if (v61)
        {
          v62 = v61;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
          v64 = v63;

        }
        else
        {
          v64 = 0;
        }
        sub_10000E4BC(0, &qword_10149B2E0, off_101195E08);
        v65.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        if (v60)
        {
          v66 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v60);
          if (v64)
          {
LABEL_58:
            v67 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v64);
LABEL_61:
            v68 = objc_msgSend(objc_allocWithZone((Class)AllRefinementsViewModelSectionMultiSelect), "initWithElements:displayName:maximumNumberOfSelectableElements:clauseType:showEqualWidthButtonsOnFilterView:displayNameForMultiSelected:multiSelectIdentifier:", v65.super.isa, 0, v53, v52, v56, v66, v67);

            v69 = sub_100008B04((uint64_t *)&unk_101493B10);
            v70 = swift_allocObject(v69, 40, 7);
            *(_OWORD *)(v70 + 16) = xmmword_100E23F50;
            *(_QWORD *)(v70 + 32) = v68;
            v89 = v70;
            specialized Array._endMutation()(v70);
            v71 = v68;
            v72 = objc_msgSend(a1, "displayName");
            if (v72)
            {
              v73 = v72;
              static String._unconditionallyBridgeFromObjectiveC(_:)(v72);
              v75 = v74;

            }
            else
            {
              v75 = 0;
            }
            sub_100008B04((uint64_t *)&unk_10149B2C0);
            v76.super.isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v89);
            if (v75)
            {
              v77 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v75);
            }
            else
            {
              v77 = 0;
            }
            v78 = objc_msgSend(objc_allocWithZone((Class)AllRefinementsViewModel), "initWithSections:displayName:viewTakesFullHeight:", v76.super.isa, v77, 0);

            v79 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2);
            objc_msgSend(v78, "setTappedBarButtonIndex:", v79);

            return (uint64_t)v78;
          }
        }
        else
        {
          v66 = 0;
          if (v64)
            goto LABEL_58;
        }
        v67 = 0;
        goto LABEL_61;
      }
    }
    else if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_50;
    }
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return 0;
  }
  __break(1u);
LABEL_75:
  __break(1u);
  return result;
}

id sub_10011B9B4(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  id v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSArray v33;
  NSString v34;
  id v35;
  uint64_t v37;

  if (!MapsFeature_IsEnabled_SearchAndDiscovery(a1))
    return 0;
  v4 = objc_msgSend(a1, "openNow");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_10011B034(a1);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v5, "displayName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = objc_msgSend(v5, "isSelected");
    v12 = v5;
    v13 = objc_msgSend(v12, "refinementKey");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

    v16 = objc_allocWithZone((Class)AllRefinementsViewModelToggle);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    swift_unknownObjectRetain(v12);
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(v16, "initWithDisplayName:isSelected:data:refinementKey:", v17, v11, v12, v18, swift_bridgeObjectRelease(v15).n128_f64[0]);

    v20 = objc_allocWithZone((Class)AllRefinementsViewModelSectionOpenOption);
    v21 = v7;
    v22 = v19;
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v20, "initWithOpenNow:openAt:displayName:", v22, v21, v23);

    v25 = sub_100008B04((uint64_t *)&unk_101493B10);
    v26 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v26 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v26 + 32) = v24;
    v37 = v26;
    specialized Array._endMutation()(v26);
    v27 = v24;
    v28 = objc_msgSend(a1, "displayName");
    if (v28)
    {
      v29 = v28;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v31 = v30;

    }
    else
    {
      v31 = 0;
    }
    sub_100008B04((uint64_t *)&unk_10149B2C0);
    v33.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v37);
    if (v31)
    {
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v31);
    }
    else
    {
      v34 = 0;
    }
    v32 = objc_msgSend(objc_allocWithZone((Class)AllRefinementsViewModel), "initWithSections:displayName:viewTakesFullHeight:", v33.super.isa, v34, 0);

    v35 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a2);
    objc_msgSend(v32, "setTappedBarButtonIndex:", v35);

  }
  else
  {

    return 0;
  }
  return v32;
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryUnitRatings(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10011BD1C + 4 * byte_100E2C855[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10011BD50 + 4 * byte_100E2C850[v4]))();
}

uint64_t sub_10011BD50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10011BD58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10011BD60);
  return result;
}

uint64_t sub_10011BD6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10011BD74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10011BD78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10011BD80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitRatings()
{
  return &type metadata for PlaceSummaryUnitRatings;
}

uint64_t sub_10011BD9C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource(0, v1);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TypeDisplayRepresentation(0, v6);
  sub_10000E930(v9, qword_1014D4B88);
  sub_10000E918(v9, (uint64_t)qword_1014D4B88);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000019, 0x8000000100E4ACC0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v8, v3);
}

unint64_t sub_10011BEAC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  unint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);

  v0 = sub_100008B04(&qword_101494368);
  __chkstk_darwin(v0);
  v2 = (char *)&v44 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100008B04(&qword_101494370);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for LocalizedStringResource(0, v4);
  v8 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008B04(&qword_10149B378);
  v12 = sub_100008B04(&qword_101491C98);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v12;
  v59 = *(_QWORD *)(v13 + 72);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v11, v16 + 4 * v59, v15 | 7);
  v50 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_100E255C0;
  v57 = v17 + v16;
  v18 = *(int *)(v14 + 48);
  v48 = v14;
  *(_QWORD *)&v60 = v17 + v16 + v18;
  *(_BYTE *)(v17 + v16) = 0;
  LocalizedStringResource.init(stringLiteral:)(0x676E6976697244, 0xE700000000000000);
  v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v62(v6, 1, 1, v7);
  v56 = type metadata accessor for DisplayRepresentation.Image(0);
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56);
  v49(v2, 1, 1, v56);
  v19 = sub_100008B04((uint64_t *)&unk_101494380);
  v20 = *(_QWORD *)(v8 + 72);
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = 2 * v20;
  v61 = v20;
  v54 = (v21 + 32) & ~v21;
  v55 = v19;
  v23 = v21 | 7;
  v46 = v21 | 7;
  v24 = swift_allocObject(v19, v54 + 3 * v20, v21 | 7);
  *(_OWORD *)(v24 + 16) = xmmword_100E22F50;
  LocalizedStringResource.init(stringLiteral:)(0x62206C6576617254, 0xED00007261632079);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x8000000100E4ACE0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000017, 0x8000000100E4AD00);
  v52 = v6;
  v53 = v10;
  v25 = v2;
  v51 = v2;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v10, v6, v2, v24);
  v26 = v59;
  v27 = v57;
  v45 = v57 + v59 + *(int *)(v14 + 48);
  *(_BYTE *)(v57 + v59) = 2;
  LocalizedStringResource.init(stringLiteral:)(0x7469736E617254, 0xE700000000000000);
  v28 = v58;
  v62(v6, 1, 1, v58);
  v29 = v25;
  v30 = v56;
  v31 = v49;
  v49(v29, 1, 1, v56);
  v32 = v55;
  v47 = v54 + v22;
  v33 = swift_allocObject(v55, v54 + v22, v23);
  v60 = xmmword_100E22F70;
  *(_OWORD *)(v33 + 16) = xmmword_100E22F70;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000010, 0x8000000100E4AD20);
  LocalizedStringResource.init(stringLiteral:)(0x742063696C627550, 0xEE007469736E6172);
  v34 = v52;
  v35 = v51;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v53, v52, v51, v33);
  v45 = 2 * v26;
  *(_BYTE *)(v27 + 2 * v26) = 3;
  LocalizedStringResource.init(stringLiteral:)(0x676E696C637943, 0xE700000000000000);
  v62(v34, 1, 1, v28);
  v31(v35, 1, 1, v30);
  v36 = v46;
  v37 = v47;
  v38 = swift_allocObject(v32, v47, v46);
  *(_OWORD *)(v38 + 16) = v60;
  LocalizedStringResource.init(stringLiteral:)(0x6E696C6379636942, 0xE900000000000067);
  LocalizedStringResource.init(stringLiteral:)(0x676E696B6942, 0xE600000000000000);
  v39 = v52;
  v40 = v53;
  v41 = v51;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v53, v52, v51, v38);
  *(_BYTE *)(v57 + v45 + v59) = 1;
  LocalizedStringResource.init(stringLiteral:)(0x676E696B6C6157, 0xE700000000000000);
  v62(v39, 1, 1, v58);
  v31(v41, 1, 1, v56);
  v42 = swift_allocObject(v55, v37, v36);
  *(_OWORD *)(v42 + 16) = v60;
  LocalizedStringResource.init(stringLiteral:)(0x746F6F66206E4FLL, 0xE700000000000000);
  LocalizedStringResource.init(stringLiteral:)(0x6E696C6C6F727453, 0xE900000000000067);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v40, v39, v41, v42);
  result = sub_10000A094(v50);
  qword_1014D4BA0 = result;
  return result;
}

uint64_t sub_10011C44C(char *a1, char *a2)
{
  return sub_1001D661C(*a1, *a2);
}

unint64_t sub_10011C45C()
{
  unint64_t result;

  result = qword_10149B308;
  if (!qword_10149B308)
  {
    result = swift_getWitnessTable("aq7", &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B308);
  }
  return result;
}

Swift::Int sub_10011C4A0()
{
  char *v0;
  uint64_t v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  String.hash(into:)(v3, *(_QWORD *)&aDriving_4[8 * v1], 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

uint64_t sub_10011C4F8(uint64_t a1)
{
  char *v1;

  String.hash(into:)(a1, *(_QWORD *)&aDriving_4[8 * *v1], 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

Swift::Int sub_10011C524(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  String.hash(into:)(v4, *(_QWORD *)&aDriving_4[8 * v2], 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

unint64_t sub_10011C578@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_10011CD30(*a1);
  *a2 = result;
  return result;
}

void sub_10011C5A4(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aDriving_4[8 * *v1];
  a1[1] = 0xE700000000000000;
}

unint64_t sub_10011C5C4()
{
  unint64_t result;

  result = qword_10149B310;
  if (!qword_10149B310)
  {
    result = swift_getWitnessTable(byte_100E2C9A8, &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B310);
  }
  return result;
}

unint64_t sub_10011C60C()
{
  unint64_t result;

  result = qword_10149B318;
  if (!qword_10149B318)
  {
    result = swift_getWitnessTable(byte_100E2C9E0, &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B318);
  }
  return result;
}

unint64_t sub_10011C654()
{
  unint64_t result;

  result = qword_10149B320;
  if (!qword_10149B320)
  {
    result = swift_getWitnessTable("1q7", &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B320);
  }
  return result;
}

unint64_t sub_10011C69C()
{
  unint64_t result;

  result = qword_10149B328;
  if (!qword_10149B328)
  {
    result = swift_getWitnessTable(byte_100E2CA10, &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B328);
  }
  return result;
}

unint64_t sub_10011C6E4()
{
  unint64_t result;

  result = qword_10149B330;
  if (!qword_10149B330)
  {
    result = swift_getWitnessTable(byte_100E2CA38, &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B330);
  }
  return result;
}

unint64_t sub_10011C72C()
{
  unint64_t result;

  result = qword_10149B338;
  if (!qword_10149B338)
  {
    result = swift_getWitnessTable("Iq7", &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B338);
  }
  return result;
}

uint64_t sub_10011C770()
{
  if (qword_101490EE0 != -1)
    swift_once(&qword_101490EE0, sub_10011BEAC);
  return swift_bridgeObjectRetain(qword_1014D4BA0);
}

unint64_t sub_10011C7B4()
{
  unint64_t result;

  result = qword_10149B340;
  if (!qword_10149B340)
  {
    result = swift_getWitnessTable(byte_100E2CA70, &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B340);
  }
  return result;
}

unint64_t sub_10011C7FC()
{
  unint64_t result;

  result = qword_10149B348;
  if (!qword_10149B348)
  {
    result = swift_getWitnessTable("qp7", &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B348);
  }
  return result;
}

unint64_t sub_10011C844()
{
  unint64_t result;

  result = qword_10149B350;
  if (!qword_10149B350)
  {
    result = swift_getWitnessTable("Yp7", &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B350);
  }
  return result;
}

unint64_t sub_10011C88C()
{
  unint64_t result;

  result = qword_10149B358;
  if (!qword_10149B358)
  {
    result = swift_getWitnessTable(byte_100E2C968, &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B358);
  }
  return result;
}

uint64_t sub_10011C8D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10011C88C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10011C90C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149B360;
  if (!qword_10149B360)
  {
    v1 = sub_10000E5D4(&qword_10149B368);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10149B360);
  }
  return result;
}

void sub_10011C958(_QWORD *a1@<X8>)
{
  *a1 = &off_10119A730;
}

uint64_t sub_10011C968@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  uint64_t v4;

  if (qword_101490ED8 != -1)
    swift_once(&qword_101490ED8, sub_10011BD9C);
  v3 = type metadata accessor for TypeDisplayRepresentation(0, a2);
  v4 = sub_10000E918(v3, (uint64_t)qword_1014D4B88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v4, v3);
}

uint64_t sub_10011C9D8(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10011CA18();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_10011CA18()
{
  unint64_t result;

  result = qword_10149B370;
  if (!qword_10149B370)
  {
    result = swift_getWitnessTable(byte_100E2C928, &type metadata for TransportType);
    atomic_store(result, (unint64_t *)&qword_10149B370);
  }
  return result;
}

uint64_t sub_10011CA5C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10011CA18();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t storeEnumTagSinglePayload for TransportType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10011CAE0 + 4 * byte_100E2C87D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10011CB14 + 4 * asc_100E2C878[v4]))();
}

uint64_t sub_10011CB14(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10011CB1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10011CB24);
  return result;
}

uint64_t sub_10011CB30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10011CB38);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10011CB3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10011CB44(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransportType()
{
  return &type metadata for TransportType;
}

void sub_10011CB60(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_10011CBA4()
{
  swift_bridgeObjectRelease(0xE700000000000000);
  return 0;
}

unint64_t sub_10011CD30(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10119A6B0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

id sub_10011CDF0(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  NSString v19;
  _QWORD v21[6];
  objc_super v22;

  v9 = &v4[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView] = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_delegate]);
  v22.receiver = v4;
  v22.super_class = (Class)type metadata accessor for RefinementsBarUIView();
  v10 = objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v11 = (void *)objc_opt_self(UIColor);
  v12 = v10;
  v13 = objc_msgSend(v11, "clearColor");
  objc_msgSend(v12, "setBackgroundColor:", v13);

  v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v15 = swift_allocObject(&unk_1011A3B68, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v21[4] = sub_10011DA98;
  v21[5] = v15;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_1001CB1D8;
  v21[3] = &unk_1011A3BA8;
  v16 = _Block_copy(v21);
  swift_release();
  v17 = objc_msgSend(v14, "addObserverForName:object:queue:usingBlock:", UIContentSizeCategoryDidChangeNotification, 0, 0, v16);
  _Block_release(v16);
  swift_unknownObjectRelease(v17);

  v18 = v12;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityIdentifier:", v19);

  return v18;
}

void sub_10011D020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView);

    objc_msgSend(v5, "invalidateIntrinsicContentSize");
  }
}

void sub_10011D24C(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1)
  {
    v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar);
    v4 = *(void **)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 8);
    if (v4)
    {
      v6 = v3[2];
      v5 = v3[3];
      v7 = *v3;
      KeyPath = swift_getKeyPath(&unk_100E2CB70);
      v9 = swift_getKeyPath(&unk_100E2CB98);
      v10 = a1;
      sub_10011D998(v7, v4, v6, v5);
      v11 = v4;
      static Published.subscript.getter(&v30, v10, KeyPath, v9);
      swift_release();
      swift_release();
      v12 = v30;
      v13 = swift_getKeyPath(&unk_100E2CB70);
      v14 = swift_getKeyPath(&unk_100E2CB98);
      v30 = v12;
      static Published.subscript.setter(&v30, v11, v13, v14);
      swift_release();
      v11[OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled] = v10[OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled];

    }
    else
    {
      v20 = swift_allocObject(&unk_1011A3B68, 24, 7);
      swift_unknownObjectWeakInit(v20 + 16);
      v21 = swift_allocObject(&unk_1011A3B90, 32, 7);
      *(_QWORD *)(v21 + 16) = v20;
      *(_QWORD *)(v21 + 24) = a1;
      v22 = type metadata accessor for RefinementsBarViewModel(0);
      v23 = sub_10011DA48();
      v24 = ObservedObject.init(wrappedValue:)(a1, v22, v23);
      v25 = *v3;
      v26 = (void *)v3[1];
      v27 = v3[2];
      v28 = v3[3];
      *v3 = v24;
      v3[1] = v29;
      v3[2] = (uint64_t)sub_10011DA40;
      v3[3] = v21;
      sub_10011D9C4(v25, v26, v27, v28);
    }
    sub_10011D5B4();

  }
  else
  {
    v15 = (_OWORD *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar);
    v17 = *(void **)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 8);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 16);
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 24);
    *v15 = 0u;
    v15[1] = 0u;
    sub_10011D9C4(v16, v17, v18, v19);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView), "removeFromSuperview");
  }
}

void sub_10011D464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  void *v12;
  NSUUID v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  _BYTE v18[24];

  v7 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v11 = (void *)Strong;
    v12 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC4Maps20RefinementsBarUIView_delegate);

    if (v12)
    {
      v13.super.isa = UUID._bridgeToObjectiveC()().super.isa;
      sub_1000A4FC0(a2, (uint64_t)v9);
      v14 = type metadata accessor for UUID(0);
      v15 = *(_QWORD *)(v14 - 8);
      isa = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) != 1)
      {
        isa = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
      }
      objc_msgSend(v12, "refinementBarButtonTappedWithRefinementID:submenuElementID:viewModel:", v13.super.isa, isa, a4);

      swift_unknownObjectRelease(v12);
    }
  }
}

void sub_10011D5B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_hostingView], "removeFromSuperview");
  v3 = *(void **)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 8];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 16];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar + 24];
  v31 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps20RefinementsBarUIView_refinementBar];
  v32 = v3;
  v33 = v4;
  v34 = v5;
  objc_allocWithZone((Class)sub_100008B04(&qword_10149B420));
  sub_10011D998(v31, v3, v4, v5);
  v6 = (void *)UIHostingController.init(rootView:)(&v31);
  v7 = objc_msgSend(v6, "view", v31, v32, v33, v34);

  v8 = *(void **)&v1[v2];
  *(_QWORD *)&v1[v2] = v7;

  v9 = *(void **)&v1[v2];
  if (v9)
  {
    v10 = (void *)objc_opt_self(UIColor);
    v11 = v9;
    v12 = objc_msgSend(v10, "clearColor");
    objc_msgSend(v11, "setBackgroundColor:", v12);

    objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v1, "addSubview:", v11);
    v13 = (void *)objc_opt_self(NSLayoutConstraint);
    v14 = sub_100008B04((uint64_t *)&unk_101493B10);
    v15 = swift_allocObject(v14, 64, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100E2A2C0;
    v16 = objc_msgSend(v1, "leadingAnchor");
    v17 = objc_msgSend(v11, "leadingAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v15 + 32) = v18;
    v19 = objc_msgSend(v1, "trailingAnchor");
    v20 = objc_msgSend(v11, "trailingAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

    *(_QWORD *)(v15 + 40) = v21;
    v22 = objc_msgSend(v1, "topAnchor");
    v23 = objc_msgSend(v11, "topAnchor");
    v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

    *(_QWORD *)(v15 + 48) = v24;
    v25 = objc_msgSend(v1, "bottomAnchor");
    v26 = objc_msgSend(v11, "bottomAnchor");
    v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

    *(_QWORD *)(v15 + 56) = v27;
    v31 = v15;
    specialized Array._endMutation()(v28);
    v29 = v31;
    sub_1000174D4();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "activateConstraints:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  }
}

id sub_10011D8F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RefinementsBarUIView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RefinementsBarUIView()
{
  return objc_opt_self(_TtC4Maps20RefinementsBarUIView);
}

double sub_10011D998(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v5;
  double result;

  if (a2)
  {
    v5 = a2;
    *(_QWORD *)&result = swift_retain(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_10011D9C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {

    return swift_release(a4);
  }
  return result;
}

uint64_t sub_10011D9F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011DA14()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10011DA40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10011D464(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_10011DA48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149B428;
  if (!qword_10149B428)
  {
    v1 = type metadata accessor for RefinementsBarViewModel(255);
    result = swift_getWitnessTable("q{7", v1);
    atomic_store(result, (unint64_t *)&qword_10149B428);
  }
  return result;
}

void sub_10011DA98(uint64_t a1)
{
  uint64_t v1;

  sub_10011D020(a1, v1);
}

double sub_10011DAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10011DAB0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10011DAB8(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  id v9;
  objc_super v11;

  v2 = objc_msgSend(objc_allocWithZone((Class)PlaceCardItem), "initWithMapItem:", a1);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration);
  v4 = *(_BYTE *)(v3 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent);
  v6 = (objc_class *)type metadata accessor for PlaceCardContextConfiguration();
  v7 = objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] = v2;
  v7[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory] = v4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent] = v5;
  v11.receiver = v7;
  v11.super_class = v6;
  v8 = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  sub_1001EC884(v9);

  return 1;
}

uint64_t sub_10011DBF0(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t result;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  objc_class *v15;
  _BYTE *v16;
  id v17;
  id v18;
  objc_super v19;

  v3 = objc_msgSend(a1, "parkedCar");

  if (v3)
    return 0;
  result = (uint64_t)objc_msgSend(a1, "searchResult");
  if (result)
  {
    v5 = (void *)result;
    result = (uint64_t)objc_msgSend((id)result, "mapItem");
    if (result)
    {
      v6 = (void *)result;
      v7 = objc_msgSend((id)result, "_geoMapItem");

      v8 = OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration;
      v9 = objc_msgSend(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration)+ OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem), "mapItem");
      v10 = objc_msgSend(v9, "_geoMapItem");

      if ((GEOMapItemIsEqualToMapItemForPurpose(v7, v10, 5) & 1) == 0)
      {
        v11 = objc_msgSend(objc_allocWithZone((Class)PlaceCardItem), "initWithSearchResult:", v5);
        v12 = *(_QWORD *)(v1 + v8);
        v13 = *(_BYTE *)(v12 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory);
        v14 = *(_QWORD *)(v12 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent);
        v15 = (objc_class *)type metadata accessor for PlaceCardContextConfiguration();
        v16 = objc_allocWithZone(v15);
        *(_QWORD *)&v16[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] = v11;
        v16[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory] = v13;
        *(_QWORD *)&v16[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent] = v14;
        v19.receiver = v16;
        v19.super_class = v15;
        v17 = v11;
        v18 = objc_msgSendSuper2(&v19, "init");
        sub_1001EC884(v18);

      }
      swift_unknownObjectRelease(v10);
      swift_unknownObjectRelease(v7);
      return 1;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10011DE28(void *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  objc_class *v10;
  _BYTE *v11;
  id v12;
  id v13;
  objc_super v14;

  result = (uint64_t)objc_msgSend(a1, "annotation");
  if (result)
  {
    v3 = result;
    v4 = objc_opt_self(UserLocationSearchResult);
    v5 = swift_dynamicCastObjCClass(v3, v4);
    if (v5)
    {
      v6 = objc_msgSend(objc_allocWithZone((Class)PlaceCardItem), "initWithSearchResult:", v5);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration);
      v8 = *(_BYTE *)(v7 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory);
      v9 = *(_QWORD *)(v7 + OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent);
      v10 = (objc_class *)type metadata accessor for PlaceCardContextConfiguration();
      v11 = objc_allocWithZone(v10);
      *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem] = v6;
      v11[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory] = v8;
      *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_excludedContent] = v9;
      v14.receiver = v11;
      v14.super_class = v10;
      v12 = v6;
      v13 = objc_msgSendSuper2(&v14, "init");
      sub_1001EC884(v13);

      swift_unknownObjectRelease(v3);
      return 1;
    }
    else
    {
      swift_unknownObjectRelease(v3);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10011E048(uint64_t a1, uint64_t a2)
{
  return sub_10011E178(a1, a2, &qword_101496AB0);
}

uint64_t sub_10011E054(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;

  *(_QWORD *)&v6 = a1;
  swift_unknownObjectRetain(a1);
  v3 = sub_100008B04((uint64_t *)&unk_10149B490);
  if (!swift_dynamicCast(&v10, &v6, v3, &type metadata for AnyHashable, 6))
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    sub_100010CC4((uint64_t)&v10, &qword_101493FF0);
LABEL_6:
    v4 = 0;
    return v4 & 1;
  }
  v13[0] = v10;
  v13[1] = v11;
  v14 = v12;
  v9 = a2;
  swift_unknownObjectRetain(a2);
  if ((swift_dynamicCast(&v6, &v9, v3, &type metadata for AnyHashable, 6) & 1) == 0)
  {
    v8 = 0;
    v6 = 0u;
    v7 = 0u;
    sub_100010CC4((uint64_t)&v6, &qword_101493FF0);
    sub_100012C48((uint64_t)v13);
    goto LABEL_6;
  }
  v10 = v6;
  v11 = v7;
  v12 = v8;
  v4 = static AnyHashable.== infix(_:_:)(v13, &v10);
  sub_100012C48((uint64_t)&v10);
  sub_100012C48((uint64_t)v13);
  return v4 & 1;
}

uint64_t sub_10011E16C(uint64_t a1, uint64_t a2)
{
  return sub_10011E178(a1, a2, (uint64_t *)&unk_101496AA0);
}

uint64_t sub_10011E178(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  char v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;

  sub_100084C44(a1, (uint64_t)v14);
  v5 = sub_100008B04(a3);
  if (!swift_dynamicCast(&v11, v14, v5, &type metadata for AnyHashable, 6))
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_100010CC4((uint64_t)&v11, &qword_101493FF0);
LABEL_6:
    v6 = 0;
    return v6 & 1;
  }
  v16[0] = v11;
  v16[1] = v12;
  v17 = v13;
  sub_100084C44(a2, (uint64_t)&v11);
  if ((swift_dynamicCast(&v8, &v11, v5, &type metadata for AnyHashable, 6) & 1) == 0)
  {
    v10 = 0;
    v8 = 0u;
    v9 = 0u;
    sub_100010CC4((uint64_t)&v8, &qword_101493FF0);
    sub_100012C48((uint64_t)v16);
    goto LABEL_6;
  }
  v14[0] = v8;
  v14[1] = v9;
  v15 = v10;
  v6 = static AnyHashable.== infix(_:_:)(v16, v14);
  sub_100012C48((uint64_t)v14);
  sub_100012C48((uint64_t)v16);
  return v6 & 1;
}

void sub_10011E290()
{
  uint64_t v0;
  _BYTE v1[24];

  sub_10011F150(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

id sub_10011E2D0()
{
  id v0;
  void *v2;

  v0 = objc_msgSend((id)objc_opt_self(TwoLinesContentViewModelComposer), "cellModelForSharedTripSummary:", v2);

  return v0;
}

void sub_10011E6EC()
{
  uint64_t v0;
  _BYTE v1[24];

  sub_10011F150(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_10011E720()
{
  uint64_t v1;

  sub_10011F1C8(&v1);
  return 0;
}

uint64_t sub_10011E760()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_100008B04(&qword_10149B480);
  sub_10000E930(v0, qword_1014D4BA8);
  sub_10000E918(v0, (uint64_t)qword_1014D4BA8);
  v1 = sub_10000E4BC(0, &qword_10149B488, off_101198000);
  return UICollectionView.CellRegistration.init(handler:)(sub_10011E7E0, 0, v1, &type metadata for HomeListTwoLinesCellModel);
}

uint64_t sub_10011E7E0(void *a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_10011E290();
  v3 = v2;
  objc_msgSend(a1, "setViewModel:", v2);
  return swift_unknownObjectRelease(v3);
}

void sub_10011E820()
{
  uint64_t v0;
  _BYTE v1[24];

  sub_10011F150(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_10011E858()
{
  uint64_t v1;

  return v1;
}

void sub_10011E870(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_100010CC4((uint64_t)va, (uint64_t *)&unk_10149B510);
  JUMPOUT(0x10011E85CLL);
}

void sub_10011E88C()
{
  uint64_t v0;
  _BYTE v1[24];

  sub_10011F150(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_10011E8C4()
{
  uint64_t v1;

  return v1;
}

void sub_10011E908()
{
  uint64_t v0;
  _BYTE v1[24];

  sub_10011F150(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_10011E950(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t aBlock, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  void *v31;

  return 0;
}

void sub_10011ECC8(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  _BYTE v7[24];

  v3 = objc_msgSend(a1, "geoMapItem");
  v4 = objc_msgSend(objc_allocWithZone((Class)MKMapItem), "initWithGeoMapItem:isPlaceHolderPlace:", v3, 1);
  swift_unknownObjectRelease(v3);
  if (v4)
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)DragAndDropMapItem), "initWithMapItem:", v4);

    swift_beginAccess(a2 + 16, v7, 1, 0);
    v6 = *(void **)(a2 + 16);
    *(_QWORD *)(a2 + 16) = v5;

  }
}

void sub_10011ED84()
{
  uint64_t v0;
  _BYTE v1[24];

  sub_10011F150(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

void sub_10011EDC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 - 56);
  Hasher._combine(_:)(0);
  NSObject.hash(into:)(v0);

}

uint64_t sub_10011EFA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101490EE8 != -1)
    swift_once(&qword_101490EE8, sub_10011E760);
  v2 = sub_100008B04(&qword_10149B480);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4BA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

Swift::Int sub_10011F024()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10011ED84();
  return Hasher._finalize()();
}

Swift::Int sub_10011F064(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10011ED84();
  return Hasher._finalize()();
}

unint64_t sub_10011F0A4()
{
  unint64_t result;

  result = qword_10149B430;
  if (!qword_10149B430)
  {
    result = swift_getWitnessTable(byte_100E2CC08, &type metadata for HomeListTwoLinesCellModel);
    atomic_store(result, (unint64_t *)&qword_10149B430);
  }
  return result;
}

unint64_t sub_10011F0E8(uint64_t a1)
{
  unint64_t result;

  result = sub_10011F10C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10011F10C()
{
  unint64_t result;

  result = qword_10149B470;
  if (!qword_10149B470)
  {
    result = swift_getWitnessTable(byte_100E2CC30, &type metadata for HomeListTwoLinesCellModel);
    atomic_store(result, (unint64_t *)&qword_10149B470);
  }
  return result;
}

uint64_t sub_10011F150(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HomeListTwoLinesCellModel(a2, a1);
  return a2;
}

uint64_t sub_10011F184()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10011F1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10011F1B8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_10011F1C0(void *a1)
{
  uint64_t v1;

  sub_10011ECC8(a1, v1);
}

_QWORD *sub_10011F1C8(_QWORD *a1)
{
  destroy for HomeListTwoLinesCellModel(a1);
  return a1;
}

uint64_t sub_10011F1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149B510);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10011F23C(uint64_t a1, uint64_t a2)
{
  _BYTE v3[24];
  uint64_t v4;

  sub_10011F150(a1, (uint64_t)v3);
  sub_10011F150(a2, (uint64_t)&v4);
  __asm { BR              X10 }
}

uint64_t sub_10011F28C()
{
  id v0;
  char v1;
  void *v2;
  id v4;
  _QWORD v5[5];
  char v6;

  sub_10011F150((uint64_t)v5, (uint64_t)&v4);
  v0 = v4;
  if (v6)
  {

    sub_100010CC4((uint64_t)v5, (uint64_t *)&unk_10149B4A0);
    v1 = 0;
  }
  else
  {
    v2 = (void *)v5[3];
    sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
    v1 = static NSObject.== infix(_:_:)(v0, v2);

    sub_10011F1C8(v5);
  }
  return v1 & 1;
}

void sub_10011F448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  sub_10011F150((uint64_t)&a15, (uint64_t)&a12);
  if (a20 != 5)
    JUMPOUT(0x10011F2A4);
  JUMPOUT(0x10011F2DCLL);
}

void destroy for HomeListTwoLinesCellModel(_QWORD *a1)
{
  int v2;

  v2 = *((unsigned __int8 *)a1 + 16);
  while (2)
  {
    switch(v2)
    {
      case 0:
      case 2:
      case 3:
      case 5:

        break;
      case 1:

        swift_unknownObjectWeakDestroy(a1 + 1);
        break;
      case 4:
        swift_unknownObjectRelease(*a1);
        break;
      default:
        v2 = *(_DWORD *)a1 + 6;
        continue;
    }
    break;
  }
}

uint64_t initializeWithCopy for HomeListTwoLinesCellModel(uint64_t a1, uint64_t a2)
{
  int v4;
  void *v5;
  void *v6;
  id v7;
  char v8;
  void *v9;
  id v10;

  v4 = *(unsigned __int8 *)(a2 + 16);
  while (2)
  {
    switch(v4)
    {
      case 0:
        v5 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 16) = 0;
        goto LABEL_11;
      case 1:
        v6 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = v6;
        swift_unknownObjectWeakCopyInit(a1 + 8, a2 + 8);
        *(_BYTE *)(a1 + 16) = 1;
        return a1;
      case 2:
        v5 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 2;
        goto LABEL_10;
      case 3:
        v5 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 3;
        goto LABEL_10;
      case 4:
        v9 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 16) = 4;
        swift_unknownObjectRetain(v9);
        return a1;
      case 5:
        v5 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 5;
LABEL_10:
        *(_BYTE *)(a1 + 16) = v8;
LABEL_11:
        v10 = v5;
        return a1;
      default:
        v4 = *(_DWORD *)a2 + 6;
        continue;
    }
  }
}

_QWORD *assignWithCopy for HomeListTwoLinesCellModel(_QWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  void *v6;
  void *v7;
  id v8;
  char v9;
  void *v10;
  id v11;

  if (a1 != (_QWORD *)a2)
  {
    v4 = *((unsigned __int8 *)a1 + 16);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 2:
        case 3:
        case 5:

          break;
        case 1:

          swift_unknownObjectWeakDestroy(a1 + 1);
          break;
        case 4:
          swift_unknownObjectRelease(*a1);
          break;
        default:
          v4 = *(_DWORD *)a1 + 6;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 16);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = *(void **)a2;
          *a1 = *(_QWORD *)a2;
          *((_BYTE *)a1 + 16) = 0;
          goto LABEL_18;
        case 1:
          v7 = *(void **)a2;
          *a1 = *(_QWORD *)a2;
          v8 = v7;
          swift_unknownObjectWeakCopyInit(a1 + 1, a2 + 8);
          *((_BYTE *)a1 + 16) = 1;
          return a1;
        case 2:
          v6 = *(void **)a2;
          *a1 = *(_QWORD *)a2;
          v9 = 2;
          goto LABEL_17;
        case 3:
          v6 = *(void **)a2;
          *a1 = *(_QWORD *)a2;
          v9 = 3;
          goto LABEL_17;
        case 4:
          v10 = *(void **)a2;
          *a1 = *(_QWORD *)a2;
          *((_BYTE *)a1 + 16) = 4;
          swift_unknownObjectRetain(v10);
          return a1;
        case 5:
          v6 = *(void **)a2;
          *a1 = *(_QWORD *)a2;
          v9 = 5;
LABEL_17:
          *((_BYTE *)a1 + 16) = v9;
LABEL_18:
          v11 = v6;
          break;
        default:
          v5 = *(_DWORD *)a2 + 6;
          continue;
      }
      break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for HomeListTwoLinesCellModel(uint64_t a1, uint64_t a2)
{
  int v3;
  char v4;

  v3 = *(unsigned __int8 *)(a2 + 16);
  while (2)
  {
    switch(v3)
    {
      case 0:
        v4 = 0;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        break;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_unknownObjectWeakTakeInit(a1 + 8, a2 + 8);
        v4 = 1;
        break;
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v4 = 2;
        break;
      case 3:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v4 = 3;
        break;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v4 = 4;
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v4 = 5;
        break;
      default:
        v3 = *(_DWORD *)a2 + 6;
        continue;
    }
    break;
  }
  *(_BYTE *)(a1 + 16) = v4;
  return a1;
}

_QWORD *assignWithTake for HomeListTwoLinesCellModel(_QWORD *a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;

  if (a1 != (_QWORD *)a2)
  {
    v4 = *((unsigned __int8 *)a1 + 16);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 2:
        case 3:
        case 5:

          break;
        case 1:

          swift_unknownObjectWeakDestroy(a1 + 1);
          break;
        case 4:
          swift_unknownObjectRelease(*a1);
          break;
        default:
          v4 = *(_DWORD *)a1 + 6;
          continue;
      }
      break;
    }
    v5 = *(unsigned __int8 *)(a2 + 16);
    while (2)
    {
      switch(v5)
      {
        case 0:
          v6 = 0;
          *a1 = *(_QWORD *)a2;
          break;
        case 1:
          *a1 = *(_QWORD *)a2;
          swift_unknownObjectWeakTakeInit(a1 + 1, a2 + 8);
          v6 = 1;
          break;
        case 2:
          *a1 = *(_QWORD *)a2;
          v6 = 2;
          break;
        case 3:
          *a1 = *(_QWORD *)a2;
          v6 = 3;
          break;
        case 4:
          *a1 = *(_QWORD *)a2;
          v6 = 4;
          break;
        case 5:
          *a1 = *(_QWORD *)a2;
          v6 = 5;
          break;
        default:
          v5 = *(_DWORD *)a2 + 6;
          continue;
      }
      break;
    }
    *((_BYTE *)a1 + 16) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListTwoLinesCellModel(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 6)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HomeListTwoLinesCellModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_10011F9B8(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 16);
  if (result >= 6)
    return (*(_DWORD *)a1 + 6);
  return result;
}

uint64_t sub_10011F9D4(uint64_t result, unsigned int a2)
{
  if (a2 > 5)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 6;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HomeListTwoLinesCellModel()
{
  return &type metadata for HomeListTwoLinesCellModel;
}

uint64_t sub_10011FA14(uint64_t a1)
{
  return sub_1001205C4(a1, (uint64_t *)&unk_10149D2E0, &qword_10149B588, &qword_10149B580, (uint64_t *)sub_100197998);
}

uint64_t sub_10011FA38(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1000A74D8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6))
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10011FB88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1000A75E4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[10 * v8 + 4];
  if (a1 + 32 < v9 + 80 * v2 && v9 < a1 + 32 + 80 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10011FCE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1000A7700(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10011FE24(uint64_t a1)
{
  return sub_10012012C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1001234B4);
}

void sub_10011FE30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1000A8440(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_10011FF88(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1000A877C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  sub_100008B04(&qword_101497910);
  swift_arrayInitWithCopy(v10);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
}

uint64_t sub_1001200FC(uint64_t a1)
{
  return sub_1001207F8(a1, (unint64_t *)type metadata accessor for MapsFavoriteItem, &qword_10149B5D0, &qword_10149B5C8, (uint64_t *)sub_100197A98);
}

uint64_t sub_100120120(uint64_t a1)
{
  return sub_10012012C(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100123AFC);
}

uint64_t sub_10012012C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

void sub_1001202E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1000A89A8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_100120438(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  *v1 = v3;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5)
      v9 = v4 + v2;
    else
      v9 = v4;
    v3 = sub_1000A72A4(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    *v1 = v3;
    v8 = v3[3] >> 1;
  }
  v10 = v3[2];
  v11 = v8 - v10;
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_19;
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 < v2)
  {
    __break(1u);
    goto LABEL_25;
  }
  v12 = (unint64_t)&v3[4 * v10 + 4];
  if (a1 + 32 < v12 + 32 * v2 && v12 < a1 + 32 + 32 * v2)
    goto LABEL_26;
  swift_arrayInitWithCopy(v12);
  if (v2)
  {
    v14 = v3[2];
    v15 = __OFADD__(v14, v2);
    v16 = v14 + v2;
    if (!v15)
    {
      v3[2] = v16;
      goto LABEL_19;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    v17 = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v17, 1092, 0);
    __break(1u);
    return;
  }
LABEL_19:
  swift_bridgeObjectRelease(a1);
  if (v2 == v11)
LABEL_23:
    *v1 = v3;
}

uint64_t sub_1001205A0(uint64_t a1)
{
  return sub_1001205C4(a1, &qword_10149B560, (unint64_t *)&unk_10149B570, &qword_10149B568, (uint64_t *)sub_100197AEC);
}

uint64_t sub_1001205C4(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_1001236EC(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    v23 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001207D4(uint64_t a1)
{
  return sub_1001207F8(a1, &type metadata accessor for MapsSyncObject, &qword_10149B528, &qword_10149B520, (uint64_t *)sub_1001979F0);
}

uint64_t sub_1001207F8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_1001238F4(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_100120A08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100123D58(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

void sub_100120BC0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_1000A928C(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for PlaceEntity(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

id sub_100120D34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)HomePhotoLookupDataProvider), "initWithSuggestionsDataProvider:", *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 48));
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

_QWORD *sub_100120DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v10[3];
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[3];

  v2 = v1;
  sub_1000AB280(v2 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, &v11);
  v4 = swift_unknownObjectWeakLoadStrong(&v14);
  sub_1000AB2BC((uint64_t)&v11);
  if (!v4)
  {
    v16 = 0u;
    v17 = 0u;
    v15 = 0u;
    goto LABEL_9;
  }
  sub_100139A44(a1, &v15);
  swift_unknownObjectRelease(v4);
  if (!(_QWORD)v15)
  {
LABEL_9:
    sub_100010CC4((uint64_t)&v15, &qword_10149B500);
    return _swiftEmptyArrayStorage;
  }
  v18[0] = v15;
  v18[1] = v16;
  v18[2] = v17;
  sub_10000C1FC((uint64_t)v18 + 8, (uint64_t)&v15, (uint64_t *)&unk_10149B590);
  sub_10000BE48(&v15, (uint64_t)&v11);
  v5 = sub_100008B04(&qword_101496AB0);
  if (!swift_dynamicCast(&v15, &v11, v5, &type metadata for HomeListTwoLinesCellModel, 6))
  {
    v15 = 0uLL;
    LOBYTE(v16) = -1;
    sub_100010CC4((uint64_t)&v15, &qword_1014A0750);
    sub_100084C10((id *)v18);
    return _swiftEmptyArrayStorage;
  }
  sub_100124610((uint64_t)&v15, (uint64_t)v10);
  sub_10011F150((uint64_t)v10, (uint64_t)&v11);
  if (v13 == 2)
  {
    v6 = v11;
LABEL_13:
    v7 = sub_100121278(v6, (uint64_t)v18);
    goto LABEL_14;
  }
  if (v13 == 1)
  {
    v6 = v11;
    sub_100010CC4((uint64_t)&v12, (uint64_t *)&unk_10149B510);
    goto LABEL_13;
  }
  if (v13)
  {
    sub_10011F1C8(v10);
    sub_100084C10((id *)v18);
    sub_10011F1C8(&v11);
    return _swiftEmptyArrayStorage;
  }
  v6 = v11;
  v7 = (unint64_t)sub_100120FA0(v11, (unint64_t)v18);
LABEL_14:
  v8 = v7;

  sub_10011F1C8(v10);
  sub_100084C10((id *)v18);
  return (_QWORD *)v8;
}

_QWORD *sub_100120FA0(void *a1, unint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  _OWORD v25[3];
  unint64_t v26;

  v3 = a1;
  v26 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = objc_msgSend(a1, "sharedTrips");
  v5 = sub_10000E4BC(0, &qword_10149B5A8, GEOSharedNavState_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v22 = v6;
    else
      v22 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v7 = (void *)_CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v6);
    if (v7)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v6);
    return _swiftEmptyArrayStorage;
  }
  v7 = *(void **)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    goto LABEL_17;
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
    {
      __break(1u);
      goto LABEL_26;
    }
    v9 = *(id *)(v6 + 32);
  }
  v7 = v9;
  v10 = objc_msgSend(v3, "sharedTrips", swift_bridgeObjectRelease(v6).n128_f64[0]);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v5);

  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v23 = v11;
    else
      v23 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v13 = swift_bridgeObjectRelease(v11).n128_u64[0];
  if (v12 == 1 && (objc_msgSend(v7, "hasGroupIdentifier", v13) & 1) != 0)
  {
    v14 = swift_allocObject(&unk_1011A3DA0, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16);
    sub_100084BD4(a2, (uint64_t)v25);
    v15 = swift_allocObject(&unk_1011A3FA8, 80, 7);
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v3;
    v16 = v25[1];
    *(_OWORD *)(v15 + 32) = v25[0];
    *(_OWORD *)(v15 + 48) = v16;
    *(_OWORD *)(v15 + 64) = v25[2];
    aBlock[4] = sub_100124B98;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001FABC8;
    aBlock[3] = &unk_1011A3FC0;
    v17 = _Block_copy(aBlock);
    v18 = v3;
    swift_release();
    v19 = sub_100A3CEB8(v17);
    _Block_release(v17);
    v3 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    a2 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v8 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (a2 < v8 >> 1)
    {
LABEL_11:
      v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a2, v3);
      specialized Array._endMutation()(v20);

      return (_QWORD *)v26;
    }
LABEL_26:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, a2 + 1, 1);
    goto LABEL_11;
  }

  return _swiftEmptyArrayStorage;
}

unint64_t sub_100121278(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void **aBlock;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, void *);
  void *v34;
  void *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unint64_t v40;

  v40 = (unint64_t)_swiftEmptyArrayStorage;
  if (objc_msgSend(a1, "availableRemovalBehaviors"))
  {
    v4 = swift_allocObject(&unk_1011A3DA0, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16);
    sub_100084BD4(a2, (uint64_t)&v37);
    v5 = swift_allocObject(&unk_1011A3EE0, 80, 7);
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = a1;
    v6 = v38;
    *(_OWORD *)(v5 + 32) = v37;
    *(_OWORD *)(v5 + 48) = v6;
    *(_OWORD *)(v5 + 64) = v39;
    v35 = sub_100124B14;
    v36 = v5;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_1001FABC8;
    v34 = &unk_1011A3EF8;
    v7 = _Block_copy(&aBlock);
    v8 = a1;
    swift_release();
    v9 = sub_100A3CEB8(v7);
    _Block_release(v7);
    v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
    v12 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v11 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v12 >= v11 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
    v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
    specialized Array._endMutation()(v13);

  }
  if (objc_msgSend(a1, "type") == (id)7)
  {
    v14 = swift_allocObject(&unk_1011A3DA0, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16);
    sub_100084BD4(a2, (uint64_t)&v37);
    v15 = swift_allocObject(&unk_1011A3F30, 80, 7);
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = a1;
    v16 = v38;
    *(_OWORD *)(v15 + 32) = v37;
    *(_OWORD *)(v15 + 48) = v16;
    *(_OWORD *)(v15 + 64) = v39;
    v35 = sub_100124B44;
    v36 = v15;
    aBlock = _NSConcreteStackBlock;
    v32 = 1107296256;
    v33 = sub_1001FABC8;
    v34 = &unk_1011A3F48;
    v17 = _Block_copy(&aBlock);
    v18 = a1;
    swift_release();
    v19 = sub_100A3CFA8(v17);
    _Block_release(v17);
    v20 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
    specialized Array._endMutation()(v23);

  }
  v24 = swift_allocObject(&unk_1011A3DA0, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  swift_retain();
  v25 = sub_1001FFB3C(a2, (uint64_t)sub_100124B38, v24);
  swift_release_n(v24, 2);
  if (v25)
  {
    v26 = v25;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
    v28 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v27 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v28 >= v27 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
    v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
    specialized Array._endMutation()(v29);

  }
  return v40;
}

void sub_1001215C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  _BYTE v14[24];

  v11 = a3 + 16;
  swift_beginAccess(a3 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    a6(a4, a5, a1, a2);

  }
}

void sub_100121650(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];
  _BYTE v11[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a1(1);
    v7 = objc_msgSend((id)objc_opt_self(ParkedCarManager), "sharedManager");
    v8 = swift_allocObject(&unk_1011A3DA0, 24, 7);
    swift_unknownObjectWeakInit(v8 + 16);
    aBlock[4] = sub_100124B50;
    aBlock[5] = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000B3780;
    aBlock[3] = &unk_1011A3F70;
    v9 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, "fetchParkedCar:", v9);
    _Block_release(v9);

  }
}

void sub_100121768(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = (void *)objc_opt_self(GEOAPPortal);
    objc_msgSend(v4, "captureUserAction:target:value:", 2037, 8, 0);
    objc_msgSend(v4, "captureUserAction:target:value:", 2040, 8, 0);

  }
}

void sub_1001217FC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void **v14;
  uint64_t v15;
  uint64_t ObjectType;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  int v21;
  void *v22;
  Class isa;
  id v24;
  void *v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD aBlock[6];
  _OWORD v48[3];
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;

  v46 = a2;
  v43 = a1;
  v7 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void **)&v4[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000AB280((uint64_t)&v4[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], v49);
  v15 = swift_unknownObjectWeakLoadStrong(&v50);
  sub_1000AB2BC((uint64_t)v49);
  v45 = a3;
  v44 = v4;
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_9:
    sub_100010CC4((uint64_t)v9, &qword_101499510);
    v24 = 0;
    goto LABEL_10;
  }
  v42 = a4;
  ObjectType = swift_getObjectType(v4);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v17 = v4;
  else
    v17 = 0;
  if (!v17)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
    __break(1u);
    return;
  }
  v18 = *v46;
  v19 = v4;
  v20 = sub_1001385F0();
  v49[0] = v18;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v49);
  swift_unknownObjectRelease(v15);

  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  a4 = v42;
  if (v21 == 1)
    goto LABEL_9;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v22 = *v14;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v22, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_10:
  sub_1000AB280((uint64_t)v14, v49);
  v25 = (void *)swift_unknownObjectWeakLoadStrong(&v51);
  sub_1000AB2BC((uint64_t)v49);
  if (v25
    && (v26 = objc_msgSend(v25, "homeDeleteDelegate"),
        swift_unknownObjectRelease(v25),
        v26))
  {
    if (v24)
    {
      objc_msgSend(v24, "bounds");
      v28 = v27;
      v30 = v29;
      v32 = v31;
      v34 = v33;
    }
    else
    {
      v32 = 0.0;
      v34 = 0.0;
      v28 = 0.0;
      v30 = 0.0;
    }
    v35 = swift_allocObject(&unk_1011A3DA0, 24, 7);
    swift_unknownObjectWeakInit(v35 + 16);
    sub_100084BD4((uint64_t)v46, (uint64_t)v48);
    v36 = swift_allocObject(&unk_1011A3E90, 96, 7);
    v37 = v48[1];
    *(_OWORD *)(v36 + 24) = v48[0];
    *(_QWORD *)(v36 + 16) = v35;
    *(_OWORD *)(v36 + 40) = v37;
    *(_OWORD *)(v36 + 56) = v48[2];
    *(_QWORD *)(v36 + 72) = v45;
    *(_QWORD *)(v36 + 80) = a4;
    v38 = v43;
    *(_QWORD *)(v36 + 88) = v43;
    aBlock[4] = sub_100124AFC;
    aBlock[5] = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001E2858;
    aBlock[3] = &unk_1011A3EA8;
    v39 = _Block_copy(aBlock);
    swift_retain();
    v40 = v38;
    swift_release();
    objc_msgSend(v26, "confirmDeleteSharedTripWithSummary:sourceView:sourceRect:completion:", v40, v24, v39, v28, v30, v32, v34);
    swift_unknownObjectRelease(v26);

    _Block_release(v39);
  }
  else
  {

  }
}

void sub_100121C48(char a1, uint64_t a2, void **a3, void (*a4)(_QWORD), uint64_t a5, void *a6)
{
  uint64_t v11;
  void *Strong;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  id v33;
  _BYTE v34[40];
  uint64_t v35;
  _BYTE v36[40];
  _BYTE v37[24];

  v11 = a2 + 16;
  swift_beginAccess(a2 + 16, v37, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  if (!Strong)
    goto LABEL_11;
  v13 = Strong;
  if ((a1 & 1) == 0)
  {

LABEL_11:
    a4(0);
    return;
  }
  v14 = (void *)sub_1001FED5C(a3, (uint64_t)a4, a5);
  v15 = sub_100008B04((uint64_t *)&unk_101493B10);
  inited = swift_initStackObject(v15, v36);
  *(_OWORD *)(inited + 16) = xmmword_100E23F50;
  *(_QWORD *)(inited + 32) = v14;
  v35 = inited;
  specialized Array._endMutation()(inited);
  v17 = v14;
  sub_1001FE3BC(v35);
  v18 = objc_msgSend(a6, "sharedTrips", swift_bridgeObjectRelease(v35).n128_f64[0]);
  v19 = sub_10000E4BC(0, &qword_10149B5A8, GEOSharedNavState_ptr);
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v26 = v20;
    else
      v26 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v20);
    if (v27)
      goto LABEL_5;
LABEL_17:
    swift_bridgeObjectRelease(v20);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_17;
LABEL_5:
  if ((v20 & 0xC000000000000001) != 0)
  {
    v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v20);
  }
  else
  {
    if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v21 = *(id *)(v20 + 32);
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "groupIdentifier", swift_bridgeObjectRelease(v20).n128_f64[0]);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend((id)objc_opt_self(MSPSharedTripService), "sharedInstance");
    objc_msgSend(v25, "blockSharedTripWithIdentifier:", v24);

    return;
  }

LABEL_18:
  v28 = swift_initStackObject(v15, v34);
  *(_OWORD *)(v28 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v28 + 32) = v17;
  v35 = v28;
  specialized Array._endMutation()(v28);
  v29 = v35;
  v30 = sub_100124A74();
  v31 = swift_allocError(&type metadata for HomeListSuggestionsSectionController.DeletionError, v30, 0, 0);
  *v32 = 0;
  v33 = v17;
  sub_1001FEC44(v29, v31);

  swift_errorRelease(v31);
  swift_bridgeObjectRelease(v29);

}

void sub_100121EF4(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void **v16;
  uint64_t v17;
  uint64_t ObjectType;
  char *v19;
  void *v20;
  char *v21;
  id v22;
  void *v23;
  Class isa;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  void **v51;
  void **aBlock;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  _QWORD *v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;

  v5 = v4;
  v49 = a4;
  v50 = a3;
  v51 = a2;
  v7 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100B3A5D4();
  if (!v14)
  {
    __break(1u);
    goto LABEL_19;
  }
  v15 = v14;
  objc_msgSend(v14, "feedbackForEntry:action:", a1, 5);

  v16 = (void **)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration];
  sub_1000AB280((uint64_t)&v5[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration], v58);
  v17 = swift_unknownObjectWeakLoadStrong(&v59);
  sub_1000AB2BC((uint64_t)v58);
  v48 = a1;
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_10;
  }
  ObjectType = swift_getObjectType(v5);
  if (swift_conformsToProtocol2(ObjectType, &protocol descriptor for HomeListSectionControllerSubclassing))
    v19 = v5;
  else
    v19 = 0;
  if (!v19)
  {
LABEL_19:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000032, 0x8000000100E468F0, "Maps/HomeListSectionController.swift", 36, 2, 339, 0);
    __break(1u);
    return;
  }
  v20 = *v51;
  v21 = v5;
  v22 = sub_1001385F0();
  v58[0] = v20;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v58);
  swift_unknownObjectRelease(v17);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_10:
    sub_100010CC4((uint64_t)v9, &qword_101499510);
    v25 = 0;
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v23 = *v16;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v25 = objc_msgSend(v23, "cellForItemAtIndexPath:", isa);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_11:
  v26 = v49;
  v27 = (void *)sub_1001FED5C(v51, v50, v49);
  sub_1000AB280((uint64_t)v16, v58);
  v28 = (void *)swift_unknownObjectWeakLoadStrong(&v60);
  sub_1000AB2BC((uint64_t)v58);
  if (v28
    && (v29 = objc_msgSend(v28, "homeDeleteDelegate"),
        swift_unknownObjectRelease(v28),
        v29))
  {
    if (v25)
    {
      objc_msgSend(v25, "bounds");
      v31 = v30;
      v33 = v32;
      v35 = v34;
      v37 = v36;
    }
    else
    {
      v35 = 0.0;
      v37 = 0.0;
      v31 = 0.0;
      v33 = 0.0;
    }
    v38 = swift_allocObject(&unk_1011A3DA0, 24, 7);
    swift_unknownObjectWeakInit(v38 + 16);
    v39 = swift_allocObject(&unk_1011A3DF0, 32, 7);
    *(_QWORD *)(v39 + 16) = v38;
    *(_QWORD *)(v39 + 24) = v27;
    v56 = sub_100124A08;
    v57 = (_QWORD *)v39;
    aBlock = _NSConcreteStackBlock;
    v53 = 1107296256;
    v54 = sub_1001BB8D4;
    v55 = &unk_1011A3E08;
    v40 = _Block_copy(&aBlock);
    v41 = v27;
    swift_release();
    v42 = swift_allocObject(&unk_1011A3DA0, 24, 7);
    swift_unknownObjectWeakInit(v42 + 16);
    v43 = (_QWORD *)swift_allocObject(&unk_1011A3E40, 56, 7);
    v43[2] = v42;
    v43[3] = v41;
    v43[4] = v50;
    v43[5] = v26;
    v44 = v48;
    v43[6] = v48;
    v56 = sub_100124A64;
    v57 = v43;
    aBlock = _NSConcreteStackBlock;
    v53 = 1107296256;
    v54 = sub_100122888;
    v55 = &unk_1011A3E58;
    v45 = _Block_copy(&aBlock);
    v46 = v41;
    swift_retain();
    v47 = v44;
    swift_release();
    objc_msgSend(v29, "viewController:removeMapsSuggestionsEntry:sourceView:sourceRect:startBlock:completionBlock:", 0, v47, v25, v40, v45, v31, v33, v35, v37);
    swift_unknownObjectRelease(v29);

    _Block_release(v45);
    _Block_release(v40);
  }
  else
  {

  }
}

void sub_1001223F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t inited;
  id v8;
  uint64_t v9;
  _BYTE v10[40];
  _BYTE v11[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_100008B04((uint64_t *)&unk_101493B10);
    inited = swift_initStackObject(v6, v10);
    *(_OWORD *)(inited + 16) = xmmword_100E23F50;
    *(_QWORD *)(inited + 32) = a2;
    v9 = inited;
    specialized Array._endMutation()(inited);
    v8 = a2;
    sub_1001FE3BC(v9);
    swift_bridgeObjectRelease(v9);

  }
}

void sub_10012249C(char a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(_QWORD, __n128), uint64_t a6, void *a7)
{
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t inited;
  unint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  __n128 v21;
  id v22;
  __CFString *v23;
  __CFString *v24;
  __CFString *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  _BYTE v30[40];
  _BYTE v31[24];

  v12 = a3 + 16;
  swift_beginAccess(a3 + 16, v31, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  if (Strong)
  {
    v14 = (void *)Strong;
    if ((a1 & 1) == 0)
    {
      v15 = sub_100008B04((uint64_t *)&unk_101493B10);
      inited = swift_initStackObject(v15, v30);
      *(_OWORD *)(inited + 16) = xmmword_100E23F50;
      *(_QWORD *)(inited + 32) = a4;
      v29 = inited;
      specialized Array._endMutation()(inited);
      v17 = sub_100124A74();
      v18 = swift_allocError(&type metadata for HomeListSuggestionsSectionController.DeletionError, v17, 0, 0);
      *v19 = 1;
      v20 = a4;
      sub_1001FEC44(v29, v18);
      swift_errorRelease(v18);
      v21 = swift_bridgeObjectRelease(v29);
      a5(0, v21);
    }
    v22 = objc_msgSend(a7, "proactiveItemType");
    switch((int)v22)
    {
      case 0:
        v23 = CFSTR("PROACTIVE_TYPE_UNKNOWN");
        goto LABEL_29;
      case 1:
        v23 = CFSTR("PROACTIVE_TYPE_ADDRESS");
        goto LABEL_29;
      case 2:
        v23 = CFSTR("PROACTIVE_TYPE_FAVORITE");
        goto LABEL_29;
      case 3:
        v23 = CFSTR("PROACTIVE_TYPE_PARKED_CAR");
        goto LABEL_29;
      case 4:
        v23 = CFSTR("PROACTIVE_TYPE_CALENDAR");
        goto LABEL_29;
      case 5:
        v23 = CFSTR("PROACTIVE_TYPE_BOOKED_CAR");
        goto LABEL_29;
      case 6:
        v23 = CFSTR("PROACTIVE_TYPE_TABLE_RESERVATION");
        goto LABEL_29;
      case 7:
        v23 = CFSTR("PROACTIVE_TYPE_TABLE_QUEUE");
        goto LABEL_29;
      case 8:
        v23 = CFSTR("PROACTIVE_TYPE_APP_CONNECTION");
        goto LABEL_29;
      case 9:
        v23 = CFSTR("PROACTIVE_TYPE_RESUME_NAV");
        goto LABEL_29;
      case 10:
        v23 = CFSTR("PROACTIVE_TYPE_TRANSIT_NAV");
        goto LABEL_29;
      case 11:
        v23 = CFSTR("PROACTIVE_TYPE_RECENTS_AND_PINS");
        goto LABEL_29;
      case 12:
        v23 = CFSTR("PROACTIVE_TYPE_LOW_GAS");
        goto LABEL_29;
      case 13:
        v23 = CFSTR("PROACTIVE_TYPE_VENUES");
        goto LABEL_29;
      case 14:
        v23 = CFSTR("PROACTIVE_TYPE_FIM_HOTEL");
        goto LABEL_29;
      case 15:
        v23 = CFSTR("PROACTIVE_TYPE_FIM_CAR_RENTAL");
        goto LABEL_29;
      case 16:
        v23 = CFSTR("PROACTIVE_TYPE_FIM_FLIGHT");
        goto LABEL_29;
      case 17:
        v23 = CFSTR("PROACTIVE_TYPE_FIM_TICKETED_EVENT");
        goto LABEL_29;
      case 18:
        v23 = CFSTR("PROACTIVE_TYPE_PORTRAIT");
        goto LABEL_29;
      case 19:
        v23 = CFSTR("PROACTIVE_TYPE_USERPLACE");
        goto LABEL_29;
      case 20:
        v23 = CFSTR("PROACTIVE_TYPE_VEHICLEADVERTISEMENT");
        goto LABEL_29;
      case 21:
        v23 = CFSTR("PROACTIVE_TYPE_RATING_REQUEST");
        goto LABEL_29;
      case 22:
        v23 = CFSTR("PROACTIVE_TYPE_FAVORITE_BUTTON");
LABEL_29:
        v24 = v23;
        break;
      default:
        v23 = (__CFString *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("(unknown: %i)"), v22));
        break;
    }
    v25 = v23;
    switch(a2)
    {
      case 0:
        v28 = (void *)objc_opt_self(GEOAPPortal);
        objc_msgSend(v28, "captureUserAction:target:value:", 18, 8, 0);
        objc_msgSend(v28, "captureUserAction:target:value:", 2167, 8, v25);
        break;
      case 1:
      case 2:
        v26 = (void *)objc_opt_self(GEOAPPortal);
        objc_msgSend(v26, "captureUserAction:target:value:", 2038, 8, 0);
        objc_msgSend(v26, "captureUserAction:target:value:", 2041, 8, v25);
        break;
      case 4:
      case 8:
        v27 = (void *)objc_opt_self(GEOAPPortal);
        objc_msgSend(v27, "captureUserAction:target:value:", 2166, 8, 0);
        objc_msgSend(v27, "captureUserAction:target:value:", 2168, 8, v25);
        break;
      default:
        break;
    }

  }
}

uint64_t sub_100122888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;

  v6 = *(void (**)(uint64_t, uint64_t, __n128))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = swift_retain(v5);
  v6(a2, a3, v7);
  return swift_release(v5);
}

void sub_1001228D0(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;
  _BYTE v11[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (a1)
    {
      sub_1000AB280(Strong + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v9);
      v6 = (void *)swift_unknownObjectWeakLoadStrong(&v10);
      v7 = a1;
      sub_1000AB2BC((uint64_t)v9);
      if (v6)
      {
        v8 = objc_msgSend(v6, "homeParkedCarActionDelegate");
        swift_unknownObjectRelease(v6);
        if (v8)
        {
          v7 = v7;
          objc_msgSend(v8, "editLocationForParkedCar:", v7);
          swift_unknownObjectRelease(v8);

        }
      }

    }
  }
}

void sub_1001229BC()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider));
}

id sub_1001229E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListSuggestionsSectionController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for HomeListSuggestionsSectionController()
{
  return objc_opt_self(_TtC4Maps36HomeListSuggestionsSectionController);
}

uint64_t sub_100122A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  v1 = sub_100008B04((uint64_t *)&unk_101493B10);
  v2 = swift_allocObject(v1, 56, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E25080;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 48);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController_sharedTripsDataProvider);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  v5 = v3;
  v6 = v4;
  v7 = sub_100120D34();
  *(_QWORD *)(v2 + 48) = v7;
  specialized Array._endMutation()(v7);
  return v2;
}

uint64_t sub_100122B04@<X0>(uint64_t a1@<X8>)
{
  Swift::String v2;
  Swift::String v3;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v6;
  unint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t result;
  _BYTE v13[8];
  Swift::String v14;
  Swift::String v15;

  if (objc_msgSend((id)objc_opt_self(MapsSuggestionsSiri), "isEnabled"))
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v2._countAndFlagsBits = 0xD000000000000023;
    v14._countAndFlagsBits = 0xD000000000000037;
    v14._object = (void *)0x8000000100E4B0E0;
    v2._object = (void *)0x8000000100E4B090;
    v3._object = (void *)0x8000000100E4B0C0;
    v3._countAndFlagsBits = 0xD000000000000010;
    v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v3, v14);
    object = v6._object;
    countAndFlagsBits = v6._countAndFlagsBits;
    v7 = 0xEF736E6F69747365;
    v8 = 0x67677553656D6F48;
  }
  else
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v9._countAndFlagsBits = 0xD000000000000024;
    v15._countAndFlagsBits = 0xD000000000000034;
    v15._object = (void *)0x8000000100E4B050;
    v9._object = (void *)0x8000000100E4B020;
    v10._countAndFlagsBits = 0x5420646572616853;
    v10._object = (void *)0xEC00000073706972;
    v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v10, v15);
    object = v11._object;
    countAndFlagsBits = v11._countAndFlagsBits;
    v7 = 0xEF73706972546465;
    v8 = 0x72616853656D6F48;
  }
  *(_QWORD *)a1 = countAndFlagsBits;
  *(_QWORD *)(a1 + 8) = object;
  *(_WORD *)(a1 + 16) = 0;
  swift_unknownObjectWeakInit(v13);
  swift_unknownObjectWeakAssign(v13, 0);
  result = sub_1000207BC((uint64_t)v13, a1 + 24, (uint64_t *)&unk_101498C70);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  return result;
}

_QWORD *sub_100122CCC()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  _QWORD *v11;

  v1 = v0;
  v2 = _swiftEmptyArrayStorage;
  if (MSPSharedTripReceivingAvailable())
  {
    v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController_sharedTripsDataProvider], "sharedTripSummaries");
    v4 = sub_10000E4BC(0, &qword_10149B4F8, off_101197F78);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

    v6 = v1;
    v2 = sub_100123F60(v5);
    swift_bridgeObjectRelease(v5);

  }
  sub_10011FE30((uint64_t)v2);
  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration
                                                                + 48], "suggestions"));
  v8 = sub_10000E4BC(0, &qword_10149B4F0, MapsSuggestionsEntry_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  v10 = v1;
  v11 = sub_1001241CC(v9, (uint64_t)v10);
  swift_bridgeObjectRelease(v9);

  sub_10011FE30((uint64_t)v11);
  return _swiftEmptyArrayStorage;
}

id sub_100122E24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  Class isa;
  id v8;
  _BYTE v10[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_100120DBC(a1);

  }
  else
  {
    v6 = _swiftEmptyArrayStorage;
  }
  sub_10000E4BC(0, (unint64_t *)&unk_1014A0740, UIContextualAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  v8 = objc_msgSend((id)objc_opt_self(UISwipeActionsConfiguration), "configurationWithActions:", isa);

  return v8;
}

uint64_t sub_100122EF0@<X0>(uint64_t a1@<X8>)
{
  return sub_100122B04(a1);
}

uint64_t sub_100122F08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = swift_allocObject(&unk_1011A3DA0, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  swift_retain();
  v3 = sub_1001FDFC8(a1, (uint64_t)sub_1001234AC, v2);
  swift_release_n(v2, 2);
  return v3;
}

void sub_100122F80(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v3 = v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
  v4 = objc_msgSend(*(id *)(v3 + 48), "suggestions");
  v5 = sub_10000E4BC(0, &qword_10149B4F0, MapsSuggestionsEntry_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  v7 = a1;
  v8 = (void *)sub_10012464C(v6, v7);
  swift_bridgeObjectRelease(v6);

  if (v8)
  {
    sub_1000AB280(v3, v12);
    v9 = (void *)swift_unknownObjectWeakLoadStrong(&v13);
    sub_1000AB2BC((uint64_t)v12);
    if (v9
      && (v10 = objc_msgSend(v9, "homePOIEnrichmentActionDelegate"),
          swift_unknownObjectRelease(v9),
          v10))
    {
      v11 = objc_msgSend(v8, "geoMapItem");
      objc_msgSend(v10, "addRatingsForMapItem:", v11);

      swift_unknownObjectRelease(v10);
    }
    else
    {

    }
  }
}

uint64_t sub_1001231E8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  Class isa;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v17[2];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  objc_super v23[5];
  objc_super v24;

  v3 = v2;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v24.receiver = v3;
  v24.super_class = (Class)type metadata accessor for HomeListSuggestionsSectionController();
  objc_msgSendSuper2(&v24, "collectionView:didSelectItemAtIndexPath:", a1, isa);

  sub_1000AB280((uint64_t)v3 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v23);
  Strong = swift_unknownObjectWeakLoadStrong(&v23[1].super_class);
  sub_1000AB2BC((uint64_t)v23);
  if (Strong)
  {
    sub_100139A44(a2, v23);
    swift_unknownObjectRelease(Strong);
  }
  else
  {
    memset(v23, 0, 48);
  }
  sub_10000C1FC((uint64_t)v23, (uint64_t)&v21, &qword_10149B500);
  if (v21)
  {
    sub_10000C1FC((uint64_t)&v22, (uint64_t)v17, (uint64_t *)&unk_10149B590);
    sub_10000BE48(v17, (uint64_t)v18);
    sub_100084C10(&v21);
    v8 = v19;
    v9 = v20;
    sub_10000BE88(v18, v19);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
    sub_10000BEAC(v18);
    if (v10)
    {
      v11 = objc_opt_self(MapsSuggestionsEntry);
      v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
      if (v12)
      {
        v13 = objc_msgSend(v12, "analyticsGrouping");
        if (!v13)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v15 = v14;
          v13 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v15);
        }
        objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", 2039, 8, v13);
        swift_unknownObjectRelease(v10);

      }
      else
      {
        swift_unknownObjectRelease(v10);
      }
    }
  }
  else
  {
    sub_100010CC4((uint64_t)&v21, &qword_10149B500);
  }
  return sub_100010CC4((uint64_t)v23, &qword_10149B500);
}

uint64_t sub_100123488()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

id sub_1001234AC(uint64_t a1)
{
  uint64_t v1;

  return sub_100122E24(a1, v1);
}

uint64_t sub_1001234B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100124BBC(&qword_10149B540, (uint64_t *)&unk_10149B530);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100008B04((uint64_t *)&unk_10149B530);
          v13 = sub_1001979F0(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001236C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001236EC(a1, a2, a3, &qword_101499CB8, &qword_10149B5D8, &qword_101499CB0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100197998);
}

uint64_t sub_1001236EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_100124BBC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_100008B04(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          swift_unknownObjectRetain(*v24);
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_100008B04(a4);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001238F4(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_100124BBC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_100008B04(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100123AFC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100124BBC(&qword_10149B5C0, &qword_10149A9F0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100008B04(&qword_10149A9F0);
          v13 = sub_1001979F0(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10000E4BC(0, &qword_10149AA30, MapsSuggestionsLocationOfInterest_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100123D10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001238F4(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for FavoriteItem, &qword_10149B5B8, &qword_10149B5B0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001979F0);
}

uint64_t sub_100123D34(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001238F4(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for MapsSyncObject, &qword_10149B528, &qword_10149B520, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001979F0);
}

uint64_t sub_100123D58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100124BBC(&qword_10149B558, &qword_10149B550);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100008B04(&qword_10149B550);
          v13 = sub_1001979F0(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008B04(&qword_10149B548);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_100123F60(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_20;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v3 = _swiftEmptyArrayStorage;
    v27 = v1 & 0xC000000000000001;
    for (i = 4; ; ++i)
    {
      v5 = v27 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v1) : *(id *)(v1 + 8 * i);
      v6 = v5;
      v7 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v8 = objc_msgSend(v5, "_maps_diffableDataSourceIdentifier");
      if (v8)
      {
        v9 = v8;
        v10 = sub_1001FD8EC();
        v11 = v3;
        v12 = v1;
        v13 = v2;
        v14 = objc_msgSend(v10, "identifierPathByAppendingIdentifier:", v9);

        *(_QWORD *)&v26 = &type metadata for HomeListTwoLinesCellModel;
        *((_QWORD *)&v26 + 1) = sub_100124564();
        v15 = swift_allocObject(&unk_1011A3DC8, 33, 7);
        *(_QWORD *)(v15 + 16) = v6;
        *(_BYTE *)(v15 + 32) = 0;
        *(_QWORD *)&v24 = v14;
        *((_QWORD *)&v24 + 1) = v15;
        v2 = v13;
        v1 = v12;
        v3 = v11;
        v7 = i - 3;
LABEL_13:
        v21 = v24;
        v22 = v25;
        v23 = v26;
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
          v3 = sub_1000A8440(0, v3[2] + 1, 1, v3);
        v17 = v3[2];
        v16 = v3[3];
        if (v17 >= v16 >> 1)
          v3 = sub_1000A8440((_QWORD *)(v16 > 1), v17 + 1, 1, v3);
        v3[2] = v17 + 1;
        v18 = &v3[6 * v17];
        v18[3] = v22;
        v18[4] = v23;
        v18[2] = v21;
        goto LABEL_5;
      }
      v25 = 0u;
      v26 = 0u;
      v24 = 0u;

      if ((_QWORD)v24)
        goto LABEL_13;
      sub_100010CC4((uint64_t)&v24, &qword_10149B500);
LABEL_5:
      if (v7 == v2)
      {
        swift_bridgeObjectRelease(v1);
        return v3;
      }
    }
    __break(1u);
LABEL_20:
    if (v1 < 0)
      v19 = v1;
    else
      v19 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v19);
  }
  swift_bridgeObjectRelease(v1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1001241CC(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[8];

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_34;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v30 = v3 & 0xC000000000000001;
    v5 = _swiftEmptyArrayStorage;
    for (i = 4; ; ++i)
    {
      v7 = v30 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3) : *(id *)(v3 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v10 = objc_msgSend(v7, "_maps_diffableDataSourceIdentifier");
      if (!v10)
      {
        v36 = 0u;
        v37 = 0u;
        v35 = 0u;

        if ((_QWORD)v35)
          goto LABEL_25;
        goto LABEL_4;
      }
      v11 = v10;
      v31 = v5;
      v12 = v3;
      v13 = v4;
      v14 = sub_1001FD8EC();
      v15 = objc_msgSend(v14, "identifierPathByAppendingIdentifier:", v11);

      if (objc_msgSend(v8, "type") != (id)21)
      {
        *(_QWORD *)&v32 = v8;
        v21 = swift_unknownObjectWeakInit(v38);
        v22 = swift_unknownObjectWeakAssign(v21, a2);
        sub_1000207BC(v22, (uint64_t)&v32 + 8, (uint64_t *)&unk_10149B510);
        v20 = 1;
        v4 = v13;
        goto LABEL_20;
      }
      if ((objc_msgSend((id)objc_opt_self(RatingRequestHomeAvailability), "shouldShowRatingRequestSuggestionsOnProactiveTray") & 1) != 0&& (v16 = sub_100120D34(), v17 = objc_msgSend(v16, "resultForSuggestionsEntry:", v8), v16, v17))
      {
        v4 = v13;
        if (v17 == (id)1)
        {
          *(_QWORD *)&v32 = v8;
          v20 = 2;
LABEL_20:
          v3 = v12;
LABEL_21:
          v5 = v31;
          LOBYTE(v33) = v20;
          *(_QWORD *)&v37 = &type metadata for HomeListTwoLinesCellModel;
          *((_QWORD *)&v37 + 1) = sub_100124564();
          *((_QWORD *)&v35 + 1) = swift_allocObject(&unk_1011A3DC8, 33, 7);
          sub_100124610((uint64_t)&v32, *((_QWORD *)&v35 + 1) + 16);
          *(_QWORD *)&v35 = v15;
          if (v15)
            goto LABEL_25;
          goto LABEL_4;
        }
        v3 = v12;
        if (v17 == (id)2)
        {
          *(_QWORD *)&v32 = v8;
          v18 = swift_unknownObjectWeakInit(v38);
          v19 = swift_unknownObjectWeakAssign(v18, a2);
          sub_1000207BC(v19, (uint64_t)&v32 + 8, (uint64_t *)&unk_10149B510);
          v20 = 1;
          goto LABEL_21;
        }

        v36 = 0u;
        v37 = 0u;
        v35 = 0u;

      }
      else
      {

        v36 = 0u;
        v37 = 0u;
        v35 = 0u;

        v4 = v13;
        v3 = v12;
      }
      v5 = v31;
      if ((_QWORD)v35)
      {
LABEL_25:
        v32 = v35;
        v33 = v36;
        v34 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
          v5 = sub_1000A8440(0, v5[2] + 1, 1, v5);
        v24 = v5[2];
        v23 = v5[3];
        if (v24 >= v23 >> 1)
          v5 = sub_1000A8440((_QWORD *)(v23 > 1), v24 + 1, 1, v5);
        v5[2] = v24 + 1;
        v25 = &v5[6 * v24];
        v26 = v32;
        v27 = v34;
        v25[3] = v33;
        v25[4] = v27;
        v25[2] = v26;
        goto LABEL_5;
      }
LABEL_4:
      sub_100010CC4((uint64_t)&v35, &qword_10149B500);
LABEL_5:
      if (v9 == v4)
      {
        swift_bridgeObjectRelease(v3);
        return v5;
      }
    }
    __break(1u);
LABEL_34:
    if (v3 < 0)
      v28 = v3;
    else
      v28 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v28);
  }
  swift_bridgeObjectRelease(v3);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_100124564()
{
  unint64_t result;

  result = qword_10149B508;
  if (!qword_10149B508)
  {
    result = swift_getWitnessTable(byte_100E2CC70, &type metadata for HomeListTwoLinesCellModel);
    atomic_store(result, (unint64_t *)&qword_10149B508);
  }
  return result;
}

uint64_t sub_1001245A8()
{
  uint64_t v0;

  switch(*(_BYTE *)(v0 + 32))
  {
    case 0:
    case 2:
    case 3:
    case 5:

      break;
    case 1:

      swift_unknownObjectWeakDestroy(v0 + 24);
      break;
    case 4:
      swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
      break;
    default:
      return swift_deallocObject(v0, 33, 7);
  }
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100124610(uint64_t a1, uint64_t a2)
{
  initializeWithTake for HomeListTwoLinesCellModel(a2, a1);
  return a2;
}

uint64_t sub_10012464C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  void *v21;

  if ((unint64_t)a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    for (i = 4; ; ++i)
    {
      v5 = i - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a1);
      v7 = i - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_19;
LABEL_9:
      v21 = v6;
      v8 = objc_msgSend(v6, "uniqueIdentifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12 = objc_msgSend(a2, "lookupIdentifier");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      if (v9 == v13 && v11 == v15)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v11);
LABEL_18:
        v3 = (uint64_t)v21;
        swift_bridgeObjectRelease(v11);
        return v3;
      }
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v13, v15, 0);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v15);
      if ((v17 & 1) != 0)
      {
        v11 = a1;
        goto LABEL_18;
      }

      if (v7 == v3)
      {
        swift_bridgeObjectRelease(a1);
        return 0;
      }
    }
    v6 = *(id *)(a1 + 8 * i);
    v7 = i - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_9;
LABEL_19:
    __break(1u);
LABEL_20:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v18);
  }
  swift_bridgeObjectRelease(a1);
  return v3;
}

uint64_t sub_100124810(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14[2];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _OWORD v20[5];

  sub_1000AB280(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v20);
  Strong = swift_unknownObjectWeakLoadStrong((char *)&v20[1] + 8);
  sub_1000AB2BC((uint64_t)v20);
  if (Strong)
  {
    sub_100139A44(a1, v20);
    swift_unknownObjectRelease(Strong);
  }
  else
  {
    memset(v20, 0, 48);
  }
  sub_10000C1FC((uint64_t)v20, (uint64_t)&v18, &qword_10149B500);
  if (v18)
  {
    sub_10000C1FC((uint64_t)&v19, (uint64_t)v14, (uint64_t *)&unk_10149B590);
    sub_10000BE48(v14, (uint64_t)v15);
    sub_100084C10(&v18);
    v4 = v16;
    v5 = v17;
    sub_10000BE88(v15, v16);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
    sub_10000BEAC(v15);
    if (v6)
    {
      v7 = objc_opt_self(MapsSuggestionsEntry);
      v8 = (void *)swift_dynamicCastObjCClass(v6, v7);
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "analyticsGrouping");
        if (!v10)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v12 = v11;
          v10 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v12);
        }
        objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", 359, 8, v10);

        objc_msgSend((id)objc_opt_self(HomeAnalyticsHelpers), "captureDisplayActionForSuggestionsEntry:", v9);
      }
      swift_unknownObjectRelease(v6);
    }
  }
  else
  {
    sub_100010CC4((uint64_t)&v18, &qword_10149B500);
  }
  return sub_100010CC4((uint64_t)v20, &qword_10149B500);
}

uint64_t sub_1001249DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100124A08()
{
  uint64_t v0;

  sub_1001223F8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

double sub_100124A10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100124A20(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100124A28()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100124A64(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_10012249C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(_QWORD, __n128))(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48));
}

unint64_t sub_100124A74()
{
  unint64_t result;

  result = qword_10149B5A0;
  if (!qword_10149B5A0)
  {
    result = swift_getWitnessTable("9s7", &type metadata for HomeListSuggestionsSectionController.DeletionError);
    atomic_store(result, (unint64_t *)&qword_10149B5A0);
  }
  return result;
}

uint64_t sub_100124AB8()
{
  uint64_t v0;

  swift_release();

  sub_10000BEAC((_QWORD *)(v0 + 32));
  swift_release();

  return swift_deallocObject(v0, 96, 7);
}

void sub_100124AFC(char a1)
{
  uint64_t v1;

  sub_100121C48(a1, *(_QWORD *)(v1 + 16), (void **)(v1 + 24), *(void (**)(_QWORD))(v1 + 72), *(_QWORD *)(v1 + 80), *(void **)(v1 + 88));
}

void sub_100124B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001215C8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100121EF4);
}

void sub_100124B38()
{
  uint64_t v0;

  sub_100121768(v0);
}

void sub_100124B44(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_100121650(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_100124B50(void *a1)
{
  uint64_t v1;

  sub_1001228D0(a1, v1);
}

uint64_t sub_100124B5C()
{
  uint64_t v0;

  swift_release();

  sub_10000BEAC((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

void sub_100124B98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001215C8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1001217FC);
}

uint64_t sub_100124BBC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10000E5D4(a2);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HomeListSuggestionsSectionController.DeletionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100124C48 + 4 * byte_100E2CCCB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100124C7C + 4 * byte_100E2CCC6[v4]))();
}

uint64_t sub_100124C7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100124C84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100124C8CLL);
  return result;
}

uint64_t sub_100124C98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100124CA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100124CA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100124CAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HomeListSuggestionsSectionController.DeletionError()
{
  return &type metadata for HomeListSuggestionsSectionController.DeletionError;
}

unint64_t sub_100124CCC()
{
  unint64_t result;

  result = qword_10149B5E0;
  if (!qword_10149B5E0)
  {
    result = swift_getWitnessTable("Qs7", &type metadata for HomeListSuggestionsSectionController.DeletionError);
    atomic_store(result, (unint64_t *)&qword_10149B5E0);
  }
  return result;
}

double sub_100124D40()
{
  double result;

  result = 390.0;
  xmmword_10149B5F0 = xmmword_100E2CDD0;
  return result;
}

void sub_100124D58()
{
  qword_10149B600 = 0x4030000000000000;
}

void sub_100124D68()
{
  qword_10149B608 = 0x403C000000000000;
}

void sub_100124D78()
{
  qword_10149B610 = 0x403A000000000000;
}

void sub_100124D88()
{
  char *v0;
  char *v1;
  unint64_t v2;
  uint64_t v3;
  id v4;

  v1 = &v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8];
  if (v2)
  {
    v3 = *(_QWORD *)v1 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0)
      v3 = HIBYTE(v2) & 0xF;
    if (!v3)
    {
      *(_QWORD *)v1 = 0;
      *((_QWORD *)v1 + 1) = 0;
      swift_bridgeObjectRelease(v2);
    }
  }
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v4 = sub_100125880();
    objc_msgSend(v4, "setRightButtonEnabled:", *((_QWORD *)v1 + 1) != 0);

  }
}

uint64_t MacPlaceNoteEditViewController.dismissHandler.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler);
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler, v4, 0, 0);
  v2 = *v1;
  sub_10000C128(*v1, v1[1]);
  return v2;
}

uint64_t MacPlaceNoteEditViewController.dismissHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_10000BF74(v6, v7);
}

uint64_t (*MacPlaceNoteEditViewController.dismissHandler.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_100125060()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  NSString v4;
  id v5;
  id v6;
  NSString v7;
  Swift::String v9;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v9._object = (void *)0x8000000100E4B660;
  v1._object = (void *)0x8000000100E4B640;
  v2._countAndFlagsBits = 0x746F4E2074696445;
  v2._object = (void *)0xE900000000000065;
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v2, v9)._object;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setText:", v4, swift_bridgeObjectRelease(object).n128_f64[0]);

  v5 = objc_msgSend((id)objc_opt_self(UIFont), "system22Bold");
  objc_msgSend(v0, "setFont:", v5);

  v6 = v0;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setAccessibilityIdentifier:", v7);

  return v6;
}

id sub_1001251F0()
{
  id v0;
  id v1;
  id v2;
  NSString v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  objc_msgSend(v0, "setBackgroundColor:", v1);

  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "setCornerRadius:", 10.0);

  objc_msgSend(v0, "setClipsToBounds:", 1);
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v3);

  return v0;
}

id sub_100125300(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  NSString *v12;
  id v13;
  id v14;
  unint64_t v15;
  id v16;
  NSString v17;
  Class isa;
  id v19;
  id v20;
  NSString v21;
  _BYTE v23[72];

  v2 = objc_msgSend(objc_allocWithZone((Class)UITextView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(MKFontManager);
  v4 = objc_msgSend(v3, "sharedManager");
  v5 = objc_msgSend(v4, "bodyFont");
  swift_unknownObjectRelease(v4);
  objc_msgSend(v2, "setFont:", v5);

  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v2, "setTextColor:", v6);

  v7 = objc_msgSend((id)objc_opt_self(MapsUILocalizationBridge), "addANotePromptText");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v9 = v8;

  v10 = sub_100008B04(&qword_10149B740);
  inited = swift_initStackObject(v10, v23);
  *(_OWORD *)(inited + 16) = xmmword_100E22F40;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v12 = NSFontAttributeName;
  v13 = objc_msgSend(v3, "sharedManager");
  v14 = objc_msgSend(v13, "bodyFont");
  swift_unknownObjectRelease(v13);
  *(_QWORD *)(inited + 64) = sub_10000E4BC(0, (unint64_t *)&unk_10149ED50, UIFont_ptr);
  *(_QWORD *)(inited + 40) = v14;
  v15 = sub_100009A30(inited);
  v16 = objc_allocWithZone((Class)NSAttributedString);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  type metadata accessor for Key(0);
  sub_1000AFC58();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v19 = objc_msgSend(v16, "initWithString:attributes:", v17, isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  objc_msgSend(v2, "_maps_setAttributedPlaceholder:", v19);
  objc_msgSend(v2, "setDelegate:", a1);
  objc_msgSend(v2, "setScrollEnabled:", 1);
  v20 = v2;
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setAccessibilityIdentifier:", v21);

  return v20;
}

id sub_100125600(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *a1;
  v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    v5 = *(id *)(v2 + *a1);
  }
  else
  {
    v6 = (void *)a2(v2);
    v7 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v6;
    v5 = v6;

    v4 = 0;
  }
  v8 = v4;
  return v5;
}

id sub_10012565C(uint64_t a1)
{
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v14;

  v2 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v14._countAndFlagsBits = 0xD000000000000024;
  v14._object = (void *)0x8000000100E4B5D0;
  v3._object = (void *)0x8000000100E4B5B0;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  v4._countAndFlagsBits = 0x6574656C6544;
  v4._object = (void *)0xE600000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v4, v14)._object;
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:forState:", v6, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "systemRedColor");
  objc_msgSend(v2, "setTintColor:", v8);

  v9 = objc_msgSend(v7, "systemRedColor");
  objc_msgSend(v2, "setTitleColor:forState:", v9, 0);

  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = objc_msgSend(v2, "titleLabel");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v7, "systemRedColor");
    objc_msgSend(v11, "setTextColor:", v12);

  }
  objc_msgSend(v2, "setRole:", 3);
  objc_msgSend(v2, "addTarget:action:forControlEvents:", a1, "deleteTapped", 64);
  return v2;
}

id sub_100125880()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)MacFooterView), "initWithNoBlurRightSideButtonsOfType:", 16);
    objc_msgSend(v4, "setDelegate:", v0);
    v3 = v4;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setAccessibilityIdentifier:", v5);

    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id MacPlaceNoteEditViewController.__allocating_init(note:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return MacPlaceNoteEditViewController.init(note:)(a1, a2);
}

id MacPlaceNoteEditViewController.init(note:)(uint64_t a1, unint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  id result;
  void *v17;
  objc_super v18;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v7 = &v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView] = 0;
  if (a2)
    v9 = a1 & 0xFFFFFFFFFFFFLL;
  else
    v9 = 0;
  if (a2)
    v10 = a2;
  else
    v10 = 0xE000000000000000;
  v11 = v3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v10);
  v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v12 = v9;
  if (!v12)
  {
    swift_bridgeObjectRelease(a2);
    a1 = 0;
    a2 = 0;
  }
  v13 = &v11[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_originalNote];
  *(_QWORD *)v13 = a1;
  *((_QWORD *)v13 + 1) = a2;
  v14 = *((_QWORD *)v7 + 1);
  *(_QWORD *)v7 = a1;
  *((_QWORD *)v7 + 1) = a2;
  swift_bridgeObjectRetain(a2);

  swift_bridgeObjectRelease(v14);
  v18.receiver = v11;
  v18.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  result = objc_msgSend(v15, "cardPresentationController");
  if (result)
  {
    v17 = result;
    objc_msgSend(result, "setTakesAvailableHeight:", 1);

    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall MacPlaceNoteEditViewController.viewDidLoad()()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v11, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  v4 = objc_msgSend(v0, "cardPresentationController");
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = v4;
  objc_msgSend(v4, "setTakesAvailableHeight:", 1);

  v6 = objc_msgSend(v0, "cardPresentationController");
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = v6;
  objc_msgSend(v6, "setPresentedModally:", 1);

  v8 = objc_msgSend(v0, "cardPresentationController");
  if (!v8)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v9 = v8;
  objc_msgSend(v8, "setAllowsSwipeToDismiss:", 0);

  sub_100125CFC();
  sub_100125FC4();
  if (objc_msgSend(v0, "isViewLoaded"))
  {
    v10 = sub_100125880();
    objc_msgSend(v10, "setRightButtonEnabled:", *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8] != 0);

  }
}

void sub_100125CFC()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  uint64_t v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;

  v1 = objc_msgSend(v0, "headerView");
  if (v1)
  {
    v2 = v1;
    if (qword_101490EF0 != -1)
      swift_once(&qword_101490EF0, sub_100124D40);
    objc_msgSend(v0, "setPreferredContentSize:", xmmword_10149B5F0);
    v3 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_100125060);
    objc_msgSend(v2, "addSubview:", v3);

    v4 = objc_msgSend(v0, "view");
    if (v4)
    {
      v5 = v4;
      v6 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
      objc_msgSend(v5, "addSubview:", v6);

      v7 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
      v8 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
      objc_msgSend(v7, "addSubview:", v8);

      v9 = objc_msgSend(v0, "view");
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, "keyboardLayoutGuide");

        objc_msgSend(v11, "setFollowsUndockedKeyboard:", 1);
        v12 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
        v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8];
        if (v14)
        {
          swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8]);
          v15 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v13 = swift_bridgeObjectRelease(v14).n128_u64[0];
        }
        else
        {
          v15 = 0;
        }
        objc_msgSend(v12, "setText:", v15, v13);

        v16 = objc_msgSend(v0, "view");
        if (v16)
        {
          v17 = v16;
          v18 = sub_100125880();
          objc_msgSend(v17, "addSubview:", v18);

          v19 = sub_100125880();
          v20 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton, (uint64_t (*)(uint64_t))sub_10012565C);
          objc_msgSend(v19, "addSubview:", v20);

          return;
        }
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
}

void sub_100125FC4()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  Class isa;

  v1 = objc_msgSend(v0, "headerView");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100008B04((uint64_t *)&unk_101493B10);
    v4 = swift_allocObject(v3, 168, 7);
    *(_OWORD *)(v4 + 16) = xmmword_100E2CDE0;
    v5 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_100125060);
    v6 = objc_msgSend(v5, "leadingAnchor");

    v7 = objc_msgSend(v2, "leadingAnchor");
    if (qword_101490F08 != -1)
      swift_once(&qword_101490F08, sub_100124D78);
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, *(double *)&qword_10149B610);

    *(_QWORD *)(v4 + 32) = v8;
    v9 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_100125060);
    v10 = objc_msgSend(v9, "topAnchor");

    v11 = objc_msgSend(v2, "topAnchor");
    if (qword_101490F00 != -1)
      swift_once(&qword_101490F00, sub_100124D68);
    v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, *(double *)&qword_10149B608);

    *(_QWORD *)(v4 + 40) = v12;
    v13 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_100125060);
    v14 = objc_msgSend(v13, "trailingAnchor");

    v15 = objc_msgSend(v2, "trailingAnchor");
    v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, -*(double *)&qword_10149B610);

    *(_QWORD *)(v4 + 48) = v16;
    v17 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView, (uint64_t (*)(void))sub_100125060);
    v18 = objc_msgSend(v17, "bottomAnchor");

    v19 = objc_msgSend(v2, "bottomAnchor");
    if (qword_101490EF8 != -1)
      swift_once(&qword_101490EF8, sub_100124D58);
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -*(double *)&qword_10149B600);

    *(_QWORD *)(v4 + 56) = v20;
    v21 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
    v22 = objc_msgSend(v21, "leadingAnchor");

    v23 = objc_msgSend(v0, "view");
    if (v23)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, "layoutMarginsGuide");

      v26 = objc_msgSend(v25, "leadingAnchor");
      v27 = objc_msgSend(v22, "constraintEqualToAnchor:", v26);

      *(_QWORD *)(v4 + 64) = v27;
      v28 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
      v29 = objc_msgSend(v28, "topAnchor");

      v30 = objc_msgSend(v2, "bottomAnchor");
      v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

      *(_QWORD *)(v4 + 72) = v31;
      v32 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
      v33 = objc_msgSend(v32, "trailingAnchor");

      v34 = objc_msgSend(v0, "view");
      if (v34)
      {
        v35 = v34;
        v36 = objc_msgSend(v34, "layoutMarginsGuide");

        v37 = objc_msgSend(v36, "trailingAnchor");
        v38 = objc_msgSend(v33, "constraintEqualToAnchor:", v37);

        *(_QWORD *)(v4 + 80) = v38;
        v39 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
        v40 = objc_msgSend(v39, "bottomAnchor");

        v41 = sub_100125880();
        v42 = objc_msgSend(v41, "topAnchor");

        v43 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v42, -*(double *)&qword_10149B600);
        *(_QWORD *)(v4 + 88) = v43;
        v44 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
        v45 = objc_msgSend(v44, "leadingAnchor");

        v46 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
        v47 = objc_msgSend(v46, "leadingAnchor");

        v48 = objc_msgSend(v45, "constraintEqualToAnchor:", v47);
        *(_QWORD *)(v4 + 96) = v48;
        v49 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
        v50 = objc_msgSend(v49, "topAnchor");

        v51 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
        v52 = objc_msgSend(v51, "topAnchor");

        v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
        *(_QWORD *)(v4 + 104) = v53;
        v54 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
        v55 = objc_msgSend(v54, "trailingAnchor");

        v56 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
        v57 = objc_msgSend(v56, "trailingAnchor");

        v58 = objc_msgSend(v55, "constraintEqualToAnchor:", v57);
        *(_QWORD *)(v4 + 112) = v58;
        v59 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView, (uint64_t (*)(uint64_t))sub_100125300);
        v60 = objc_msgSend(v59, "bottomAnchor");

        v61 = sub_1000BB954(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView, (uint64_t (*)(void))sub_1001251F0);
        v62 = objc_msgSend(v61, "bottomAnchor");

        v63 = objc_msgSend(v60, "constraintEqualToAnchor:", v62);
        *(_QWORD *)(v4 + 120) = v63;
        v64 = sub_100125880();
        v65 = objc_msgSend(v64, "leadingAnchor");

        v66 = objc_msgSend(v0, "view");
        if (v66)
        {
          v67 = v66;
          v68 = objc_msgSend(v66, "leadingAnchor");

          v69 = objc_msgSend(v65, "constraintEqualToAnchor:", v68);
          *(_QWORD *)(v4 + 128) = v69;
          v70 = sub_100125880();
          v71 = objc_msgSend(v70, "trailingAnchor");

          v72 = objc_msgSend(v0, "view");
          if (v72)
          {
            v73 = v72;
            v74 = objc_msgSend(v72, "trailingAnchor");

            v75 = objc_msgSend(v71, "constraintEqualToAnchor:", v74);
            *(_QWORD *)(v4 + 136) = v75;
            v76 = sub_100125880();
            v77 = objc_msgSend(v76, "bottomAnchor");

            v78 = objc_msgSend(v0, "view");
            if (v78)
            {
              v79 = v78;
              v80 = (void *)objc_opt_self(NSLayoutConstraint);
              v81 = objc_msgSend(v79, "bottomAnchor");

              v82 = objc_msgSend(v77, "constraintEqualToAnchor:", v81);
              *(_QWORD *)(v4 + 144) = v82;
              v83 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton, (uint64_t (*)(uint64_t))sub_10012565C);
              v84 = objc_msgSend(v83, "leadingAnchor");

              v85 = sub_100125880();
              v86 = objc_msgSend(v85, "leadingAnchor");

              v87 = objc_msgSend(v84, "constraintEqualToAnchor:constant:", v86, *(double *)&qword_10149B600);
              *(_QWORD *)(v4 + 152) = v87;
              v88 = sub_100125600(&OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton, (uint64_t (*)(uint64_t))sub_10012565C);
              v89 = objc_msgSend(v88, "centerYAnchor");

              v90 = sub_100125880();
              v91 = objc_msgSend(v90, "centerYAnchor");

              v92 = objc_msgSend(v89, "constraintEqualToAnchor:", v91);
              *(_QWORD *)(v4 + 160) = v92;
              specialized Array._endMutation()(v93);
              sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
              isa = Array._bridgeToObjectiveC()().super.isa;
              objc_msgSend(v80, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

              return;
            }
            goto LABEL_19;
          }
LABEL_18:
          __break(1u);
LABEL_19:
          __break(1u);
          return;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

double _s4Maps30MacPlaceNoteEditViewControllerC09macFooterF17RightButtonTappedyySo0biF0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  void (*v3)(BOOL, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  _BYTE v12[24];

  v1 = v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler;
  *(_QWORD *)&result = swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler, v12, 0, 0).n128_u64[0];
  v3 = *(void (**)(BOOL, uint64_t, uint64_t))v1;
  if (*(_QWORD *)v1)
  {
    v4 = *(_QWORD *)(v1 + 8);
    v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_originalNote);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_originalNote + 8);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8);
    v9 = (v6 | v7) == 0;
    if (v6)
      v10 = v7 == 0;
    else
      v10 = 1;
    if (!v10)
    {
      if (*v5 == v8 && v6 == v7)
        v9 = 1;
      else
        v9 = _stringCompareWithSmolCheck(_:_:expecting:)(*v5, v6, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note), *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8), 0);
    }
    sub_10000C128((uint64_t)v3, v4);
    swift_bridgeObjectRetain(v7);
    v3((v9 & 1) == 0, v8, v7);
    sub_10000BF74((uint64_t)v3, v4);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

void sub_100126BF8(char *a1, uint64_t a2, char a3)
{
  char *v5;
  void (*v6)(_QWORD, _QWORD, _QWORD);
  uint64_t v7;
  char *v8;
  char v9[24];

  v5 = &a1[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler];
  swift_beginAccess(&a1[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler], v9, 0, 0);
  v6 = *(void (**)(_QWORD, _QWORD, _QWORD))v5;
  if (*(_QWORD *)v5)
  {
    v7 = *((_QWORD *)v5 + 1);
    v8 = a1;
    sub_10000C128((uint64_t)v6, v7);
    v6(a3 & 1, 0, 0);
    sub_10000BF74((uint64_t)v6, v7);

  }
}

Swift::Bool __swiftcall MacPlaceNoteEditViewController.textView(_:shouldChangeTextIn:replacementText:)(UITextView _, _NSRange shouldChangeTextIn, Swift::String replacementText)
{
  int64_t location;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Bool result;

  location = shouldChangeTextIn.location;
  v4 = -[objc_class text](_.super.super.super.super.isa, "text", shouldChangeTextIn.length, replacementText._countAndFlagsBits, replacementText._object);
  result = 1;
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

    v9 = String.count.getter(v6, v8);
    swift_bridgeObjectRelease(v8);
    if (location > 10000 && v9 > 10000)
      return 0;
  }
  return result;
}

Swift::Void __swiftcall MacPlaceNoteEditViewController.textViewDidChange(_:)(UITextView a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  v2 = -[objc_class text](a1.super.super.super.super.isa, "text");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note + 8);
  *v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease(v8);
  sub_100124D88();
}

id CollectionPickerContaineeViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void MacPlaceNoteEditViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.MacPlaceNoteEditViewController", 35, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

Swift::Void __swiftcall MacPlaceNoteEditViewController.macFooterViewLeftButtonTapped(_:)(MacFooterView *a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v4;
  __n128 v5;
  _BYTE v6[24];

  v2 = v1 + OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler;
  swift_beginAccess(v2, v6, 0, 0);
  v3 = *(void (**)(_QWORD, _QWORD, _QWORD, __n128))v2;
  if (*(_QWORD *)v2)
  {
    v4 = *(_QWORD *)(v2 + 8);
    v5 = swift_retain();
    v3(0, 0, 0, v5);
    sub_10000BF74((uint64_t)v3, v4);
  }
}

void sub_1001271E8()
{
  char *v0;
  char *v1;
  char *v2;

  v1 = &v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_note];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController_dismissHandler];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___headerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textContainerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___textView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___deleteButton] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps30MacPlaceNoteEditViewController____lazy_storage___macFooterView] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E41970, "Maps/MacPlaceNotesEditViewController.swift", 42, 2, 103, 0);
  __break(1u);
}

uint64_t type metadata accessor for MacPlaceNoteEditViewController()
{
  return objc_opt_self(_TtC4Maps30MacPlaceNoteEditViewController);
}

uint64_t sub_1001272C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001272E4(char a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1001A83F4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

double sub_1001272EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001272FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_100127308()
{
  unint64_t result;

  result = qword_10149B748;
  if (!qword_10149B748)
  {
    result = swift_getWitnessTable(byte_100E2CE90, &type metadata for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149B748);
  }
  return result;
}

uint64_t sub_10012734C()
{
  return sub_100010D70(&qword_10149B750, &qword_10149B758, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_100127378()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4BC0);
  sub_10000E918(v20, (uint64_t)qword_1014D4BC0);
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E4B680);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "Selecting this option pauses spoken audio like Radio and Podcasts when spone directions are announced", 101, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_10012758C(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4BD8);
  sub_10000E918(v1, (uint64_t)qword_1014D4BD8);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x8000000100E4B820);
}

uint64_t sub_1001275EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4BF0);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4BF0);
  IntentDescription.init(stringLiteral:)(0xD00000000000004FLL, 0x8000000100E4B7D0);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_100127674()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E2D378);
  qword_1014D4C08 = result;
  return result;
}

uint64_t sub_100127698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_1001276B4, 0, 0);
}

uint64_t sub_1001276B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101490F28 != -1)
    swift_once(&qword_101490F28, sub_100127674);
  v2 = qword_1014D4C08;
  *(_QWORD *)(v0 + 80) = qword_1014D4C08;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149B858, &qword_10149B860, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_1001277B4;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_1001277B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_100127834;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100127834()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4C08;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_1001278C8()
{
  double result;

  if (qword_101490F28 != -1)
    swift_once(&qword_101490F28, sub_100127674);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_10012790C()
{
  unint64_t result;

  result = qword_10149B760;
  if (!qword_10149B760)
  {
    result = swift_getWitnessTable(byte_100E2CF20, &type metadata for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149B760);
  }
  return result;
}

unint64_t sub_100127954()
{
  unint64_t result;

  result = qword_10149B768;
  if (!qword_10149B768)
  {
    result = swift_getWitnessTable(byte_100E2CF48, &type metadata for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149B768);
  }
  return result;
}

uint64_t sub_100127998(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101069204, 1) + 8);
}

uint64_t sub_1001279BC(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100127308();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_1001279FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F18, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4BD8, (uint64_t)sub_10012758C, a1);
}

uint64_t sub_100127A20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101490F20 != -1)
    swift_once(&qword_101490F20, sub_1001275EC);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4BF0);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_100127A80(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149B874);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_1001276B4, 0, 0);
}

uint64_t sub_100127AE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100128648();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100127B0C()
{
  return 0xD000000000000036;
}

unint64_t sub_100127B2C()
{
  unint64_t result;

  result = qword_10149B778;
  if (!qword_10149B778)
  {
    result = swift_getWitnessTable(byte_100E2CF94, &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B778);
  }
  return result;
}

unint64_t sub_100127B74()
{
  unint64_t result;

  result = qword_10149B780;
  if (!qword_10149B780)
  {
    result = swift_getWitnessTable(byte_100E2D18C, &type metadata for DirectionsPauseSpokenDirectionsQuery);
    atomic_store(result, (unint64_t *)&qword_10149B780);
  }
  return result;
}

unint64_t sub_100127BBC()
{
  unint64_t result;

  result = qword_10149B788;
  if (!qword_10149B788)
  {
    result = swift_getWitnessTable("}s7", &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B788);
  }
  return result;
}

unint64_t sub_100127C04()
{
  unint64_t result;

  result = qword_10149B790;
  if (!qword_10149B790)
  {
    result = swift_getWitnessTable("es7", &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B790);
  }
  return result;
}

unint64_t sub_100127C4C()
{
  unint64_t result;

  result = qword_10149B798;
  if (!qword_10149B798)
  {
    result = swift_getWitnessTable("Ms7", &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B798);
  }
  return result;
}

unint64_t sub_100127C94()
{
  unint64_t result;

  result = qword_10149B7A0;
  if (!qword_10149B7A0)
  {
    result = swift_getWitnessTable("}r7", &type metadata for DirectionsPauseSpokenDirectionsQuery);
    atomic_store(result, (unint64_t *)&qword_10149B7A0);
  }
  return result;
}

uint64_t sub_100127CD8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_100127CF0, 0, 0);
}

uint64_t sub_100127CF0()
{
  uint64_t v0;
  uint64_t v1;
  Block_layout *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  unsigned __int8 BOOL;
  unsigned __int8 v10;
  unsigned __int8 *v11;

  v1 = qword_1014C8C40[0];
  v2 = &stru_1011A4208;
  if (v1 != -1)
    dispatch_once(qword_1014C8C40, &stru_1011A4208);

  v3 = (id)qword_1014C8C38;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "path"));
  v5 = (id)_CFPreferencesCopyAppValueWithContainer(CFSTR("NavVolumeSettingPauseSpokenAudio"), CFSTR("com.apple.Maps"), v4);

  v6 = NavigationConfig_SpokenGuidancePauseSpokenAudio[1];
  if (v5)
  {
    if ((_GEOConfigHasValue(NavigationConfig_SpokenGuidancePauseSpokenAudio[0], v6) & 1) == 0)
    {
      v7 = objc_msgSend(v5, "BOOLValue");
      GEOConfigSetBOOL(NavigationConfig_SpokenGuidancePauseSpokenAudio[0], NavigationConfig_SpokenGuidancePauseSpokenAudio[1], v7);
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[MSPMapsPaths mapsApplicationContainerPaths](MSPMapsPaths, "mapsApplicationContainerPaths"));
    _CFPreferencesSetValueWithContainer(CFSTR("NavVolumeSettingPauseSpokenAudio"), 0, CFSTR("com.apple.Maps"), kCFPreferencesCurrentUser, kCFPreferencesAnyHost, objc_msgSend(v8, "homeDirectory"));

    BOOL = objc_msgSend(v5, "BOOLValue");
  }
  else
  {
    BOOL = GEOConfigGetBOOL(NavigationConfig_SpokenGuidancePauseSpokenAudio[0], v6);
  }
  v10 = BOOL;
  v11 = *(unsigned __int8 **)(v0 + 16);

  *v11 = v10;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100127E60(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_100127E7C, 0, 0);
}

uint64_t sub_100127E7C()
{
  uint64_t v0;
  int BOOL;

  GEOConfigSetSyncBOOL(NavigationConfig_SpokenGuidancePauseSpokenAudio, *((_QWORD *)&NavigationConfig_SpokenGuidancePauseSpokenAudio + 1), *(unsigned __int8 *)(v0 + 16));
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100127EEC()
{
  unint64_t result;

  result = qword_10149B7A8;
  if (!qword_10149B7A8)
  {
    result = swift_getWitnessTable("mr7", &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B7A8);
  }
  return result;
}

unint64_t sub_100127F34()
{
  unint64_t result;

  result = qword_10149B7B0;
  if (!qword_10149B7B0)
  {
    result = swift_getWitnessTable("\rs7", &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B7B0);
  }
  return result;
}

unint64_t sub_100127F7C()
{
  unint64_t result;

  result = qword_10149B7B8;
  if (!qword_10149B7B8)
  {
    result = swift_getWitnessTable(byte_100E2D0DC, &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B7B8);
  }
  return result;
}

unint64_t sub_100127FC4()
{
  unint64_t result;

  result = qword_10149B7C0;
  if (!qword_10149B7C0)
  {
    result = swift_getWitnessTable(byte_100E2D134, &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B7C0);
  }
  return result;
}

uint64_t sub_100128008@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1001281D0();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100128044@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F10, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4BC0, (uint64_t)sub_100127378, a1);
}

uint64_t sub_100128068()
{
  return sub_100010D70(&qword_10149B7C8, &qword_10149B7D0, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_100128094(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100127B2C();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001280D0()
{
  unint64_t result;

  result = qword_10149B7D8;
  if (!qword_10149B7D8)
  {
    result = swift_getWitnessTable(byte_100E2D164, &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, (unint64_t *)&qword_10149B7D8);
  }
  return result;
}

uint64_t sub_100128114(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001281D0();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10012814C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100127FC4();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100128188()
{
  unint64_t result;

  result = qword_10149B7E0;
  if (!qword_10149B7E0)
  {
    result = swift_getWitnessTable(byte_100E2D1CC, &type metadata for DirectionsPauseSpokenDirectionsQuery);
    atomic_store(result, (unint64_t *)&qword_10149B7E0);
  }
  return result;
}

unint64_t sub_1001281D0()
{
  unint64_t result;

  result = qword_10149B7E8[0];
  if (!qword_10149B7E8[0])
  {
    result = swift_getWitnessTable(byte_100E2CF64, &type metadata for DirectionsPauseSpokenDirectionsEntity);
    atomic_store(result, qword_10149B7E8);
  }
  return result;
}

uint64_t sub_100128214(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10012826C, 0, 0);
}

uint64_t sub_10012826C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149B758);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E4B680);
  v3 = sub_100010D70(&qword_10149B858, &qword_10149B860, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149B848, 0, &unk_10149B850, 0, &type metadata for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10012832C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100127B74();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100128398()
{
  unint64_t result;

  result = qword_10149B800;
  if (!qword_10149B800)
  {
    result = swift_getWitnessTable("er7", &type metadata for DirectionsPauseSpokenDirectionsQuery);
    atomic_store(result, (unint64_t *)&qword_10149B800);
  }
  return result;
}

unint64_t sub_1001283E0()
{
  unint64_t result;

  result = qword_10149B808[0];
  if (!qword_10149B808[0])
  {
    result = swift_getWitnessTable("=p7", &type metadata for DirectionsPauseSpokenDirectionsQuery);
    atomic_store(result, qword_10149B808);
  }
  return result;
}

uint64_t sub_100128428(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100127B74();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100128494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100127B74();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100128500()
{
  unint64_t result;

  result = qword_10149B820;
  if (!qword_10149B820)
  {
    result = swift_getWitnessTable("%p7", &type metadata for DirectionsPauseSpokenDirectionsQuery);
    atomic_store(result, (unint64_t *)&qword_10149B820);
  }
  return result;
}

unint64_t sub_100128548()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149B828;
  if (!qword_10149B828)
  {
    v1 = sub_10000E5D4(qword_10149B830);
    v2 = sub_100127F7C();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149B828);
  }
  return result;
}

uint64_t sub_1001285AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100127C94();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for DirectionsPauseSpokenDirectionsQuery()
{
  return &type metadata for DirectionsPauseSpokenDirectionsQuery;
}

ValueMetadata *type metadata accessor for DirectionsPauseSpokenDirectionsEntity()
{
  return &type metadata for DirectionsPauseSpokenDirectionsEntity;
}

ValueMetadata *type metadata accessor for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value()
{
  return &type metadata for DirectionsPauseSpokenDirectionsEntity.UpdateIntent_value;
}

uint64_t sub_100128648()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149B868);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000027, 0x8000000100E4B750);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_100127B2C();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000048, 0x8000000100E4B780);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_10012896C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

void sub_100128978(id a1)
{
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(objc_alloc((Class)LSApplicationRecord), "initWithBundleIdentifier:allowPlaceholder:error:", CFSTR("com.apple.Maps"), 0, 0);
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "dataContainerURL"));
  v3 = (id)qword_1014C8C38;
  qword_1014C8C38 = v2;

}

uint64_t sub_1001289DC(char a1)
{
  NSBundle v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  const char *v7;
  unint64_t v9;

  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v1.super.isa = (Class)qword_1014D4B80;
      v2 = 0xD000000000000028;
      v3 = 0xD000000000000054;
      v9 = 0x8000000100E4B8A0;
      v4 = 0x8000000100E4B870;
      v5 = 0x206C6C4120656553;
      v6 = 0xEF73746E65636552;
      return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
    }
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v1.super.isa = (Class)qword_1014D4B80;
    v2 = 0xD00000000000002ALL;
    v3 = 0xD00000000000004BLL;
    v9 = 0x8000000100E4B950;
    v4 = 0x8000000100E4B900;
    v7 = "See All My Guides";
LABEL_18:
    v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
    v5 = 0xD000000000000011;
    return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
  }
  if (qword_101490F30 != -1)
    swift_once(&qword_101490F30, sub_10012902C);
  if (byte_1014D4C10 != 1)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v1.super.isa = (Class)qword_1014D4B80;
    v2 = 0xD00000000000002ALL;
    v3 = 0xD00000000000004ELL;
    v9 = 0x8000000100E4B9F0;
    v4 = 0x8000000100E4B9A0;
    v7 = "See All Favorites";
    goto LABEL_18;
  }
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v1.super.isa = (Class)qword_1014D4B80;
  v2 = 0xD000000000000027;
  v3 = 0xD00000000000004BLL;
  v9 = 0x8000000100E4BA70;
  v4 = 0x8000000100E4BA40;
  v5 = 0x206C6C4120656553;
  v6 = 0xEE0064656E6E6950;
  return NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v2, (Swift::String_optional)0, v1, *(Swift::String *)&v5, *(Swift::String *)&v3)._countAndFlagsBits;
}

uint64_t sub_100128C54(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ScrollView(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t sub_100128CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for ScrollView(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v5 - 8))(a1, a2, v5);
}

uint64_t sub_100128D00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for ScrollView(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t sub_100128D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for ScrollView(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  return a1;
}

uint64_t sub_100128D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for ScrollView(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a1, a2, v5);
  return a1;
}

uint64_t sub_100128DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for ScrollView(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  return a1;
}

uint64_t sub_100128E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for ScrollView(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a1, a2, v5);
  return a1;
}

uint64_t sub_100128E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100128E68);
}

uint64_t sub_100128E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = type metadata accessor for ScrollView(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, a2, v5);
}

uint64_t sub_100128EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100128EB4);
}

uint64_t sub_100128EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for ScrollView(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a2, v6);
}

uint64_t type metadata accessor for RTLScrollView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10001A6E8(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RTLScrollView);
}

uint64_t sub_100128F04(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_1010692A4, 1);
}

uint64_t sub_100128F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_100128F50@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v10;

  v4 = type metadata accessor for ScrollView(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - v6;
  swift_getWitnessTable((const char *)&protocol conformance descriptor for ScrollView<A>, v4);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, v2, v4);
  v8(a2, (uint64_t)v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100129000(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for ScrollView(255, *a1, a1[1]);
  return swift_getWitnessTable((const char *)&protocol conformance descriptor for ScrollView<A>, v1);
}

uint64_t sub_10012902C()
{
  uint64_t result;

  result = MapsFeature_IsEnabled_MyPlacesFeatures();
  byte_1014D4C10 = result;
  return result;
}

id sub_10012918C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(__int128 *, uint64_t);
  uint64_t v6;
  void *v7;
  __int128 v9;
  __int128 v10;

  v3 = a3;
  v5 = *(uint64_t (**)(__int128 *, uint64_t))(a1 + 32);
  if (!a2)
  {
    v9 = 0u;
    v10 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v10 + 1) = swift_getObjectType();
  *(_QWORD *)&v9 = a2;
  if (v3)
  {
LABEL_3:
    v6 = sub_10000E4BC(0, &qword_10149F6C0, UIMenuElement_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v6);
  }
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain(a2);
  v7 = (void *)v5(&v9, v3);
  swift_release();
  swift_bridgeObjectRelease(v3);
  sub_10000C180((uint64_t)&v9);
  return v7;
}

id sub_1001292B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  void *v8;

  swift_unknownObjectRetain(a3);
  v8 = (void *)a5(a3, a4);
  swift_unknownObjectRelease(a3);
  return v8;
}

id LibraryUIUtilities.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryUIUtilities();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for LibraryUIUtilities()
{
  return objc_opt_self(_TtC4Maps18LibraryUIUtilities);
}

id LibraryUIUtilities.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryUIUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100129484(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  uint64_t v17;
  int v18;
  int v19;

  v2 = objc_msgSend(a1, "heightAnchor");
  v3 = objc_msgSend(v2, "constraintEqualToConstant:", 32.0);

  type metadata accessor for UILayoutPriority(0);
  v5 = v4;
  v19 = 1144750080;
  v18 = 1065353216;
  v6 = sub_10012A028();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v17, &v19, &v18, v5, v6);
  LODWORD(v7) = v17;
  objc_msgSend(v3, "setPriority:", v7);
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  v9 = sub_100008B04((uint64_t *)&unk_101493B10);
  v10 = swift_allocObject(v9, 48, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100E250A0;
  *(_QWORD *)(v10 + 32) = v3;
  v11 = v3;
  v12 = objc_msgSend(a1, "heightAnchor");
  v13 = objc_msgSend(v12, "constraintGreaterThanOrEqualToConstant:", 32.0);

  *(_QWORD *)(v10 + 40) = v13;
  v17 = v10;
  specialized Array._endMutation()(v14);
  v15 = v17;
  sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

}

id sub_100129630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  id v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  NSString v20;
  uint64_t v22;
  Swift::String v23;

  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - v9;
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v23._countAndFlagsBits = 0xD000000000000046;
  v23._object = (void *)0x8000000100E4BBC0;
  v11._object = (void *)0x8000000100E4BBA0;
  v11._countAndFlagsBits = 0xD000000000000012;
  v12._countAndFlagsBits = 6579265;
  v12._object = (void *)0xE300000000000000;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v12, v23);
  v14 = objc_msgSend((id)objc_opt_self(UIButtonConfiguration), "_maps_pillButtonConfigurationWithImage:scalingImageForDynamicText:scalingTitleForDynamicText:", 1, 0, 0);
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain(v13._object);
  UIButton.Configuration.title.setter(v13._countAndFlagsBits, v13._object);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v15);

  UIButton.Configuration.image.setter(v16);
  sub_10000E4BC(0, &qword_10149B920, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v17 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
  sub_100129484(v17);
  objc_msgSend(v17, "addTarget:action:forControlEvents:", a1, a2, 64);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v17);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  swift_bridgeObjectRelease(v13._object);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setAccessibilityIdentifier:", v20);

  return v19;
}

id sub_1001298D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  NSString v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a6;
  v10 = type metadata accessor for UIButton.Configuration(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - v15;
  v17 = objc_msgSend((id)objc_opt_self(UIButtonConfiguration), "_maps_pillButtonConfigurationWithImage:scalingImageForDynamicText:scalingTitleForDynamicText:", 1, 0, 0);
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain(a2);
  UIButton.Configuration.title.setter(a1, a2);
  swift_bridgeObjectRetain(a4);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v19 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v18);

  UIButton.Configuration.image.setter(v19);
  sub_10000E4BC(0, &qword_10149B920, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  v20 = (void *)UIButton.init(configuration:primaryAction:)(v13, 0);
  sub_100129484(v20);
  objc_msgSend(v20, "addTarget:action:forControlEvents:", a5, v24, 64);
  v21 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v20);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  return v21;
}

id sub_100129AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSString v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v22;

  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - v9;
  v11 = objc_msgSend((id)objc_opt_self(UIButtonConfiguration), "_maps_roundPillSymbolButtonConfigurationScalingImageForDynamicText:", 0);
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  UIButton.Configuration.image.setter(v13);
  sub_10000E4BC(0, &qword_10149B920, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v14 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
  sub_100129484(v14);
  v15 = objc_msgSend(v14, "widthAnchor");
  v16 = objc_msgSend(v14, "heightAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  objc_msgSend(v17, "setActive:", 1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  objc_msgSend(v14, "addTarget:action:forControlEvents:", a1, a2, 64);
  v18 = v14;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityIdentifier:", v19);

  v20 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v18);
  return v20;
}

id sub_100129D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSString v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  NSString v20;
  id v21;
  _QWORD aBlock[6];

  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)aBlock - v9;
  v11 = objc_msgSend((id)objc_opt_self(UIButtonConfiguration), "_maps_roundPillSymbolButtonConfigurationScalingImageForDynamicText:", 0);
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  UIButton.Configuration.image.setter(v13);
  sub_10000E4BC(0, &qword_10149B920, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v14 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
  sub_100129484(v14);
  v15 = objc_msgSend(v14, "widthAnchor");
  v16 = objc_msgSend(v14, "heightAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  objc_msgSend(v17, "setActive:", 1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  objc_msgSend(v14, "setShowsMenuAsPrimaryAction:", 1);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10012918C;
  aBlock[3] = &unk_1011A45A0;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v14, "_setMenuProvider:", v18);
  _Block_release(v18);
  v19 = v14;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setAccessibilityIdentifier:", v20);

  v21 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v19);
  return v21;
}

double sub_10012A010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10012A020(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10012A028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149E130;
  if (!qword_10149E130)
  {
    type metadata accessor for UILayoutPriority(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for UILayoutPriority, v1);
    atomic_store(result, (unint64_t *)&qword_10149E130);
  }
  return result;
}

id sub_10012A070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSString v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  id v21;
  uint64_t v23;

  v4 = type metadata accessor for UIButton.Configuration(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - v9;
  v11 = objc_msgSend((id)objc_opt_self(UIButtonConfiguration), "_maps_roundPillSymbolButtonConfigurationScalingImageForDynamicText:", 0);
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  UIButton.Configuration.image.setter(v13);
  sub_10000E4BC(0, &qword_10149B920, UIButton_ptr);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  v14 = (void *)UIButton.init(configuration:primaryAction:)(v7, 0);
  sub_100129484(v14);
  v15 = objc_msgSend(v14, "widthAnchor");
  v16 = objc_msgSend(v14, "heightAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  objc_msgSend(v17, "setActive:", 1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  objc_msgSend(v14, "addTarget:action:forControlEvents:", a1, a2, 64);
  v18 = v14;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityIdentifier:", v19);

  v20 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v18, "setTintColor:", v20);

  v21 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v18);
  return v21;
}

id sub_10012A31C()
{
  id v0;
  NSString v1;
  id v2;
  id v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setText:", v1);

  v2 = objc_msgSend((id)objc_opt_self(UIFont), "_maps_boldSystemFontWithSize:", 27.0);
  objc_msgSend(v0, "setFont:", v2);

  v3 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v0);
  objc_msgSend(v3, "setAccessibilityTraits:", UIAccessibilityTraitStaticText);
  objc_msgSend(v3, "setBackgroundImage:forState:barMetrics:", 0, 1, 0);

  return v3;
}

uint64_t sub_10012A424()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10012A448(uint64_t a1, objc_class *a2)
{
  uint64_t v2;

  return sub_1001C5D64(a1, a2, *(_QWORD *)(v2 + 16));
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitAddress()
{
  return &type metadata for PlaceSummaryUnitAddress;
}

uint64_t _s4Maps23PlaceSummaryUnitAddressV27PlaceSummaryUnitAddressTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10012A4B4 + 4 * byte_100E2D455[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10012A4E8 + 4 * asc_100E2D450[v4]))();
}

uint64_t sub_10012A4E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012A4F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10012A4F8);
  return result;
}

uint64_t sub_10012A504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10012A50CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10012A510(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10012A518(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitAddress.PlaceSummaryUnitAddressType()
{
  return &type metadata for PlaceSummaryUnitAddress.PlaceSummaryUnitAddressType;
}

unint64_t sub_10012A538()
{
  unint64_t result;

  result = qword_10149B928;
  if (!qword_10149B928)
  {
    result = swift_getWitnessTable("Mr7", &type metadata for PlaceSummaryUnitAddress.PlaceSummaryUnitAddressType);
    atomic_store(result, (unint64_t *)&qword_10149B928);
  }
  return result;
}

BOOL sub_10012A57C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), a1);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_10012A644(void *a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  char v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[2];
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v22, *(_QWORD *)(a3 + 40));
    sub_10002CB34((uint64_t)v22, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v9 = ~v7;
      while (1)
      {
        v15 = *(_OWORD *)(*(_QWORD *)(a3 + 48) + 16 * v8);
        v10 = (id)v15;
        v11 = sub_100008B04(&qword_101494000);
        if (!swift_dynamicCast(&v19, &v15, v11, &type metadata for AnyHashable, 6))
          break;
        v22[0] = v19;
        v22[1] = v20;
        v23 = v21;
        v18[0] = a1;
        v18[1] = a2;
        v12 = a1;
        if ((swift_dynamicCast(&v15, v18, v11, &type metadata for AnyHashable, 6) & 1) == 0)
        {
          v17 = 0;
          v15 = 0u;
          v16 = 0u;
          sub_100012C08((uint64_t)&v15);
          sub_100012C48((uint64_t)v22);
          goto LABEL_5;
        }
        v19 = v15;
        v20 = v16;
        v21 = v17;
        v13 = static AnyHashable.== infix(_:_:)(v22, &v19);
        sub_100012C48((uint64_t)&v19);
        sub_100012C48((uint64_t)v22);

        if ((v13 & 1) != 0)
          return 1;
LABEL_6:
        v8 = (v8 + 1) & v9;
        if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          return 0;
      }
      v21 = 0;
      v19 = 0u;
      v20 = 0u;
      sub_100012C08((uint64_t)&v19);
LABEL_5:

      goto LABEL_6;
    }
  }
  return 0;
}

uint64_t sub_10012A810(void *a1, uint64_t a2)
{
  return sub_10012B334(a1, a2, (unint64_t *)&unk_1014994F0, VGChargingNetwork_ptr);
}

uint64_t sub_10012A824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_10012A958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD __s1[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(__s1, *(_QWORD *)(a3 + 40));
    Data.hash(into:)(__s1, a1, a2);
    v6 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(a3 + 32));
    if (((*(_QWORD *)(a3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      __asm { BR              X8 }
  }
  return 0;
}

uint64_t sub_10012B320(void *a1, uint64_t a2)
{
  return sub_10012B334(a1, a2, (unint64_t *)&unk_10149BA50, &off_101196DA8);
}

uint64_t sub_10012B334(void *a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  id v6;
  char v7;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  id v20;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    return v7 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40)),
        v12 = -1 << *(_BYTE *)(a2 + 32),
        v13 = v11 & ~v12,
        v14 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0))
  {
LABEL_11:
    v17 = 0;
    return v17 & 1;
  }
  sub_10000E4BC(0, a3, a4);
  v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v13);
  v16 = static NSObject.== infix(_:_:)(v15, a1);

  if ((v16 & 1) == 0)
  {
    v18 = ~v12;
    v19 = (v13 + 1) & v18;
    if (((*(_QWORD *)(v14 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0)
    {
      do
      {
        v20 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v19);
        v17 = static NSObject.== infix(_:_:)(v20, a1);

        if ((v17 & 1) != 0)
          break;
        v19 = (v19 + 1) & v18;
      }
      while (((*(_QWORD *)(v14 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0);
      return v17 & 1;
    }
    goto LABEL_11;
  }
  v17 = 1;
  return v17 & 1;
}

void *PlaceCardCollectionMembershipProvider.mapItem.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

double PlaceCardCollectionMembershipProvider.mapItem.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem, v11, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = objc_msgSend((id)objc_opt_self(CollectionManager), "sharedManager");
  v7 = objc_msgSend(v6, "currentCollections");

  v8 = sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  sub_10012B6F8(v9);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void *sub_10012B6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *result;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void **v13;
  void *v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _BYTE v25[24];
  _BYTE v26[24];
  _QWORD *v27;

  v2 = v1;
  v27 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = (void *)_CocoaArrayWrapper.endIndex.getter(v12);
    v4 = (uint64_t)result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(a1);
    v11 = _swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (void *)swift_bridgeObjectRetain(a1);
  if (!v4)
    goto LABEL_17;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v4; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    else
      v9 = *(id *)(a1 + 8 * i + 32);
    v10 = v9;
    if (objc_msgSend(v9, "handlerType"))
    {

    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(0);
      v7 = v27[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
      specialized ContiguousArray._endMutation()(v8);
    }
  }
  swift_bridgeObjectRelease(a1);
  v11 = v27;
LABEL_18:
  sub_10012C008((uint64_t)v11);
  v13 = (void **)(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem, &v27, 0, 0);
  v14 = *v13;
  if (*v13)
  {
    v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections);
    v16 = v14;
    v17 = swift_bridgeObjectRetain(v15);
    v18 = sub_10012C838(v17, (uint64_t)v16);
    swift_bridgeObjectRelease(v15);
    v19 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
    swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections, v26, 1, 0);
    v20 = *v19;
    *v19 = (uint64_t)v18;
    swift_bridgeObjectRelease(v20);
    sub_10012BE40();

  }
  else
  {
    v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
    swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections, v26, 1, 0);
    v22 = *v21;
    *v21 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v22);
    sub_10012BE40();
  }
  v23 = v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate;
  swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate, v25, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(v23);
  if (result)
  {
    v24 = result;
    objc_msgSend(result, "placeCardCollectionMembershipProviderDidUpdate:", v2);
    return (void *)swift_unknownObjectRelease(v24);
  }
  return result;
}

double (*PlaceCardCollectionMembershipProvider.mapItem.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem, a1, 33, 0);
  return sub_10012B9A4;
}

double sub_10012B9A4(uint64_t a1, char a2)
{
  double result;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(CollectionManager), "sharedManager");
    v5 = objc_msgSend(v4, "currentCollections");

    v6 = sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    sub_10012B6F8(v7);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

uint64_t PlaceCardCollectionMembershipProvider.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate;
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t PlaceCardCollectionMembershipProvider.delegate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*PlaceCardCollectionMembershipProvider.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_10012BC08;
}

void sub_10012BC08(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t PlaceCardCollectionMembershipProvider.containingCollections.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

void sub_10012BDD4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v4);
  sub_10012BE40();
}

void sub_10012BE40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess(v2, v18, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v2);
    if (v4)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease(v3);
    v16 = sub_100035D18((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollectionIDs);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollectionIDs) = v16;
    swift_bridgeObjectRelease(v17);
    return;
  }
  if (v3 < 0)
    v15 = *v2;
  else
    v15 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v15);
  if (!v4)
    goto LABEL_16;
LABEL_3:
  sub_1001323FC(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v6 = *(id *)(v3 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, "identifier");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_1001323FC(v12 > 1, v13 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
    }
    while (v4 != v5);
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t sub_10012C008(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  id v15;
  void *v16;
  uint64_t v17;

  v3 = OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections);
    else
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections), 2);
    result = _CocoaArrayWrapper.endIndex.getter(v10);
    v5 = result;
    if (!result)
      goto LABEL_13;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections), 2);
    if (!v5)
      goto LABEL_13;
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
    else
      v8 = *(id *)(v4 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(v8, "removeObserver:", v1);

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v4, 2);
  v11 = *(_QWORD *)(v1 + v3);
  *(_QWORD *)(v1 + v3) = a1;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(v1 + v3);
  if (!((unint64_t)v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + v3), 2);
    if (v13)
      goto LABEL_15;
    return swift_bridgeObjectRelease_n(v12, 2);
  }
  if (v12 < 0)
    v17 = *(_QWORD *)(v1 + v3);
  else
    v17 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(v1 + v3), 2);
  result = _CocoaArrayWrapper.endIndex.getter(v17);
  v13 = result;
  if (!result)
    return swift_bridgeObjectRelease_n(v12, 2);
LABEL_15:
  if (v13 >= 1)
  {
    for (j = 0; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      else
        v15 = *(id *)(v12 + 8 * j + 32);
      v16 = v15;
      objc_msgSend(v15, "addObserver:", v1);

    }
    return swift_bridgeObjectRelease_n(v12, 2);
  }
LABEL_27:
  __break(1u);
  return result;
}

id PlaceCardCollectionMembershipProvider.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = objc_msgSend((id)objc_opt_self(CollectionManager), "sharedManager");
  objc_msgSend(v2, "removeObserver:", v0);

  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, "dealloc");
}

id sub_10012C338()
{
  char *v0;
  objc_class *ObjectType;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_delegate]);
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollectionIDs] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_observedCollections] = _swiftEmptyArrayStorage;
  v11.receiver = v0;
  v11.super_class = ObjectType;
  v2 = objc_msgSendSuper2(&v11, "init");
  v3 = (void *)objc_opt_self(CollectionManager);
  v4 = v2;
  v5 = objc_msgSend(v3, "sharedManager");
  objc_msgSend(v5, "addObserver:", v4);

  v6 = objc_msgSend(v3, "sharedManager");
  v7 = objc_msgSend(v6, "currentCollections");

  v8 = sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  sub_10012B6F8(v9);
  swift_bridgeObjectRelease(v9);

  return v4;
}

void __swiftcall PlaceCardCollectionMembershipProvider.containingCollection(withIdentifer:)(CollectionHandler_optional *__return_ptr retstr, Swift::String withIdentifer)
{
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v8[24];

  object = withIdentifer._object;
  countAndFlagsBits = withIdentifer._countAndFlagsBits;
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess(v5, v8, 0, 0);
  v6 = *v5;
  swift_bridgeObjectRetain(object);
  v7 = swift_bridgeObjectRetain(v6);
  sub_10012C9B0(v7, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(object);
}

Swift::Void __swiftcall PlaceCardCollectionMembershipProvider.collectionManager(_:contentDidChange:)(CollectionManager *_, Swift::OpaquePointer contentDidChange)
{
  sub_10012B6F8((uint64_t)contentDidChange._rawValue);
}

Swift::Void __swiftcall PlaceCardCollectionMembershipProvider.collectionHandlerContentUpdated(_:)(CollectionHandler *a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  NSString *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = (id *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem);
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_mapItem, v16, 0, 0);
  if (*v3)
  {
    v4 = *v3;
    v5 = -[CollectionHandler containsItem:](a1, "containsItem:", v4);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollectionIDs);
    swift_bridgeObjectRetain(v6);
    v7 = -[CollectionHandler identifier](a1, "identifier");
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v10 = v9;

    v11 = sub_10012A824(v8, v10, v6);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v6);
    if ((v5 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_7;
    }
    else if ((v11 & 1) == 0)
    {
LABEL_7:

      return;
    }
    v12 = objc_msgSend((id)objc_opt_self(CollectionManager), "sharedManager");
    v13 = objc_msgSend(v12, "currentCollections");

    v14 = sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
    v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

    sub_10012B6F8(v15);
    swift_bridgeObjectRelease(v15);
    goto LABEL_7;
  }
}

_QWORD *sub_10012C838(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char **v8;
  id v9;
  void *v10;
  unint64_t v11;
  char **v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v20 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v8 = &selRef_connectorType;
      v21 = v4;
      while (v6)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
LABEL_9:
        v10 = v9;
        v11 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        if (objc_msgSend(v9, v8[134], a2))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v12 = v8;
          v13 = v7;
          v14 = v6;
          v15 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
          v16 = v15;
          v6 = v14;
          v7 = v13;
          v8 = v12;
          v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v10);
          specialized ContiguousArray._endMutation()(v17);
          v3 = v20;
          v4 = v21;
        }
        else
        {

        }
        ++v5;
        if (v11 == v4)
          return _swiftEmptyArrayStorage;
      }
      if (v5 < *(_QWORD *)(v7 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (v3 < 0)
        v19 = v3;
      else
        v19 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v9 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10012C9B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v8)
  {
    v23 = v4;
    v24 = v7;
    v25 = v7 & 0xC000000000000001;
    v4 = 4;
    while (1)
    {
      v9 = v4 - 4;
      if (!v25)
        break;
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v7);
      v11 = v4 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_20;
LABEL_9:
      v12 = v8;
      v13 = v10;
      v14 = a3;
      v15 = objc_msgSend(v10, "identifier", v23);
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      a3 = v14;
      v19 = v16 == a2 && v18 == v14;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
LABEL_19:
        swift_bridgeObjectRelease(a3);
        return v13;
      }
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a2, v14, 0);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) != 0)
      {
        a3 = v24;
        goto LABEL_19;
      }

      ++v4;
      v8 = v12;
      v19 = v11 == v12;
      v7 = v24;
      if (v19)
      {
        swift_bridgeObjectRelease(v24);
        return 0;
      }
    }
    v10 = *(id *)(v7 + 8 * v4);
    v11 = v4 - 3;
    if (!__OFADD__(v9, 1))
      goto LABEL_9;
LABEL_20:
    __break(1u);
LABEL_21:
    if (v7 < 0)
      v21 = v7;
    else
      v21 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  swift_bridgeObjectRelease(v7);
  return 0;
}

uint64_t sub_10012CB54@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC4Maps37PlaceCardCollectionMembershipProvider_containingCollections);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t type metadata accessor for PlaceCardCollectionMembershipProvider()
{
  return objc_opt_self(_TtC4Maps37PlaceCardCollectionMembershipProvider);
}

uint64_t destroy for HomeListSectionSnapshot(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for HomeListSectionSnapshot(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for HomeListSectionSnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t assignWithTake for HomeListSectionSnapshot(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for HomeListSectionSnapshot()
{
  return &type metadata for HomeListSectionSnapshot;
}

ValueMetadata *type metadata accessor for HomeListCollectionViewSnapshot()
{
  return &type metadata for HomeListCollectionViewSnapshot;
}

uint64_t destroy for HomeListCellSnapshot(id *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;

  return sub_10000BEAC(v1);
}

uint64_t initializeWithCopy for HomeListCellSnapshot(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for HomeListCellSnapshot(void **a1, void **a2)
{
  void *v3;
  _QWORD *v4;
  void *v5;
  _QWORD *v6;
  id v7;

  v4 = a2 + 1;
  v3 = *a2;
  v5 = *a1;
  *a1 = *a2;
  v6 = a1 + 1;
  v7 = v3;

  sub_10012CE34(v6, v4);
  return a1;
}

_QWORD *sub_10012CE34(_QWORD *result, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v10 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v10 + 82) & 2) != 0)
      {
        v12 = *result;
        v13 = *a2;
        swift_retain(*a2);
        result = (_QWORD *)swift_release(v12);
        *v3 = v13;
      }
      else
      {
        return (_QWORD *)(*(uint64_t (**)(_QWORD *, _QWORD *, _QWORD))(v10 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        v11 = *result;
        if ((v8 & 0x20000) != 0)
        {
          v15 = *a2;
          *v3 = *a2;
          swift_retain(v15);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (_QWORD *)swift_release(v11);
      }
      else
      {
        (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v6 + 32))(v16, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          v14 = *a2;
          *v3 = *a2;
          v9 = swift_retain(v14);
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (_QWORD *)(*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v16, v4, v9);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for HomeListCellSnapshot(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HomeListCellSnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  sub_10000BEAC((_QWORD *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListCellSnapshot(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListCellSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListCellSnapshot()
{
  return &type metadata for HomeListCellSnapshot;
}

uint64_t sub_10012D0A8(uint64_t a1)
{
  return sub_10012D8F0(a1, (uint64_t (*)(_QWORD))type metadata accessor for SearchHomeUserGuidesCellViewModel);
}

uint64_t sub_10012D0B4(uint64_t a1)
{
  return sub_10012D0C8(a1, (unint64_t *)&qword_101491C90, GEOComposedWaypoint_ptr);
}

uint64_t sub_10012D0C8(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  _OWORD v20[2];
  _QWORD *v21;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = _swiftEmptyArrayStorage;
  if (!v6)
    return (uint64_t)v7;
  v21 = _swiftEmptyArrayStorage;
  result = sub_100132444(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v10 = sub_10000E4BC(0, a2, a3);
        swift_dynamicCast(v20, &v19, v10, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_100132444(0, v7[2] + 1, 1);
          v7 = v21;
        }
        v12 = v7[2];
        v11 = v7[3];
        if (v12 >= v11 >> 1)
        {
          sub_100132444(v11 > 1, v12 + 1, 1);
          v7 = v21;
        }
        v7[2] = v12 + 1;
        sub_10000BE60(v20, &v7[4 * v12 + 4]);
      }
    }
    else
    {
      v13 = (id *)(a1 + 32);
      v14 = sub_10000E4BC(0, a2, a3);
      do
      {
        v19 = *v13;
        v15 = v19;
        swift_dynamicCast(v20, &v19, v14, (char *)&type metadata for Any + 8, 7);
        v7 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
        {
          sub_100132444(0, v7[2] + 1, 1);
          v7 = v21;
        }
        v17 = v7[2];
        v16 = v7[3];
        if (v17 >= v16 >> 1)
        {
          sub_100132444(v16 > 1, v17 + 1, 1);
          v7 = v21;
        }
        v7[2] = v17 + 1;
        sub_10000BE60(v20, &v7[4 * v17 + 4]);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10012D318(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  ValueMetadata *v9;
  unint64_t v10;
  id v11[6];
  _QWORD *v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v12 = _swiftEmptyArrayStorage;
    sub_1001324D8(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = a1 + 32;
    do
    {
      sub_100084BD4(v4, (uint64_t)v11);
      v12 = v2;
      v6 = v2[2];
      v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1001324D8(v5 > 1, v6 + 1, 1);
        v2 = v12;
      }
      v9 = &type metadata for HomeListCellSnapshot;
      v10 = sub_10013516C();
      *(_QWORD *)&v8 = swift_allocObject(&unk_1011A49C8, 64, 7);
      sub_100084BD4((uint64_t)v11, v8 + 16);
      v2[2] = v6 + 1;
      sub_10000BE48(&v8, (uint64_t)&v2[5 * v6 + 4]);
      sub_100084C10(v11);
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_10012D434(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  ValueMetadata *v9;
  unint64_t v10;
  _BYTE v11[64];
  _QWORD *v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v12 = _swiftEmptyArrayStorage;
    sub_1001324D8(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = a1 + 32;
    do
    {
      sub_100084B64(v4, (uint64_t)v11);
      v12 = v2;
      v6 = v2[2];
      v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1001324D8(v5 > 1, v6 + 1, 1);
        v2 = v12;
      }
      v9 = &type metadata for HomeListSupplementaryViewSnapshot;
      v10 = sub_1001350F4();
      *(_QWORD *)&v8 = swift_allocObject(&unk_1011A49A0, 80, 7);
      sub_100084B64((uint64_t)v11, v8 + 16);
      v2[2] = v6 + 1;
      sub_10000BE48(&v8, (uint64_t)&v2[5 * v6 + 4]);
      sub_100084BA0((uint64_t)v11);
      v4 += 64;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_10012D550(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  _QWORD *v12;
  __int128 v14;
  ValueMetadata *v15;
  unint64_t v16;
  _QWORD *v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v17 = _swiftEmptyArrayStorage;
    sub_1001324D8(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = (void *)*(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      v17 = v2;
      v10 = v2[2];
      v9 = v2[3];
      v11 = v5;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
      if (v10 >= v9 >> 1)
      {
        sub_1001324D8(v9 > 1, v10 + 1, 1);
        v2 = v17;
      }
      v15 = &type metadata for HomeListSectionSnapshot;
      v16 = sub_1001351DC();
      v12 = (_QWORD *)swift_allocObject(&unk_1011A49F0, 48, 7);
      *(_QWORD *)&v14 = v12;
      v12[2] = v11;
      v12[3] = v6;
      v12[4] = v7;
      v12[5] = v8;
      v2[2] = v10 + 1;
      sub_10000BE48(&v14, (uint64_t)&v2[5 * v10 + 4]);
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_10012D680(uint64_t a1)
{
  return sub_10012D0C8(a1, (unint64_t *)&unk_101499130, MUCardButton_ptr);
}

uint64_t sub_10012D694(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  _QWORD *v16;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v16 = _swiftEmptyArrayStorage;
  result = sub_100132444(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v3 = v16;
      do
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v6 = sub_100008B04((uint64_t *)&unk_101493F60);
        swift_dynamicCast(v15, &v14, v6, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_100132444(0, v3[2] + 1, 1);
          v3 = v16;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_100132444(v7 > 1, v8 + 1, 1);
          v3 = v16;
        }
        ++v5;
        v3[2] = v8 + 1;
        sub_10000BE60(v15, &v3[4 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      v3 = v16;
      do
      {
        v14 = *v9;
        swift_unknownObjectRetain(v14);
        v10 = sub_100008B04((uint64_t *)&unk_101493F60);
        swift_dynamicCast(v15, &v14, v10, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_100132444(0, v3[2] + 1, 1);
          v3 = v16;
        }
        v12 = v3[2];
        v11 = v3[3];
        if (v12 >= v11 >> 1)
        {
          sub_100132444(v11 > 1, v12 + 1, 1);
          v3 = v16;
        }
        v3[2] = v12 + 1;
        sub_10000BE60(v15, &v3[4 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10012D8D0(uint64_t a1)
{
  return sub_10012D0C8(a1, (unint64_t *)&unk_10149F3A0, GEOComposedGeometryRoutePersistentData_ptr);
}

uint64_t sub_10012D8E4(uint64_t a1)
{
  return sub_10012D8F0(a1, (uint64_t (*)(_QWORD))&type metadata accessor for CollectionPlaceItem);
}

uint64_t sub_10012D8F0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  uint64_t i;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  _OWORD v18[2];
  _QWORD *v19;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = _swiftEmptyArrayStorage;
  if (!v4)
    return (uint64_t)v5;
  v19 = _swiftEmptyArrayStorage;
  result = sub_100132444(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v8 = a2(0);
        swift_dynamicCast(v18, &v17, v8, (char *)&type metadata for Any + 8, 7);
        v5 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        {
          sub_100132444(0, v5[2] + 1, 1);
          v5 = v19;
        }
        v10 = v5[2];
        v9 = v5[3];
        if (v10 >= v9 >> 1)
        {
          sub_100132444(v9 > 1, v10 + 1, 1);
          v5 = v19;
        }
        v5[2] = v10 + 1;
        sub_10000BE60(v18, &v5[4 * v10 + 4]);
      }
    }
    else
    {
      v11 = (id *)(a1 + 32);
      v12 = a2(0);
      do
      {
        v17 = *v11;
        v13 = v17;
        swift_dynamicCast(v18, &v17, v12, (char *)&type metadata for Any + 8, 7);
        v5 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        {
          sub_100132444(0, v5[2] + 1, 1);
          v5 = v19;
        }
        v15 = v5[2];
        v14 = v5[3];
        if (v15 >= v14 >> 1)
        {
          sub_100132444(v14 > 1, v15 + 1, 1);
          v5 = v19;
        }
        v5[2] = v15 + 1;
        sub_10000BE60(v18, &v5[4 * v15 + 4]);
        ++v11;
        --v4;
      }
      while (v4);
    }
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

id sub_10012DB24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  if (!*(_QWORD *)(a5 + 16))
    return 0;
  v6 = sub_1000C1674(a1, a2, a3, a4);
  if ((v7 & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a5 + 56) + 32 * v6;
  v9 = *(id *)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = *(_QWORD *)(v8 + 24);
  v13 = *(id *)v8;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  return v9;
}

Swift::Int sub_10012DBA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *v0;
  v2 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  sub_100134BE4(v4, v1);
  sub_10013427C((uint64_t)v4, v2);
  return Hasher._finalize()();
}

void sub_10012DBF8(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = *v1;
  v3 = v1[1];
  v5 = *(_QWORD *)(*v1 + 16);
  Hasher._combine(_:)(v5);
  if (v5)
  {
    v6 = (uint64_t *)(v4 + 56);
    do
    {
      v7 = *(v6 - 2);
      v9 = *(v6 - 1);
      v8 = *v6;
      v10 = (id)*(v6 - 3);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v8);
      NSObject.hash(into:)(a1);
      swift_bridgeObjectRetain(v7);
      sub_100134AC4((uint64_t)a1, v7);
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRetain(v9);
      sub_100134998((uint64_t)a1, v9);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRetain(v8);
      sub_1001345C4(a1, v8);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v7);

      swift_bridgeObjectRelease_n(v8, 2);
      v6 += 4;
      --v5;
    }
    while (v5);
  }
  sub_10013427C((uint64_t)a1, v3);
}

Swift::Int sub_10012DCF8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5[4];

  v2 = *v1;
  v3 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  sub_100134BE4(v5, v2);
  sub_10013427C((uint64_t)v5, v3);
  return Hasher._finalize()();
}

uint64_t sub_10012DD44(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_100083684(*a1, *a2) & 1) != 0)
    return sub_10008DA20(v2, v3);
  else
    return 0;
}

Swift::Int sub_10012DD8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  __int128 v7[4];

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  Hasher.init(_seed:)(v7, 0);
  v5 = v2;
  NSObject.hash(into:)(v7);

  swift_bridgeObjectRetain(v1);
  sub_100134AC4((uint64_t)v7, v1);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRetain(v3);
  sub_100134998((uint64_t)v7, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v4);
  sub_1001345C4(v7, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_10012DE40(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  double result;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(id *)v1;
  NSObject.hash(into:)(a1);

  swift_bridgeObjectRetain(v3);
  sub_100134AC4((uint64_t)a1, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v4);
  sub_100134998((uint64_t)a1, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v5);
  sub_1001345C4(a1, v5);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_10012DED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  __int128 v8[4];

  v3 = *(void **)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  Hasher.init(_seed:)(v8, a1);
  v6 = v3;
  NSObject.hash(into:)(v8);

  swift_bridgeObjectRetain(v2);
  sub_100134AC4((uint64_t)v8, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v4);
  sub_100134998((uint64_t)v8, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v5);
  sub_1001345C4(v8, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_10012DF88(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(v2, v7) & 1) != 0
    && (sub_10008385C(v3, v6) & 1) != 0
    && (sub_100083A34(v5, v9) & 1) != 0)
  {
    return sub_10008DD70(v4, v8);
  }
  else
  {
    return 0;
  }
}

Swift::Int sub_10012E03C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _BYTE v6[40];
  _OWORD v7[2];
  uint64_t v8;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  NSObject.hash(into:)(v9);
  sub_100084C44(v0 + 8, (uint64_t)v6);
  v1 = sub_100008B04(&qword_101496AB0);
  if (swift_dynamicCast(&v3, v6, v1, &type metadata for AnyHashable, 6))
  {
    v7[0] = v3;
    v7[1] = v4;
    v8 = v5;
    AnyHashable.hash(into:)(v9);
    sub_100012C48((uint64_t)v7);
  }
  else
  {
    v5 = 0;
    v3 = 0u;
    v4 = 0u;
    sub_100010CC4((uint64_t)&v3, &qword_101493FF0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10012E100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _BYTE v8[40];
  _OWORD v9[2];
  uint64_t v10;

  NSObject.hash(into:)(a1);
  sub_100084C44(v1 + 8, (uint64_t)v8);
  v3 = sub_100008B04(&qword_101496AB0);
  if (swift_dynamicCast(&v5, v8, v3, &type metadata for AnyHashable, 6))
  {
    v9[0] = v5;
    v9[1] = v6;
    v10 = v7;
    AnyHashable.hash(into:)(a1);
    return sub_100012C48((uint64_t)v9);
  }
  else
  {
    v7 = 0;
    v5 = 0u;
    v6 = 0u;
    return sub_100010CC4((uint64_t)&v5, &qword_101493FF0);
  }
}

Swift::Int sub_10012E1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v7[40];
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, a1);
  NSObject.hash(into:)(v10);
  sub_100084C44(v1 + 8, (uint64_t)v7);
  v2 = sub_100008B04(&qword_101496AB0);
  if (swift_dynamicCast(&v4, v7, v2, &type metadata for AnyHashable, 6))
  {
    v8[0] = v4;
    v8[1] = v5;
    v9 = v6;
    AnyHashable.hash(into:)(v10);
    sub_100012C48((uint64_t)v8);
  }
  else
  {
    v6 = 0;
    v4 = 0u;
    v5 = 0u;
    sub_100010CC4((uint64_t)&v4, &qword_101493FF0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10012E270(_QWORD *a1, _QWORD *a2)
{
  sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*a1, *a2) & 1) != 0)
    return sub_10011E048((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  else
    return 0;
}

unint64_t sub_10012E2E4()
{
  unint64_t result;

  result = qword_10149BA60;
  if (!qword_10149BA60)
  {
    result = swift_getWitnessTable(byte_100E2D5E8, &type metadata for HomeListCellSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA60);
  }
  return result;
}

unint64_t sub_10012E32C()
{
  unint64_t result;

  result = qword_10149BA68;
  if (!qword_10149BA68)
  {
    result = swift_getWitnessTable("Yu7", &type metadata for HomeListCollectionViewSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA68);
  }
  return result;
}

unint64_t sub_10012E374()
{
  unint64_t result;

  result = qword_10149BA70;
  if (!qword_10149BA70)
  {
    result = swift_getWitnessTable(byte_100E2D6B8, &type metadata for HomeListSectionSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA70);
  }
  return result;
}

Swift::Int sub_10012E3B8()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  _BYTE v6[40];
  _OWORD v7[2];
  uint64_t v8;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  NSObject.hash(into:)(v9);
  String.hash(into:)(v9, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
  sub_100084C44(v0 + 24, (uint64_t)v6);
  v1 = sub_100008B04((uint64_t *)&unk_101496AA0);
  if (swift_dynamicCast(&v3, v6, v1, &type metadata for AnyHashable, 6))
  {
    v7[0] = v3;
    v7[1] = v4;
    v8 = v5;
    AnyHashable.hash(into:)(v9);
    sub_100012C48((uint64_t)v7);
  }
  else
  {
    v5 = 0;
    v3 = 0u;
    v4 = 0u;
    sub_100010CC4((uint64_t)&v3, &qword_101493FF0);
  }
  return Hasher._finalize()();
}

Swift::Int sub_10012E484(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  Swift::UInt v7;
  _QWORD v9[9];

  Hasher.init(_seed:)(v9, 0);
  NSObject.hash(into:)(v9);
  if (a4)
  {
    if (a4 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain(a3);
      String.hash(into:)(v9, a2, a3);
      sub_100084C88(a2, a3, 1u);
    }
    else
    {
      if (a2 | a3)
      {
        if (a2 ^ 1 | a3)
          v7 = 2;
        else
          v7 = 1;
      }
      else
      {
        v7 = 0;
      }
      Hasher._combine(_:)(v7);
    }
  }
  else
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain(a3);
    String.hash(into:)(v9, a2, a3);
    sub_100084C88(a2, a3, 0);
  }
  return Hasher._finalize()();
}

uint64_t sub_10012E590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _BYTE v8[40];
  _OWORD v9[2];
  uint64_t v10;

  NSObject.hash(into:)(a1);
  String.hash(into:)(a1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  sub_100084C44(v1 + 24, (uint64_t)v8);
  v3 = sub_100008B04((uint64_t *)&unk_101496AA0);
  if (swift_dynamicCast(&v5, v8, v3, &type metadata for AnyHashable, 6))
  {
    v9[0] = v5;
    v9[1] = v6;
    v10 = v7;
    AnyHashable.hash(into:)(a1);
    return sub_100012C48((uint64_t)v9);
  }
  else
  {
    v7 = 0;
    v5 = 0u;
    v6 = 0u;
    return sub_100010CC4((uint64_t)&v5, &qword_101493FF0);
  }
}

Swift::Int sub_10012E650(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v7[40];
  _OWORD v8[2];
  uint64_t v9;
  _QWORD v10[9];

  Hasher.init(_seed:)(v10, a1);
  NSObject.hash(into:)(v10);
  String.hash(into:)(v10, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16));
  sub_100084C44(v1 + 24, (uint64_t)v7);
  v2 = sub_100008B04((uint64_t *)&unk_101496AA0);
  if (swift_dynamicCast(&v4, v7, v2, &type metadata for AnyHashable, 6))
  {
    v8[0] = v4;
    v8[1] = v5;
    v9 = v6;
    AnyHashable.hash(into:)(v10);
    sub_100012C48((uint64_t)v8);
  }
  else
  {
    v6 = 0;
    v4 = 0u;
    v5 = 0u;
    sub_100010CC4((uint64_t)&v4, &qword_101493FF0);
  }
  return Hasher._finalize()();
}

Swift::Int sub_10012E71C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  Swift::UInt v4;
  Swift::UInt v5;
  _QWORD v7[9];

  v2 = *v0;
  v1 = v0[1];
  v3 = *((unsigned __int8 *)v0 + 16);
  Hasher.init(_seed:)(v7, 0);
  if (!v3)
  {
    v4 = 3;
    goto LABEL_5;
  }
  if (v3 == 1)
  {
    v4 = 4;
LABEL_5:
    Hasher._combine(_:)(v4);
    String.hash(into:)(v7, v2, v1);
    return Hasher._finalize()();
  }
  if (v2 | v1)
  {
    if (v2 ^ 1 | v1)
      v5 = 2;
    else
      v5 = 1;
  }
  else
  {
    v5 = 0;
  }
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

void sub_10012E7CC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  Swift::UInt v5;
  Swift::UInt v6;

  v4 = *v1;
  v3 = v1[1];
  if (!*((_BYTE *)v1 + 16))
  {
    v5 = 3;
    goto LABEL_5;
  }
  if (*((_BYTE *)v1 + 16) == 1)
  {
    v5 = 4;
LABEL_5:
    Hasher._combine(_:)(v5);
    String.hash(into:)(a1, v4, v3);
    return;
  }
  if (v4 | v3)
  {
    if (v4 ^ 1 | v3)
      v6 = 2;
    else
      v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  Hasher._combine(_:)(v6);
}

Swift::Int sub_10012E864(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  Swift::UInt v5;
  Swift::UInt v6;
  _QWORD v8[9];

  v3 = *v1;
  v2 = v1[1];
  v4 = *((unsigned __int8 *)v1 + 16);
  Hasher.init(_seed:)(v8, a1);
  if (!v4)
  {
    v5 = 3;
    goto LABEL_5;
  }
  if (v4 == 1)
  {
    v5 = 4;
LABEL_5:
    Hasher._combine(_:)(v5);
    String.hash(into:)(v8, v3, v2);
    return Hasher._finalize()();
  }
  if (v3 | v2)
  {
    if (v3 ^ 1 | v2)
      v6 = 2;
    else
      v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  Hasher._combine(_:)(v6);
  return Hasher._finalize()();
}

uint64_t sub_10012E910(uint64_t a1, uint64_t a2)
{
  return sub_100134E44(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

Swift::Int sub_10012E92C()
{
  uint64_t v0;

  return sub_10012E484(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_10012E93C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  Swift::UInt v9;

  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(unsigned __int8 *)(v1 + 24);
  NSObject.hash(into:)(a1);
  if (!v5)
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(a1, v3, v4);
    v6 = v3;
    v7 = v4;
    v8 = 0;
    goto LABEL_5;
  }
  if (v5 == 1)
  {
    Hasher._combine(_:)(4uLL);
    swift_bridgeObjectRetain(v4);
    String.hash(into:)(a1, v3, v4);
    v6 = v3;
    v7 = v4;
    v8 = 1;
LABEL_5:
    sub_100084C88(v6, v7, v8);
    return;
  }
  if (v3 | v4)
  {
    if (v3 ^ 1 | v4)
      v9 = 2;
    else
      v9 = 1;
  }
  else
  {
    v9 = 0;
  }
  Hasher._combine(_:)(v9);
}

Swift::Int sub_10012EA30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  Swift::UInt v5;
  _QWORD v7[9];

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(v1 + 24);
  Hasher.init(_seed:)(v7, a1);
  NSObject.hash(into:)(v7);
  if (v4)
  {
    if (v4 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain(v3);
      String.hash(into:)(v7, v2, v3);
      sub_100084C88(v2, v3, 1u);
    }
    else
    {
      if (v2 | v3)
      {
        if (v2 ^ 1 | v3)
          v5 = 2;
        else
          v5 = 1;
      }
      else
      {
        v5 = 0;
      }
      Hasher._combine(_:)(v5);
    }
  }
  else
  {
    Hasher._combine(_:)(3uLL);
    swift_bridgeObjectRetain(v3);
    String.hash(into:)(v7, v2, v3);
    sub_100084C88(v2, v3, 0);
  }
  return Hasher._finalize()();
}

BOOL sub_10012EB38(uint64_t a1, uint64_t a2)
{
  return sub_100134F20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t sub_10012EB5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  sub_10000C1FC(a1, (uint64_t)&v9, (uint64_t *)&unk_10149BAA0);
  if (!*((_QWORD *)&v10 + 1))
  {
    sub_100010CC4((uint64_t)&v9, (uint64_t *)&unk_10149BAA0);
    v6 = 0u;
    v7 = 0u;
    v8 = 0u;
    goto LABEL_7;
  }
  v2 = sub_100008B04(&qword_101497910);
  if ((swift_dynamicCast(&v6, &v9, v2, &type metadata for HomeListCellSnapshot, 6) & 1) == 0)
  {
    v7 = 0u;
    v8 = 0u;
    v6 = 0u;
    goto LABEL_7;
  }
  if (!(_QWORD)v6)
  {
LABEL_7:
    sub_100010CC4((uint64_t)&v6, &qword_10149B500);
    v4 = 0;
    return v4 & 1;
  }
  v9 = v6;
  v10 = v7;
  v11 = v8;
  sub_10000C1FC(v1 + 8, (uint64_t)&v6, (uint64_t *)&unk_10149B590);
  v3 = sub_10011E048((uint64_t)&v6, (uint64_t)&v9 + 8);
  sub_100010CC4((uint64_t)&v6, (uint64_t *)&unk_10149B590);
  sub_100084C10((id *)&v9);
  v4 = v3 ^ 1;
  return v4 & 1;
}

id sub_10012EC64()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

double sub_10012EC94@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_10012ECA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[3];

  sub_10000C1FC(a1, (uint64_t)&v10, (uint64_t *)&unk_10149BAA0);
  if (!*((_QWORD *)&v11[0] + 1))
  {
    sub_100010CC4((uint64_t)&v10, (uint64_t *)&unk_10149BAA0);
    v6 = 0u;
    v7 = 0u;
    v8 = 0u;
    v9 = 0u;
    goto LABEL_7;
  }
  v2 = sub_100008B04(&qword_101497910);
  if ((swift_dynamicCast(&v6, &v10, v2, &type metadata for HomeListSupplementaryViewSnapshot, 6) & 1) == 0)
  {
    v8 = 0u;
    v9 = 0u;
    v6 = 0u;
    v7 = 0u;
    goto LABEL_7;
  }
  if (!(_QWORD)v6)
  {
LABEL_7:
    sub_100010CC4((uint64_t)&v6, (uint64_t *)&unk_10149FDC0);
    v4 = 0;
    return v4 & 1;
  }
  v10 = v6;
  v11[0] = v7;
  v11[1] = v8;
  v11[2] = v9;
  sub_10000C1FC(v1 + 24, (uint64_t)&v6, &qword_10149BAC0);
  v3 = sub_10011E16C((uint64_t)&v6, (uint64_t)v11 + 8);
  sub_100010CC4((uint64_t)&v6, &qword_10149BAC0);
  sub_100084BA0((uint64_t)&v10);
  v4 = v3 ^ 1;
  return v4 & 1;
}

void *sub_10012EDB0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = v1;
  swift_bridgeObjectRetain(v2);
  return v1;
}

double sub_10012EDF8@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  id v11;
  unint64_t v12;
  char v13;
  double result;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  if (*(_QWORD *)(a5 + 16))
  {
    v11 = a1;
    sub_10000BE70(a2, a3, a4);
    v12 = sub_1000C1674((uint64_t)v11, a2, a3, a4);
    if ((v13 & 1) != 0)
    {
      sub_10000C1FC(*(_QWORD *)(a5 + 56) + 40 * v12, (uint64_t)&v15, (uint64_t *)&unk_10149E930);

      sub_100084C88(a2, a3, a4);
      if (*((_QWORD *)&v16 + 1))
      {
        sub_100084C44((uint64_t)&v15, a6);
        sub_100010CC4((uint64_t)&v15, (uint64_t *)&unk_10149E930);
        return result;
      }
    }
    else
    {
      v17 = 0;
      v15 = 0u;
      v16 = 0u;

      sub_100084C88(a2, a3, a4);
    }
  }
  else
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }
  sub_100010CC4((uint64_t)&v15, (uint64_t *)&unk_10149BAB0);
  *(_QWORD *)(a6 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

id sub_10012EF18()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

_QWORD *sub_10012EF48()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_10012D318(*(_QWORD *)(v0 + 8));
  sub_10011FF88((uint64_t)v2);
  v3 = sub_10012D434(v1);
  sub_10011FF88((uint64_t)v3);
  return _swiftEmptyArrayStorage;
}

double sub_10012EF98@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;

  return sub_10012EDF8(a1, a2, a3, a4, *(_QWORD *)(v5 + 24), a5);
}

double sub_10012EFA0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  double result;

  if (*(_QWORD *)(a5 + 16))
  {
    v11 = a1;
    sub_10000BE70(a2, a3, a4);
    v12 = sub_1000C1674((uint64_t)v11, a2, a3, a4);
    if ((v13 & 1) != 0)
    {
      v14 = *(_QWORD *)(a5 + 56) + 32 * v12;
      v15 = *(_QWORD *)(v14 + 8);
      v16 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v14 + 24);
      v18 = *(id *)v14;
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v17);

      sub_100084C88(a2, a3, a4);
      *(_QWORD *)(a6 + 24) = &type metadata for HomeListSectionSnapshot;
      *(_QWORD *)(a6 + 32) = sub_1001351DC();
      v19 = (_QWORD *)swift_allocObject(&unk_1011A49F0, 48, 7);
      *(_QWORD *)a6 = v19;
      v19[2] = v18;
      v19[3] = v15;
      v19[4] = v16;
      v19[5] = v17;
      return result;
    }

    sub_100084C88(a2, a3, a4);
  }
  *(_QWORD *)(a6 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a6 = 0u;
  *(_OWORD *)(a6 + 16) = 0u;
  return result;
}

double sub_10012F0C0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  _BYTE v28[24];
  uint64_t v29;

  v12 = objc_msgSend(a1, "firstIdentifier");
  if (!v12)
    goto LABEL_7;
  v13 = v12;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend((id)objc_opt_self(IdentifierPath), "identifierPathWithIdentifier:", v16);

  v18 = v17;
  v19 = sub_10012DB24((uint64_t)v18, 1, 0, 2, a5);
  v21 = v20;
  v23 = v22;
  v25 = v24;

  if (!v19)
    goto LABEL_7;
  sub_10012EDF8(a1, a2, a3, a4, v25, (uint64_t)v28);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);

  if (!v29)
  {
    sub_100010CC4((uint64_t)v28, (uint64_t *)&unk_10149BAA0);
    goto LABEL_7;
  }
  v26 = sub_100008B04(&qword_101497910);
  if ((swift_dynamicCast(a6, v28, v26, &type metadata for HomeListCellSnapshot, 6) & 1) == 0)
  {
LABEL_7:
    result = 0.0;
    a6[1] = 0u;
    a6[2] = 0u;
    *a6 = 0u;
  }
  return result;
}

double sub_10012F24C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  _BYTE v28[24];
  uint64_t v29;

  v12 = objc_msgSend(a1, "firstIdentifier");
  if (!v12)
    goto LABEL_7;
  v13 = v12;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend((id)objc_opt_self(IdentifierPath), "identifierPathWithIdentifier:", v16);

  v18 = v17;
  v19 = sub_10012DB24((uint64_t)v18, 1, 0, 2, a5);
  v21 = v20;
  v23 = v22;
  v25 = v24;

  if (!v19)
    goto LABEL_7;
  sub_10012EDF8(a1, a2, a3, a4, v25, (uint64_t)v28);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v21);

  if (!v29)
  {
    sub_100010CC4((uint64_t)v28, (uint64_t *)&unk_10149BAA0);
    goto LABEL_7;
  }
  v26 = sub_100008B04(&qword_101497910);
  if ((swift_dynamicCast(a6, v28, v26, &type metadata for HomeListSupplementaryViewSnapshot, 6) & 1) == 0)
  {
LABEL_7:
    result = 0.0;
    a6[2] = 0u;
    a6[3] = 0u;
    *a6 = 0u;
    a6[1] = 0u;
  }
  return result;
}

id sub_10012F3D8()
{
  return objc_msgSend(objc_allocWithZone((Class)IdentifierPath), "init");
}

_QWORD *sub_10012F40C()
{
  uint64_t *v0;

  return sub_10012D550(*v0);
}

double sub_10012F414@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;

  return sub_10012EFA0(a1, a2, a3, a4, *(_QWORD *)(v5 + 8), a5);
}

uint64_t sub_10012F41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  Swift::OpaquePointer v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  _QWORD v77[3];
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  __int128 v81;
  __int128 v82;
  unint64_t v83;
  uint64_t v84[3];
  _QWORD *v85;

  v84[0] = (uint64_t)_swiftEmptyArrayStorage;
  v84[1] = (uint64_t)_swiftEmptyArrayStorage;
  v84[2] = (uint64_t)_swiftEmptyArrayStorage;
  v85 = _swiftEmptyArrayStorage;
  if (a2)
  {
    *((_QWORD *)&v82 + 1) = &type metadata for HomeListCollectionViewSnapshot;
    v83 = sub_1001359C8();
    *(_QWORD *)&v81 = a2;
    *((_QWORD *)&v81 + 1) = a3;
  }
  else
  {
    v83 = 0;
    v81 = 0u;
    v82 = 0u;
  }
  sub_1000AE4F8(a2, a3);
  sub_10012F980((uint64_t)&v81, v84, a4, a5);
  sub_100010CC4((uint64_t)&v81, (uint64_t *)&unk_10149BAA0);
  v10 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
  v11 = sub_100135948();
  NSDiffableDataSourceSnapshot.init()(v10, v10, v11, v11);
  v12 = *(_QWORD *)(a4 + 16);
  v76 = a1;
  v74 = v12;
  if (v12)
  {
    v73 = a4 + 32;
    v71 = a4;
    swift_bridgeObjectRetain(a4);
    v13 = 0;
    v72 = xmmword_100E23F50;
    do
    {
      v15 = v73 + 32 * v13;
      v16 = *(void **)v15;
      v17 = *(_QWORD *)(v15 + 8);
      v18 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      v20 = sub_100008B04((uint64_t *)&unk_101493B10);
      v21 = swift_allocObject(v20, 40, 7);
      *(_OWORD *)(v21 + 16) = v72;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)&v81 = v21;
      v22 = v16;
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v18);
      v23 = swift_bridgeObjectRetain(v19);
      specialized Array._endMutation()(v23);
      v24._rawValue = (void *)v81;
      v25 = v22;
      v26 = sub_100008B04(&qword_10149BB60);
      NSDiffableDataSourceSnapshot.appendSections(_:)(v24);
      swift_bridgeObjectRelease(v24._rawValue);
      v27 = *(_QWORD *)(v17 + 16);
      if (v27)
      {
        v75 = v25;
        v77[0] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v17);
        specialized ContiguousArray.reserveCapacity(_:)(v27);
        v28 = v17 + 32;
        do
        {
          sub_100084BD4(v28, (uint64_t)&v81);
          v29 = (id)v81;
          v30 = sub_100084C10((id *)&v81);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v30);
          v31 = *(_QWORD *)(v77[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
          v32 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
          specialized ContiguousArray._endMutation()(v32);
          v28 += 48;
          --v27;
        }
        while (v27);
        v14 = (_QWORD *)v77[0];
        swift_bridgeObjectRelease(v17);
        v25 = v75;
      }
      else
      {
        v14 = _swiftEmptyArrayStorage;
      }
      ++v13;
      *(_QWORD *)&v81 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v14, &v81, v26);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v17);

      swift_bridgeObjectRelease(v14);
    }
    while (v13 != v74);
    swift_bridgeObjectRelease(v71);
  }
  v33 = v85;
  v80 = _swiftEmptyArrayStorage;
  v34 = v85[2];
  result = swift_bridgeObjectRetain(v85);
  if (v34)
  {
    v36 = 0;
    v37 = (uint64_t)(v33 + 4);
    while (1)
    {
      if (v36 >= v33[2])
      {
        __break(1u);
        return result;
      }
      sub_100084C44(v37, (uint64_t)&v81);
      v38 = *((_QWORD *)&v82 + 1);
      v39 = v83;
      sub_10000BE88(&v81, *((uint64_t *)&v82 + 1));
      v40 = (void *)(*(uint64_t (**)(uint64_t, unint64_t))(v39 + 16))(v38, v39);
      v42 = v41;
      v44 = v43;
      v46 = v45;
      LODWORD(v38) = v45;

      if (v38 < 2)
      {
        sub_100084C88(v42, v44, v46);
      }
      else if (__PAIR128__(v44, v42) >= 2)
      {
        sub_10000BE48(&v81, (uint64_t)v77);
        v47 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
        {
          sub_1001324D8(0, v47[2] + 1, 1);
          v47 = v80;
        }
        v49 = v47[2];
        v48 = v47[3];
        if (v49 >= v48 >> 1)
          sub_1001324D8(v48 > 1, v49 + 1, 1);
        v50 = v78;
        v51 = v79;
        v52 = sub_1001359A0((uint64_t)v77, v78);
        v53 = __chkstk_darwin(v52);
        v55 = (char *)&v70 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v56 + 16))(v55, v53);
        sub_100134D54(v49, (uint64_t)v55, (uint64_t *)&v80, v50, v51);
        result = sub_10000BEAC(v77);
        goto LABEL_17;
      }
      result = sub_10000BEAC(&v81);
LABEL_17:
      ++v36;
      v37 += 40;
      if (v34 == v36)
      {
        v57 = v80;
        goto LABEL_28;
      }
    }
  }
  v57 = _swiftEmptyArrayStorage;
LABEL_28:
  swift_bridgeObjectRelease(v33);
  v58 = v57[2];
  if (v58)
  {
    v77[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v58);
    v59 = (uint64_t)(v57 + 4);
    do
    {
      sub_100084C44(v59, (uint64_t)&v81);
      v60 = *((_QWORD *)&v82 + 1);
      v61 = v83;
      sub_10000BE88(&v81, *((uint64_t *)&v82 + 1));
      v62 = (*(uint64_t (**)(uint64_t, unint64_t))(v61 + 16))(v60, v61);
      sub_100084C88(v63, v64, v65);
      v66 = sub_10000BEAC(&v81);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v66);
      v67 = *(_QWORD *)(v77[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v67);
      v68 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v62);
      specialized ContiguousArray._endMutation()(v68);
      v59 += 40;
      --v58;
    }
    while (v58);
    v69 = (_QWORD *)v77[0];
    swift_release();
  }
  else
  {
    swift_release();
    v69 = _swiftEmptyArrayStorage;
  }
  sub_100008B04(&qword_10149BB60);
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v69);
  swift_bridgeObjectRelease(v69);
  return v84[0];
}

void sub_10012F980(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  int64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char v78;
  char *v79;
  unint64_t v80;
  _QWORD *v81;
  char v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  _QWORD *v102;
  uint64_t *v103;
  _QWORD *v104;
  char v105;
  char *v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t *v123;
  _QWORD *v124;
  char v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __n128 v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t *v135;
  _QWORD *v136;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __n128 v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unsigned __int8 v166;
  unsigned __int8 v167;
  uint64_t v168;
  uint64_t *v169;
  char *v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  char *v182;
  unint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t *v186;
  _QWORD v187[3];
  uint64_t v188;
  uint64_t v189;
  __int128 v190;
  __int128 v191;
  unint64_t v192;
  _QWORD v193[2];
  uint64_t v194;
  uint64_t v195;

  v171 = a3;
  v186 = a2;
  v6 = sub_100008B04(&qword_10149BB70);
  __chkstk_darwin(v6);
  v8 = (char *)&v168 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v179 = (uint64_t)&v168 - v10;
  v178 = sub_100008B04(&qword_10149BB78);
  v11 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v180 = (char *)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v168 - v14;
  v185 = a1;
  sub_10000C1FC(a1, (uint64_t)v193, (uint64_t *)&unk_10149BAA0);
  v16 = v194;
  v170 = v15;
  v182 = v8;
  v183 = v6;
  v181 = v11;
  if (v194)
  {
    v17 = v195;
    sub_10000BE88(v193, v194);
    v18 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
    sub_10000BEAC(v193);
  }
  else
  {
    sub_100010CC4((uint64_t)v193, (uint64_t *)&unk_10149BAA0);
    v18 = _swiftEmptyArrayStorage;
  }
  v19 = sub_10012D550(v171);
  v20 = v19;
  v21 = v19[2];
  v173 = a4;
  v184 = v18;
  if (v21)
  {
    *(_QWORD *)&v190 = _swiftEmptyArrayStorage;
    sub_1001324F4(0, v21, 0);
    v22 = v20;
    v23 = (uint64_t)(v20 + 4);
    v24 = (_QWORD *)v190;
    do
    {
      sub_100084C44(v23, (uint64_t)v193);
      v25 = v194;
      v26 = v195;
      sub_10000BE88(v193, v194);
      v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
      v29 = v28;
      v31 = v30;
      v33 = v32;
      sub_10000BEAC(v193);
      if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
      {
        sub_1001324F4(0, v24[2] + 1, 1);
        v24 = (_QWORD *)v190;
      }
      v35 = v24[2];
      v34 = v24[3];
      if (v35 >= v34 >> 1)
      {
        sub_1001324F4(v34 > 1, v35 + 1, 1);
        v24 = (_QWORD *)v190;
      }
      v24[2] = v35 + 1;
      v36 = &v24[4 * v35];
      v36[4] = v27;
      v36[5] = v29;
      v36[6] = v31;
      *((_BYTE *)v36 + 56) = v33;
      v23 += 40;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease(v22);
    v18 = v184;
  }
  else
  {
    swift_bridgeObjectRelease(v19);
    v24 = _swiftEmptyArrayStorage;
  }
  v37 = v18[2];
  v38 = _swiftEmptyArrayStorage;
  if (v37)
  {
    v177 = v24;
    *(_QWORD *)&v190 = _swiftEmptyArrayStorage;
    sub_1001324F4(0, v37, 0);
    v39 = (uint64_t)(v18 + 4);
    do
    {
      sub_100084C44(v39, (uint64_t)v193);
      v40 = v194;
      v41 = v195;
      sub_10000BE88(v193, v194);
      v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v40, v41);
      v44 = v43;
      v46 = v45;
      v48 = v47;
      sub_10000BEAC(v193);
      v38 = (_QWORD *)v190;
      if ((swift_isUniquelyReferenced_nonNull_native(v190) & 1) == 0)
      {
        sub_1001324F4(0, v38[2] + 1, 1);
        v38 = (_QWORD *)v190;
      }
      v50 = v38[2];
      v49 = v38[3];
      if (v50 >= v49 >> 1)
      {
        sub_1001324F4(v49 > 1, v50 + 1, 1);
        v38 = (_QWORD *)v190;
      }
      v38[2] = v50 + 1;
      v51 = &v38[4 * v50];
      v51[4] = v42;
      v51[5] = v44;
      v51[6] = v46;
      *((_BYTE *)v51 + 56) = v48;
      v39 += 40;
      --v37;
    }
    while (v37);
    v18 = v184;
    v24 = v177;
  }
  if ((sub_1000843AC((uint64_t)v24, (uint64_t)v38) & 1) != 0)
  {
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v24);
LABEL_61:
    swift_bridgeObjectRelease(v18);
    v153 = sub_10012D550(v171);
    v154 = v153[2];
    if (v154)
    {
      v184 = v153;
      v155 = (uint64_t)(v153 + 4);
      do
      {
        sub_100084C44(v155, (uint64_t)v193);
        sub_10000C1FC(v185, (uint64_t)v187, (uint64_t *)&unk_10149BAA0);
        if (v188)
        {
          v158 = v189;
          sub_10000BE88(v187, v188);
          v159 = v194;
          v160 = v195;
          sub_10000BE88(v193, v194);
          v161 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v160 + 16))(v159, v160);
          v163 = v162;
          v165 = v164;
          v167 = v166;
          (*(void (**)(__int128 *__return_ptr))(v158 + 32))(&v190);

          sub_100084C88(v163, v165, v167);
          sub_10000BEAC(v187);
        }
        else
        {
          sub_100010CC4((uint64_t)v187, (uint64_t *)&unk_10149BAA0);
          v190 = 0u;
          v191 = 0u;
          v192 = 0;
        }
        v156 = v194;
        v157 = v195;
        sub_10000BE88(v193, v194);
        sub_100130848((uint64_t)&v190, v186, v156, v157);
        sub_100010CC4((uint64_t)&v190, (uint64_t *)&unk_10149BAA0);
        sub_10000BEAC(v193);
        v155 += 40;
        --v154;
      }
      while (v154);
      v153 = v184;
    }
    swift_bridgeObjectRelease(v153);
    return;
  }
  v193[0] = v24;
  *(_QWORD *)&v190 = v38;
  v52 = sub_100008B04(&qword_10149BB80);
  v53 = sub_100010D70(&qword_10149BB88, &qword_10149BB80, (const char *)&protocol conformance descriptor for [A]);
  v54 = sub_100135A0C();
  v55 = v180;
  BidirectionalCollection<>.difference<A>(from:)(&v190, v52, v52, v53, v53, v54);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v38);
  v56 = sub_100135A50();
  v57 = v170;
  v58 = v178;
  CollectionDifference<A>.inferringMoves()(v178, v56);
  v59 = v181;
  v60 = *(void (**)(char *, uint64_t))(v181 + 8);
  v60(v55, v58);
  v187[0] = v18;
  v61 = v182;
  v177 = *(_QWORD **)(v59 + 16);
  ((void (*)(char *, char *, uint64_t))v177)(v182, v57, v58);
  v62 = sub_100010D70(&qword_10149BBA0, &qword_10149BB78, (const char *)&protocol conformance descriptor for CollectionDifference<A>);
  dispatch thunk of Collection.startIndex.getter(v193, v58, v62);
  v63 = v183;
  *(_QWORD *)&v61[*(int *)(v183 + 36)] = v193[0];
  v64 = v179;
  sub_1000207BC((uint64_t)v61, v179, &qword_10149BB70);
  v65 = (_QWORD *)(v64 + *(int *)(v63 + 36));
  v66 = *v65;
  dispatch thunk of Collection.endIndex.getter(v193, v58, v62);
  if (v66 == v193[0])
  {
LABEL_60:
    sub_100010CC4(v64, &qword_10149BB70);
    v60(v57, v58);
    goto LABEL_61;
  }
  v176 = v60;
  v169 = v186 + 2;
  v172 = v186 + 1;
  v175 = v62;
  v174 = v65;
  while (1)
  {
    v182 = (char *)dispatch thunk of Collection.subscript.read(v193, v65, v58, v62);
    v68 = v65;
    v70 = *(char **)(v69 + 8);
    v71 = v64;
    v73 = *(_QWORD *)(v69 + 16);
    v72 = *(_QWORD *)(v69 + 24);
    v74 = v58;
    v76 = *(_QWORD *)(v69 + 32);
    v75 = *(_QWORD *)(v69 + 40);
    v77 = *(unsigned __int8 *)(v69 + 48);
    v78 = *(_BYTE *)(v69 + 49);
    v183 = *(_QWORD *)v69;
    v181 = v75;
    LODWORD(v184) = v77;
    sub_100135A94(v183, v70, v73, v72, v76);
    ((void (*)(_QWORD *, _QWORD))v182)(v193, 0);
    v79 = v180;
    ((void (*)(char *, uint64_t, uint64_t))v177)(v180, v71, v74);
    dispatch thunk of Collection.formIndex(after:)(v68, v74, v62);
    v176(v79, v74);
    if ((v78 & 1) != 0)
      break;
    v85 = v183;
    v86 = v173;
    v87 = *(_QWORD *)(v173 + 16);
    v88 = v70;
    sub_10000BE70(v73, v72, v76);
    if (v87)
    {
      v89 = v88;
      sub_10000BE70(v73, v72, v76);
      v90 = sub_1000C1674((uint64_t)v89, v73, v72, v76);
      if ((v91 & 1) != 0)
      {
        v182 = v70;
        v92 = *(_QWORD *)(v86 + 56) + 32 * v90;
        v93 = *(_QWORD *)(v92 + 8);
        v94 = *(_QWORD *)(v92 + 16);
        v95 = *(_QWORD *)(v92 + 24);
        v96 = *(id *)v92;
        swift_bridgeObjectRetain(v93);
        swift_bridgeObjectRetain(v94);
        swift_bridgeObjectRetain(v95);

        v97 = v73;
        v98 = v73;
        v99 = v72;
        v100 = v72;
        v101 = v76;
        sub_100084C88(v98, v100, v76);
        *((_QWORD *)&v191 + 1) = &type metadata for HomeListSectionSnapshot;
        v192 = sub_1001351DC();
        v102 = (_QWORD *)swift_allocObject(&unk_1011A49F0, 48, 7);
        *(_QWORD *)&v190 = v102;
        v102[2] = v96;
        v102[3] = v93;
        v102[4] = v94;
        v102[5] = v95;
        sub_10000BE48(&v190, (uint64_t)v193);
        if (*(_QWORD *)(v187[0] + 16) < v85)
          goto LABEL_72;
        if (v85 < 0)
          goto LABEL_73;
        sub_100084C44((uint64_t)v193, (uint64_t)&v190);
        sub_10020DC70(v85, v85, (uint64_t)&v190);
        if ((v184 & 1) != 0)
        {
          sub_100084C44((uint64_t)v193, (uint64_t)&v190);
          v135 = v186;
          v136 = (_QWORD *)*v186;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v186);
          *v135 = (uint64_t)v136;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v136 = sub_1000A877C(0, v136[2] + 1, 1, v136);
            *v186 = (uint64_t)v136;
          }
          v139 = v136[2];
          v138 = v136[3];
          if (v139 >= v138 >> 1)
          {
            v152 = sub_1000A877C((_QWORD *)(v138 > 1), v139 + 1, 1, v136);
            *v186 = (uint64_t)v152;
          }
          v140 = *((_QWORD *)&v191 + 1);
          v141 = v192;
          v142 = sub_1001359A0((uint64_t)&v190, *((uint64_t *)&v191 + 1));
          v143 = __chkstk_darwin(v142);
          v145 = (char *)&v168 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v146 + 16))(v145, v143);
          v147 = (uint64_t)v145;
          v148 = v186;
          sub_100134DCC(v139, v147, v186, v140, v141);
          sub_10000BEAC(&v190);
          v149 = *v148;

          sub_100084C88(v97, v99, v76);
          sub_100135AD0(v85, v182, v97, v99, v76);
          *v148 = v149;
        }
        else
        {
          sub_100084C44((uint64_t)v193, (uint64_t)&v190);
          v103 = v169;
          v104 = (_QWORD *)*v169;
          v105 = swift_isUniquelyReferenced_nonNull_native(*v169);
          *v103 = (uint64_t)v104;
          if ((v105 & 1) == 0)
          {
            v104 = sub_1000A877C(0, v104[2] + 1, 1, v104);
            *v169 = (uint64_t)v104;
          }
          v106 = v89;
          v108 = v104[2];
          v107 = v104[3];
          if (v108 >= v107 >> 1)
          {
            v151 = sub_1000A877C((_QWORD *)(v107 > 1), v108 + 1, 1, v104);
            *v169 = (uint64_t)v151;
          }
          v109 = *((_QWORD *)&v191 + 1);
          v110 = v192;
          v111 = sub_1001359A0((uint64_t)&v190, *((uint64_t *)&v191 + 1));
          v168 = (uint64_t)&v168;
          v112 = __chkstk_darwin(v111);
          v114 = (char *)&v168 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v115 + 16))(v114, v112);
          v116 = v169;
          sub_100134DCC(v108, (uint64_t)v114, v169, v109, v110);
          sub_10000BEAC(&v190);
          v117 = *v116;

          sub_100084C88(v97, v99, v101);
          v118 = v85;
          v119 = v182;
          v120 = v97;
          v121 = v99;
          v122 = v101;
LABEL_52:
          sub_100135AD0(v118, v119, v120, v121, v122);
          *v116 = v117;
        }
        goto LABEL_53;
      }

      sub_100084C88(v73, v72, v76);
    }

    sub_100084C88(v73, v72, v76);
    sub_100135AD0(v85, v70, v73, v72, v76);
    v58 = v178;
    v62 = v175;
    v65 = v174;
    v64 = v179;
LABEL_27:
    v67 = *v65;
    dispatch thunk of Collection.endIndex.getter(v193, v58, v62);
    if (v67 == v193[0])
    {
      v18 = (_QWORD *)v187[0];
      v57 = v170;
      v60 = v176;
      goto LABEL_60;
    }
  }
  v80 = v183;
  if ((v183 & 0x8000000000000000) == 0)
  {
    v81 = (_QWORD *)v187[0];
    if (v183 >= *(_QWORD *)(v187[0] + 16))
      goto LABEL_70;
    sub_100084C44(v187[0] + 40 * v183 + 32, (uint64_t)v193);
    if ((swift_isUniquelyReferenced_nonNull_native(v81) & 1) == 0)
    {
      v81 = sub_10020D8D0(v81);
      v187[0] = v81;
    }
    v82 = (char)v184;
    v83 = v81[2];
    if (v80 >= v83)
      goto LABEL_71;
    v84 = v83 - 1;
    sub_10000BEAC(&v81[5 * v80 + 4]);
    if ((uint64_t)(v84 - v80) < 0)
      goto LABEL_74;
    memmove(&v81[5 * v80 + 4], &v81[5 * v80 + 9], 40 * (v84 - v80));
    v81[2] = v84;
    v187[0] = v81;
    if ((v82 & 1) != 0)
    {
      sub_100084C44((uint64_t)v193, (uint64_t)&v190);
      v123 = v172;
      v124 = (_QWORD *)*v172;
      v125 = swift_isUniquelyReferenced_nonNull_native(*v172);
      *v123 = (uint64_t)v124;
      if ((v125 & 1) == 0)
      {
        v124 = sub_1000A877C(0, v124[2] + 1, 1, v124);
        *v172 = (uint64_t)v124;
      }
      v127 = v124[2];
      v126 = v124[3];
      if (v127 >= v126 >> 1)
      {
        v150 = sub_1000A877C((_QWORD *)(v126 > 1), v127 + 1, 1, v124);
        *v172 = (uint64_t)v150;
      }
      v128 = *((_QWORD *)&v191 + 1);
      v129 = v192;
      v130 = sub_1001359A0((uint64_t)&v190, *((uint64_t *)&v191 + 1));
      v131 = __chkstk_darwin(v130);
      v133 = (char *)&v168 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v134 + 16))(v133, v131);
      v116 = v172;
      sub_100134DCC(v127, (uint64_t)v133, v172, v128, v129);
      sub_10000BEAC(&v190);
      v117 = *v116;
      v118 = v183;
      v119 = v70;
      v120 = v73;
      v121 = v72;
      v122 = v76;
      goto LABEL_52;
    }
    sub_100135AD0(v80, v70, v73, v72, v76);
LABEL_53:
    sub_10000BEAC(v193);
    v64 = v179;
    v58 = v178;
    v62 = v175;
    v65 = v174;
    goto LABEL_27;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
}

uint64_t sub_100130848(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t *v68;
  int *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  void (*v74)(_QWORD **, _QWORD);
  uint64_t v75;
  int *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char **v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t, __n128);
  id v86;
  _QWORD *v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t *v91;
  _QWORD *v92;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 v109;
  uint64_t v110;
  void (*v111)(__int128 *__return_ptr, int *, uint64_t, uint64_t, char **, uint64_t, uint64_t);
  int *v112;
  char v113;
  uint64_t *v114;
  _QWORD *v115;
  char v116;
  unsigned __int8 v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __n128 v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t *v127;
  _QWORD *v128;
  char v129;
  int *v130;
  uint64_t v131;
  unsigned __int8 v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  __n128 v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned __int8 v161;
  unsigned __int8 v162;
  uint64_t v163;
  uint64_t v164;
  __n128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t result;
  uint64_t *v174;
  char v175;
  unint64_t v176;
  unint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t (*v184)(uint64_t);
  uint64_t v185;
  uint64_t *v186;
  uint64_t *v187;
  char **v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t *v191;
  uint64_t v192;
  void (*v193)(char *, uint64_t);
  _QWORD *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  int *v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t *v205;
  _QWORD v206[3];
  uint64_t v207;
  uint64_t v208;
  __int128 v209;
  __int128 v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;

  v189 = a4;
  v205 = a2;
  v197 = a3;
  v5 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v181 = (char *)&v181 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v182 = (char *)&v181 - v8;
  __chkstk_darwin(v9);
  v200 = (char *)&v181 - v10;
  v11 = (int *)sub_100008B04(&qword_10149BB70);
  __chkstk_darwin(v11);
  v13 = (char *)&v181 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v195 = (uint64_t)&v181 - v15;
  v198 = sub_100008B04(&qword_10149BB78);
  v16 = *(_QWORD *)(v198 - 8);
  __chkstk_darwin(v198);
  v196 = (char *)&v181 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v181 - v19;
  v204 = a1;
  sub_10000C1FC(a1, (uint64_t)&v212, (uint64_t *)&unk_10149BAA0);
  v21 = v213;
  v183 = v20;
  v201 = v13;
  v202 = v11;
  v199 = v16;
  if (v213)
  {
    v22 = v214;
    sub_10000BE88(&v212, v213);
    v23 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
    sub_10000BEAC(&v212);
  }
  else
  {
    sub_100010CC4((uint64_t)&v212, (uint64_t *)&unk_10149BAA0);
    v23 = _swiftEmptyArrayStorage;
  }
  v184 = *(uint64_t (**)(uint64_t))(v189 + 24);
  v24 = v184(v197);
  v25 = v24;
  v26 = *(_QWORD *)(v24 + 16);
  v185 = v5;
  v203 = v23;
  if (v26)
  {
    *(_QWORD *)&v209 = _swiftEmptyArrayStorage;
    sub_1001324F4(0, v26, 0);
    v27 = v25;
    v28 = v25 + 32;
    v29 = (_QWORD *)v209;
    do
    {
      sub_100084C44(v28, (uint64_t)&v212);
      v30 = v213;
      v31 = v214;
      sub_10000BE88(&v212, v213);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
      v34 = v33;
      v36 = v35;
      v38 = v37;
      sub_10000BEAC(&v212);
      if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
      {
        sub_1001324F4(0, v29[2] + 1, 1);
        v29 = (_QWORD *)v209;
      }
      v40 = v29[2];
      v39 = v29[3];
      if (v40 >= v39 >> 1)
      {
        sub_1001324F4(v39 > 1, v40 + 1, 1);
        v29 = (_QWORD *)v209;
      }
      v29[2] = v40 + 1;
      v41 = &v29[4 * v40];
      v41[4] = v32;
      v41[5] = v34;
      v41[6] = v36;
      *((_BYTE *)v41 + 56) = v38;
      v28 += 40;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease(v27);
    v23 = v203;
  }
  else
  {
    swift_bridgeObjectRelease(v24);
    v29 = _swiftEmptyArrayStorage;
  }
  v42 = v23[2];
  v43 = _swiftEmptyArrayStorage;
  if (v42)
  {
    v194 = v29;
    *(_QWORD *)&v209 = _swiftEmptyArrayStorage;
    sub_1001324F4(0, v42, 0);
    v44 = (uint64_t)(v23 + 4);
    do
    {
      sub_100084C44(v44, (uint64_t)&v212);
      v45 = v213;
      v46 = v214;
      sub_10000BE88(&v212, v213);
      v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 16))(v45, v46);
      v49 = v48;
      v51 = v50;
      v53 = v52;
      sub_10000BEAC(&v212);
      v43 = (_QWORD *)v209;
      if ((swift_isUniquelyReferenced_nonNull_native(v209) & 1) == 0)
      {
        sub_1001324F4(0, v43[2] + 1, 1);
        v43 = (_QWORD *)v209;
      }
      v55 = v43[2];
      v54 = v43[3];
      if (v55 >= v54 >> 1)
      {
        sub_1001324F4(v54 > 1, v55 + 1, 1);
        v43 = (_QWORD *)v209;
      }
      v43[2] = v55 + 1;
      v56 = &v43[4 * v55];
      v56[4] = v47;
      v56[5] = v49;
      v56[6] = v51;
      *((_BYTE *)v56 + 56) = v53;
      v44 += 40;
      --v42;
    }
    while (v42);
    v23 = v203;
    v29 = v194;
  }
  v57 = sub_1000843AC((uint64_t)v29, (uint64_t)v43);
  v58 = v198;
  if ((v57 & 1) != 0)
  {
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v29);
    goto LABEL_59;
  }
  v212 = v29;
  *(_QWORD *)&v209 = v43;
  v59 = sub_100008B04(&qword_10149BB80);
  v60 = sub_100010D70(&qword_10149BB88, &qword_10149BB80, (const char *)&protocol conformance descriptor for [A]);
  v61 = sub_100135A0C();
  v62 = v196;
  BidirectionalCollection<>.difference<A>(from:)(&v209, v59, v59, v60, v60, v61);
  swift_bridgeObjectRelease(v29);
  swift_bridgeObjectRelease(v43);
  v63 = sub_100135A50();
  v64 = v183;
  CollectionDifference<A>.inferringMoves()(v58, v63);
  v65 = v199;
  v66 = *(void (**)(char *, uint64_t))(v199 + 8);
  v66(v62, v58);
  v206[0] = v23;
  v67 = (uint64_t)v201;
  v194 = *(_QWORD **)(v65 + 16);
  ((void (*)(char *, char *, uint64_t))v194)(v201, v64, v58);
  v68 = (uint64_t *)sub_100010D70(&qword_10149BBA0, &qword_10149BB78, (const char *)&protocol conformance descriptor for CollectionDifference<A>);
  dispatch thunk of Collection.startIndex.getter(&v212, v58, v68);
  v69 = v202;
  *(_QWORD *)(v67 + v202[9]) = v212;
  v70 = v195;
  sub_1000207BC(v67, v195, &qword_10149BB70);
  v71 = (_QWORD *)(v70 + v69[9]);
  v72 = (_QWORD *)*v71;
  dispatch thunk of Collection.endIndex.getter(&v212, v58, v68);
  if (v72 != v212)
  {
    v193 = v66;
    v186 = v205 + 2;
    v187 = v205 + 1;
    v191 = v68;
    v190 = v71;
    while (1)
    {
      v74 = (void (*)(_QWORD **, _QWORD))dispatch thunk of Collection.subscript.read(&v212, v71, v58, v68);
      v77 = *(_QWORD *)v75;
      v76 = *(int **)(v75 + 8);
      v78 = *(_QWORD *)(v75 + 16);
      v79 = *(_QWORD *)(v75 + 24);
      v80 = v58;
      v81 = *(char ***)(v75 + 32);
      v82 = *(unsigned __int8 *)(v75 + 48);
      v83 = *(unsigned __int8 *)(v75 + 49);
      v84 = *(_QWORD *)v75;
      v201 = *(char **)(v75 + 40);
      v202 = v76;
      LODWORD(v203) = v82;
      sub_100135A94(v84, v76, v78, v79, v81);
      v74(&v212, 0);
      v85 = (void (*)(char *, uint64_t, uint64_t, __n128))v196;
      ((void (*)(char *, uint64_t, uint64_t))v194)(v196, v70, v80);
      dispatch thunk of Collection.formIndex(after:)(v71, v80, v68);
      v193((char *)v85, v80);
      if ((v83 & 1) == 0)
        break;
      v188 = v81;
      v86 = v202;
      if ((v77 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      v87 = (_QWORD *)v206[0];
      if (v77 >= *(_QWORD *)(v206[0] + 16))
        goto LABEL_75;
      v83 = 40;
      sub_100084C44(v206[0] + 40 * v77 + 32, (uint64_t)&v212);
      if ((swift_isUniquelyReferenced_nonNull_native(v87) & 1) == 0)
      {
        v87 = sub_10020D8D0(v87);
        v206[0] = v87;
      }
      v88 = (char)v203;
      v89 = v87[2];
      if (v77 >= v89)
        goto LABEL_76;
      v90 = v89 - 1;
      sub_10000BEAC(&v87[5 * v77 + 4]);
      if ((uint64_t)(v90 - v77) < 0)
      {
        result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
        __break(1u);
        return result;
      }
      memmove(&v87[5 * v77 + 4], &v87[5 * v77 + 9], 40 * (v90 - v77));
      v87[2] = v90;
      v206[0] = v87;
      if ((v88 & 1) != 0)
      {
        sub_100084C44((uint64_t)&v212, (uint64_t)&v209);
        v91 = v187;
        v92 = (_QWORD *)*v187;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v187);
        *v91 = (uint64_t)v92;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v92 = sub_1000A877C(0, v92[2] + 1, 1, v92);
          *v187 = (uint64_t)v92;
        }
        v199 = v77;
        v95 = v92[2];
        v94 = v92[3];
        if (v95 >= v94 >> 1)
        {
          v145 = sub_1000A877C((_QWORD *)(v94 > 1), v95 + 1, 1, v92);
          *v187 = (uint64_t)v145;
        }
        v96 = *((_QWORD *)&v210 + 1);
        v97 = v211;
        v98 = sub_1001359A0((uint64_t)&v209, *((uint64_t *)&v210 + 1));
        v99 = __chkstk_darwin(v98);
        v101 = (char *)&v181 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v102 + 16))(v101, v99);
        v103 = v187;
        sub_100134DCC(v95, (uint64_t)v101, v187, v96, v97);
        sub_10000BEAC(&v209);
        v104 = *v103;
        v105 = v199;
        v106 = v86;
        v107 = v78;
        v108 = v79;
        v109 = v188;
LABEL_50:
        sub_100135AD0(v105, v106, v107, v108, v109);
        *v103 = v104;
        goto LABEL_26;
      }
      sub_100135AD0(v77, v86, v78, v79, v188);
LABEL_26:
      sub_10000BEAC(&v212);
LABEL_27:
      v70 = v195;
      v58 = v198;
      v68 = v191;
      v71 = v190;
      v73 = (_QWORD *)*v190;
      dispatch thunk of Collection.endIndex.getter(&v212, v198, v191);
      if (v73 == v212)
      {
        v23 = (_QWORD *)v206[0];
        v64 = v183;
        v66 = v193;
        goto LABEL_58;
      }
    }
    v199 = v77;
    v110 = v189;
    v111 = *(void (**)(__int128 *__return_ptr, int *, uint64_t, uint64_t, char **, uint64_t, uint64_t))(v189 + 32);
    v83 = (uint64_t)v202;
    v112 = v202;
    sub_10000BE70(v78, v79, v81);
    v111(&v209, v112, v78, v79, v81, v197, v110);
    v85 = (void (*)(char *, uint64_t, uint64_t, __n128))v81;
    v86 = (id)v79;
    if (!*((_QWORD *)&v210 + 1))
    {
      sub_100010CC4((uint64_t)&v209, (uint64_t *)&unk_10149BAA0);

      sub_100084C88(v78, v79, v85);
      sub_100135AD0(v199, (void *)v83, v78, v79, v85);
      goto LABEL_27;
    }
    sub_10000BE48(&v209, (uint64_t)&v212);
    v68 = (uint64_t *)v199;
    v113 = (char)v203;
    if (*(_QWORD *)(v206[0] + 16) < v199)
      goto LABEL_77;
    if (v199 < 0)
      goto LABEL_78;
    sub_100084C44((uint64_t)&v212, (uint64_t)&v209);
    sub_10020DC70((uint64_t)v68, (int64_t)v68, (uint64_t)&v209);
    if ((v113 & 1) != 0)
    {
      sub_100084C44((uint64_t)&v212, (uint64_t)&v209);
      v127 = v205;
      v128 = (_QWORD *)*v205;
      v129 = swift_isUniquelyReferenced_nonNull_native(*v205);
      *v127 = (uint64_t)v128;
      v130 = v112;
      if ((v129 & 1) == 0)
      {
        v128 = sub_1000A877C(0, v128[2] + 1, 1, v128);
        *v205 = (uint64_t)v128;
      }
      v131 = (uint64_t)v86;
      v132 = v85;
      v134 = v128[2];
      v133 = v128[3];
      if (v134 >= v133 >> 1)
      {
        v147 = sub_1000A877C((_QWORD *)(v133 > 1), v134 + 1, 1, v128);
        *v205 = (uint64_t)v147;
      }
      v135 = *((_QWORD *)&v210 + 1);
      v136 = v211;
      v137 = sub_1001359A0((uint64_t)&v209, *((uint64_t *)&v210 + 1));
      v188 = &v181;
      v138 = __chkstk_darwin(v137);
      v140 = (char *)&v181 - ((v139 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v141 + 16))(v140, v138);
      v142 = (uint64_t)v140;
      v143 = v205;
      sub_100134DCC(v134, v142, v205, v135, v136);
      sub_10000BEAC(&v209);
      v144 = *v143;

      sub_100084C88(v78, v131, v132);
      sub_100135AD0(v199, (void *)v83, v78, v131, v132);
      *v143 = v144;
      goto LABEL_26;
    }
    sub_100084C44((uint64_t)&v212, (uint64_t)&v209);
    v114 = v186;
    v115 = (_QWORD *)*v186;
    v116 = swift_isUniquelyReferenced_nonNull_native(*v186);
    *v114 = (uint64_t)v115;
    if ((v116 & 1) == 0)
    {
      v115 = sub_1000A877C(0, v115[2] + 1, 1, v115);
      *v186 = (uint64_t)v115;
    }
    v117 = v85;
    v119 = v115[2];
    v118 = v115[3];
    if (v119 >= v118 >> 1)
    {
      v146 = sub_1000A877C((_QWORD *)(v118 > 1), v119 + 1, 1, v115);
      *v186 = (uint64_t)v146;
    }
    v120 = *((_QWORD *)&v210 + 1);
    v121 = v211;
    v122 = sub_1001359A0((uint64_t)&v209, *((uint64_t *)&v210 + 1));
    v188 = &v181;
    v123 = __chkstk_darwin(v122);
    v125 = (char *)&v181 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v126 + 16))(v125, v123);
    v103 = v186;
    sub_100134DCC(v119, (uint64_t)v125, v186, v120, v121);
    sub_10000BEAC(&v209);
    v104 = *v103;

    sub_100084C88(v78, v79, v117);
    v105 = v199;
    v106 = v202;
    v107 = v78;
    v108 = v79;
    v109 = v117;
    goto LABEL_50;
  }
LABEL_58:
  sub_100010CC4(v70, &qword_10149BB70);
  v66(v64, v58);
LABEL_59:
  v148 = swift_bridgeObjectRelease(v23);
  v149 = v200;
  v150 = ((uint64_t (*)(uint64_t, uint64_t, __n128))v184)(v197, v189, v148);
  v151 = *(_QWORD *)(v150 + 16);
  if (v151)
  {
    v203 = (_QWORD *)v150;
    v152 = v150 + 32;
    do
    {
      sub_100084C44(v152, (uint64_t)&v212);
      sub_10000C1FC(v204, (uint64_t)v206, (uint64_t *)&unk_10149BAA0);
      if (v207)
      {
        v153 = v208;
        sub_10000BE88(v206, v207);
        v154 = v213;
        v155 = v214;
        sub_10000BE88(&v212, v213);
        v156 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v155 + 16))(v154, v155);
        v158 = v157;
        v160 = v159;
        v162 = v161;
        (*(void (**)(__int128 *__return_ptr))(v153 + 32))(&v209);

        v149 = v200;
        sub_100084C88(v158, v160, v162);
        sub_10000BEAC(v206);
      }
      else
      {
        sub_100010CC4((uint64_t)v206, (uint64_t *)&unk_10149BAA0);
        v209 = 0u;
        v210 = 0u;
        v211 = 0;
      }
      v163 = v213;
      v164 = v214;
      sub_10000BE88(&v212, v213);
      sub_100130848(&v209, v205, v163, v164);
      sub_100010CC4((uint64_t)&v209, (uint64_t *)&unk_10149BAA0);
      sub_10000BEAC(&v212);
      v152 += 40;
      --v151;
    }
    while (v151);
    v150 = (uint64_t)v203;
  }
  v165 = swift_bridgeObjectRelease(v150);
  v166 = v204;
  v167 = *(_QWORD *)(v204 + 24);
  v168 = v185;
  v85 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v185 + 16);
  v169 = v197;
  v85(v149, v192, v197, v165);
  sub_10000C1FC(v166, (uint64_t)&v212, (uint64_t *)&unk_10149BAA0);
  if (v167)
  {
    v170 = (*(uint64_t (**)(_QWORD **, uint64_t))(v189 + 40))(&v212, v197);
    v171 = v197;
    v172 = v170;
    sub_100010CC4((uint64_t)&v212, (uint64_t *)&unk_10149BAA0);
    v86 = *(id *)(v168 + 8);
    result = ((uint64_t (*)(char *, uint64_t))v86)(v149, v171);
    if ((v172 & 1) != 0)
    {
      ((void (*)(char *, uint64_t, uint64_t))v85)(v182, v192, v171);
      v174 = v205 + 3;
      v83 = v205[3];
      v175 = swift_isUniquelyReferenced_nonNull_native(v83);
      v68 = v174;
      *v174 = v83;
      if ((v175 & 1) == 0)
      {
LABEL_79:
        v83 = (uint64_t)sub_1000A877C(0, *(_QWORD *)(v83 + 16) + 1, 1, (_QWORD *)v83);
        *v68 = v83;
      }
      v177 = *(_QWORD *)(v83 + 16);
      v176 = *(_QWORD *)(v83 + 24);
      if (v177 >= v176 >> 1)
        *v68 = (uint64_t)sub_1000A877C((_QWORD *)(v176 > 1), v177 + 1, 1, (_QWORD *)v83);
      v178 = (uint64_t)v181;
      v179 = v182;
      v180 = v197;
      ((void (*)(char *, char *, uint64_t))v85)(v181, v182, v197);
      sub_100134DCC(v177, v178, v68, v180, v189);
      return ((uint64_t (*)(char *, uint64_t))v86)(v179, v180);
    }
  }
  else
  {
    sub_100010CC4((uint64_t)&v212, (uint64_t *)&unk_10149BAA0);
    return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v149, v169);
  }
  return result;
}

uint64_t sub_1001318EC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  _QWORD v16[2];
  char v17;
  _QWORD v18[2];

  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  v7 = a1;
  v8 = objc_msgSend(v7, "description");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);

  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 10272;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v16[0] = a2;
  v16[1] = a3;
  v17 = a4;
  _print_unlocked<A, B>(_:_:)(v16, v18, &type metadata for HomeListElementKey.ElementKind, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v14._countAndFlagsBits = 41;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  return v18[0];
}

uint64_t sub_1001319D4()
{
  uint64_t v0;

  return sub_1001318EC(*(void **)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1001319E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v4 = type metadata accessor for Mirror.AncestorRepresentation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_10149BAE8);
  __chkstk_darwin(v8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  v11 = sub_100008B04(&qword_10149BAF0);
  v12 = swift_allocObject(v11, 80, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v12 + 32) = 0xD000000000000010;
  *(_QWORD *)(v12 + 40) = 0x8000000100E4BD60;
  *(_QWORD *)(v12 + 72) = sub_100008B04((uint64_t *)&unk_10149BAF8);
  *(_QWORD *)(v12 + 48) = a1;
  v13 = type metadata accessor for Mirror.DisplayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Mirror.AncestorRepresentation.generated(_:), v4);
  swift_bridgeObjectRetain_n(a1, 2);
  swift_bridgeObjectRetain(a2);
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)(v15, v12, v10, v7, &type metadata for HomeListCollectionViewSnapshot);
}

uint64_t sub_100131B68()
{
  uint64_t *v0;

  return sub_1001319E4(*v0, v0[1]);
}

uint64_t sub_100131B70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  _QWORD v23[4];

  v8 = type metadata accessor for Mirror.AncestorRepresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04(&qword_10149BAE8);
  __chkstk_darwin(v12);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = a1;
  v23[1] = a2;
  v23[2] = a3;
  v23[3] = a4;
  v15 = sub_100008B04(&qword_10149BAF0);
  v16 = swift_allocObject(v15, 176, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100E22F50;
  strcpy((char *)(v16 + 32), "identifierPath");
  *(_BYTE *)(v16 + 47) = -18;
  v17 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
  *(_QWORD *)(v16 + 48) = a1;
  *(_QWORD *)(v16 + 72) = v17;
  *(_QWORD *)(v16 + 80) = 0xD00000000000001ALL;
  *(_QWORD *)(v16 + 88) = 0x8000000100E4BD80;
  v18 = sub_100008B04(&qword_10149BB08);
  *(_QWORD *)(v16 + 96) = a3;
  *(_QWORD *)(v16 + 120) = v18;
  strcpy((char *)(v16 + 128), "cellSnapshots");
  *(_WORD *)(v16 + 142) = -4864;
  *(_QWORD *)(v16 + 168) = sub_100008B04((uint64_t *)&unk_10149BB10);
  *(_QWORD *)(v16 + 144) = a2;
  v19 = type metadata accessor for Mirror.DisplayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v14, 1, 1, v19);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for Mirror.AncestorRepresentation.generated(_:), v8);
  v20 = a1;
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain_n(a3, 2);
  v21 = v20;
  swift_bridgeObjectRetain(a4);
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)(v23, v16, v14, v11, &type metadata for HomeListSectionSnapshot);
}

uint64_t sub_100131D9C()
{
  uint64_t v0;

  return sub_100131B70(*(void **)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100131DA8()
{
  void **v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  __int128 v19[2];
  _QWORD v20[3];
  uint64_t v21;
  _BYTE v22[48];

  v1 = v0;
  v2 = type metadata accessor for Mirror.AncestorRepresentation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149BAE8);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084BD4((uint64_t)v1, (uint64_t)v22);
  v9 = sub_100008B04(&qword_10149BAF0);
  v10 = swift_allocObject(v9, 128, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100E22F70;
  strcpy((char *)(v10 + 32), "identifierPath");
  *(_BYTE *)(v10 + 47) = -18;
  v11 = *v1;
  v12 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
  *(_QWORD *)(v10 + 48) = v11;
  *(_QWORD *)(v10 + 72) = v12;
  *(_QWORD *)(v10 + 80) = 0x65646F4D6C6C6563;
  *(_QWORD *)(v10 + 88) = 0xE90000000000006CLL;
  sub_10000C1FC((uint64_t)(v1 + 1), (uint64_t)v19, (uint64_t *)&unk_10149B590);
  sub_10000BE48(v19, (uint64_t)v20);
  v13 = v21;
  v14 = sub_10000BE88(v20, v21);
  *(_QWORD *)(v10 + 120) = v13;
  v15 = sub_100011DCC((_QWORD *)(v10 + 96));
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v15, v14, v13);
  v16 = v11;
  sub_10000BEAC(v20);
  v17 = type metadata accessor for Mirror.DisplayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Mirror.AncestorRepresentation.generated(_:), v2);
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)(v22, v10, v8, v5, &type metadata for HomeListCellSnapshot);
}

uint64_t sub_100131FC0@<X0>(uint64_t a1@<X8>)
{
  void **v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  __int128 v23[2];
  _QWORD v24[3];
  uint64_t v25;
  _BYTE v26[72];

  v2 = v1;
  v22 = a1;
  v3 = type metadata accessor for Mirror.AncestorRepresentation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04(&qword_10149BAE8);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100084B64((uint64_t)v2, (uint64_t)v26);
  v10 = sub_100008B04(&qword_10149BAF0);
  v11 = swift_allocObject(v10, 176, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100E22F50;
  strcpy((char *)(v11 + 32), "identifierPath");
  *(_BYTE *)(v11 + 47) = -18;
  v12 = *v2;
  v13 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
  *(_QWORD *)(v11 + 48) = v12;
  *(_QWORD *)(v11 + 72) = v13;
  *(_QWORD *)(v11 + 80) = 0x4B746E656D656C65;
  v14 = v2[1];
  v15 = v2[2];
  *(_QWORD *)(v11 + 88) = 0xEB00000000646E69;
  *(_QWORD *)(v11 + 96) = v14;
  *(_QWORD *)(v11 + 104) = v15;
  *(_QWORD *)(v11 + 120) = &type metadata for String;
  *(_QWORD *)(v11 + 128) = 0xD000000000000016;
  *(_QWORD *)(v11 + 136) = 0x8000000100E4BDA0;
  sub_10000C1FC((uint64_t)(v2 + 3), (uint64_t)v23, &qword_10149BAC0);
  sub_10000BE48(v23, (uint64_t)v24);
  v16 = v25;
  v17 = sub_10000BE88(v24, v25);
  *(_QWORD *)(v11 + 168) = v16;
  v18 = sub_100011DCC((_QWORD *)(v11 + 144));
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v18, v17, v16);
  v19 = v12;
  swift_bridgeObjectRetain(v15);
  sub_10000BEAC(v24);
  v20 = type metadata accessor for Mirror.DisplayStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Mirror.AncestorRepresentation.generated(_:), v3);
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)(v26, v11, v9, v6, &type metadata for HomeListSupplementaryViewSnapshot);
}

unint64_t sub_100132214(uint64_t a1)
{
  unint64_t result;

  result = sub_100132238();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100132238()
{
  unint64_t result;

  result = qword_10149BA78;
  if (!qword_10149BA78)
  {
    result = swift_getWitnessTable(")u7", &type metadata for HomeListCollectionViewSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA78);
  }
  return result;
}

unint64_t sub_10013227C(uint64_t a1)
{
  unint64_t result;

  result = sub_1001322A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001322A0()
{
  unint64_t result;

  result = qword_10149BA80;
  if (!qword_10149BA80)
  {
    result = swift_getWitnessTable(byte_100E2D6E0, &type metadata for HomeListSectionSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA80);
  }
  return result;
}

unint64_t sub_1001322E4(uint64_t a1)
{
  unint64_t result;

  result = sub_100132308();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100132308()
{
  unint64_t result;

  result = qword_10149BA88;
  if (!qword_10149BA88)
  {
    result = swift_getWitnessTable("es7", &type metadata for HomeListSupplementaryViewSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA88);
  }
  return result;
}

unint64_t sub_100132350()
{
  unint64_t result;

  result = qword_10149BA90;
  if (!qword_10149BA90)
  {
    result = swift_getWitnessTable("-s7", &type metadata for HomeListSupplementaryViewSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA90);
  }
  return result;
}

unint64_t sub_100132394(uint64_t a1)
{
  unint64_t result;

  result = sub_1001323B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001323B8()
{
  unint64_t result;

  result = qword_10149BA98;
  if (!qword_10149BA98)
  {
    result = swift_getWitnessTable(byte_100E2D610, &type metadata for HomeListCellSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BA98);
  }
  return result;
}

uint64_t sub_1001323FC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100132634(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100132418(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10013409C(a1, a2, a3, (_QWORD *)*v3, &qword_101498A88, type metadata accessor for PlaceSummaryViewModelLine);
  *v3 = result;
  return result;
}

uint64_t sub_100132444(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10013279C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100132460(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100133DA0(a1, a2, a3, *v3, &qword_10149BB40);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100132484(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100132A64(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001324A0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100132BCC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001324BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100132E80(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001324D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100133008(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001324F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001331A8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100132510(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10013330C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10013252C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100133474(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100132548(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1001335FC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100132564(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100133A8C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100132580(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10013409C(a1, a2, a3, (_QWORD *)*v3, &qword_101499230, (uint64_t (*)(_QWORD))&type metadata accessor for Handle);
  *v3 = result;
  return result;
}

uint64_t sub_1001325AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100133C00(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1001325C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100133DA0(a1, a2, a3, *v3, (uint64_t *)&unk_10149AA10);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1001325EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100133EF8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100132608(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10013409C(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_10149BBC0, type metadata accessor for PlaceEntity);
  *v3 = result;
  return result;
}

uint64_t sub_100132634(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_101492BF0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10013279C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04((uint64_t *)&unk_101499120);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100132908(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_101498AA8);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[4 * v8] || v14 >= &v15[4 * v8])
  {
    memcpy(v14, v15, 4 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100132A64(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_10149BBE8);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100132BCC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_101496A30);
    v11 = (char *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v8])
      memmove(v14, v15, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v8] || v14 >= &v15[8 * v8])
  {
    memcpy(v14, v15, 8 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100132D28(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_10149BBE0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100132E80(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_10149BB48);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    sub_100008B04((uint64_t *)&unk_10149BB50);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133008(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_10149BAD0);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_100008B04(&qword_101497910);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001331A8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_10149BBA8);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 32 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10013330C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04((uint64_t *)&unk_10149C0F0);
    v11 = (char *)swift_allocObject(v10, (v9 << 6) | 0x20, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 + 31;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 6);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[64 * v8])
      memmove(v14, v15, v8 << 6);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[64 * v8] || v14 >= &v15[64 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133474(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04((uint64_t *)&unk_10149BBB0);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_100008B04(&qword_101494008);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001335FC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04((uint64_t *)&unk_10149A2E0);
    v11 = (char *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[48 * v8])
      memmove(v13, v14, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[48 * v8] || v13 >= &v14[48 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133780(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_10149A1F8);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_100008B04(&qword_10149A200);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133908(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_101498A60);
    v11 = (char *)swift_allocObject(v10, 88 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 88);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[88 * v8])
      memmove(v13, v14, 88 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[88 * v8] || v13 >= &v14[88 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133A8C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04((uint64_t *)&unk_10149BBF0);
    v11 = (char *)swift_allocObject(v10, 80 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 80);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 80 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133C00(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_1014989F8);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_100008B04(&qword_10149BB20);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133DA0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_100008B04(a5);
    v12 = (char *)swift_allocObject(v11, 8 * v10 + 32, 7);
    v13 = j__malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 25;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[8 * v9])
      memmove(v15, v16, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v9] || v15 >= &v16[8 * v9])
  {
    memcpy(v15, v16, 8 * v9);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100133EF8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100008B04(&qword_10149BB28);
    v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 24 * v8)
      memmove(v11 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 24 * v8 || v13 >= v14 + 24 * v8)
  {
    sub_100008B04((uint64_t *)&unk_10149BB30);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10013409C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100008B04(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_10013427C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  Swift::UInt v6;
  int64_t i;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  id v32;
  Swift::UInt v33;
  int64_t v34;
  uint64_t v35;
  int64_t v37;
  id v38;
  Swift::UInt v39;
  __int128 v40[4];
  uint64_t v41;

  v35 = a2 + 64;
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 64);
  v34 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v6 = 0;
  for (i = 0; ; i = v37)
  {
    v39 = v6;
    if (v5)
    {
      v12 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v37 = i;
      v13 = v12 | (i << 6);
      goto LABEL_21;
    }
    v14 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v14 >= v34)
      goto LABEL_30;
    v15 = *(_QWORD *)(v35 + 8 * v14);
    v16 = i + 1;
    if (!v15)
    {
      v16 = i + 2;
      if (i + 2 >= v34)
        goto LABEL_30;
      v15 = *(_QWORD *)(v35 + 8 * v16);
      if (!v15)
        break;
    }
LABEL_20:
    v5 = (v15 - 1) & v15;
    v37 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_21:
    v18 = 32 * v13;
    v19 = *(_QWORD *)(a2 + 48) + v18;
    v20 = *(void **)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(unsigned __int8 *)(v19 + 24);
    v24 = *(_QWORD *)(a2 + 56) + v18;
    v25 = *(void **)v24;
    v26 = *(_QWORD *)(v24 + 8);
    v28 = *(_QWORD *)(v24 + 16);
    v27 = *(_QWORD *)(v24 + 24);
    v29 = *(_QWORD *)(a1 + 64);
    v30 = *(_OWORD *)(a1 + 16);
    v40[0] = *(_OWORD *)a1;
    v40[1] = v30;
    v31 = *(_OWORD *)(a1 + 48);
    v40[2] = *(_OWORD *)(a1 + 32);
    v40[3] = v31;
    v41 = v29;
    v32 = v20;
    v38 = v25;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRetain(v27);
    sub_10000BE70(v21, v22, v23);
    NSObject.hash(into:)(v40);
    if (!v23)
    {
      Hasher._combine(_:)(3uLL);
      swift_bridgeObjectRetain(v22);
      String.hash(into:)(v40, v21, v22);
      sub_100084C88(v21, v22, 0);

      v8 = v21;
      v9 = v22;
      v10 = 0;
LABEL_5:
      sub_100084C88(v8, v9, v10);
      goto LABEL_6;
    }
    if (v23 == 1)
    {
      Hasher._combine(_:)(4uLL);
      swift_bridgeObjectRetain(v22);
      String.hash(into:)(v40, v21, v22);
      sub_100084C88(v21, v22, 1u);

      v8 = v21;
      v9 = v22;
      v10 = 1;
      goto LABEL_5;
    }
    if (v21 | v22)
    {
      if (v21 ^ 1 | v22)
        v33 = 2;
      else
        v33 = 1;
    }
    else
    {
      v33 = 0;
    }
    Hasher._combine(_:)(v33);

LABEL_6:
    v11 = v38;
    NSObject.hash(into:)(v40);

    swift_bridgeObjectRetain(v26);
    sub_100134AC4((uint64_t)v40, v26);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRetain(v28);
    sub_100134998((uint64_t)v40, v28);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRetain(v27);
    sub_1001345C4(v40, v27);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v26);

    swift_bridgeObjectRelease_n(v27, 2);
    v6 = Hasher._finalize()() ^ v39;
  }
  v17 = i + 3;
  if (i + 3 >= v34)
  {
LABEL_30:
    swift_release();
    Hasher._combine(_:)(v6);
    return;
  }
  v15 = *(_QWORD *)(v35 + 8 * v17);
  if (v15)
  {
    v16 = i + 3;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v34)
      goto LABEL_30;
    v15 = *(_QWORD *)(v35 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_20;
  }
LABEL_32:
  __break(1u);
}

void sub_1001345C4(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::UInt v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unsigned __int8 v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  Swift::UInt v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _BYTE v35[40];
  _OWORD v36[2];
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  _QWORD v45[3];
  unsigned __int8 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v29 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v30 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v7 = 0;
  v31 = 0;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v31 << 6);
      goto LABEL_8;
    }
    v16 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 < v30)
    {
      v17 = *(_QWORD *)(v29 + 8 * v16);
      if (v17)
        goto LABEL_12;
      v18 = v31 + 2;
      ++v31;
      if (v16 + 1 < v30)
      {
        v17 = *(_QWORD *)(v29 + 8 * v18);
        if (v17)
        {
          ++v16;
          goto LABEL_12;
        }
        v19 = v16 + 2;
        v31 = v16 + 1;
        if (v16 + 2 < v30)
          break;
      }
    }
LABEL_24:
    v6 = 0;
    v44 = 0;
    v42 = 0u;
    v43 = 0u;
    v40 = 0u;
    v41 = 0u;
LABEL_25:
    sub_1000207BC((uint64_t)&v40, (uint64_t)v45, &qword_101497908);
    v20 = (void *)v45[0];
    if (!v45[0])
    {
      swift_release();
      Hasher._combine(_:)(v7);
      return;
    }
    v22 = v45[1];
    v21 = v45[2];
    v23 = v46;
    v38[0] = v47;
    v38[1] = v48;
    v39 = v49;
    v24 = *((_QWORD *)a1 + 8);
    v25 = a1[1];
    v40 = *a1;
    v41 = v25;
    v26 = a1[3];
    v42 = a1[2];
    v43 = v26;
    v44 = v24;
    NSObject.hash(into:)(&v40);
    if (v23)
    {
      if (v23 == 1)
      {
        Hasher._combine(_:)(4uLL);
        swift_bridgeObjectRetain(v21);
        String.hash(into:)(&v40, v22, v21);
        sub_100084C88(v22, v21, 1u);

        sub_100084C88(v22, v21, 1u);
      }
      else
      {
        if (v22 | v21)
        {
          if (v22 ^ 1 | v21)
            v27 = 2;
          else
            v27 = 1;
        }
        else
        {
          v27 = 0;
        }
        Hasher._combine(_:)(v27);

      }
    }
    else
    {
      Hasher._combine(_:)(3uLL);
      swift_bridgeObjectRetain(v21);
      String.hash(into:)(&v40, v22, v21);
      sub_100084C88(v22, v21, 0);

      sub_100084C88(v22, v21, 0);
    }
    sub_100084C44((uint64_t)v38, (uint64_t)v35);
    v28 = sub_100008B04(&qword_101497910);
    if (swift_dynamicCast(&v32, v35, v28, &type metadata for AnyHashable, 6))
    {
      v36[0] = v32;
      v36[1] = v33;
      v37 = v34;
      AnyHashable.hash(into:)(&v40);
      sub_100012C48((uint64_t)v36);
    }
    else
    {
      v34 = 0;
      v32 = 0u;
      v33 = 0u;
      sub_100010CC4((uint64_t)&v32, &qword_101493FF0);
    }
    sub_100010CC4((uint64_t)v38, (uint64_t *)&unk_10149E930);
    v7 ^= Hasher._finalize()();
  }
  v17 = *(_QWORD *)(v29 + 8 * v19);
  if (v17)
  {
    v16 += 2;
LABEL_12:
    v6 = (v17 - 1) & v17;
    v9 = __clz(__rbit64(v17)) + (v16 << 6);
    v31 = v16;
LABEL_8:
    v10 = *(_QWORD *)(a2 + 48) + 32 * v9;
    v12 = *(void **)v10;
    v11 = *(_QWORD *)(v10 + 8);
    v13 = *(_QWORD *)(v10 + 16);
    v14 = *(_BYTE *)(v10 + 24);
    sub_10000C1FC(*(_QWORD *)(a2 + 56) + 40 * v9, (uint64_t)&v42, (uint64_t *)&unk_10149E930);
    *(_QWORD *)&v40 = v12;
    *((_QWORD *)&v40 + 1) = v11;
    *(_QWORD *)&v41 = v13;
    BYTE8(v41) = v14;
    v15 = v12;
    sub_10000BE70(v11, v13, v14);
    goto LABEL_25;
  }
  while (1)
  {
    v16 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v16 >= v30)
    {
      v31 = v30 - 1;
      goto LABEL_24;
    }
    v17 = *(_QWORD *)(v29 + 8 * v16);
    ++v19;
    if (v17)
      goto LABEL_12;
  }
LABEL_40:
  __break(1u);
}

void sub_100134998(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v10[40];
  _OWORD v11[2];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    v5 = a2 + 32;
    do
    {
      sub_100084B64(v5, (uint64_t)v13);
      NSObject.hash(into:)(a1);
      String.hash(into:)(a1, v13[1], v13[2]);
      sub_100084C44((uint64_t)&v14, (uint64_t)v10);
      v6 = sub_100008B04((uint64_t *)&unk_101496AA0);
      if (swift_dynamicCast(&v7, v10, v6, &type metadata for AnyHashable, 6))
      {
        v11[0] = v7;
        v11[1] = v8;
        v12 = v9;
        AnyHashable.hash(into:)(a1);
        sub_100012C48((uint64_t)v11);
      }
      else
      {
        v9 = 0;
        v7 = 0u;
        v8 = 0u;
        sub_100010CC4((uint64_t)&v7, &qword_101493FF0);
      }
      sub_100084BA0((uint64_t)v13);
      v5 += 64;
      --v4;
    }
    while (v4);
  }
}

void sub_100134AC4(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _BYTE v10[40];
  _OWORD v11[2];
  uint64_t v12;
  id v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    v5 = a2 + 32;
    do
    {
      sub_100084BD4(v5, (uint64_t)&v13);
      NSObject.hash(into:)(a1);
      sub_100084C44((uint64_t)&v14, (uint64_t)v10);
      v6 = sub_100008B04(&qword_101496AB0);
      if (swift_dynamicCast(&v7, v10, v6, &type metadata for AnyHashable, 6))
      {
        v11[0] = v7;
        v11[1] = v8;
        v12 = v9;
        AnyHashable.hash(into:)(a1);
        sub_100012C48((uint64_t)v11);
      }
      else
      {
        v9 = 0;
        v7 = 0u;
        v8 = 0u;
        sub_100010CC4((uint64_t)&v7, &qword_101493FF0);
      }
      sub_100084C10(&v13);
      v5 += 48;
      --v4;
    }
    while (v4);
  }
}

void sub_100134BE4(__int128 *a1, uint64_t a2)
{
  Swift::UInt v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = *(_QWORD *)(a2 + 16);
  Hasher._combine(_:)(v4);
  if (v4)
  {
    v5 = (uint64_t *)(a2 + 56);
    do
    {
      v6 = *(v5 - 2);
      v8 = *(v5 - 1);
      v7 = *v5;
      v9 = (id)*(v5 - 3);
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v7);
      NSObject.hash(into:)(a1);
      swift_bridgeObjectRetain(v6);
      sub_100134AC4((uint64_t)a1, v6);
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRetain(v8);
      sub_100134998((uint64_t)a1, v8);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRetain(v7);
      sub_1001345C4(a1, v7);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v6);

      swift_bridgeObjectRelease_n(v7, 2);
      v5 += 4;
      --v4;
    }
    while (v4);
  }
}

uint64_t *sub_100134CDC@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v3 = *result;
  if (*result >= a2[2] && v3 < a2[3] >> 1)
  {
    v5 = a2[1] + 32 * v3;
    v6 = *(void **)v5;
    v7 = *(_QWORD *)(v5 + 8);
    v8 = *(_QWORD *)(v5 + 16);
    v9 = *(_QWORD *)(v5 + 24);
    *a3 = *(_QWORD *)v5;
    a3[1] = v7;
    a3[2] = v8;
    a3[3] = v9;
    v10 = v6;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    return (uint64_t *)swift_bridgeObjectRetain(v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100134D54(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_100011DCC(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_10000BE48(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_100134DCC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_100011DCC(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_10000BE48(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_100134E44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      if (a6 == 1)
      {
        if (a1 == a4 && a2 == a5)
          return 1;
        return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
      }
    }
    else if (a1 | a2)
    {
      if (a1 ^ 1 | a2)
      {
        if (a6 == 2 && a4 == 2 && !a5)
          return 1;
      }
      else if (a6 == 2 && a4 == 1 && !a5)
      {
        return 1;
      }
    }
    else if (a6 == 2 && !(a5 | a4))
    {
      return 1;
    }
  }
  else if (!a6)
  {
    if (a1 == a4 && a2 == a5)
      return 1;
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
  }
  return 0;
}

BOOL sub_100134F20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(a1, a5) & 1) != 0)
  {
    if (a4)
    {
      if (a4 == 1)
      {
        if (a8 == 1)
          return a2 == a6 && a3 == a7 || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a6, a7, 0) & 1) != 0;
      }
      else if (a2 | a3)
      {
        if (a2 ^ 1 | a3)
        {
          if (a8 == 2 && a6 == 2 && !a7)
            return 1;
        }
        else if (a8 == 2 && a6 == 1 && !a7)
        {
          return 1;
        }
      }
      else if (a8 == 2 && !(a7 | a6))
      {
        return 1;
      }
    }
    else if (!a8)
    {
      return a2 == a6 && a3 == a7 || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a6, a7, 0) & 1) != 0;
    }
  }
  return 0;
}

uint64_t sub_100135064(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*a1, *a2) & 1) != 0
    && ((v4 = a1[1], v5 = a1[2], v6 = a2[1], v7 = a2[2], v4 == v6) ? (v8 = v5 == v7) : (v8 = 0),
        v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0) & 1) != 0))
  {
    return sub_10011E16C((uint64_t)(a1 + 3), (uint64_t)(a2 + 3));
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1001350F4()
{
  unint64_t result;

  result = qword_10149BAC8;
  if (!qword_10149BAC8)
  {
    result = swift_getWitnessTable(byte_100E2D820, &type metadata for HomeListSupplementaryViewSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BAC8);
  }
  return result;
}

uint64_t sub_100135138()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  sub_10000BEAC((_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 80, 7);
}

unint64_t sub_10013516C()
{
  unint64_t result;

  result = qword_10149BAD8;
  if (!qword_10149BAD8)
  {
    result = swift_getWitnessTable(byte_100E2D8A4, &type metadata for HomeListCellSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BAD8);
  }
  return result;
}

uint64_t sub_1001351B0()
{
  uint64_t v0;

  sub_10000BEAC((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

unint64_t sub_1001351DC()
{
  unint64_t result;

  result = qword_10149BAE0;
  if (!qword_10149BAE0)
  {
    result = swift_getWitnessTable(byte_100E2D804, &type metadata for HomeListSectionSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BAE0);
  }
  return result;
}

uint64_t sub_100135220()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10013525C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];

  v21 = a1;
  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v19 = a2 + 32;
    sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
    swift_bridgeObjectRetain(a2);
    v20 = a2;
    v4 = a2 - 24;
    v5 = -v2;
    v6 = -2;
    for (i = 1; ; i += 2)
    {
      v8 = *(_QWORD *)(v4 + 64);
      v9 = *(_QWORD *)(v4 + 72);
      v10 = *(_QWORD *)(v4 + 80);
      v11 = *(id *)(v4 + 56);
      swift_bridgeObjectRetain(v8);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      v12 = static NSObject.== infix(_:_:)(v11, v21);
      swift_bridgeObjectRelease(v10);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v8);

      if ((v12 & 1) != 0)
        break;
      ++v6;
      v4 += 32;
      if (v5 + v6 == -2)
      {
        swift_bridgeObjectRelease(v20);
        return;
      }
    }
    v13 = v20;
    swift_bridgeObjectRelease(v20);
    v22[0] = v20;
    v22[1] = v19;
    v22[2] = 0;
    v22[3] = i;
    if (v6 == -2)
      goto LABEL_8;
    if (*(_QWORD *)(*(_QWORD *)(v4 + 32) + 16))
    {
      v15 = 0;
      ++v6;
      goto LABEL_11;
    }
    if (v6 == -1)
    {
LABEL_8:
      v6 = 0;
      v15 = 1;
LABEL_11:
      __chkstk_darwin(v14);
      v18[2] = v22;
      swift_bridgeObjectRetain(v20);
      sub_1001ABC60((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_100135B0C, (uint64_t)v18, v6, v15);
      swift_bridgeObjectRelease(v13);
      return;
    }
    v16 = v6 + 2;
    while (v6 < v16)
    {
      v17 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      v15 = v17 == 0;
      if (v17)
        goto LABEL_11;
      --v6;
      v4 -= 32;
      if (v6 == -1)
      {
        v6 = 0;
        goto LABEL_11;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100135478(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 *i;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t result;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;

  v2 = _swiftEmptyArrayStorage;
  v3 = (_QWORD *)sub_100009DB0((uint64_t)_swiftEmptyArrayStorage);
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (uint64_t)v2;
  for (i = (__int128 *)(a1 + 48); ; i += 2)
  {
    v38 = *(i - 1);
    v39 = *i;
    v8 = v3[2];
    v9 = (id)v38;
    v10 = *((_QWORD *)&v38 + 1);
    swift_bridgeObjectRetain(*((_QWORD *)&v38 + 1));
    v11 = v39;
    swift_bridgeObjectRetain(v39);
    v7 = *((_QWORD *)&v39 + 1);
    swift_bridgeObjectRetain(*((_QWORD *)&v39 + 1));
    if (v8)
    {
      sub_1000C1674((uint64_t)v9, 1, 0, 2);
      if ((v12 & 1) != 0)
        goto LABEL_4;
    }
    v13 = v9;
    swift_bridgeObjectRetain(*((_QWORD *)&v38 + 1));
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(*((_QWORD *)&v39 + 1));
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
    v16 = sub_1000C1674((uint64_t)v13, 1, 0, 2);
    v17 = v3[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      break;
    v20 = v15;
    if (v3[3] >= v19)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1001A0AFC();
    }
    else
    {
      sub_1000D9658(v19, isUniquelyReferenced_nonNull_native);
      v21 = sub_1000C1674((uint64_t)v13, 1, 0, 2);
      if ((v20 & 1) != (v22 & 1))
        goto LABEL_24;
      v16 = v21;
    }
    v37 = v2;
    if ((v20 & 1) != 0)
    {
      v23 = v3[7] + 32 * v16;
      v24 = *(void **)v23;
      v25 = *(_QWORD *)(v23 + 8);
      v26 = *(_QWORD *)(v23 + 16);
      swift_bridgeObjectRelease(*(_QWORD *)(v23 + 24));
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v25);

      *(_OWORD *)v23 = v38;
      *(_OWORD *)(v23 + 16) = v39;
    }
    else
    {
      v3[(v16 >> 6) + 8] |= 1 << v16;
      v27 = v3[6] + 32 * v16;
      *(_QWORD *)v27 = v13;
      *(_OWORD *)(v27 + 8) = xmmword_100E2D550;
      *(_BYTE *)(v27 + 24) = 2;
      v28 = (_OWORD *)(v3[7] + 32 * v16);
      *v28 = v38;
      v28[1] = v39;
      v29 = v3[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_23;
      v3[2] = v31;
      v32 = v13;
    }

    swift_bridgeObjectRelease(0x8000000000000000);
    v33 = v13;
    v10 = *((_QWORD *)&v38 + 1);
    swift_bridgeObjectRetain(*((_QWORD *)&v38 + 1));
    v11 = v39;
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(*((_QWORD *)&v39 + 1));
    v2 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native(v37) & 1) == 0)
      v2 = sub_1000A8670(0, v37[2] + 1, 1, v37);
    v35 = v2[2];
    v34 = v2[3];
    if (v35 >= v34 >> 1)
      v2 = sub_1000A8670((_QWORD *)(v34 > 1), v35 + 1, 1, v2);
    v2[2] = v35 + 1;
    v6 = &v2[4 * v35];
    *((_OWORD *)v6 + 2) = v38;
    *((_OWORD *)v6 + 3) = v39;
    v7 = *((_QWORD *)&v39 + 1);
LABEL_4:

    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v10);
    if (!--v4)
      return (uint64_t)v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for HomeListElementKey);
  __break(1u);
  return result;
}

_QWORD *sub_1001357C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _QWORD v21[5];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  v4 = _swiftEmptyArrayStorage;
  do
  {
    sub_100084C44(v3, (uint64_t)v21);
    sub_100084C44((uint64_t)v21, (uint64_t)&v13);
    v5 = sub_100008B04(&qword_101497910);
    if ((swift_dynamicCast(&v17, &v13, v5, &type metadata for HomeListSupplementaryViewSnapshot, 6) & 1) == 0)
    {
      v19 = 0u;
      v20 = 0u;
      v17 = 0u;
      v18 = 0u;
    }
    sub_10000BEAC(v21);
    if ((_QWORD)v17)
    {
      v13 = v17;
      v14 = v18;
      v15 = v19;
      v16 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_1000A889C(0, v4[2] + 1, 1, v4);
      v7 = v4[2];
      v6 = v4[3];
      if (v7 >= v6 >> 1)
        v4 = sub_1000A889C((_QWORD *)(v6 > 1), v7 + 1, 1, v4);
      v4[2] = v7 + 1;
      v8 = &v4[8 * v7];
      v9 = v13;
      v10 = v14;
      v11 = v16;
      v8[4] = v15;
      v8[5] = v11;
      v8[2] = v9;
      v8[3] = v10;
    }
    else
    {
      sub_100010CC4((uint64_t)&v17, (uint64_t *)&unk_10149FDC0);
    }
    v3 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(a1);
  return v4;
}

unint64_t sub_100135948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101494060;
  if (!qword_101494060)
  {
    v1 = sub_10000E4BC(255, (unint64_t *)&unk_10149BA50, &off_101196DA8);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_101494060);
  }
  return result;
}

uint64_t sub_1001359A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1001359C8()
{
  unint64_t result;

  result = qword_10149BB68;
  if (!qword_10149BB68)
  {
    result = swift_getWitnessTable("л#", &type metadata for HomeListCollectionViewSnapshot);
    atomic_store(result, (unint64_t *)&qword_10149BB68);
  }
  return result;
}

unint64_t sub_100135A0C()
{
  unint64_t result;

  result = qword_10149BB90;
  if (!qword_10149BB90)
  {
    result = swift_getWitnessTable(byte_100E2D9BC, &type metadata for HomeListElementKey);
    atomic_store(result, (unint64_t *)&qword_10149BB90);
  }
  return result;
}

unint64_t sub_100135A50()
{
  unint64_t result;

  result = qword_10149BB98;
  if (!qword_10149BB98)
  {
    result = swift_getWitnessTable("%r7", &type metadata for HomeListElementKey);
    atomic_store(result, (unint64_t *)&qword_10149BB98);
  }
  return result;
}

uint64_t sub_100135A94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  id v8;

  v8 = a2;
  return sub_10000BE70(a3, a4, a5);
}

uint64_t sub_100135AD0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{

  return sub_100084C88(a3, a4, a5);
}

uint64_t *sub_100135B0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_100134CDC(a1, *(_QWORD **)(v2 + 16), a2);
}

uint64_t sub_100135B28(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  id v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  _OWORD *v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t i;
  id v42;
  id v43;
  id v44;
  id v45;
  unint64_t v46;
  char v47;
  unint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v52;
  unint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  _OWORD *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  id v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _QWORD *v81;
  id v82[9];

  v5 = a1;
  v6 = (_QWORD *)sub_100009F38((uint64_t)_swiftEmptyArrayStorage);
  v7 = *(_QWORD *)(a2 + 16);
  v76 = v5;
  if (!v7)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_32;
  }
  v74 = a2;
  v75 = a3;
  v8 = a2 + 32;
  v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    sub_100084BD4(v8, (uint64_t)v82);
    v10 = v82[0];
    if ((objc_msgSend(v10, "hasPrefix:", v5) & 1) == 0)
    {

      goto LABEL_4;
    }
    if (!v6[2])
      break;
    v11 = v10;
    v12 = sub_1000C1674((uint64_t)v11, 2, 0, 2);
    if ((v13 & 1) != 0)
    {
      sub_10000C1FC(v6[7] + 40 * v12, (uint64_t)&v77, (uint64_t *)&unk_10149E930);
    }
    else
    {
      *(_QWORD *)&v79 = 0;
      v77 = 0u;
      v78 = 0u;
    }

    if (!*((_QWORD *)&v78 + 1))
      goto LABEL_14;
    sub_100010CC4((uint64_t)&v77, (uint64_t *)&unk_10149BAB0);

LABEL_4:
    sub_100084C10(v82);
LABEL_5:
    v8 += 48;
    if (!--v7)
    {
      swift_bridgeObjectRelease(v74);
      a3 = v75;
LABEL_32:
      v39 = *(_QWORD *)(a3 + 16);
      if (!v39)
        return (uint64_t)v5;
      v40 = _swiftEmptyArrayStorage;
      for (i = a3 + 32; ; i += 64)
      {
        sub_100084B64(i, (uint64_t)v82);
        v42 = v82[1];
        v43 = v82[2];
        v44 = v82[0];
        if (objc_msgSend(v44, "hasPrefix:", v5, swift_bridgeObjectRetain(v43).n128_f64[0]))
        {
          if (!v6[2])
          {
            *(_QWORD *)&v79 = 0;
            v77 = 0u;
            v78 = 0u;
LABEL_45:
            sub_100010CC4((uint64_t)&v77, (uint64_t *)&unk_10149BAB0);
            v48 = sub_1001350F4();
            v49 = swift_allocObject(&unk_1011A49A0, 80, 7);
            sub_100084B64((uint64_t)v82, v49 + 16);
            *(_QWORD *)&v77 = v49;
            *((_QWORD *)&v78 + 1) = &type metadata for HomeListSupplementaryViewSnapshot;
            *(_QWORD *)&v79 = v48;
            v50 = v44;
            swift_bridgeObjectRetain(v43);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
            v81 = v6;
            v53 = sub_1000C1674((uint64_t)v50, (uint64_t)v42, (uint64_t)v43, 0);
            v54 = v6[2];
            v55 = (v52 & 1) == 0;
            v56 = v54 + v55;
            if (__OFADD__(v54, v55))
              goto LABEL_63;
            v57 = v52;
            if (v6[3] >= v56)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v6 = v81;
                if ((v52 & 1) == 0)
                  goto LABEL_54;
              }
              else
              {
                sub_1001A0ED0();
                v6 = v81;
                if ((v57 & 1) == 0)
                  goto LABEL_54;
              }
            }
            else
            {
              sub_1000D9EF4(v56, isUniquelyReferenced_nonNull_native);
              v58 = sub_1000C1674((uint64_t)v50, (uint64_t)v42, (uint64_t)v43, 0);
              if ((v57 & 1) != (v59 & 1))
                goto LABEL_66;
              v53 = v58;
              v6 = v81;
              if ((v57 & 1) == 0)
              {
LABEL_54:
                v6[(v53 >> 6) + 8] |= 1 << v53;
                v60 = v6[6] + 32 * v53;
                *(_QWORD *)v60 = v50;
                *(_QWORD *)(v60 + 8) = v42;
                *(_QWORD *)(v60 + 16) = v43;
                *(_BYTE *)(v60 + 24) = 0;
                v61 = v6[7] + 40 * v53;
                v62 = v77;
                v63 = v78;
                *(_QWORD *)(v61 + 32) = v79;
                *(_OWORD *)v61 = v62;
                *(_OWORD *)(v61 + 16) = v63;
                v64 = v6[2];
                v31 = __OFADD__(v64, 1);
                v65 = v64 + 1;
                if (v31)
                  goto LABEL_65;
                v6[2] = v65;
                v66 = v50;
                swift_bridgeObjectRetain(v43);
                goto LABEL_56;
              }
            }
            sub_100136248((uint64_t)&v77, v6[7] + 40 * v53);
LABEL_56:
            swift_bridgeObjectRelease(v43);

            swift_bridgeObjectRelease(0x8000000000000000);
            sub_100084B64((uint64_t)v82, (uint64_t)&v77);
            if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0)
              v40 = sub_1000A889C(0, v40[2] + 1, 1, v40);
            v68 = v40[2];
            v67 = v40[3];
            if (v68 >= v67 >> 1)
              v40 = sub_1000A889C((_QWORD *)(v67 > 1), v68 + 1, 1, v40);
            v40[2] = v68 + 1;
            v69 = &v40[8 * v68];
            v70 = v77;
            v71 = v78;
            v72 = v80;
            v69[4] = v79;
            v69[5] = v72;
            v69[2] = v70;
            v69[3] = v71;
            swift_bridgeObjectRelease(v43);

            sub_100084BA0((uint64_t)v82);
            v5 = v76;
            goto LABEL_36;
          }
          v45 = v44;
          swift_bridgeObjectRetain(v43);
          v46 = sub_1000C1674((uint64_t)v45, (uint64_t)v42, (uint64_t)v43, 0);
          if ((v47 & 1) != 0)
          {
            sub_10000C1FC(v6[7] + 40 * v46, (uint64_t)&v77, (uint64_t *)&unk_10149E930);
          }
          else
          {
            *(_QWORD *)&v79 = 0;
            v77 = 0u;
            v78 = 0u;
          }
          swift_bridgeObjectRelease(v43);

          if (!*((_QWORD *)&v78 + 1))
            goto LABEL_45;
          sub_100010CC4((uint64_t)&v77, (uint64_t *)&unk_10149BAB0);
          swift_bridgeObjectRelease(v43);

        }
        else
        {
          swift_bridgeObjectRelease(v43);

        }
        sub_100084BA0((uint64_t)v82);
LABEL_36:
        if (!--v39)
          return (uint64_t)v5;
      }
    }
  }
  *(_QWORD *)&v79 = 0;
  v77 = 0u;
  v78 = 0u;
LABEL_14:
  sub_100010CC4((uint64_t)&v77, (uint64_t *)&unk_10149BAB0);
  v14 = sub_10013516C();
  v15 = swift_allocObject(&unk_1011A49C8, 64, 7);
  sub_100084BD4((uint64_t)v82, v15 + 16);
  *(_QWORD *)&v77 = v15;
  *((_QWORD *)&v78 + 1) = &type metadata for HomeListCellSnapshot;
  *(_QWORD *)&v79 = v14;
  v16 = v10;
  v17 = swift_isUniquelyReferenced_nonNull_native(v6);
  v81 = v6;
  v19 = sub_1000C1674((uint64_t)v16, 2, 0, 2);
  v20 = v6[2];
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (!__OFADD__(v20, v21))
  {
    v23 = v18;
    if (v6[3] >= v22)
    {
      if ((v17 & 1) != 0)
      {
        v6 = v81;
        if ((v18 & 1) == 0)
          goto LABEL_23;
      }
      else
      {
        sub_1001A0ED0();
        v6 = v81;
        if ((v23 & 1) == 0)
          goto LABEL_23;
      }
    }
    else
    {
      sub_1000D9EF4(v22, v17);
      v24 = sub_1000C1674((uint64_t)v16, 2, 0, 2);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_66;
      v19 = v24;
      v6 = v81;
      if ((v23 & 1) == 0)
      {
LABEL_23:
        v6[(v19 >> 6) + 8] |= 1 << v19;
        v26 = v6[6] + 32 * v19;
        *(_QWORD *)v26 = v16;
        *(_OWORD *)(v26 + 8) = xmmword_100E2D560;
        *(_BYTE *)(v26 + 24) = 2;
        v27 = v6[7] + 40 * v19;
        v28 = v77;
        v29 = v78;
        *(_QWORD *)(v27 + 32) = v79;
        *(_OWORD *)v27 = v28;
        *(_OWORD *)(v27 + 16) = v29;
        v30 = v6[2];
        v31 = __OFADD__(v30, 1);
        v32 = v30 + 1;
        if (v31)
          goto LABEL_64;
        v6[2] = v32;
        v33 = v16;
        goto LABEL_25;
      }
    }
    sub_100136248((uint64_t)&v77, v6[7] + 40 * v19);
LABEL_25:

    swift_bridgeObjectRelease(0x8000000000000000);
    sub_100084BD4((uint64_t)v82, (uint64_t)&v77);
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_1000A8440(0, v9[2] + 1, 1, v9);
    v35 = v9[2];
    v34 = v9[3];
    if (v35 >= v34 >> 1)
      v9 = sub_1000A8440((_QWORD *)(v34 > 1), v35 + 1, 1, v9);
    v9[2] = v35 + 1;
    v36 = &v9[6 * v35];
    v37 = v77;
    v38 = v79;
    v36[3] = v78;
    v36[4] = v38;
    v36[2] = v37;

    sub_100084C10(v82);
    v5 = v76;
    goto LABEL_5;
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for HomeListElementKey);
  __break(1u);
  return result;
}

uint64_t sub_100136248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149E930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for HomeListElementKey.ElementKind(uint64_t a1)
{
  return sub_100084C88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s4Maps18HomeListElementKeyV11ElementKindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10000BE70(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for HomeListElementKey.ElementKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10000BE70(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100084C88(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for HomeListElementKey.ElementKind(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100084C88(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListElementKey.ElementKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListElementKey.ElementKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_100136410(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_100136428(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HomeListElementKey.ElementKind()
{
  return &type metadata for HomeListElementKey.ElementKind;
}

uint64_t destroy for HomeListSupplementaryViewSnapshot(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return sub_10000BEAC((_QWORD *)(a1 + 24));
}

uint64_t initializeWithCopy for HomeListSupplementaryViewSnapshot(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a1 + 24;
  v7 = a2 + 24;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v3;
  swift_bridgeObjectRetain(v5);
  v10(v6, v7, v9);
  return a1;
}

uint64_t assignWithCopy for HomeListSupplementaryViewSnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  sub_10012CE34((_QWORD *)(a1 + 24), (_QWORD *)(a2 + 24));
  return a1;
}

uint64_t assignWithTake for HomeListSupplementaryViewSnapshot(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  sub_10000BEAC((_QWORD *)(a1 + 24));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListSupplementaryViewSnapshot(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListSupplementaryViewSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListSupplementaryViewSnapshot()
{
  return &type metadata for HomeListSupplementaryViewSnapshot;
}

uint64_t destroy for HomeListElementKey(uint64_t a1)
{

  return sub_100084C88(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for HomeListElementKey(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  v7 = v3;
  sub_10000BE70(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for HomeListElementKey(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;

  v2 = a2;
  v4 = *a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v6 = v4;

  v7 = (uint64_t)v2[1];
  v8 = (uint64_t)v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  sub_10000BE70(v7, v8, v2);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  sub_100084C88(v9, v10, v11);
  return a1;
}

__n128 initializeWithTake for HomeListElementKey(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HomeListElementKey(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_100084C88(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeListElementKey(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeListElementKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListElementKey()
{
  return &type metadata for HomeListElementKey;
}

unint64_t sub_100136860()
{
  unint64_t result;

  result = qword_10149BBD0;
  if (!qword_10149BBD0)
  {
    result = swift_getWitnessTable(byte_100E2D914, &type metadata for HomeListElementKey.ElementKind);
    atomic_store(result, (unint64_t *)&qword_10149BBD0);
  }
  return result;
}

void sub_1001368A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  _QWORD *v10;
  uint64_t (*v11)(void);
  _QWORD *v12;
  void *v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  v24 = _swiftEmptyArrayStorage;
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v16)) + (v7 << 6))
  {
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 48) + 16 * i);
    v11 = *(uint64_t (**)(void))((swift_isaMask & *v10) + 0xD8);
    v12 = v10;
    v13 = (void *)v11();
    v14 = objc_msgSend(v13, "firstIdentifier");

    if (v14)
    {
      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v23 = v19;

      if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
        v24 = sub_1000A89A8(0, v24[2] + 1, 1, v24);
      v21 = v24[2];
      v20 = v24[3];
      if (v21 >= v20 >> 1)
        v24 = sub_1000A89A8((_QWORD *)(v20 > 1), v21 + 1, 1, v24);
      v24[2] = v21 + 1;
      v22 = &v24[2 * v21];
      v22[4] = v18;
      v22[5] = v23;
      if (v5)
        goto LABEL_4;
    }
    else
    {

      if (v5)
        goto LABEL_4;
    }
LABEL_7:
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v6)
      goto LABEL_29;
    v16 = *(_QWORD *)(v2 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v6)
        goto LABEL_29;
      v16 = *(_QWORD *)(v2 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v6)
          goto LABEL_29;
        v16 = *(_QWORD *)(v2 + 8 * v7);
        if (!v16)
        {
          v7 = v15 + 3;
          if (v15 + 3 >= v6)
            goto LABEL_29;
          v16 = *(_QWORD *)(v2 + 8 * v7);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v16 - 1) & v16;
  }
  v17 = v15 + 4;
  if (v17 >= v6)
  {
LABEL_29:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v2 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v6)
      goto LABEL_29;
    v16 = *(_QWORD *)(v2 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
}

void sub_100136AFC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t sub_100136B4C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_1000DF680(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_10013FE74(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

id sub_100136CE4(uint64_t a1)
{
  return sub_100086D98(a1, type metadata accessor for HomeListRootControllerConfiguration);
}

uint64_t type metadata accessor for HomeListRootControllerConfiguration()
{
  return objc_opt_self(_TtC4Maps35HomeListRootControllerConfiguration);
}

id sub_100136E10()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider);
  }
  else
  {
    v4 = objc_allocWithZone((Class)MapsSuggestionsBlockFilter);
    v11[4] = sub_100136F20;
    v11[5] = 0;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10013FE24;
    v11[3] = &unk_1011A4D50;
    v5 = _Block_copy(v11);
    v6 = objc_msgSend(v4, "initWithBlock:", v5);
    _Block_release(v5);
    swift_release();
    v7 = objc_msgSend(objc_allocWithZone((Class)SuggestionsDataProvider), "initWithViewMode:filter:includePlaceholderShortcuts:", 0, v6, 1);

    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_100136F20(void *a1)
{
  char *v2;
  uint64_t result;

  v2 = (char *)objc_msgSend(a1, "type");
  result = 1;
  if ((unint64_t)(v2 - 7) >= 0x12)
  {
    switch((unint64_t)v2)
    {
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
        return result;
      case 5uLL:
        result = (uint64_t)objc_msgSend(a1, "geoMapItem");
        if (result)
        {

          result = 1;
        }
        break;
      default:
        result = 0;
        break;
    }
  }
  return result;
}

id sub_100136FC8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___homeResultDataProvider;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___homeResultDataProvider);
  v3 = v2;
  if (v2 == (void *)1)
  {
    if (GEOConfigGetBOOL(MapsConfig_MapsHomeResultEnabled, off_1014B3E78))
      v3 = objc_msgSend(objc_allocWithZone((Class)HomeResultDataProvider), "initWithDelegate:", v0);
    else
      v3 = 0;
    v4 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    v5 = v3;
    sub_100042EEC(v4);
  }
  sub_100042F44(v2);
  return v3;
}

_BYTE *sub_100137068(void (**a1)(char *, uint64_t, uint64_t))
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  void (**v27)(char *, uint64_t, uint64_t);
  objc_class *v28;
  id v29;
  void *v30;
  uint64_t UInteger;
  uint64_t v32;
  void *v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  __n128 v52;
  _BYTE *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  void *v57;
  uint64_t ObjectType;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (**v74)(char *, uint64_t, uint64_t);
  id v75[3];
  id v76;
  objc_super v77;

  v74 = a1;
  v2 = sub_100008B04(&qword_10149C150);
  __chkstk_darwin(v2);
  v72 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_10149C158);
  v5 = __chkstk_darwin(v4);
  v65 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0, v5);
  v64 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149C160);
  v68 = *(_QWORD *)(v9 - 8);
  v69 = v9;
  __chkstk_darwin(v9);
  v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100008B04((uint64_t *)&unk_10149C168);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v70 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v13 = *(void (***)(char *, uint64_t, uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer] = 0;
  v16 = &v1[OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot];
  *v16 = 0;
  v16[1] = 0;
  v1[OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate] = 0;
  v1[OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
  v17 = OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers;
  v18 = v1;
  *(_QWORD *)&v1[v17] = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___suggestionsDataProvider] = 0;
  v19 = OBJC_IVAR____TtC4Maps22HomeListRootController_favoritesDataProvider;
  if (qword_101490E30 != -1)
    swift_once(&qword_101490E30, sub_1000F999C);
  v20 = (void *)qword_1014D49B0;
  *(_QWORD *)&v18[v19] = qword_1014D49B0;
  *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___homeResultDataProvider] = 1;
  v21 = OBJC_IVAR____TtC4Maps22HomeListRootController_dataSourceUpdateDebouncer;
  v22 = sub_100008B04(&qword_10149C140);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)&v18[v21] = PassthroughSubject.init()(v20);
  v23 = (unint64_t)&_swiftEmptySetSingleton;
  v24 = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (!_CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
      goto LABEL_14;
    sub_100141888((uint64_t)_swiftEmptyArrayStorage);
  }
  while (1)
  {
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController_subscribers] = v24;
    v18[OBJC_IVAR____TtC4Maps22HomeListRootController_isActive] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier] = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders] = v23;
    if (qword_101490E98 != -1)
      swift_once(&qword_101490E98, sub_100114760);
    v25 = sub_10000E918(v12, (uint64_t)qword_1014D4AD8);
    v13[2](v15, v25, v12);
    OSSignposter.init(logger:)(v15);
    v26 = &v18[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName];
    *(_QWORD *)v26 = "HomeListSectionLoading";
    *((_QWORD *)v26 + 1) = 22;
    v26[16] = 2;
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState] = 0;
    v27 = v74;
    *(_QWORD *)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController_configuration] = v74;
    v13 = v27;

    v28 = (objc_class *)type metadata accessor for HomeListRootController(0);
    v77.receiver = v18;
    v77.super_class = v28;
    v29 = objc_msgSendSuper2(&v77, "init");
    v23 = MapsConfig_HomeListUpdateDebouncerDueTime;
    v30 = off_1014B5098;
    v18 = v29;
    UInteger = GEOConfigGetUInteger(v23, v30);
    if ((UInteger & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_14:
    v24 = &_swiftEmptySetSingleton;
  }
  v32 = UInteger;
  v33 = *(void **)&v18[OBJC_IVAR____TtC4Maps22HomeListRootController_dataSourceUpdateDebouncer];
  v74 = v13;
  v75[0] = v33;
  v34 = swift_retain();
  static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)(v32, v34);
  v35 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v76 = (id)static OS_dispatch_queue.main.getter(v35);
  v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v37 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v65, 1, 1, v36);
  v38 = sub_100010D70(&qword_10149C178, &qword_10149C140, (const char *)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v39 = sub_1001421EC(&qword_10149C180, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr, (const char *)&protocol conformance descriptor for OS_dispatch_queue);
  v63 = v25;
  v40 = v67;
  Publisher.debounce<A>(for:scheduler:options:)(v8, &v76, v37, v22, v35, v38, v39);
  sub_100010CC4(v37, &qword_10149C158);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v66);
  swift_release();
  v75[0] = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v41 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v42 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v72, 1, 1, v41);
  v43 = sub_10000E4BC(0, &qword_10149C188, NSRunLoop_ptr);
  v44 = sub_100010D70(&qword_10149C190, &qword_10149C160, (const char *)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v45 = sub_1001421EC(&qword_10149C198, &qword_10149C188, NSRunLoop_ptr, (const char *)&protocol conformance descriptor for NSRunLoop);
  v46 = v69;
  v47 = v70;
  Publisher.receive<A>(on:options:)(v75, v42, v69, v43, v44, v45);
  sub_100010CC4(v42, &qword_10149C150);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v46);
  v48 = swift_allocObject(&unk_1011A4CE8, 24, 7);
  swift_unknownObjectWeakInit(v48 + 16);
  v49 = sub_100010D70(&qword_10149C1A0, (uint64_t *)&unk_10149C168, (const char *)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v50 = v73;
  Publisher<>.sink(receiveValue:)(sub_10014222C, v48, v73, v49);
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v50);
  v51 = &v18[OBJC_IVAR____TtC4Maps22HomeListRootController_subscribers];
  v52 = swift_beginAccess(&v18[OBJC_IVAR____TtC4Maps22HomeListRootController_subscribers], v75, 33, 0);
  AnyCancellable.store(in:)(v51, v52);
  swift_endAccess(v75);
  swift_release();
  v53 = v18;
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc(22, -1);
    v57 = (void *)swift_slowAlloc(64, -1);
    v75[0] = v57;
    *(_DWORD *)v56 = 136315394;
    ObjectType = swift_getObjectType();
    v59 = _typeName(_:qualified:)(ObjectType, 0);
    v61 = v60;
    v76 = (id)sub_1000C28FC(v59, v60, (uint64_t *)v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v56 + 4, v56 + 12);

    swift_bridgeObjectRelease(v61);
    *(_WORD *)(v56 + 12) = 2080;
    v76 = (id)sub_1000C28FC(0xD000000000000014, 0x8000000100E4C390, (uint64_t *)v75);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v56 + 14, v56 + 22);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "%s.%s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy(v57, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v56, -1, -1);

  }
  else
  {

  }
  return v53;
}

void sub_100137920(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double v4;
  void *v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10013A330(v4);

  }
}

double sub_1001379F0(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD **v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t *v30;
  double result;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t *v42;
  uint64_t v43;
  char v44[24];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];

  v2 = OBJC_IVAR____TtC4Maps22HomeListRootController_isActive;
  if (v1[OBJC_IVAR____TtC4Maps22HomeListRootController_isActive] == (a1 & 1))
    return result;
  v3 = v1;
  if (qword_101490E98 != -1)
    swift_once(&qword_101490E98, sub_100114760);
  v4 = type metadata accessor for Logger(0);
  sub_10000E918(v4, (uint64_t)qword_1014D4AD8);
  v5 = v1;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(18, -1);
    v9 = swift_slowAlloc(32, -1);
    v47[0] = v9;
    *(_DWORD *)v8 = 136315394;
    ObjectType = swift_getObjectType();
    v11 = _typeName(_:qualified:)(ObjectType, 0);
    v13 = v12;
    v45 = sub_1000C28FC(v11, v12, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v13);
    *(_WORD *)(v8 + 12) = 1024;
    v14 = v3[v2];

    LODWORD(v45) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, (char *)&v45 + 4, v8 + 14, v8 + 18);

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s setActive = %{BOOL}d", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v15 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  v16 = *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers];
  v43 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  if (!v16)
  {
    v17 = sub_100138ADC();
    v24 = *(_QWORD *)&v5[v15];
    *(_QWORD *)&v5[v15] = v17;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRelease(v24);
    v25 = *(_QWORD *)&v5[v15];
    if (v25)
    {
      v26 = swift_bridgeObjectRetain(v25);
      sub_10013C97C(v26);
      v27 = v25;
    }
    else
    {
      v28 = *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands];
      *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v28);
      v29 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v30 = (unint64_t *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers];
      swift_beginAccess(&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers], v47, 1, 0);
      v27 = *v30;
      *v30 = v29;
    }
    swift_bridgeObjectRelease(v27);
    v18 = v17[2];
    if (v18)
      goto LABEL_9;
LABEL_16:
    swift_bridgeObjectRetain(v16);
    goto LABEL_17;
  }
  v17 = *(_QWORD **)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers];
  v18 = *(_QWORD *)(v16 + 16);
  if (!v18)
    goto LABEL_16;
LABEL_9:
  v19 = (_QWORD **)(v17 + 4);
  swift_bridgeObjectRetain(v16);
  do
  {
    v20 = *v19;
    v19 += 2;
    v21 = v3[v2];
    v22 = *(void (**)(uint64_t))((swift_isaMask & *v20) + 0xC0);
    v23 = v20;
    v22(v21);

    --v18;
  }
  while (v18);
LABEL_17:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  if (v3[v2] == 1)
  {
    v5[OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate] = 0;
    v32 = &v5[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate];
    swift_beginAccess(&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate], &v45, 1, 0);
    v33 = *(_QWORD *)v32;
    *(_QWORD *)v32 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v33);
    v34 = *(_QWORD *)&v5[v43];
    if (v34)
    {
      v35 = *(_QWORD **)&v5[v43];
    }
    else
    {
      v35 = sub_100138ADC();
      v36 = *(_QWORD *)&v5[v43];
      *(_QWORD *)&v5[v43] = v35;
      swift_bridgeObjectRetain(v35);
      swift_bridgeObjectRelease(v36);
      v37 = *(_QWORD *)&v5[v43];
      if (v37)
      {
        v38 = swift_bridgeObjectRetain(v37);
        sub_10013C97C(v38);
        v39 = v37;
      }
      else
      {
        v40 = *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands];
        *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v40);
        v41 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
        v42 = (unint64_t *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers];
        swift_beginAccess(&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers], v44, 1, 0);
        v39 = *v42;
        *v42 = v41;
      }
      swift_bridgeObjectRelease(v39);
    }
    swift_bridgeObjectRetain(v34);
    sub_100139E90((uint64_t)v35, 0);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v35).n128_u64[0];
  }
  return result;
}

double sub_100137EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  uint64_t Strong;
  id v31;
  id v32;
  id v33;
  void *v34;
  Class isa;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void **v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  Class v50;
  id v51;
  uint64_t v52;
  void *v53;
  double result;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  char v66[32];

  v1 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v1);
  v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - v5;
  v7 = type metadata accessor for IndexPath(0);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  __chkstk_darwin(v7);
  v57 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v59 = (char *)&v55 - v10;
  v11 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  if (v12)
  {
    v13 = *(_QWORD **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    v13 = sub_100138ADC();
    v14 = *(_QWORD *)(v0 + v11);
    *(_QWORD *)(v0 + v11) = v13;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRelease(v14);
    v15 = *(_QWORD *)(v0 + v11);
    if (v15)
    {
      v16 = swift_bridgeObjectRetain(*(_QWORD *)(v0 + v11));
      sub_10013C97C(v16);
      v17 = v15;
    }
    else
    {
      v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
      *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v18);
      v19 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v20 = (unint64_t *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess(v20, v66, 1, 0);
      v17 = *v20;
      *v20 = v19;
    }
    swift_bridgeObjectRelease(v17);
  }
  v21 = v13[2];
  v55 = v13;
  if (v21)
  {
    v58 = v3;
    v22 = v13 + 4;
    v23 = type metadata accessor for HomeListFavoritesSectionController();
    v60 = &v65;
    v61 = v23;
    swift_bridgeObjectRetain(v12);
    while (1)
    {
      v25 = (void *)*v22;
      v26 = swift_dynamicCastClass(*v22, v61);
      if (v26)
      {
        v27 = v26;
        v28 = OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_needsResetScrollOffset;
        *(_BYTE *)(v26 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController_needsResetScrollOffset) = 1;
        v29 = (void **)(v26 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration);
        sub_1000AB280(v26 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v64);
        Strong = swift_unknownObjectWeakLoadStrong(v60);
        v31 = v25;
        sub_1000AB2BC((uint64_t)v64);
        if (!Strong)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v6, 1, 1, v63);
LABEL_10:
          v24 = (uint64_t)v6;
          goto LABEL_11;
        }
        v32 = sub_1000ACF30();
        v33 = sub_1001385F0();
        v64[0] = v32;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v64);
        swift_unknownObjectRelease(Strong);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v6, 1, v63) == 1)
          goto LABEL_10;
        (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v6, v63);
        v34 = *v29;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v36 = objc_msgSend(v34, "cellForItemAtIndexPath:", isa);

        if (!v36)
          goto LABEL_29;
        v37 = objc_opt_self(ShortcutsRowCollectionViewListCell);
        v38 = (void *)swift_dynamicCastObjCClass(v36, v37);
        if (!v38)
        {

LABEL_29:
          (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v63);
          goto LABEL_12;
        }
        objc_msgSend(v38, "resetScrollOffset");

        (*(void (**)(char *, uint64_t))(v62 + 8))(v59, v63);
        *(_BYTE *)(v27 + v28) = 0;
      }
      else
      {
        v39 = type metadata accessor for HomeListCuratedCollectionsSectionController();
        v40 = swift_dynamicCastClass(v25, v39);
        if (!v40)
          goto LABEL_13;
        v41 = v40;
        v42 = OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController_needsResetScrollOffset;
        *(_BYTE *)(v40 + OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController_needsResetScrollOffset) = 1;
        v43 = (void **)(v40 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration);
        sub_1000AB280(v40 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, v64);
        v44 = swift_unknownObjectWeakLoadStrong(v60);
        v45 = v25;
        sub_1000AB2BC((uint64_t)v64);
        if (!v44)
        {
          v48 = (uint64_t)v58;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v58, 1, 1, v63);
LABEL_27:
          v24 = v48;
LABEL_11:
          sub_100010CC4(v24, &qword_101499510);
          goto LABEL_12;
        }
        v56 = v42;
        v46 = sub_1001EB67C();
        v47 = sub_1001385F0();
        v64[0] = v46;
        v48 = (uint64_t)v58;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)(v64);
        swift_unknownObjectRelease(v44);

        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v48, 1, v63) == 1)
          goto LABEL_27;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v57, v48, v63);
        v49 = *v43;
        v50 = IndexPath._bridgeToObjectiveC()().super.isa;
        v51 = objc_msgSend(v49, "cellForItemAtIndexPath:", v50);

        if (!v51)
          goto LABEL_31;
        v52 = objc_opt_self(HomeCuratedCollectionsCollectionViewCell);
        v53 = (void *)swift_dynamicCastObjCClass(v51, v52);
        if (!v53)
        {

LABEL_31:
          (*(void (**)(char *, uint64_t))(v62 + 8))(v57, v63);
          goto LABEL_12;
        }
        objc_msgSend(v53, "resetScrollOffset");

        (*(void (**)(char *, uint64_t))(v62 + 8))(v57, v63);
        *(_BYTE *)(v41 + v56) = 0;
      }
LABEL_12:

LABEL_13:
      v22 += 2;
      if (!--v21)
        goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain(v12);
LABEL_34:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v55).n128_u64[0];
  return result;
}

id sub_1001383FC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[6];

  v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___compositionalLayout);
  }
  else
  {
    v4 = swift_allocObject(&unk_1011A4CE8, 24, 7);
    swift_unknownObjectWeakInit(v4 + 16);
    v5 = objc_allocWithZone((Class)type metadata accessor for HomeListCompositionalLayout());
    v11[4] = sub_1001421E4;
    v11[5] = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1001C50E4;
    v11[3] = &unk_1011A4D28;
    v6 = _Block_copy(v11);
    v7 = objc_msgSend(v5, "initWithSectionProvider:", v6, swift_retain().n128_f64[0]);
    _Block_release(v6);
    swift_release();
    swift_release();
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

uint64_t sub_100138518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void *v16;
  _BYTE v17[24];

  v5 = a3 + 16;
  swift_beginAccess(a3 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    return 0;
  v7 = (void *)Strong;
  v8 = sub_1001385F0();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)(&v16, a1);

  v9 = v16;
  if (!v16)
  {

    return 0;
  }
  v10 = sub_100139998(v16);
  v12 = v11;

  if (!v10)
    return 0;
  ObjectType = swift_getObjectType();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a2, ObjectType, v12);

  return v14;
}

id sub_1001385F0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___diffableDataSource);
  }
  else
  {
    v4 = sub_100138650(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100138650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  __n128 v17;

  if (qword_101491118 != -1)
    swift_once(&qword_101491118, sub_1001E534C);
  v2 = sub_100008B04(&qword_10149C100);
  sub_10000E918(v2, (uint64_t)qword_1014D5060);
  if (qword_101491158 != -1)
    swift_once(&qword_101491158, sub_1001F4DFC);
  v3 = sub_100008B04(&qword_10149C108);
  sub_10000E918(v3, (uint64_t)qword_1014D5108);
  if (qword_101490EE8 != -1)
    swift_once(&qword_101490EE8, sub_10011E760);
  v4 = sub_100008B04(&qword_10149B480);
  sub_10000E918(v4, (uint64_t)qword_1014D4BA8);
  if (qword_101491048 != -1)
    swift_once(&qword_101491048, sub_1001929D0);
  v5 = sub_100008B04(&qword_10149E710);
  sub_10000E918(v5, (uint64_t)qword_1014D4EC8);
  if (qword_101491050 != -1)
    swift_once(&qword_101491050, sub_100192A44);
  v6 = sub_100008B04((uint64_t *)&unk_10149C110);
  sub_10000E918(v6, (uint64_t)qword_1014D4EE0);
  if (qword_101490C98 != -1)
    swift_once(&qword_101490C98, sub_10000E618);
  v7 = sub_100008B04(&qword_101492B40);
  sub_10000E918(v7, (uint64_t)qword_1014D45D8);
  if (qword_101490CB0 != -1)
    swift_once(&qword_101490CB0, sub_100012680);
  v8 = sub_100008B04(&qword_10149C120);
  sub_10000E918(v8, (uint64_t)qword_1014D4610);
  if (qword_101491078 != -1)
    swift_once(&qword_101491078, sub_10019CCBC);
  v9 = sub_100008B04(&qword_10149C128);
  sub_10000E918(v9, (uint64_t)qword_1014D4F08);
  if (qword_101490EC8 != -1)
    swift_once(&qword_101490EC8, sub_100117858);
  v10 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  sub_10000E918(v10, (uint64_t)qword_1014D4B68);
  v11 = *(void **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration)
                 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
  v12 = swift_allocObject(&unk_1011A4CE8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, a1);
  v13 = objc_allocWithZone((Class)sub_100008B04((uint64_t *)&unk_10149C130));
  v14 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(v11, sub_1001421D4, v12);
  v15 = swift_allocObject(&unk_1011A4CE8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, a1);
  v16 = v14;
  v17 = swift_retain();
  dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter(sub_1001421DC, v15, v17);

  swift_release();
  return v16;
}

id sub_10013897C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  Class isa;
  id v10;
  _BYTE v12[24];

  v5 = *a3;
  v6 = a4 + 16;
  swift_beginAccess(a4 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return 0;
  v8 = (void *)Strong;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "collectionView:cellForItemAtIndexPath:itemIdentifier:", a1, isa, v5);

  return v10;
}

id sub_100138A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t Strong;
  void *v8;
  NSString v9;
  Class isa;
  id v11;
  _BYTE v13[24];

  v6 = a5 + 16;
  swift_beginAccess(a5 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return 0;
  v8 = (void *)Strong;
  v9 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v11 = objc_msgSend(v8, "collectionView:viewForSupplementaryElementOfKind:atIndexPath:", a1, v9, isa);

  return v11;
}

_QWORD *sub_100138ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t Strong;
  id v5;
  id v6;
  id v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  __n128 v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  _QWORD *v59;
  void *v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  id v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  id v72;
  unint64_t v73;
  unint64_t v74;
  id v75;
  _QWORD *v76;
  void *v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  id v82;
  _BYTE *v83;
  _OWORD *v84;
  uint64_t v85;
  _BYTE *v86;
  id v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  _QWORD *v91;
  void *v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  id v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  id v103;
  unint64_t v104;
  unint64_t v105;
  id v106;
  _QWORD *v107;
  BOOL v109;
  id v110;
  uint64_t v111;
  void *v112;
  void *v113;
  void *v114;
  objc_class *super_class;
  uint64_t v116;
  uint64_t v117;
  objc_super v118;
  objc_super v119;
  objc_super v120;
  objc_super v121;
  objc_super v122;
  _QWORD v123[9];
  id v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  _UNKNOWN **v128;
  uint64_t v129;
  id v130;
  id v131;
  id v132;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration);
  v117 = OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView;
  v3 = *(void **)(v2 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
  v116 = v2 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_homeActionDelegate;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_homeActionDelegate);
  v5 = v3;
  v6 = sub_100136E10();
  v7 = *(id *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_favoritesDataProvider);
  v8 = sub_100136FC8();
  v124 = v5;
  v125 = 0xD000000000000010;
  v126 = 0x8000000100E4C310;
  v128 = &off_1011A4BF8;
  swift_unknownObjectWeakInit(&v127);
  swift_unknownObjectWeakInit(&v129);
  swift_unknownObjectRelease(Strong);
  v130 = v6;
  v131 = v7;
  v132 = v8;
  v9 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListFeatureDiscoverySectionController());
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps41HomeListFeatureDiscoverySectionController____lazy_storage___featureDiscoveryDataProvider] = 0;
  sub_1000AB280((uint64_t)&v124, v123);
  v10 = &v9[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v11 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  v12 = v9;
  *(_QWORD *)&v9[v11] = sub_100009B78((uint64_t)_swiftEmptyArrayStorage);
  v12[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000AB280((uint64_t)v123, &v12[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v122.receiver = v12;
  v122.super_class = (Class)type metadata accessor for HomeListSectionController();
  super_class = v122.super_class;
  v13 = objc_msgSendSuper2(&v122, "init");
  sub_1000AB2BC((uint64_t)v123);
  sub_1000AB2BC((uint64_t)&v124);
  v14 = v13;
  v15 = sub_1000A8564(0, 1, 1, _swiftEmptyArrayStorage);
  v17 = v15[2];
  v16 = v15[3];
  if (v17 >= v16 >> 1)
    v15 = sub_1000A8564((_QWORD *)(v16 > 1), v17 + 1, 1, v15);
  v15[2] = v17 + 1;
  v18 = &v15[2 * v17];
  v114 = v14;
  v18[4] = v14;
  v18[5] = &off_1011A05E0;
  v19 = *(void **)(v2 + v117);
  v20 = swift_unknownObjectWeakLoadStrong(v116);
  v21 = v19;
  v22 = sub_100136E10();
  v23 = v7;
  v24 = sub_100136FC8();
  v124 = v21;
  v125 = 0x6974736567677553;
  v126 = 0xEB00000000736E6FLL;
  v128 = &off_1011A4BF8;
  swift_unknownObjectWeakInit(&v127);
  swift_unknownObjectWeakInit(&v129);
  swift_unknownObjectRelease(v20);
  v130 = v22;
  v131 = v23;
  v132 = v24;
  v25 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListSuggestionsSectionController());
  v26 = OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController_sharedTripsDataProvider;
  *(_QWORD *)&v25[v26] = objc_msgSend(objc_allocWithZone((Class)SharedTripsDataProvider), "initWithCombineAllTrips:", 1);
  *(_QWORD *)&v25[OBJC_IVAR____TtC4Maps36HomeListSuggestionsSectionController____lazy_storage___photoLookupDataProvider] = 0;
  sub_1000AB280((uint64_t)&v124, v123);
  v27 = &v25[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)v27 = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  v28 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  v29 = v25;
  *(_QWORD *)&v25[v28] = sub_100009B78((uint64_t)_swiftEmptyArrayStorage);
  v29[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(_QWORD *)&v29[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(_QWORD *)&v29[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000AB280((uint64_t)v123, &v29[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v121.receiver = v29;
  v121.super_class = super_class;
  v30 = objc_msgSendSuper2(&v121, "init");
  sub_1000AB2BC((uint64_t)v123);
  sub_1000AB2BC((uint64_t)&v124);
  v31 = v15[2];
  v32 = v15[3];
  v33 = v30;
  if (v31 >= v32 >> 1)
    v15 = sub_1000A8564((_QWORD *)(v32 > 1), v31 + 1, 1, v15);
  v15[2] = v31 + 1;
  v34 = &v15[2 * v31];
  v113 = v33;
  v34[4] = v33;
  v34[5] = &off_1011A3D48;
  v35 = *(void **)(v2 + v117);
  v36 = swift_unknownObjectWeakLoadStrong(v116);
  v37 = v35;
  v38 = sub_100136E10();
  v39 = v23;
  v40 = sub_100136FC8();
  v124 = v37;
  v125 = 0x657469726F766146;
  v126 = 0xE900000000000073;
  v128 = &off_1011A4BF8;
  swift_unknownObjectWeakInit(&v127);
  swift_unknownObjectWeakInit(&v129);
  swift_unknownObjectRelease(v36);
  v130 = v38;
  v131 = v39;
  v132 = v40;
  v41 = objc_allocWithZone((Class)type metadata accessor for HomeListFavoritesSectionController());
  v42 = sub_1000AD2D4((uint64_t)&v124);
  v43 = v15[2];
  v44 = v15[3];
  v45 = v42;
  if (v43 >= v44 >> 1)
  {
    v109 = v44 > 1;
    v110 = v45;
    v111 = v109;
    v15 = sub_1000A8564((_QWORD *)v111, v43 + 1, 1, v15);
    v45 = v110;
  }
  v15[2] = v43 + 1;
  v46 = &v15[2 * v43];
  v112 = v45;
  v46[4] = v45;
  v46[5] = &off_1011A0798;
  v47 = *(void **)(v2 + v117);
  v48 = swift_unknownObjectWeakLoadStrong(v116);
  v49 = v47;
  v50 = sub_100136E10();
  v51 = v39;
  v52 = sub_100136FC8();
  v124 = v49;
  v125 = 0x73746E65636552;
  v126 = 0xE700000000000000;
  v128 = &off_1011A4BF8;
  swift_unknownObjectWeakInit(&v127);
  swift_unknownObjectWeakInit(&v129);
  swift_unknownObjectRelease(v48);
  v130 = v50;
  v131 = v51;
  v132 = v52;
  v53 = objc_allocWithZone((Class)type metadata accessor for HomeListRecentsSectionController());
  v55 = sub_1001FC288((uint64_t)&v124, v54);
  v56 = v15[2];
  v57 = v15[3];
  v58 = v55;
  if (v56 >= v57 >> 1)
    v15 = sub_1000A8564((_QWORD *)(v57 > 1), v56 + 1, 1, v15);
  v15[2] = v56 + 1;
  v59 = &v15[2 * v56];
  v59[4] = v58;
  v59[5] = &off_1011ABAE0;
  if (qword_101490F30 != -1)
    swift_once(&qword_101490F30, sub_10012902C);
  if ((byte_1014D4C10 & 1) == 0)
  {
    v60 = *(void **)(v2 + v117);
    v61 = swift_unknownObjectWeakLoadStrong(v116);
    v62 = v60;
    v63 = sub_100136E10();
    v64 = v51;
    v65 = sub_100136FC8();
    v124 = v62;
    v125 = 0x697463656C6C6F43;
    v126 = 0xEB00000000736E6FLL;
    v128 = &off_1011A4BF8;
    swift_unknownObjectWeakInit(&v127);
    swift_unknownObjectWeakInit(&v129);
    swift_unknownObjectRelease(v61);
    v130 = v63;
    v131 = v64;
    v132 = v65;
    v66 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListCollectionsSectionController());
    v67 = OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController_collectionsDataProvider;
    *(_QWORD *)&v66[v67] = objc_msgSend(objc_allocWithZone((Class)CollectionsDataProvider), "initWithContext:observeInfo:observeContents:", 2, 0, 0, v112, v113);
    v68 = &v66[OBJC_IVAR____TtC4Maps36HomeListCollectionsSectionController____lazy_storage___maxNumberOfCollections];
    *(_QWORD *)v68 = 0;
    v68[8] = 1;
    sub_1000AB280((uint64_t)&v124, v123);
    v69 = &v66[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
    *(_OWORD *)v69 = 0u;
    *((_OWORD *)v69 + 1) = 0u;
    v70 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
    v71 = v66;
    *(_QWORD *)&v66[v70] = sub_100009B78((uint64_t)_swiftEmptyArrayStorage);
    v71[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
    *(_QWORD *)&v71[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
    *(_QWORD *)&v71[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
    sub_1000AB280((uint64_t)v123, &v71[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

    v120.receiver = v71;
    v120.super_class = super_class;
    v72 = objc_msgSendSuper2(&v120, "init");
    sub_1000AB2BC((uint64_t)v123);
    sub_1000AB2BC((uint64_t)&v124);
    v73 = v15[2];
    v74 = v15[3];
    v75 = v72;
    if (v73 >= v74 >> 1)
      v15 = sub_1000A8564((_QWORD *)(v74 > 1), v73 + 1, 1, v15);
    v15[2] = v73 + 1;
    v76 = &v15[2 * v73];
    v76[4] = v75;
    v76[5] = &off_1011AA8D0;

  }
  if (GEOConfigGetBOOL(MapsConfig_MapsHomeResultEnabled, off_1014B3E78))
  {
    v77 = *(void **)(v2 + v117);
    v78 = swift_unknownObjectWeakLoadStrong(v116);
    v79 = v77;
    v80 = sub_100136E10();
    v81 = v51;
    v82 = sub_100136FC8();
    v124 = v79;
    v125 = 0xD000000000000012;
    v126 = 0x8000000100E4A610;
    v128 = &off_1011A4BF8;
    swift_unknownObjectWeakInit(&v127);
    swift_unknownObjectWeakInit(&v129);
    swift_unknownObjectRelease(v78);
    v130 = v80;
    v131 = v81;
    v132 = v82;
    v83 = objc_allocWithZone((Class)type metadata accessor for HomeListCuratedCollectionsSectionController());
    v83[OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController_needsResetScrollOffset] = 0;
    *(_QWORD *)&v83[OBJC_IVAR____TtC4Maps43HomeListCuratedCollectionsSectionController____lazy_storage___curatedCollectionsIdentifierPath] = 0;
    sub_1000AB280((uint64_t)&v124, v123);
    v84 = &v83[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
    *v84 = 0u;
    v84[1] = 0u;
    v85 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
    v86 = v83;
    *(_QWORD *)&v83[v85] = sub_100009B78((uint64_t)_swiftEmptyArrayStorage);
    v86[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
    *(_QWORD *)&v86[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
    *(_QWORD *)&v86[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
    sub_1000AB280((uint64_t)v123, &v86[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

    v118.receiver = v86;
    v118.super_class = super_class;
    v87 = objc_msgSendSuper2(&v118, "init");
    sub_1000AB2BC((uint64_t)v123);
    sub_1000AB2BC((uint64_t)&v124);
    v88 = v15[2];
    v89 = v15[3];
    v90 = v87;
    if (v88 >= v89 >> 1)
      v15 = sub_1000A8564((_QWORD *)(v89 > 1), v88 + 1, 1, v15);
    v15[2] = v88 + 1;
    v91 = &v15[2 * v88];
    v91[4] = v90;
    v91[5] = &off_1011AB188;

  }
  v92 = *(void **)(v2 + v117);
  v93 = swift_unknownObjectWeakLoadStrong(v116);
  v94 = v92;
  v95 = sub_100136E10();
  v96 = v51;
  v97 = sub_100136FC8();
  v124 = v94;
  v125 = 0x7265746F6F46;
  v126 = 0xE600000000000000;
  v128 = &off_1011A4BF8;
  swift_unknownObjectWeakInit(&v127);
  swift_unknownObjectWeakInit(&v129);
  swift_unknownObjectRelease(v93);
  v130 = v95;
  v131 = v96;
  v132 = v97;
  v98 = (char *)objc_allocWithZone((Class)type metadata accessor for HomeListFooterSectionController());
  v99 = OBJC_IVAR____TtC4Maps31HomeListFooterSectionController_rapReportMenuProvider;
  *(_QWORD *)&v98[v99] = objc_msgSend(objc_allocWithZone((Class)RAPReportMenuProvider), "init");
  sub_1000AB280((uint64_t)&v124, v123);
  v100 = &v98[OBJC_IVAR____TtC4Maps25HomeListSectionController_cachedSectionSnapshot];
  *(_OWORD *)v100 = 0u;
  *((_OWORD *)v100 + 1) = 0u;
  v101 = OBJC_IVAR____TtC4Maps25HomeListSectionController_mutableDeletions;
  v102 = v98;
  *(_QWORD *)&v98[v101] = sub_100009B78((uint64_t)_swiftEmptyArrayStorage);
  v102[OBJC_IVAR____TtC4Maps25HomeListSectionController_isActive] = 0;
  *(_QWORD *)&v102[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionIdentifierPath] = 0;
  *(_QWORD *)&v102[OBJC_IVAR____TtC4Maps25HomeListSectionController____lazy_storage___sectionHeaderIdentifierPath] = 0;
  sub_1000AB280((uint64_t)v123, &v102[OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration]);

  v119.receiver = v102;
  v119.super_class = super_class;
  v103 = objc_msgSendSuper2(&v119, "init");
  sub_1000AB2BC((uint64_t)v123);
  sub_1000AB2BC((uint64_t)&v124);
  v104 = v15[2];
  v105 = v15[3];
  v106 = v103;
  if (v104 >= v105 >> 1)
    v15 = sub_1000A8564((_QWORD *)(v105 > 1), v104 + 1, 1, v15);
  v15[2] = v104 + 1;
  v107 = &v15[2 * v104];
  v107[4] = v106;
  v107[5] = &off_1011A8D40;

  return v15;
}

_QWORD *sub_1001396A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier);
  if (v2)
  {
    v3 = *(_QWORD **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController____lazy_storage___sectionControllersByIdentifier);
  }
  else
  {
    v3 = sub_10013970C(v0);
    v4 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
    v2 = 0;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

_QWORD *sub_10013970C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *result;
  _QWORD *v33;
  __int128 v34;
  char v35[24];

  v1 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  if (v2)
  {
    v3 = *(_QWORD **)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    v3 = sub_100138ADC();
    v5 = *(_QWORD *)(a1 + v1);
    *(_QWORD *)(a1 + v1) = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v5);
    v6 = *(_QWORD *)(a1 + v1);
    if (v6)
    {
      v7 = swift_bridgeObjectRetain(*(_QWORD *)(a1 + v1));
      sub_10013C97C(v7);
      v8 = v6;
    }
    else
    {
      v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
      *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v9);
      v10 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v11 = (unint64_t *)(a1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess(v11, v35, 1, 0);
      v8 = *v11;
      *v11 = v10;
    }
    swift_bridgeObjectRelease(v8);
  }
  v12 = v3[2];
  v33 = v3;
  if (v12)
  {
    v13 = (id *)(v3 + 4);
    swift_bridgeObjectRetain(v2);
    while (1)
    {
      v34 = *(_OWORD *)v13;
      v15 = (uint64_t)*v13 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration;
      v17 = *(_QWORD *)(v15 + 8);
      v16 = *(_QWORD *)(v15 + 16);
      v18 = *v13;
      swift_bridgeObjectRetain(v16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      v21 = sub_1000C17A0(v17, v16);
      v22 = _swiftEmptyDictionarySingleton[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
        break;
      v25 = v20;
      if (_swiftEmptyDictionarySingleton[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1001A0D10();
      }
      else
      {
        sub_1000D98C8(v24, isUniquelyReferenced_nonNull_native);
        v26 = sub_1000C17A0(v17, v16);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_24;
        v21 = v26;
      }
      if ((v25 & 1) != 0)
      {
        v14 = _swiftEmptyDictionarySingleton[7];

        *(_OWORD *)(v14 + 16 * v21) = v34;
      }
      else
      {
        _swiftEmptyDictionarySingleton[(v21 >> 6) + 8] |= 1 << v21;
        v28 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v21);
        *v28 = v17;
        v28[1] = v16;
        *(_OWORD *)(_swiftEmptyDictionarySingleton[7] + 16 * v21) = v34;
        v29 = _swiftEmptyDictionarySingleton[2];
        v30 = __OFADD__(v29, 1);
        v31 = v29 + 1;
        if (v30)
          goto LABEL_23;
        _swiftEmptyDictionarySingleton[2] = v31;
        swift_bridgeObjectRetain(v16);
      }

      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(0x8000000000000000);
      v13 += 2;
      if (!--v12)
        goto LABEL_21;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain(v2);
LABEL_21:
    swift_bridgeObjectRelease(v33);
    return _swiftEmptyDictionarySingleton;
  }
  return result;
}

void *sub_100139998(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;

  v1 = objc_msgSend(a1, "firstIdentifier");
  v2 = v1;
  if (!v1)
    return 0;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = sub_1001396A8();
  if (v6[2] && (v7 = sub_1000C17A0(v3, v5), (v8 & 1) != 0))
  {
    v9 = *(void **)(v6[7] + 16 * v7);
    v10 = v9;
  }
  else
  {
    v9 = 0;
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

void sub_100139A44(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = v2;
  v6 = sub_1001385F0();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v10, a1);

  v7 = v10;
  if (v10)
  {
    v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    if (v8)
    {
      v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
      sub_1000AE4F8(v8, v9);
      sub_1000AE4F8(v8, v9);
      v7 = v7;
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v8);
      sub_10012F0C0(v7, 2, 0, 2, v9, a2);
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v8);

    }
    else
    {
      a2[1] = 0u;
      a2[2] = 0u;
      *a2 = 0u;
    }

  }
  else
  {
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
}

void sub_100139B38()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  void *v11;
  double Double;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD v20[6];

  v1 = v0;
  v2 = sub_100136E10();
  v3 = objc_msgSend(v2, "hasInitialData");

  if ((v3 & 1) != 0)
  {
    v4 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v5 = sub_100008B04((uint64_t *)&unk_101493B10);
    v6 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
    v7 = sub_100136E10();
    *(_QWORD *)(v6 + 32) = v7;
    v20[0] = v6;
    specialized Array._endMutation()(v7);
    v4 = v6;
  }
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v19 = v4;
    else
      v19 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v8 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v10 = OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer;
  v11 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
  if (v8 < 1)
  {
    objc_msgSend(v11, "invalidate", v9);
    v18 = *(void **)(v1 + v10);
    *(_QWORD *)(v1 + v10) = 0;

  }
  else if (!v11)
  {
    Double = GEOConfigGetDouble(MapsConfig_ProactiveTrayInitialSuggestionsTimeout, off_1014B33E8);
    v13 = (void *)objc_opt_self(NSTimer);
    v14 = swift_allocObject(&unk_1011A4CE8, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16);
    v20[4] = sub_1001421CC;
    v20[5] = v14;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_100136AFC;
    v20[3] = &unk_1011A4D00;
    v15 = _Block_copy(v20);
    swift_release();
    v16 = objc_msgSend(v13, "scheduledTimerWithTimeInterval:repeats:block:", 0, v15, Double);
    _Block_release(v15);
    v17 = *(void **)(v1 + v10);
    *(_QWORD *)(v1 + v10) = v16;

    sub_10013CEEC();
  }
}

double sub_100139D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  char v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer), "invalidate");
    if (v5[OBJC_IVAR____TtC4Maps22HomeListRootController_isActive] == 1)
    {
      v6 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
      v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers];
      if (v7)
      {
        v8 = *(_QWORD **)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers];
      }
      else
      {
        v8 = sub_100138ADC();
        v9 = *(_QWORD *)&v5[v6];
        *(_QWORD *)&v5[v6] = v8;
        swift_bridgeObjectRetain(v8);
        swift_bridgeObjectRelease(v9);
        v10 = *(_QWORD *)&v5[v6];
        if (v10)
        {
          v11 = swift_bridgeObjectRetain(*(_QWORD *)&v5[v6]);
          sub_10013C97C(v11);
          v12 = v10;
        }
        else
        {
          v13 = *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands];
          *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands] = _swiftEmptyArrayStorage;
          swift_bridgeObjectRelease(v13);
          v14 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
          v15 = (unint64_t *)&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers];
          swift_beginAccess(&v5[OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers], &v16, 1, 0);
          v12 = *v15;
          *v15 = v14;
        }
        swift_bridgeObjectRelease(v12);
      }
      swift_bridgeObjectRetain(v7);
      sub_100139E90(v8, 1);

      *(_QWORD *)&result = swift_bridgeObjectRelease(v8).n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

uint64_t sub_100139E90(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  void *v14;
  char v15;
  double v16;
  uint64_t v17;
  int64_t v18;
  _QWORD *v19;
  __int128 *v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  id v30[2];
  _QWORD v31[3];

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_isActive) == 1)
  {
    v3 = v2;
    v5 = result;
    sub_100139B38();
    v6 = sub_100136E10();
    v7 = objc_msgSend(v6, "hasInitialData");

    if ((v7 & 1) != 0)
    {
      v8 = (uint64_t)_swiftEmptyArrayStorage;
    }
    else
    {
      v9 = sub_100008B04((uint64_t *)&unk_101493B10);
      v10 = swift_allocObject(v9, 40, 7);
      *(_OWORD *)(v10 + 16) = xmmword_100E23F50;
      v11 = sub_100136E10();
      *(_QWORD *)(v10 + 32) = v11;
      v31[0] = v10;
      specialized Array._endMutation()(v11);
      v8 = v10;
    }
    if ((unint64_t)v8 >> 62)
    {
      v28 = v8 < 0 ? v8 : v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v12 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(v8).n128_u64[0];
    v14 = *(void **)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
    if (!v14 || (result = (uint64_t)objc_msgSend(v14, "isValid", v13), v12 < 1) || (result & 1) == 0)
    {
      v15 = sub_10013A148();
      v17 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
      if ((v15 & 1) != 0
        && *(_BYTE *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate) != (a2 & 1)
        && *(_BYTE *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) == 1)
      {
        sub_10013A330(v16);
        v17 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
      }
      *(_BYTE *)(v3 + v17) = a2 & 1;
      v18 = *(_QWORD *)(v5 + 16);
      v19 = _swiftEmptyArrayStorage;
      if (v18)
      {
        v31[0] = _swiftEmptyArrayStorage;
        sub_10013252C(0, v18, 0);
        v19 = _swiftEmptyArrayStorage;
        v20 = (__int128 *)(v5 + 32);
        do
        {
          v21 = *v20;
          v31[0] = v19;
          v23 = v19[2];
          v22 = v19[3];
          v29 = v21;
          v24 = (id)v21;
          if (v23 >= v22 >> 1)
          {
            sub_10013252C(v22 > 1, v23 + 1, 1);
            v19 = (_QWORD *)v31[0];
          }
          v19[2] = v23 + 1;
          *(_OWORD *)&v19[2 * v23 + 4] = v29;
          ++v20;
          --v18;
        }
        while (v18);
      }
      swift_beginAccess(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate, v31, 33, 0);
      v25 = v19[2];
      if (v25)
      {
        v26 = v19 + 5;
        do
        {
          sub_10002D118(v30, (id)*(v26 - 1), *v26);

          v26 += 2;
          --v25;
        }
        while (v25);
      }
      swift_bridgeObjectRelease(v19);
      swift_endAccess(v31);
      result = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration)+ OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_homeUpdateDelegate);
      if (result)
      {
        v27 = result;
        objc_msgSend((id)result, "homeSetNeedsUpdate");
        return swift_unknownObjectRelease(v27);
      }
    }
  }
  return result;
}

uint64_t sub_10013A148()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  double v9;
  void *v10;
  unsigned __int8 v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16[3];

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_isActive) != 1)
    goto LABEL_10;
  v1 = v0;
  v2 = sub_100136E10();
  v3 = objc_msgSend(v2, "hasInitialData");

  if ((v3 & 1) != 0)
  {
    v4 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v5 = sub_100008B04((uint64_t *)&unk_101493B10);
    v6 = swift_allocObject(v5, 40, 7);
    *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
    v7 = sub_100136E10();
    *(_QWORD *)(v6 + 32) = v7;
    v16[0] = v6;
    specialized Array._endMutation()(v7);
    v4 = v6;
  }
  if ((unint64_t)v4 >> 62)
  {
    v15 = v4 < 0 ? v4 : v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v8 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v8 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v10 = *(void **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
  if (v10 && (v11 = objc_msgSend(v10, "isValid", v9), v8 >= 1) && (v11 & 1) != 0)
  {
LABEL_10:
    v12 = 0;
  }
  else
  {
    v13 = v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate, v16, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v13 + 16))
      v12 = 1;
    else
      v12 = *(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) ^ 1;
  }
  return v12 & 1;
}

double sub_10013A330(double result)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  double v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  uint64_t i;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char v36[24];
  uint64_t v37[3];

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_isActive) == 1)
  {
    v2 = v1;
    v3 = sub_100136E10();
    v4 = objc_msgSend(v3, "hasInitialData");

    v5 = (uint64_t)_swiftEmptyArrayStorage;
    if ((v4 & 1) == 0)
    {
      v6 = sub_100008B04((uint64_t *)&unk_101493B10);
      v7 = swift_allocObject(v6, 40, 7);
      *(_OWORD *)(v7 + 16) = xmmword_100E23F50;
      v8 = sub_100136E10();
      *(_QWORD *)(v7 + 32) = v8;
      v37[0] = v7;
      specialized Array._endMutation()(v8);
      v5 = v7;
    }
    if ((unint64_t)v5 >> 62)
    {
      v34 = v5 < 0 ? v5 : v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v9 = _CocoaArrayWrapper.endIndex.getter(v34);
      swift_bridgeObjectRelease(v5);
    }
    else
    {
      v9 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
    v11 = *(void **)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_loadingTimer);
    if (!v11 || (v12 = objc_msgSend(v11, "isValid", v10), v9 < 1) || (v12 & 1) == 0)
    {
      v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate);
      swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionControllersToUpdate, v37, 1, 0);
      v14 = *v13;
      if (*(_QWORD *)(*v13 + 16))
      {
        if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) & 1) != 0)
        {
          v15 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
          v16 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate);
          swift_bridgeObjectRetain(*v13);
          v17 = 0;
LABEL_26:
          *(_BYTE *)(v2 + v15) = 0;
          v33 = *v13;
          *v13 = (uint64_t)&_swiftEmptySetSingleton;
          swift_bridgeObjectRelease(v33);
          sub_10013A684(v14, v16, v17);
          *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
          return result;
        }
      }
      else if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) & 1) != 0)
      {
        return result;
      }
      *(_BYTE *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_appliedInitialUpdate) = 1;
      v18 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
      v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
      if (v19)
      {
        v20 = *(_QWORD **)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
        v21 = *(_QWORD *)(v19 + 16);
        if (v21)
          goto LABEL_15;
      }
      else
      {
        v20 = sub_100138ADC();
        v26 = *(_QWORD *)(v2 + v18);
        *(_QWORD *)(v2 + v18) = v20;
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRelease(v26);
        v27 = *(_QWORD *)(v2 + v18);
        if (v27)
        {
          v28 = swift_bridgeObjectRetain(v27);
          sub_10013C97C(v28);
          v29 = v27;
        }
        else
        {
          v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
          *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
          swift_bridgeObjectRelease(v30);
          v31 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
          v32 = (unint64_t *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
          swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers, v36, 1, 0);
          v29 = *v32;
          *v32 = v31;
        }
        swift_bridgeObjectRelease(v29);
        v21 = v20[2];
        if (v21)
        {
LABEL_15:
          swift_bridgeObjectRetain(v19);
          sub_10013252C(0, v21, 0);
          for (i = 0; i != v21; ++i)
          {
            v23 = _swiftEmptyArrayStorage[2];
            v24 = _swiftEmptyArrayStorage[3];
            v35 = *(_OWORD *)&v20[2 * i + 4];
            v25 = (id)v35;
            if (v23 >= v24 >> 1)
              sub_10013252C(v24 > 1, v23 + 1, 1);
            _swiftEmptyArrayStorage[2] = v23 + 1;
            *(_OWORD *)&_swiftEmptyArrayStorage[2 * v23 + 4] = v35;
          }
          swift_bridgeObjectRelease(v20);
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRelease(v20);
LABEL_25:
      v14 = sub_100035A08((uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      v16 = 0;
      v15 = OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate;
      v17 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_animateNextUpdate);
      goto LABEL_26;
    }
  }
  return result;
}

void *sub_10013A684(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  NSObject *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  void *v33;
  uint64_t *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t (*v40)(void);
  _QWORD *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  _QWORD *v49;
  char v50;
  void (*v51)(void);
  _QWORD *v52;
  uint64_t (*v53)(void);
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  char v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  NSObject *v96;
  NSObject *v97;
  NSObject *v98;
  int v99;
  uint64_t v100;
  uint64_t ObjectType;
  uint64_t v102;
  NSObject *v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  void *v116;
  id (*v117)();
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  void *v135;
  id (*v136)();
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned __int8 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  void *v152;
  id (*v153)();
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unsigned __int8 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  void *v167;
  id (*v168)();
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned __int8 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  char *v181;
  Class isa;
  Class *v183;
  char *v184;
  NSObject *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  id v189;
  uint64_t v190;
  uint64_t v192;
  NSObject *v193;
  uint64_t v194;
  NSObject *v195;
  NSObject *v196;
  os_log_type_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  _QWORD *v208;
  Class *v209;
  int v210;
  int v211;
  uint64_t v212;
  char *v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  NSObject *v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  _QWORD *aBlock;
  _QWORD v230[2];
  void *v231;
  id (*v232)();
  uint64_t v233;
  _QWORD *v234;
  uint64_t v235;
  _BYTE v236[32];

  v214 = a2;
  v220 = a1;
  v4 = sub_100008B04(&qword_10149BB60);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v213 = (char *)&v209 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v209 - v9;
  if ((a3 & 1) != 0)
  {
    v11 = v218;
    v12 = *(void **)(*(char **)((char *)&v218->isa + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration)
                   + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
    objc_msgSend(v12, "alpha", v8);
    v14 = v13;
    objc_msgSend(v12, "setAlpha:", 0.0);
    v15 = (void *)objc_opt_self(UIView);
    v16 = swift_allocObject(&unk_1011A4C98, 32, 7);
    *(_QWORD *)(v16 + 16) = v11;
    *(_QWORD *)(v16 + 24) = v14;
    v232 = sub_10014217C;
    v233 = v16;
    aBlock = _NSConcreteStackBlock;
    v230[0] = 1107296256;
    v230[1] = sub_1001BB8D4;
    v231 = &unk_1011A4CB0;
    v17 = _Block_copy(&aBlock);
    v18 = v11;
    swift_release();
    objc_msgSend(v15, "animateWithDuration:delay:options:animations:completion:", 2, v17, 0, 0.25, 0.0);
    _Block_release(v17);
  }
  v19 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  v20 = *(uint64_t **)((char *)&v218->isa + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  v217 = v10;
  if (v20)
  {
    v21 = v20;
  }
  else
  {
    v22 = v218;
    v21 = sub_100138ADC();
    v23 = *(uint64_t *)((char *)&v22->isa + v19);
    *(Class *)((char *)&v22->isa + v19) = (Class)v21;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease(v23);
    v24 = *(unint64_t *)((char *)&v22->isa + v19);
    if (v24)
    {
      v25 = swift_bridgeObjectRetain(*(Class *)((char *)&v22->isa + v19));
      sub_10013C97C(v25);
      v26 = v24;
    }
    else
    {
      v27 = v218;
      v28 = *(uint64_t *)((char *)&v218->isa + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
      *(Class *)((char *)&v218->isa + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = (Class)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v28);
      v29 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v30 = (unint64_t *)((char *)v27 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess(v30, v236, 1, 0);
      v26 = *v30;
      *v30 = v29;
    }
    swift_bridgeObjectRelease(v26);
  }
  v31 = v21[2];
  v216 = v4;
  v215 = v5;
  v211 = a3;
  v212 = (uint64_t)v21;
  if (v31)
  {
    v32 = (uint64_t *)((char *)v218 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
    swift_bridgeObjectRetain(v20);
    v222 = 0;
    v223 = 0;
    v221 = 0;
    v33 = 0;
    v34 = v21 + 5;
    v228 = _swiftEmptyArrayStorage;
    v219 = v32;
    while (1)
    {
      v227 = v31;
      v36 = (void *)*(v34 - 1);
      v35 = *v34;
      v37 = *v32;
      if (*v32)
      {
        v38 = v32[1];
        sub_1000AE4F8(*v32, v38);
        sub_1000AE4F8(v37, v38);
        v39 = v36;
        swift_bridgeObjectRelease(v38);
        swift_bridgeObjectRelease(v37);
        v40 = *(uint64_t (**)(void))((swift_isaMask & *v39) + 0xD8);
        v41 = v39;
        v42 = (void *)v40();

        sub_10013525C((uint64_t)v42, v37);
        v44 = v43;
        v225 = v46;
        v226 = v45;
        v224 = (void *)v47;
        swift_bridgeObjectRelease(v38);
        swift_bridgeObjectRelease(v37);

      }
      else
      {
        v48 = v36;
        v44 = 0;
        v225 = 0;
        v226 = 0;
        v224 = 0;
      }
      v49 = v36;
      v50 = sub_10012A644(v49, v35, v220);

      if ((v50 & 1) == 0)
      {
        if (v33)
        {
          v69 = v33;
          v70 = v69;
          if (v44)
          {
            sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
            v71 = v70;
            v72 = v44;
            v73 = static NSObject.== infix(_:_:)(v71, v72);

            if ((v73 & 1) != 0)
              goto LABEL_16;
          }
          else
          {

          }
        }
        else if (!v44)
        {
          goto LABEL_16;
        }
      }
      v51 = *(void (**)(void))((swift_isaMask & *v49) + 0xF8);
      v52 = v49;
      v51();

LABEL_16:
      v53 = *(uint64_t (**)(void))((swift_isaMask & *v49) + 0xF0);
      v54 = v49;
      v55 = (void *)v53();
      v57 = v56;
      v59 = v58;
      v61 = v60;

      if (*(_QWORD *)(v57 + 16))
      {
        v62 = v55;
        swift_bridgeObjectRetain(v57);
        swift_bridgeObjectRetain(v59);
        swift_bridgeObjectRetain(v61);
        sub_1001420E0(v33, v221, v222, v223);
        v222 = v59;
        v223 = v61;
        v221 = v57;
        v33 = v55;
      }
      swift_bridgeObjectRetain(v57);
      v63 = v55;
      swift_bridgeObjectRetain(v59);
      swift_bridgeObjectRetain(v61);
      v64 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native(v228) & 1) == 0)
        v228 = sub_1000A8670(0, v228[2] + 1, 1, v228);
      v66 = v228[2];
      v65 = v228[3];
      if (v66 >= v65 >> 1)
        v228 = sub_1000A8670((_QWORD *)(v65 > 1), v66 + 1, 1, v228);
      v67 = v228;
      v228[2] = v66 + 1;
      v68 = &v67[4 * v66];
      v68[4] = v63;
      v68[5] = v57;
      v68[6] = v59;
      v68[7] = v61;

      sub_1001420E0(v44, v226, v225, (uint64_t)v224);
      swift_bridgeObjectRelease(v61);
      swift_bridgeObjectRelease(v59);
      swift_bridgeObjectRelease(v57);

      v34 += 2;
      v31 = v227 - 1;
      v33 = v64;
      v32 = v219;
      if (v227 == 1)
        goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain(v20);
  v222 = 0;
  v223 = 0;
  v221 = 0;
  v33 = 0;
  v228 = _swiftEmptyArrayStorage;
LABEL_32:
  swift_bridgeObjectRelease(v212);
  v74 = (uint64_t *)((char *)v218 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  v75 = *(uint64_t *)((char *)&v218->isa + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  v76 = *(uint64_t *)((char *)&v218[1].isa + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  sub_1000AE4F8(v75, v76);
  v77 = v228;
  v78 = sub_100135478((uint64_t)v228);
  v80 = v79;
  swift_bridgeObjectRelease(v77);
  v81 = *v74;
  v82 = v74[1];
  *v74 = v78;
  v74[1] = v80;
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRetain(v80);
  sub_10014212C(v81, v82);
  v83 = sub_10012F41C((uint64_t)v217, v75, v76, v78, v80);
  v85 = v84;
  v87 = v86;
  v227 = v88;
  sub_10014212C(v75, v76);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(v78);
  v89 = *(_QWORD *)(v83 + 16);
  if (v89 || *(_QWORD *)(v85 + 16) || v87[2] || *(_QWORD *)(v227 + 16))
  {
    v90 = v216;
    v91 = v215;
    if (qword_101490E98 != -1)
      swift_once(&qword_101490E98, sub_100114760);
    v92 = type metadata accessor for Logger(0);
    sub_10000E918(v92, (uint64_t)qword_1014D4AD8);
    v93 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    swift_bridgeObjectRetain_n(v83, 2);
    swift_bridgeObjectRetain_n(v85, 2);
    swift_bridgeObjectRetain_n(v87, 2);
    v94 = v227;
    swift_bridgeObjectRetain_n(v227, 2);
    v95 = v213;
    v93(v213, v217, v90);
    swift_bridgeObjectRetain_n(v83, 6);
    swift_bridgeObjectRetain_n(v85, 6);
    swift_bridgeObjectRetain_n(v87, 6);
    swift_bridgeObjectRetain_n(v94, 6);
    v96 = v218;
    swift_bridgeObjectRetain_n(v220, 2);
    v97 = v96;
    v98 = Logger.logObject.getter(v97);
    v99 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v98, (os_log_type_t)v99))
    {
      v210 = v99;
      v218 = v98;
      v228 = v87;
      v225 = v83;
      v226 = v85;
      v224 = v33;
      v100 = swift_slowAlloc(84, -1);
      v209 = (Class *)swift_slowAlloc(8, -1);
      v212 = swift_slowAlloc(192, -1);
      v235 = v212;
      *(_DWORD *)v100 = 136317186;
      ObjectType = swift_getObjectType(v97);
      v102 = _typeName(_:qualified:)(ObjectType, 0);
      v103 = v97;
      v105 = v104;
      aBlock = (_QWORD *)sub_1000C28FC(v102, v104, &v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v230, v100 + 4, v100 + 12);

      v219 = (uint64_t *)v103;
      swift_bridgeObjectRelease(v105);
      *(_WORD *)(v100 + 12) = 2080;
      v106 = v220;
      sub_1001368A8(v220);
      v108 = v107;
      v109 = Array.description.getter(v107, &type metadata for String);
      v111 = v110;
      swift_bridgeObjectRelease(v108);
      aBlock = (_QWORD *)sub_1000C28FC(v109, v111, &v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v230, v100 + 14, v100 + 22);
      swift_bridgeObjectRelease_n(v106, 2);
      swift_bridgeObjectRelease(v111);
      *(_WORD *)(v100 + 22) = 1024;
      LODWORD(aBlock) = v214 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v100 + 24, v100 + 28);
      *(_WORD *)(v100 + 28) = 1024;
      LODWORD(aBlock) = v211 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v100 + 30, v100 + 34);
      *(_WORD *)(v100 + 34) = 2080;
      v112 = _swiftEmptyArrayStorage;
      if (v89)
      {
        v234 = _swiftEmptyArrayStorage;
        v83 = v225;
        swift_bridgeObjectRetain(v225);
        specialized ContiguousArray.reserveCapacity(_:)(v89);
        v113 = v83 + 32;
        v114 = v226;
        v115 = v228;
        do
        {
          sub_100084C44(v113, (uint64_t)&aBlock);
          v116 = v231;
          v117 = v232;
          sub_10000BE88(&aBlock, (uint64_t)v231);
          v118 = (*((uint64_t (**)(void *, id (*)()))v117 + 2))(v116, v117);
          sub_100084C88(v119, v120, v121);
          v122 = sub_10000BEAC(&aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v122);
          v123 = v234[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v123);
          v124 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v118);
          specialized ContiguousArray._endMutation()(v124);
          v113 += 40;
          --v89;
        }
        while (v89);
        v112 = v234;
        swift_bridgeObjectRelease(v83);
      }
      else
      {
        v83 = v225;
        v114 = v226;
        v115 = v228;
      }
      v128 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
      v129 = Array.description.getter(v112, v128);
      v131 = v130;
      swift_bridgeObjectRelease(v112);
      aBlock = (_QWORD *)sub_1000C28FC(v129, v131, &v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v230, v100 + 36, v100 + 44);
      v94 = v227;
      swift_bridgeObjectRelease(v227);
      swift_bridgeObjectRelease_n(v115, 2);
      swift_bridgeObjectRelease_n(v114, 2);
      swift_bridgeObjectRelease_n(v83, 2);
      swift_bridgeObjectRelease(v131);
      swift_bridgeObjectRelease(v94);
      *(_WORD *)(v100 + 44) = 2080;
      v132 = *(_QWORD *)(v114 + 16);
      v133 = _swiftEmptyArrayStorage;
      if (v132)
      {
        v234 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v114);
        specialized ContiguousArray.reserveCapacity(_:)(v132);
        v134 = v114 + 32;
        do
        {
          sub_100084C44(v134, (uint64_t)&aBlock);
          v135 = v231;
          v136 = v232;
          sub_10000BE88(&aBlock, (uint64_t)v231);
          v137 = (*((uint64_t (**)(void *, id (*)()))v136 + 2))(v135, v136);
          sub_100084C88(v138, v139, v140);
          v141 = sub_10000BEAC(&aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v141);
          v142 = v234[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v142);
          v143 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v142, v137);
          specialized ContiguousArray._endMutation()(v143);
          v134 += 40;
          --v132;
        }
        while (v132);
        v133 = v234;
        swift_bridgeObjectRelease(v114);
      }
      v144 = Array.description.getter(v133, v128);
      v146 = v145;
      swift_bridgeObjectRelease(v133);
      aBlock = (_QWORD *)sub_1000C28FC(v144, v146, &v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v230, v100 + 46, v100 + 54);
      swift_bridgeObjectRelease(v94);
      v147 = v228;
      swift_bridgeObjectRelease_n(v228, 2);
      swift_bridgeObjectRelease_n(v114, 2);
      swift_bridgeObjectRelease_n(v83, 2);
      v148 = v147;
      swift_bridgeObjectRelease(v146);
      swift_bridgeObjectRelease(v94);
      *(_WORD *)(v100 + 54) = 2080;
      v149 = v147[2];
      v150 = _swiftEmptyArrayStorage;
      if (v149)
      {
        v234 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v148);
        specialized ContiguousArray.reserveCapacity(_:)(v149);
        v151 = (uint64_t)(v148 + 4);
        do
        {
          sub_100084C44(v151, (uint64_t)&aBlock);
          v152 = v231;
          v153 = v232;
          sub_10000BE88(&aBlock, (uint64_t)v231);
          v154 = (*((uint64_t (**)(void *, id (*)()))v153 + 2))(v152, v153);
          sub_100084C88(v155, v156, v157);
          v158 = sub_10000BEAC(&aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v158);
          v159 = v234[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v159);
          v160 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v159, v154);
          specialized ContiguousArray._endMutation()(v160);
          v151 += 40;
          --v149;
        }
        while (v149);
        v150 = v234;
        v148 = v228;
        swift_bridgeObjectRelease(v228);
        v83 = v225;
      }
      v161 = Array.description.getter(v150, v128);
      v163 = v162;
      swift_bridgeObjectRelease(v150);
      aBlock = (_QWORD *)sub_1000C28FC(v161, v163, &v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v230, v100 + 56, v100 + 64);
      swift_bridgeObjectRelease(v94);
      swift_bridgeObjectRelease_n(v148, 2);
      swift_bridgeObjectRelease_n(v226, 2);
      swift_bridgeObjectRelease_n(v83, 2);
      swift_bridgeObjectRelease(v163);
      swift_bridgeObjectRelease(v94);
      *(_WORD *)(v100 + 64) = 2080;
      v164 = *(_QWORD *)(v94 + 16);
      v165 = _swiftEmptyArrayStorage;
      if (v164)
      {
        v234 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v94);
        specialized ContiguousArray.reserveCapacity(_:)(v164);
        v166 = v94 + 32;
        do
        {
          sub_100084C44(v166, (uint64_t)&aBlock);
          v167 = v231;
          v168 = v232;
          sub_10000BE88(&aBlock, (uint64_t)v231);
          v169 = (*((uint64_t (**)(void *, id (*)()))v168 + 2))(v167, v168);
          sub_100084C88(v170, v171, v172);
          v173 = sub_10000BEAC(&aBlock);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v173);
          v174 = v234[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v174);
          v175 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v174, v169);
          specialized ContiguousArray._endMutation()(v175);
          v166 += 40;
          --v164;
        }
        while (v164);
        v165 = v234;
        swift_bridgeObjectRelease(v94);
        v85 = v226;
        v176 = v228;
      }
      else
      {
        v176 = v148;
        v85 = v226;
      }
      v177 = Array.description.getter(v165, v128);
      v179 = v178;
      swift_bridgeObjectRelease(v165);
      aBlock = (_QWORD *)sub_1000C28FC(v177, v179, &v235);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v230, v100 + 66, v100 + 74);
      swift_bridgeObjectRelease(v94);
      swift_bridgeObjectRelease_n(v176, 2);
      swift_bridgeObjectRelease_n(v85, 2);
      swift_bridgeObjectRelease_n(v83, 2);
      swift_bridgeObjectRelease(v179);
      swift_bridgeObjectRelease(v94);
      *(_WORD *)(v100 + 74) = 2112;
      v180 = v216;
      v181 = v213;
      isa = NSDiffableDataSourceSnapshot._bridgeToObjectiveC()().super.isa;
      aBlock = isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v230, v100 + 76, v100 + 84);
      v183 = v209;
      *v209 = isa;
      v125 = *(void (**)(char *, uint64_t))(v215 + 8);
      v184 = v181;
      v87 = v228;
      v125(v184, v180);
      v185 = v218;
      _os_log_impl((void *)&_mh_execute_header, v218, (os_log_type_t)v210, "%s applySnapshotUpdates {\n    sectionControllersToUpdate=%s\n    animateCells=%{BOOL}d\n    animateCollectionView=%{BOOL}d\n    insertions=%s\n    removals=%s\n    moves=%s\n    reconfigurations=%s\n    diffableDataSourceSnapshot=%@\n}", (uint8_t *)v100, 0x54u);
      v186 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v183, 1, v186);
      swift_slowDealloc(v183, -1, -1);
      v187 = v212;
      swift_arrayDestroy(v212, 6, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v187, -1, -1);
      swift_slowDealloc(v100, -1, -1);

      v127 = v222;
      v126 = v223;
      v33 = v224;
    }
    else
    {
      swift_bridgeObjectRelease_n(v94, 8);
      swift_bridgeObjectRelease_n(v87, 8);
      swift_bridgeObjectRelease_n(v85, 8);
      swift_bridgeObjectRelease_n(v83, 8);
      swift_bridgeObjectRelease_n(v220, 2);

      v125 = *(void (**)(char *, uint64_t))(v215 + 8);
      v125(v95, v216);

      v127 = v222;
      v126 = v223;
    }
    v188 = sub_1001357C0(v94);
    swift_bridgeObjectRelease(v94);
    swift_bridgeObjectRelease(v87);
    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v83);
    sub_10013BA00((unint64_t)v188);
    swift_bridgeObjectRelease(v188);
    v189 = sub_1001385F0();
    v190 = (uint64_t)v217;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v217, v214 & 1, 0, 0);

    v125((char *)v190, v216);
  }
  else
  {
    swift_bridgeObjectRelease(v227);
    swift_bridgeObjectRelease(v87);
    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v83);
    if (qword_101490E98 != -1)
      swift_once(&qword_101490E98, sub_100114760);
    v192 = type metadata accessor for Logger(0);
    sub_10000E918(v192, (uint64_t)qword_1014D4AD8);
    v193 = v218;
    v194 = v220;
    swift_bridgeObjectRetain_n(v220, 2);
    v195 = v193;
    v196 = Logger.logObject.getter(v195);
    v197 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v196, v197))
    {
      v198 = swift_slowAlloc(22, -1);
      v228 = (_QWORD *)swift_slowAlloc(64, -1);
      aBlock = v228;
      *(_DWORD *)v198 = 136315394;
      v199 = swift_getObjectType(v195);
      v200 = _typeName(_:qualified:)(v199, 0);
      v202 = v201;
      v235 = sub_1000C28FC(v200, v201, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v235, v236, v198 + 4, v198 + 12);

      swift_bridgeObjectRelease(v202);
      *(_WORD *)(v198 + 12) = 2080;
      sub_1001368A8(v194);
      v204 = v203;
      v205 = Array.description.getter(v203, &type metadata for String);
      v224 = v33;
      v207 = v206;
      swift_bridgeObjectRelease(v204);
      v235 = sub_1000C28FC(v205, v207, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v235, v236, v198 + 14, v198 + 22);
      swift_bridgeObjectRelease_n(v194, 2);
      swift_bridgeObjectRelease(v207);
      _os_log_impl((void *)&_mh_execute_header, v196, v197, "%s Skipping diffable snapshot update because no changes. SectionControllersToUpdate=%s", (uint8_t *)v198, 0x16u);
      v208 = v228;
      swift_arrayDestroy(v228, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v208, -1, -1);
      swift_slowDealloc(v198, -1, -1);

      v33 = v224;
    }
    else
    {

      swift_bridgeObjectRelease_n(v194, 2);
    }
    (*(void (**)(char *, uint64_t))(v215 + 8))(v217, v216);
    v127 = v222;
    v126 = v223;
  }
  return sub_1001420E0(v33, v221, v127, v126);
}

void sub_10013BA00(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  void *v67;
  _QWORD *v68;
  uint64_t v69;
  NSString v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  NSString v80;
  id v81;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  char v97;
  _QWORD *v98;
  __n128 v99;
  void *v100;
  void *v101;
  id v102;
  void *v103;
  char v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  NSString v115;
  Class isa;
  id v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  void *v124;
  __n128 v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  char v132;
  __n128 v133;
  id v134;
  char v135;
  uint64_t v136;
  id v137;
  id v138;
  char v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(void *, uint64_t, uint64_t, char *, _QWORD *);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  int64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  int64_t v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  unint64_t v167;
  __int128 v168;
  char *v169;
  uint64_t v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;

  v145 = sub_100008B04((uint64_t *)&unk_10149C0E0);
  __chkstk_darwin(v145);
  v148 = (uint64_t *)((char *)&v142 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v142 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04(&qword_101499510);
  __chkstk_darwin(v7);
  v169 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return;
  v10 = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v175 = _swiftEmptyDictionarySingleton;
  v11 = a1 + 32;
  v167 = a1;
  swift_bridgeObjectRetain(a1);
  v168 = xmmword_100E22F40;
  v166 = v6;
  do
  {
    sub_100084B64(v11, (uint64_t)&v176);
    v17 = *((_QWORD *)&v176 + 1);
    v16 = v177;
    swift_bridgeObjectRetain(v177);
    v19 = sub_1000C17A0(v17, v16);
    v20 = v10[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    v23 = v18;
    if (v10[3] < v22)
    {
      sub_1000D9BE0(v22, 1);
      v10 = (_QWORD *)v175;
      v24 = sub_1000C17A0(v17, v16);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_124;
      v19 = v24;
    }
    if ((v23 & 1) != 0)
    {
      swift_bridgeObjectRelease(v16);
      v160 = v10;
      v26 = v10[7];
      v171 = v176;
      v172 = v177;
      v173 = v178;
      v174 = v179;
      v27 = *(_QWORD **)(v26 + 8 * v19);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v27);
      *(_QWORD *)(v26 + 8 * v19) = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v27 = sub_1000A889C(0, v27[2] + 1, 1, v27);
        *(_QWORD *)(v26 + 8 * v19) = v27;
      }
      v30 = v27[2];
      v29 = v27[3];
      if (v30 >= v29 >> 1)
      {
        v27 = sub_1000A889C((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
        *(_QWORD *)(v26 + 8 * v19) = v27;
      }
      v27[2] = v30 + 1;
      v12 = &v27[8 * v30];
      v13 = v171;
      v14 = v172;
      v15 = v174;
      v12[4] = v173;
      v12[5] = v15;
      v12[2] = v13;
      v12[3] = v14;
      v10 = v160;
    }
    else
    {
      v31 = sub_100008B04((uint64_t *)&unk_10149C0F0);
      v32 = (_OWORD *)swift_allocObject(v31, 96, 7);
      v33 = v176;
      v34 = v177;
      v32[1] = v168;
      v32[2] = v33;
      v35 = v178;
      v36 = v179;
      v32[3] = v34;
      v32[4] = v35;
      v32[5] = v36;
      v10[(v19 >> 6) + 8] |= 1 << v19;
      v37 = (uint64_t *)(v10[6] + 16 * v19);
      *v37 = v17;
      v37[1] = v16;
      *(_QWORD *)(v10[7] + 8 * v19) = v32;
      v38 = v10[2];
      v39 = __OFADD__(v38, 1);
      v40 = v38 + 1;
      if (v39)
        goto LABEL_120;
      v10[2] = v40;
    }
    v11 += 64;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease(v167);
  v41 = 0;
  v156 = 0;
  v42 = v10[8];
  v151 = v10 + 8;
  v43 = 1 << *((_BYTE *)v10 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  v45 = v44 & v42;
  v157 = OBJC_IVAR____TtC4Maps22HomeListRootController_configuration;
  v152 = (unint64_t)(v43 + 63) >> 6;
  v144 = (uint64_t)&v177 + 8;
  v153 = v3;
  v160 = v10;
  while (1)
  {
    if (v45)
    {
      v161 = (v45 - 1) & v45;
      v48 = __clz(__rbit64(v45)) | (v41 << 6);
    }
    else
    {
      v39 = __OFADD__(v41++, 1);
      if (v39)
        goto LABEL_121;
      if (v41 >= v152)
        goto LABEL_115;
      v49 = v151[v41];
      if (!v49)
      {
        v50 = v41 + 1;
        if (v41 + 1 >= v152)
          goto LABEL_115;
        v49 = v151[v50];
        if (!v49)
        {
          v50 = v41 + 2;
          if (v41 + 2 >= v152)
            goto LABEL_115;
          v49 = v151[v50];
          if (!v49)
          {
            v50 = v41 + 3;
            if (v41 + 3 >= v152)
              goto LABEL_115;
            v49 = v151[v50];
            if (!v49)
            {
              while (1)
              {
                v41 = v50 + 1;
                if (__OFADD__(v50, 1))
                  goto LABEL_123;
                if (v41 >= v152)
                  break;
                v49 = v151[v41];
                ++v50;
                if (v49)
                  goto LABEL_34;
              }
LABEL_115:
              swift_release();
              return;
            }
          }
        }
        v41 = v50;
      }
LABEL_34:
      v161 = (v49 - 1) & v49;
      v48 = __clz(__rbit64(v49)) + (v41 << 6);
    }
    v162 = v41;
    v51 = v10[7];
    v52 = (unint64_t *)(v10[6] + 16 * v48);
    v53 = v52[1];
    v167 = *v52;
    v54 = *(_QWORD *)(v51 + 8 * v48);
    v55 = *(_QWORD *)(v54 + 16);
    *(_QWORD *)&v168 = v53;
    if (v55)
    {
      v56 = v54 + 32;
      swift_bridgeObjectRetain_n(v54, 2);
      swift_bridgeObjectRetain(v53);
      v57 = _swiftEmptyArrayStorage;
      do
      {
        sub_100084B64(v56, (uint64_t)&v176);
        v58 = objc_msgSend((id)v176, "firstIdentifier");
        if (v58)
        {
          v59 = v58;
          v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
          v62 = v61;

          sub_100084BA0((uint64_t)&v176);
          if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
            v57 = sub_1000A89A8(0, v57[2] + 1, 1, v57);
          v64 = v57[2];
          v63 = v57[3];
          if (v64 >= v63 >> 1)
            v57 = sub_1000A89A8((_QWORD *)(v63 > 1), v64 + 1, 1, v57);
          v57[2] = v64 + 1;
          v65 = &v57[2 * v64];
          v65[4] = v60;
          v65[5] = v62;
        }
        else
        {
          sub_100084BA0((uint64_t)&v176);
        }
        v56 += 64;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease(v54);
    }
    else
    {
      swift_bridgeObjectRetain(v53);
      swift_bridgeObjectRetain(v54);
      v57 = _swiftEmptyArrayStorage;
    }
    v164 = v54;
    v66 = v57[2];
    if (v66)
    {
      *(_QWORD *)&v176 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v66);
      v67 = (void *)objc_opt_self(IdentifierPath);
      v68 = v57 + 5;
      do
      {
        v69 = *v68;
        swift_bridgeObjectRetain(*v68);
        v70 = String._bridgeToObjectiveC()();
        v71 = objc_msgSend(v67, "identifierPathWithIdentifier:", v70, swift_bridgeObjectRelease(v69).n128_f64[0]);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v72);
        v73 = *(_QWORD *)(v176 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v73);
        v74 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v71);
        specialized ContiguousArray._endMutation()(v74);
        v68 += 2;
        --v66;
      }
      while (v66);
      v75 = v176;
      swift_bridgeObjectRelease(v57);
    }
    else
    {
      swift_bridgeObjectRelease(v57);
      v75 = (uint64_t)_swiftEmptyArrayStorage;
    }
    v76 = *(_QWORD *)(v170 + v157);
    v77 = OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView;
    v78 = *(id *)(v76 + OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView);
    v79 = v168;
    v80 = String._bridgeToObjectiveC()();
    v81 = objc_msgSend(v78, "indexPathsForVisibleSupplementaryElementsOfKind:", v80, swift_bridgeObjectRelease(v79).n128_f64[0]);

    v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v81, v3);
    v83 = v166;
    *(_QWORD *)&v168 = *(_QWORD *)(v82 + 16);
    if ((_QWORD)v168)
      break;
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v47 = v169;
LABEL_20:
    v46(v47, 1, 1, v3);
LABEL_21:
    swift_bridgeObjectRelease(v164);
    swift_bridgeObjectRelease(v82);
    swift_bridgeObjectRelease(v75);
    v10 = v160;
    v41 = v162;
    v45 = v161;
  }
  v154 = v77;
  v155 = v76;
  v84 = 0;
  v167 = v82 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v85 = v75 & 0xFFFFFFFFFFFFFF8;
  v159 = v75 & 0xFFFFFFFFFFFFFF8;
  if (v75 < 0)
    v85 = v75;
  v150 = v85;
  v158 = v75 & 0xC000000000000001;
  v47 = v169;
  v165 = v82;
  while (1)
  {
    if (v84 >= *(_QWORD *)(v82 + 16))
    {
      __break(1u);
      goto LABEL_118;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v47, v167 + *(_QWORD *)(v4 + 72) * v84, v3);
    v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v46(v47, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v47, 1, v3) == 1)
      goto LABEL_21;
    v86 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))(v83, v47, v3);
    v87 = IndexPath.section.getter(v86);
    v88 = sub_1001385F0();
    dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)(&v176, v87);

    v89 = (void *)v176;
    if (!(_QWORD)v176)
      goto LABEL_77;
    v90 = objc_msgSend((id)v176, "firstIdentifier");
    if (!v90)
    {

      goto LABEL_77;
    }
    v91 = v90;
    v92 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
    v94 = v93;

    v95 = sub_1001396A8();
    if (v95[2])
    {
      v96 = sub_1000C17A0(v92, v94);
      if ((v97 & 1) != 0)
        break;
    }

    swift_bridgeObjectRelease(v94);
    swift_bridgeObjectRelease(v95);
    v83 = v166;
    v82 = v165;
LABEL_77:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v83, v3);
    v47 = v169;
LABEL_78:
    if (++v84 == (_QWORD)v168)
      goto LABEL_20;
  }
  v98 = *(id *)(v95[7] + 16 * v96);

  swift_bridgeObjectRelease(v94);
  v99 = swift_bridgeObjectRelease(v95);
  v100 = (void *)(*(uint64_t (**)(__n128))((swift_isaMask & *v98) + 0xD8))(v99);

  if ((unint64_t)v75 >> 62)
  {
    swift_bridgeObjectRetain(v75);
    v140 = (void *)_CocoaArrayWrapper.endIndex.getter(v150);
    v47 = v169;
    v82 = v165;
    v163 = v140;
    if (!v140)
    {
LABEL_108:
      v124 = v100;
      v125 = swift_bridgeObjectRelease(v75);
      goto LABEL_109;
    }
  }
  else
  {
    v101 = *(void **)(v159 + 16);
    swift_bridgeObjectRetain(v75);
    v47 = v169;
    v82 = v165;
    v163 = v101;
    if (!v101)
      goto LABEL_108;
  }
  if (v158)
    v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v75);
  else
    v102 = *(id *)(v75 + 32);
  v103 = v102;
  sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
  v104 = static NSObject.== infix(_:_:)(v103, v100);

  if ((v104 & 1) != 0)
  {
LABEL_67:
    swift_bridgeObjectRelease(v75);
LABEL_68:
    v105 = v164;
    swift_bridgeObjectRetain(v164);
    v106 = v100;
    v107 = v156;
    v108 = sub_100141760(v105, (uint64_t)v106);
    v156 = v107;
    swift_bridgeObjectRelease(v105);

    v109 = v108[2];
    v83 = v166;
    if (v109)
    {
      sub_100084B64((uint64_t)(v108 + 4), (uint64_t)&v176);
      swift_bridgeObjectRelease(v108);
      if (v109 == 1)
      {
        v149 = v75;
        sub_10000C1FC(v144, (uint64_t)&v175, &qword_10149BAC0);
        sub_10000BE48(&v175, (uint64_t)&v171);
        v147 = sub_10000BE88(&v171, *((uint64_t *)&v172 + 1));
        v110 = qword_101490EC8;
        v111 = *(id *)(v155 + v154);
        if (v110 != -1)
          swift_once(&qword_101490EC8, sub_100117858);
        v112 = sub_10000E918(v145, (uint64_t)qword_1014D4B68);
        v113 = v148;
        sub_10000C1FC(v112, (uint64_t)v148, (uint64_t *)&unk_10149C0E0);
        v114 = v113[1];
        v146 = *v113;
        v115 = String._bridgeToObjectiveC()();
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v163 = v111;
        v117 = objc_msgSend(v111, "supplementaryViewForElementKind:atIndexPath:", v115, isa);

        v47 = v169;
        if (v117)
        {
          v118 = objc_opt_self(SectionHeaderCollectionReusableView);
          v119 = swift_dynamicCastObjCClass(v117, v118);
          if (v119)
          {
            v120 = (void *)v119;
            v121 = (uint64_t)v148;
            v143 = (void (*)(void *, uint64_t, uint64_t, char *, _QWORD *))v148[2];
            v122 = v117;
            v123 = v114;
            v83 = v166;
            v143(v120, v146, v123, v166, v147);
            v47 = v169;
            objc_msgSend(v120, "invalidateIntrinsicContentSize");

            sub_100010CC4(v121, (uint64_t *)&unk_10149C0E0);
            sub_100084BA0((uint64_t)&v176);
            (*(void (**)(char *, uint64_t))(v4 + 8))(v83, v3);
            goto LABEL_103;
          }

        }
        sub_100010CC4((uint64_t)v148, (uint64_t *)&unk_10149C0E0);

        sub_100084BA0((uint64_t)&v176);
        v83 = v166;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v166, v3);
LABEL_103:
        sub_10000BEAC(&v171);
        v75 = v149;
LABEL_104:
        v82 = v165;
        goto LABEL_78;
      }
      sub_100084BA0((uint64_t)&v176);

    }
    else
    {

      v133 = swift_bridgeObjectRelease(v108);
    }
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v83, v3, v133);
    v47 = v169;
    goto LABEL_104;
  }
  if (v163 == (id)1)
    goto LABEL_81;
  if (v158)
  {
    v126 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v75);
    v127 = static NSObject.== infix(_:_:)(v126, v100);
    swift_unknownObjectRelease(v126);
    if ((v127 & 1) != 0)
      goto LABEL_67;
    if (v163 != (id)2)
    {
      v128 = 2;
      while (1)
      {
        v129 = specialized _ArrayBuffer._getElementSlowPath(_:)(v128, v75);
        v130 = (id)(v128 + 1);
        if (__OFADD__(v128, 1))
          goto LABEL_119;
        v131 = v129;
        v124 = v100;
        v132 = static NSObject.== infix(_:_:)(v129, v100);
        swift_unknownObjectRelease(v131);
        if ((v132 & 1) != 0)
        {
          swift_bridgeObjectRelease(v75);
          v100 = v124;
          v3 = v153;
          goto LABEL_68;
        }
        ++v128;
        v100 = v124;
        if (v130 == v163)
          goto LABEL_100;
      }
    }
LABEL_81:
    v124 = v100;
    v125 = swift_bridgeObjectRelease(v75);
    v47 = v169;
LABEL_109:
    v83 = v166;
    v141 = v153;
    (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v166, v153, v125);

    v3 = v141;
    goto LABEL_78;
  }
  v134 = *(id *)(v75 + 40);
  v135 = static NSObject.== infix(_:_:)(v134, v100);

  if ((v135 & 1) != 0)
    goto LABEL_67;
  if (v163 == (id)2)
    goto LABEL_81;
  v149 = v75;
  v136 = 6;
  while (1)
  {
    v137 = (id)(v136 - 3);
    if (__OFADD__(v136 - 4, 1))
      break;
    v138 = *(id *)(v149 + 8 * v136);
    v139 = static NSObject.== infix(_:_:)(v138, v100);

    if ((v139 & 1) != 0)
    {
      v75 = v149;
      goto LABEL_67;
    }
    ++v136;
    if (v137 == v163)
    {
      v124 = v100;
      v75 = v149;
LABEL_100:
      v125 = swift_bridgeObjectRelease(v75);
      v47 = v169;
      v82 = v165;
      goto LABEL_109;
    }
  }
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_10013C97C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _BYTE v44[32];
  __int128 v45;
  __int128 v46;
  uint64_t v47[3];
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[32];

  v3 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
  v41 = v1;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers, v50, 1, 0);
  v5 = *v4;
  *v4 = v3;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_19:
    v38 = *v4;
    swift_bridgeObjectRetain_n(*v4, 2);
    v39 = sub_1000D8864(v38);
    swift_bridgeObjectRelease(v38);
    v47[0] = (uint64_t)v39;
    sub_100136B4C(v47);
    swift_bridgeObjectRelease(v38);
    v40 = *(_QWORD *)(v41 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
    *(_QWORD *)(v41 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = v47[0];
    swift_bridgeObjectRelease(v40);
    return;
  }
  v7 = swift_bridgeObjectRetain(a1);
  v8 = 32;
  v42 = a1;
  while (1)
  {
    v9 = *(_QWORD **)(a1 + v8);
    (*(void (**)(__int128 *__return_ptr, uint64_t))((swift_isaMask & *v9) + 0x198))(&v45, v7);
    if (*((_QWORD *)&v46 + 1))
      break;
    v7 = sub_100010CC4((uint64_t)&v45, (uint64_t *)&unk_10149C0D0);
LABEL_4:
    v8 += 16;
    if (!--v6)
    {
      swift_bridgeObjectRelease(a1);
      goto LABEL_19;
    }
  }
  sub_10000BE48(&v45, (uint64_t)v47);
  v10 = v48;
  v11 = v49;
  sub_10000BE88(v47, v48);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  v13 = v9;
  LOBYTE(v10) = v12(v10, v11);
  v14 = sub_1001289DC(v10);
  v16 = v15;
  v17 = v10 + 49;
  v18 = sub_10000E4BC(0, &qword_101499270, UIKeyCommand_ptr);
  v45 = 0u;
  v46 = 0u;
  v19 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(v14, v16, 0, "handleKeyCommand:", v17, 0xE100000000000000, 1572864, &v45, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  swift_beginAccess(v4, v44, 33, 0);
  sub_100084C44((uint64_t)v47, (uint64_t)&v45);
  v20 = v19;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
  v22 = *v4;
  v43 = (_QWORD *)*v4;
  *v4 = 0x8000000000000000;
  v24 = sub_1000C1AAC((uint64_t)v20);
  v25 = *(_QWORD *)(v22 + 16);
  v26 = (v23 & 1) == 0;
  v27 = v25 + v26;
  if (!__OFADD__(v25, v26))
  {
    v28 = v23;
    if (*(_QWORD *)(v22 + 24) < v27)
    {
      sub_1000D937C(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_1000C1AAC((uint64_t)v20);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_22;
      v24 = v29;
      v31 = v43;
      if ((v28 & 1) == 0)
        goto LABEL_15;
LABEL_13:
      v32 = (_QWORD *)(v31[7] + 40 * v24);
      sub_10000BEAC(v32);
      sub_10000BE48(&v45, (uint64_t)v32);
LABEL_17:
      v37 = *v4;
      *v4 = (uint64_t)v31;

      swift_bridgeObjectRelease(v37);
      swift_endAccess(v44);

      v7 = sub_10000BEAC(v47);
      a1 = v42;
      goto LABEL_4;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v31 = v43;
      if ((v23 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_1001A0934();
      v31 = v43;
      if ((v28 & 1) != 0)
        goto LABEL_13;
    }
LABEL_15:
    v31[(v24 >> 6) + 8] |= 1 << v24;
    *(_QWORD *)(v31[6] + 8 * v24) = v20;
    sub_10000BE48(&v45, v31[7] + 40 * v24);
    v33 = v31[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_21;
    v31[2] = v35;
    v36 = v20;
    goto LABEL_17;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v18);
  __break(1u);
  swift_release();
  __break(1u);
}

uint64_t sub_10013CD90(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _BYTE v14[24];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
  swift_beginAccess(v3, v14, 0, 0);
  v4 = *v3;
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = a1;
    swift_bridgeObjectRetain(v4);
    v6 = sub_1000C1AAC((uint64_t)v5);
    if ((v7 & 1) != 0)
    {
      sub_100084C44(*(_QWORD *)(v4 + 56) + 40 * v6, (uint64_t)&v11);
    }
    else
    {
      v13 = 0;
      v11 = 0u;
      v12 = 0u;
    }

    swift_bridgeObjectRelease(v4);
    if (*((_QWORD *)&v12 + 1))
    {
      sub_10000BE48(&v11, (uint64_t)v15);
      v8 = v16;
      v9 = v17;
      sub_10000BE88(v15, v16);
      (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
      return sub_10000BEAC(v15);
    }
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
  }
  return sub_100010CC4((uint64_t)&v11, (uint64_t *)&unk_10149C0D0);
}

void sub_10013CEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, uint64_t, unint64_t);
  const char *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_BYTE *, unint64_t);
  uint64_t v25;
  NSObject *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, unint64_t, uint64_t);
  uint8_t *v32;
  os_signpost_id_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  void *v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t (*v45)(uint64_t, uint64_t);
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[12];
  int v71;
  uint64_t (*v72)(_BYTE *, unint64_t);
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _QWORD *v77;
  char v78[24];
  char v79;

  v0 = type metadata accessor for OSSignpostID(0);
  v73 = *(_QWORD *)(v0 - 8);
  v74 = v0;
  __chkstk_darwin(v0);
  v2 = (uint64_t)&v70[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v5 = (unint64_t)&v70[-v4];
  v6 = type metadata accessor for OSSignposter(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v70[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v75 = &v70[-v11];
  if (qword_101490E98 != -1)
    goto LABEL_45;
  while (1)
  {
    v12 = type metadata accessor for Logger(0);
    v13 = sub_10000E918(v12, (uint64_t)qword_1014D4AD8);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Signaling section loading has started.", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    v17 = v76;
    v18 = v76 + OBJC_IVAR____TtC4Maps22HomeListRootController_proactiveTraySignposter;
    v19 = *(void (**)(_BYTE *, uint64_t, unint64_t))(v7 + 16);
    v19(v75, v76 + OBJC_IVAR____TtC4Maps22HomeListRootController_proactiveTraySignposter, v6);
    v20 = *(const char **)(v17 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName);
    v21 = *(_BYTE *)(v17 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName + 16);
    v22 = ((uint64_t (*)(_BYTE *, uint64_t, unint64_t))v19)(v9, v18, v6);
    v23 = OSSignposter.logHandle.getter(v22);
    OSSignpostID.init(log:)(v23);
    v24 = *(uint64_t (**)(_BYTE *, unint64_t))(v7 + 8);
    v25 = v24(v9, v6);
    v26 = OSSignposter.logHandle.getter(v25);
    v27 = static os_signpost_type_t.begin.getter();
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
      goto LABEL_8;
    v72 = v24;
    v71 = v27;
    if ((v21 & 1) != 0)
    {
      if ((unint64_t)v20 >> 32)
        goto LABEL_47;
      if (v20 >> 11 == 27)
        goto LABEL_49;
      if (v20 >> 16 > 0x10)
        goto LABEL_48;
      v20 = &v79;
    }
    else if (!v20)
    {
      __break(1u);
LABEL_8:

      v28 = v73;
      v29 = v74;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v73 + 16))(v2, v5, v74);
      goto LABEL_14;
    }
    v28 = v73;
    v30 = v74;
    v31 = *(void (**)(uint64_t, unint64_t, uint64_t))(v73 + 16);
    v31(v2, v5, v74);
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    v33 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, (os_signpost_type_t)v71, v33, v20, "", v32, 2u);
    swift_slowDealloc(v32, -1, -1);

    v29 = v30;
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v2, v30);
    v24 = v72;
    v31(v2, v5, v29);
LABEL_14:
    v34 = type metadata accessor for OSSignpostIntervalState(0);
    swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
    v7 = OSSignpostIntervalState.init(id:isOpen:)(v2, 1);
    (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v5, v29);
    v24(v75, v6);
    v35 = v76;
    *(_QWORD *)(v76 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState) = v7;
    swift_release();
    v36 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
    v37 = *(_QWORD *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
    if (v37)
    {
      v38 = *(_QWORD **)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
      v39 = *(_QWORD *)(v37 + 16);
      if (!v39)
        goto LABEL_25;
    }
    else
    {
      v38 = sub_100138ADC();
      v7 = *(_QWORD *)(v35 + v36);
      *(_QWORD *)(v35 + v36) = v38;
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRelease(v7);
      v49 = *(_QWORD *)(v35 + v36);
      if (v49)
      {
        v50 = swift_bridgeObjectRetain(v49);
        sub_10013C97C(v50);
        v51 = v49;
      }
      else
      {
        v52 = *(_QWORD *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
        *(_QWORD *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease(v52);
        v7 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
        v53 = (unint64_t *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
        swift_beginAccess(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers, v78, 1, 0);
        v51 = *v53;
        *v53 = v7;
      }
      swift_bridgeObjectRelease(v51);
      v39 = v38[2];
      if (!v39)
      {
LABEL_25:
        swift_bridgeObjectRetain(v37);
        swift_bridgeObjectRelease(v38);
        v40 = _swiftEmptyArrayStorage;
        goto LABEL_26;
      }
    }
    v77 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v37);
    sub_1001324BC(0, v39, 0);
    v40 = v77;
    v41 = v38 + 5;
    do
    {
      v42 = (void *)*(v41 - 1);
      v43 = *v41;
      ObjectType = swift_getObjectType(v42);
      v45 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8);
      v46 = v42;
      v47 = v45(ObjectType, v43);

      v77 = v40;
      v7 = v40[2];
      v48 = v40[3];
      if (v7 >= v48 >> 1)
      {
        sub_1001324BC(v48 > 1, v7 + 1, 1);
        v40 = v77;
      }
      v40[2] = v7 + 1;
      v40[v7 + 4] = v47;
      v41 += 2;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease(v38);
    v35 = v76;
LABEL_26:
    v54 = sub_10014113C((uint64_t)v40);
    v57 = sub_10014124C(v54, v56, v55 & 1, v40[2], 0, 1, (uint64_t)v40);
    if (!v57)
      break;
    v2 = v57;
    v77 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v57);
    v58 = sub_10014113C((uint64_t)v40);
    if (v2 < 0)
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      return;
    }
    v5 = v58;
    v6 = v59;
    v9 = v40 + 4;
    while ((v5 & 0x8000000000000000) == 0)
    {
      if (v5 >= v40[2])
        goto LABEL_42;
      if ((v60 & 1) != 0)
        goto LABEL_50;
      v61 = *(_QWORD *)&v9[8 * v5];
      if ((v61 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain(*(_QWORD *)&v9[8 * v5]);
        v62 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v61);
        swift_bridgeObjectRelease(v61);
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_43;
        if (v6 >= *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_44;
        v62 = *(_QWORD *)(v61 + 8 * v6 + 32);
        v63 = swift_unknownObjectRetain(v62);
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v63);
      v7 = v77[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v64 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v62);
      specialized ContiguousArray._endMutation()(v64);
      sub_100141480(v5, v6, 0, (uint64_t)v40);
      v5 = v65;
      v6 = v66;
      if (!--v2)
      {
        v67 = v77;
        swift_bridgeObjectRelease(v40);
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_once(&qword_101490E98, sub_100114760);
  }
  swift_bridgeObjectRelease(v40);
  v67 = _swiftEmptyArrayStorage;
LABEL_40:
  v68 = sub_100035960((uint64_t)v67);
  swift_bridgeObjectRelease(v67);
  v69 = *(_QWORD *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders);
  *(_QWORD *)(v35 + OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders) = v68;
  swift_bridgeObjectRelease(v69);
}

void sub_10013D554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  NSObject *v25;
  uint64_t v26;
  char v27;
  NSObject *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  __n128 v37;
  char *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint8_t *v43;
  os_signpost_id_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  const char *v54;
  char *v55;
  NSObject *v56;
  char v57;

  v1 = v0;
  v2 = type metadata accessor for OSSignpostError(0);
  v53 = *(const char **)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OSSignpostID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v46 - v10;
  v12 = type metadata accessor for OSSignposter(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState))
  {
    v55 = v11;
    v56 = v14;
    v51 = v5;
    v52 = OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSingpostState;
    v50 = v6;
    v17 = qword_101490E98;
    swift_retain();
    if (v17 != -1)
      swift_once(&qword_101490E98, sub_100114760);
    v47 = v8;
    v49 = v2;
    v18 = type metadata accessor for Logger(0);
    v19 = sub_10000E918(v18, (uint64_t)qword_1014D4AD8);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = v13;
      v23 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Signaling section loading has finished. No more unloaded section controllers.", v23, 2u);
      v24 = v23;
      v13 = v22;
      swift_slowDealloc(v24, -1, -1);
    }

    v25 = v56;
    v26 = (*(uint64_t (**)(char *, uint64_t, NSObject *))(v13 + 16))(v16, v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_proactiveTraySignposter, v56);
    v54 = *(const char **)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName);
    v27 = *(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_sectionLoadingSignpostName + 16);
    v28 = OSSignposter.logHandle.getter(v26);
    v29 = v55;
    v30 = OSSignpostIntervalState.signpostID.getter();
    v48 = static os_signpost_type_t.end.getter(v30);
    if ((OS_os_log.signpostsEnabled.getter() & 1) == 0)
    {

      (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v51);
      (*(void (**)(char *, NSObject *))(v13 + 8))(v16, v25);
LABEL_24:
      *(_QWORD *)(v1 + v52) = 0;
      swift_release();
      swift_release();
      return;
    }
    v46 = v13;
    v31 = v49;
    if ((v27 & 1) != 0)
    {
      if (!((unint64_t)v54 >> 32))
      {
        v32 = v53;
        if (v54 >> 11 == 27)
        {
LABEL_28:
          __break(1u);
          return;
        }
        if (v54 >> 16 <= 0x10)
        {
          v54 = &v57;
          goto LABEL_20;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      if (v54)
      {
        v32 = v53;
LABEL_20:
        v37 = swift_retain();
        checkForErrorAndConsumeState(state:)(v37);
        swift_release();
        if ((*((unsigned int (**)(char *, uint64_t))v32 + 11))(v4, v31) == enum case for OSSignpostError.doubleEnd(_:))
        {
          v38 = v47;
          v39 = "[Error] Interval already ended";
        }
        else
        {
          v38 = v47;
          (*((void (**)(char *, uint64_t))v32 + 1))(v4, v31);
          v39 = "";
        }
        v53 = v39;
        v40 = v50;
        v41 = v51;
        v42 = v55;
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v38, v55, v51);
        v43 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v43 = 0;
        v44 = OSSignpostID.rawValue.getter();
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v28, (os_signpost_type_t)v48, v44, v54, v53, v43, 2u);
        swift_slowDealloc(v43, -1, -1);

        v45 = *(void (**)(char *, uint64_t))(v40 + 8);
        v45(v42, v41);
        (*(void (**)(char *, NSObject *))(v46 + 8))(v16, v56);
        v45(v38, v41);
        goto LABEL_24;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_27;
  }
  if (qword_101490E98 != -1)
    swift_once(&qword_101490E98, sub_100114760);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_10000E918(v33, (uint64_t)qword_1014D4AD8);
  v56 = Logger.logObject.getter(v34);
  v35 = static os_log_type_t.error.getter(v56);
  if (os_log_type_enabled(v56, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v56, v35, "Lacking signpost state when trying to signal loading completed.", v36, 2u);
    swift_slowDealloc(v36, -1, -1);
  }

}

void sub_10013DA20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_101490E98 == -1)
    goto LABEL_2;
LABEL_35:
  swift_once(&qword_101490E98, sub_100114760);
LABEL_2:
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_1014D4AD8);
  v4 = swift_unknownObjectRetain_n(a1, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v38 = a1;
    v39 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_unknownObjectRetain(a1);
    v9 = sub_100008B04(&qword_101493FE8);
    v10 = String.init<A>(describing:)(&v38, v9);
    v12 = v11;
    v38 = sub_1000C28FC(v10, v11, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v7 + 4, v7 + 12);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Data provider %s signaled it has updated. Checking all data providers.", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
  }
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders);
  v14 = v13 + 56;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v13 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_allDataProviders));
  v19 = 0;
  if (v17)
  {
LABEL_8:
    v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v21 = v20 | (v19 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v14 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v14 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v14 + 8 * v19);
        if (!v23)
        {
          v24 = v22 + 3;
          if (v24 >= v18)
          {
LABEL_28:
            v34 = swift_release();
            v35 = Logger.logObject.getter(v34);
            v36 = static os_log_type_t.error.getter(v35);
            if (os_log_type_enabled(v35, v36))
            {
              v37 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v37 = 0;
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "All data providers have loaded their initial data. Signaling loading has finished.", v37, 2u);
              swift_slowDealloc(v37, -1, -1);
            }

            sub_10013D554();
            return;
          }
          v23 = *(_QWORD *)(v14 + 8 * v24);
          if (!v23)
          {
            while (1)
            {
              v19 = v24 + 1;
              if (__OFADD__(v24, 1))
                goto LABEL_34;
              if (v19 >= v18)
                goto LABEL_28;
              v23 = *(_QWORD *)(v14 + 8 * v19);
              ++v24;
              if (v23)
                goto LABEL_22;
            }
          }
          v19 = v24;
        }
      }
    }
LABEL_22:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_23:
    a1 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v21);
    if ((objc_msgSend((id)swift_unknownObjectRetain(a1), "hasInitialData") & 1) == 0)
      break;
    swift_unknownObjectRelease(a1);
    if (v17)
      goto LABEL_8;
  }
  v25 = swift_unknownObjectRetain_n(a1, 2);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    v29 = swift_slowAlloc(32, -1);
    v38 = a1;
    v39 = v29;
    *(_DWORD *)v28 = 136315138;
    swift_unknownObjectRetain(a1);
    v30 = sub_100008B04((uint64_t *)&unk_10149C0B0);
    v31 = String.init<A>(describing:)(&v38, v30);
    v33 = v32;
    v38 = sub_1000C28FC(v31, v32, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v28 + 4, v28 + 12);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v33);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Data provider %s does not have its initial data. Will not send loading signal.", v28, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    swift_slowDealloc(v28, -1, -1);
    swift_release();
    swift_unknownObjectRelease(a1);
  }
  else
  {
    swift_release();
    swift_unknownObjectRelease_n(a1, 3);
  }

}

id sub_10013DF04()
{
  return sub_100086D98(0, (uint64_t (*)(void))type metadata accessor for HomeListRootController);
}

uint64_t sub_10013E098()
{
  return type metadata accessor for HomeListRootController(0);
}

uint64_t type metadata accessor for HomeListRootController(uint64_t a1)
{
  uint64_t result;

  result = qword_10149BDF0;
  if (!qword_10149BDF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HomeListRootController);
  return result;
}

uint64_t sub_10013E0DC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[25];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\b";
  v4[2] = &unk_100E2DA70;
  v4[3] = &unk_100E2DA88;
  v4[4] = &unk_100E2DA88;
  v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[6] = "\b";
  v4[7] = "\b";
  v4[8] = "\b";
  v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[11] = "\b";
  v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[13] = &unk_100E2DAA0;
  v4[14] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[16] = &unk_100E2DA88;
  v4[17] = "\b";
  v4[18] = "\b";
  v4[19] = "\b";
  v4[20] = "\b";
  v4[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for OSSignposter(319);
  if (v3 <= 0x3F)
  {
    v4[22] = *(_QWORD *)(result - 8) + 64;
    v4[23] = &unk_100E2DAB8;
    v4[24] = "\b";
    return swift_updateClassMetadata2(a1, 256, 25, v4, a1 + 80);
  }
  return result;
}

uint64_t sub_10013E1C0(_QWORD **a1, _QWORD *a2)
{
  _QWORD *v3;
  void *v4;
  void *v5;

  v3 = *a1;
  sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
  v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD8))();
  v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *a2) + 0xD8))();
  LOBYTE(v3) = static NSObject.== infix(_:_:)(v4, v5);

  return v3 & 1;
}

uint64_t sub_10013E270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v15[2];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[3];

  sub_100011E20(a3, (uint64_t)v19);
  v5 = sub_10000E4BC(0, (unint64_t *)&unk_10149BA50, &off_101196DA8);
  if ((swift_dynamicCast(&v16, v19, (char *)&type metadata for Any + 8, v5, 6) & 1) == 0)
    return 0;
  v6 = (void *)v16;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  if (!v7)
  {
    v17 = 0u;
    v18 = 0u;
    v16 = 0u;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
  sub_1000AE4F8(v7, v8);
  sub_1000AE4F8(v7, v8);
  v9 = v6;
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  sub_10012F0C0(v9, 2, 0, 2, v8, &v16);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);

  if (!(_QWORD)v16)
  {
LABEL_6:

    sub_100010CC4((uint64_t)&v16, &qword_10149B500);
    return 0;
  }
  v19[0] = v16;
  v19[1] = v17;
  v19[2] = v18;
  sub_10000C1FC((uint64_t)v19 + 8, (uint64_t)v15, (uint64_t *)&unk_10149B590);
  sub_10000BE48(v15, (uint64_t)&v16);
  v10 = *((_QWORD *)&v17 + 1);
  v11 = v18;
  v12 = sub_10000BE88(&v16, *((uint64_t *)&v17 + 1));
  v13 = sub_100036BB0(a2, (uint64_t)v12, v10, v11);

  sub_100084C10((id *)v19);
  sub_10000BEAC(&v16);
  return v13;
}

uint64_t sub_10013E50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  id v10;
  void *v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v24[2];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[3];

  v5 = v4;
  v9 = IndexPath.section.getter(a1);
  v10 = sub_1001385F0();
  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)(&v29, v9);

  v11 = (void *)v29;
  if (!(_QWORD)v29)
    return 0;
  v12 = sub_100139998((void *)v29);

  if (!v12)
    return 0;
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v12) + 0x1A0);
  v14 = v12;
  v15 = (void *)v13(a4, a2, a3);

  if (!v15)
  {

    return 0;
  }
  v16 = *(_QWORD *)(v5 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot);
  if (!v16)
  {
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(v5 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot + 8);
  sub_1000AE4F8(*(_QWORD *)(v5 + OBJC_IVAR____TtC4Maps22HomeListRootController_rootSnapshot), v17);
  sub_1000AE4F8(v16, v17);
  v18 = v15;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  sub_10012F24C(v18, a2, a3, 0, v17, &v25);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(a3);

  if (!(_QWORD)v25)
  {
LABEL_9:
    sub_100010CC4((uint64_t)&v25, (uint64_t *)&unk_10149FDC0);

    return 0;
  }
  v29 = v25;
  v30[0] = v26;
  v30[1] = v27;
  v30[2] = v28;
  sub_10000C1FC((uint64_t)v30 + 8, (uint64_t)v24, &qword_10149BAC0);
  sub_10000BE48(v24, (uint64_t)&v25);
  v19 = *((_QWORD *)&v26 + 1);
  v20 = v27;
  v21 = sub_10000BE88(&v25, *((uint64_t *)&v26 + 1));
  v22 = sub_100036D1C(a4, (uint64_t)v21, v19, v20);

  sub_100084BA0((uint64_t)&v29);
  sub_10000BEAC(&v25);
  return v22;
}

void *sub_10013E830(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *result;
  void *v8;
  id v9;
  char *v10;

  result = (void *)swift_unknownObjectWeakLoadStrong(*(_QWORD *)&a1[OBJC_IVAR____TtC4Maps22HomeListRootController_configuration]+ OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_homeActionDelegate);
  if (result)
  {
    v8 = result;
    if ((objc_msgSend(result, "respondsToSelector:", *a4) & 1) != 0)
    {
      v9 = a3;
      v10 = a1;
      objc_msgSend(v8, *a4, v9);

    }
    return (void *)swift_unknownObjectRelease(v8);
  }
  return result;
}

void sub_10013E9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t, uint64_t);
  id v15;
  NSObject *v16;
  int v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  void (*v28)(_BYTE *, uint64_t, __n128);
  id v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  void *v34;
  id v35;
  void *v36;
  void *isa;
  id v38;
  _BYTE v39[12];
  int v40;
  uint64_t *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;

  v45 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v39[-v11];
  if (qword_101490E98 != -1)
    swift_once(&qword_101490E98, sub_100114760);
  v13 = type metadata accessor for Logger(0);
  sub_10000E918(v13, (uint64_t)qword_1014D4AD8);
  v14 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, a3, v6);
  v14(v9, a3, v6);
  v15 = v3;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, (os_log_type_t)v17))
  {
    v40 = v17;
    v43 = a3;
    v44 = a2;
    v18 = swift_slowAlloc(32, -1);
    v41 = (uint64_t *)swift_slowAlloc(8, -1);
    v42 = (void *)swift_slowAlloc(64, -1);
    v47 = v42;
    *(_DWORD *)v18 = 136315650;
    ObjectType = swift_getObjectType();
    v20 = _typeName(_:qualified:)(ObjectType, 0);
    v22 = v21;
    v46 = sub_1000C28FC(v20, v21, (uint64_t *)&v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v18 + 4, v18 + 12);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v18 + 12) = 2080;
    v23 = sub_10000BC84((unint64_t *)&qword_10149F310, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v24 = dispatch thunk of CustomStringConvertible.description.getter(v6, v23);
    v26 = v25;
    v46 = sub_1000C28FC(v24, v25, (uint64_t *)&v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v18 + 14, v18 + 22);
    v27 = swift_bridgeObjectRelease(v26);
    v28 = *(void (**)(_BYTE *, uint64_t, __n128))(v7 + 8);
    v28(v12, v6, v27);
    *(_WORD *)(v18 + 22) = 2112;
    v29 = sub_1001385F0();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v46, v9);

    v30 = v46;
    if (!v46)
      v46 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v18 + 24, v18 + 32);
    v32 = v41;
    *v41 = v30;

    ((void (*)(_BYTE *, uint64_t))v28)(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v40, "%s will display cell at index path: %s, identifier path: %@", (uint8_t *)v18, 0x20u);
    v33 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v32, 1, v33);
    swift_slowDealloc(v32, -1, -1);
    v34 = v42;
    swift_arrayDestroy(v42, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    a3 = v43;
    a2 = v44;
  }
  else
  {

    v31 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v31(v12, v6);

    v31(v9, v6);
  }
  v35 = sub_1001385F0();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v47, a3);

  v36 = v47;
  if (v47)
  {
    isa = sub_100139998(v47);

    if (isa)
    {
      if ((objc_msgSend(isa, "respondsToSelector:", "collectionView:willDisplayCell:forItemAtIndexPath:") & 1) != 0)
      {
        v38 = isa;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v38, "collectionView:willDisplayCell:forItemAtIndexPath:", v45, a2, isa);

      }
    }
  }
}

id sub_10013EEBC(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v6;
  void *v7;
  void *isa;
  id v9;
  id v10;
  void *v12;

  v6 = sub_1001385F0();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v12, a2);

  v7 = v12;
  if (!v12)
    return 0;
  isa = sub_100139998(v12);

  if (!isa)
    return 0;
  if ((objc_msgSend(isa, "respondsToSelector:", *a3) & 1) != 0)
  {
    v9 = isa;
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v9, *a3, a1, isa);

  }
  else
  {
    v10 = 0;
  }

  return v10;
}

uint64_t sub_10013EFA4(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v16;

  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v13 = a3;
  v14 = a1;
  LOBYTE(a5) = sub_10013EEBC((uint64_t)v13, (uint64_t)v12, a5);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return a5 & 1;
}

void sub_10013F06C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  id v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  void (*v27)(_BYTE *, uint64_t, __n128);
  id v28;
  uint64_t v29;
  void (*v30)(_BYTE *, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  void *isa;
  id v37;
  _BYTE v38[4];
  int v39;
  uint64_t *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v11 = &v38[-v10];
  if (qword_101490E98 != -1)
    swift_once(&qword_101490E98, sub_100114760);
  v12 = type metadata accessor for Logger(0);
  sub_10000E918(v12, (uint64_t)qword_1014D4AD8);
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v13(v11, a2, v5);
  v43 = a2;
  v13(v8, a2, v5);
  v14 = v2;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    v39 = v16;
    v42 = a1;
    v17 = swift_slowAlloc(32, -1);
    v40 = (uint64_t *)swift_slowAlloc(8, -1);
    v41 = (void *)swift_slowAlloc(64, -1);
    v45 = v41;
    *(_DWORD *)v17 = 136315650;
    ObjectType = swift_getObjectType();
    v19 = _typeName(_:qualified:)(ObjectType, 0);
    v21 = v20;
    v44 = sub_1000C28FC(v19, v20, (uint64_t *)&v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v17 + 4, v17 + 12);

    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v17 + 12) = 2080;
    v22 = sub_10000BC84((unint64_t *)&qword_10149F310, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v23 = dispatch thunk of CustomStringConvertible.description.getter(v5, v22);
    v25 = v24;
    v44 = sub_1000C28FC(v23, v24, (uint64_t *)&v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v17 + 14, v17 + 22);
    v26 = swift_bridgeObjectRelease(v25);
    v27 = *(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8);
    v27(v11, v5, v26);
    *(_WORD *)(v17 + 22) = 2112;
    v28 = sub_1001385F0();
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v44, v8);

    v29 = v44;
    if (!v44)
      v44 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v17 + 24, v17 + 32);
    v31 = v40;
    *v40 = v29;

    ((void (*)(_BYTE *, uint64_t))v27)(v8, v5);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v39, "%s did select item at index path: %s, identifier path: %@", (uint8_t *)v17, 0x20u);
    v32 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v31, 1, v32);
    swift_slowDealloc(v31, -1, -1);
    v33 = v41;
    swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    a1 = v42;
  }
  else
  {

    v30 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v30(v11, v5);

    v30(v8, v5);
  }
  v34 = sub_1001385F0();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)(&v45, v43);

  v35 = v45;
  if (v45)
  {
    isa = sub_100139998(v45);

    if (isa)
    {
      if ((objc_msgSend(isa, "respondsToSelector:", "collectionView:didSelectItemAtIndexPath:") & 1) != 0)
      {
        v37 = isa;
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v37, "collectionView:didSelectItemAtIndexPath:", a1, isa);

      }
    }
  }
}

void sub_10013F718(void *a1, void *a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  v4 = objc_msgSend(a1, "window");
  if (v4)
  {
    v5 = v4;
    v17 = objc_msgSend(v4, "windowScene");

    if (v17)
    {
      v6 = objc_msgSend(objc_allocWithZone((Class)MapsDragLocalContext), "initWithWindowScene:", v17);
      objc_msgSend(a2, "setLocalContext:", v6);

      v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession) = a2;
      swift_unknownObjectRetain(a2);
      swift_unknownObjectRelease(v7);
      v8 = objc_msgSend((id)objc_opt_self(MapsDragAndDropManager), "sharedManager");
      objc_msgSend(v8, "setDragSession:", a2);

      sub_10013F910();
      v9 = *(void **)(v2 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem);
      if (!v9)
      {
        v16 = v17;
        goto LABEL_8;
      }
      v10 = v9;
      v11 = objc_msgSend(v10, "analyticsHelper");
      v12 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v11, "eventValue");
        v15 = objc_msgSend(v11, "actionDetails");
        objc_msgSend(v13, "captureUserAction:onTarget:eventValue:placeActionDetails:", 17001, 8, v14, v15);

        v16 = v15;
LABEL_8:

        return;
      }
      __break(1u);
    }
  }
}

void sub_10013F910()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[6];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession);
  if (!v1)
    return;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView);
  if (!v2)
    return;
  swift_unknownObjectRetain(v1);
  v3 = v2;
  v4 = objc_msgSend(v3, "renderPreviewImage");
  v5 = objc_msgSend(v4, "dragPreview");
  v6 = objc_msgSend(v1, "items");
  v7 = sub_10000E4BC(0, &qword_10149C0A8, UIDragItem_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v14 = v8;
    else
      v14 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v15 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v8);
    if (v15)
      goto LABEL_5;
LABEL_14:
    swift_unknownObjectRelease(v1);

    swift_bridgeObjectRelease(v8);
    return;
  }
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v8);
  }
  else
  {
    if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v9 = *(id *)(v8 + 32);
  }
  v10 = v9;
  swift_bridgeObjectRelease(v8);
  v11 = swift_allocObject(&unk_1011A4C48, 24, 7);
  *(_QWORD *)(v11 + 16) = v5;
  v16[4] = sub_100141724;
  v16[5] = v11;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10013FD44;
  v16[3] = &unk_1011A4C60;
  v12 = _Block_copy(v16);
  v13 = v5;
  swift_release();
  objc_msgSend(v10, "setPreviewProvider:", v12);
  swift_unknownObjectRelease(v1);

  _Block_release(v12);
}

id sub_10013FD44(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  void *v4;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = (void *)v1(v3);
  swift_release(v2);
  return v4;
}

uint64_t sub_10013FE24(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

void sub_10013FE74(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  Swift::Int v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id *v28;
  int v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  Swift::Int v44;
  Swift::Int v45;
  uint64_t *v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  Swift::Int v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65;
  void *v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  char *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  Swift::Int v126;
  char *v127;
  char *v128;
  Swift::Int v129;
  Swift::Int v130;
  Swift::Int v131;
  int v132;
  uint64_t v133;
  void **v134;
  uint64_t v135;
  Swift::Int v136;
  Swift::Int v137;
  Swift::Int v138;
  uint64_t v139;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_160;
    if (v3)
      sub_1001407D0(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_168;
  v126 = v4;
  v131 = v3;
  v123 = a1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v139 = (uint64_t)_swiftEmptyArrayStorage;
    v134 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
LABEL_126:
      if (v13 >= 2)
      {
        v116 = *v123;
        do
        {
          v117 = v13 - 2;
          if (v13 < 2)
            goto LABEL_155;
          if (!v116)
            goto LABEL_167;
          v118 = *(_QWORD *)&v9[16 * v117 + 32];
          v119 = *(_QWORD *)&v9[16 * v13 + 24];
          sub_10014097C((void **)(v116 + 8 * v118), (id *)(v116 + 8 * *(_QWORD *)&v9[16 * v13 + 16]), (id *)(v116 + 8 * v119), v134);
          if (v1)
            break;
          if (v119 < v118)
            goto LABEL_156;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_1000DD110((uint64_t)v9);
          if (v117 >= *((_QWORD *)v9 + 2))
            goto LABEL_157;
          v120 = &v9[16 * v117 + 32];
          *(_QWORD *)v120 = v118;
          *((_QWORD *)v120 + 1) = v119;
          v121 = *((_QWORD *)v9 + 2);
          if (v13 > v121)
            goto LABEL_158;
          memmove(&v9[16 * v13 + 16], &v9[16 * v13 + 32], 16 * (v121 - v13));
          *((_QWORD *)v9 + 2) = v121 - 1;
          v13 = v121 - 1;
        }
        while (v121 > 2);
      }
LABEL_137:
      swift_bridgeObjectRelease(v9);
      *(_QWORD *)((v139 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v122);
      swift_bridgeObjectRelease(v139);
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_10000E4BC(0, &qword_101499270, UIKeyCommand_ptr);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v134 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v139 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v124 = *a1 + 16;
  v125 = *a1 - 8;
  v9 = (char *)_swiftEmptyArrayStorage;
  v12 = v131;
  v135 = *a1;
  while (2)
  {
    v14 = v10 + 1;
    v130 = v10;
    if (v10 + 1 >= v12)
      goto LABEL_52;
    v127 = v9;
    v15 = *(void **)(v11 + 8 * v10);
    v16 = *(id *)(v11 + 8 * v14);
    v17 = v15;
    v18 = objc_msgSend(v16, "input");
    if (v18)
    {
      v19 = v18;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v22 = v21;

    }
    else
    {
      v20 = 0;
      v22 = 0xE000000000000000;
    }
    v23 = objc_msgSend(v17, "input");
    v10 = v130;
    if (v23)
    {
      v24 = v23;
      v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v27 = v26;

      if (v20 != v25)
        goto LABEL_25;
    }
    else
    {
      v25 = 0;
      v27 = 0xE000000000000000;
      if (v20)
      {
LABEL_25:
        v132 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v25, v27, 1);
        goto LABEL_26;
      }
    }
    if (v22 != v27)
      goto LABEL_25;
    v132 = 0;
    v27 = v22;
LABEL_26:
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v22);

    v14 = v130 + 2;
    if (v130 + 2 >= v131)
      goto LABEL_43;
    v28 = (id *)(v124 + 8 * v130);
    while (1)
    {
      v136 = v14;
      v30 = *(v28 - 1);
      v31 = *v28;
      v32 = v30;
      v33 = objc_msgSend(v31, "input");
      if (v33)
      {
        v34 = v33;
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
        v37 = v36;

      }
      else
      {
        v35 = 0;
        v37 = 0xE000000000000000;
      }
      v38 = objc_msgSend(v32, "input");
      if (v38)
      {
        v39 = v38;
        v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
        v42 = v41;

        if (v35 != v40)
          goto LABEL_28;
      }
      else
      {
        v40 = 0;
        v42 = 0xE000000000000000;
        if (v35)
          goto LABEL_28;
      }
      if (v37 == v42)
      {

        swift_bridgeObjectRelease_n(v37, 2);
        if ((v132 & 1) != 0)
        {
          v9 = v127;
          v11 = v135;
          v14 = v136;
          v10 = v130;
          goto LABEL_44;
        }
        goto LABEL_29;
      }
LABEL_28:
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v37, v40, v42, 1);

      swift_bridgeObjectRelease(v42);
      swift_bridgeObjectRelease(v37);
      if (((v132 ^ v29) & 1) != 0)
        break;
LABEL_29:
      v14 = v136 + 1;
      ++v28;
      if (v131 == v136 + 1)
      {
        v14 = v131;
        goto LABEL_42;
      }
    }
    v14 = v136;
LABEL_42:
    v10 = v130;
LABEL_43:
    v9 = v127;
    v11 = v135;
    if ((v132 & 1) != 0)
    {
LABEL_44:
      if (v14 < v10)
        goto LABEL_161;
      if (v10 < v14)
      {
        v43 = (uint64_t *)(v125 + 8 * v14);
        v44 = v14;
        v45 = v10;
        v46 = (uint64_t *)(v11 + 8 * v10);
        do
        {
          if (v45 != --v44)
          {
            if (!v11)
              goto LABEL_166;
            v47 = *v46;
            *v46 = *v43;
            *v43 = v47;
          }
          ++v45;
          --v43;
          ++v46;
        }
        while (v45 < v44);
      }
    }
LABEL_52:
    if (v14 >= v131)
      goto LABEL_78;
    if (__OFSUB__(v14, v10))
      goto LABEL_159;
    if (v14 - v10 >= v126)
    {
LABEL_78:
      if (v14 < v10)
        goto LABEL_154;
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = sub_1000DCBFC(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v68 = *((_QWORD *)v9 + 2);
      v67 = *((_QWORD *)v9 + 3);
      v13 = v68 + 1;
      v138 = v14;
      if (v68 >= v67 >> 1)
        v9 = sub_1000DCBFC((char *)(v67 > 1), v68 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v13;
      v69 = v9 + 32;
      v70 = &v9[16 * v68 + 32];
      *(_QWORD *)v70 = v130;
      *((_QWORD *)v70 + 1) = v138;
      if (!v68)
      {
        v13 = 1;
LABEL_14:
        v12 = v131;
        v10 = v138;
        if (v138 >= v131)
          goto LABEL_126;
        continue;
      }
      while (1)
      {
        v71 = v13 - 1;
        if (v13 >= 4)
        {
          v76 = &v69[16 * v13];
          v77 = *((_QWORD *)v76 - 8);
          v78 = *((_QWORD *)v76 - 7);
          v82 = __OFSUB__(v78, v77);
          v79 = v78 - v77;
          if (v82)
            goto LABEL_143;
          v81 = *((_QWORD *)v76 - 6);
          v80 = *((_QWORD *)v76 - 5);
          v82 = __OFSUB__(v80, v81);
          v74 = v80 - v81;
          v75 = v82;
          if (v82)
            goto LABEL_144;
          v83 = v13 - 2;
          v84 = &v69[16 * v13 - 32];
          v86 = *(_QWORD *)v84;
          v85 = *((_QWORD *)v84 + 1);
          v82 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          if (v82)
            goto LABEL_146;
          v82 = __OFADD__(v74, v87);
          v88 = v74 + v87;
          if (v82)
            goto LABEL_149;
          if (v88 >= v79)
          {
            v106 = &v69[16 * v71];
            v108 = *(_QWORD *)v106;
            v107 = *((_QWORD *)v106 + 1);
            v82 = __OFSUB__(v107, v108);
            v109 = v107 - v108;
            if (v82)
              goto LABEL_153;
            v99 = v74 < v109;
            goto LABEL_115;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v100 = *((_QWORD *)v9 + 4);
            v101 = *((_QWORD *)v9 + 5);
            v82 = __OFSUB__(v101, v100);
            v93 = v101 - v100;
            v94 = v82;
            goto LABEL_109;
          }
          v73 = *((_QWORD *)v9 + 4);
          v72 = *((_QWORD *)v9 + 5);
          v82 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          v75 = v82;
        }
        if ((v75 & 1) != 0)
          goto LABEL_145;
        v83 = v13 - 2;
        v89 = &v69[16 * v13 - 32];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v92 = __OFSUB__(v90, v91);
        v93 = v90 - v91;
        v94 = v92;
        if (v92)
          goto LABEL_148;
        v95 = &v69[16 * v71];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v82 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v82)
          goto LABEL_151;
        if (__OFADD__(v93, v98))
          goto LABEL_152;
        if (v93 + v98 >= v74)
        {
          v99 = v74 < v98;
LABEL_115:
          if (v99)
            v71 = v83;
          goto LABEL_117;
        }
LABEL_109:
        if ((v94 & 1) != 0)
          goto LABEL_147;
        v102 = &v69[16 * v71];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v82 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v82)
          goto LABEL_150;
        if (v105 < v93)
          goto LABEL_14;
LABEL_117:
        v110 = v71 - 1;
        if (v71 - 1 >= v13)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (!v11)
          goto LABEL_165;
        v111 = &v69[16 * v110];
        v112 = *(_QWORD *)v111;
        v113 = &v69[16 * v71];
        v114 = *((_QWORD *)v113 + 1);
        sub_10014097C((void **)(v11 + 8 * *(_QWORD *)v111), (id *)(v11 + 8 * *(_QWORD *)v113), (id *)(v11 + 8 * v114), v134);
        if (v1)
          goto LABEL_137;
        if (v114 < v112)
          goto LABEL_140;
        if (v71 > *((_QWORD *)v9 + 2))
          goto LABEL_141;
        *(_QWORD *)v111 = v112;
        *(_QWORD *)&v69[16 * v110 + 8] = v114;
        v115 = *((_QWORD *)v9 + 2);
        if (v71 >= v115)
          goto LABEL_142;
        v13 = v115 - 1;
        memmove(&v69[16 * v71], v113 + 16, 16 * (v115 - 1 - v71));
        *((_QWORD *)v9 + 2) = v115 - 1;
        if (v115 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v10, v126))
    goto LABEL_162;
  v48 = v131;
  if (v10 + v126 < v131)
    v48 = v10 + v126;
  if (v48 >= v10)
  {
    if (v14 != v48)
    {
      v128 = v9;
      v129 = v48;
      v49 = v125 + 8 * v14;
      do
      {
        v51 = *(void **)(v11 + 8 * v14);
        v133 = v49;
        v137 = v14;
        while (1)
        {
          v52 = *(void **)v49;
          v53 = v51;
          v54 = v52;
          v55 = objc_msgSend(v53, "input");
          if (v55)
          {
            v56 = v55;
            v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
            v59 = v58;

          }
          else
          {
            v57 = 0;
            v59 = 0xE000000000000000;
          }
          v60 = objc_msgSend(v54, "input");
          if (v60)
          {
            v61 = v60;
            v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
            v64 = v63;

          }
          else
          {
            v62 = 0;
            v64 = 0xE000000000000000;
          }
          v11 = v135;
          if (v57 == v62 && v59 == v64)
            break;
          v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v62, v64, 1);

          swift_bridgeObjectRelease(v64);
          swift_bridgeObjectRelease(v59);
          if ((v65 & 1) == 0)
            goto LABEL_62;
          v50 = v137;
          if (!v135)
            goto LABEL_164;
          v66 = *(void **)v49;
          v51 = *(void **)(v49 + 8);
          *(_QWORD *)v49 = v51;
          *(_QWORD *)(v49 + 8) = v66;
          v49 -= 8;
          if (v137 == ++v10)
            goto LABEL_63;
        }

        swift_bridgeObjectRelease_n(v59, 2);
LABEL_62:
        v50 = v137;
LABEL_63:
        v14 = v50 + 1;
        v49 = v133 + 8;
        v10 = v130;
      }
      while (v14 != v129);
      v14 = v129;
      v9 = v128;
    }
    goto LABEL_78;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1001407D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char **v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v27 = *a4;
    v5 = *a4 + 8 * a3 - 8;
    v6 = &selRef_initWithTitle_subTitle_selectedBlock_;
LABEL_6:
    v28 = v4;
    v7 = *(void **)(v27 + 8 * v4);
    v8 = v25;
    v26 = v5;
    while (1)
    {
      v9 = *(void **)v5;
      v10 = v7;
      v11 = v9;
      v12 = objc_msgSend(v10, v6[231]);
      if (v12)
      {
        v13 = v12;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v16 = v15;

      }
      else
      {
        v14 = 0;
        v16 = 0xE000000000000000;
      }
      v17 = objc_msgSend(v11, v6[231]);
      if (v17)
      {
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;

      }
      else
      {
        v19 = 0;
        v21 = 0xE000000000000000;
      }
      if (v14 == v19 && v16 == v21)
      {

        result = swift_bridgeObjectRelease_n(v16, 2);
        v6 = &selRef_initWithTitle_subTitle_selectedBlock_;
LABEL_5:
        v4 = v28 + 1;
        v5 = v26 + 8;
        if (v28 + 1 == a2)
          return result;
        goto LABEL_6;
      }
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v19, v21, 1);

      swift_bridgeObjectRelease(v21);
      result = swift_bridgeObjectRelease(v16);
      v6 = &selRef_initWithTitle_subTitle_selectedBlock_;
      if ((v22 & 1) == 0)
        goto LABEL_5;
      if (!v27)
        break;
      v23 = *(void **)v5;
      v7 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v7;
      *(_QWORD *)(v5 + 8) = v23;
      v5 -= 8;
      if (v28 == ++v8)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10014097C(void **__src, id *a2, id *a3, void **__dst)
{
  void **v4;
  id *v5;
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char **v14;
  id *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  id *v30;
  void **v31;
  id *v32;
  void **v33;
  char **v34;
  id *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id *v51;
  char v52;
  unint64_t v53;
  uint64_t result;
  void **v55;
  id *v56;
  void **v57;
  id *v58;
  void **v59;
  id *v60;
  id *v61;
  id *v62;
  void **v63;
  void **v64;
  id *v65;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = (char *)a3 - (char *)a2;
  v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0)
    v12 = (char *)a3 - (char *)a2;
  v13 = v12 >> 3;
  v65 = __src;
  v64 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7)
      goto LABEL_65;
    if (__dst != a2 || &a2[v13] <= __dst)
      memmove(__dst, a2, 8 * v13);
    v55 = v4;
    v33 = &v4[v13];
    v63 = v33;
    v65 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_64:
      sub_1000DCE40((void **)&v65, (const void **)&v64, &v63);
      return 1;
    }
    v34 = &selRef_initWithTitle_subTitle_selectedBlock_;
    v35 = v6;
    v60 = v7;
    while (1)
    {
      v56 = v33;
      v58 = v6;
      v62 = v5;
      v37 = *--v33;
      v36 = v37;
      v38 = *--v35;
      v39 = v36;
      v40 = v38;
      v41 = objc_msgSend(v39, v34[231]);
      if (v41)
      {
        v42 = v41;
        v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v45 = v44;

      }
      else
      {
        v43 = 0;
        v45 = 0xE000000000000000;
      }
      v46 = objc_msgSend(v40, v34[231]);
      if (v46)
      {
        v47 = v46;
        v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
        v50 = v49;

        if (v43 != v48)
          goto LABEL_51;
      }
      else
      {
        v48 = 0;
        v50 = 0xE000000000000000;
        if (v43)
          goto LABEL_51;
      }
      if (v45 == v50)
      {

        swift_bridgeObjectRelease_n(v45, 2);
        v51 = v62;
        v5 = v62 - 1;
LABEL_56:
        v35 = v58;
        v53 = (unint64_t)v60;
        v34 = &selRef_initWithTitle_subTitle_selectedBlock_;
        v63 = v33;
        if (v51 < v56 || v5 >= v56 || v51 != v56)
          *v5 = *v33;
        goto LABEL_60;
      }
LABEL_51:
      v52 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v48, v50, 1);

      swift_bridgeObjectRelease(v50);
      swift_bridgeObjectRelease(v45);
      v51 = v62;
      v5 = v62 - 1;
      if ((v52 & 1) == 0)
        goto LABEL_56;
      v53 = (unint64_t)v60;
      v33 = v56;
      if (v62 != v58 || v5 >= v58)
        *v5 = *v35;
      v65 = v35;
      v34 = &selRef_initWithTitle_subTitle_selectedBlock_;
LABEL_60:
      if ((unint64_t)v35 > v53)
      {
        v6 = v35;
        if (v33 > v55)
          continue;
      }
      goto LABEL_64;
    }
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v57 = &v4[v10];
    v63 = v57;
    if (v6 < v5 && v8 >= 8)
    {
      v14 = &selRef_initWithTitle_subTitle_selectedBlock_;
      v61 = v5;
      while (1)
      {
        v59 = v7;
        v15 = v6;
        v16 = *v4;
        v17 = *v6;
        v18 = v16;
        v19 = objc_msgSend(v17, v14[231]);
        if (v19)
        {
          v20 = v19;
          v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
          v23 = v22;

        }
        else
        {
          v21 = 0;
          v23 = 0xE000000000000000;
        }
        v24 = objc_msgSend(v18, v14[231]);
        if (v24)
        {
          v25 = v24;
          v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
          v28 = v27;

          if (v21 != v26)
            goto LABEL_22;
        }
        else
        {
          v26 = 0;
          v28 = 0xE000000000000000;
          if (v21)
            goto LABEL_22;
        }
        if (v23 == v28)
        {

          swift_bridgeObjectRelease_n(v23, 2);
LABEL_27:
          v31 = v59;
          v32 = v61;
          if (v59 != v4)
            *v59 = *v4;
          v64 = ++v4;
          v30 = v15;
          goto LABEL_30;
        }
LABEL_22:
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v26, v28, 1);

        swift_bridgeObjectRelease(v28);
        swift_bridgeObjectRelease(v23);
        if ((v29 & 1) == 0)
          goto LABEL_27;
        v30 = v15 + 1;
        v31 = v59;
        v32 = v61;
        if (v59 >= v15 && v59 < v30)
        {
          v14 = &selRef_initWithTitle_subTitle_selectedBlock_;
          if (v59 != v15)
            *v59 = *v15;
          goto LABEL_31;
        }
        *v59 = *v15;
LABEL_30:
        v14 = &selRef_initWithTitle_subTitle_selectedBlock_;
LABEL_31:
        v7 = v31 + 1;
        if (v4 < v57)
        {
          v6 = v30;
          if (v30 < v32)
            continue;
        }
        v65 = v7;
        goto LABEL_64;
      }
    }
    goto LABEL_64;
  }
LABEL_65:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100140E10(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id *v25;
  uint64_t (*v26)(void);
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t *v42;
  _BYTE v43[16];
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD v48[4];
  char v49[32];
  char v50[24];

  v7 = OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers;
  v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  if (v8)
  {
    v9 = *(_QWORD **)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController__sectionControllers);
  }
  else
  {
    v9 = sub_100138ADC();
    v10 = *(_QWORD *)(a2 + v7);
    *(_QWORD *)(a2 + v7) = v9;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRelease(v10);
    v11 = *(_QWORD *)(a2 + v7);
    if (v11)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + v7));
      sub_10013C97C(v12);
      v13 = v11;
    }
    else
    {
      v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
      *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v14);
      v15 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v16 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers, v50, 1, 0);
      v13 = *v16;
      *v16 = v15;
    }
    swift_bridgeObjectRelease(v13);
  }
  __chkstk_darwin(a1);
  v44 = a1;
  v45 = a4;
  swift_bridgeObjectRetain(v8);
  v17 = sub_1001AFEE4((uint64_t (*)(__int128 *))sub_100142234, (uint64_t)v43, (uint64_t)v9);
  v19 = v18;
  swift_bridgeObjectRelease(v9);
  if ((v19 & 1) != 0)
    return;
  v20 = *(_QWORD *)(a2 + v7);
  if (!v20)
  {
    v21 = sub_100138ADC();
    v36 = *(_QWORD *)(a2 + v7);
    *(_QWORD *)(a2 + v7) = v21;
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRelease(v36);
    v37 = *(_QWORD *)(a2 + v7);
    if (v37)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a2 + v7));
      sub_10013C97C(v38);
      v39 = v37;
    }
    else
    {
      v40 = *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands);
      *(_QWORD *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommands) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v40);
      v41 = sub_100009C80((uint64_t)_swiftEmptyArrayStorage);
      v42 = (unint64_t *)(a2 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
      swift_beginAccess(v42, v49, 1, 0);
      v39 = *v42;
      *v42 = v41;
    }
    swift_bridgeObjectRelease(v39);
    if ((v17 & 0x8000000000000000) == 0)
      goto LABEL_10;
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v21 = *(_QWORD **)(a2 + v7);
  if (v17 < 0)
    goto LABEL_25;
LABEL_10:
  if (v21[2] < (unint64_t)v17)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v22 = 1;
  v48[0] = v21;
  v48[1] = v21 + 4;
  v48[2] = 0;
  v48[3] = (2 * v17) | 1;
  swift_bridgeObjectRetain(v20);
  if (v17)
  {
    v46 = v21;
    v47 = 0;
    v24 = v17 - 1;
    v25 = (id *)&v21[2 * v17 + 2];
    while (v24 < v17)
    {
      v26 = *(uint64_t (**)(void))((swift_isaMask & *(_QWORD *)*v25) + 0xF0);
      v27 = *v25;
      v28 = (void *)v26();
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v35 = *(_QWORD *)(v29 + 16);

      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v30);

      v22 = v35 == 0;
      if (v35)
        goto LABEL_17;
      --v24;
      v25 -= 2;
      if (v24 == -1)
      {
        v24 = 0;
LABEL_17:
        v21 = v46;
        goto LABEL_22;
      }
    }
    goto LABEL_26;
  }
  v24 = 0;
LABEL_22:
  __chkstk_darwin(v23);
  v44 = v48;
  sub_1001ABC08((_QWORD *(*)(uint64_t *__return_ptr, uint64_t *))sub_100142250, (uint64_t)v43, v24, v22);
  swift_bridgeObjectRelease(v21);
}

uint64_t sub_10014113C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return v1;
  v2 = result;
  v3 = *(_QWORD *)(result + 32);
  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0)
      v4 = *(_QWORD *)(result + 32);
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(result + 32));
    v5 = _CocoaArrayWrapper.endIndex.getter(v4);
    result = swift_bridgeObjectRelease(v3);
    if (v5)
      return 0;
  }
  else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return 0;
  }
  v6 = v1 - 1;
  if (v1 == 1)
    return v1;
  v7 = 0;
  v8 = v2 + 40;
  while (v6 != v7)
  {
    v9 = *(_QWORD *)(v8 + 8 * v7);
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v11 = *(_QWORD *)(v8 + 8 * v7);
      else
        v11 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v8 + 8 * v7));
      v10 = _CocoaArrayWrapper.endIndex.getter(v11);
      result = swift_bridgeObjectRelease(v9);
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v10)
      return v7 + 1;
    if (v6 == ++v7)
      return v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10014124C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  if (a4 != result)
  {
    v8 = result;
    if (a4 < result)
    {
      v7 = a3 & 1;
      v12 = result;
      v11 = a4;
      v10 = a5;
      a5 = a2;
      if ((a6 & 1) != 0)
        goto LABEL_20;
      goto LABEL_7;
    }
LABEL_19:
    v7 = a6 & 1;
    v12 = a4;
    v11 = v8;
    v10 = a2;
    if ((a3 & 1) != 0)
    {
LABEL_20:
      v16 = 0;
      v9 = 0;
      if ((uint64_t)v11 < v12)
        goto LABEL_21;
LABEL_36:
      if ((v7 & 1) == 0)
      {
        if ((v11 & 0x8000000000000000) != 0)
        {
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        if (v11 >= *(_QWORD *)(a7 + 16))
        {
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        v20 = __OFADD__(v9, a5);
        v9 += a5;
        if (v20)
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
      }
      if (a4 >= v8)
        return v9;
      v20 = __OFSUB__(0, v9);
      v9 = -v9;
      if (!v20)
        return v9;
      goto LABEL_57;
    }
LABEL_7:
    if ((v11 & 0x8000000000000000) != 0)
      goto LABEL_45;
    if (v11 >= *(_QWORD *)(a7 + 16))
      goto LABEL_47;
    v9 = *(_QWORD *)(a7 + 8 * v11 + 32);
    if ((unint64_t)v9 >> 62)
      goto LABEL_49;
    v15 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v10;
    if (!__OFSUB__(v15, v10))
      goto LABEL_11;
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if ((a6 & 1) != 0)
  {
    if ((a3 & 1) != 0)
      return 0;
    while (1)
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      v22 = v9 < 0 ? v9 : v9 & 0xFFFFFFFFFFFFFF8;
      v23 = a5;
      v24 = v7;
      swift_bridgeObjectRetain(v9);
      v25 = _CocoaArrayWrapper.endIndex.getter(v22);
      result = swift_bridgeObjectRelease(v9);
      v7 = v24;
      a5 = v23;
      v16 = v25 - v10;
      if (__OFSUB__(v25, v10))
        goto LABEL_54;
LABEL_11:
      ++v11;
      v9 = v16;
      if ((uint64_t)v11 >= v12)
        goto LABEL_36;
LABEL_21:
      if (v11 <= *(_QWORD *)(a7 + 16))
        v18 = *(_QWORD *)(a7 + 16);
      else
        v18 = v11;
      v9 = v16;
      while (v18 != v11)
      {
        v17 = a7 + 32;
        v19 = *(_QWORD *)(a7 + 32 + 8 * v11);
        if ((unint64_t)v19 >> 62)
        {
          if (v19 < 0)
            v21 = *(_QWORD *)(v17 + 8 * v11);
          else
            v21 = v19 & 0xFFFFFFFFFFFFFF8;
          v27 = a5;
          v26 = v7;
          swift_bridgeObjectRetain(*(_QWORD *)(v17 + 8 * v11));
          v10 = _CocoaArrayWrapper.endIndex.getter(v21);
          result = swift_bridgeObjectRelease(v19);
          v7 = v26;
          a5 = v27;
          v20 = __OFADD__(v9, v10);
          v9 += v10;
          if (v20)
          {
LABEL_35:
            __break(1u);
            goto LABEL_36;
          }
        }
        else
        {
          v10 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
          v20 = __OFADD__(v9, v10);
          v9 += v10;
          if (v20)
            goto LABEL_35;
        }
        if ((uint64_t)++v11 >= v12)
          goto LABEL_36;
      }
      __break(1u);
    }
  }
  if ((a3 & 1) == 0)
  {
    if (a4 < 0)
      goto LABEL_46;
    if (*(_QWORD *)(a7 + 16) <= (unint64_t)a4)
      goto LABEL_48;
    v9 = a5 - a2;
    if (!__OFSUB__(a5, a2))
      return v9;
    __break(1u);
    goto LABEL_19;
  }
LABEL_59:
  __break(1u);
  return result;
}

void sub_100141480(unint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(_QWORD *);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[4];

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v5 = a4;
  v4 = a1;
  v8 = *(_QWORD *)(a4 + 16);
  if (v8 <= a1)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
LABEL_11:
    if (v7 < 0)
      v9 = v7;
    else
      v9 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(v7);
    if (v6 != v10)
      return;
    goto LABEL_15;
  }
  if ((a3 & 1) != 0)
  {
LABEL_28:
    __break(1u);
    return;
  }
  v6 = a2 + 1;
  if (__OFADD__(a2, 1))
    goto LABEL_10;
  v7 = *(_QWORD *)(a4 + 8 * a1 + 32);
  if ((unint64_t)v7 >> 62)
    goto LABEL_11;
  if (v6 != *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    return;
LABEL_15:
  v11 = v4 + 1;
  if (v11 != v8)
  {
    do
    {
      swift_bridgeObjectRetain(v5);
      sub_100008B04(&qword_10149C0C0);
      sub_100010D70(&qword_10149C0C8, &qword_10149C0C0, (const char *)&protocol conformance descriptor for [A]);
      v12 = sub_100197A44(v18, v11, v5);
      v14 = *v13;
      swift_bridgeObjectRetain(*v13);
      ((void (*)(_QWORD *, _QWORD))v12)(v18, 0);
      swift_bridgeObjectRelease(v5);
      if ((unint64_t)v14 >> 62)
      {
        v17 = v14 < 0 ? v14 : v14 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v14);
        v15 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v14);
      }
      else
      {
        v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease(v14);
      if (v15)
        break;
      v16 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_28;
      }
      ++v11;
    }
    while (v16 != v8);
  }
}

uint64_t sub_10014165C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t inited;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v8 = sub_100008B04(&qword_10149C0A0);
  inited = swift_initStackObject(v8, &v13);
  *(_OWORD *)(inited + 16) = xmmword_100E22F40;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a5;
  v10 = a1;
  sub_100139E90(inited, a2);
  swift_setDeallocating(inited);
  v11 = sub_100008B04(&qword_101494000);
  return swift_arrayDestroy(inited + 32, 1, v11);
}

uint64_t sub_100141700()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void *sub_100141724()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

double sub_100141748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100141758(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

_QWORD *sub_100141760(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  id v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _QWORD *v18;

  v2 = _swiftEmptyArrayStorage;
  v18 = _swiftEmptyArrayStorage;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v5 = a1 + 32;
    do
    {
      sub_100084B64(v5, (uint64_t)v14);
      if (objc_msgSend(v14[0], "hasPrefix:", a2))
      {
        v10 = *(_OWORD *)v14;
        v11 = v15;
        v12 = v16;
        v13 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
          sub_100132510(0, v2[2] + 1, 1);
        v2 = v18;
        v7 = v18[2];
        v6 = v18[3];
        if (v7 >= v6 >> 1)
        {
          sub_100132510(v6 > 1, v7 + 1, 1);
          v2 = v18;
        }
        v2[2] = v7 + 1;
        v8 = &v2[8 * v7];
        v8[2] = v10;
        v8[3] = v11;
        v8[4] = v12;
        v8[5] = v13;
      }
      else
      {
        sub_100084BA0((uint64_t)v14);
      }
      v5 += 64;
      --v3;
    }
    while (v3);
  }
  return v2;
}

void sub_100141888(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_100008B04(&qword_10149C1A8);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v26 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v26 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v25 = v5;
  while ((v26 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v26);
    v11 = __OFADD__(v8++, 1);
    if (v11)
      goto LABEL_32;
LABEL_24:
    v27 = v10;
    v29 = v10;
    v12 = v4[5];
    v13 = type metadata accessor for AnyCancellable(0);
    v14 = sub_10000BC84(&qword_10149C1B0, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v15 = dispatch thunk of Hashable._rawHashValue(seed:)(v12, v13, v14);
    v16 = -1 << *((_BYTE *)v4 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
    v20 = 1 << v17;
    if (((1 << v17) & v19) != 0)
    {
      v21 = ~v16;
      v22 = sub_10000BC84(&qword_10149C1B8, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v28 = *(_QWORD *)(v4[6] + 8 * v17);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v28, &v29, v13, v22) & 1) != 0)
        {
          swift_release();
          v5 = v25;
          goto LABEL_17;
        }
        v17 = (v17 + 1) & v21;
        v18 = v17 >> 6;
        v19 = *(_QWORD *)&v9[8 * (v17 >> 6)];
        v20 = 1 << v17;
      }
      while ((v19 & (1 << v17)) != 0);
      v5 = v25;
    }
    *(_QWORD *)&v9[8 * v18] = v20 | v19;
    *(_QWORD *)(v4[6] + 8 * v17) = v27;
    v23 = v4[2];
    v11 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v11)
      goto LABEL_33;
    v4[2] = v24;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_34;
  swift_retain();
  v11 = __OFADD__(v8++, 1);
  if (!v11)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_100141B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  char v8;
  uint64_t *v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _BYTE v18[24];
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  sub_10000C1FC(a1, (uint64_t)v19, (uint64_t *)&unk_101493350);
  if (!v20)
  {
    v9 = (uint64_t *)&unk_101493350;
    v10 = (__int128 *)v19;
LABEL_12:
    sub_100010CC4((uint64_t)v10, v9);
    goto LABEL_13;
  }
  v2 = sub_10000E4BC(0, &qword_101499270, UIKeyCommand_ptr);
  if ((swift_dynamicCast(&v15, v19, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_13:
    v13 = 0;
    return v13 & 1;
  }
  v3 = (void *)v15;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps22HomeListRootController_keyCommandsToHandlers, v18, 0, 0);
  v5 = *v4;
  if (!*(_QWORD *)(*v4 + 16))
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
LABEL_11:

    v9 = (uint64_t *)&unk_10149C0D0;
    v10 = &v15;
    goto LABEL_12;
  }
  v6 = v3;
  swift_bridgeObjectRetain(v5);
  v7 = sub_1000C1AAC((uint64_t)v6);
  if ((v8 & 1) != 0)
  {
    sub_100084C44(*(_QWORD *)(v5 + 56) + 40 * v7, (uint64_t)&v15);
  }
  else
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }

  swift_bridgeObjectRelease(v5);
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_11;
  sub_10000BE48(&v15, (uint64_t)v19);
  v11 = v20;
  v12 = v21;
  sub_10000BE88(v19, v20);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);

  sub_10000BEAC(v19);
  return v13 & 1;
}

void sub_100141C9C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[3];

  v3 = v2;
  v6 = objc_msgSend((id)objc_opt_self(MapsDragAndDropManager), "sharedManager");
  v7 = objc_msgSend(v6, "canStartNewDrag");

  if (!v7)
    return;
  sub_100139A44(a2, &v28);
  if (!(_QWORD)v28)
  {
    sub_100010CC4((uint64_t)&v28, &qword_10149B500);
    return;
  }
  v31[0] = v28;
  v31[1] = v29;
  v31[2] = v30;
  sub_10000C1FC((uint64_t)v31 + 8, (uint64_t)v27, (uint64_t *)&unk_10149B590);
  sub_10000BE48(v27, (uint64_t)&v28);
  v8 = *((_QWORD *)&v29 + 1);
  v9 = v30;
  sub_10000BE88(&v28, *((uint64_t *)&v29 + 1));
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(v8, v9);
  if (!v10)
  {
    sub_100084C10((id *)v31);
    sub_10000BEAC(&v28);
    return;
  }
  v11 = v10;
  objc_msgSend(v10, "setObserver:", v3);
  v12 = *(void **)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem) = v11;
  v13 = v11;

  v14 = objc_msgSend(v13, "analyticsHelper");
  v15 = objc_msgSend(v14, "actionDetails");

  if (!v15)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v16 = IndexPath.item.getter();
  if (v16 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v16 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v15, "setResultIndex:", v16);

  v17 = v13;
  v18 = objc_msgSend(a1, "traitCollection");
  v19 = objc_msgSend(objc_allocWithZone((Class)DragAndDropPreview), "initWithDragAndDropMapItem:traitCollection:", v17, v18);

  v20 = OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView;
  v21 = *(void **)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView) = v19;

  v22 = *(void **)(v3 + v20);
  if (v22)
    objc_msgSend(v22, "setContentUpdateDelegate:", v3);
  v23 = objc_msgSend(v17, "itemProvider");
  v24 = objc_msgSend(objc_allocWithZone((Class)UIDragItem), "initWithItemProvider:", v23);

  v25 = sub_100008B04((uint64_t *)&unk_101493B10);
  v26 = swift_allocObject(v25, 40, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v26 + 32) = v24;
  *(_QWORD *)&v27[0] = v26;
  specialized Array._endMutation()(v26);

  sub_100084C10((id *)v31);
  sub_10000BEAC(&v28);
}

void sub_100141F74()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v1 = OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragItem);
  if (!v2)
    goto LABEL_4;
  v3 = v2;
  v4 = objc_msgSend(v3, "analyticsHelper");
  v5 = objc_msgSend((id)objc_opt_self(MKMapService), "sharedService");
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v4, "eventValue");
    v8 = objc_msgSend(v4, "actionDetails");
    objc_msgSend(v6, "captureUserAction:onTarget:eventValue:placeActionDetails:", 17003, 8, v7, v8);

LABEL_4:
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_currentDragSession) = 0;
    swift_unknownObjectRelease(v9);
    v10 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = 0;

    v11 = *(void **)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps22HomeListRootController_dragPreviewView) = 0;

    v12 = objc_msgSend((id)objc_opt_self(MapsDragAndDropManager), "sharedManager");
    objc_msgSend(v12, "setDragSession:", 0);

    return;
  }
  __break(1u);
}

void *sub_1001420E0(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {

    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    return (void *)swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t sub_10014212C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

uint64_t sub_100142158()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10014217C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC4Maps22HomeListRootController_configuration)+ OBJC_IVAR____TtC4Maps35HomeListRootControllerConfiguration_collectionView), "setAlpha:", *(double *)(v0 + 24));
}

uint64_t sub_1001421A8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1001421CC(uint64_t a1)
{
  uint64_t v1;

  return sub_100139D40(a1, v1);
}

id sub_1001421D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_10013897C(a1, a2, a3, v3);
}

id sub_1001421DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100138A1C(a1, a2, a3, a4, v4);
}

uint64_t sub_1001421E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100138518(a1, a2, v2);
}

uint64_t sub_1001421EC(unint64_t *a1, unint64_t *a2, _QWORD *a3, const char *a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_10000E4BC(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10014222C(uint64_t a1)
{
  uint64_t v1;

  sub_100137920(a1, v1);
}

uint64_t sub_100142234(_QWORD **a1)
{
  uint64_t v1;

  return sub_10013E1C0(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t *sub_100142250@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1001B03C0(a1, *(_QWORD **)(v2 + 16), a2);
}

void sub_1001422B8()
{
  void *v0;
  NSString v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  NSString v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void **v11;
  uint64_t v12;
  void (*v13)(uint64_t, void *);
  void *v14;
  void (*v15)(void *);
  uint64_t v16;

  v1 = String._bridgeToObjectiveC()();
  v2 = swift_allocObject(&unk_1011A4D90, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v15 = sub_100142CA4;
  v16 = v2;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000B3780;
  v14 = &unk_1011A4DA8;
  v3 = _Block_copy(&v11);
  v4 = v0;
  swift_release();
  v5 = objc_msgSend(v4, "addSectionWithTitle:content:", v1, v3);
  _Block_release(v3);

  v6 = String._bridgeToObjectiveC()();
  v7 = swift_allocObject(&unk_1011A4DE0, 24, 7);
  *(_QWORD *)(v7 + 16) = v4;
  v15 = sub_100142CC4;
  v16 = v7;
  v11 = _NSConcreteStackBlock;
  v12 = 1107296256;
  v13 = sub_1000B3780;
  v14 = &unk_1011A4DF8;
  v8 = _Block_copy(&v11);
  v9 = v4;
  swift_release();
  v10 = objc_msgSend(v9, "addSectionWithTitle:content:", v6, v8);
  _Block_release(v8);

}

void sub_100142490(void *a1)
{
  int HasValue;
  int v3;
  NSString v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  void **v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  HasValue = _GEOConfigHasValue(MapsConfig_CameraDefaultPitch, off_1014B4DB8);
  if (a1)
  {
    v3 = HasValue;
    v4 = String._bridgeToObjectiveC()();
    v5 = swift_allocObject(&unk_1011A4F70, 17, 7);
    *(_BYTE *)(v5 + 16) = v3;
    v21 = sub_100142D34;
    v22 = v5;
    v17 = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_100142714;
    v20 = &unk_1011A4F88;
    v6 = _Block_copy(&v17);
    swift_release();
    v7 = swift_allocObject(&unk_1011A4ED0, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v21 = sub_100142D3C;
    v22 = v7;
    v17 = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_1001E2858;
    v20 = &unk_1011A4FB0;
    v8 = _Block_copy(&v17);
    swift_release();
    v9 = objc_msgSend(a1, "addSwitchRowWithTitle:get:set:", v4, v6, v8);
    _Block_release(v8);
    _Block_release(v6);

    if (v3)
    {
      v10 = String._bridgeToObjectiveC()();
      v11 = String._bridgeToObjectiveC()();
      v21 = sub_10014274C;
      v22 = 0;
      v17 = _NSConcreteStackBlock;
      v18 = 1107296256;
      v19 = sub_100142774;
      v20 = &unk_1011A4F10;
      v12 = _Block_copy(&v17);
      v21 = sub_1001427B4;
      v22 = 0;
      v17 = _NSConcreteStackBlock;
      v18 = 1107296256;
      v19 = sub_1001427CC;
      v20 = &unk_1011A4F38;
      v13 = _Block_copy(&v17);
      LODWORD(v14) = 1119092736;
      LODWORD(v15) = 0;
      v16 = objc_msgSend(a1, "addSliderRowWithTitle:subtitleStringFormat:min:max:get:set:", v10, v11, v12, v13, v15, v14);
      _Block_release(v13);
      _Block_release(v12);

    }
  }
}

uint64_t sub_100142714(uint64_t a1)
{
  uint64_t (*v1)(__n128);
  uint64_t v2;
  __n128 v3;

  v1 = *(uint64_t (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  LOBYTE(v1) = v1(v3);
  swift_release(v2);
  return v1 & 1;
}

float sub_10014274C()
{
  return GEOConfigGetDouble(MapsConfig_CameraDefaultPitch, off_1014B4DB8);
}

float sub_100142774(uint64_t a1)
{
  float (*v1)(__n128);
  uint64_t v2;
  __n128 v3;
  float v4;

  v1 = *(float (**)(__n128))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = v1(v3);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001427B4(float a1)
{
  return GEOConfigSetDouble(MapsConfig_CameraDefaultPitch, off_1014B4DB8, a1);
}

uint64_t sub_1001427CC(uint64_t a1, float a2)
{
  void (*v3)(float);
  uint64_t v4;

  v3 = *(void (**)(float))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  swift_retain(v4);
  v3(a2);
  return swift_release(v4);
}

void sub_100142808(void *a1)
{
  int HasValue;
  int v3;
  NSString v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  NSString v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  void **v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;

  HasValue = _GEOConfigHasValue(MapsConfig_CameraDefaultZoom, off_1014B4DC8);
  if (a1)
  {
    v3 = HasValue;
    v4 = String._bridgeToObjectiveC()();
    v5 = swift_allocObject(&unk_1011A4E80, 17, 7);
    *(_BYTE *)(v5 + 16) = v3;
    v21 = sub_100142D60;
    v22 = v5;
    v17 = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_100142714;
    v20 = &unk_1011A4E98;
    v6 = _Block_copy(&v17);
    swift_release();
    v7 = swift_allocObject(&unk_1011A4ED0, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v21 = sub_100142D00;
    v22 = v7;
    v17 = _NSConcreteStackBlock;
    v18 = 1107296256;
    v19 = sub_1001E2858;
    v20 = &unk_1011A4EE8;
    v8 = _Block_copy(&v17);
    swift_release();
    v9 = objc_msgSend(a1, "addSwitchRowWithTitle:get:set:", v4, v6, v8);
    _Block_release(v8);
    _Block_release(v6);

    if (v3)
    {
      v10 = String._bridgeToObjectiveC()();
      v11 = String._bridgeToObjectiveC()();
      v21 = sub_100142AF0;
      v22 = 0;
      v17 = _NSConcreteStackBlock;
      v18 = 1107296256;
      v19 = sub_100142774;
      v20 = &unk_1011A4E20;
      v12 = _Block_copy(&v17);
      v21 = sub_100142B18;
      v22 = 0;
      v17 = _NSConcreteStackBlock;
      v18 = 1107296256;
      v19 = sub_1001427CC;
      v20 = &unk_1011A4E48;
      v13 = _Block_copy(&v17);
      LODWORD(v14) = 1.0;
      LODWORD(v15) = 20.0;
      v16 = objc_msgSend(a1, "addSliderRowWithTitle:subtitleStringFormat:min:max:get:set:", v10, v11, v12, v13, v14, v15);
      _Block_release(v13);
      _Block_release(v12);

    }
  }
}

void sub_100142A78(char a1, uint64_t a2, unsigned int *a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *Strong;
  void *v9;
  _BYTE v10[24];

  v5 = a2 + 16;
  v6 = *a3;
  v7 = *a4;
  if ((a1 & 1) != 0)
    GEOConfigSetDouble(v6, v7, 0.0);
  else
    _GEOConfigRemoveValue(v6, v7);
  swift_beginAccess(v5, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v9 = Strong;
    objc_msgSend(Strong, "rebuildSections");

  }
}

float sub_100142AF0()
{
  return GEOConfigGetDouble(MapsConfig_CameraDefaultZoom, off_1014B4DC8);
}

uint64_t sub_100142B18(float a1)
{
  return GEOConfigSetDouble(MapsConfig_CameraDefaultZoom, off_1014B4DC8, a1);
}

uint64_t type metadata accessor for MapsCameraDefaultsDebugController()
{
  return objc_opt_self(_TtC4Maps33MapsCameraDefaultsDebugController);
}

uint64_t sub_100142C80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100142CA4(void *a1)
{
  sub_100142490(a1);
}

double sub_100142CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100142CBC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100142CC4(void *a1)
{
  sub_100142808(a1);
}

uint64_t sub_100142CCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100142CDC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100142D00(char a1)
{
  uint64_t v1;

  sub_100142A78(a1, v1, (unsigned int *)&MapsConfig_CameraDefaultZoom, (uint64_t *)&off_1014B4DC8);
}

uint64_t sub_100142D24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100142D34()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

void sub_100142D3C(char a1)
{
  uint64_t v1;

  sub_100142A78(a1, v1, (unsigned int *)&MapsConfig_CameraDefaultPitch, (uint64_t *)&off_1014B4DB8);
}

uint64_t sub_100142DB0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[13];

  if (v1[13] >> 60 == 6)
  {
    v3 = (void *)v1[14];
    v4 = v1[12];
    v5 = v1[9];
    v6 = v1[7];
    v21 = v1[8];
    v22 = v1[10];
    v7 = v1[5];
    v20 = v1[6];
    v8 = v1[3];
    v24 = v1[4];
    v9 = v1[11] & 1;
    v10 = v1[13] & 1;
    v11 = v1[2];
    v12 = v3;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v5);
    result = swift_bridgeObjectRetain(v4);
    v14 = v22;
  }
  else
  {
    v9 = v1[16];
    if (!v9)
    {
      v11 = 0;
      v8 = 0;
      v24 = 0;
      v7 = 0;
      v17 = 0;
      v6 = 0;
      v18 = 0;
      v5 = 0;
      v14 = 0;
      v4 = 0;
      v10 = 0;
      v3 = 0;
      goto LABEL_7;
    }
    v15 = swift_retain(v1[16]);
    sub_100142DB0(v25, v15);
    v8 = v25[1];
    v7 = v25[3];
    v6 = v25[5];
    v19 = v25[0];
    v20 = v25[4];
    v5 = v25[7];
    v21 = v25[6];
    v16 = v25[9];
    v23 = v25[8];
    v24 = v25[2];
    v4 = v25[10];
    v10 = v25[11];
    v3 = (void *)v25[12];
    result = swift_release(v9);
    v9 = v16;
    v14 = v23;
    v11 = v19;
  }
  v17 = v20;
  v18 = v21;
LABEL_7:
  *a1 = v11;
  a1[1] = v8;
  a1[2] = v24;
  a1[3] = v7;
  a1[4] = v17;
  a1[5] = v6;
  a1[6] = v18;
  a1[7] = v5;
  a1[8] = v14;
  a1[9] = v9;
  a1[10] = v4;
  a1[11] = v10;
  a1[12] = v3;
  return result;
}

uint64_t sub_100142F18(uint64_t a1)
{
  uint64_t v1;
  __n128 v4;
  char v5;

  if (sub_1001435FC() == a1)
    return 1;
  if (!*(_QWORD *)(v1 + 128))
    return 0;
  v4 = swift_retain();
  v5 = sub_100142F18(a1, v4);
  swift_release();
  return v5 & 1;
}

id sub_100142F7C(void *a1)
{
  id v3;
  id result;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _BYTE v10[104];
  __int128 v11[4];
  unint64_t v12;
  unint64_t v13;
  __int128 v14[6];

  sub_10014438C(a1, (uint64_t)v10);
  sub_1000207BC((uint64_t)v10, (uint64_t)v11, &qword_10149C2B8);
  if (v12 >> 1 == 0xFFFFFFFF && v13 <= 1)
  {
    v9 = objc_msgSend(a1, "alternativeUnit");
    if (v9)
    {
      v8 = sub_100142F7C(v9);

    }
    else
    {

      return 0;
    }
    return (id)v8;
  }
  sub_1001450B0(v11, (uint64_t)v14);
  v3 = objc_msgSend(a1, "alternativeUnit");

  if (!v3)
  {
LABEL_9:
    v6 = (int)objc_msgSend(a1, "layoutPriority");
    v7 = type metadata accessor for PlaceSummaryUnit();
    v8 = swift_allocObject(v7, 136, 7);
    *(_QWORD *)(v8 + 128) = 0;
    sub_1001450B0(v14, v8 + 16);
    *(_QWORD *)(v8 + 120) = v6;
    *(_QWORD *)(v8 + 128) = v3;

    swift_release();
    return (id)v8;
  }
  result = objc_msgSend(a1, "alternativeUnit");
  if (result)
  {
    v5 = result;
    type metadata accessor for PlaceSummaryUnit();
    v3 = (id)sub_100142F7C(v5);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001430D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1000F9234(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(void **)(v0 + 112));
  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 128) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native(v1))
        break;
      v2 = *(_QWORD *)(v1 + 128);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_100143160()
{
  uint64_t v0;

  sub_1001430D4();
  return swift_deallocClassInstance(v0, 136, 7);
}

uint64_t type metadata accessor for PlaceSummaryUnit()
{
  return objc_opt_self(_TtC4Maps16PlaceSummaryUnit);
}

uint64_t sub_1001431A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, void *a13)
{
  unint64_t v14;
  BOOL v15;
  id v19;
  uint64_t result;

  v14 = a12 >> 60;
  if (a12 >> 60)
    v15 = (_DWORD)v14 == 2;
  else
    v15 = 1;
  if (!v15)
  {
    if ((_DWORD)v14 != 6)
      return result;
    v19 = a13;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    a2 = a11;
  }
  return swift_bridgeObjectRetain(a2);
}

void destroy for PlaceSummaryUnit.UnitType(uint64_t a1)
{
  sub_1000F9234(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(void **)(a1 + 96));
}

uint64_t *initializeWithCopy for PlaceSummaryUnit.UnitType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = (void *)a2[12];
  sub_1001431A0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = (uint64_t)v16;
  return a1;
}

uint64_t assignWithCopy for PlaceSummaryUnit.UnitType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v24 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  v27 = (void *)a2[12];
  sub_1001431A0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(void **)(a1 + 96);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  sub_1000F9234(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22);
  return a1;
}

uint64_t assignWithTake for PlaceSummaryUnit.UnitType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)(a2 + 96);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(void **)(a1 + 96);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 96) = v3;
  sub_1000F9234(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryUnit.UnitType(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for PlaceSummaryUnit.UnitType(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 72) = 2 * -a2;
      *(_QWORD *)(a1 + 88) = 0;
      *(_QWORD *)(a1 + 96) = 0;
      *(_QWORD *)(a1 + 80) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_10014356C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 88) >> 60;
  if (v1 <= 9)
    return v1;
  else
    return (*(_DWORD *)a1 + 10);
}

uint64_t sub_100143588(uint64_t result)
{
  *(_QWORD *)(result + 88) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_100143598(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2 < 0xA)
  {
    v2 = *(_QWORD *)(result + 88) & 1 | (a2 << 60);
    *(_QWORD *)(result + 72) &= 1uLL;
    *(_QWORD *)(result + 88) = v2;
  }
  else
  {
    *(_QWORD *)result = (a2 - 10);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = xmmword_100E2DB20;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnit.UnitType()
{
  return &type metadata for PlaceSummaryUnit.UnitType;
}

uint64_t sub_1001435FC()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t))((char *)sub_100143624 + 4 * byte_100E2DB30[*(_QWORD *)(v0 + 104) >> 60]))(1);
}

uint64_t sub_100143624()
{
  return 3;
}

uint64_t sub_10014362C()
{
  return 7;
}

uint64_t sub_100143634()
{
  return 24;
}

uint64_t sub_10014363C()
{
  return 5;
}

uint64_t sub_100143644()
{
  return 6;
}

uint64_t sub_10014364C()
{
  return 15;
}

uint64_t sub_100143654()
{
  return 10;
}

uint64_t sub_10014365C()
{
  return 14;
}

uint64_t sub_100143664@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint64_t v13;
  BOOL v14;

  v3 = v2[14];
  v4 = v2[5];
  v5 = v2[3];
  v6 = v2[4];
  if (v1 == 0xA000000000000000)
  {
    v7.i64[0] = v2[9];
    v7.i64[1] = v2[8];
    v8.i64[0] = v2[14];
    v8.i64[1] = v2[12];
    v9.i64[0] = v2[7];
    v9.i64[1] = v2[6];
    v10.i64[0] = v2[11];
    v10.i64[1] = v2[10];
    v11 = vorrq_s8(vorrq_s8(v8, v7), vorrq_s8(v10, v9));
    if (!(v5 | *(_QWORD *)&vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL)) | v6 | v4 | a1))
      return 0;
  }
  v13 = v2[11] | v2[12] | v2[10] | v2[9] | v2[8] | v2[7] | v2[6] | v4 | v6 | v5;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 1 && !v13)
    return 2;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 2 && !v13)
    return 4;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 3 && !v13)
    return 8;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 4 && !v13)
    return 9;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 5 && !v13)
    return 12;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 6 && !v13)
    return 13;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 7 && !v13)
    return 18;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 8 && !v13)
    return 19;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 9 && !v13)
    return 20;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 10 && !v13)
    return 21;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 11 && !v13)
    return 22;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 12 && !v13)
    return 23;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 13 && !v13)
    return 11;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 14 && !v13)
    return 31;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 15 && !v13)
    return 34;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 16 && !v13)
    return 35;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 17 && !v13)
    return 37;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 18 && !v13)
    return 38;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 19 && !v13)
    return 40;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 20 && !v13)
    return 39;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 21 && !v13)
    return 42;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 22 && !v13)
    return 43;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 23 && !v13)
    return 44;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 24 && !v13)
    return 32;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 25 && !v13)
    return 33;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 26 && !v13)
    return 25;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 27 && !v13)
    return 26;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 28 && !v13)
    return 27;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 29 && !v13)
    return 28;
  if (!v3 && v1 == 0xA000000000000000 && a1 == 30 && !v13)
    return 29;
  if (v13)
    v14 = 0;
  else
    v14 = a1 == 31;
  if (v14 && v1 == 0xA000000000000000 && v3 == 0)
    return 30;
  else
    return 36;
}

uint64_t sub_100143B6C()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100143BA4
                                                            + 4 * byte_100E2DB3B[*(_QWORD *)(v0 + 104) >> 60]))(0x45434E4154534944, 0xE800000000000000);
}

uint64_t sub_100143BA4()
{
  return 0x5241444E4F434553;
}

uint64_t sub_100143BCC()
{
  return 0x53474E49544152;
}

uint64_t sub_100143BE4()
{
  return 0x44494F54434146;
}

uint64_t sub_100143BFC()
{
  return 0x5352554F48;
}

uint64_t sub_100143C10()
{
  return 0x53534552444441;
}

uint64_t sub_100143C28()
{
  return 0x4F5F524556524553;
}

uint64_t sub_100143C4C()
{
  return 0x5F44455441525543;
}

uint64_t sub_100143C70()
{
  return 0x474E49525453;
}

uint64_t sub_100143C84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int8x16_t v11;
  uint64_t result;
  uint64_t v13;
  _BOOL4 v14;
  _BOOL4 v17;

  v3 = v2[14];
  v4 = v2[5];
  v5 = v2[3];
  v6 = v2[4];
  if (a1 == 0xA000000000000000)
  {
    v7.i64[0] = v2[9];
    v7.i64[1] = v2[8];
    v8.i64[0] = v2[14];
    v8.i64[1] = v2[12];
    v9.i64[0] = v2[7];
    v9.i64[1] = v2[6];
    v10.i64[0] = v2[11];
    v10.i64[1] = v2[10];
    v11 = vorrq_s8(vorrq_s8(v8, v7), vorrq_s8(v10, v9));
    if (!(v5 | *(_QWORD *)&vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL)) | v6 | v4 | v1))
      return 1162690894;
  }
  v13 = v2[11] | v2[12] | v2[10] | v2[9] | v2[8] | v2[7] | v2[6] | v4 | v6 | v5;
  if (!v3 && a1 == 0xA000000000000000 && v1 == 1 && !v13)
    return 0x59524F4745544143;
  if (!v3 && a1 == 0xA000000000000000 && v1 == 2 && !v13)
    return 0x4543495250;
  if (!v3 && a1 == 0xA000000000000000 && v1 == 3 && !v13)
    return 0x5F5449534E415254;
  result = 0xD000000000000012;
  if (!v3 && a1 == 0xA000000000000000 && v1 == 4 && !v13)
    return 0xD000000000000015;
  if (v3 || a1 != 0xA000000000000000 || v1 != 5 || v13)
  {
    if (!v3 && a1 == 0xA000000000000000 && v1 == 6 && !v13)
      return 0xD000000000000022;
    if (!v3 && a1 == 0xA000000000000000 && v1 == 7 && !v13)
      return 0x544E45434552;
    if (!v3 && a1 == 0xA000000000000000 && v1 == 8 && !v13)
      return 0x4847494C48474948;
    if (!v3 && a1 == 0xA000000000000000 && v1 == 9 && !v13)
      return 0xD000000000000010;
    if (v3 || a1 != 0xA000000000000000 || v1 != 10 || v13)
    {
      if (v3 || a1 != 0xA000000000000000 || v1 != 11 || v13)
      {
        if (v3 || a1 != 0xA000000000000000 || v1 != 12 || v13)
        {
          if (v3 || a1 != 0xA000000000000000 || v1 != 13 || v13)
          {
            if (v3 || a1 != 0xA000000000000000 || v1 != 14 || v13)
            {
              if (v3 || a1 != 0xA000000000000000 || v1 != 15 || v13)
              {
                if (v3 || a1 != 0xA000000000000000 || v1 != 16 || v13)
                {
                  if (v3 || a1 != 0xA000000000000000 || v1 != 17 || v13)
                  {
                    if (v3 || a1 != 0xA000000000000000 || v1 != 18 || v13)
                    {
                      if (v3 || a1 != 0xA000000000000000 || v1 != 19 || v13)
                      {
                        if (v3 || a1 != 0xA000000000000000 || v1 != 20 || v13)
                        {
                          if (v3 || a1 != 0xA000000000000000 || v1 != 21 || v13)
                          {
                            if (v3 || a1 != 0xA000000000000000 || v1 != 22 || v13)
                            {
                              if (v3 || a1 != 0xA000000000000000 || v1 != 23 || v13)
                              {
                                if (v3 || a1 != 0xA000000000000000 || v1 != 24 || v13)
                                {
                                  if (v3 || a1 != 0xA000000000000000 || v1 != 25 || v13)
                                  {
                                    if (v3 || a1 != 0xA000000000000000 || v1 != 26 || v13)
                                    {
                                      if (v3 || a1 != 0xA000000000000000 || v1 != 27 || v13)
                                      {
                                        if (v3 || a1 != 0xA000000000000000 || v1 != 28 || v13)
                                        {
                                          if (!v3 && a1 == 0xA000000000000000 && v1 == 29 && !v13)
                                            return 0xD000000000000010;
                                          if (v3 || a1 != 0xA000000000000000 || v1 != 30 || v13)
                                          {
                                            v14 = v3 == 0;
                                            v17 = v1 == 31 && v13 == 0 && a1 == 0xA000000000000000;
                                            if (v14 && v17)
                                              return 0xD00000000000001FLL;
                                            else
                                              return 0x5F53534552444441;
                                          }
                                          else
                                          {
                                            return 0xD00000000000001DLL;
                                          }
                                        }
                                        else
                                        {
                                          return 0xD000000000000028;
                                        }
                                      }
                                      else
                                      {
                                        return 0xD000000000000021;
                                      }
                                    }
                                    else
                                    {
                                      return 0xD000000000000023;
                                    }
                                  }
                                }
                                else
                                {
                                  return 0xD00000000000001ALL;
                                }
                              }
                              else
                              {
                                return 0x544F4E5F52455355;
                              }
                            }
                            else
                            {
                              return 0x5F524553555F4E49;
                            }
                          }
                          else
                          {
                            return 0xD000000000000019;
                          }
                        }
                        else
                        {
                          return 0x55445F4554554F52;
                        }
                      }
                      else
                      {
                        return 0x454C5F4554554F52;
                      }
                    }
                    else
                    {
                      return 0x59545F4554554F52;
                    }
                  }
                  else
                  {
                    return 0x435F534F544F4850;
                  }
                }
                else
                {
                  return 0xD000000000000013;
                }
              }
              else
              {
                return 0xD000000000000011;
              }
            }
          }
          else
          {
            return 0xD000000000000022;
          }
        }
        else
        {
          return 0xD000000000000015;
        }
      }
      else
      {
        return 0xD000000000000019;
      }
    }
    else
    {
      return 0x454853494C425550;
    }
  }
  return result;
}

void sub_10014438C(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  void *v24;
  unsigned int v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  unsigned int v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65[13];
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;

  v4 = objc_msgSend(a1, "type");
  v5 = 0;
  v6 = 0uLL;
  v7 = 0x1FFFFFFFELL;
  v8 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0uLL;
  v14 = 0uLL;
  switch(v4)
  {
    case 1u:
      v15 = objc_msgSend(a1, "name", 0.0, 0.0, 0.0);
      if (!v15)
      {
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
        JUMPOUT(0x100145024);
      }

      v5 = 0;
      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v14 = 0uLL;
      v11 = 0xA000000000000000;
      goto LABEL_87;
    case 2u:
      v16 = objc_msgSend(a1, "category", 0.0, 0.0, 0.0);
      if (!v16)
        goto LABEL_95;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 1;
      goto LABEL_87;
    case 3u:
      v17 = objc_msgSend(a1, "distance", 0.0, 0.0, 0.0);
      if (!v17)
        goto LABEL_96;
      v18 = v17;
      v5 = (uint64_t)objc_msgSend(v17, "maximumDistanceInMeters");

      if (!v5)
        goto LABEL_80;
      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v14 = 0uLL;
      v11 = 0x1000000000000000;
      goto LABEL_87;
    case 4u:
      v19 = objc_msgSend(a1, "price", 0.0, 0.0, 0.0);
      if (!v19)
        goto LABEL_97;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 2;
      goto LABEL_87;
    case 5u:
      v20 = objc_msgSend(a1, "hours", 0.0, 0.0, 0.0);
      if (!v20)
        goto LABEL_98;
      v21 = sub_10001A7A8(v20);
      if (v22 == 1)
        goto LABEL_79;
      v8 = v22;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v5 = v21 & 1;
      v14 = 0uLL;
      v11 = 0x2000000000000000;
      goto LABEL_87;
    case 6u:
      v23 = objc_msgSend(a1, "address", 0.0, 0.0, 0.0);
      if (!v23)
        goto LABEL_99;
      v24 = v23;
      v25 = objc_msgSend(v23, "type");

      v5 = v25 - 1;
      if (v5 <= 3)
      {
        v8 = 0;
        v9 = 0;
        v7 = 0;
        v10 = 0;
        v12 = 0;
        v13 = 0uLL;
        v14 = 0uLL;
        v11 = 0x3000000000000000;
        goto LABEL_87;
      }
LABEL_79:
      v5 = 0;
LABEL_80:
      v8 = 0;
      goto LABEL_84;
    case 7u:
      v26 = objc_msgSend(a1, "ratings", 0.0, 0.0, 0.0);
      if (!v26)
        goto LABEL_100;
      v27 = v26;
      LODWORD(v5) = objc_msgSend(v26, "shouldShowRatingCount");

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v14 = 0uLL;
      v11 = 0x4000000000000000;
      v5 = v5;
      goto LABEL_87;
    case 8u:
      v28 = objc_msgSend(a1, "transitShields", 0.0, 0.0, 0.0);
      if (!v28)
        goto LABEL_101;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 3;
      goto LABEL_87;
    case 9u:
      v29 = objc_msgSend(a1, "userGeneratedGuides", 0.0, 0.0, 0.0);
      if (!v29)
        goto LABEL_102;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 4;
      goto LABEL_87;
    case 0xAu:
      v30 = objc_msgSend(a1, "curatedGuides", 0.0, 0.0, 0.0);
      if (!v30)
        goto LABEL_103;
      v31 = v30;
      if (objc_msgSend(v30, "hasMinNumGuides"))
      {
        LODWORD(v5) = objc_msgSend(v31, "minNumGuides");

        v8 = 0;
        v9 = 0;
        v7 = 0;
        v10 = 0;
        v12 = 0;
        v13 = 0uLL;
        v14 = 0uLL;
        v11 = 0x5000000000000000;
        v5 = v5;
      }
      else
      {

        v5 = 0;
        v8 = 0;
        v9 = 0;
        v7 = 0;
        v10 = 0;
        v12 = 0;
        v13 = 0uLL;
        v14 = 0uLL;
        v11 = 0x5000000000000000;
      }
      goto LABEL_87;
    case 0xBu:
      v32 = objc_msgSend(a1, "evChargersNumber", 0.0, 0.0, 0.0);
      if (!v32)
        goto LABEL_104;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 5;
      goto LABEL_87;
    case 0xCu:
      v33 = objc_msgSend(a1, "ugcUserSubmittedRecommendations", 0.0, 0.0, 0.0);
      if (!v33)
        goto LABEL_105;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 6;
      goto LABEL_87;
    case 0xDu:
      v34 = objc_msgSend(a1, "string", 0.0, 0.0, 0.0);
      if (!v34)
        goto LABEL_106;
      v35 = v34;
      sub_1000A3C68(v34, v65);

      sub_1000207BC((uint64_t)v65, (uint64_t)&v66, &qword_101498460);
      v8 = v67;
      if (v67)
      {
        v5 = v66;
        v6 = v68;
        v13 = v69;
        v14 = v70;
        v9 = v71;
        v7 = v72;
        v10 = v73;
        v12 = v75;
        v11 = v74 | 0x6000000000000000;
      }
      else
      {
        v5 = 0;
LABEL_84:
        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v13 = 0uLL;
        v14 = 0uLL;
        v7 = 0x1FFFFFFFELL;
LABEL_87:
        v6 = 0uLL;
      }
      goto LABEL_88;
    case 0xEu:
      v36 = objc_msgSend(a1, "serverOverride", 0.0, 0.0, 0.0);
      if (!v36)
        goto LABEL_107;
      v37 = v36;
      LODWORD(v5) = objc_msgSend(v36, "serverOverrideIdentifier");

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v14 = 0uLL;
      v11 = 0x7000000000000000;
      v5 = v5;
      goto LABEL_87;
    case 0xFu:
      v38 = objc_msgSend(a1, "containment", 0.0, 0.0, 0.0);
      if (!v38)
        goto LABEL_108;
      v39 = v38;
      v40 = objc_msgSend(v38, "containmentType");

      v5 = 0;
      if (v40 == 1)
      {
        v6 = 0uLL;
        goto LABEL_91;
      }
      v6 = 0uLL;
      if (v40 == 4)
      {
        v5 = 2;
        goto LABEL_91;
      }
      if (v40 == 3)
      {
        v5 = 1;
LABEL_91:
        v8 = 0;
        v9 = 0;
        v7 = 0;
        v10 = 0;
        v12 = 0;
        v13 = 0uLL;
        v14 = 0uLL;
        v11 = 0x8000000000000000;
        goto LABEL_88;
      }
      v7 = 0x1FFFFFFFELL;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v13 = 0uLL;
      v11 = 0;
LABEL_93:
      v14 = 0uLL;
      v12 = 0;
LABEL_88:
      *(_QWORD *)a2 = v5;
      *(_QWORD *)(a2 + 8) = v8;
      *(_OWORD *)(a2 + 16) = v6;
      *(_OWORD *)(a2 + 32) = v13;
      *(_OWORD *)(a2 + 48) = v14;
      *(_QWORD *)(a2 + 64) = v9;
      *(_QWORD *)(a2 + 72) = v7;
      *(_QWORD *)(a2 + 80) = v10;
      *(_QWORD *)(a2 + 88) = v11;
      *(_QWORD *)(a2 + 96) = v12;
      return;
    case 0x10u:
      v41 = objc_msgSend(a1, "recent", 0.0, 0.0, 0.0);
      if (!v41)
        goto LABEL_109;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 7;
      goto LABEL_87;
    case 0x11u:
      v42 = objc_msgSend(a1, "highlightMain", 0.0, 0.0, 0.0);
      if (!v42)
        goto LABEL_110;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 8;
      goto LABEL_87;
    case 0x12u:
      v43 = objc_msgSend(a1, "highlightExtra", 0.0, 0.0, 0.0);
      if (!v43)
        goto LABEL_111;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 9;
      goto LABEL_87;
    case 0x13u:
      v44 = objc_msgSend(a1, "publisherNameForGuide", 0.0, 0.0, 0.0);
      if (!v44)
        goto LABEL_112;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 10;
      goto LABEL_87;
    case 0x14u:
      v45 = objc_msgSend(a1, "numPlacesInGuide", 0.0, 0.0, 0.0);
      if (!v45)
        goto LABEL_113;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 11;
      goto LABEL_87;
    case 0x15u:
      v46 = objc_msgSend(a1, "publisherDescription", 0.0, 0.0, 0.0);
      if (!v46)
        goto LABEL_114;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 12;
      goto LABEL_87;
    case 0x16u:
      v47 = objc_msgSend(a1, "secondaryName", 0.0, 0.0, 0.0);
      if (!v47)
        goto LABEL_115;
      v48 = v47;
      v49 = objc_msgSend(v47, "symbolName");
      if (v49)
      {
        v50 = v49;
        v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v8 = v51;

      }
      else
      {

        v5 = 0;
        v8 = 0;
      }
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      v13 = 0uLL;
      v14 = 0uLL;
      goto LABEL_87;
    case 0x17u:
      v52 = objc_msgSend(a1, "factoid", 0.0, 0.0, 0.0);
      if (!v52)
        goto LABEL_116;
      v53 = v52;
      LODWORD(v5) = objc_msgSend(v52, "factoidIndex");

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v14 = 0uLL;
      v11 = 0x9000000000000000;
      v5 = v5;
      goto LABEL_87;
    case 0x18u:
      goto LABEL_88;
    case 0x19u:
      v54 = objc_msgSend(a1, "realTimeEvChargerAvailability", 0.0, 0.0, 0.0);
      if (!v54)
        goto LABEL_117;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 13;
      goto LABEL_87;
    case 0x1Au:
      v55 = objc_msgSend(a1, "detourTime", 0.0, 0.0, 0.0);
      if (!v55)
        goto LABEL_118;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 14;
      goto LABEL_87;
    case 0x1Bu:
      v56 = objc_msgSend(a1, "hikingDifficulty", 0.0, 0.0, 0.0);
      if (!v56)
        goto LABEL_119;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 15;
      goto LABEL_87;
    case 0x1Cu:
      v64 = objc_msgSend(a1, "hikingTrailLength", 0.0, 0.0, 0.0);
      if (!v64)
        goto LABEL_127;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 16;
      goto LABEL_87;
    case 0x1Du:
      v57 = objc_msgSend(a1, "photoCarousel", 0.0, 0.0, 0.0);
      if (!v57)
        goto LABEL_120;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 17;
      goto LABEL_87;
    case 0x1Eu:
      v58 = objc_msgSend(a1, "inUserLibrary", 0.0, 0.0, 0.0);
      if (!v58)
        goto LABEL_121;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 22;
      goto LABEL_87;
    case 0x1Fu:
      v59 = objc_msgSend(a1, "userNote", 0.0, 0.0, 0.0);
      if (!v59)
        goto LABEL_122;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 23;
      goto LABEL_87;
    case 0x20u:
      v60 = objc_msgSend(a1, "hikeRouteElevationGainLoss", 0.0, 0.0, 0.0);
      if (!v60)
        goto LABEL_123;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 21;
      goto LABEL_87;
    case 0x21u:
      v61 = objc_msgSend(a1, "hikeRouteType", 0.0, 0.0, 0.0);
      if (!v61)
        goto LABEL_124;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 18;
      goto LABEL_87;
    case 0x22u:
      v62 = objc_msgSend(a1, "hikeRouteDuration", 0.0, 0.0, 0.0);
      if (!v62)
        goto LABEL_125;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 20;
      goto LABEL_87;
    case 0x23u:
      v63 = objc_msgSend(a1, "hikeRouteLength", 0.0, 0.0, 0.0);
      if (!v63)
        goto LABEL_126;

      v8 = 0;
      v9 = 0;
      v7 = 0;
      v10 = 0;
      v12 = 0;
      v13 = 0uLL;
      v11 = 0xA000000000000000;
      v14 = 0uLL;
      v5 = 19;
      goto LABEL_87;
    default:
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v13 = 0uLL;
      goto LABEL_93;
  }
}

uint64_t sub_1001450B0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *a1;
  v3 = a1[2];
  *(_OWORD *)(a2 + 16) = a1[1];
  *(_OWORD *)(a2 + 32) = v3;
  *(_OWORD *)a2 = v2;
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  *(_QWORD *)(a2 + 96) = *((_QWORD *)a1 + 12);
  *(_OWORD *)(a2 + 64) = v5;
  *(_OWORD *)(a2 + 80) = v6;
  *(_OWORD *)(a2 + 48) = v4;
  return a2;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitUGCUserSubmittedRecommendations()
{
  return &type metadata for PlaceSummaryUnitUGCUserSubmittedRecommendations;
}

id sub_1001451CC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryTemplateFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaceSummaryTemplateFactory()
{
  return objc_opt_self(_TtC4Maps27PlaceSummaryTemplateFactory);
}

id sub_10014521C(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32[48];
  uint64_t v33;

  v1 = objc_msgSend(a1, "mapItem");
  if (!v1)
    goto LABEL_6;
  v2 = v1;
  v3 = objc_msgSend(v1, "_venueInfo");

  if (!v3)
    goto LABEL_6;
  v4 = objc_msgSend(v3, "contents");
  swift_unknownObjectRelease(v3);
  if (!v4)
    goto LABEL_6;
  v5 = objc_msgSend(v4, "items");
  swift_unknownObjectRelease(v4);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String);

  v7 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    v8 = sub_100008B04(&qword_101498A28);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100E22F70;
    v10 = sub_100008B04((uint64_t *)&unk_101493B10);
    v11 = swift_allocObject(v10, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100E23F50;
    v12 = type metadata accessor for PlaceSummaryUnit();
    v13 = swift_allocObject(v12, 136, 7);
    *(_OWORD *)(v13 + 16) = 0u;
    *(_OWORD *)(v13 + 32) = 0u;
    *(_OWORD *)(v13 + 48) = 0u;
    *(_OWORD *)(v13 + 64) = 0u;
    *(_OWORD *)(v13 + 80) = 0u;
    *(_QWORD *)(v13 + 96) = 0;
    *(_QWORD *)(v13 + 104) = 0xA000000000000000;
    *(_QWORD *)(v13 + 120) = 0;
    *(_QWORD *)(v13 + 128) = 0;
    *(_QWORD *)(v13 + 112) = 0;
    *(_QWORD *)(v11 + 32) = v13;
    specialized Array._endMutation()(v13);
    *(_QWORD *)(v9 + 32) = v11;
    *(_WORD *)(v9 + 40) = 0;
    v14 = swift_allocObject(v10, 40, 7);
    *(_OWORD *)(v14 + 16) = xmmword_100E23F50;
    v15 = swift_allocObject(v12, 136, 7);
    *(_QWORD *)(v15 + 16) = 25;
    *(_OWORD *)(v15 + 24) = 0u;
    *(_OWORD *)(v15 + 40) = 0u;
    *(_OWORD *)(v15 + 56) = 0u;
    *(_OWORD *)(v15 + 72) = 0u;
    *(_OWORD *)(v15 + 88) = 0u;
    *(_QWORD *)(v15 + 104) = 0xA000000000000000;
    *(_QWORD *)(v15 + 112) = 0;
    *(_QWORD *)(v15 + 120) = 0;
    *(_QWORD *)(v15 + 128) = 0;
    *(_QWORD *)(v14 + 32) = v15;
    v33 = v14;
    specialized Array._endMutation()(v15);
    *(_QWORD *)(v9 + 48) = v14;
    *(_BYTE *)(v9 + 56) = 0;
    v16 = (_BYTE *)(v9 + 57);
  }
  else
  {
LABEL_6:
    v17 = sub_100008B04(&qword_101498A28);
    v9 = swift_allocObject(v17, 80, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100E22F50;
    v18 = sub_100008B04((uint64_t *)&unk_101493B10);
    v19 = swift_allocObject(v18, 40, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100E23F50;
    v20 = type metadata accessor for PlaceSummaryUnit();
    v21 = swift_allocObject(v20, 136, 7);
    *(_OWORD *)(v21 + 16) = 0u;
    *(_OWORD *)(v21 + 32) = 0u;
    *(_OWORD *)(v21 + 48) = 0u;
    *(_OWORD *)(v21 + 64) = 0u;
    *(_OWORD *)(v21 + 80) = 0u;
    *(_QWORD *)(v21 + 96) = 0;
    *(_QWORD *)(v21 + 104) = 0xA000000000000000;
    *(_QWORD *)(v21 + 120) = 0;
    *(_QWORD *)(v21 + 128) = 0;
    *(_QWORD *)(v21 + 112) = 0;
    *(_QWORD *)(v19 + 32) = v21;
    specialized Array._endMutation()(v21);
    *(_QWORD *)(v9 + 32) = v19;
    *(_WORD *)(v9 + 40) = 0;
    v22 = swift_allocObject(v18, 48, 7);
    *(_OWORD *)(v22 + 16) = xmmword_100E250A0;
    v23 = swift_allocObject(v20, 136, 7);
    *(_QWORD *)(v23 + 16) = 1;
    *(_OWORD *)(v23 + 24) = 0u;
    *(_OWORD *)(v23 + 40) = 0u;
    *(_OWORD *)(v23 + 56) = 0u;
    *(_OWORD *)(v23 + 72) = 0u;
    *(_OWORD *)(v23 + 88) = 0u;
    *(_QWORD *)(v23 + 104) = 0xA000000000000000;
    *(_QWORD *)(v23 + 112) = 0;
    *(_QWORD *)(v23 + 120) = 0;
    *(_QWORD *)(v23 + 128) = 0;
    *(_QWORD *)(v22 + 32) = v23;
    v24 = swift_allocObject(v20, 136, 7);
    *(_QWORD *)(v24 + 16) = 24;
    *(_OWORD *)(v24 + 24) = 0u;
    *(_OWORD *)(v24 + 40) = 0u;
    *(_OWORD *)(v24 + 56) = 0u;
    *(_OWORD *)(v24 + 72) = 0u;
    *(_OWORD *)(v24 + 88) = 0u;
    *(_QWORD *)(v24 + 104) = 0xA000000000000000;
    *(_QWORD *)(v24 + 112) = 0;
    *(_QWORD *)(v24 + 120) = 0;
    *(_QWORD *)(v24 + 128) = 0;
    *(_QWORD *)(v22 + 40) = v24;
    v33 = v22;
    specialized Array._endMutation()(v24);
    *(_QWORD *)(v9 + 48) = v22;
    *(_WORD *)(v9 + 56) = 0;
    v25 = swift_allocObject(v18, 48, 7);
    *(_OWORD *)(v25 + 16) = xmmword_100E250A0;
    inited = swift_initStackObject(v18, v32);
    *(_OWORD *)(inited + 16) = xmmword_100E250A0;
    v27 = swift_allocObject(v20, 136, 7);
    *(_QWORD *)(v27 + 16) = 6;
    *(_OWORD *)(v27 + 24) = 0u;
    *(_OWORD *)(v27 + 40) = 0u;
    *(_OWORD *)(v27 + 56) = 0u;
    *(_OWORD *)(v27 + 72) = 0u;
    *(_OWORD *)(v27 + 88) = 0u;
    *(_QWORD *)(v27 + 104) = 0xA000000000000000;
    *(_QWORD *)(v27 + 112) = 0;
    *(_QWORD *)(v27 + 120) = 0;
    *(_QWORD *)(v27 + 128) = 0;
    *(_QWORD *)(inited + 32) = v27;
    v28 = swift_allocObject(v20, 136, 7);
    *(_QWORD *)(v28 + 16) = 1;
    *(_OWORD *)(v28 + 24) = 0u;
    *(_OWORD *)(v28 + 40) = 0u;
    *(_OWORD *)(v28 + 56) = 0u;
    *(_OWORD *)(v28 + 72) = 0u;
    *(_OWORD *)(v28 + 88) = 0u;
    *(_QWORD *)(v28 + 104) = 0x4000000000000000;
    *(_QWORD *)(v28 + 112) = 0;
    *(_QWORD *)(v28 + 120) = 0;
    *(_QWORD *)(v28 + 128) = 0;
    *(_QWORD *)(inited + 40) = v28;
    v33 = inited;
    specialized Array._endMutation()(v28);
    v29 = v33;
    *(_QWORD *)(v27 + 128) = v28;
    swift_retain();
    swift_release();
    swift_retain();
    swift_bridgeObjectRelease(v29);
    *(_QWORD *)(v25 + 32) = v27;
    v30 = swift_allocObject(v20, 136, 7);
    *(_QWORD *)(v30 + 16) = 2;
    *(_OWORD *)(v30 + 24) = 0u;
    *(_OWORD *)(v30 + 40) = 0u;
    *(_OWORD *)(v30 + 56) = 0u;
    *(_OWORD *)(v30 + 72) = 0u;
    *(_OWORD *)(v30 + 88) = 0u;
    *(_QWORD *)(v30 + 104) = 0xA000000000000000;
    *(_QWORD *)(v30 + 112) = 0;
    *(_QWORD *)(v30 + 120) = 0;
    *(_QWORD *)(v30 + 128) = 0;
    *(_QWORD *)(v25 + 40) = v30;
    v33 = v25;
    specialized Array._endMutation()(v30);
    *(_QWORD *)(v9 + 64) = v33;
    *(_BYTE *)(v9 + 72) = 0;
    v16 = (_BYTE *)(v9 + 73);
  }
  *v16 = 0;
  return sub_10009D350(1u, v9, (uint64_t)&off_10119A2F0, 0);
}

id sub_1001456E8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  id result;
  void *v36;
  unsigned int v37;
  char v38[80];
  uint64_t v39;

  v2 = sub_100008B04(&qword_101498A28);
  v3 = swift_allocObject(v2, 96, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E255C0;
  v4 = sub_100008B04((uint64_t *)&unk_101493B10);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100E23F50;
  v6 = type metadata accessor for PlaceSummaryUnit();
  v7 = swift_allocObject(v6, 136, 7);
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_QWORD *)(v7 + 96) = 0;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v5 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v3 + 32) = v5;
  *(_WORD *)(v3 + 40) = 0;
  v8 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100E2A2C0;
  v9 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v9 + 16) = 1;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_QWORD *)(v9 + 104) = 0xA000000000000000;
  *(_QWORD *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = 0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v8 + 32) = v9;
  v10 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v10 + 16) = 402336;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 72) = 0u;
  *(_OWORD *)(v10 + 88) = 0u;
  *(_QWORD *)(v10 + 104) = 0x1000000000000000;
  *(_QWORD *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 120) = 0;
  *(_QWORD *)(v10 + 128) = 0;
  *(_QWORD *)(v8 + 40) = v10;
  v11 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v11 + 16) = 2;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  *(_OWORD *)(v11 + 88) = 0u;
  *(_QWORD *)(v11 + 104) = 0xA000000000000000;
  *(_QWORD *)(v11 + 112) = 0;
  *(_QWORD *)(v11 + 120) = 0;
  *(_QWORD *)(v11 + 128) = 0;
  *(_QWORD *)(v8 + 48) = v11;
  v12 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v12 + 16) = 18;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(_OWORD *)(v12 + 88) = 0u;
  *(_QWORD *)(v12 + 104) = 0xA000000000000000;
  *(_QWORD *)(v12 + 112) = 0;
  *(_QWORD *)(v12 + 120) = 0;
  *(_QWORD *)(v12 + 128) = 0;
  *(_QWORD *)(v8 + 56) = v12;
  specialized Array._endMutation()(v12);
  *(_QWORD *)(v3 + 48) = v8;
  *(_WORD *)(v3 + 56) = 0;
  v13 = swift_allocObject(v4, 56, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100E25080;
  v14 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v14 + 16) = 3;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_QWORD *)(v14 + 112) = 0;
  *(_QWORD *)(v14 + 120) = 0;
  *(_QWORD *)(v14 + 104) = 0xA000000000000000;
  v15 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = &off_10119A318;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_QWORD *)(v15 + 96) = 0;
  *(_QWORD *)(v15 + 104) = 0x2000000000000000;
  *(_QWORD *)(v15 + 120) = 0;
  *(_QWORD *)(v15 + 128) = 0;
  *(_QWORD *)(v15 + 112) = 0;
  *(_QWORD *)(v14 + 128) = v15;
  *(_QWORD *)(v13 + 32) = v14;
  v16 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v16 + 16) = 19;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *(_OWORD *)(v16 + 88) = 0u;
  *(_QWORD *)(v16 + 104) = 0xA000000000000000;
  *(_QWORD *)(v16 + 112) = 0;
  *(_QWORD *)(v16 + 120) = 0;
  *(_QWORD *)(v16 + 128) = 0;
  *(_QWORD *)(v13 + 40) = v16;
  v17 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v17 + 16) = 21;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 88) = 0u;
  *(_QWORD *)(v17 + 104) = 0xA000000000000000;
  *(_QWORD *)(v17 + 112) = 0;
  *(_QWORD *)(v17 + 120) = 0;
  *(_QWORD *)(v17 + 128) = 0;
  *(_QWORD *)(v13 + 48) = v17;
  v39 = v13;
  specialized Array._endMutation()(v17);
  *(_QWORD *)(v3 + 64) = v13;
  *(_WORD *)(v3 + 72) = 0;
  inited = swift_initStackObject(v4, v38);
  *(_OWORD *)(inited + 16) = xmmword_100E29F10;
  v19 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v19 + 16) = 6;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_OWORD *)(v19 + 40) = 0u;
  *(_OWORD *)(v19 + 56) = 0u;
  *(_OWORD *)(v19 + 72) = 0u;
  *(_OWORD *)(v19 + 88) = 0u;
  *(_QWORD *)(v19 + 104) = 0xA000000000000000;
  *(_QWORD *)(v19 + 112) = 0;
  *(_QWORD *)(v19 + 120) = 0;
  *(_QWORD *)(v19 + 128) = 0;
  *(_QWORD *)(inited + 32) = v19;
  v20 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v20 + 16) = 4;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_OWORD *)(v20 + 40) = 0u;
  *(_OWORD *)(v20 + 56) = 0u;
  *(_OWORD *)(v20 + 72) = 0u;
  *(_OWORD *)(v20 + 88) = 0u;
  *(_QWORD *)(v20 + 104) = 0xA000000000000000;
  *(_QWORD *)(v20 + 112) = 0;
  *(_QWORD *)(v20 + 120) = 0;
  *(_QWORD *)(v20 + 128) = 0;
  *(_QWORD *)(inited + 40) = v20;
  v21 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v21 + 16) = 13;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 72) = 0u;
  *(_OWORD *)(v21 + 88) = 0u;
  *(_QWORD *)(v21 + 104) = 0xA000000000000000;
  *(_QWORD *)(v21 + 112) = 0;
  *(_QWORD *)(v21 + 120) = 0;
  *(_QWORD *)(v21 + 128) = 0;
  *(_QWORD *)(inited + 48) = v21;
  v22 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v22 + 16) = 5;
  *(_OWORD *)(v22 + 24) = 0u;
  *(_OWORD *)(v22 + 40) = 0u;
  *(_OWORD *)(v22 + 56) = 0u;
  *(_OWORD *)(v22 + 72) = 0u;
  *(_OWORD *)(v22 + 88) = 0u;
  *(_QWORD *)(v22 + 104) = 0xA000000000000000;
  *(_QWORD *)(v22 + 112) = 0;
  *(_QWORD *)(v22 + 120) = 0;
  *(_QWORD *)(v22 + 128) = 0;
  *(_QWORD *)(inited + 56) = v22;
  v23 = swift_allocObject(v6, 136, 7);
  *(_OWORD *)(v23 + 16) = 0u;
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_OWORD *)(v23 + 64) = 0u;
  *(_OWORD *)(v23 + 80) = 0u;
  *(_QWORD *)(v23 + 96) = 0;
  *(_QWORD *)(v23 + 104) = 0x5000000000000000;
  *(_QWORD *)(v23 + 120) = 0;
  *(_QWORD *)(v23 + 128) = 0;
  *(_QWORD *)(v23 + 112) = 0;
  *(_QWORD *)(inited + 64) = v23;
  v24 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v24 + 16) = 1;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 56) = 0u;
  *(_OWORD *)(v24 + 72) = 0u;
  *(_OWORD *)(v24 + 88) = 0u;
  *(_QWORD *)(v24 + 104) = 0x4000000000000000;
  *(_QWORD *)(v24 + 112) = 0;
  *(_QWORD *)(v24 + 120) = 0;
  *(_QWORD *)(v24 + 128) = 0;
  *(_QWORD *)(inited + 72) = v24;
  v39 = inited;
  specialized Array._endMutation()(v24);
  v25 = (_QWORD *)v39;
  if ((v39 & 0xC000000000000001) != 0)
  {
    v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v39);
    *(_QWORD *)(v26 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v25);
    swift_unknownObjectRelease(v26);
    swift_release();
    v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v25);
    *(_QWORD *)(v27 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(2, v25);
    swift_unknownObjectRelease(v27);
    swift_release();
    v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(2, v25);
    *(_QWORD *)(v28 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(3, v25);
    swift_unknownObjectRelease(v28);
    swift_release();
    v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(3, v25);
    *(_QWORD *)(v29 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(4, v25);
    swift_unknownObjectRelease(v29);
    swift_release();
    v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(4, v25);
    *(_QWORD *)(v30 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(5, v25);
    swift_unknownObjectRelease(v30);
    swift_release();
    v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(5, v25);
    swift_unknownObjectRelease(v31);
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(v39 + 32) + 128) = *(_QWORD *)(v39 + 40);
    swift_retain();
    swift_release();
    *(_QWORD *)(v25[5] + 128) = v25[6];
    swift_retain();
    swift_release();
    *(_QWORD *)(v25[6] + 128) = v25[7];
    swift_retain();
    swift_release();
    *(_QWORD *)(v25[7] + 128) = v25[8];
    swift_retain();
    swift_release();
    *(_QWORD *)(v25[8] + 128) = v25[9];
    swift_retain();
    swift_release();
  }
  v32 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v32 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v32 + 32) = v19;
  v39 = v32;
  specialized Array._endMutation()(v32);
  v33 = v39;
  swift_retain();
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)(v3 + 80) = v33;
  *(_WORD *)(v3 + 88) = 1;
  v34 = &off_10119A340;
  if (!a1)
    return sub_10009D350(1u, v3, (uint64_t)v34, 0);
  if ((objc_msgSend(a1, "representsIntermediateStop") & 1) != 0)
  {
    v34 = &off_10119A368;
    return sub_10009D350(1u, v3, (uint64_t)v34, 0);
  }
  result = objc_msgSend(a1, "mapItem");
  if (result)
  {
    v36 = result;
    v37 = objc_msgSend(result, "_hasHikeInfo");

    if (v37)
      v34 = &off_10119A390;
    return sub_10009D350(1u, v3, (uint64_t)v34, 0);
  }
  __break(1u);
  return result;
}

id sub_100145E24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id result;
  void *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = *(_QWORD *)(a2 + 16);
  if (!v18)
    return 0;
  v19 = a2 + 32;
  swift_bridgeObjectRetain(a2);
  v3 = 0;
  while (1)
  {
    v4 = (uint64_t *)(v19 + 24 * v3);
    v6 = *v4;
    v5 = (void *)v4[1];
    v7 = v4[2];
    v20 = v7;
    if ((unint64_t)*v4 >> 62)
      break;
    v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain_n(v6, 2);
    v9 = v5;
    if (v8)
      goto LABEL_6;
LABEL_3:
    ++v3;
    swift_bridgeObjectRelease_n(v6, 2);

    swift_bridgeObjectRelease(v20);
    if (v3 == v18)
    {
      swift_bridgeObjectRelease(a2);
      return 0;
    }
  }
  if (v6 < 0)
    v15 = *v4;
  else
    v15 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain_n(v6, 3);
  v16 = v5;
  v8 = _CocoaArrayWrapper.endIndex.getter(v15);
  swift_bridgeObjectRelease(v6);
  if (!v8)
    goto LABEL_3;
LABEL_6:
  v10 = 4;
  while (1)
  {
    result = (v6 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v6)
           : *(id *)(v6 + 8 * v10);
    v12 = result;
    v13 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
      break;
    v14 = objc_msgSend(result, "isEqualToGEOMapItemIdentifier:", a1);

    if (v14)
    {
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease_n(v6, 2);
      swift_bridgeObjectRelease(v20);
      return v5;
    }
    ++v10;
    if (v13 == v8)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

void *sub_100145FD0(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int v9;
  void *v10;
  id v11;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = 0;
  v4 = a2 + 32;
  while (1)
  {
    v5 = *(_QWORD *)(v4 + 24 * v3 + 16);
    if (v5)
    {
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
        break;
    }
LABEL_3:
    if (++v3 == v2)
      return 0;
  }
  if (*(_DWORD *)(v5 + 32) != a1)
  {
    v7 = (int *)(v5 + 36);
    v8 = v6 - 1;
    while (v8)
    {
      v9 = *v7++;
      --v8;
      if (v9 == a1)
        goto LABEL_10;
    }
    goto LABEL_3;
  }
LABEL_10:
  v10 = *(void **)(v4 + 24 * v3 + 8);
  v11 = v10;
  return v10;
}

id sub_100146064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E250A0;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 402336;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0x1000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v8 + 16) = 32;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_QWORD *)(v8 + 104) = 0xA000000000000000;
  *(_QWORD *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = 0;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v6 + 40) = v8;
  specialized Array._endMutation()(v8);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, (uint64_t)&off_10119A3B8, 0);
}

id sub_100146208(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  swift_bridgeObjectRetain(a2);
  if (String.count.getter(a1, a2) <= 0)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  else
  {
    v4 = type metadata accessor for PlaceSummaryUnit();
    v5 = swift_allocObject(v4, 136, 7);
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    *(_OWORD *)(v5 + 32) = 0u;
    *(_OWORD *)(v5 + 48) = 0u;
    *(_OWORD *)(v5 + 64) = 0u;
    *(_QWORD *)(v5 + 80) = 0;
    *(_OWORD *)(v5 + 88) = xmmword_100E2D550;
    *(_QWORD *)(v5 + 104) = 0x6000000000000000;
    *(_QWORD *)(v5 + 112) = 0;
    *(_QWORD *)(v5 + 120) = 0;
    *(_QWORD *)(v5 + 128) = 0;
    v6 = sub_100008B04(&qword_101498A28);
    v7 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100E22F70;
    v8 = sub_100008B04((uint64_t *)&unk_101493B10);
    v9 = swift_allocObject(v8, 40, 7);
    *(_OWORD *)(v9 + 16) = xmmword_100E23F50;
    v10 = swift_allocObject(v4, 136, 7);
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(_OWORD *)(v10 + 80) = 0u;
    *(_QWORD *)(v10 + 96) = 0;
    *(_QWORD *)(v10 + 104) = 0xA000000000000000;
    *(_QWORD *)(v10 + 120) = 0;
    *(_QWORD *)(v10 + 128) = 0;
    *(_QWORD *)(v10 + 112) = 0;
    *(_QWORD *)(v9 + 32) = v10;
    specialized Array._endMutation()(v10);
    *(_QWORD *)(v7 + 32) = v9;
    *(_WORD *)(v7 + 40) = 0;
    v11 = swift_allocObject(v8, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v11 + 32) = v5;
    v13 = v11;
    specialized Array._endMutation()(v11);
    *(_QWORD *)(v7 + 48) = v13;
    *(_WORD *)(v7 + 56) = 0;
    return sub_10009D350(1u, v7, (uint64_t)&off_10119A3E0, 0);
  }
}

id sub_1001463B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v34[96];
  uint64_t v35;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E255C0;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 56, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E25080;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 14;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v8 + 16) = 402336;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_QWORD *)(v8 + 104) = 0x1000000000000000;
  *(_QWORD *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = 0;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v6 + 40) = v8;
  v9 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v9 + 16) = 1;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_QWORD *)(v9 + 104) = 0x3000000000000000;
  *(_QWORD *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = 0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v6 + 48) = v9;
  specialized Array._endMutation()(v9);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  v10 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100E23F50;
  v11 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v11 + 16) = 3;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  *(_OWORD *)(v11 + 88) = 0u;
  *(_QWORD *)(v11 + 112) = 0;
  *(_QWORD *)(v11 + 120) = 0;
  *(_QWORD *)(v11 + 104) = 0xA000000000000000;
  v12 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = &off_10119A408;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_QWORD *)(v12 + 96) = 0;
  *(_QWORD *)(v12 + 104) = 0x2000000000000000;
  *(_QWORD *)(v12 + 120) = 0;
  *(_QWORD *)(v12 + 128) = 0;
  *(_QWORD *)(v12 + 112) = 0;
  *(_QWORD *)(v11 + 128) = v12;
  *(_QWORD *)(v10 + 32) = v11;
  v35 = v10;
  specialized Array._endMutation()(v12);
  *(_QWORD *)(v1 + 64) = v10;
  *(_WORD *)(v1 + 72) = 0;
  inited = swift_initStackObject(v2, v34);
  *(_OWORD *)(inited + 16) = xmmword_100E247C0;
  v14 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v14 + 16) = 6;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_OWORD *)(v14 + 40) = 0u;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_QWORD *)(v14 + 104) = 0xA000000000000000;
  *(_QWORD *)(v14 + 112) = 0;
  *(_QWORD *)(v14 + 120) = 0;
  *(_QWORD *)(v14 + 128) = 0;
  *(_QWORD *)(inited + 32) = v14;
  v15 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v15 + 16) = 13;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  *(_OWORD *)(v15 + 88) = 0u;
  *(_QWORD *)(v15 + 104) = 0xA000000000000000;
  *(_QWORD *)(v15 + 112) = 0;
  *(_QWORD *)(v15 + 120) = 0;
  *(_QWORD *)(v15 + 128) = 0;
  *(_QWORD *)(inited + 40) = v15;
  v16 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v16 + 16) = 5;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *(_OWORD *)(v16 + 88) = 0u;
  *(_QWORD *)(v16 + 104) = 0xA000000000000000;
  *(_QWORD *)(v16 + 112) = 0;
  *(_QWORD *)(v16 + 120) = 0;
  *(_QWORD *)(v16 + 128) = 0;
  *(_QWORD *)(inited + 48) = v16;
  v17 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v17 + 16) = 19;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_OWORD *)(v17 + 72) = 0u;
  *(_OWORD *)(v17 + 88) = 0u;
  *(_QWORD *)(v17 + 104) = 0xA000000000000000;
  *(_QWORD *)(v17 + 112) = 0;
  *(_QWORD *)(v17 + 120) = 0;
  *(_QWORD *)(v17 + 128) = 0;
  *(_QWORD *)(inited + 56) = v17;
  v18 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v18 + 16) = 20;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 56) = 0u;
  *(_OWORD *)(v18 + 72) = 0u;
  *(_OWORD *)(v18 + 88) = 0u;
  *(_QWORD *)(v18 + 104) = 0xA000000000000000;
  *(_QWORD *)(v18 + 112) = 0;
  *(_QWORD *)(v18 + 120) = 0;
  *(_QWORD *)(v18 + 128) = 0;
  *(_QWORD *)(inited + 64) = v18;
  v19 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v19 + 16) = 21;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_OWORD *)(v19 + 40) = 0u;
  *(_OWORD *)(v19 + 56) = 0u;
  *(_OWORD *)(v19 + 72) = 0u;
  *(_OWORD *)(v19 + 88) = 0u;
  *(_QWORD *)(v19 + 104) = 0xA000000000000000;
  *(_QWORD *)(v19 + 112) = 0;
  *(_QWORD *)(v19 + 120) = 0;
  *(_QWORD *)(v19 + 128) = 0;
  *(_QWORD *)(inited + 72) = v19;
  v20 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v20 + 16) = 18;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_OWORD *)(v20 + 40) = 0u;
  *(_OWORD *)(v20 + 56) = 0u;
  *(_OWORD *)(v20 + 72) = 0u;
  *(_OWORD *)(v20 + 88) = 0u;
  *(_QWORD *)(v20 + 104) = 0xA000000000000000;
  *(_QWORD *)(v20 + 112) = 0;
  *(_QWORD *)(v20 + 120) = 0;
  *(_QWORD *)(v20 + 128) = 0;
  *(_QWORD *)(inited + 80) = v20;
  v21 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v21 + 16) = 1;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 72) = 0u;
  *(_OWORD *)(v21 + 88) = 0u;
  *(_QWORD *)(v21 + 104) = 0x4000000000000000;
  *(_QWORD *)(v21 + 112) = 0;
  *(_QWORD *)(v21 + 120) = 0;
  *(_QWORD *)(v21 + 128) = 0;
  *(_QWORD *)(inited + 88) = v21;
  v35 = inited;
  specialized Array._endMutation()(v21);
  v22 = (_QWORD *)v35;
  if ((v35 & 0xC000000000000001) != 0)
  {
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v35);
    *(_QWORD *)(v23 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v22);
    swift_unknownObjectRelease(v23);
    swift_release();
    v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v22);
    *(_QWORD *)(v24 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(2, v22);
    swift_unknownObjectRelease(v24);
    swift_release();
    v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(2, v22);
    *(_QWORD *)(v25 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(3, v22);
    swift_unknownObjectRelease(v25);
    swift_release();
    v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(3, v22);
    *(_QWORD *)(v26 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(4, v22);
    swift_unknownObjectRelease(v26);
    swift_release();
    v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(4, v22);
    *(_QWORD *)(v27 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(5, v22);
    swift_unknownObjectRelease(v27);
    swift_release();
    v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(5, v22);
    *(_QWORD *)(v28 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(6, v22);
    swift_unknownObjectRelease(v28);
    swift_release();
    v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(6, v22);
    *(_QWORD *)(v29 + 128) = specialized _ArrayBuffer._getElementSlowPath(_:)(7, v22);
    swift_unknownObjectRelease(v29);
    swift_release();
    v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(7, v22);
    swift_unknownObjectRelease(v30);
  }
  else
  {
    *(_QWORD *)(*(_QWORD *)(v35 + 32) + 128) = *(_QWORD *)(v35 + 40);
    swift_retain();
    swift_release();
    *(_QWORD *)(v22[5] + 128) = v22[6];
    swift_retain();
    swift_release();
    *(_QWORD *)(v22[6] + 128) = v22[7];
    swift_retain();
    swift_release();
    *(_QWORD *)(v22[7] + 128) = v22[8];
    swift_retain();
    swift_release();
    *(_QWORD *)(v22[8] + 128) = v22[9];
    swift_retain();
    swift_release();
    *(_QWORD *)(v22[9] + 128) = v22[10];
    swift_retain();
    swift_release();
    *(_QWORD *)(v22[10] + 128) = v22[11];
    swift_retain();
    swift_release();
  }
  v31 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v31 + 16) = xmmword_100E23F50;
  *(_QWORD *)(v31 + 32) = v14;
  v35 = v31;
  specialized Array._endMutation()(v31);
  v32 = v35;
  swift_retain();
  swift_bridgeObjectRelease(v22);
  *(_QWORD *)(v1 + 80) = v32;
  *(_WORD *)(v1 + 88) = 1;
  return sub_10009D350(1u, v1, (uint64_t)&off_10119A430, 0);
}

char *sub_100146AE0(id a1, void *a2, char a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  int v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  char *v18;
  char *result;
  unsigned __int8 *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  char *v25;
  void *v26;
  id v27;
  void *v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  char *v35;
  id v36;
  char *v37;
  unsigned __int8 *v38;
  uint64_t v39;
  char *v40;
  void *v41;

  if (!a2)
  {
    v25 = (char *)objc_msgSend(a1, "autocompletePerson");
    if (v25)
    {
      v26 = v25;
      if (*(_QWORD *)&v25[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact])
      {
        v27 = objc_msgSend(a1, "autocompletePerson");
        if (v27)
        {
          v28 = v27;
          v29 = sub_1001EFC78();

          if (objc_msgSend(a1, "locationType") == 4)
          {
            v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
            v32 = v31;
            v33 = sub_100146208(v30, v31);

            swift_bridgeObjectRelease(v32);
            return (char *)v33;
          }

        }
        v34 = sub_100146064();

        return (char *)v34;
      }

    }
    if ((a3 & 1) != 0)
      return (char *)sub_1001463B4();
    else
      return (char *)sub_1001456E8(a1);
  }
  if (*((_BYTE *)a2 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_useCase) != 2)
  {
    v14 = a2;
    v34 = sub_1001456E8(a1);
LABEL_26:

    return (char *)v34;
  }
  v4 = a2;
  v5 = objc_msgSend(a1, "mapItem");
  if (!v5
    || (v6 = v5, v7 = objc_msgSend(v5, "_geoMapItem"), v6, !v7)
    || (v8 = objc_msgSend(v7, "_identifier"), swift_unknownObjectRelease(v7), !v8)
    || (v9 = sub_100145E24((uint64_t)v8, *(_QWORD *)(v4 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs)),
        v8,
        !v9))
  {
    v10 = objc_msgSend(a1, "mapItem");
    if (!v10
      || (v11 = v10, v12 = objc_msgSend(v10, "_geoMapItem"), v11, !v12)
      || (v13 = objc_msgSend(v12, "_placeType"),
          swift_unknownObjectRelease(v12),
          (v9 = sub_100145FD0(v13, *(_QWORD *)(v4 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs))) == 0))
    {
      v34 = sub_1001456E8(a1);

      return (char *)v34;
    }
  }
  v14 = v9;
  v15 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v16 = objc_msgSend(v15, "userInterfaceIdiom");

  v17 = *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries];
  if ((unint64_t)v17 >> 62)
  {
LABEL_51:
    if (v17 < 0)
      v39 = v17;
    else
      v39 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    result = (char *)_CocoaArrayWrapper.endIndex.getter(v39);
    v18 = result;
    if (result)
      goto LABEL_12;
    goto LABEL_55;
  }
  v18 = *(char **)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (char *)swift_bridgeObjectRetain(*(_QWORD *)&v14[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries]);
  if (!v18)
  {
LABEL_55:
    swift_bridgeObjectRelease(v17);
LABEL_56:
    v34 = sub_1001456E8(a1);

    goto LABEL_26;
  }
LABEL_12:
  v41 = (void *)v4;
  if ((v17 & 0xC000000000000001) != 0)
  {
    v20 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v20 = (unsigned __int8 *)*(id *)(v17 + 32);
  }
  v21 = v20;
  v40 = v14;
  if (v16 == (id)5)
    v4 = 2;
  else
    v4 = 1;
  v22 = v20[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
  if (v4 == v22)
  {
    v23 = 0;
LABEL_46:
    swift_bridgeObjectRelease(v17);

    return (char *)v21;
  }
  else
  {
    v35 = 0;
    v16 = 0;
    v14 = v18 - 1;
    v36 = v20;
    while (1)
    {
      if (v22 != 3 || v16)
      {

        v36 = v16;
      }
      if (v14 == v35)
        break;
      v37 = v35 + 1;
      if ((v17 & 0xC000000000000001) != 0)
      {
        v38 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(v35 + 1, v17);
      }
      else
      {
        if ((unint64_t)v37 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_50;
        v38 = (unsigned __int8 *)*(id *)(v17 + 8 * (_QWORD)v35 + 40);
      }
      v21 = v38;
      if (__OFADD__(v37, 1))
      {
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v22 = v38[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
      ++v35;
      v23 = v36;
      v16 = v36;
      v36 = v38;
      if (v4 == v22)
        goto LABEL_46;
    }
    swift_bridgeObjectRelease(v17);
    v14 = v40;
    v4 = (uint64_t)v41;
    if (!v36)
      goto LABEL_56;

    return (char *)v36;
  }
}

id sub_100146F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v5 + 16) = 8;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 9;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  v8 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v8 + 16) = 3;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_QWORD *)(v8 + 104) = 0x3000000000000000;
  *(_QWORD *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = 0;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v7 + 128) = v8;
  *(_QWORD *)(v6 + 32) = v7;
  specialized Array._endMutation()(v8);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A480);
}

id sub_10014713C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v5 + 16) = 8;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 12;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A4A8);
}

id sub_1001472A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v5 + 16) = 8;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E250A0;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 10;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v8 + 16) = 11;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_QWORD *)(v8 + 104) = 0xA000000000000000;
  *(_QWORD *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = 0;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v6 + 40) = v8;
  specialized Array._endMutation()(v8);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A4D0);
}

id sub_100147450(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_100008B04(&qword_101498A28);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E22F70;
  v4 = sub_100008B04((uint64_t *)&unk_101493B10);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100E23F50;
  v6 = type metadata accessor for PlaceSummaryUnit();
  v7 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v7 + 16) = 8;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v5 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v3 + 32) = v5;
  *(_WORD *)(v3 + 40) = 0;
  v8 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100E23F50;
  v9 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v9 + 16) = 9;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_QWORD *)(v9 + 104) = 0xA000000000000000;
  *(_QWORD *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = 0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v8 + 32) = v9;
  specialized Array._endMutation()(v9);
  *(_QWORD *)(v3 + 48) = v8;
  *(_WORD *)(v3 + 56) = 0;
  return sub_10009D350(1u, v3, 0, a1);
}

id sub_1001475BC(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30[56];
  uint64_t v31;

  if (!a1)
    goto LABEL_13;
  v1 = a1;
  v2 = objc_msgSend(v1, "directionIntent");

  if (!v2)
  {
    v4 = objc_msgSend(v1, "clientResolved");

    if (v4)
    {
      v3 = sub_100146F8C();
      goto LABEL_10;
    }
    v5 = objc_msgSend(v1, "publisherResult");

    if (v5)
    {
      v3 = sub_10014713C();
      goto LABEL_10;
    }
    v6 = objc_msgSend(v1, "collectionResult");

    if (v6)
    {
      v3 = sub_1001472A8();
      goto LABEL_10;
    }
    v8 = objc_msgSend(v1, "mapItem");

    if (!v8)
    {
      v3 = sub_100147450(0);
      goto LABEL_10;
    }

LABEL_13:
    v9 = sub_100008B04(&qword_101498A28);
    v10 = swift_allocObject(v9, 80, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100E22F50;
    v11 = sub_100008B04((uint64_t *)&unk_101493B10);
    v12 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v12 + 16) = xmmword_100E23F50;
    v13 = type metadata accessor for PlaceSummaryUnit();
    v14 = swift_allocObject(v13, 136, 7);
    *(_QWORD *)(v14 + 16) = 8;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(_OWORD *)(v14 + 56) = 0u;
    *(_OWORD *)(v14 + 72) = 0u;
    *(_OWORD *)(v14 + 88) = 0u;
    *(_QWORD *)(v14 + 112) = 0;
    *(_QWORD *)(v14 + 120) = 0;
    *(_QWORD *)(v14 + 104) = 0xA000000000000000;
    v15 = swift_allocObject(v13, 136, 7);
    *(_OWORD *)(v15 + 16) = 0u;
    *(_OWORD *)(v15 + 32) = 0u;
    *(_OWORD *)(v15 + 48) = 0u;
    *(_OWORD *)(v15 + 64) = 0u;
    *(_OWORD *)(v15 + 80) = 0u;
    *(_QWORD *)(v15 + 96) = 0;
    *(_QWORD *)(v15 + 104) = 0xA000000000000000;
    *(_QWORD *)(v15 + 120) = 0;
    *(_QWORD *)(v15 + 128) = 0;
    *(_QWORD *)(v15 + 112) = 0;
    *(_QWORD *)(v14 + 128) = v15;
    *(_QWORD *)(v12 + 32) = v14;
    specialized Array._endMutation()(v15);
    *(_QWORD *)(v10 + 32) = v12;
    *(_WORD *)(v10 + 40) = 0;
    v16 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100E24770;
    v17 = swift_allocObject(v13, 136, 7);
    *(_QWORD *)(v17 + 16) = 3;
    *(_OWORD *)(v17 + 24) = 0u;
    *(_OWORD *)(v17 + 40) = 0u;
    *(_OWORD *)(v17 + 56) = 0u;
    *(_OWORD *)(v17 + 72) = 0u;
    *(_OWORD *)(v17 + 88) = 0u;
    *(_QWORD *)(v17 + 104) = 0xA000000000000000;
    *(_QWORD *)(v17 + 112) = 0;
    *(_QWORD *)(v17 + 120) = 0;
    *(_QWORD *)(v17 + 128) = 0;
    *(_QWORD *)(v16 + 32) = v17;
    v18 = swift_allocObject(v13, 136, 7);
    *(_QWORD *)(v18 + 16) = 402336;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_OWORD *)(v18 + 40) = 0u;
    *(_OWORD *)(v18 + 56) = 0u;
    *(_OWORD *)(v18 + 72) = 0u;
    *(_OWORD *)(v18 + 88) = 0u;
    *(_QWORD *)(v18 + 104) = 0x1000000000000000;
    *(_QWORD *)(v18 + 112) = 0;
    *(_QWORD *)(v18 + 120) = 0;
    *(_QWORD *)(v18 + 128) = 0;
    *(_QWORD *)(v16 + 40) = v18;
    v19 = swift_allocObject(v13, 136, 7);
    *(_QWORD *)(v19 + 16) = 7;
    *(_OWORD *)(v19 + 24) = 0u;
    *(_OWORD *)(v19 + 40) = 0u;
    *(_OWORD *)(v19 + 56) = 0u;
    *(_OWORD *)(v19 + 72) = 0u;
    *(_OWORD *)(v19 + 88) = 0u;
    *(_QWORD *)(v19 + 104) = 0xA000000000000000;
    *(_QWORD *)(v19 + 112) = 0;
    *(_QWORD *)(v19 + 120) = 0;
    *(_QWORD *)(v19 + 128) = 0;
    *(_QWORD *)(v16 + 48) = v19;
    v20 = swift_allocObject(v13, 136, 7);
    *(_QWORD *)(v20 + 16) = 2;
    *(_OWORD *)(v20 + 24) = 0u;
    *(_OWORD *)(v20 + 40) = 0u;
    *(_OWORD *)(v20 + 56) = 0u;
    *(_OWORD *)(v20 + 72) = 0u;
    *(_OWORD *)(v20 + 88) = 0u;
    *(_QWORD *)(v20 + 104) = 0x3000000000000000;
    *(_QWORD *)(v20 + 112) = 0;
    *(_QWORD *)(v20 + 120) = 0;
    *(_QWORD *)(v20 + 128) = 0;
    *(_QWORD *)(v16 + 56) = v20;
    v21 = swift_allocObject(v13, 136, 7);
    *(_QWORD *)(v21 + 16) = 1;
    *(_QWORD *)(v21 + 24) = &off_10119A4F8;
    *(_OWORD *)(v21 + 32) = 0u;
    *(_OWORD *)(v21 + 48) = 0u;
    *(_OWORD *)(v21 + 64) = 0u;
    *(_OWORD *)(v21 + 80) = 0u;
    *(_QWORD *)(v21 + 96) = 0;
    *(_QWORD *)(v21 + 104) = 0x2000000000000000;
    *(_QWORD *)(v21 + 120) = 0;
    *(_QWORD *)(v21 + 128) = 0;
    *(_QWORD *)(v21 + 112) = 0;
    *(_QWORD *)(v16 + 64) = v21;
    v31 = v16;
    specialized Array._endMutation()(v21);
    *(_QWORD *)(v10 + 48) = v16;
    *(_WORD *)(v10 + 56) = 0;
    inited = swift_initStackObject(v11, v30);
    *(_OWORD *)(inited + 16) = xmmword_100E25080;
    v23 = swift_allocObject(v13, 136, 7);
    *(_QWORD *)(v23 + 16) = 4;
    *(_OWORD *)(v23 + 24) = 0u;
    *(_OWORD *)(v23 + 40) = 0u;
    *(_OWORD *)(v23 + 56) = 0u;
    *(_OWORD *)(v23 + 72) = 0u;
    *(_OWORD *)(v23 + 88) = 0u;
    *(_QWORD *)(v23 + 104) = 0xA000000000000000;
    *(_QWORD *)(v23 + 112) = 0;
    *(_QWORD *)(v23 + 120) = 0;
    *(_QWORD *)(v23 + 128) = 0;
    *(_QWORD *)(inited + 32) = v23;
    v24 = swift_allocObject(v13, 136, 7);
    *(_OWORD *)(v24 + 16) = 0u;
    *(_OWORD *)(v24 + 32) = 0u;
    *(_OWORD *)(v24 + 48) = 0u;
    *(_OWORD *)(v24 + 64) = 0u;
    *(_OWORD *)(v24 + 80) = 0u;
    *(_QWORD *)(v24 + 96) = 0;
    *(_QWORD *)(v24 + 104) = 0x5000000000000000;
    *(_QWORD *)(v24 + 120) = 0;
    *(_QWORD *)(v24 + 128) = 0;
    *(_QWORD *)(v24 + 112) = 0;
    *(_QWORD *)(inited + 40) = v24;
    v25 = swift_allocObject(v13, 136, 7);
    *(_OWORD *)(v25 + 16) = 0u;
    *(_OWORD *)(v25 + 32) = 0u;
    *(_OWORD *)(v25 + 48) = 0u;
    *(_OWORD *)(v25 + 64) = 0u;
    *(_OWORD *)(v25 + 80) = 0u;
    *(_QWORD *)(v25 + 96) = 0;
    *(_QWORD *)(v25 + 104) = 0x8000000000000000;
    *(_QWORD *)(v25 + 120) = 0;
    *(_QWORD *)(v25 + 128) = 0;
    *(_QWORD *)(v25 + 112) = 0;
    *(_QWORD *)(inited + 48) = v25;
    v31 = inited;
    specialized Array._endMutation()(v25);
    v26 = v31;
    *(_QWORD *)(v23 + 128) = v24;
    swift_retain();
    swift_release();
    *(_QWORD *)(v24 + 128) = v25;
    swift_retain();
    swift_release();
    v27 = swift_allocObject(v11, 40, 7);
    *(_OWORD *)(v27 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v27 + 32) = v23;
    v31 = v27;
    specialized Array._endMutation()(v27);
    v28 = v31;
    swift_retain();
    swift_bridgeObjectRelease(v26);
    *(_QWORD *)(v10 + 64) = v28;
    *(_WORD *)(v10 + 72) = 1;
    return sub_10009D350(1u, v10, 0, (uint64_t)&off_10119A520);
  }
  v3 = sub_100147450((uint64_t)&off_10119A458);
LABEL_10:
  v7 = v3;

  return v7;
}

char *sub_100147AC0(void *a1, void *a2)
{
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *result;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void *v25;
  char *v26;

  if (!a2)
    return (char *)sub_1001475BC(a1);
  if (*((_BYTE *)a2 + OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_useCase) != 1)
  {
    v17 = a2;
    v18 = sub_1001475BC(a1);

    return (char *)v18;
  }
  v3 = a2;
  v4 = sub_1000C3B4C();
  if (!v4)
  {
    v19 = sub_1001475BC(a1);

    return (char *)v19;
  }
  v5 = (uint64_t)v4;
  v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_templatePairs];
  swift_bridgeObjectRetain(v6);
  v7 = (char *)sub_100145E24(v5, v6);
  swift_bridgeObjectRelease(v6);
  if (!v7)
  {
    v18 = sub_1001475BC(a1);

LABEL_41:
    return (char *)v18;
  }
  v8 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v9 = (char *)objc_msgSend(v8, "userInterfaceIdiom");

  v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries];
  if (!((unint64_t)v10 >> 62))
  {
    v11 = *(char **)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (char *)swift_bridgeObjectRetain(*(_QWORD *)&v7[OBJC_IVAR____TtC4Maps20PlaceSummaryTemplate_entries]);
    if (v11)
      goto LABEL_7;
    goto LABEL_39;
  }
LABEL_35:
  if (v10 < 0)
    v23 = v10;
  else
    v23 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  result = (char *)_CocoaArrayWrapper.endIndex.getter(v23);
  v11 = result;
  if (!result)
  {
LABEL_39:
    swift_bridgeObjectRelease(v10);
LABEL_40:
    v18 = sub_1001475BC(a1);

    goto LABEL_41;
  }
LABEL_7:
  v26 = v7;
  if ((v10 & 0xC000000000000001) != 0)
  {
    v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
  }
  else
  {
    if (!*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v13 = (char *)*(id *)(v10 + 32);
  }
  v7 = v13;
  v24 = v3;
  v25 = (void *)v5;
  if (v9 == (char *)5)
    v14 = 2;
  else
    v14 = 1;
  v15 = v13[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
  if (v14 == v15)
  {
    v16 = 0;
LABEL_30:
    swift_bridgeObjectRelease(v10);

    return v7;
  }
  else
  {
    v5 = 0;
    v9 = 0;
    v3 = v11 - 1;
    v20 = v13;
    while (1)
    {
      if (v15 != 3 || v9)
      {

        v20 = v9;
      }
      if (v3 == (char *)v5)
        break;
      v21 = v5 + 1;
      if ((v10 & 0xC000000000000001) != 0)
      {
        v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 + 1, v10);
      }
      else
      {
        if (v21 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_34;
        v22 = (char *)*(id *)(v10 + 8 * v5 + 40);
      }
      v7 = v22;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v15 = v22[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType];
      ++v5;
      v16 = v20;
      v9 = v20;
      v20 = v22;
      if (v14 == v15)
        goto LABEL_30;
    }
    swift_bridgeObjectRelease(v10);
    v3 = v24;
    v5 = (uint64_t)v25;
    v7 = v26;
    if (!v20)
      goto LABEL_40;

    return v20;
  }
}

id sub_100147DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E250A0;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 7;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v8 + 16) = 26;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_QWORD *)(v8 + 104) = 0xA000000000000000;
  *(_QWORD *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = 0;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v6 + 40) = v8;
  specialized Array._endMutation()(v8);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A570);
}

id sub_100147F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 56, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E25080;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 402336;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0x1000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  v8 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v8 + 16) = 7;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 56) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_QWORD *)(v8 + 104) = 0xA000000000000000;
  *(_QWORD *)(v8 + 112) = 0;
  *(_QWORD *)(v8 + 120) = 0;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v6 + 40) = v8;
  v9 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v9 + 16) = 27;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_QWORD *)(v9 + 104) = 0xA000000000000000;
  *(_QWORD *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = 0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v6 + 48) = v9;
  specialized Array._endMutation()(v9);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A598);
}

id sub_100148160()
{
  return sub_100148178((uint64_t)&off_10119A5C0);
}

id sub_10014816C()
{
  return sub_100148178((uint64_t)&off_10119A5E8);
}

id sub_100148178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_100008B04(&qword_101498A28);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E22F70;
  v4 = sub_100008B04((uint64_t *)&unk_101493B10);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100E23F50;
  v6 = type metadata accessor for PlaceSummaryUnit();
  v7 = swift_allocObject(v6, 136, 7);
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_QWORD *)(v7 + 96) = 0;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v5 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v3 + 32) = v5;
  *(_WORD *)(v3 + 40) = 0;
  v8 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100E23F50;
  v9 = swift_allocObject(v6, 136, 7);
  *(_QWORD *)(v9 + 16) = 2;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 40) = 0u;
  *(_OWORD *)(v9 + 56) = 0u;
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_QWORD *)(v9 + 104) = 0x3000000000000000;
  *(_QWORD *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = 0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v8 + 32) = v9;
  specialized Array._endMutation()(v9);
  *(_QWORD *)(v3 + 48) = v8;
  *(_WORD *)(v3 + 56) = 0;
  return sub_10009D350(1u, v3, 0, a1);
}

id sub_1001482DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 28;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A610);
}

id sub_10014843C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v5 + 16) = 29;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 56) = 0u;
  *(_OWORD *)(v5 + 72) = 0u;
  *(_OWORD *)(v5 + 88) = 0u;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 30;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A638);
}

id sub_1001485A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_100008B04(&qword_101498A28);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  v2 = sub_100008B04((uint64_t *)&unk_101493B10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100E23F50;
  v4 = type metadata accessor for PlaceSummaryUnit();
  v5 = swift_allocObject(v4, 136, 7);
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_QWORD *)(v5 + 96) = 0;
  *(_QWORD *)(v5 + 104) = 0xA000000000000000;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v3 + 32) = v5;
  specialized Array._endMutation()(v5);
  *(_QWORD *)(v1 + 32) = v3;
  *(_WORD *)(v1 + 40) = 0;
  v6 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100E23F50;
  v7 = swift_allocObject(v4, 136, 7);
  *(_QWORD *)(v7 + 16) = 31;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 88) = 0u;
  *(_QWORD *)(v7 + 104) = 0xA000000000000000;
  *(_QWORD *)(v7 + 112) = 0;
  *(_QWORD *)(v7 + 120) = 0;
  *(_QWORD *)(v7 + 128) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  specialized Array._endMutation()(v7);
  *(_QWORD *)(v1 + 48) = v6;
  *(_WORD *)(v1 + 56) = 0;
  return sub_10009D350(1u, v1, 0, (uint64_t)&off_10119A660);
}

id sub_100148708(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v3 = (_QWORD *)(swift_bridgeObjectRetain(a1) + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      swift_bridgeObjectRetain_n(*v3, 2);
      if (String.count.getter(v5, v4) <= 0)
      {
        swift_bridgeObjectRelease_n(v4, 2);
      }
      else
      {
        v6 = type metadata accessor for PlaceSummaryUnit();
        v7 = swift_allocObject(v6, 136, 7);
        *(_QWORD *)(v7 + 16) = v5;
        *(_QWORD *)(v7 + 24) = v4;
        *(_OWORD *)(v7 + 32) = 0u;
        *(_OWORD *)(v7 + 48) = 0u;
        *(_OWORD *)(v7 + 64) = 0u;
        *(_QWORD *)(v7 + 80) = 0;
        *(_OWORD *)(v7 + 88) = xmmword_100E2D550;
        *(_QWORD *)(v7 + 104) = 0x6000000000000000;
        *(_QWORD *)(v7 + 112) = 0;
        *(_QWORD *)(v7 + 120) = 0;
        *(_QWORD *)(v7 + 128) = 0;
        swift_bridgeObjectRelease(v4);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v10 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v10 >= v9 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v7);
        specialized Array._endMutation()(v11);
      }
      v3 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease(a1);
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v22 = _swiftEmptyArrayStorage;
    else
      v22 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    result = (id)_CocoaArrayWrapper.endIndex.getter(v22);
    v12 = (uint64_t)result;
    if (result)
      goto LABEL_12;
LABEL_27:
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  v12 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10);
  result = (id)swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  if (!v12)
    goto LABEL_27;
LABEL_12:
  if (v12 < 1)
  {
    __break(1u);
    return result;
  }
  v14 = 0;
  v15 = _swiftEmptyArrayStorage;
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
    {
      v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, _swiftEmptyArrayStorage);
    }
    else
    {
      v16 = _swiftEmptyArrayStorage[v14 + 4];
      swift_retain();
    }
    v17 = sub_100008B04((uint64_t *)&unk_101493B10);
    v18 = swift_allocObject(v17, 40, 7);
    *(_OWORD *)(v18 + 16) = xmmword_100E23F50;
    *(_QWORD *)(v18 + 32) = v16;
    v23 = v18;
    specialized Array._endMutation()(v18);
    if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0)
      v15 = sub_1000A718C(0, v15[2] + 1, 1, v15);
    v20 = v15[2];
    v19 = v15[3];
    if (v20 >= v19 >> 1)
      v15 = sub_1000A718C((_QWORD *)(v19 > 1), v20 + 1, 1, v15);
    ++v14;
    v15[2] = v20 + 1;
    v21 = &v15[2 * v20];
    v21[4] = v23;
    *((_WORD *)v21 + 20) = 0;
  }
  while (v12 != v14);
LABEL_28:
  swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
  if (v15[2])
    return sub_10009D350(1u, (uint64_t)v15, 0, (uint64_t)&off_10119A688);
  swift_bridgeObjectRelease(v15);
  return 0;
}

uint64_t sub_100148A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v3 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

char *sub_100148B00(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v17[6];
  objc_super v18;

  v3 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_observers;
  v4 = objc_allocWithZone((Class)NSHashTable);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherService;
  type metadata accessor for WeatherService(0);
  *(_QWORD *)&v5[v6] = WeatherService.__allocating_init()();
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_currentLocaleBlockObserver] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation] = 0;
  v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_traitEnvironment] = a1;
  swift_unknownObjectRetain(a1);

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for WeatherConditionsDataProvider();
  v7 = objc_msgSendSuper2(&v18, "init");
  v8 = (void *)objc_opt_self(NSNotificationCenter);
  v9 = (char *)v7;
  v10 = objc_msgSend(v8, "defaultCenter");
  v11 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "mainQueue");
  v12 = swift_allocObject(&unk_1011A5110, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  v17[4] = sub_10014AED4;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1001CB1D8;
  v17[3] = &unk_1011A51A0;
  v13 = _Block_copy(v17);
  swift_release();
  v14 = objc_msgSend(v10, "addObserverForName:object:queue:usingBlock:", NSCurrentLocaleDidChangeNotification, 0, v11, v13);
  swift_unknownObjectRelease(a1);

  _Block_release(v13);
  v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_currentLocaleBlockObserver];
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_currentLocaleBlockObserver] = v14;
  swift_unknownObjectRelease(v15);
  return v9;
}

void sub_100148D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
    if (v5)
    {
      v6 = qword_101490F38;
      v7 = v5;
      if (v6 != -1)
        swift_once(&qword_101490F38, sub_10014AB70);
      v8 = type metadata accessor for Logger(0);
      v9 = sub_10000E918(v8, (uint64_t)qword_1014D4C18);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Updating weather based on temperature unit change", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
      }

      sub_100149EAC(v7);
    }
    else
    {
      v7 = (id)Strong;
    }

  }
}

id sub_100148E94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_currentLocaleBlockObserver];
  if (v2)
  {
    v3 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v2);
    v4 = objc_msgSend(v3, "defaultCenter");
    objc_msgSend(v4, "removeObserver:", v2);

    swift_unknownObjectRelease(v2);
  }
  v5 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer;
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer];
  if (v6)
  {
    swift_getObjectType();
    swift_unknownObjectRetain(v6);
    OS_dispatch_source.cancel()();
    v7 = *(_QWORD *)&v1[v5];
    *(_QWORD *)&v1[v5] = 0;
    swift_unknownObjectRelease(v6);
    swift_unknownObjectRelease(v7);
  }
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for WeatherConditionsDataProvider();
  return objc_msgSendSuper2(&v9, "dealloc");
}

void sub_100149084(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled) != (a1 & 1))
  {
    v2 = v1;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled))
    {
      if (qword_101490F38 != -1)
        swift_once(&qword_101490F38, sub_10014AB70);
      v3 = type metadata accessor for Logger(0);
      v4 = sub_10000E918(v3, (uint64_t)qword_1014D4C18);
      v5 = Logger.logObject.getter(v4);
      v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Enabling weather conditions data provider", v7, 2u);
        swift_slowDealloc(v7, -1, -1);
      }

      sub_1001495E0();
    }
    else
    {
      if (qword_101490F38 != -1)
        swift_once(&qword_101490F38, sub_10014AB70);
      v8 = type metadata accessor for Logger(0);
      v9 = sub_10000E918(v8, (uint64_t)qword_1014D4C18);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Disabling weather conditions data provider", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
      }

      v13 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer;
      v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer);
      if (v14)
      {
        swift_getObjectType();
        swift_unknownObjectRetain(v14);
        OS_dispatch_source.cancel()();
        v15 = *(_QWORD *)(v2 + v13);
        *(_QWORD *)(v2 + v13) = 0;
        swift_unknownObjectRelease(v14);
        swift_unknownObjectRelease(v15);
      }
    }
  }
}

uint64_t sub_1001492A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v19 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v9 = (void *)static OS_dispatch_queue.main.getter(v8);
  v10 = swift_allocObject(&unk_1011A5160, 24, 7);
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_10014AECC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011A5178;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  v13 = swift_release();
  static DispatchQoS.unspecified.getter(v13);
  aBlock[0] = _swiftEmptyArrayStorage;
  v14 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v16 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v15, v16, v1, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1001494AC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_observers), "allObjects"));
  v3 = sub_100008B04((uint64_t *)&unk_10149C3F0);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n(v4, 2);
  }
  if (v4 < 0)
    v10 = v4;
  else
    v10 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease_n(v4, 2);
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    v8 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
      }
      else
      {
        v9 = *(void **)(v4 + 8 * v7 + 32);
        swift_unknownObjectRetain(v9);
      }
      ++v7;
      objc_msgSend(v9, "weatherConditionsDataProviderDidChangeWeatherConditions:", *(_QWORD *)(a1 + v8));
      swift_unknownObjectRelease(v9);
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease_n(v4, 2);
  }
  __break(1u);
  return result;
}

void sub_1001495E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  double v32;
  uint64_t v33;
  double v34;
  __n128 v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t ObjectType;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void **aBlock;
  _QWORD v78[6];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  __chkstk_darwin(v5);
  v70 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for DispatchTimeInterval(0);
  v68 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v69 = (uint64_t *)((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v74 = (uint64_t *)((char *)&v60 - v9);
  v76 = type metadata accessor for DispatchTime(0);
  v67 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v73 = (char *)&v60 - v13;
  v66 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v18 = *(v17 - 1);
  __chkstk_darwin(v17);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled) != 1)
    return;
  v63 = v4;
  v64 = v2;
  v65 = v1;
  v21 = OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer;
  v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_updatingTimer);
  v62 = v22;
  if (v22)
    goto LABEL_4;
  v23 = v0;
  v61 = sub_10000E4BC(0, &qword_101492C10, OS_dispatch_source_ptr);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v60 = sub_10000BC84(&qword_101492C18, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  v24 = sub_100008B04(&qword_101492C20);
  v25 = sub_1000D00AC(&qword_101492C28, &qword_101492C20);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v24, v25, v17, v60);
  v26 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  v28 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v20, v27);

  (*(void (**)(char *, _QWORD *))(v18 + 8))(v20, v17);
  v29 = *(_QWORD *)(v23 + v21);
  *(_QWORD *)(v23 + v21) = v28;
  swift_unknownObjectRelease(v29);
  v0 = v23;
  v22 = *(_QWORD *)(v23 + v21);
  if (v22)
  {
LABEL_4:
    v61 = v0;
    v30 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions);
    if (v30)
    {
      swift_unknownObjectRetain(v22);
      v31 = objc_msgSend(v30, "expirationDate");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v31);

      v32 = Date.timeIntervalSinceNow.getter();
      v33 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v66);
      v34 = 60.0;
      v35.n128_f64[0] = v32 + 60.0;
      v36 = v76;
      v37 = v73;
      if (v32 + 60.0 > 60.0)
        v34 = v32 + 60.0;
    }
    else
    {
      v33 = swift_unknownObjectRetain(v22);
      v34 = 60.0;
      v36 = v76;
      v37 = v73;
    }
    static DispatchTime.now()(v33, v35);
    if ((~*(_QWORD *)&v34 & 0x7FF0000000000000) != 0)
    {
      if (v34 > -9.22337204e18)
      {
        if (v34 < 9.22337204e18)
        {
          v39 = v74;
          v38 = v75;
          *v74 = (uint64_t)v34;
          v40 = v68;
          v20 = *(char **)(v68 + 104);
          ((void (*)(_QWORD *, _QWORD, uint64_t))v20)(v39, enum case for DispatchTimeInterval.seconds(_:), v38);
          + infix(_:_:)(v11, v39);
          v17 = *(_QWORD **)(v40 + 8);
          ((void (*)(_QWORD *, uint64_t))v17)(v39, v38);
          v16 = *(char **)(v67 + 8);
          ((void (*)(char *, uint64_t))v16)(v11, v36);
          if (qword_101490F38 == -1)
          {
LABEL_12:
            v41 = type metadata accessor for Logger(0);
            v42 = sub_10000E918(v41, (uint64_t)qword_1014D4C18);
            v43 = Logger.logObject.getter(v42);
            v44 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v43, v44))
            {
              v45 = (uint8_t *)swift_slowAlloc(12, -1);
              *(_DWORD *)v45 = 134217984;
              aBlock = *(void ***)&v34;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v78, v45 + 4, v45 + 12);
              _os_log_impl((void *)&_mh_execute_header, v43, v44, "Scheduling weather conditions refresh in %f seconds", v45, 0xCu);
              swift_slowDealloc(v45, -1, -1);
            }

            ObjectType = swift_getObjectType();
            v48 = v74;
            v47 = v75;
            ((void (*)(_QWORD *, _QWORD, uint64_t))v20)(v74, enum case for DispatchTimeInterval.never(_:), v75);
            v49 = v69;
            *v69 = 30;
            ((void (*)(_QWORD *, _QWORD, uint64_t))v20)(v49, enum case for DispatchTimeInterval.nanoseconds(_:), v47);
            OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v37, v48, v49, ObjectType);
            ((void (*)(_QWORD *, uint64_t))v17)(v49, v47);
            ((void (*)(_QWORD *, uint64_t))v17)(v48, v47);
            v50 = swift_allocObject(&unk_1011A5110, 24, 7);
            swift_unknownObjectWeakInit(v50 + 16);
            v78[3] = sub_10014AEA0;
            v78[4] = v50;
            aBlock = _NSConcreteStackBlock;
            v78[0] = 1107296256;
            v78[1] = sub_1001BB8D4;
            v78[2] = &unk_1011A5128;
            v51 = _Block_copy(&aBlock);
            swift_retain();
            v52 = v70;
            static DispatchQoS.unspecified.getter(v53);
            v54 = v63;
            sub_100148A00();
            OS_dispatch_source.setEventHandler(qos:flags:handler:)(v52, v54, v51, ObjectType);
            _Block_release(v51);
            (*(void (**)(char *, uint64_t))(v64 + 8))(v54, v65);
            (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v72);
            swift_release();
            swift_release();
            if (v62)
            {
              ((void (*)(char *, uint64_t))v16)(v37, v76);
              swift_unknownObjectRelease(v22);
            }
            else
            {
              OS_dispatch_source.resume()();
              swift_unknownObjectRelease(v22);
              ((void (*)(char *, uint64_t))v16)(v37, v76);
            }
            return;
          }
LABEL_26:
          swift_once(&qword_101490F38, sub_10014AB70);
          goto LABEL_12;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (qword_101490F38 != -1)
    swift_once(&qword_101490F38, sub_10014AB70);
  v55 = type metadata accessor for Logger(0);
  v56 = sub_10000E918(v55, (uint64_t)qword_1014D4C18);
  v57 = Logger.logObject.getter(v56);
  v58 = static os_log_type_t.error.getter(v57);
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Failed to create timer to refresh weather conditions", v59, 2u);
    swift_slowDealloc(v59, -1, -1);
  }

}

void sub_100149D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(void **)(Strong + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
    if (v4)
    {
      v5 = qword_101490F38;
      v6 = v4;
      if (v5 != -1)
        swift_once(&qword_101490F38, sub_10014AB70);
      v7 = type metadata accessor for Logger(0);
      v8 = sub_10000E918(v7, (uint64_t)qword_1014D4C18);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Scheduled weather conditions refresh", v11, 2u);
        swift_slowDealloc(v11, -1, -1);
      }

      sub_100149EAC(v6);
    }
    else
    {
      v6 = (id)Strong;
    }

  }
}

uint64_t sub_100149EAC(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  id v14;
  unsigned int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;

  v2 = v1;
  v4 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchPredicate(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  *v10 = static OS_dispatch_queue.main.getter(v11);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  v12 = _dispatchPreconditionTest(_:)(v10);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v12 & 1) != 0)
  {
    v14 = objc_msgSend((id)objc_opt_self(WeatherSettingsManager), "sharedManager");
    v15 = objc_msgSend(v14, "shouldShowWeatherConditions");

    if (v15 && v2[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_enabled] == 1)
    {
      v16 = !-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(*(void **)&v2[OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_traitEnvironment]);
      v17 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
      v18 = swift_allocObject(&unk_1011A50E8, 49, 7);
      *(_QWORD *)(v18 + 16) = 0;
      *(_QWORD *)(v18 + 24) = 0;
      *(_QWORD *)(v18 + 32) = v2;
      *(_QWORD *)(v18 + 40) = a1;
      *(_BYTE *)(v18 + 48) = v16;
      v19 = v2;
      v20 = a1;
      sub_1001B0C08((uint64_t)v6, (uint64_t)&unk_10149C3D0, v18);
      return swift_release();
    }
    else
    {
      return sub_10014A890(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10014A098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_BYTE *)(v6 + 224) = a6;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a5;
  v7 = type metadata accessor for Date(0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 40) = v8;
  *(_QWORD *)(v6 + 48) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for WeatherMetadata(0);
  *(_QWORD *)(v6 + 56) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 64) = v10;
  *(_QWORD *)(v6 + 72) = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008B04(&qword_10149C3D8);
  *(_QWORD *)(v6 + 80) = v11;
  v12 = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 88) = v12;
  *(_QWORD *)(v6 + 96) = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WeatherCondition(0);
  *(_QWORD *)(v6 + 104) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v6 + 112) = v14;
  *(_QWORD *)(v6 + 120) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WeatherConditionIcon(0);
  *(_QWORD *)(v6 + 128) = v15;
  v16 = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v6 + 136) = v16;
  *(_QWORD *)(v6 + 144) = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008B04((uint64_t *)&unk_10149C3E0);
  *(_QWORD *)(v6 + 152) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v6 + 160) = v18;
  *(_QWORD *)(v6 + 168) = swift_task_alloc((*(_QWORD *)(v18 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for CurrentWeather(0);
  *(_QWORD *)(v6 + 176) = v19;
  v20 = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v6 + 184) = v20;
  *(_QWORD *)(v6 + 192) = swift_task_alloc((*(_QWORD *)(v20 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10014A1F4, 0, 0);
}

uint64_t sub_10014A1F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  _QWORD *v7;

  if (qword_101490F38 != -1)
    swift_once(&qword_101490F38, sub_10014AB70);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_10000E918(v1, (uint64_t)qword_1014D4C18);
  v0[25] = v2;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Fetching weather conditions", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0[22];

  static WeatherQuery.current.getter(v6);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to WeatherService.weather<A>(for:including:)[1]);
  v0[26] = v7;
  *v7 = v0;
  v7[1] = sub_10014A324;
  return WeatherService.weather<A>(for:including:)(v0[24], v0[3], v0[21], v0[22]);
}

uint64_t sub_10014A324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
    v6 = sub_10014A780;
  else
    v6 = sub_10014A3A8;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10014A3A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  uint64_t v28;
  NSString v29;
  Class isa;
  Class v31;
  NSString v32;
  NSString v33;
  id v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v58 = *(_QWORD *)(v0 + 112);
  v59 = *(_QWORD *)(v0 + 88);
  v53 = v4;
  v5 = *(_QWORD *)(v0 + 72);
  v57 = *(_QWORD *)(v0 + 56);
  v55 = *(_QWORD *)(v0 + 48);
  v56 = *(_QWORD *)(v0 + 64);
  v63 = *(_QWORD *)(v0 + 40);
  v6 = *(unsigned __int8 *)(v0 + 224);
  v64 = *(_QWORD *)(v0 + 32);
  v61 = *(void **)(v0 + 24);
  v7 = ((uint64_t (*)(void))CurrentWeather.condition.getter)();
  v8 = CurrentWeather.isDaylight.getter(v7);
  WeatherCondition.conditionIcon(isDaylight:isFilled:forLightBackground:)(v8 & 1, v6, 1);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8);
  v10 = v9(v1, v2);
  v11 = CurrentWeather.temperature.getter(v10);
  Measurement<>.formattedString()(v11);
  v54 = v12;
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 8);
  v14 = v13(v3, v4);
  WeatherConditionIcon.name.getter(v14);
  v16 = v15;
  v60 = WeatherConditionIcon.palette.getter();
  v62 = v61;
  v17 = CurrentWeather.metadata.getter();
  WeatherMetadata.expirationDate.getter(v17);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v5, v57);
  v19 = CurrentWeather.condition.getter(v18);
  WeatherCondition.accessibilityDescription.getter(v19);
  v21 = v20;
  v22 = v9(v1, v2);
  v23 = CurrentWeather.temperature.getter(v22);
  Measurement<>.formattedDigitsOnlyString()(v23);
  v25 = v24;
  v13(v3, v53);
  v26 = objc_allocWithZone((Class)WeatherConditions);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v54);
  v28 = v16;
  v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v28);
  sub_10000E4BC(0, (unint64_t *)&qword_101493C20, UIColor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v60);
  v31 = Date._bridgeToObjectiveC()().super.isa;
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v21);
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v26, "initWithTemperature:name:palette:forLocation:withExpirationDate:conditionDescription:temperatureDescription:", v27, v29, isa, v62, v31, v32, swift_bridgeObjectRelease(v25).n128_f64[0], v33);

  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v55, v64);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Successfully fetched Weather conditions", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }
  v40 = *(_QWORD *)(v0 + 184);
  v39 = *(_QWORD *)(v0 + 192);
  v41 = *(_QWORD *)(v0 + 176);
  v43 = *(_QWORD *)(v0 + 136);
  v42 = *(_QWORD *)(v0 + 144);
  v44 = *(_QWORD *)(v0 + 128);

  v45 = v34;
  sub_10014A890(v34);

  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
  v46 = *(_QWORD *)(v0 + 168);
  v47 = *(_QWORD *)(v0 + 144);
  v48 = *(_QWORD *)(v0 + 120);
  v49 = *(_QWORD *)(v0 + 96);
  v50 = *(_QWORD *)(v0 + 72);
  v51 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 192));
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014A780(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to retrieve weather conditions", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v1 + 216);

  sub_10014A890(0);
  swift_errorRelease(v5);
  v6 = *(_QWORD *)(v1 + 168);
  v7 = *(_QWORD *)(v1 + 144);
  v8 = *(_QWORD *)(v1 + 120);
  v9 = *(_QWORD *)(v1 + 96);
  v10 = *(_QWORD *)(v1 + 72);
  v11 = *(_QWORD *)(v1 + 48);
  swift_task_dealloc(*(_QWORD *)(v1 + 192));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10014A890(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10000E4BC(0, (unint64_t *)&qword_101492FA0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1011A5098, 32, 7);
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_10014ADA8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011A50B0;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  v14 = v1;
  v15 = swift_release();
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_10000BC84((unint64_t *)&qword_101492BB0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v18 = sub_1000D00AC((unint64_t *)&qword_101492BC0, (uint64_t *)&unk_101492FB0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v3, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v20);
}

void sub_10014AAA4(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  void *v7;

  v4 = *(void **)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_weatherConditions) = a2;
  v5 = a2;

  if (a2)
  {
    v6 = objc_msgSend(v5, "location");
    if (v6)
    {
      v7 = *(void **)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
      *(_QWORD *)(a1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation) = v6;

    }
  }
  sub_1001492A0();
  sub_1001495E0();
}

uint64_t type metadata accessor for WeatherConditionsDataProvider()
{
  return objc_opt_self(_TtC4Maps29WeatherConditionsDataProvider);
}

uint64_t sub_10014AB70()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10000E930(v0, qword_1014D4C18);
  sub_10000E918(v0, (uint64_t)qword_1014D4C18);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEE007370614D2E65, 0x72656874616557, 0xE700000000000000);
}

void sub_10014AC50(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps29WeatherConditionsDataProvider_lastSavedLocation) = a1;
  v4 = a1;

  if (a1)
  {
    v5 = qword_101490F38;
    v11 = v4;
    if (v5 != -1)
      swift_once(&qword_101490F38, sub_10014AB70);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_10000E918(v6, (uint64_t)qword_1014D4C18);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Location-based weather conditions refresh", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    sub_100149EAC(v11);
  }
  else
  {
    sub_10014A890(0);
  }
}

uint64_t sub_10014AD7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10014ADA8()
{
  uint64_t v0;

  sub_10014AAA4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

double sub_10014ADB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10014ADC0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10014ADC8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10014ADFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_10149C3CC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000C0E0;
  return sub_10014A098(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10014AE7C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10014AEA0()
{
  uint64_t v0;

  sub_100149D74(v0);
}

uint64_t sub_10014AEA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014AECC()
{
  uint64_t v0;

  return sub_1001494AC(*(_QWORD *)(v0 + 16));
}

void sub_10014AED4(uint64_t a1)
{
  uint64_t v1;

  sub_100148D2C(a1, v1);
}

unint64_t sub_10014AEF8()
{
  unint64_t result;

  result = qword_10149C400;
  if (!qword_10149C400)
  {
    result = swift_getWitnessTable("Yv7", &type metadata for AvoidHighwaysEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C400);
  }
  return result;
}

uint64_t sub_10014AF3C()
{
  return sub_100010D70(&qword_10149C408, &qword_10149C410, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10014AF68()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4C30);
  sub_10000E918(v20, (uint64_t)qword_1014D4C30);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x69482064696F7641, 0xEE00737961776867);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "A setting to avoid highways when driving", 40, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_10014B184(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4C48);
  sub_10000E918(v1, (uint64_t)qword_1014D4C48);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000015, 0x8000000100E4C700);
}

uint64_t sub_10014B1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4C60);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4C60);
  IntentDescription.init(stringLiteral:)(0xD000000000000031, 0x8000000100E4C6C0);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_10014B26C()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E2E158);
  qword_1014D4C78 = result;
  return result;
}

uint64_t sub_10014B290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_10014B2AC, 0, 0);
}

uint64_t sub_10014B2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101490F58 != -1)
    swift_once(&qword_101490F58, sub_10014B26C);
  v2 = qword_1014D4C78;
  *(_QWORD *)(v0 + 80) = qword_1014D4C78;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149C510, &qword_10149C518, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_10014B3AC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_10014B3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_10014B42C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10014B42C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4C78;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_10014B4C0()
{
  double result;

  if (qword_101490F58 != -1)
    swift_once(&qword_101490F58, sub_10014B26C);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_10014B504()
{
  unint64_t result;

  result = qword_10149C418;
  if (!qword_10149C418)
  {
    result = swift_getWitnessTable("Av7", &type metadata for AvoidHighwaysEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C418);
  }
  return result;
}

unint64_t sub_10014B54C()
{
  unint64_t result;

  result = qword_10149C420;
  if (!qword_10149C420)
  {
    result = swift_getWitnessTable(")v7", &type metadata for AvoidHighwaysEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C420);
  }
  return result;
}

uint64_t sub_10014B590(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101069B94, 1) + 8);
}

uint64_t sub_10014B5B4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10014AEF8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10014B5F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F48, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4C48, (uint64_t)sub_10014B184, a1);
}

uint64_t sub_10014B618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101490F50 != -1)
    swift_once(&qword_101490F50, sub_10014B1E4);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4C60);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_10014B678(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149C52C);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_10014B2AC, 0, 0);
}

uint64_t sub_10014B6E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10014C1D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10014B704()
{
  return 0xD000000000000024;
}

unint64_t sub_10014B724()
{
  unint64_t result;

  result = qword_10149C430;
  if (!qword_10149C430)
  {
    result = swift_getWitnessTable(byte_100E2DD94, &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C430);
  }
  return result;
}

unint64_t sub_10014B76C()
{
  unint64_t result;

  result = qword_10149C438;
  if (!qword_10149C438)
  {
    result = swift_getWitnessTable(byte_100E2DF8C, &type metadata for AvoidHighwaysQuery);
    atomic_store(result, (unint64_t *)&qword_10149C438);
  }
  return result;
}

unint64_t sub_10014B7B4()
{
  unint64_t result;

  result = qword_10149C440;
  if (!qword_10149C440)
  {
    result = swift_getWitnessTable(byte_100E2DDEC, &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C440);
  }
  return result;
}

unint64_t sub_10014B7FC()
{
  unint64_t result;

  result = qword_10149C448;
  if (!qword_10149C448)
  {
    result = swift_getWitnessTable(byte_100E2DE24, &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C448);
  }
  return result;
}

unint64_t sub_10014B844()
{
  unint64_t result;

  result = qword_10149C450;
  if (!qword_10149C450)
  {
    result = swift_getWitnessTable(byte_100E2DE54, &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C450);
  }
  return result;
}

unint64_t sub_10014B88C()
{
  unint64_t result;

  result = qword_10149C458;
  if (!qword_10149C458)
  {
    result = swift_getWitnessTable(byte_100E2E004, &type metadata for AvoidHighwaysQuery);
    atomic_store(result, (unint64_t *)&qword_10149C458);
  }
  return result;
}

uint64_t sub_10014B8D0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10014B8E8, 0, 0);
}

uint64_t sub_10014B8E8()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  id v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)DrivePreferences), "initWithDefaults:", v2);

  LOBYTE(v2) = objc_msgSend(v3, "avoidHighways");
  *v1 = (_BYTE)v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014B984(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_10014B9A0, 0, 0);
}

uint64_t sub_10014B9A0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  int BOOL;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)DrivePreferences), "initWithDefaults:", v2);

  objc_msgSend(v3, "setAvoidHighways:", v1);
  objc_msgSend(v3, "synchronize");
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10014BA74()
{
  unint64_t result;

  result = qword_10149C460;
  if (!qword_10149C460)
  {
    result = swift_getWitnessTable(byte_100E2DE8C, &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C460);
  }
  return result;
}

unint64_t sub_10014BABC()
{
  unint64_t result;

  result = qword_10149C468;
  if (!qword_10149C468)
  {
    result = swift_getWitnessTable("uu7", &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C468);
  }
  return result;
}

unint64_t sub_10014BB04()
{
  unint64_t result;

  result = qword_10149C470;
  if (!qword_10149C470)
  {
    result = swift_getWitnessTable("]u7", &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C470);
  }
  return result;
}

unint64_t sub_10014BB4C()
{
  unint64_t result;

  result = qword_10149C478;
  if (!qword_10149C478)
  {
    result = swift_getWitnessTable("Eu7", &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C478);
  }
  return result;
}

uint64_t sub_10014BB90@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10014BD58();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10014BBCC@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F40, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4C30, (uint64_t)sub_10014AF68, a1);
}

uint64_t sub_10014BBF0()
{
  return sub_100010D70(&qword_10149C480, &qword_10149C488, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10014BC1C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014B724();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10014BC58()
{
  unint64_t result;

  result = qword_10149C490;
  if (!qword_10149C490)
  {
    result = swift_getWitnessTable("-u7", &type metadata for AvoidHighwaysEntity);
    atomic_store(result, (unint64_t *)&qword_10149C490);
  }
  return result;
}

uint64_t sub_10014BC9C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014BD58();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10014BCD4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014BB4C();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10014BD10()
{
  unint64_t result;

  result = qword_10149C498;
  if (!qword_10149C498)
  {
    result = swift_getWitnessTable(byte_100E2DFCC, &type metadata for AvoidHighwaysQuery);
    atomic_store(result, (unint64_t *)&qword_10149C498);
  }
  return result;
}

unint64_t sub_10014BD58()
{
  unint64_t result;

  result = qword_10149C4A0[0];
  if (!qword_10149C4A0[0])
  {
    result = swift_getWitnessTable(byte_100E2DD64, &type metadata for AvoidHighwaysEntity);
    atomic_store(result, qword_10149C4A0);
  }
  return result;
}

uint64_t sub_10014BD9C(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10014BDF4, 0, 0);
}

uint64_t sub_10014BDF4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149C410);
  LocalizedStringResource.init(stringLiteral:)(0x69482064696F7641, 0xEE00737961776867);
  v3 = sub_100010D70(&qword_10149C510, &qword_10149C518, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149C500, 0, &unk_10149C508, 0, &type metadata for AvoidHighwaysEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014BEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014B76C();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10014BF24()
{
  unint64_t result;

  result = qword_10149C4B8;
  if (!qword_10149C4B8)
  {
    result = swift_getWitnessTable(byte_100E2E05C, &type metadata for AvoidHighwaysQuery);
    atomic_store(result, (unint64_t *)&qword_10149C4B8);
  }
  return result;
}

unint64_t sub_10014BF6C()
{
  unint64_t result;

  result = qword_10149C4C0[0];
  if (!qword_10149C4C0[0])
  {
    result = swift_getWitnessTable(byte_100E2E0BC, &type metadata for AvoidHighwaysQuery);
    atomic_store(result, qword_10149C4C0);
  }
  return result;
}

uint64_t sub_10014BFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014B76C();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10014C01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014B76C();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10014C088()
{
  unint64_t result;

  result = qword_10149C4D8;
  if (!qword_10149C4D8)
  {
    result = swift_getWitnessTable(byte_100E2E0E4, &type metadata for AvoidHighwaysQuery);
    atomic_store(result, (unint64_t *)&qword_10149C4D8);
  }
  return result;
}

unint64_t sub_10014C0D0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149C4E0;
  if (!qword_10149C4E0)
  {
    v1 = sub_10000E5D4(qword_10149C4E8);
    v2 = sub_10014BB04();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149C4E0);
  }
  return result;
}

uint64_t sub_10014C134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014B88C();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidHighwaysQuery()
{
  return &type metadata for AvoidHighwaysQuery;
}

ValueMetadata *type metadata accessor for AvoidHighwaysEntity.UpdateIntent_value()
{
  return &type metadata for AvoidHighwaysEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidHighwaysEntity()
{
  return &type metadata for AvoidHighwaysEntity;
}

uint64_t sub_10014C1D0()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149C520);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000018, 0x8000000100E4C670);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_10014B724();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000002ALL, 0x8000000100E4C690);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_10014C4F4@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10014C500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for ClientOrigin(0);
  v4[3] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[4] = v6;
  v4[5] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RequestOrigin(0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10014C580, 0, 0);
}

uint64_t sub_10014C580()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[5];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[4] + 104))(v1, enum case for ClientOrigin.other(_:), v0[3]);
  RequestOrigin.init(_:)(v1);
  v2 = type metadata accessor for Session(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = (_QWORD *)swift_task_alloc(async function pointer to Session.init(_:)[1]);
  v0[7] = v3;
  *v3 = v0;
  v3[1] = sub_10014C614;
  return Session.init(_:)(v0[6]);
}

uint64_t sub_10014C614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 64) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10014C670, 0, 0);
}

uint64_t sub_10014C670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps19SearchFindMySession_session);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC4Maps19SearchFindMySession_session) = *(_QWORD *)(v0 + 64);
  swift_release(v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10014C7BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchFindMySession();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchFindMySession()
{
  return objc_opt_self(_TtC4Maps19SearchFindMySession);
}

uint64_t sub_10014C81C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10014C848(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_10149C564);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000C0E0;
  return sub_10014C500(a1, v4, v5, v6);
}

unint64_t sub_10014C8B8()
{
  unint64_t result;

  result = qword_10149C570;
  if (!qword_10149C570)
  {
    result = swift_getWitnessTable(byte_100E2E210, &type metadata for TransportTypePreferencesEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C570);
  }
  return result;
}

uint64_t sub_10014C8FC()
{
  return sub_100010D70(&qword_10149C578, &qword_10149C580, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10014C928()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4C80);
  sub_10000E918(v20, (uint64_t)qword_1014D4C80);
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E4C740);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "Choose a transport mode preference for Maps", 43, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_10014CB3C(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4C98);
  sub_10000E918(v1, (uint64_t)qword_1014D4C98);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000021, 0x8000000100E4C890);
}

uint64_t sub_10014CB9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4CB0);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4CB0);
  IntentDescription.init(stringLiteral:)(0xD000000000000049, 0x8000000100E4C840);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_10014CC24()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E2E6D8);
  qword_1014D4CC8 = result;
  return result;
}

uint64_t sub_10014CC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_10014CC64, 0, 0);
}

uint64_t sub_10014CC64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter(v0 + 2);
  v1 = v0[2];
  v0[3] = v1;
  v0[9] = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)((char *)v0 + 145));
  if (qword_101490F78 != -1)
    swift_once(&qword_101490F78, sub_10014CC24);
  v2 = qword_1014D4CC8;
  v0[10] = qword_1014D4CC8;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[11] = v4;
  v5 = sub_100010D70(&qword_10149C690, &qword_10149C698, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v0[12] = v5;
  *v4 = v0;
  v4[1] = sub_10014CD5C;
  return AppEntity._setValue<A, B, C>(_:for:)((char *)v0 + 145, v2, &type metadata for TransportType, v5);
}

uint64_t sub_10014CD5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_10014CDDC;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10014CDDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4CC8;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_10014CE70;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

uint64_t sub_10014CE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D84;
  else
    v3 = sub_10014CEF0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10014CEF0()
{
  uint64_t v0;
  unint64_t v1;

  *(_BYTE *)(v0 + 146) = *(_BYTE *)(v0 + 144);
  v1 = sub_10011C844();
  static IntentResult.result<A>(value:)(v0 + 146, &type metadata for TransportType, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10014CF48()
{
  double result;

  if (qword_101490F78 != -1)
    swift_once(&qword_101490F78, sub_10014CC24);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_10014CF8C()
{
  unint64_t result;

  result = qword_10149C588;
  if (!qword_10149C588)
  {
    result = swift_getWitnessTable(byte_100E2E2A0, &type metadata for TransportTypePreferencesEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C588);
  }
  return result;
}

unint64_t sub_10014CFD4()
{
  unint64_t result;

  result = qword_10149C590;
  if (!qword_10149C590)
  {
    result = swift_getWitnessTable(byte_100E2E2C8, &type metadata for TransportTypePreferencesEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C590);
  }
  return result;
}

uint64_t sub_10014D018(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101069C70, 1) + 8);
}

uint64_t sub_10014D03C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10014C8B8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10014D07C@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F68, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4C98, (uint64_t)sub_10014CB3C, a1);
}

uint64_t sub_10014D0A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101490F70 != -1)
    swift_once(&qword_101490F70, sub_10014CB9C);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4CB0);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_10014D100(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149C6B4);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_10014CC64, 0, 0);
}

uint64_t sub_10014D168@<X0>(uint64_t *a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t result;
  uint64_t v4;

  result = sub_10014DC00(a2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10014D18C()
{
  return 0xD00000000000002FLL;
}

unint64_t sub_10014D1AC()
{
  unint64_t result;

  result = qword_10149C5A0;
  if (!qword_10149C5A0)
  {
    result = swift_getWitnessTable("]t7", &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5A0);
  }
  return result;
}

unint64_t sub_10014D1F4()
{
  unint64_t result;

  result = qword_10149C5A8;
  if (!qword_10149C5A8)
  {
    result = swift_getWitnessTable("us7", &type metadata for TransportTypePreferencesQuery);
    atomic_store(result, (unint64_t *)&qword_10149C5A8);
  }
  return result;
}

unint64_t sub_10014D23C()
{
  unint64_t result;

  result = qword_10149C5B0;
  if (!qword_10149C5B0)
  {
    result = swift_getWitnessTable("Et7", &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5B0);
  }
  return result;
}

unint64_t sub_10014D284()
{
  unint64_t result;

  result = qword_10149C5B8;
  if (!qword_10149C5B8)
  {
    result = swift_getWitnessTable("-t7", &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5B8);
  }
  return result;
}

unint64_t sub_10014D2CC()
{
  unint64_t result;

  result = qword_10149C5C0;
  if (!qword_10149C5C0)
  {
    result = swift_getWitnessTable(byte_100E2E3D4, &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5C0);
  }
  return result;
}

unint64_t sub_10014D314()
{
  unint64_t result;

  result = qword_10149C5C8;
  if (!qword_10149C5C8)
  {
    result = swift_getWitnessTable("Es7", &type metadata for TransportTypePreferencesQuery);
    atomic_store(result, (unint64_t *)&qword_10149C5C8);
  }
  return result;
}

uint64_t sub_10014D358(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10014D370, 0, 0);
}

uint64_t sub_10014D370()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;

  v1 = GEOGetUserTransportTypePreference();
  v2 = 2 * (v1 == 2);
  if (v1 == 4)
    v2 = 3;
  if (v1 == 1)
    v3 = 1;
  else
    v3 = v2;
  if (!v1)
    v3 = 0;
  **(_BYTE **)(v0 + 16) = v3;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014D3D4(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_10014D3F0, 0, 0);
}

uint64_t sub_10014D3F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int BOOL;

  v1 = GeoServicesConfig_TransportTypePreference;
  v2 = *((_QWORD *)&GeoServicesConfig_TransportTypePreference + 1);
  sub_10011CB60(*(_BYTE *)(v0 + 16));
  GEOConfigSetSyncInteger(v1, v2, v3);
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10014D470()
{
  unint64_t result;

  result = qword_10149C5D0;
  if (!qword_10149C5D0)
  {
    result = swift_getWitnessTable("5s7", &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5D0);
  }
  return result;
}

unint64_t sub_10014D4B8()
{
  unint64_t result;

  result = qword_10149C5D8;
  if (!qword_10149C5D8)
  {
    result = swift_getWitnessTable(byte_100E2E434, &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5D8);
  }
  return result;
}

unint64_t sub_10014D500()
{
  unint64_t result;

  result = qword_10149C5E0;
  if (!qword_10149C5E0)
  {
    result = swift_getWitnessTable(byte_100E2E45C, &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5E0);
  }
  return result;
}

unint64_t sub_10014D548()
{
  unint64_t result;

  result = qword_10149C5E8;
  if (!qword_10149C5E8)
  {
    result = swift_getWitnessTable(byte_100E2E4B4, &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C5E8);
  }
  return result;
}

uint64_t sub_10014D58C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10014D754();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10014D5C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F60, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4C80, (uint64_t)sub_10014C928, a1);
}

uint64_t sub_10014D5EC()
{
  return sub_100010D70(&qword_10149C5F0, &qword_10149C5F8, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10014D618(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014D1AC();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10014D654()
{
  unint64_t result;

  result = qword_10149C600;
  if (!qword_10149C600)
  {
    result = swift_getWitnessTable(byte_100E2E4E4, &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, (unint64_t *)&qword_10149C600);
  }
  return result;
}

uint64_t sub_10014D698(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014D754();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10014D6D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014D548();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10014D70C()
{
  unint64_t result;

  result = qword_10149C608;
  if (!qword_10149C608)
  {
    result = swift_getWitnessTable("]s7", &type metadata for TransportTypePreferencesQuery);
    atomic_store(result, (unint64_t *)&qword_10149C608);
  }
  return result;
}

unint64_t sub_10014D754()
{
  unint64_t result;

  result = qword_10149C610[0];
  if (!qword_10149C610[0])
  {
    result = swift_getWitnessTable("ut7", &type metadata for TransportTypePreferencesEntity);
    atomic_store(result, qword_10149C610);
  }
  return result;
}

uint64_t sub_10014D798(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10014D7F0, 0, 0);
}

uint64_t sub_10014D7F0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149C580);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ALL, 0x8000000100E4C740);
  v3 = sub_100010D70(&qword_10149C690, &qword_10149C698, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v4 = sub_10011CA18();
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149C680, 0, &unk_10149C688, 0, &type metadata for TransportTypePreferencesEntity.UpdateIntent_value, v3, v4);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014D8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014D1F4();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10014D924()
{
  unint64_t result;

  result = qword_10149C628;
  if (!qword_10149C628)
  {
    result = swift_getWitnessTable("-s7", &type metadata for TransportTypePreferencesQuery);
    atomic_store(result, (unint64_t *)&qword_10149C628);
  }
  return result;
}

unint64_t sub_10014D96C()
{
  unint64_t result;

  result = qword_10149C630[0];
  if (!qword_10149C630[0])
  {
    result = swift_getWitnessTable(byte_100E2E63C, &type metadata for TransportTypePreferencesQuery);
    atomic_store(result, qword_10149C630);
  }
  return result;
}

uint64_t sub_10014D9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014D1F4();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10014DA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014D1F4();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10014DA8C()
{
  unint64_t result;

  result = qword_10149C648;
  if (!qword_10149C648)
  {
    result = swift_getWitnessTable(byte_100E2E664, &type metadata for TransportTypePreferencesQuery);
    atomic_store(result, (unint64_t *)&qword_10149C648);
  }
  return result;
}

unint64_t sub_10014DAD4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149C650;
  if (!qword_10149C650)
  {
    v1 = sub_10000E5D4(qword_10149C658);
    v2 = sub_10014D500();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149C650);
  }
  return result;
}

uint64_t sub_10014DB38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014D314();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for TransportTypePreferencesQuery()
{
  return &type metadata for TransportTypePreferencesQuery;
}

ValueMetadata *type metadata accessor for TransportTypePreferencesEntity()
{
  return &type metadata for TransportTypePreferencesEntity;
}

ValueMetadata *type metadata accessor for TransportTypePreferencesEntity.UpdateIntent_value()
{
  return &type metadata for TransportTypePreferencesEntity.UpdateIntent_value;
}

uint64_t sub_10014DBD4()
{
  return sub_100010D70(&qword_10149C670, &qword_10149C678, (const char *)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

uint64_t sub_10014DC00(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v27[2];
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  v1 = type metadata accessor for InputConnectionBehavior(0, a1);
  v30 = *(_QWORD *)(v1 - 8);
  v31 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v27 - v8;
  v10 = sub_100008B04(&qword_101494370);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocalizedStringResource(0, v11);
  v15 = *(_QWORD *)(v14 - 8);
  v29 = v14;
  __chkstk_darwin(v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = sub_100008B04(&qword_10149C6A0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000024, 0x8000000100E4C7C0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  v33 = 0;
  v18 = type metadata accessor for IntentDialog(0);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v20 = v9;
  v19(v9, 1, 1, v18);
  v21 = v6;
  v19(v6, 1, 1, v18);
  v22 = enum case for InputConnectionBehavior.default(_:);
  v23 = v31;
  v27[0] = *(_QWORD *)(v30 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v27[0])(v3, enum case for InputConnectionBehavior.default(_:), v31);
  v24 = sub_10014D1AC();
  v30 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v17, v13, &v33, v20, v21, v3, v24);
  sub_100008B04(&qword_10149C6A8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000042, 0x8000000100E4C7F0);
  v28(v13, 1, 1, v29);
  v32 = 4;
  v19(v20, 1, 1, v18);
  v19(v21, 1, 1, v18);
  ((void (*)(char *, uint64_t, uint64_t))v27[0])(v3, v22, v23);
  v25 = sub_10011CA18();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v17, v13, &v32, v20, v21, v3, &off_10119A758, v25);
  return v30;
}

double sub_10014DEF0@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitFactoid()
{
  return &type metadata for PlaceSummaryUnitFactoid;
}

unint64_t sub_10014DF10()
{
  unint64_t result;

  result = qword_10149C6B8;
  if (!qword_10149C6B8)
  {
    result = swift_getWitnessTable(byte_100E2E790, &type metadata for DirectionsWakeDeviceEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C6B8);
  }
  return result;
}

uint64_t sub_10014DF54()
{
  return sub_100010D70(&qword_10149C6C0, &qword_10149C6C8, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10014DF80()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4CD0);
  sub_10000E918(v20, (uint64_t)qword_1014D4CD0);
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E4C8C0);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "When driving or cycling, spoken directions wake the display if the device is locked.", 84, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_10014E194(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4CE8);
  sub_10000E918(v1, (uint64_t)qword_1014D4CE8);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E4CA30);
}

uint64_t sub_10014E1F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4D00);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4D00);
  IntentDescription.init(stringLiteral:)(0xD000000000000041, 0x8000000100E4C9E0);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_10014E27C()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E2EC58);
  qword_1014D4D18 = result;
  return result;
}

uint64_t sub_10014E2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_10014E2BC, 0, 0);
}

uint64_t sub_10014E2BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101490F98 != -1)
    swift_once(&qword_101490F98, sub_10014E27C);
  v2 = qword_1014D4D18;
  *(_QWORD *)(v0 + 80) = qword_1014D4D18;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149C7C8, &qword_10149C7D0, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_10014E3BC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_10014E3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_10014E43C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10014E43C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4D18;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_10014E4D0()
{
  double result;

  if (qword_101490F98 != -1)
    swift_once(&qword_101490F98, sub_10014E27C);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_10014E514()
{
  unint64_t result;

  result = qword_10149C6D0;
  if (!qword_10149C6D0)
  {
    result = swift_getWitnessTable(byte_100E2E820, &type metadata for DirectionsWakeDeviceEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C6D0);
  }
  return result;
}

unint64_t sub_10014E55C()
{
  unint64_t result;

  result = qword_10149C6D8;
  if (!qword_10149C6D8)
  {
    result = swift_getWitnessTable(byte_100E2E848, &type metadata for DirectionsWakeDeviceEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C6D8);
  }
  return result;
}

uint64_t sub_10014E5A0(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101069D14, 1) + 8);
}

uint64_t sub_10014E5C4(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10014DF10();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10014E604@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F88, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4CE8, (uint64_t)sub_10014E194, a1);
}

uint64_t sub_10014E628@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101490F90 != -1)
    swift_once(&qword_101490F90, sub_10014E1F4);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4D00);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_10014E688(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149C7E4);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_10014E2BC, 0, 0);
}

uint64_t sub_10014E6F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_10014F120();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10014E714()
{
  return 0xD00000000000002BLL;
}

unint64_t sub_10014E734()
{
  unint64_t result;

  result = qword_10149C6E8;
  if (!qword_10149C6E8)
  {
    result = swift_getWitnessTable(byte_100E2E894, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C6E8);
  }
  return result;
}

unint64_t sub_10014E77C()
{
  unint64_t result;

  result = qword_10149C6F0;
  if (!qword_10149C6F0)
  {
    result = swift_getWitnessTable(byte_100E2EA8C, &type metadata for DirectionsWakeDeviceQuery);
    atomic_store(result, (unint64_t *)&qword_10149C6F0);
  }
  return result;
}

unint64_t sub_10014E7C4()
{
  unint64_t result;

  result = qword_10149C6F8;
  if (!qword_10149C6F8)
  {
    result = swift_getWitnessTable(byte_100E2E8EC, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C6F8);
  }
  return result;
}

unint64_t sub_10014E80C()
{
  unint64_t result;

  result = qword_10149C700;
  if (!qword_10149C700)
  {
    result = swift_getWitnessTable(byte_100E2E924, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C700);
  }
  return result;
}

unint64_t sub_10014E854()
{
  unint64_t result;

  result = qword_10149C708;
  if (!qword_10149C708)
  {
    result = swift_getWitnessTable("mr7", &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C708);
  }
  return result;
}

unint64_t sub_10014E89C()
{
  unint64_t result;

  result = qword_10149C710;
  if (!qword_10149C710)
  {
    result = swift_getWitnessTable(byte_100E2EB04, &type metadata for DirectionsWakeDeviceQuery);
    atomic_store(result, (unint64_t *)&qword_10149C710);
  }
  return result;
}

uint64_t sub_10014E8E0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10014E8F8, 0, 0);
}

uint64_t sub_10014E8F8()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = *(_BYTE **)(v0 + 16);
  *v1 = GEOConfigGetBOOL(MapsConfig_NavigationPromptsUndimScreen, off_1014B3A08);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014E940(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_10014E95C, 0, 0);
}

uint64_t sub_10014E95C()
{
  uint64_t v0;
  int BOOL;

  GEOConfigSetSyncBOOL(MapsConfig_NavigationPromptsUndimScreen, off_1014B3A08, *(unsigned __int8 *)(v0 + 16));
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10014E9CC()
{
  unint64_t result;

  result = qword_10149C718;
  if (!qword_10149C718)
  {
    result = swift_getWitnessTable(byte_100E2E98C, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C718);
  }
  return result;
}

unint64_t sub_10014EA14()
{
  unint64_t result;

  result = qword_10149C720;
  if (!qword_10149C720)
  {
    result = swift_getWitnessTable("-r7", &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C720);
  }
  return result;
}

unint64_t sub_10014EA5C()
{
  unint64_t result;

  result = qword_10149C728;
  if (!qword_10149C728)
  {
    result = swift_getWitnessTable(byte_100E2E9DC, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C728);
  }
  return result;
}

unint64_t sub_10014EAA4()
{
  unint64_t result;

  result = qword_10149C730;
  if (!qword_10149C730)
  {
    result = swift_getWitnessTable(byte_100E2EA34, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C730);
  }
  return result;
}

uint64_t sub_10014EAE8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10014ECB0();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_10014EB24@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490F80, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4CD0, (uint64_t)sub_10014DF80, a1);
}

uint64_t sub_10014EB48()
{
  return sub_100010D70(&qword_10149C738, &qword_10149C740, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10014EB74(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014E734();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10014EBB0()
{
  unint64_t result;

  result = qword_10149C748;
  if (!qword_10149C748)
  {
    result = swift_getWitnessTable(byte_100E2EA64, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, (unint64_t *)&qword_10149C748);
  }
  return result;
}

uint64_t sub_10014EBF4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014ECB0();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10014EC2C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014EAA4();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_10014EC68()
{
  unint64_t result;

  result = qword_10149C750;
  if (!qword_10149C750)
  {
    result = swift_getWitnessTable(byte_100E2EACC, &type metadata for DirectionsWakeDeviceQuery);
    atomic_store(result, (unint64_t *)&qword_10149C750);
  }
  return result;
}

unint64_t sub_10014ECB0()
{
  unint64_t result;

  result = qword_10149C758[0];
  if (!qword_10149C758[0])
  {
    result = swift_getWitnessTable(byte_100E2E864, &type metadata for DirectionsWakeDeviceEntity);
    atomic_store(result, qword_10149C758);
  }
  return result;
}

uint64_t sub_10014ECF4(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10014ED4C, 0, 0);
}

uint64_t sub_10014ED4C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149C6C8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x8000000100E4C8C0);
  v3 = sub_100010D70(&qword_10149C7C8, &qword_10149C7D0, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149C7B8, 0, &unk_10149C7C0, 0, &type metadata for DirectionsWakeDeviceEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014EE08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014E77C();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_10014EE74()
{
  unint64_t result;

  result = qword_10149C770;
  if (!qword_10149C770)
  {
    result = swift_getWitnessTable(byte_100E2EB5C, &type metadata for DirectionsWakeDeviceQuery);
    atomic_store(result, (unint64_t *)&qword_10149C770);
  }
  return result;
}

unint64_t sub_10014EEBC()
{
  unint64_t result;

  result = qword_10149C778[0];
  if (!qword_10149C778[0])
  {
    result = swift_getWitnessTable("]o7", &type metadata for DirectionsWakeDeviceQuery);
    atomic_store(result, qword_10149C778);
  }
  return result;
}

uint64_t sub_10014EF00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014E77C();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10014EF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014E77C();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10014EFD8()
{
  unint64_t result;

  result = qword_10149C790;
  if (!qword_10149C790)
  {
    result = swift_getWitnessTable("Eo7", &type metadata for DirectionsWakeDeviceQuery);
    atomic_store(result, (unint64_t *)&qword_10149C790);
  }
  return result;
}

unint64_t sub_10014F020()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149C798;
  if (!qword_10149C798)
  {
    v1 = sub_10000E5D4(qword_10149C7A0);
    v2 = sub_10014EA5C();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149C798);
  }
  return result;
}

uint64_t sub_10014F084(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014E89C();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for DirectionsWakeDeviceQuery()
{
  return &type metadata for DirectionsWakeDeviceQuery;
}

ValueMetadata *type metadata accessor for DirectionsWakeDeviceEntity()
{
  return &type metadata for DirectionsWakeDeviceEntity;
}

ValueMetadata *type metadata accessor for DirectionsWakeDeviceEntity.UpdateIntent_value()
{
  return &type metadata for DirectionsWakeDeviceEntity.UpdateIntent_value;
}

uint64_t sub_10014F120()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149C7D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100E4C970);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_10014E734();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000003ALL, 0x8000000100E4C9A0);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_10014F448@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

unint64_t sub_10014F458()
{
  unint64_t result;

  result = qword_10149C7E8;
  if (!qword_10149C7E8)
  {
    result = swift_getWitnessTable("aq7", &type metadata for AvoidHillsInCyclingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C7E8);
  }
  return result;
}

uint64_t sub_10014F49C()
{
  return sub_100010D70(&qword_10149C7F0, &qword_10149C7F8, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10014F4C8()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4D20);
  sub_10000E918(v20, (uint64_t)qword_1014D4D20);
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x8000000100E4CA50);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "A setting to avoid hills when cycling", 37, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_10014F6DC(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4D38);
  sub_10000E918(v1, (uint64_t)qword_1014D4D38);
  return LocalizedStringResource.init(stringLiteral:)(0xD00000000000001DLL, 0x8000000100E4CB90);
}

uint64_t sub_10014F73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4D50);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4D50);
  IntentDescription.init(stringLiteral:)(0xD000000000000041, 0x8000000100E4CB40);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_10014F7C4()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E2F1C0);
  qword_1014D4D68 = result;
  return result;
}

uint64_t sub_10014F7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_10014F804, 0, 0);
}

uint64_t sub_10014F804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101490FB8 != -1)
    swift_once(&qword_101490FB8, sub_10014F7C4);
  v2 = qword_1014D4D68;
  *(_QWORD *)(v0 + 80) = qword_1014D4D68;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149C8F8, &qword_10149C900, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_10014F904;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_10014F904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_10014F984;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10014F984()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4D68;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_10014FA18()
{
  double result;

  if (qword_101490FB8 != -1)
    swift_once(&qword_101490FB8, sub_10014F7C4);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_10014FA5C()
{
  unint64_t result;

  result = qword_10149C800;
  if (!qword_10149C800)
  {
    result = swift_getWitnessTable("Iq7", &type metadata for AvoidHillsInCyclingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C800);
  }
  return result;
}

unint64_t sub_10014FAA4()
{
  unint64_t result;

  result = qword_10149C808;
  if (!qword_10149C808)
  {
    result = swift_getWitnessTable("1q7", &type metadata for AvoidHillsInCyclingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149C808);
  }
  return result;
}

uint64_t sub_10014FAE8(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_101069D9C, 1) + 8);
}

uint64_t sub_10014FB0C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10014F458();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10014FB4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490FA8, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4D38, (uint64_t)sub_10014F6DC, a1);
}

uint64_t sub_10014FB70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101490FB0 != -1)
    swift_once(&qword_101490FB0, sub_10014F73C);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4D50);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_10014FBD0(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149C914);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_10014F804, 0, 0);
}

uint64_t sub_10014FC38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100150724();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10014FC5C()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_10014FC7C()
{
  unint64_t result;

  result = qword_10149C818;
  if (!qword_10149C818)
  {
    result = swift_getWitnessTable(byte_100E2EDF4, &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C818);
  }
  return result;
}

unint64_t sub_10014FCC4()
{
  unint64_t result;

  result = qword_10149C820;
  if (!qword_10149C820)
  {
    result = swift_getWitnessTable(byte_100E2EFEC, &type metadata for AvoidHillsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149C820);
  }
  return result;
}

unint64_t sub_10014FD0C()
{
  unint64_t result;

  result = qword_10149C828;
  if (!qword_10149C828)
  {
    result = swift_getWitnessTable(byte_100E2EE4C, &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C828);
  }
  return result;
}

unint64_t sub_10014FD54()
{
  unint64_t result;

  result = qword_10149C830;
  if (!qword_10149C830)
  {
    result = swift_getWitnessTable(byte_100E2EE84, &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C830);
  }
  return result;
}

unint64_t sub_10014FD9C()
{
  unint64_t result;

  result = qword_10149C838;
  if (!qword_10149C838)
  {
    result = swift_getWitnessTable(byte_100E2EEB4, &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C838);
  }
  return result;
}

unint64_t sub_10014FDE4()
{
  unint64_t result;

  result = qword_10149C840;
  if (!qword_10149C840)
  {
    result = swift_getWitnessTable(byte_100E2F064, &type metadata for AvoidHillsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149C840);
  }
  return result;
}

uint64_t sub_10014FE28(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10014FE40, 0, 0);
}

uint64_t sub_10014FE40()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  id v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)CyclePreferences), "initWithDefaults:", v2);

  LOBYTE(v2) = objc_msgSend(v3, "avoidHills");
  *v1 = (_BYTE)v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014FEDC(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_10014FEF8, 0, 0);
}

uint64_t sub_10014FEF8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  int BOOL;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)CyclePreferences), "initWithDefaults:", v2);

  objc_msgSend(v3, "setAvoidHills:", v1);
  objc_msgSend(v3, "synchronize");
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10014FFCC()
{
  unint64_t result;

  result = qword_10149C848;
  if (!qword_10149C848)
  {
    result = swift_getWitnessTable(byte_100E2EEEC, &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C848);
  }
  return result;
}

unint64_t sub_100150014()
{
  unint64_t result;

  result = qword_10149C850;
  if (!qword_10149C850)
  {
    result = swift_getWitnessTable("}p7", &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C850);
  }
  return result;
}

unint64_t sub_10015005C()
{
  unint64_t result;

  result = qword_10149C858;
  if (!qword_10149C858)
  {
    result = swift_getWitnessTable("ep7", &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C858);
  }
  return result;
}

unint64_t sub_1001500A4()
{
  unint64_t result;

  result = qword_10149C860;
  if (!qword_10149C860)
  {
    result = swift_getWitnessTable("Mp7", &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C860);
  }
  return result;
}

uint64_t sub_1001500E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1001502B0();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100150124@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101490FA0, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4D20, (uint64_t)sub_10014F4C8, a1);
}

uint64_t sub_100150148()
{
  return sub_100010D70(&qword_10149C868, &qword_10149C870, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_100150174(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10014FC7C();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001501B0()
{
  unint64_t result;

  result = qword_10149C878;
  if (!qword_10149C878)
  {
    result = swift_getWitnessTable("5p7", &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, (unint64_t *)&qword_10149C878);
  }
  return result;
}

uint64_t sub_1001501F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001502B0();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_10015022C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001500A4();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100150268()
{
  unint64_t result;

  result = qword_10149C880;
  if (!qword_10149C880)
  {
    result = swift_getWitnessTable(byte_100E2F02C, &type metadata for AvoidHillsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149C880);
  }
  return result;
}

unint64_t sub_1001502B0()
{
  unint64_t result;

  result = qword_10149C888[0];
  if (!qword_10149C888[0])
  {
    result = swift_getWitnessTable(byte_100E2EDC4, &type metadata for AvoidHillsInCyclingEntity);
    atomic_store(result, qword_10149C888);
  }
  return result;
}

uint64_t sub_1001502F4(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10015034C, 0, 0);
}

uint64_t sub_10015034C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149C7F8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x8000000100E4CA50);
  v3 = sub_100010D70(&qword_10149C8F8, &qword_10149C900, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149C8E8, 0, &unk_10149C8F0, 0, &type metadata for AvoidHillsInCyclingEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100150408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014FCC4();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_100150474()
{
  unint64_t result;

  result = qword_10149C8A0;
  if (!qword_10149C8A0)
  {
    result = swift_getWitnessTable(byte_100E2F0BC, &type metadata for AvoidHillsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149C8A0);
  }
  return result;
}

unint64_t sub_1001504BC()
{
  unint64_t result;

  result = qword_10149C8A8[0];
  if (!qword_10149C8A8[0])
  {
    result = swift_getWitnessTable(byte_100E2F11C, &type metadata for AvoidHillsInCyclingQuery);
    atomic_store(result, qword_10149C8A8);
  }
  return result;
}

uint64_t sub_100150504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014FCC4();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_100150570(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10014FCC4();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1001505DC()
{
  unint64_t result;

  result = qword_10149C8C0;
  if (!qword_10149C8C0)
  {
    result = swift_getWitnessTable(byte_100E2F144, &type metadata for AvoidHillsInCyclingQuery);
    atomic_store(result, (unint64_t *)&qword_10149C8C0);
  }
  return result;
}

unint64_t sub_100150624()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149C8C8;
  if (!qword_10149C8C8)
  {
    v1 = sub_10000E5D4(qword_10149C8D0);
    v2 = sub_10015005C();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149C8C8);
  }
  return result;
}

uint64_t sub_100150688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10014FDE4();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidHillsInCyclingQuery()
{
  return &type metadata for AvoidHillsInCyclingQuery;
}

ValueMetadata *type metadata accessor for AvoidHillsInCyclingEntity.UpdateIntent_value()
{
  return &type metadata for AvoidHillsInCyclingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidHillsInCyclingEntity()
{
  return &type metadata for AvoidHillsInCyclingEntity;
}

uint64_t sub_100150724()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149C908);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020, 0x8000000100E4CAD0);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_10014FC7C();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000003ALL, 0x8000000100E4CB00);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_100150A4C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for CuratedGuideListView()
{
  return &type metadata for CuratedGuideListView;
}

ValueMetadata *type metadata accessor for CuratedGuideView()
{
  return &type metadata for CuratedGuideView;
}

uint64_t sub_100150A78(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101069E30, 1);
}

double sub_100150A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double result;
  _OWORD v17[2];
  uint64_t v18;

  v0 = sub_100008B04(&qword_10149CA08);
  v1 = swift_allocObject(v0, 80, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F50;
  static Color.white.getter(v1);
  v2 = Color.opacity(_:)(1.0);
  swift_release();
  v3 = Gradient.Stop.init(color:location:)(v2, 0.0);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  static Color.white.getter(v3);
  v5 = Color.opacity(_:)(1.0);
  swift_release();
  v6 = Gradient.Stop.init(color:location:)(v5, 0.25);
  *(_QWORD *)(v1 + 48) = v6;
  *(_QWORD *)(v1 + 56) = v7;
  static Color.white.getter(v6);
  v8 = Color.opacity(_:)(0.0);
  swift_release();
  *(_QWORD *)(v1 + 64) = Gradient.Stop.init(color:location:)(v8, 0.65);
  *(_QWORD *)(v1 + 72) = v9;
  v10 = Gradient.init(stops:)(v1);
  v11 = static UnitPoint.bottom.getter();
  v13 = v12;
  v14 = static UnitPoint.top.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v17, v10, v11, v13, v14, v15);
  result = *(double *)v17;
  xmmword_1014D4D70 = v17[0];
  *(_OWORD *)&qword_1014D4D80 = v17[1];
  qword_1014D4D90 = v18;
  return result;
}

double sub_100150BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double result;
  _OWORD v14[2];
  uint64_t v15;

  v0 = sub_100008B04(&qword_10149CA08);
  v1 = swift_allocObject(v0, 64, 7);
  *(_OWORD *)(v1 + 16) = xmmword_100E22F70;
  static Color.black.getter(v1);
  v2 = Color.opacity(_:)(0.4);
  swift_release();
  v3 = Gradient.Stop.init(color:location:)(v2, 0.0);
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v4;
  static Color.black.getter(v3);
  v5 = Color.opacity(_:)(0.0);
  swift_release();
  *(_QWORD *)(v1 + 48) = Gradient.Stop.init(color:location:)(v5, 0.5);
  *(_QWORD *)(v1 + 56) = v6;
  v7 = Gradient.init(stops:)(v1);
  v8 = static UnitPoint.bottom.getter();
  v10 = v9;
  v11 = static UnitPoint.top.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)(v14, v7, v8, v10, v11, v12);
  result = *(double *)v14;
  xmmword_1014D4D98 = v14[0];
  *(_OWORD *)algn_1014D4DA8 = v14[1];
  qword_1014D4DB8 = v15;
  return result;
}

uint64_t sub_100150CD8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v74 = a3;
  v5 = type metadata accessor for Divider(0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin(v5);
  v67 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100008B04(&qword_1014933B8);
  __chkstk_darwin(v69);
  v68 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_10149C918);
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  __chkstk_darwin(v8);
  v66 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04(&qword_10149C920);
  __chkstk_darwin(v10);
  v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v65 - v14;
  v16 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v16);
  v18 = (_OWORD *)((char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = sub_100008B04(&qword_10149C928);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_100008B04(&qword_10149C930);
  __chkstk_darwin(v22);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v25);
  v28 = (char *)&v65 - v27;
  *v21 = static Alignment.bottomLeading.getter(v26);
  v21[1] = v29;
  v30 = (uint64_t)v21 + *(int *)(sub_100008B04(&qword_10149C938) + 44);
  v65 = a2;
  sub_1001511CC(a1, a2, v30);
  v31 = (char *)v18 + *(int *)(v16 + 20);
  v32 = enum case for RoundedCornerStyle.continuous(_:);
  v33 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
  __asm { FMOV            V0.2D, #10.0 }
  *v18 = _Q0;
  v39 = (uint64_t)&v24[*(int *)(v22 + 36)];
  sub_10015553C((uint64_t)v18, v39);
  *(_WORD *)(v39 + *(int *)(sub_100008B04(&qword_101494DD0) + 36)) = 256;
  sub_10000C1FC((uint64_t)v21, (uint64_t)v24, &qword_10149C928);
  sub_100155580((uint64_t)v18);
  sub_100010CC4((uint64_t)v21, &qword_10149C928);
  v40 = sub_1000207BC((uint64_t)v24, (uint64_t)v28, &qword_10149C930);
  if (a1)
  {
    v41 = *(_QWORD *)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_metrics];
    if (v41 && (*(_BYTE *)(v41 + OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_showsDivider) & 1) != 0)
    {
      v42 = v67;
      v43 = Divider.init()(v40);
      v44 = static Edge.Set.leading.getter(v43);
      v45 = EdgeInsets.init(_all:)(16.0);
      v47 = v46;
      v49 = v48;
      v51 = v50;
      v53 = v70;
      v52 = v71;
      v54 = (uint64_t)v68;
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v68, v42, v71);
      v55 = v69;
      v56 = v54 + *(int *)(v69 + 36);
      *(_BYTE *)v56 = v44;
      *(double *)(v56 + 8) = v45;
      *(_QWORD *)(v56 + 16) = v47;
      *(_QWORD *)(v56 + 24) = v49;
      *(_QWORD *)(v56 + 32) = v51;
      *(_BYTE *)(v56 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v52);
      v57 = sub_1001555BC();
      v58 = (uint64_t)v66;
      View.accessibilityIdentifier(_:)(0x6F74617261706553, 0xE900000000000072, v55, v57);
      sub_100010CC4(v54, &qword_1014933B8);
      sub_1000207BC(v58, (uint64_t)v15, &qword_10149C918);
      v59 = 0;
    }
    else
    {
      v59 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v15, v59, 1, v73);
    sub_10000C1FC((uint64_t)v28, (uint64_t)v24, &qword_10149C930);
    sub_10000C1FC((uint64_t)v15, (uint64_t)v12, &qword_10149C920);
    v60 = v74;
    sub_10000C1FC((uint64_t)v24, v74, &qword_10149C930);
    v61 = sub_100008B04(&qword_10149C940);
    sub_10000C1FC((uint64_t)v12, v60 + *(int *)(v61 + 48), &qword_10149C920);
    sub_100010CC4((uint64_t)v15, &qword_10149C920);
    sub_100010CC4((uint64_t)v28, &qword_10149C930);
    sub_100010CC4((uint64_t)v12, &qword_10149C920);
    return sub_100010CC4((uint64_t)v24, &qword_10149C930);
  }
  else
  {
    v63 = type metadata accessor for CuratedGuideViewModel(0);
    v64 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, v65, v63, v64);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001511CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  char *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  char *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  double v51;
  double v52;
  char *v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  double v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t result;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  int v138;
  double v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _OWORD v170[3];
  uint64_t v171;
  unsigned __int8 v172;
  uint64_t v173;
  unsigned __int8 v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned __int8 v178;
  uint64_t v179;
  unsigned __int8 v180;
  uint64_t v181;
  uint64_t v182;
  double v183;
  uint64_t v184;
  uint64_t v185;
  unsigned __int8 v186;
  uint64_t v187;
  uint64_t v188;

  v164 = a2;
  v169 = a3;
  v4 = sub_100008B04(&qword_10149C958);
  __chkstk_darwin(v4);
  v163 = (uint64_t *)((char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v160 = sub_100008B04(&qword_10149C960);
  __chkstk_darwin(v160);
  v165 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_100008B04(&qword_10149C968);
  __chkstk_darwin(v162);
  v168 = (uint64_t)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v167 = (uint64_t)&v133 - v9;
  v158 = type metadata accessor for Image.ResizingMode(0);
  v156 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v11 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04(&qword_10149C970);
  __chkstk_darwin(v12);
  v14 = (char *)&v133 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008B04(&qword_10149C978);
  __chkstk_darwin(v15);
  v166 = (uint64_t)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v133 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v133 - v21;
  if (a1)
  {
    v23 = (void *)objc_opt_self(MKPlaceCollectionImageProvider);
    v161 = a1;
    v24 = a1;
    v157 = v23;
    v25 = objc_msgSend(v23, "sharedInstance");
    v26 = objc_msgSend(v25, "joeColorForCuratedCollection:", *(_QWORD *)&v24[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection]);

    v27 = Color.init(_:)(v26);
    v183 = COERCE_DOUBLE(swift_getKeyPath(&unk_100E2F2C8));
    v184 = v27;
    v28 = sub_100008B04(&qword_101494DF0);
    v29 = sub_100063334();
    View.accessibilityIdentifier(_:)(0xD000000000000010, 0x8000000100E4CBB0, v28, v29);
    swift_release();
    swift_release();
    KeyPath = swift_getKeyPath(&unk_100E2F300);
    v31 = swift_getKeyPath(&unk_100E2F328);
    v32 = v24;
    static Published.subscript.getter(&v183, v32, KeyPath, v31);

    swift_release();
    swift_release();
    v33 = v183 + -32.0 + -6.0;
    v34 = swift_getKeyPath(&unk_100E2F300);
    v35 = swift_getKeyPath(&unk_100E2F328);
    v36 = v32;
    static Published.subscript.getter(&v183, v36, v34, v35);

    swift_release();
    v37 = swift_release();
    v38 = v183 * 0.656509695;
    v39 = static Alignment.center.getter(v37);
    _FrameLayout.init(width:height:alignment:)(v170, *(_QWORD *)&v33, 0, *(_QWORD *)&v38, 0, v39, v40);
    sub_10000C1FC((uint64_t)v14, (uint64_t)v19, &qword_10149C970);
    v41 = &v19[*(int *)(v15 + 36)];
    v42 = v170[1];
    *(_OWORD *)v41 = v170[0];
    *((_OWORD *)v41 + 1) = v42;
    *((_OWORD *)v41 + 2) = v170[2];
    sub_100010CC4((uint64_t)v14, &qword_10149C970);
    sub_1000207BC((uint64_t)v19, (uint64_t)v22, &qword_10149C978);
    v43 = swift_getKeyPath(&unk_100E2F348);
    v44 = swift_getKeyPath(&unk_100E2F370);
    v45 = v36;
    static Published.subscript.getter(&v183, v45, v43, v44);

    swift_release();
    swift_release();
    v46 = v183;
    v47 = (uint64_t)v22;
    if (v183 == 0.0)
    {
      v159 = 0;
      v158 = 0;
      v156 = 0;
      v155 = 0;
      v154 = 0;
      v153 = 0;
      v152 = 0;
      v151 = 0;
    }
    else
    {
      v48 = v156;
      v49 = v158;
      (*(void (**)(char *, _QWORD, uint64_t))(v156 + 104))(v11, enum case for Image.ResizingMode.stretch(_:), v158);
      v159 = Image.resizable(capInsets:resizingMode:)(v11, *(_QWORD *)&v46, 0.0, 0.0, 0.0, 0.0);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);
      v50 = v45;
      v51 = sub_1000D4C00();

      v52 = v51;
      v53 = v50;
      v54 = sub_1000D4CFC();

      v56 = static Alignment.center.getter(v55);
      _FrameLayout.init(width:height:alignment:)(&v171, *(_QWORD *)&v52, 0, *(_QWORD *)&v54, 0, v56, v57);
      v158 = v171;
      v156 = v172;
      v155 = v173;
      v154 = v174;
      v153 = v175;
      v152 = v176;
      swift_release();
      v151 = 1;
    }
    v58 = (uint64_t)v165;
    v59 = v45;
    v60 = objc_msgSend(v157, "sharedInstance");
    v61 = objc_msgSend(v60, "joeColorForCuratedCollection:", *(_QWORD *)&v59[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection]);

    v165 = (char *)Color.init(_:)(v61);
    v157 = (id)swift_getKeyPath(&unk_100E2F2C8);
    v62 = swift_getKeyPath(&unk_100E2F300);
    v63 = swift_getKeyPath(&unk_100E2F328);
    v64 = v59;
    static Published.subscript.getter(&v183, v64, v62, v63);

    swift_release();
    swift_release();
    v65 = v183 + -32.0 + -6.0;
    v66 = swift_getKeyPath(&unk_100E2F300);
    v67 = swift_getKeyPath(&unk_100E2F328);
    v68 = v64;
    static Published.subscript.getter(&v183, v68, v66, v67);

    swift_release();
    v69 = swift_release();
    v70 = v183 * 0.656509695;
    v71 = static Alignment.center.getter(v69);
    _FrameLayout.init(width:height:alignment:)(&v177, *(_QWORD *)&v65, 0, *(_QWORD *)&v70, 0, v71, v72);
    v149 = v177;
    v148 = v178;
    v147 = v179;
    v146 = v180;
    v145 = v181;
    v144 = v182;
    if (qword_101490FC0 != -1)
      swift_once(&qword_101490FC0, sub_100150A88);
    v143 = *((_QWORD *)&xmmword_1014D4D70 + 1);
    v73 = unk_1014D4D88;
    v142 = qword_1014D4D80;
    v74 = qword_1014D4D90;
    v75 = qword_101490FC8;
    v150 = xmmword_1014D4D70;
    swift_bridgeObjectRetain(xmmword_1014D4D70);
    if (v75 != -1)
      swift_once(&qword_101490FC8, sub_100150BC8);
    v76 = xmmword_1014D4D98;
    v140 = xmmword_1014D4D98;
    v141 = *(__int128 *)((char *)&xmmword_1014D4D98 + 8);
    v77 = qword_1014D4DB0;
    v78 = qword_1014D4DB8;
    v79 = swift_getKeyPath(&unk_100E2F300);
    v80 = swift_getKeyPath(&unk_100E2F328);
    v81 = v68;
    swift_bridgeObjectRetain(v76);
    static Published.subscript.getter(&v183, v81, v79, v80);

    swift_release();
    swift_release();
    v82 = v183 + -32.0 + -6.0;
    v83 = swift_getKeyPath(&unk_100E2F300);
    v84 = swift_getKeyPath(&unk_100E2F328);
    v85 = v81;
    static Published.subscript.getter(&v183, v85, v83, v84);

    swift_release();
    v86 = swift_release();
    v87 = v183 * 0.656509695;
    v88 = static Alignment.center.getter(v86);
    _FrameLayout.init(width:height:alignment:)(&v183, *(_QWORD *)&v82, 0, *(_QWORD *)&v87, 0, v88, v89);
    v139 = v183;
    v138 = v184;
    v137 = v185;
    v136 = v186;
    v135 = v187;
    v134 = v188;
    v91 = static HorizontalAlignment.leading.getter(v90);
    v92 = (uint64_t)v163;
    *v163 = v91;
    *(_QWORD *)(v92 + 8) = 0x4000000000000000;
    *(_BYTE *)(v92 + 16) = 0;
    v93 = sub_100008B04(&qword_10149C980);
    v94 = sub_100151F78(v161, v164, v92 + *(int *)(v93 + 44));
    LOBYTE(v87) = static Edge.Set.leading.getter(v94);
    v95 = EdgeInsets.init(_all:)(16.0);
    v97 = v96;
    v99 = v98;
    v101 = v100;
    sub_10000C1FC(v92, v58, &qword_10149C958);
    v102 = v58 + *(int *)(v160 + 36);
    *(_BYTE *)v102 = LOBYTE(v87);
    *(double *)(v102 + 8) = v95;
    *(_QWORD *)(v102 + 16) = v97;
    *(_QWORD *)(v102 + 24) = v99;
    *(_QWORD *)(v102 + 32) = v101;
    *(_BYTE *)(v102 + 40) = 0;
    v103 = sub_100010CC4(v92, &qword_10149C958);
    LOBYTE(v87) = static Edge.Set.bottom.getter(v103);
    v104 = EdgeInsets.init(_all:)(16.0);
    v106 = v105;
    v108 = v107;
    v110 = v109;
    v111 = v168;
    sub_10000C1FC(v58, v168, &qword_10149C960);
    v112 = v111 + *(int *)(v162 + 36);
    *(_BYTE *)v112 = LOBYTE(v87);
    *(double *)(v112 + 8) = v104;
    *(_QWORD *)(v112 + 16) = v106;
    *(_QWORD *)(v112 + 24) = v108;
    *(_QWORD *)(v112 + 32) = v110;
    *(_BYTE *)(v112 + 40) = 0;
    sub_100010CC4(v58, &qword_10149C960);
    v113 = v167;
    sub_1000207BC(v111, v167, &qword_10149C968);
    v114 = v47;
    v164 = v47;
    v115 = v166;
    sub_10000C1FC(v114, v166, &qword_10149C978);
    sub_10000C1FC(v113, v111, &qword_10149C968);
    v116 = v169;
    sub_10000C1FC(v115, v169, &qword_10149C978);
    v117 = (int *)sub_100008B04(&qword_10149C988);
    v118 = v116 + v117[12];
    v119 = v158;
    *(_QWORD *)v118 = v159;
    *(_QWORD *)(v118 + 8) = v119;
    v120 = v155;
    *(_QWORD *)(v118 + 16) = v156;
    *(_QWORD *)(v118 + 24) = v120;
    v121 = v153;
    *(_QWORD *)(v118 + 32) = v154;
    *(_QWORD *)(v118 + 40) = v121;
    *(_QWORD *)(v118 + 48) = v152;
    *(_BYTE *)(v118 + 56) = v151;
    v122 = v116 + v117[16];
    v123 = v165;
    *(_QWORD *)v122 = v157;
    *(_QWORD *)(v122 + 8) = v123;
    *(_QWORD *)(v122 + 16) = v149;
    *(_BYTE *)(v122 + 24) = v148;
    *(_QWORD *)(v122 + 32) = v147;
    *(_BYTE *)(v122 + 40) = v146;
    v124 = v144;
    *(_QWORD *)(v122 + 48) = v145;
    *(_QWORD *)(v122 + 56) = v124;
    *(_QWORD *)(v122 + 64) = 0x403E000000000000;
    *(_WORD *)(v122 + 72) = 1;
    *(_BYTE *)(v122 + 74) = 0;
    v125 = v150;
    *(_QWORD *)(v122 + 80) = v150;
    v126 = v142;
    *(_QWORD *)(v122 + 88) = v143;
    *(_QWORD *)(v122 + 96) = v126;
    *(_QWORD *)(v122 + 104) = v73;
    *(_QWORD *)(v122 + 112) = v74;
    v127 = v116 + v117[20];
    v128 = v140;
    *(_QWORD *)v127 = v140;
    *(_OWORD *)(v127 + 8) = v141;
    *(_QWORD *)(v127 + 24) = v77;
    *(_QWORD *)(v127 + 32) = v78;
    *(double *)(v127 + 40) = v139;
    *(_BYTE *)(v127 + 48) = v138;
    *(_QWORD *)(v127 + 56) = v137;
    *(_BYTE *)(v127 + 64) = v136;
    v129 = v134;
    *(_QWORD *)(v127 + 72) = v135;
    *(_QWORD *)(v127 + 80) = v129;
    sub_10000C1FC(v111, v116 + v117[24], &qword_10149C968);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain(v125);
    swift_bridgeObjectRetain(v128);
    sub_100010CC4(v113, &qword_10149C968);
    sub_100010CC4(v164, &qword_10149C978);
    sub_100010CC4(v111, &qword_10149C968);
    swift_release();
    swift_bridgeObjectRelease(v125);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v128);
    return sub_100010CC4(v115, &qword_10149C978);
  }
  else
  {
    v131 = type metadata accessor for CuratedGuideViewModel(0);
    v132 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, v164, v131, v132);
    __break(1u);
  }
  return result;
}

uint64_t sub_100151F78@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  unint64_t v61;
  char *v62;
  uint64_t OpaqueTypeConformance2;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  __n128 v95;
  double v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t result;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;

  v131 = a2;
  v134 = a3;
  v4 = sub_100008B04(&qword_10149C990);
  __chkstk_darwin(v4);
  v135 = (uint64_t)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v132 = (uint64_t *)((char *)&v116 - v7);
  v8 = sub_100008B04(&qword_10149C998);
  __chkstk_darwin(v8);
  v133 = (uint64_t)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v130 = (char *)&v116 - v11;
  v118 = sub_100008B04((uint64_t *)&unk_10149D2B0);
  __chkstk_darwin(v118);
  v121 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008B04(&qword_10149C9A0);
  __chkstk_darwin(v13);
  v119 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100008B04(&qword_10149C9A8);
  __chkstk_darwin(v123);
  v16 = (char *)&v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008B04(&qword_10149C9B0);
  v125 = *(_QWORD *)(v17 - 8);
  v126 = v17;
  __chkstk_darwin(v17);
  v124 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100008B04(&qword_10149C9B8);
  __chkstk_darwin(v19);
  v129 = (uint64_t)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v122 = (char *)&v116 - v22;
  __chkstk_darwin(v23);
  v128 = (uint64_t)&v116 - v24;
  if (a1)
  {
    v25 = a1;
    v117 = v25;
    v127 = a1;
    v26 = sub_1000D4828();
    v28 = v27;

    v136 = v26;
    v137 = v28;
    v120 = sub_10006C008();
    v29 = Text.init<A>(_:)(&v136, &type metadata for String, v120);
    v31 = v30;
    v33 = v32;
    v35 = v34 & 1;
    v36 = static Font.caption.getter();
    v37 = Text.font(_:)(v36, v29, v31, v35, v33);
    v39 = v38;
    v41 = v40;
    v43 = v42;
    swift_release();
    sub_10006B77C(v29, v31, v35);
    swift_bridgeObjectRelease(v33);
    v136 = static Color.white.getter(v44);
    v45 = Text.foregroundStyle<A>(_:)(&v136, v37, v39, v41 & 1, v43, &type metadata for Color, &protocol witness table for Color);
    v47 = v46;
    v49 = v48;
    LOBYTE(v31) = v50 & 1;
    sub_10006B77C(v37, v39, v41 & 1);
    swift_release();
    v51 = swift_bridgeObjectRelease(v43);
    v52 = enum case for Text.Case.uppercase(_:);
    v53 = type metadata accessor for Text.Case(0, v51);
    v54 = *(_QWORD *)(v53 - 8);
    v55 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 104))(v119, v52, v53);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v53);
    KeyPath = swift_getKeyPath(&unk_100E2F390);
    v57 = (uint64_t)v121;
    sub_10000C1FC(v55, (uint64_t)&v121[*(int *)(v118 + 28)], &qword_10149C9A0);
    *(_QWORD *)v57 = KeyPath;
    v58 = v123;
    sub_10000C1FC(v57, (uint64_t)&v16[*(int *)(v123 + 36)], (uint64_t *)&unk_10149D2B0);
    *(_QWORD *)v16 = v45;
    *((_QWORD *)v16 + 1) = v47;
    v16[16] = v31;
    *((_QWORD *)v16 + 3) = v49;
    swift_bridgeObjectRetain(v49);
    sub_10006BB40(v45, v47, v31);
    sub_100010CC4(v57, (uint64_t *)&unk_10149D2B0);
    sub_100010CC4(v55, &qword_10149C9A0);
    sub_10006B77C(v45, v47, v31);
    swift_bridgeObjectRelease(v49);
    v60 = static Font.Weight.medium.getter(v59);
    v61 = sub_10015571C();
    v62 = v124;
    View.fontWeight(_:)(*(_QWORD *)&v60, 0, v58, v61);
    sub_100010CC4((uint64_t)v16, &qword_10149C9A8);
    v136 = v58;
    v137 = v61;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v136, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v64 = (uint64_t)v122;
    v65 = v126;
    View.accessibilityIdentifier(_:)(0xD000000000000015, 0x8000000100E4CBD0, v126, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v125 + 8))(v62, v65);
    v66 = v128;
    sub_1000207BC(v64, v128, &qword_10149C9B8);
    v67 = *(void **)&v117[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    v68 = v117;
    v69 = objc_msgSend(v67, "collectionTitle");
    v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(v69);
    v72 = v71;

    v136 = v70;
    v137 = v72;
    v73 = Text.init<A>(_:)(&v136, &type metadata for String, v120);
    v75 = v74;
    v77 = v76;
    v79 = v78 & 1;
    v80 = static Font.title3.getter();
    v81 = Text.font(_:)(v80, v73, v75, v79, v77);
    v83 = v82;
    LOBYTE(v57) = v84;
    v86 = v85;
    swift_release();
    LOBYTE(v47) = v57 & 1;
    sub_10006B77C(v73, v75, v79);
    swift_bridgeObjectRelease(v77);
    v136 = static Color.white.getter(v87);
    v88 = Text.foregroundStyle<A>(_:)(&v136, v81, v83, v57 & 1, v86, &type metadata for Color, &protocol witness table for Color);
    v90 = v89;
    v92 = v91;
    v94 = v93 & 1;
    sub_10006B77C(v81, v83, v47);
    swift_release();
    v95 = swift_bridgeObjectRelease(v86);
    v96 = static Font.Weight.semibold.getter(v95);
    v97 = Text.fontWeight(_:)(*(_QWORD *)&v96, 0, v88, v90, v94, v92);
    v99 = v98;
    v101 = v100;
    LOBYTE(v86) = v102 & 1;
    sub_10006B77C(v88, v90, v94);
    swift_bridgeObjectRelease(v92);
    v136 = v97;
    v137 = v99;
    v138 = v86;
    v139 = v101;
    v103 = (uint64_t)v130;
    View.accessibilityIdentifier(_:)(0x7469546564697547, 0xEA0000000000656CLL, &type metadata for Text, &protocol witness table for Text);
    sub_10006B77C(v97, v99, v86);
    v104 = swift_bridgeObjectRelease(v101);
    v105 = static VerticalAlignment.center.getter(v104);
    v106 = (uint64_t)v132;
    *v132 = v105;
    *(_QWORD *)(v106 + 8) = 0x4014000000000000;
    *(_BYTE *)(v106 + 16) = 0;
    v107 = sub_100008B04(&qword_10149C9D0);
    sub_100152814(v127, v131, v106 + *(int *)(v107 + 44));
    v108 = v129;
    sub_10000C1FC(v66, v129, &qword_10149C9B8);
    v109 = v133;
    sub_10000C1FC(v103, v133, &qword_10149C998);
    v110 = v135;
    sub_10000C1FC(v106, v135, &qword_10149C990);
    v111 = v134;
    sub_10000C1FC(v108, v134, &qword_10149C9B8);
    v112 = sub_100008B04(&qword_10149C9D8);
    sub_10000C1FC(v109, v111 + *(int *)(v112 + 48), &qword_10149C998);
    sub_10000C1FC(v110, v111 + *(int *)(v112 + 64), &qword_10149C990);
    sub_100010CC4(v106, &qword_10149C990);
    sub_100010CC4(v103, &qword_10149C998);
    sub_100010CC4(v66, &qword_10149C9B8);
    sub_100010CC4(v110, &qword_10149C990);
    sub_100010CC4(v109, &qword_10149C998);
    return sub_100010CC4(v108, &qword_10149C9B8);
  }
  else
  {
    v114 = type metadata accessor for CuratedGuideViewModel(0);
    v115 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, v131, v114, v115);
    __break(1u);
  }
  return result;
}

uint64_t sub_100152814@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t KeyPath;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _OWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t result;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;

  v6 = sub_100008B04(&qword_10149C9E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v117 = (char *)&v103 - v10;
  v111 = sub_100008B04(&qword_101494DD0);
  __chkstk_darwin(v111);
  v113 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v108);
  v112 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Image.ResizingMode(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100008B04(&qword_101495858);
  __chkstk_darwin(v110);
  v18 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100008B04(&qword_10149C9E8);
  v114 = *(_QWORD *)(v19 - 8);
  v115 = v19;
  __chkstk_darwin(v19);
  v109 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100008B04(&qword_10149C9F0);
  __chkstk_darwin(v21);
  v116 = (uint64_t)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v103 - v24;
  if (a1)
  {
    v118 = a3;
    v119 = v8;
    KeyPath = swift_getKeyPath(&unk_100E2F3C0);
    v27 = swift_getKeyPath(&unk_100E2F3E8);
    v28 = a1;
    static Published.subscript.getter(&v125, v28, KeyPath, v27);

    swift_release();
    swift_release();
    v29 = v125;
    v120 = v25;
    if (v125)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for Image.ResizingMode.stretch(_:), v13);
      v30 = Image.resizable(capInsets:resizingMode:)(v16, v29, 0.0, 0.0, 0.0, 0.0);
      v31 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      v32 = static Alignment.center.getter(v31);
      _FrameLayout.init(width:height:alignment:)(&v125, 0x402E000000000000, 0, 0x402E000000000000, 0, v32, v33);
      v34 = v125;
      v107 = v126;
      v106 = v127;
      v35 = v128;
      v105 = v129;
      v104 = v130;
      v36 = v112;
      v37 = &v112[*(int *)(v108 + 20)];
      v38 = enum case for RoundedCornerStyle.continuous(_:);
      v39 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
      __asm { FMOV            V0.2D, #4.0 }
      *v36 = _Q0;
      v45 = v113;
      sub_10015553C((uint64_t)v36, v113);
      *(_WORD *)(v45 + *(int *)(v111 + 36)) = 256;
      v46 = v110;
      sub_10000C1FC(v45, (uint64_t)&v18[*(int *)(v110 + 36)], &qword_101494DD0);
      *(_QWORD *)v18 = v30;
      *((_QWORD *)v18 + 1) = v34;
      v18[16] = v107;
      *((_QWORD *)v18 + 3) = v106;
      v18[32] = v35;
      v25 = v120;
      v47 = v104;
      *((_QWORD *)v18 + 5) = v105;
      *((_QWORD *)v18 + 6) = v47;
      swift_retain();
      sub_100010CC4(v45, &qword_101494DD0);
      sub_100155580((uint64_t)v36);
      swift_release();
      v48 = sub_1001557A8();
      v49 = (uint64_t)v109;
      View.accessibilityIdentifier(_:)(0xD000000000000013, 0x8000000100E4CC10, v46, v48);
      swift_release();
      sub_100010CC4((uint64_t)v18, &qword_101495858);
      sub_1000207BC(v49, (uint64_t)v25, &qword_10149C9E8);
      v50 = 0;
    }
    else
    {
      v50 = 1;
    }
    v51 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56))(v25, v50, 1, v115);
    v52 = *(void **)&v28[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    v53 = v28;
    v54 = objc_msgSend(v52, "publisherAttribution");
    if (v54
      && (v55 = v54,
          v56 = objc_msgSend(v54, "displayName"),
          swift_unknownObjectRelease(v55),
          v56))
    {
      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v59 = v58;

      v121 = v57;
      v122 = v59;
      v60 = sub_10006C008();
      v61 = Text.init<A>(_:)(&v121, &type metadata for String, v60);
      v63 = v62;
      v65 = v64;
      v67 = v66 & 1;
      v68 = static Font.subheadline.getter(v61);
      v69 = Text.font(_:)(v68, v61, v63, v67, v65);
      v71 = v70;
      v73 = v72;
      v75 = v74;
      swift_release();
      v76 = v73 & 1;
      sub_10006B77C(v61, v63, v67);
      swift_bridgeObjectRelease(v65);
      v121 = static Color.white.getter(v77);
      v78 = Text.foregroundStyle<A>(_:)(&v121, v69, v71, v73 & 1, v75, &type metadata for Color, &protocol witness table for Color);
      v80 = v79;
      v82 = v81;
      v84 = v83 & 1;
      sub_10006B77C(v69, v71, v76);
      swift_release();
      swift_bridgeObjectRelease(v75);
      v86 = static Font.Weight.medium.getter(v85);
      v87 = Text.fontWeight(_:)(*(_QWORD *)&v86, 0, v78, v80, v84, v82);
      v89 = v88;
      v91 = v90;
      LOBYTE(v71) = v92 & 1;
      v93 = v84;
      v25 = v120;
      sub_10006B77C(v78, v80, v93);
      swift_bridgeObjectRelease(v82);
      v121 = v87;
      v122 = v89;
      v123 = v71;
      v124 = v91;
      View.accessibilityIdentifier(_:)(0xD000000000000013, 0x8000000100E4CBF0, &type metadata for Text, &protocol witness table for Text);
      sub_10006B77C(v87, v89, v71);
      swift_bridgeObjectRelease(v91);
      v94 = sub_100008B04(&qword_10149C998);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v51, 0, 1, v94);
    }
    else
    {

      v95 = sub_100008B04(&qword_10149C998);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v51, 1, 1, v95);
    }
    v96 = v116;
    sub_10000C1FC((uint64_t)v25, v116, &qword_10149C9F0);
    v97 = (uint64_t)v119;
    sub_10000C1FC(v51, (uint64_t)v119, &qword_10149C9E0);
    v98 = v118;
    sub_10000C1FC(v96, v118, &qword_10149C9F0);
    v99 = sub_100008B04(&qword_10149C9F8);
    sub_10000C1FC(v97, v98 + *(int *)(v99 + 48), &qword_10149C9E0);
    sub_100010CC4(v51, &qword_10149C9E0);
    sub_100010CC4((uint64_t)v25, &qword_10149C9F0);
    sub_100010CC4(v97, &qword_10149C9E0);
    return sub_100010CC4(v96, &qword_10149C9F0);
  }
  else
  {
    v101 = type metadata accessor for CuratedGuideViewModel(0);
    v102 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, a2, v101, v102);
    __break(1u);
  }
  return result;
}

uint64_t sub_100152FF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100150CD8(*(char **)v1, *(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_100153000@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD v48[2];

  v48[1] = a3;
  v5 = sub_100008B04(&qword_10149CA10);
  __chkstk_darwin(v5);
  v7 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_10149CA18);
  __chkstk_darwin(v8);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008B04(&qword_10149CA20);
  __chkstk_darwin(v11);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008B04(&qword_10149CA28);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v15);
  *((_QWORD *)v7 + 1) = 0x4024000000000000;
  v7[16] = 0;
  v18 = sub_100008B04(&qword_10149CA30);
  v19 = sub_1001532F0(a1, a2, (uint64_t)&v7[*(int *)(v18 + 44)]);
  LOBYTE(a1) = static Edge.Set.top.getter(v19);
  v20 = EdgeInsets.init(_all:)(16.0);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_10000C1FC((uint64_t)v7, (uint64_t)v10, &qword_10149CA10);
  v27 = &v10[*(int *)(v8 + 36)];
  *v27 = (char)a1;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  v28 = sub_100010CC4((uint64_t)v7, &qword_10149CA10);
  LOBYTE(a1) = static Edge.Set.bottom.getter(v28);
  v29 = EdgeInsets.init(_all:)(0.0);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_10000C1FC((uint64_t)v10, (uint64_t)v13, &qword_10149CA18);
  v36 = &v13[*(int *)(v11 + 36)];
  *v36 = (char)a1;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  v37 = sub_100010CC4((uint64_t)v10, &qword_10149CA18);
  LOBYTE(v11) = static Edge.Set.trailing.getter(v37);
  v38 = EdgeInsets.init(_all:)(16.0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_10000C1FC((uint64_t)v13, (uint64_t)v17, &qword_10149CA20);
  v45 = &v17[*(int *)(v14 + 36)];
  *v45 = v11;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_100010CC4((uint64_t)v13, &qword_10149CA20);
  v46 = sub_10002067C(&qword_10149CA38, &qword_10149CA28, sub_10015584C, (uint64_t)&protocol witness table for _PaddingLayout);
  View.accessibilityIdentifier(_:)(0x7242206564697547, 0xEF776569566B6369, v14, v46);
  return sub_100010CC4((uint64_t)v17, &qword_10149CA28);
}

uint64_t sub_1001532F0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v84 = a3;
  v5 = type metadata accessor for Divider(0);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin(v5);
  v75 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_100008B04(&qword_1014933B8);
  __chkstk_darwin(v74);
  v79 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_100008B04(&qword_10149CA58);
  __chkstk_darwin(v81);
  v80 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149CA60);
  v82 = *(_QWORD *)(v9 - 8);
  v83 = v9;
  __chkstk_darwin(v9);
  v78 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008B04(&qword_10149CA68);
  __chkstk_darwin(v11);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v73 - v15;
  v17 = sub_100008B04(&qword_10149CA70);
  __chkstk_darwin(v17);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100008B04(&qword_10149CA78);
  __chkstk_darwin(v20);
  v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v73 - v25;
  *(_QWORD *)v19 = static VerticalAlignment.center.getter(v24);
  *((_QWORD *)v19 + 1) = 0x4024000000000000;
  v19[16] = 0;
  v27 = (uint64_t)&v19[*(int *)(sub_100008B04(&qword_10149CA80) + 44)];
  v73 = a2;
  v28 = sub_100153848(a1, a2, v27);
  LOBYTE(a2) = static Edge.Set.vertical.getter(v28);
  v29 = EdgeInsets.init(_all:)(0.0);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_10000C1FC((uint64_t)v19, (uint64_t)v22, &qword_10149CA70);
  v36 = &v22[*(int *)(v20 + 36)];
  *v36 = a2;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100010CC4((uint64_t)v19, &qword_10149CA70);
  v37 = sub_1000207BC((uint64_t)v22, (uint64_t)v26, &qword_10149CA78);
  if (a1)
  {
    v38 = *(_QWORD *)&a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_metrics];
    if (v38)
    {
      v39 = v84;
      if ((*(_BYTE *)(v38 + OBJC_IVAR____TtC4Maps19GuideSummaryMetrics_showsDivider) & 1) != 0)
      {
        v40 = v75;
        v41 = Divider.init()(v37);
        v42 = static Edge.Set.leading.getter(v41);
        v43 = EdgeInsets.init(_all:)(16.0);
        v45 = v44;
        v47 = v46;
        v49 = v48;
        v51 = v76;
        v50 = v77;
        v52 = (uint64_t)v79;
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v79, v40, v77);
        v53 = v52 + *(int *)(v74 + 36);
        *(_BYTE *)v53 = v42;
        *(double *)(v53 + 8) = v43;
        *(_QWORD *)(v53 + 16) = v45;
        *(_QWORD *)(v53 + 24) = v47;
        *(_QWORD *)(v53 + 32) = v49;
        *(_BYTE *)(v53 + 40) = 0;
        v54 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v40, v50);
        v55 = static Edge.Set.trailing.getter(v54);
        v56 = EdgeInsets.init(_all:)(-16.0);
        v58 = v57;
        v60 = v59;
        v62 = v61;
        v63 = v80;
        sub_10000C1FC(v52, v80, &qword_1014933B8);
        v64 = v81;
        v65 = v63 + *(int *)(v81 + 36);
        *(_BYTE *)v65 = v55;
        *(double *)(v65 + 8) = v56;
        *(_QWORD *)(v65 + 16) = v58;
        *(_QWORD *)(v65 + 24) = v60;
        *(_QWORD *)(v65 + 32) = v62;
        *(_BYTE *)(v65 + 40) = 0;
        sub_100010CC4(v52, &qword_1014933B8);
        v66 = sub_10002067C(&qword_10149CA90, &qword_10149CA58, (uint64_t (*)(void))sub_1001555BC, (uint64_t)&protocol witness table for _PaddingLayout);
        v67 = (uint64_t)v78;
        View.accessibilityIdentifier(_:)(0x6F74617261706553, 0xE900000000000072, v64, v66);
        sub_100010CC4(v63, &qword_10149CA58);
        sub_1000207BC(v67, (uint64_t)v16, &qword_10149CA60);
        v68 = 0;
      }
      else
      {
        v68 = 1;
      }
    }
    else
    {
      v68 = 1;
      v39 = v84;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v16, v68, 1, v83);
    sub_10000C1FC((uint64_t)v26, (uint64_t)v22, &qword_10149CA78);
    sub_10000C1FC((uint64_t)v16, (uint64_t)v13, &qword_10149CA68);
    sub_10000C1FC((uint64_t)v22, v39, &qword_10149CA78);
    v69 = sub_100008B04(&qword_10149CA88);
    sub_10000C1FC((uint64_t)v13, v39 + *(int *)(v69 + 48), &qword_10149CA68);
    sub_100010CC4((uint64_t)v16, &qword_10149CA68);
    sub_100010CC4((uint64_t)v26, &qword_10149CA78);
    sub_100010CC4((uint64_t)v13, &qword_10149CA68);
    return sub_100010CC4((uint64_t)v22, &qword_10149CA78);
  }
  else
  {
    v71 = type metadata accessor for CuratedGuideViewModel(0);
    v72 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, v73, v71, v72);
    __break(1u);
  }
  return result;
}

uint64_t sub_100153848@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;

  v40 = a3;
  v5 = sub_100008B04(&qword_10149CA98);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v39 - v9);
  v11 = sub_100008B04(&qword_10149CAA0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008B04(&qword_10149CAA8);
  __chkstk_darwin(v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v39 - v19;
  *(_QWORD *)v13 = static HorizontalAlignment.leading.getter(v18);
  *((_QWORD *)v13 + 1) = 0x4000000000000000;
  v13[16] = 0;
  v21 = sub_100008B04(&qword_10149CAB0);
  v22 = a2;
  v23 = sub_100153AF4(a1, a2, (uint64_t)&v13[*(int *)(v21 + 44)]);
  LOBYTE(a2) = static Edge.Set.horizontal.getter(v23);
  v24 = EdgeInsets.init(_all:)(16.0);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  sub_10000C1FC((uint64_t)v13, (uint64_t)v16, &qword_10149CAA0);
  v31 = &v16[*(int *)(v14 + 36)];
  *v31 = a2;
  *((double *)v31 + 1) = v24;
  *((_QWORD *)v31 + 2) = v26;
  *((_QWORD *)v31 + 3) = v28;
  *((_QWORD *)v31 + 4) = v30;
  v31[40] = 0;
  sub_100010CC4((uint64_t)v13, &qword_10149CAA0);
  sub_1000207BC((uint64_t)v16, (uint64_t)v20, &qword_10149CAA8);
  *v10 = static Alignment.bottomLeading.getter(v32);
  v10[1] = v33;
  v34 = sub_100008B04(&qword_10149CAB8);
  sub_100154BBC(a1, v22, (uint64_t)v10 + *(int *)(v34 + 44));
  sub_10000C1FC((uint64_t)v20, (uint64_t)v16, &qword_10149CAA8);
  sub_10000C1FC((uint64_t)v10, (uint64_t)v7, &qword_10149CA98);
  v35 = v40;
  sub_10000C1FC((uint64_t)v16, v40, &qword_10149CAA8);
  v36 = sub_100008B04(&qword_10149CAC0);
  v37 = v35 + *(int *)(v36 + 48);
  *(_QWORD *)v37 = 0;
  *(_BYTE *)(v37 + 8) = 1;
  sub_10000C1FC((uint64_t)v7, v35 + *(int *)(v36 + 64), &qword_10149CA98);
  sub_100010CC4((uint64_t)v10, &qword_10149CA98);
  sub_100010CC4((uint64_t)v20, &qword_10149CAA8);
  sub_100010CC4((uint64_t)v7, &qword_10149CA98);
  return sub_100010CC4((uint64_t)v16, &qword_10149CAA8);
}

uint64_t sub_100153AF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t KeyPath;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  unint64_t v64;
  char *v65;
  uint64_t OpaqueTypeConformance2;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  __n128 v85;
  double v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t result;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  uint64_t *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char v131;
  uint64_t v132;
  __int16 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v124 = a2;
  v126 = a3;
  v4 = sub_100008B04(&qword_10149C990);
  __chkstk_darwin(v4);
  v127 = (uint64_t)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v125 = (uint64_t *)((char *)&v106 - v7);
  v8 = sub_100008B04(&qword_10149CB28);
  v120 = *(_QWORD *)(v8 - 8);
  v121 = v8;
  __chkstk_darwin(v8);
  v119 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04(&qword_10149CB30);
  __chkstk_darwin(v10);
  v123 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v122 = (uint64_t)&v106 - v13;
  v108 = sub_100008B04((uint64_t *)&unk_10149D2B0);
  __chkstk_darwin(v108);
  v111 = (uint64_t *)((char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100008B04(&qword_10149C9A0);
  __chkstk_darwin(v15);
  v109 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_100008B04(&qword_10149C9A8);
  __chkstk_darwin(v113);
  v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = sub_100008B04(&qword_10149C9B0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100008B04(&qword_10149C9B8);
  __chkstk_darwin(v20);
  v118 = (uint64_t)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v112 = (char *)&v106 - v23;
  __chkstk_darwin(v24);
  v128 = (uint64_t)&v106 - v25;
  if (a1)
  {
    v26 = a1;
    v107 = v26;
    v27 = sub_1000D4828();
    v29 = v28;

    v129 = v27;
    v130 = v29;
    v110 = sub_10006C008();
    v30 = Text.init<A>(_:)(&v129, &type metadata for String, v110);
    v32 = v31;
    v34 = v33;
    v36 = v35 & 1;
    v37 = static Font.caption.getter();
    v38 = Text.font(_:)(v37, v30, v32, v36, v34);
    v117 = a1;
    v39 = v38;
    v41 = v40;
    v43 = v42;
    v45 = v44;
    swift_release();
    v46 = v43 & 1;
    sub_10006B77C(v30, v32, v36);
    v47 = swift_bridgeObjectRelease(v34);
    LODWORD(v129) = static HierarchicalShapeStyle.secondary.getter(v47);
    v48 = Text.foregroundStyle<A>(_:)(&v129, v39, v41, v46, v45, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
    v50 = v49;
    v52 = v51;
    LOBYTE(v36) = v53 & 1;
    sub_10006B77C(v39, v41, v46);
    v54 = swift_bridgeObjectRelease(v45);
    v55 = enum case for Text.Case.uppercase(_:);
    v56 = type metadata accessor for Text.Case(0, v54);
    v57 = *(_QWORD *)(v56 - 8);
    v58 = (uint64_t)v109;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v109, v55, v56);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
    KeyPath = swift_getKeyPath(&unk_100E2F390);
    v60 = v111;
    sub_10000C1FC(v58, (uint64_t)v111 + *(int *)(v108 + 28), &qword_10149C9A0);
    *v60 = KeyPath;
    v61 = v113;
    sub_10000C1FC((uint64_t)v60, (uint64_t)&v18[*(int *)(v113 + 36)], (uint64_t *)&unk_10149D2B0);
    *(_QWORD *)v18 = v48;
    *((_QWORD *)v18 + 1) = v50;
    v18[16] = v36;
    *((_QWORD *)v18 + 3) = v52;
    swift_bridgeObjectRetain(v52);
    sub_10006BB40(v48, v50, v36);
    sub_100010CC4((uint64_t)v60, (uint64_t *)&unk_10149D2B0);
    sub_100010CC4(v58, &qword_10149C9A0);
    sub_10006B77C(v48, v50, v36);
    swift_bridgeObjectRelease(v52);
    v63 = static Font.Weight.medium.getter(v62);
    v64 = sub_10015571C();
    v65 = v114;
    View.fontWeight(_:)(*(_QWORD *)&v63, 0, v61, v64);
    sub_100010CC4((uint64_t)v18, &qword_10149C9A8);
    v129 = v61;
    v130 = v64;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v129, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v67 = (uint64_t)v112;
    v68 = v116;
    View.accessibilityIdentifier(_:)(0xD000000000000015, 0x8000000100E4CBD0, v116, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v115 + 8))(v65, v68);
    sub_1000207BC(v67, v128, &qword_10149C9B8);
    v69 = *(void **)&v107[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    v70 = v107;
    v71 = objc_msgSend(v69, "collectionTitle");
    v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
    v74 = v73;

    v129 = v72;
    v130 = v74;
    v75 = Text.init<A>(_:)(&v129, &type metadata for String, v110);
    v77 = v76;
    v79 = v78;
    v116 = v78;
    LOBYTE(v58) = v80 & 1;
    v81 = static Font.headline.getter(v75);
    v82 = swift_getKeyPath(&unk_100E2F408);
    v115 = v82;
    v83 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v84 = Color.init(_:)(v83);
    v129 = v75;
    v130 = v77;
    v131 = v58;
    v132 = v79;
    v133 = 256;
    v134 = v82;
    v135 = v81;
    v136 = v84;
    v86 = static Font.Weight.semibold.getter(v85);
    v87 = sub_100008B04(&qword_10149CB38);
    v88 = sub_100155A90();
    v89 = v119;
    View.fontWeight(_:)(*(_QWORD *)&v86, 0, v87, v88);
    sub_10006B77C(v75, v77, v58);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v116);
    v129 = v87;
    v130 = v88;
    v90 = swift_getOpaqueTypeConformance2(&v129, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    v91 = (uint64_t)v123;
    v92 = v121;
    View.accessibilityIdentifier(_:)(0x7469546564697547, 0xEA0000000000656CLL, v121, v90);
    (*(void (**)(char *, uint64_t))(v120 + 8))(v89, v92);
    v93 = v122;
    sub_1000207BC(v91, v122, &qword_10149CB30);
    v95 = static VerticalAlignment.center.getter(v94);
    v96 = (uint64_t)v125;
    *v125 = v95;
    *(_QWORD *)(v96 + 8) = 0x4014000000000000;
    *(_BYTE *)(v96 + 16) = 0;
    v97 = sub_100008B04(&qword_10149C9D0);
    sub_1001543E4(v117, v124, v96 + *(int *)(v97 + 44));
    v98 = v128;
    v99 = v118;
    sub_10000C1FC(v128, v118, &qword_10149C9B8);
    sub_10000C1FC(v93, v91, &qword_10149CB30);
    v100 = v127;
    sub_10000C1FC(v96, v127, &qword_10149C990);
    v101 = v126;
    sub_10000C1FC(v99, v126, &qword_10149C9B8);
    v102 = sub_100008B04(&qword_10149CB48);
    sub_10000C1FC(v91, v101 + *(int *)(v102 + 48), &qword_10149CB30);
    sub_10000C1FC(v100, v101 + *(int *)(v102 + 64), &qword_10149C990);
    sub_100010CC4(v96, &qword_10149C990);
    sub_100010CC4(v93, &qword_10149CB30);
    sub_100010CC4(v98, &qword_10149C9B8);
    sub_100010CC4(v100, &qword_10149C990);
    sub_100010CC4(v91, &qword_10149CB30);
    return sub_100010CC4(v99, &qword_10149C9B8);
  }
  else
  {
    v104 = type metadata accessor for CuratedGuideViewModel(0);
    v105 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, v124, v104, v105);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001543E4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t KeyPath;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _OWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t result;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;

  v6 = sub_100008B04(&qword_10149C9E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v117 = (char *)&v103 - v10;
  v111 = sub_100008B04(&qword_101494DD0);
  __chkstk_darwin(v111);
  v113 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v108);
  v112 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Image.ResizingMode(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100008B04(&qword_101495858);
  __chkstk_darwin(v110);
  v18 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100008B04(&qword_10149C9E8);
  v114 = *(_QWORD *)(v19 - 8);
  v115 = v19;
  __chkstk_darwin(v19);
  v109 = (char *)&v103 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100008B04(&qword_10149C9F0);
  __chkstk_darwin(v21);
  v116 = (uint64_t)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v103 - v24;
  if (a1)
  {
    v118 = a3;
    v119 = v8;
    KeyPath = swift_getKeyPath(&unk_100E2F3C0);
    v27 = swift_getKeyPath(&unk_100E2F3E8);
    v28 = a1;
    static Published.subscript.getter(&v125, v28, KeyPath, v27);

    swift_release();
    swift_release();
    v29 = v125;
    v120 = v25;
    if (v125)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for Image.ResizingMode.stretch(_:), v13);
      v30 = Image.resizable(capInsets:resizingMode:)(v16, v29, 0.0, 0.0, 0.0, 0.0);
      v31 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      v32 = static Alignment.center.getter(v31);
      _FrameLayout.init(width:height:alignment:)(&v125, 0x402E000000000000, 0, 0x402E000000000000, 0, v32, v33);
      v34 = v125;
      v107 = v126;
      v106 = v127;
      v35 = v128;
      v105 = v129;
      v104 = v130;
      v36 = v112;
      v37 = &v112[*(int *)(v108 + 20)];
      v38 = enum case for RoundedCornerStyle.continuous(_:);
      v39 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
      __asm { FMOV            V0.2D, #4.0 }
      *v36 = _Q0;
      v45 = v113;
      sub_10015553C((uint64_t)v36, v113);
      *(_WORD *)(v45 + *(int *)(v111 + 36)) = 256;
      v46 = v110;
      sub_10000C1FC(v45, (uint64_t)&v18[*(int *)(v110 + 36)], &qword_101494DD0);
      *(_QWORD *)v18 = v30;
      *((_QWORD *)v18 + 1) = v34;
      v18[16] = v107;
      *((_QWORD *)v18 + 3) = v106;
      v18[32] = v35;
      v25 = v120;
      v47 = v104;
      *((_QWORD *)v18 + 5) = v105;
      *((_QWORD *)v18 + 6) = v47;
      swift_retain();
      sub_100010CC4(v45, &qword_101494DD0);
      sub_100155580((uint64_t)v36);
      swift_release();
      v48 = sub_1001557A8();
      v49 = (uint64_t)v109;
      View.accessibilityIdentifier(_:)(0xD000000000000013, 0x8000000100E4CC10, v46, v48);
      swift_release();
      sub_100010CC4((uint64_t)v18, &qword_101495858);
      sub_1000207BC(v49, (uint64_t)v25, &qword_10149C9E8);
      v50 = 0;
    }
    else
    {
      v50 = 1;
    }
    v51 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56))(v25, v50, 1, v115);
    v52 = *(void **)&v28[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection];
    v53 = v28;
    v54 = objc_msgSend(v52, "publisherAttribution");
    if (v54
      && (v55 = v54,
          v56 = objc_msgSend(v54, "displayName"),
          swift_unknownObjectRelease(v55),
          v56))
    {
      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
      v59 = v58;

      v121 = v57;
      v122 = v59;
      v60 = sub_10006C008();
      v61 = Text.init<A>(_:)(&v121, &type metadata for String, v60);
      v63 = v62;
      v65 = v64;
      v67 = v66 & 1;
      v68 = static Font.subheadline.getter(v61);
      v69 = Text.font(_:)(v68, v61, v63, v67, v65);
      v71 = v70;
      v73 = v72;
      v75 = v74;
      swift_release();
      sub_10006B77C(v61, v63, v67);
      v76 = swift_bridgeObjectRelease(v65);
      LODWORD(v121) = static HierarchicalShapeStyle.secondary.getter(v76);
      v77 = Text.foregroundStyle<A>(_:)(&v121, v69, v71, v73 & 1, v75, &type metadata for HierarchicalShapeStyle, &protocol witness table for HierarchicalShapeStyle);
      v79 = v78;
      v81 = v80;
      v83 = v82 & 1;
      sub_10006B77C(v69, v71, v73 & 1);
      swift_bridgeObjectRelease(v75);
      v85 = static Font.Weight.medium.getter(v84);
      v86 = Text.fontWeight(_:)(*(_QWORD *)&v85, 0, v77, v79, v83, v81);
      v88 = v87;
      v90 = v89;
      v92 = v91 & 1;
      sub_10006B77C(v77, v79, v83);
      swift_bridgeObjectRelease(v81);
      v121 = v86;
      v122 = v88;
      v123 = v92;
      v124 = v90;
      View.accessibilityIdentifier(_:)(0xD000000000000013, 0x8000000100E4CBF0, &type metadata for Text, &protocol witness table for Text);
      v93 = v92;
      v25 = v120;
      sub_10006B77C(v86, v88, v93);
      swift_bridgeObjectRelease(v90);
      v94 = sub_100008B04(&qword_10149C998);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v51, 0, 1, v94);
    }
    else
    {

      v95 = sub_100008B04(&qword_10149C998);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v51, 1, 1, v95);
    }
    v96 = v116;
    sub_10000C1FC((uint64_t)v25, v116, &qword_10149C9F0);
    v97 = (uint64_t)v119;
    sub_10000C1FC(v51, (uint64_t)v119, &qword_10149C9E0);
    v98 = v118;
    sub_10000C1FC(v96, v118, &qword_10149C9F0);
    v99 = sub_100008B04(&qword_10149C9F8);
    sub_10000C1FC(v97, v98 + *(int *)(v99 + 48), &qword_10149C9E0);
    sub_100010CC4(v51, &qword_10149C9E0);
    sub_100010CC4((uint64_t)v25, &qword_10149C9F0);
    sub_100010CC4(v97, &qword_10149C9E0);
    return sub_100010CC4(v96, &qword_10149C9F0);
  }
  else
  {
    v101 = type metadata accessor for CuratedGuideViewModel(0);
    v102 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, a2, v101, v102);
    __break(1u);
  }
  return result;
}

uint64_t sub_100154BBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  char *v28;
  double v29;
  double v30;
  char *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _OWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, _QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  double v66;
  double v67;
  char *v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t result;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  void (*v96)(char *, _QWORD, uint64_t);
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t KeyPath;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;

  v121 = a3;
  v102 = type metadata accessor for Image.ResizingMode(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_100008B04(&qword_10149CAC8);
  __chkstk_darwin(v103);
  v105 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_100008B04(&qword_10149CAD0);
  __chkstk_darwin(v106);
  v107 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100008B04(&qword_10149CAD8);
  v117 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v104 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149CAE0);
  __chkstk_darwin(v9);
  v120 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v119 = (uint64_t)&v95 - v12;
  v122 = sub_100008B04(&qword_101494DD0);
  __chkstk_darwin(v122);
  v124 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v14);
  v123 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100008B04(&qword_10149CAE8);
  __chkstk_darwin(v114);
  v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008B04(&qword_10149CAF0);
  __chkstk_darwin(v18);
  v116 = (uint64_t)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v113 = (char *)&v95 - v21;
  __chkstk_darwin(v22);
  v115 = (uint64_t)&v95 - v23;
  if (a1)
  {
    v24 = (void *)objc_opt_self(MKPlaceCollectionImageProvider);
    v25 = a1;
    v26 = objc_msgSend(v24, "sharedInstance");
    v27 = objc_msgSend(v26, "joeColorForCuratedCollection:", *(_QWORD *)&v25[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_placeCollection]);

    v111 = Color.init(_:)(v27);
    KeyPath = swift_getKeyPath(&unk_100E2F2C8);
    v28 = v25;
    v29 = sub_1000D4C00();

    v30 = v29;
    v31 = v28;
    v112 = v31;
    v32 = sub_1000D4C00();

    v34 = static Alignment.center.getter(v33);
    _FrameLayout.init(width:height:alignment:)(&v125, *(_QWORD *)&v30, 0, *(_QWORD *)&v32, 0, v34, v35);
    v109 = v125;
    v36 = v126;
    v37 = v127;
    v38 = v128;
    v39 = v129;
    v108 = v130;
    v99 = v14;
    v40 = v123;
    v41 = &v123[*(int *)(v14 + 20)];
    v42 = enum case for RoundedCornerStyle.continuous(_:);
    v43 = type metadata accessor for RoundedCornerStyle(0);
    v44 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v43 - 8) + 104);
    v98 = v42;
    v97 = v43;
    v96 = (void (*)(_QWORD, _QWORD, _QWORD))v44;
    v44(v41, v42);
    __asm { FMOV            V0.2D, #10.0 }
    v95 = _Q0;
    *v40 = _Q0;
    v50 = v124;
    sub_10015553C((uint64_t)v40, v124);
    *(_WORD *)(v50 + *(int *)(v122 + 36)) = 256;
    v51 = v114;
    sub_10000C1FC(v50, (uint64_t)&v17[*(int *)(v114 + 36)], &qword_101494DD0);
    v52 = v111;
    *(_QWORD *)v17 = KeyPath;
    *((_QWORD *)v17 + 1) = v52;
    *((_QWORD *)v17 + 2) = v109;
    v17[24] = v36;
    *((_QWORD *)v17 + 4) = v37;
    v17[40] = v38;
    v53 = v108;
    *((_QWORD *)v17 + 6) = v39;
    *((_QWORD *)v17 + 7) = v53;
    swift_retain();
    swift_retain();
    sub_100010CC4(v50, &qword_101494DD0);
    sub_100155580((uint64_t)v40);
    swift_release();
    swift_release();
    v54 = sub_1001558F4();
    v55 = (uint64_t)v113;
    View.accessibilityIdentifier(_:)(0xD000000000000010, 0x8000000100E4CBB0, v51, v54);
    sub_100010CC4((uint64_t)v17, &qword_10149CAE8);
    v56 = v115;
    sub_1000207BC(v55, v115, &qword_10149CAF0);
    v57 = swift_getKeyPath(&unk_100E2F348);
    v58 = swift_getKeyPath(&unk_100E2F370);
    v59 = v112;
    static Published.subscript.getter(&v131, v59, v57, v58);

    swift_release();
    swift_release();
    v60 = v131;
    v61 = 1;
    if (v131)
    {
      v62 = v101;
      v63 = v100;
      v64 = v102;
      (*(void (**)(char *, _QWORD, uint64_t))(v101 + 104))(v100, enum case for Image.ResizingMode.stretch(_:), v102);
      v113 = (char *)Image.resizable(capInsets:resizingMode:)(v63, v60, 0.0, 0.0, 0.0, 0.0);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
      v65 = v59;
      v66 = sub_1000D4C00();

      v67 = v66;
      v68 = v65;
      v69 = sub_1000D4CFC();

      v71 = static Alignment.center.getter(v70);
      _FrameLayout.init(width:height:alignment:)(&v131, *(_QWORD *)&v67, 0, *(_QWORD *)&v69, 0, v71, v72);
      v73 = v131;
      v114 = v60;
      v74 = v132;
      v75 = v56;
      v76 = v133;
      v77 = v134;
      v78 = v135;
      v79 = v136;
      v80 = v123;
      v96(&v123[*(int *)(v99 + 20)], v98, v97);
      *v80 = v95;
      v81 = v124;
      sub_10015553C((uint64_t)v80, v124);
      *(_WORD *)(v81 + *(int *)(v122 + 36)) = 256;
      v82 = (uint64_t)v105;
      sub_10000C1FC(v81, (uint64_t)&v105[*(int *)(v103 + 36)], &qword_101494DD0);
      *(_QWORD *)v82 = v113;
      *(_QWORD *)(v82 + 8) = 0;
      *(_WORD *)(v82 + 16) = 257;
      *(_QWORD *)(v82 + 24) = v73;
      *(_BYTE *)(v82 + 32) = v74;
      *(_QWORD *)(v82 + 40) = v76;
      v56 = v75;
      *(_BYTE *)(v82 + 48) = v77;
      *(_QWORD *)(v82 + 56) = v78;
      *(_QWORD *)(v82 + 64) = v79;
      swift_retain();
      sub_100010CC4(v81, &qword_101494DD0);
      sub_100155580((uint64_t)v80);
      swift_release();
      v83 = v107;
      sub_10000C1FC(v82, v107, &qword_10149CAC8);
      v84 = v106;
      *(_BYTE *)(v83 + *(int *)(v106 + 36)) = 1;
      sub_100010CC4(v82, &qword_10149CAC8);
      v85 = sub_100155998();
      v86 = (uint64_t)v104;
      View.accessibilityIdentifier(_:)(0x616D496564697547, 0xEA00000000006567, v84, v85);
      swift_release();
      sub_100010CC4(v83, &qword_10149CAD0);
      v87 = v119;
      sub_1000207BC(v86, v119, &qword_10149CAD8);
      v61 = 0;
    }
    else
    {
      v87 = v119;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v87, v61, 1, v118);
    v88 = v116;
    sub_10000C1FC(v56, v116, &qword_10149CAF0);
    v89 = v120;
    sub_10000C1FC(v87, v120, &qword_10149CAE0);
    v90 = v121;
    sub_10000C1FC(v88, v121, &qword_10149CAF0);
    v91 = sub_100008B04(&qword_10149CB10);
    sub_10000C1FC(v89, v90 + *(int *)(v91 + 48), &qword_10149CAE0);
    sub_100010CC4(v87, &qword_10149CAE0);
    sub_100010CC4(v56, &qword_10149CAF0);
    sub_100010CC4(v89, &qword_10149CAE0);
    return sub_100010CC4(v88, &qword_10149CAF0);
  }
  else
  {
    v93 = type metadata accessor for CuratedGuideViewModel(0);
    v94 = sub_10000BC84((unint64_t *)&qword_101498DB8, type metadata accessor for CuratedGuideViewModel, (uint64_t)"ml7");
    result = EnvironmentObject.error()(0, a2, v93, v94);
    __break(1u);
  }
  return result;
}

uint64_t sub_100155524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100153000(*(char **)v1, *(_QWORD *)(v1 + 8), a1);
}

uint64_t sub_10015552C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101069E08, 1);
}

uint64_t sub_10015553C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100155580(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001555BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149C948;
  if (!qword_10149C948)
  {
    v1 = sub_10000E5D4(&qword_1014933B8);
    v2[0] = sub_10000BC84(&qword_10149C950, (uint64_t (*)(uint64_t))&type metadata accessor for Divider, (uint64_t)&protocol conformance descriptor for Divider);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149C948);
  }
  return result;
}

uint64_t sub_100155658()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100155678()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100155698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100008B04(&qword_10149C9A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C1FC(a1, (uint64_t)v4, &qword_10149C9A0);
  return EnvironmentValues.textCase.setter(v4);
}

unint64_t sub_10015571C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149C9C0;
  if (!qword_10149C9C0)
  {
    v1 = sub_10000E5D4(&qword_10149C9A8);
    v2[0] = &protocol witness table for Text;
    v2[1] = sub_100010D70(&qword_10149C9C8, (uint64_t *)&unk_10149D2B0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149C9C0);
  }
  return result;
}

unint64_t sub_1001557A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CA00;
  if (!qword_10149CA00)
  {
    v1 = sub_10000E5D4(&qword_101495858);
    v2[0] = sub_10006EB08(&qword_101495E68, &qword_101495E70, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol witness table for _FrameLayout);
    v2[1] = sub_100010D70((unint64_t *)&unk_101494E00, &qword_101494DD0, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CA00);
  }
  return result;
}

uint64_t sub_10015584C()
{
  return sub_10002067C(&qword_10149CA40, &qword_10149CA20, (uint64_t (*)(void))sub_100155870, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_100155870()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CA48;
  if (!qword_10149CA48)
  {
    v1 = sub_10000E5D4(&qword_10149CA18);
    v2[0] = sub_100010D70(&qword_10149CA50, &qword_10149CA10, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CA48);
  }
  return result;
}

unint64_t sub_1001558F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CAF8;
  if (!qword_10149CAF8)
  {
    v1 = sub_10000E5D4(&qword_10149CAE8);
    v2[0] = sub_10002067C(&qword_10149CB00, &qword_10149CB08, (uint64_t (*)(void))sub_100063334, (uint64_t)&protocol witness table for _FrameLayout);
    v2[1] = sub_100010D70((unint64_t *)&unk_101494E00, &qword_101494DD0, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CAF8);
  }
  return result;
}

unint64_t sub_100155998()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CB18;
  if (!qword_10149CB18)
  {
    v1 = sub_10000E5D4(&qword_10149CAD0);
    v2[0] = sub_100155A04();
    v2[1] = sub_10006E8C4();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CB18);
  }
  return result;
}

unint64_t sub_100155A04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CB20;
  if (!qword_10149CB20)
  {
    v1 = sub_10000E5D4(&qword_10149CAC8);
    v2[0] = sub_10006E008();
    v2[1] = sub_100010D70((unint64_t *)&unk_101494E00, &qword_101494DD0, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CB20);
  }
  return result;
}

unint64_t sub_100155A90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CB40;
  if (!qword_10149CB40)
  {
    v1 = sub_10000E5D4(&qword_10149CB38);
    v2[0] = sub_10006B8F8();
    v2[1] = sub_100010D70(&qword_101495D78, &qword_101495D80, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CB40);
  }
  return result;
}

uint64_t sub_100155B14()
{
  return sub_100010D70(&qword_10149CB50, &qword_10149CB58, (const char *)&protocol conformance descriptor for TupleView<A>);
}

unint64_t sub_100155B44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CB60;
  if (!qword_10149CB60)
  {
    v1 = sub_10000E5D4(&qword_10149CB68);
    v2[0] = sub_10002067C(&qword_10149CA38, &qword_10149CA28, sub_10015584C, (uint64_t)&protocol witness table for _PaddingLayout);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CB60);
  }
  return result;
}

id sub_100155CC0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RAPNotificationDetailsCoordinator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for RAPNotificationDetailsCoordinator()
{
  return objc_opt_self(_TtC4Maps33RAPNotificationDetailsCoordinator);
}

void sub_100155D58(void *a1, int a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_parentViewController);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_allocObject(&unk_1011A6258, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v8 = swift_allocObject(&unk_1011A6280, 40, 7);
    *(_QWORD *)(v8 + 16) = v7;
    *(_DWORD *)(v8 + 24) = a2;
    *(_QWORD *)(v8 + 32) = v6;
    swift_retain();
    v9 = v6;
    sub_1001565F0(a1, (uint64_t)sub_100156D6C, v8);

    swift_release();
    swift_release();
  }
  else
  {
    if (qword_101490FD0 != -1)
      swift_once(&qword_101490FD0, sub_100156C80);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_10000E918(v10, (uint64_t)qword_10149CB70);
    oslog = Logger.logObject.getter(v11);
    v12 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "parentViewController is nil", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
}

void sub_100155EE8(void *a1, uint64_t a2, unsigned int a3, void *a4)
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v15[24];

  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    if ((sub_100156030(a1, a3, a4) & 1) != 0)
    {
      if (qword_101490FD0 != -1)
        swift_once(&qword_101490FD0, sub_100156C80);
      v10 = type metadata accessor for Logger(0);
      v11 = sub_10000E918(v10, (uint64_t)qword_10149CB70);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Successfully open DetailsViewController", v14, 2u);
        swift_slowDealloc(v14, -1, -1);
      }

    }
    else if (GEOConfigGetBOOL(MapsConfig_RAPEnableErrorAlertForReviewedReport, off_1014B4108))
    {
      sub_10015703C(a4);
    }

  }
}

id sub_100156030(void *a1, unsigned int a2, void *a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id result;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  NSString v25;
  id v26;
  NSString v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  _BOOL4 v52;
  unsigned int v53;
  unsigned __int16 v54;
  uint64_t v55;

  if (objc_msgSend(a1, "reportStatus") != 2 && objc_msgSend(a1, "reportStatus") != 1)
  {
    if (qword_101490FD0 != -1)
      swift_once(&qword_101490FD0, sub_100156C80);
    v38 = type metadata accessor for Logger(0);
    sub_10000E918(v38, (uint64_t)qword_10149CB70);
    v39 = a1;
    v34 = Logger.logObject.getter(v39);
    v40 = static os_log_type_t.error.getter(v34);
    if (!os_log_type_enabled(v34, v40))
    {

      return 0;
    }
    v41 = (uint8_t *)swift_slowAlloc(6, -1);
    *(_DWORD *)v41 = 33554688;
    v54 = (unsigned __int16)objc_msgSend(v39, "reportStatus");
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v41 + 4, v41 + 6);

    _os_log_impl((void *)&_mh_execute_header, v34, v40, "Should not open a rap with status:%hd", v41, 6u);
    v37 = v41;
    goto LABEL_21;
  }
  v7 = objc_msgSend(a1, "rapResponse");
  if (!v7)
  {
    if (qword_101490FD0 != -1)
      swift_once(&qword_101490FD0, sub_100156C80);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_10000E918(v32, (uint64_t)qword_10149CB70);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter(v34);
    if (!os_log_type_enabled(v34, v35))
      goto LABEL_22;
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Empty rapResponse", v36, 2u);
    v37 = v36;
LABEL_21:
    swift_slowDealloc(v37, -1, -1);
LABEL_22:

    return 0;
  }
  v8 = v7;
  v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RAPNotificationDetailsViewModel()), "initWithRapRecord:", a1);
  if (!v9)
  {
    if (qword_101490FD0 != -1)
      swift_once(&qword_101490FD0, sub_100156C80);
    v42 = type metadata accessor for Logger(0);
    v43 = sub_10000E918(v42, (uint64_t)qword_10149CB70);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Failed to build ViewModel", v46, 2u);
      swift_slowDealloc(v46, -1, -1);
    }

    return 0;
  }
  v10 = v9;
  if (objc_msgSend(a1, "reportStatus") != 2)
  {
    v26 = 0;
    v11 = 0;
LABEL_32:
    v48 = objc_msgSend(objc_allocWithZone((Class)RAPNotificationDetailsViewController), "initWithViewModel:report:question:", v10, v11, v26);
    objc_msgSend(v48, "setDelegate:", v3);
    v49 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v48);
    objc_msgSend(v49, "setModalPresentationStyle:", 2);
    v50 = v49;
    v47 = 1;
    objc_msgSend(a3, "_maps_topMostPresentViewController:animated:completion:", v50, 1, 0);

    return (id)v47;
  }
  v11 = sub_100156F10(a3);
  if (!v11)
  {
    v26 = 0;
    goto LABEL_32;
  }
  v53 = a2;
  v12 = objc_msgSend(a1, "communityIdentifier");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  result = objc_msgSend(v8, "responseId", swift_bridgeObjectRelease(v15).n128_f64[0]);
  if (result)
  {
    v17 = result;
    v18 = v13 & 0xFFFFFFFFFFFFLL;
    if ((v15 & 0x2000000000000000) != 0)
      v18 = HIBYTE(v15) & 0xF;
    v52 = v18 != 0;
    static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v20 = v19;

    v21 = objc_msgSend(a1, "reportID");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v23 = v22;

    v51 = objc_allocWithZone((Class)RAPUserResponseQuestion);
    v11 = v11;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    v25 = String._bridgeToObjectiveC()();
    v26 = objc_msgSend(v51, "initWithReport:parentQuestion:responseID:reportID:isAnonymous:", v11, 0, v24, v25, v52, swift_bridgeObjectRelease(v23).n128_f64[0]);

    objc_msgSend(v11, "setInitialQuestion:", v26);
    v27 = objc_msgSend(a1, "reportID");
    if (!v27)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v30 = v29;
      v27 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v28 = swift_bridgeObjectRelease(v30).n128_u64[0];
    }
    objc_msgSend(v11, "setPreviousFeedbackID:", v27, v28, v51);

    v31 = objc_msgSend(v11, "combinedUserPath");
    objc_msgSend(v31, "addNativePath:", v53);

    goto LABEL_32;
  }
  __break(1u);
  return result;
}

void sub_1001565F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  v7 = objc_msgSend(a1, "reportID");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11 = *(void **)(v3 + OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_rapStatusDownloader);
  v12 = sub_100008B04(&qword_101492BF0);
  v13 = swift_allocObject(v12, 48, 7);
  *(_OWORD *)(v13 + 16) = xmmword_100E22F40;
  *(_QWORD *)(v13 + 32) = v8;
  *(_QWORD *)(v13 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_1011A62A8, 56, 7);
  v15[2] = v8;
  v15[3] = v10;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a1;
  v18[4] = sub_100156DB0;
  v18[5] = v15;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1001BB8D4;
  v18[3] = &unk_1011A62C0;
  v16 = _Block_copy(v18);
  swift_retain();
  v17 = a1;
  swift_release();
  objc_msgSend(v11, "updateSubmissionStatusesWithIdentifier:completion:", isa, v16);
  _Block_release(v16);

}

void sub_1001567B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  NSString v9;
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v8 = (void *)objc_opt_self(RAPRecordManager);
  v9 = String._bridgeToObjectiveC()();
  v10 = (_QWORD *)swift_allocObject(&unk_1011A62F8, 40, 7);
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v13[4] = sub_100156E04;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10019B4C4;
  v13[3] = &unk_1011A6310;
  v11 = _Block_copy(v13);
  swift_retain();
  v12 = a5;
  swift_release();
  objc_msgSend(v8, "fetchRAPRecordsMatchingProblemId:completion:", v9, v11);
  _Block_release(v11);

}

uint64_t sub_1001568B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10009729C();
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = (_QWORD *)swift_allocObject(&unk_1011A6348, 48, 7);
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  aBlock[4] = sub_100156E44;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011A6360;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v18 = a4;
  v19 = swift_release();
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_10000E540();
  v21 = sub_100008B04((uint64_t *)&unk_101492FB0);
  v22 = sub_10000E588();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v8, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v24);
}

void sub_100156AA4(uint64_t a1, void (*a2)(id), uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;

  if (!a1)
    goto LABEL_13;
  v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v10 = a1;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v10))
      goto LABEL_4;
    goto LABEL_12;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  if (!v8)
  {
LABEL_12:
    swift_bridgeObjectRelease(a1);
LABEL_13:
    a2(a4);
    return;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_7;
  }
  if (*(_QWORD *)(v7 + 16))
  {
    v9 = *(id *)(a1 + 32);
LABEL_7:
    v11 = v9;
    swift_bridgeObjectRelease(a1);
    a2(v11);

    return;
  }
  __break(1u);
}

uint64_t sub_100156C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for Logger(0);
  sub_10000E930(v0, qword_10149CB70);
  sub_10000E918(v0, (uint64_t)qword_10149CB70);
  v5 = type metadata accessor for RAPNotificationDetailsCoordinator();
  v1 = sub_100008B04((uint64_t *)&unk_10149CC30);
  v2 = String.init<A>(describing:)(&v5, v1);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEE007370614D2E65, v2, v3);
}

uint64_t sub_100156D1C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100156D40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_100156D6C(void *a1)
{
  uint64_t v1;

  sub_100155EE8(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100156D7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

void sub_100156DB0()
{
  uint64_t v0;

  sub_1001567B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

double sub_100156DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100156DD0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100156DD8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100156E04(uint64_t a1)
{
  uint64_t v1;

  return sub_1001568B4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100156E10()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

void sub_100156E44()
{
  uint64_t v0;

  sub_100156AA4(*(_QWORD *)(v0 + 16), *(void (**)(id))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

id sub_100156E50(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  objc_super v8;

  v3 = &v1[OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_parentViewController];
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_parentViewController]);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_coordinator]);
  v4 = OBJC_IVAR____TtC4Maps33RAPNotificationDetailsCoordinator_rapStatusDownloader;
  v5 = objc_allocWithZone((Class)RAPSubmissionStatusDownloader);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  swift_unknownObjectWeakAssign(v3, a1);

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for RAPNotificationDetailsCoordinator();
  return objc_msgSendSuper2(&v8, "init");
}

id sub_100156F10(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id result;
  void *v8;
  id v9;
  id v10;
  id v11;

  v1 = objc_msgSend(a1, "_maps_mapsSceneDelegate");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedMapsDelegate");
  if (!v3)
  {

    return 0;
  }
  v4 = v3;
  v5 = objc_msgSend(objc_allocWithZone((Class)RAPAppStateCreator), "initWithSceneDelegate:", v2);
  v6 = objc_msgSend(v5, "createReportAProblemAppState");
  result = objc_msgSend(v4, "submissionManager");
  if (result)
  {
    v8 = result;
    v9 = objc_allocWithZone((Class)RAPReport);
    v10 = v6;
    v11 = objc_msgSend(v9, "initWithContext:submitter:", v10, v8);

    return v11;
  }
  __break(1u);
  return result;
}

void sub_10015703C(void *a1)
{
  NSBundle v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  Swift::String v7;
  void *v8;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  NSString v12;
  NSString v13;
  id v14;
  NSString v15;
  id v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v2.super.isa = (Class)qword_1014D4B80;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  v20._countAndFlagsBits = 0xD000000000000035;
  v20._object = (void *)0x8000000100E4CDB0;
  v3._object = (void *)0x8000000100E4CD70;
  v4._object = (void *)0x8000000100E4CD90;
  v4._countAndFlagsBits = 0xD000000000000014;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v4, v20)._object;
  v21._countAndFlagsBits = 0xD00000000000003BLL;
  v6._countAndFlagsBits = 0xD00000000000003DLL;
  v7._countAndFlagsBits = 0xD000000000000043;
  v21._object = (void *)0x8000000100E4CE80;
  v7._object = (void *)0x8000000100E4CDF0;
  v6._object = (void *)0x8000000100E4CE40;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, v2, v6, v21)._object;
  v22._countAndFlagsBits = 0xD000000000000036;
  v22._object = (void *)0x8000000100E4CEC0;
  v9._countAndFlagsBits = 0x4B4F205D5041525BLL;
  v9._object = (void *)0xE800000000000000;
  v10._countAndFlagsBits = 19279;
  v10._object = (void *)0xE200000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, v2, v10, v22)._object;
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 0, 0);

  objc_msgSend(v14, "addAction:", v16);
  aBlock[4] = CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:);
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB8D4;
  aBlock[3] = &unk_1011A6388;
  v17 = _Block_copy(aBlock);
  v18 = v14;
  objc_msgSend(a1, "_maps_topMostPresentViewController:animated:completion:", v18, 1, v17);
  _Block_release(v17);

}

ValueMetadata *type metadata accessor for PlaceSummaryUnitDetourTime()
{
  return &type metadata for PlaceSummaryUnitDetourTime;
}

void destroy for NearbyTransitView(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 24));
  swift_release(*(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));

}

uint64_t initializeWithCopy for NearbyTransitView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_unknownObjectRetain(v5);
  swift_retain(v6);
  swift_retain(v7);
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for NearbyTransitView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  swift_unknownObjectRetain(v9);
  swift_unknownObjectRelease(v8);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  swift_retain(v11);
  swift_release(v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  swift_retain(v13);
  swift_release(v12);
  v14 = *(void **)(a1 + 56);
  v15 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v15;
  v16 = v15;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for NearbyTransitView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_release(*(_QWORD *)(a1 + 48));
  v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitView()
{
  return &type metadata for NearbyTransitView;
}

uint64_t sub_1001575F4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101069F50, 1);
}

BOOL sub_100157604(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100157664(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100157728@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>)
{
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  char v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  char v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  void (*v132)(char *, _QWORD, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  _OWORD v155[2];
  uint64_t v156;

  v124 = a1;
  v153 = a3;
  v144 = type metadata accessor for ControlSize(0);
  v142 = *(_QWORD *)(v144 - 8);
  v6 = __chkstk_darwin(v144);
  v141 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = type metadata accessor for BorderedProminentButtonStyle(0, v6);
  v128 = *(_QWORD *)(v129 - 8);
  v8 = __chkstk_darwin(v129);
  v127 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for ButtonStyleConfiguration.Label(0, v8);
  v125 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v123 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_100008B04(&qword_10149D000);
  v133 = *(_QWORD *)(v136 - 8);
  __chkstk_darwin(v136);
  v131 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100008B04(&qword_10149D008);
  __chkstk_darwin(v122);
  v13 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100008B04(&qword_10149D010);
  __chkstk_darwin(v130);
  v15 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100008B04(&qword_10149D018);
  __chkstk_darwin(v135);
  v140 = (uint64_t)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100008B04(&qword_10149D020);
  __chkstk_darwin(v138);
  v143 = (uint64_t)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_100008B04(&qword_10149D028);
  __chkstk_darwin(v139);
  v148 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_100008B04(&qword_10149D030);
  __chkstk_darwin(v147);
  v150 = (uint64_t)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_100008B04(&qword_10149D038);
  __chkstk_darwin(v146);
  v152 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_100008B04((uint64_t *)&unk_10149D040);
  __chkstk_darwin(v149);
  v151 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v22);
  v24 = (double *)((char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v25);
  v27 = (double *)((char *)&v121 - v26);
  v28 = sub_100008B04(&qword_101495850);
  __chkstk_darwin(v28);
  v30 = (char *)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100008B04(&qword_10149D050);
  __chkstk_darwin(v31);
  v154 = (uint64_t)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = v22;
  v33 = (char *)v27 + *(int *)(v22 + 20);
  v34 = enum case for RoundedCornerStyle.continuous(_:);
  v35 = type metadata accessor for RoundedCornerStyle(0);
  v36 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104);
  v137 = v34;
  v134 = v35;
  v132 = v36;
  v37 = ((uint64_t (*)(char *, uint64_t))v36)(v33, v34);
  *v27 = a4;
  v27[1] = a4;
  v38 = a2;
  if ((a2 & 1) != 0)
  {
    v39 = static Color.clear.getter(v37);
  }
  else
  {
    v40 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray3Color");
    v39 = Color.init(uiColor:)(v40);
  }
  v41 = v39;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v155, 0, 0, _swiftEmptyArrayStorage, 1.0, 10.0, 0.0);
  sub_1000202AC((uint64_t)v27, (uint64_t)v30, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v42 = &v30[*(int *)(sub_100008B04(&qword_101495878) + 36)];
  v43 = v155[1];
  *(_OWORD *)v42 = v155[0];
  *((_OWORD *)v42 + 1) = v43;
  *((_QWORD *)v42 + 4) = v156;
  v44 = sub_100008B04(&qword_101495880);
  *(_QWORD *)&v30[*(int *)(v44 + 52)] = v41;
  *(_WORD *)&v30[*(int *)(v44 + 56)] = 256;
  v45 = static Alignment.center.getter(v44);
  v47 = v46;
  v48 = (uint64_t *)&v30[*(int *)(sub_100008B04(&qword_101495888) + 36)];
  *v48 = v45;
  v48[1] = v47;
  v49 = sub_1000202F0((uint64_t)v27, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v50 = v38;
  if ((v38 & 1) != 0)
    v51 = static Color.blue.getter(v49);
  else
    v51 = static Color.clear.getter(v49);
  v53 = v51;
  v54 = static Edge.Set.all.getter(v52);
  v55 = v154;
  sub_10000C1FC((uint64_t)v30, v154, &qword_101495850);
  v56 = v55 + *(int *)(v31 + 36);
  *(_QWORD *)v56 = v53;
  *(_BYTE *)(v56 + 8) = v54;
  sub_100010CC4((uint64_t)v30, &qword_101495850);
  v57 = v123;
  v59 = ButtonStyleConfiguration.label.getter(v58);
  v60 = v127;
  BorderedProminentButtonStyle.init()(v59);
  v61 = sub_10000BC84(&qword_101496220, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
  v62 = sub_10000BC84(&qword_10149D058, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
  v63 = v131;
  v64 = v126;
  v65 = v129;
  View.buttonStyle<A>(_:)(v60, v126, v129, v61, v62);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v60, v65);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v57, v64);
  v66 = v142;
  v67 = v141;
  v68 = v144;
  (*(void (**)(char *, _QWORD, uint64_t))(v142 + 104))(v141, enum case for ControlSize.small(_:), v144);
  KeyPath = swift_getKeyPath(&unk_100E2F8A0);
  v70 = (uint64_t *)&v13[*(int *)(v122 + 36)];
  v71 = sub_100008B04(&qword_10149D060);
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))((char *)v70 + *(int *)(v71 + 28), v67, v68);
  *v70 = KeyPath;
  v72 = v133;
  v73 = v136;
  (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v13, v63, v136);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  v74 = (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v63, v73);
  v75 = static Font.subheadline.getter(v74);
  v76 = swift_getKeyPath(&unk_100E2F8D0);
  sub_10000C1FC((uint64_t)v13, (uint64_t)v15, &qword_10149D008);
  v77 = (uint64_t *)&v15[*(int *)(v130 + 36)];
  *v77 = v76;
  v77[1] = v75;
  v78 = sub_100010CC4((uint64_t)v13, &qword_10149D008);
  v79 = static Edge.Set.horizontal.getter(v78);
  v80 = EdgeInsets.init(_all:)(12.0);
  v82 = v81;
  v84 = v83;
  v86 = v85;
  v87 = v140;
  sub_10000C1FC((uint64_t)v15, v140, &qword_10149D010);
  v88 = v87 + *(int *)(v135 + 36);
  *(_BYTE *)v88 = v79;
  *(double *)(v88 + 8) = v80;
  *(_QWORD *)(v88 + 16) = v82;
  *(_QWORD *)(v88 + 24) = v84;
  *(_QWORD *)(v88 + 32) = v86;
  *(_BYTE *)(v88 + 40) = 0;
  v89 = sub_100010CC4((uint64_t)v15, &qword_10149D010);
  v90 = static Edge.Set.vertical.getter(v89);
  v91 = EdgeInsets.init(_all:)(6.0);
  v93 = v92;
  v95 = v94;
  v97 = v96;
  v98 = v143;
  sub_10000C1FC(v87, v143, &qword_10149D018);
  v99 = v98 + *(int *)(v138 + 36);
  *(_BYTE *)v99 = v90;
  *(double *)(v99 + 8) = v91;
  *(_QWORD *)(v99 + 16) = v93;
  *(_QWORD *)(v99 + 24) = v95;
  *(_QWORD *)(v99 + 32) = v97;
  *(_BYTE *)(v99 + 40) = 0;
  v100 = sub_100010CC4(v87, &qword_10149D018);
  v101 = static Color.blue.getter(v100);
  v102 = swift_getKeyPath(&unk_100E2F900);
  v103 = v148;
  sub_10000C1FC(v98, v148, &qword_10149D020);
  v104 = (uint64_t *)(v103 + *(int *)(v139 + 36));
  *v104 = v102;
  v104[1] = v101;
  v105 = sub_100010CC4(v98, &qword_10149D020);
  if ((v50 & 1) != 0)
  {
    v106 = static Color.white.getter(v105);
  }
  else
  {
    v107 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    v106 = Color.init(uiColor:)(v107);
  }
  v108 = v106;
  v109 = v150;
  sub_10000C1FC(v103, v150, &qword_10149D028);
  *(_QWORD *)(v109 + *(int *)(v147 + 36)) = v108;
  v110 = sub_100010CC4(v103, &qword_10149D028);
  v111 = static Alignment.center.getter(v110);
  v113 = v112;
  v114 = (uint64_t)v152;
  v115 = (uint64_t)&v152[*(int *)(v146 + 36)];
  v116 = v154;
  sub_10000C1FC(v154, v115, &qword_10149D050);
  v117 = (uint64_t *)(v115 + *(int *)(sub_100008B04((uint64_t *)&unk_10149D068) + 36));
  *v117 = v111;
  v117[1] = v113;
  sub_1000207BC(v109, v114, &qword_10149D030);
  v132((char *)v24 + *(int *)(v145 + 20), v137, v134);
  *v24 = a4;
  v24[1] = a4;
  v118 = (uint64_t)v151;
  v119 = (uint64_t)&v151[*(int *)(v149 + 36)];
  sub_1000202AC((uint64_t)v24, v119, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v119 + *(int *)(sub_100008B04(&qword_101494DD0) + 36)) = 256;
  sub_10000C1FC(v114, v118, &qword_10149D038);
  sub_1000202F0((uint64_t)v24, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_100010CC4(v114, &qword_10149D038);
  sub_100010CC4(v116, &qword_10149D050);
  return sub_1000207BC(v118, v153, (uint64_t *)&unk_10149D040);
}

uint64_t sub_1001581CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100157728(a1, *(_BYTE *)v2, a2, *(double *)(v2 + 8));
}

uint64_t sub_1001581D8()
{
  uint64_t v0;
  void *v1;
  uint64_t KeyPath;
  uint64_t v3;
  id v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;

  v1 = *(void **)v0;
  if (*(_QWORD *)v0)
  {
    KeyPath = swift_getKeyPath(&unk_100E2F5B0);
    v3 = swift_getKeyPath(&unk_100E2F5D8);
    v4 = v1;
    static Published.subscript.getter(&v20, v4, KeyPath, v3);

    swift_release();
    swift_release();
    v5 = v20;
    v7 = static Axis.Set.horizontal.getter(v6);
    v8 = swift_allocObject(&unk_1011A6650, 105, 7);
    v9 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v8 + 72) = v9;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v0 + 64);
    v10 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)v0;
    *(_QWORD *)(v8 + 16) = v5;
    *(_BYTE *)(v8 + 104) = *(_BYTE *)(v0 + 80);
    *(_OWORD *)(v8 + 40) = v10;
    __chkstk_darwin(v8);
    v19[2] = sub_10016EAA8;
    v19[3] = v11;
    sub_10016EAB4(v0);
    v12 = sub_100008B04(&qword_10149CDD8);
    v13 = sub_10016EB38(&qword_10149CDE0, &qword_10149CDD8, &qword_10149CDE8, &qword_10149CDF0);
    ScrollView.init(_:showsIndicators:content:)(v7, 0, sub_1000BC664, v19, v12, v13);
    v14 = sub_100008B04(&qword_10149CDF8);
    ScrollView.scrollsContentToBeginningInRightToLeft.setter(1, v14);
    return swift_release();
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 8);
    v17 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v18 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    result = EnvironmentObject.error()(0, v16, v17, v18);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001583B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v6 = sub_100008B04(&qword_10149CDF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v7);
  *((_QWORD *)v9 + 1) = 0x401C000000000000;
  v9[16] = 0;
  sub_100008B04(&qword_10149CE00);
  v10 = swift_bridgeObjectRetain(a1);
  sub_100168364(v10);
  v12 = v11;
  swift_bridgeObjectRelease(a1);
  v33 = v12;
  KeyPath = swift_getKeyPath(&unk_100E2F788);
  v14 = swift_allocObject(&unk_1011A6678, 97, 7);
  v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v14 + 64) = v15;
  *(_OWORD *)(v14 + 80) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(v14 + 96) = *(_BYTE *)(a2 + 80);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v14 + 32) = v16;
  v17 = swift_allocObject(&unk_1011A66A0, 32, 7);
  *(_QWORD *)(v17 + 16) = sub_10016EC14;
  *(_QWORD *)(v17 + 24) = v14;
  sub_10016EAB4(a2);
  v18 = sub_100008B04(&qword_10149CE08);
  v19 = sub_100008B04(&qword_10149CE10);
  v20 = sub_100010D70(&qword_10149CE18, &qword_10149CE08, (const char *)&protocol conformance descriptor for [A]);
  v21 = sub_10016EC70();
  v22 = ForEach<>.init(_:id:content:)(&v33, KeyPath, sub_10016EC40, v17, v18, v19, v20, &protocol witness table for Int, v21);
  LOBYTE(v20) = static Edge.Set.horizontal.getter(v22);
  v23 = EdgeInsets.init(_all:)(16.0);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_10000C1FC((uint64_t)v9, a3, &qword_10149CDF0);
  v30 = a3 + *(int *)(sub_100008B04(&qword_10149CDD8) + 36);
  *(_BYTE *)v30 = v20;
  *(double *)(v30 + 8) = v23;
  *(_QWORD *)(v30 + 16) = v25;
  *(_QWORD *)(v30 + 24) = v27;
  *(_QWORD *)(v30 + 32) = v29;
  *(_BYTE *)(v30 + 40) = 0;
  return sub_100010CC4((uint64_t)v9, &qword_10149CDF0);
}

uint64_t sub_1001585E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, __n128 a8@<Q0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v50 = a5;
  v61 = a4;
  v48 = a1;
  v60 = a7;
  v11 = type metadata accessor for AccessibilityTraits(0, a8);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  __chkstk_darwin(v11);
  v57 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008B04(&qword_10149CD88);
  v51 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100008B04(&qword_10149CE38);
  v55 = *(_QWORD *)(v16 - 8);
  v56 = v16;
  __chkstk_darwin(v16);
  v53 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_100008B04(&qword_10149CE10);
  __chkstk_darwin(v54);
  v49 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v52 = (char *)&v48 - v20;
  v21 = *(_OWORD *)(a6 + 32);
  v62 = *(_OWORD *)(a6 + 16);
  v63 = v21;
  v64 = *(_OWORD *)(a6 + 48);
  swift_bridgeObjectRetain(a3);
  v22 = sub_100008B04((uint64_t *)&unk_10149CE40);
  Binding.wrappedValue.getter(&v65, v22);
  v23 = v66;
  v25 = v67;
  v24 = v68;
  if (v65 == a2 && v66 == a3
    || (v26 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v65, v66, a2, a3, 0) & 1) != 0))
  {
    v26 = sub_100083F10(v25, v61);
  }
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v23);
  swift_unknownObjectRelease(v24);
  *(_QWORD *)&v62 = a2;
  *((_QWORD *)&v62 + 1) = a3;
  v27 = swift_allocObject(&unk_1011A66C8, 160, 7);
  v28 = *(_OWORD *)(a6 + 48);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(a6 + 32);
  *(_OWORD *)(v27 + 64) = v28;
  *(_OWORD *)(v27 + 80) = *(_OWORD *)(a6 + 64);
  *(_BYTE *)(v27 + 96) = *(_BYTE *)(a6 + 80);
  v29 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(v27 + 16) = *(_OWORD *)a6;
  *(_OWORD *)(v27 + 32) = v29;
  *(_QWORD *)(v27 + 104) = a2;
  *(_QWORD *)(v27 + 112) = a3;
  v30 = v61;
  v31 = v50;
  *(_QWORD *)(v27 + 120) = v61;
  *(_QWORD *)(v27 + 128) = v31;
  *(_QWORD *)(v27 + 136) = v48;
  *(_QWORD *)(v27 + 144) = a2;
  *(_QWORD *)(v27 + 152) = a3;
  swift_bridgeObjectRetain_n(a3, 2);
  sub_10016EAB4(a6);
  v32 = sub_10006C008();
  swift_bridgeObjectRetain(v30);
  swift_unknownObjectRetain(v31);
  Button<>.init<A>(_:action:)(&v62, sub_10016EE10, v27, &type metadata for String, v32);
  LOBYTE(v62) = v26 & 1;
  *((_QWORD *)&v62 + 1) = 0x4030000000000000;
  v33 = sub_100010D70(&qword_10149CDD0, &qword_10149CD88, (const char *)&protocol conformance descriptor for Button<A>);
  v34 = sub_10016ED50();
  v35 = v53;
  View.buttonStyle<A>(_:)(&v62, v13, &type metadata for FilterBarButtonStyle, v33, v34);
  v36 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v15, v13);
  if ((v26 & 1) != 0)
  {
    v37 = v57;
    static AccessibilityTraits.isSelected.getter(v36);
    v38 = v59;
  }
  else
  {
    *(_QWORD *)&v62 = _swiftEmptyArrayStorage;
    v39 = sub_10000BC84(&qword_101499800, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits, (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    v40 = sub_100008B04((uint64_t *)&unk_10149CE50);
    v41 = sub_100010D70(&qword_101499808, (uint64_t *)&unk_10149CE50, (const char *)&protocol conformance descriptor for [A]);
    v37 = v57;
    v42 = v40;
    v38 = v59;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v42, v41, v59, v39);
  }
  *(_QWORD *)&v62 = v13;
  *((_QWORD *)&v62 + 1) = &type metadata for FilterBarButtonStyle;
  *(_QWORD *)&v63 = v33;
  *((_QWORD *)&v63 + 1) = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v62, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v44 = (uint64_t)v49;
  v45 = v56;
  View.accessibility(addTraits:)(v37, v56, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v45);
  v46 = (uint64_t)v52;
  ModifiedContent<>.accessibility(identifier:)(0xD000000000000019, 0x8000000100E4D2E0, v54);
  sub_100010CC4(v44, &qword_10149CE10);
  return sub_1000207BC(v46, v60, &qword_10149CE10);
}

void sub_100158A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  _QWORD v25[4];
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v26 = *(_OWORD *)(a1 + 64);
  LOBYTE(v27) = *(_BYTE *)(a1 + 80);
  LOBYTE(v25[0]) = 1;
  v16 = sub_100008B04(&qword_10149CE60);
  Binding.wrappedValue.setter(v25, v16);
  v17 = *(_OWORD *)(a1 + 32);
  v26 = *(_OWORD *)(a1 + 16);
  v27 = v17;
  v28 = *(_OWORD *)(a1 + 48);
  v25[0] = a2;
  v25[1] = a3;
  v25[2] = a4;
  v25[3] = a5;
  swift_unknownObjectRetain(a5);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  v18 = sub_100008B04((uint64_t *)&unk_10149CE40);
  Binding.wrappedValue.setter(v25, v18);
  v25[0] = a6;
  *(_QWORD *)&v26 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  *((_QWORD *)&v26 + 1) = v19;
  v20._countAndFlagsBits = 8236;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = a7;
  v21._object = a8;
  String.append(_:)(v21);
  v22 = *((_QWORD *)&v26 + 1);
  v23 = (void *)objc_opt_self(GEOAPPortal);
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "captureUserAction:target:value:", 219, 44, v24, swift_bridgeObjectRelease(v22).n128_f64[0]);

}

uint64_t sub_100158BDC()
{
  return sub_1001581D8();
}

uint64_t sub_100158C24@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v3 = v2;
  v30 = a1;
  v4 = type metadata accessor for AccessibilityTraits(0, a2);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for AccessibilityChildBehavior(0);
  v7 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04(&qword_10149DAB8);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008B04(&qword_10149DAC0);
  v27 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100008B04(&qword_10149DAC8);
  v16 = __chkstk_darwin(v26);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v16);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v19 = sub_100008B04(&qword_10149DAD0);
  sub_100158EAC(v3, (uint64_t)&v12[*(int *)(v19 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v20);
  v21 = sub_100010D70(&qword_10149DAD8, &qword_10149DAB8, (const char *)&protocol conformance descriptor for HStack<A>);
  View.accessibilityElement(children:)(v9, v10, v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  v22 = sub_100010CC4((uint64_t)v12, &qword_10149DAB8);
  static AccessibilityTraits.isHeader.getter(v22);
  v31[0] = v10;
  v31[1] = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v31, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityAddTraits(_:)(v6, v13, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v13);
  ModifiedContent<>.accessibilityIdentifier(_:)(0xD000000000000022, 0x8000000100E2FD60, v26);
  return sub_100010CC4((uint64_t)v18, &qword_10149DAC8);
}

void sub_100158EAC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  BOOL v15;
  id v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __n128 v49;
  double v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  Swift::String v68;
  Swift::String v69;
  Swift::String v70;
  uint64_t OpaqueTypeConformance2;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  char v76;
  char v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t KeyPath;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  void *v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *object;
  void *countAndFlagsBits;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  _QWORD v136[4];
  __int128 v137;
  char v138;
  Swift::String v139;
  void *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 v150;
  Swift::String v151;

  v105 = type metadata accessor for AccessibilityChildBehavior(0);
  v104 = *(_QWORD *)(v105 - 8);
  __chkstk_darwin(v105);
  v103 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008B04(&qword_10149DAE0);
  __chkstk_darwin(v5);
  v102 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_100008B04(&qword_10149DAE8);
  v108 = *(_QWORD *)(v109 - 8);
  __chkstk_darwin(v109);
  v8 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_100008B04(&qword_10149DAF0);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v106 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04(&qword_10149DAF8);
  __chkstk_darwin(v10);
  v122 = (uint64_t)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v123 = (uint64_t)&v99 - v13;
  v14 = (void *)sub_10012D694(*(_QWORD *)(a1 + 40));
  v15 = *(_BYTE *)(a1 + 48) == 1;
  v116 = v14;
  v107 = v8;
  if (v15
    && (v16 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen"),
        objc_msgSend(v16, "scale"),
        v18 = v17,
        v16,
        (v19 = (id)MKTransitIncidentIcon(v18)) != 0))
  {
    v20 = v19;
    v21 = static Alignment.bottomTrailing.getter(v19);
    v23 = v22;
    swift_bridgeObjectRetain(v14);
    v24 = v20;
    v25 = Image.init(uiImage:)(v24);
    sub_10008506C(v14, 1);
    sub_1000850A4(v14, 1);
    v132 = v21;
    *(_QWORD *)&v133 = v23;
    *((_QWORD *)&v133 + 1) = v14;
    v134 = xmmword_100E2F4A0;
    v136[0] = 0;
    v135 = 0;
    *(_OWORD *)&v136[1] = xmmword_100E2F4B0;
    v136[3] = v25;
    v137 = xmmword_100E2F4C0;
    v138 = 0;
    sub_10008506C(v14, 1);
    swift_retain();
    v26 = sub_100008B04(&qword_10149DB00);
    v27 = sub_100010D70((unint64_t *)&unk_10149DB08, &qword_10149DB00, (const char *)&protocol conformance descriptor for ZStack<A>);
    v28 = sub_100062010();
    _ConditionalContent<>.init(storage:)(&v132, v26, &type metadata for TransitShields, v27, v28);

    sub_1000850A4(v14, 1);
    swift_release();
  }
  else
  {
    v132 = (uint64_t)v14;
    v133 = xmmword_100E2F4A0;
    v134 = 0uLL;
    v135 = 0x4038000000000000;
    memset(v136, 0, sizeof(v136));
    v137 = 0u;
    v138 = 1;
    swift_bridgeObjectRetain(v14);
    v29 = sub_100008B04(&qword_10149DB00);
    v30 = sub_100010D70((unint64_t *)&unk_10149DB08, &qword_10149DB00, (const char *)&protocol conformance descriptor for ZStack<A>);
    v31 = sub_100062010();
    _ConditionalContent<>.init(storage:)(&v132, v29, &type metadata for TransitShields, v30, v31);
  }
  countAndFlagsBits = (void *)v139._countAndFlagsBits;
  object = v139._object;
  v121 = v140;
  v129 = v141;
  v120 = v142;
  v128 = v143;
  v119 = v144;
  v127 = v145;
  v118 = v146;
  v126 = v147;
  v125 = v148;
  v124 = v149;
  v113 = v150;
  v32 = *(void **)(a1 + 8);
  v139._countAndFlagsBits = *(_QWORD *)a1;
  v139._object = v32;
  v33 = sub_10006C008();
  swift_bridgeObjectRetain(v32);
  v101 = v33;
  v34 = Text.init<A>(_:)(&v139, &type metadata for String, v33);
  v36 = v35;
  v37 = a1;
  v39 = v38;
  v41 = v40 & 1;
  v100 = type metadata accessor for NearbyTransitLineSectionHeaderView(0);
  v42 = Text.font(_:)(*(_QWORD *)(v37 + *(int *)(v100 + 24)), v34, v36, v41, v39);
  v44 = v43;
  v46 = v45;
  v48 = v47 & 1;
  sub_10006B77C(v34, v36, v41);
  v49 = swift_bridgeObjectRelease(v39);
  v50 = static Font.Weight.semibold.getter(v49);
  v112 = Text.fontWeight(_:)(*(_QWORD *)&v50, 0, v42, v44, v48, v46);
  v111 = v51;
  v53 = v52;
  v117 = v54;
  sub_10006B77C(v42, v44, v48);
  swift_bridgeObjectRelease(v46);
  KeyPath = swift_getKeyPath(&unk_100E2FF28);
  v55 = 1;
  if (*(_BYTE *)(v37 + 32) == 1)
  {
    v56 = Image.init(systemName:)(0x6C6C69662E6E6970, 0xE800000000000000);
    v57 = static Color.yellow.getter();
    v58 = (void *)swift_getKeyPath(&unk_100E2FF58);
    v59 = v37 + *(int *)(v100 + 28);
    v60 = type metadata accessor for Font.Design(0);
    v61 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v102, 1, 1, v60);
    v62 = static Font.system(_:design:weight:)(v59, v61, 0, 1);
    sub_100010CC4(v61, &qword_10149DAE0);
    v63 = swift_getKeyPath(&unk_100E2F8D0);
    v139._countAndFlagsBits = v56;
    v139._object = v58;
    v140 = (void *)v57;
    v141 = v63;
    v142 = (void *)v62;
    v64 = v103;
    static AccessibilityChildBehavior.ignore.getter();
    v65 = sub_100008B04((uint64_t *)&unk_101495970);
    v66 = sub_10006CC18();
    v67 = v107;
    View.accessibilityElement(children:)(v64, v65, v66);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v105);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v151._countAndFlagsBits = 0xD00000000000002DLL;
    v151._object = (void *)0x8000000100E4D6D0;
    v68._object = (void *)0x8000000100E4D6B0;
    v68._countAndFlagsBits = 0xD000000000000017;
    v69._countAndFlagsBits = 0x64656E6E6950;
    v69._object = (void *)0xE600000000000000;
    v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v69, v151);
    v139 = v70;
    v132 = v65;
    *(_QWORD *)&v133 = v66;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v132, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v72 = (uint64_t)v106;
    v73 = v109;
    View.accessibilityValue<A>(_:)(&v139, v109, &type metadata for String, OpaqueTypeConformance2, v101);
    v74 = swift_bridgeObjectRelease(v70._object);
    (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v67, v73, v74);
    sub_1000207BC(v72, v123, &qword_10149DAF0);
    v55 = 0;
  }
  v75 = v123;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56))(v123, v55, 1, v115);
  v76 = v53 & 1;
  v77 = v113;
  LOBYTE(v139._countAndFlagsBits) = v113;
  LOBYTE(v132) = v53 & 1;
  v78 = v122;
  sub_10000C1FC(v75, v122, &qword_10149DAF8);
  v79 = object;
  *(_QWORD *)a2 = countAndFlagsBits;
  *(_QWORD *)(a2 + 8) = v79;
  v80 = v129;
  *(_QWORD *)(a2 + 16) = v121;
  *(_QWORD *)(a2 + 24) = v80;
  v81 = v128;
  *(_QWORD *)(a2 + 32) = v120;
  *(_QWORD *)(a2 + 40) = v81;
  v82 = v127;
  *(_QWORD *)(a2 + 48) = v119;
  *(_QWORD *)(a2 + 56) = v82;
  v83 = v126;
  *(_QWORD *)(a2 + 64) = v118;
  *(_QWORD *)(a2 + 72) = v83;
  v126 = v83;
  v84 = v125;
  v85 = v124;
  *(_QWORD *)(a2 + 80) = v125;
  *(_QWORD *)(a2 + 88) = v85;
  v124 = v85;
  *(_BYTE *)(a2 + 96) = v77;
  v86 = v112;
  v87 = v111;
  *(_QWORD *)(a2 + 104) = v112;
  *(_QWORD *)(a2 + 112) = v87;
  *(_BYTE *)(a2 + 120) = v53 & 1;
  v88 = KeyPath;
  *(_QWORD *)(a2 + 128) = v117;
  *(_QWORD *)(a2 + 136) = v88;
  *(_QWORD *)(a2 + 144) = 1;
  *(_BYTE *)(a2 + 152) = 0;
  *(_QWORD *)(a2 + 160) = 0;
  *(_BYTE *)(a2 + 168) = 1;
  v89 = sub_100008B04(&qword_10149DB18);
  sub_10000C1FC(v78, a2 + *(int *)(v89 + 80), &qword_10149DAF8);
  v98 = v77;
  v96 = v84;
  v97 = v85;
  v95 = v83;
  v90 = v118;
  v91 = v121;
  v92 = v120;
  v93 = v119;
  sub_100175BC0(countAndFlagsBits, (char)object, v121, v129, v120, v128, v119, v127, v118, v95, v96, v97, v98);
  sub_10006BB40(v86, v87, v76);
  v94 = v117;
  swift_bridgeObjectRetain(v117);
  swift_retain();
  sub_10006BB40(v86, v87, v76);
  swift_bridgeObjectRetain(v94);
  swift_retain();
  swift_bridgeObjectRelease(v116);
  sub_100010CC4(v123, &qword_10149DAF8);
  sub_10006B77C(v86, v87, v76);
  swift_release();
  swift_bridgeObjectRelease(v94);
  sub_100010CC4(v122, &qword_10149DAF8);
  sub_10006B77C(v86, v87, v132);
  swift_release();
  swift_bridgeObjectRelease(v94);
  sub_100175C24(countAndFlagsBits, (char)object, v91, v129, v92, v128, v93, v127, v90, v126, v125, v124, v139._countAndFlagsBits);
}

_QWORD *sub_1001599BC()
{
  _QWORD *v0;
  _QWORD *result;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char **v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[2];
  unint64_t v31;
  _QWORD *v32;

  result = &_swiftEmptySetSingleton;
  v2 = _swiftEmptyArrayStorage;
  v31 = (unint64_t)_swiftEmptyArrayStorage;
  v32 = &_swiftEmptySetSingleton;
  v3 = v0[2];
  v4 = v0[3] >> 1;
  v5 = v4 - v3;
  if (v4 == v3)
  {
LABEL_15:
    swift_bridgeObjectRelease(result);
    return v2;
  }
  else
  {
    if (v4 > v3)
    {
      v6 = v0[1];
      v27 = *v0;
      swift_unknownObjectRetain(*v0);
      v7 = (uint64_t *)(v6 + 80 * v3 + 40);
      v8 = &selRef_supportedInteractionModels;
      while (1)
      {
        v9 = *(v7 - 4);
        v10 = *(v7 - 3);
        v11 = (void *)*(v7 - 2);
        v12 = *v7;
        v13 = v7[3];
        swift_bridgeObjectRetain(v9);
        swift_bridgeObjectRetain(v10);
        swift_unknownObjectRetain(v11);
        swift_bridgeObjectRetain(v12);
        swift_bridgeObjectRetain(v13);
        v14 = objc_msgSend(v11, v8[86]);
        if (v14)
        {
          v15 = v14;
          v16 = objc_msgSend(v14, "name");
          if (v16)
          {
            v17 = v16;
            v28 = v10;
            v29 = v9;
            v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
            v20 = v19;

            v21 = (uint64_t)v32;
            swift_bridgeObjectRetain(v32);
            v22 = sub_10012A824(v18, v20, v21);
            swift_bridgeObjectRelease(v21);
            if ((v22 & 1) != 0)
            {
              swift_bridgeObjectRelease(v13);
              swift_bridgeObjectRelease(v12);
              swift_unknownObjectRelease(v11);
              swift_bridgeObjectRelease(v28);
              swift_bridgeObjectRelease(v29);
              swift_unknownObjectRelease(v15);
              swift_bridgeObjectRelease(v20);
              v8 = &selRef_supportedInteractionModels;
            }
            else
            {
              sub_10002D534(v30, v18, v20);
              swift_bridgeObjectRelease(v30[1]);
              v23 = swift_unknownObjectRetain(v15);
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
              v25 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v24 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v25 >= v24 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v24 > 1, v25 + 1, 1);
              v26 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v15);
              specialized Array._endMutation()(v26);
              swift_bridgeObjectRelease(v13);
              swift_bridgeObjectRelease(v12);
              swift_unknownObjectRelease(v11);
              swift_bridgeObjectRelease(v28);
              swift_bridgeObjectRelease(v29);
              swift_unknownObjectRelease(v15);
              v8 = &selRef_supportedInteractionModels;
            }
            goto LABEL_6;
          }
          swift_unknownObjectRelease(v15);
        }
        swift_bridgeObjectRelease(v13);
        swift_bridgeObjectRelease(v12);
        swift_unknownObjectRelease(v11);
        swift_bridgeObjectRelease(v10);
        swift_bridgeObjectRelease(v9);
LABEL_6:
        v7 += 10;
        if (!--v5)
        {
          swift_unknownObjectRelease(v27);
          v2 = (_QWORD *)v31;
          result = v32;
          goto LABEL_15;
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100159C34(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  __objc2_class **v22;
  char **v23;
  char **v24;
  double v25;
  uint64_t v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  id v31;
  UIImage *v32;
  NSData *v33;
  NSData *v34;
  uint64_t v35;
  char **v36;
  __objc2_class **v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  double v44;
  char **v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  UIImage *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  Swift::String v57;
  Swift::String v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  void *v74;
  double v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  Swift::String v97;
  void *v98;
  uint64_t v99;
  Swift::String v100;

  v3 = v2;
  v6 = sub_100008B04((uint64_t *)&unk_10149A480);
  __chkstk_darwin(v6);
  v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorScheme(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v92 - v14;
  v99 = (uint64_t)_swiftEmptyArrayStorage;
  v94 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  sub_100019F8C((uint64_t)v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for ColorScheme.dark(_:), v9);
  v16 = static ColorScheme.== infix(_:_:)(v15, v12);
  v17 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17(v12, v9);
  v17(v15, v9);
  v18 = &_swiftEmptySetSingleton;
  v98 = &_swiftEmptySetSingleton;
  v19 = *(_QWORD *)(a1 + 16);
  if (!v19)
  {
LABEL_25:
    swift_bridgeObjectRelease(v18);
    return v99;
  }
  v92 = v8;
  v93 = v3;
  swift_bridgeObjectRetain(a1);
  v20 = 0;
  v21 = 0.0;
  v22 = off_101198000;
  v23 = &selRef_legalDisclaimerLabel;
  v24 = &selRef_runWithDuration_delay_springDamping_initialVelocity_options_;
  v96 = v16 & 1;
  v95 = v19;
  while (1)
  {
    v26 = *(_QWORD *)(a1 + 8 * v20 + 32);
    if (!v26)
      goto LABEL_4;
    v27 = (void *)objc_opt_self(v22[108]);
    swift_unknownObjectRetain_n(v26, 2);
    v28 = objc_msgSend(v27, v23[439]);
    objc_msgSend(v28, v24[63]);
    v30 = v29;

    v31 = objc_msgSend((id)objc_opt_self(MKArtworkDataSourceCache), "sharedInstance");
    v32 = (UIImage *)objc_msgSend(v31, "imageForArtwork:size:featureType:scale:nightMode:", v26, 6, 2, v96, v30);

    if (v32)
      break;
    swift_unknownObjectRelease_n(v26, 2);
LABEL_4:
    v25 = v21;
LABEL_5:
    ++v20;
    v21 = v25;
    if (v19 == v20)
    {
      swift_bridgeObjectRelease(a1);
      v18 = v98;
      goto LABEL_25;
    }
  }
  v33 = UIImagePNGRepresentation(v32);
  if (!v33)
    goto LABEL_12;
  v34 = v33;
  v35 = a1;
  v36 = v23;
  v37 = v22;
  v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v33);
  v40 = v39;

  v41 = (uint64_t)v98;
  swift_bridgeObjectRetain(v98);
  v42 = sub_10012A958(v38, v40, v41);
  swift_bridgeObjectRelease(v41);
  if ((v42 & 1) != 0)
  {
    sub_100036B4C(v38, v40);
    swift_unknownObjectRelease_n(v26, 2);

    v25 = v21;
    v22 = v37;
    v23 = v36;
    a1 = v35;
    v19 = v95;
    v24 = &selRef_runWithDuration_delay_springDamping_initialVelocity_options_;
    goto LABEL_5;
  }
  sub_10002D6E0(&v97._countAndFlagsBits, v38, v40);
  sub_100036B4C(v97._countAndFlagsBits, (unint64_t)v97._object);
  v22 = v37;
  v23 = v36;
  a1 = v35;
  v19 = v95;
  v24 = &selRef_runWithDuration_delay_springDamping_initialVelocity_options_;
LABEL_12:
  v43 = v99;
  if ((unint64_t)v99 >> 62)
  {
    v45 = v24;
    if (v99 < 0)
      v46 = v99;
    else
      v46 = v99 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v99);
    v47 = v46;
    v24 = v45;
    v48 = _CocoaArrayWrapper.endIndex.getter(v47);
    swift_bridgeObjectRelease(v43);
    if (!v48)
      goto LABEL_19;
LABEL_14:
    v44 = *(double *)(v93 + *(int *)(v94 + 24));
  }
  else
  {
    if (*(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_14;
LABEL_19:
    v44 = 0.0;
  }
  -[UIImage size](v32, "size");
  v25 = v21 + v44 + v49;
  if (v25 <= a2)
  {
    v50 = v32;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v50);
    v52 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v51 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v52 >= v51 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v51 > 1, v52 + 1, 1);
    v53 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v52, v50);
    specialized Array._endMutation()(v53);

    swift_unknownObjectRelease_n(v26, 2);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease(a1);

  swift_unknownObjectRelease_n(v26, 2);
  swift_bridgeObjectRelease(v98);
  v55 = v93;
  v56 = v94;
  if (qword_101490ED0 != -1)
    goto LABEL_71;
  while (2)
  {
    v100._countAndFlagsBits = 0xD000000000000046;
    v100._object = (void *)0x8000000100E4D4C0;
    v57._object = (void *)0x8000000100E4D4A0;
    v57._countAndFlagsBits = 0xD000000000000019;
    v58._countAndFlagsBits = 10911970;
    v58._object = (void *)0xA300000000000000;
    v97 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v58, v100);
    v59 = sub_10006C008();
    v60 = Text.init<A>(_:)(&v97, &type metadata for String, v59);
    v62 = v61;
    v64 = v63;
    v66 = v65 & 1;
    v67 = type metadata accessor for Text.WritingMode(0);
    v68 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v92, 1, 1, v67);
    v69 = Text.Measurements.size(of:in:writingMode:)(v60, v62, v66, v64, v68, INFINITY, INFINITY);
    sub_10006B77C(v60, v62, v66);
    swift_bridgeObjectRelease(v64);
    sub_100010CC4(v68, (uint64_t *)&unk_10149A480);
    v70 = *(double *)(v55 + *(int *)(v56 + 24));
    v55 = v99;
    if ((unint64_t)v99 >> 62)
    {
      if (v99 < 0)
        v91 = v99;
      else
        v91 = v99 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v99);
      result = _CocoaArrayWrapper.endIndex.getter(v91);
      v71 = result;
      if (!result)
      {
LABEL_76:
        swift_bridgeObjectRelease(v55);
        return v99;
      }
    }
    else
    {
      v71 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(v99);
      if (!v71)
        goto LABEL_76;
    }
    v72 = v71 - 1;
    if (__OFSUB__(v71, 1))
    {
      __break(1u);
      goto LABEL_78;
    }
    v64 = v55 & 0xC000000000000001;
    if ((v55 & 0xC000000000000001) != 0)
    {
LABEL_78:
      v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v71 - 1, v55);
LABEL_35:
      v74 = v73;
      v75 = v69 + v70;
      if (v69 + v70 <= a2 - v21)
      {
LABEL_66:
        swift_bridgeObjectRelease(v55);

        return v99;
      }
      v56 = v55 + 32;
      while (1)
      {
        v77 = v99;
        if ((unint64_t)v99 >> 62)
        {
          v88 = v99 < 0 ? v99 : v99 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v99);
          v78 = _CocoaArrayWrapper.endIndex.getter(v88);
          swift_bridgeObjectRelease(v77);
        }
        else
        {
          v78 = *(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v79 = v78 ? v70 : 0.0;
        objc_msgSend(v74, "size");
        v81 = v80;
        v82 = v99;
        if ((unint64_t)v99 >> 62)
        {
          if (v99 < 0)
            v89 = v99;
          else
            v89 = v99 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v99);
          v90 = _CocoaArrayWrapper.endIndex.getter(v89);
          swift_bridgeObjectRelease(v82);
          if (!v90)
          {
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
        }
        else if (!*(_QWORD *)((v99 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_65;
        }
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v82);
        if (!(_DWORD)isUniquelyReferenced_nonNull_bridgeObject || v82 < 0 || (v82 & 0x4000000000000000) != 0)
        {
          isUniquelyReferenced_nonNull_bridgeObject = sub_10020D8B8(v82);
          v82 = isUniquelyReferenced_nonNull_bridgeObject;
          v99 = isUniquelyReferenced_nonNull_bridgeObject;
        }
        v84 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v84)
          break;
        v85 = v84 - 1;
        v86 = *(void **)((v82 & 0xFFFFFFFFFFFFFF8) + 8 * v85 + 0x20);
        *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10) = v85;
        specialized Array._endMutation()(isUniquelyReferenced_nonNull_bridgeObject);

        if (!v72)
          goto LABEL_76;
        if (__OFSUB__(v72--, 1))
          goto LABEL_68;
        if (v64)
        {
          v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v72, v55);
        }
        else
        {
          if ((v72 & 0x8000000000000000) != 0)
            goto LABEL_69;
          if (v72 >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_70;
          v76 = *(id *)(v56 + 8 * v72);
        }
        v74 = v76;
        v21 = v21 - (v79 + v81);
        if (v75 <= a2 - v21)
          goto LABEL_66;
      }
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_once(&qword_101490ED0, sub_10011833C);
      continue;
    }
    break;
  }
  if ((v72 & 0x8000000000000000) == 0)
  {
    if (v72 >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_80;
    v73 = *(id *)(v55 + 8 * v72 + 32);
    goto LABEL_35;
  }
  __break(1u);
LABEL_80:
  __break(1u);
  return result;
}

void sub_10015A3E8(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  void **v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_30;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v4 = _swiftEmptyArrayStorage;
    if (!v3)
      return;
    if (v3 != 1)
      break;
    v5 = v1[2];
    v6 = (unint64_t)v1[3] >> 1;
    v2 = v6 - v5;
    if (__OFSUB__(v6, v5))
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v7 = (_QWORD *)v1[1];
    if (!v2)
    {
LABEL_15:
      v28 = v4;
      if (v5 == v6)
        return;
      if (v5 < v6)
      {
        v16 = v7[10 * v5 + 3];
        v17 = objc_msgSend((id)swift_unknownObjectRetain(v16), "system");
        if (v17
          && (v18 = v17,
              v19 = objc_msgSend(v17, "artwork"),
              swift_unknownObjectRelease(v18),
              v19))
        {
          sub_10020E2C0(0, 0, (uint64_t)v19);
          swift_unknownObjectRelease(v16);
        }
        else
        {
          swift_unknownObjectRelease(v16);
        }
        return;
      }
LABEL_37:
      __break(1u);
      return;
    }
    v8 = *v1;
    v28 = _swiftEmptyArrayStorage;
    swift_unknownObjectRetain(v8);
    v1 = (uint64_t *)&v28;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
      goto LABEL_36;
    if (v5 <= v6)
      v9 = v6;
    else
      v9 = v5;
    v10 = v9 - v5;
    v27 = v7;
    v11 = (void **)&v7[10 * v5 + 3];
    while (v10)
    {
      v12 = *v11;
      v11 += 10;
      v13 = objc_msgSend(v12, "headerArtwork");
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v14 = v28[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
      v1 = (uint64_t *)&v28;
      specialized ContiguousArray._endMutation()(v15);
      --v10;
      if (!--v2)
      {
        v4 = v28;
        swift_unknownObjectRelease(v8);
        v7 = v27;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_30:
    if (v2 < 0)
      v26 = v2;
    else
      v26 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v2);
  }
  v28 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v3);
  if (v3 < 0)
    goto LABEL_35;
  v20 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v2);
    }
    else
    {
      v21 = *(void **)(v2 + 8 * v20 + 32);
      swift_unknownObjectRetain(v21);
    }
    ++v20;
    v22 = objc_msgSend(v21, "artwork", v27);
    v23 = swift_unknownObjectRelease(v21);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v23);
    v24 = v28[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v24);
    v25 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
    specialized ContiguousArray._endMutation()(v25);
  }
  while (v3 != v20);
}

uint64_t sub_10015A69C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::String v12;
  Swift::String v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)@<X0>(uint64_t@<X8>);
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  char v37;
  uint64_t v38;
  Swift::String v39;

  v35 = a2;
  v3 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  v34 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v34 + 64);
  __chkstk_darwin(v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149C998);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - v10;
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v39._countAndFlagsBits = 0xD00000000000003FLL;
  v39._object = (void *)0x8000000100E4D440;
  v12._object = (void *)0x8000000100E4D420;
  v12._countAndFlagsBits = 0xD00000000000001BLL;
  v13._countAndFlagsBits = 0x6E694C2065726F4DLL;
  v13._object = (void *)0xEA00000000007365;
  v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v13, v39);
  v14 = sub_10006C008();
  v15 = Text.init<A>(_:)(&v36, &type metadata for String, v14);
  v17 = (uint64_t)v16;
  v19 = v18;
  v36._countAndFlagsBits = v15;
  v36._object = v16;
  v21 = v20 & 1;
  v37 = v20 & 1;
  v38 = v18;
  View.accessibility(identifier:)(0xD00000000000001FLL, 0x8000000100E4D480, &type metadata for Text, &protocol witness table for Text);
  sub_10006B77C(v15, v17, v21);
  swift_bridgeObjectRelease(v19);
  v22 = sub_1001599BC();
  sub_10015A3E8((unint64_t)v22);
  v24 = v23;
  swift_bridgeObjectRelease(v22);
  sub_1000202AC(a1, (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitCollapsedLinesView);
  v25 = *(unsigned __int8 *)(v34 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v4 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject(&unk_1011A6988, v27 + 8, v25 | 7);
  sub_10003F29C((uint64_t)v5, v28 + v26, type metadata accessor for NearbyTransitCollapsedLinesView);
  *(_QWORD *)(v28 + v27) = v24;
  sub_10000C1FC((uint64_t)v11, (uint64_t)v8, &qword_10149C998);
  v29 = v35;
  sub_10000C1FC((uint64_t)v8, v35, &qword_10149C998);
  v30 = sub_100008B04(&qword_10149D570);
  v31 = v29 + *(int *)(v30 + 48);
  *(_QWORD *)v31 = 0x4024000000000000;
  *(_BYTE *)(v31 + 8) = 0;
  v32 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v29 + *(int *)(v30 + 64));
  *v32 = sub_100172B14;
  v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v28;
  swift_retain();
  sub_100010CC4((uint64_t)v11, &qword_10149C998);
  swift_release();
  return sub_100010CC4((uint64_t)v8, &qword_10149C998);
}

uint64_t sub_10015A988@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  __n128 v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v23;
  char v24;
  _OWORD v26[7];

  v6 = sub_100008B04(&qword_10149D578);
  __chkstk_darwin(v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for NearbyTransitCollapsedLinesView(0) + 24));
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v10);
  *((_QWORD *)v8 + 1) = v9;
  v8[16] = 0;
  v11 = sub_100008B04(&qword_10149D580);
  sub_10015AB54(a2, (uint64_t)&v8[*(int *)(v11 + 44)]);
  v13 = GeometryProxy.size.getter(v12);
  v15 = v14;
  v16 = static Alignment.trailing.getter(v13);
  v24 = 1;
  v23 = 1;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v26, 0, 1, 0, 1, 0x7FF0000000000000, 0, v15, 0, 0, v23, 0, v24, v16, v17);
  sub_10000C1FC((uint64_t)v8, a3, &qword_10149D578);
  v18 = (_OWORD *)(a3 + *(int *)(sub_100008B04(&qword_10149D588) + 36));
  v19 = v26[5];
  v18[4] = v26[4];
  v18[5] = v19;
  v18[6] = v26[6];
  v20 = v26[1];
  *v18 = v26[0];
  v18[1] = v20;
  v21 = v26[3];
  v18[2] = v26[2];
  v18[3] = v21;
  return sub_100010CC4((uint64_t)v8, &qword_10149D578);
}

uint64_t sub_10015AB54@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  double v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  Swift::String v20;
  Swift::String v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  void *object;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(char *, char *, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  double v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t countAndFlagsBits;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  Swift::String v65;

  v52 = a2;
  v53 = sub_100008B04(&qword_10149D590);
  v3 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v49 - v8;
  v10 = GeometryProxy.size.getter(v7);
  v11 = sub_100159C34(a1, v10);
  v13 = v12;
  v59._countAndFlagsBits = v11;
  KeyPath = swift_getKeyPath(&unk_100E2FD00);
  v15 = sub_100008B04(&qword_10149D598);
  v16 = sub_100008B04(&qword_10149D5A0);
  v17 = sub_100010D70(&qword_10149D5A8, &qword_10149D598, (const char *)&protocol conformance descriptor for [A]);
  v18 = sub_10000BC84((unint64_t *)&unk_10149D5B0, (uint64_t (*)(uint64_t))sub_100172B74, (uint64_t)&protocol conformance descriptor for NSObject);
  v19 = sub_100172BB0();
  v54 = v9;
  ForEach<>.init(_:id:content:)(&v59, KeyPath, sub_10015AF64, 0, v15, v16, v17, v18, v19);
  if ((v13 & 1) != 0)
  {
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v65._countAndFlagsBits = 0xD000000000000046;
    v65._object = (void *)0x8000000100E4D4C0;
    v20._object = (void *)0x8000000100E4D4A0;
    v20._countAndFlagsBits = 0xD000000000000019;
    v21._countAndFlagsBits = 10911970;
    v21._object = (void *)0xA300000000000000;
    v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v21, v65);
    v22 = sub_10006C008();
    v23 = Text.init<A>(_:)(&v59, &type metadata for String, v22);
    v25 = v24;
    v27 = v26;
    v29 = v28 & 1;
    sub_10006BB40(v23, v24, v28 & 1);
    swift_bridgeObjectRetain(v27);
    sub_10006BB40(v23, v25, v29);
    swift_bridgeObjectRetain(v27);
    sub_10006B77C(v23, v25, v29);
    swift_bridgeObjectRelease(v27);
    v55 = 0uLL;
    *(_QWORD *)&v56 = v23;
    *((_QWORD *)&v56 + 1) = v25;
    *(_QWORD *)&v57 = v29;
    *((_QWORD *)&v57 + 1) = v27;
    v58 = 0;
    v30 = sub_100008B04(&qword_10149D5C8);
    v31 = sub_100010D70(&qword_10149D5D0, &qword_10149D5C8, (const char *)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v55, v30, &type metadata for Spacer, v31, &protocol witness table for Spacer);
    sub_10006B77C(v23, v25, v29);
    v32 = swift_bridgeObjectRelease(v27);
  }
  else
  {
    v55 = xmmword_100E2F4D0;
    v56 = 0u;
    v57 = 0u;
    v58 = 1;
    v33 = sub_100008B04(&qword_10149D5C8);
    v34 = sub_100010D70(&qword_10149D5D0, &qword_10149D5C8, (const char *)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v55, v33, &type metadata for Spacer, v34, &protocol witness table for Spacer);
  }
  object = v59._object;
  v50 = v3;
  countAndFlagsBits = v59._countAndFlagsBits;
  v36 = v60;
  v37 = v61;
  v39 = v62;
  v38 = v63;
  v40 = v64;
  v41 = *(void (**)(char *, char *, uint64_t, __n128))(v3 + 16);
  v42 = v53;
  v41(v5, v54, v53, v32);
  v43 = v52;
  ((void (*)(uint64_t, char *, uint64_t))v41)(v52, v5, v42);
  v44 = v43 + *(int *)(sub_100008B04((uint64_t *)&unk_10149D5D8) + 48);
  v45 = countAndFlagsBits;
  *(_QWORD *)v44 = countAndFlagsBits;
  *(_QWORD *)(v44 + 8) = object;
  *(_QWORD *)(v44 + 16) = v36;
  *(_QWORD *)(v44 + 24) = v37;
  *(_QWORD *)(v44 + 32) = v39;
  *(_QWORD *)(v44 + 40) = v38;
  *(_BYTE *)(v44 + 48) = v40;
  sub_100172C34(v45, (uint64_t)object, v36, v37, v39, v38, v40);
  v46 = *(void (**)(char *, uint64_t))(v50 + 8);
  v46(v54, v42);
  v47 = sub_100172C70(v45, (uint64_t)object, v36, v37, v39, v38, v40);
  return ((uint64_t (*)(char *, uint64_t, double))v46)(v5, v42, v47);
}

uint64_t sub_10015AF64(id *a1)
{
  uint64_t v2;

  v2 = Image.init(uiImage:)(*a1);
  View.accessibility(identifier:)(0xD000000000000020, 0x8000000100E4D510, &type metadata for Image, &protocol witness table for Image);
  return swift_release(v2);
}

uint64_t sub_10015AFE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  __n128 v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t result;
  char *v13;
  char *v14;
  uint64_t v15;

  __chkstk_darwin(a1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000202AC(v2, (uint64_t)v5, type metadata accessor for NearbyTransitCollapsedLinesView);
  v7 = static HorizontalAlignment.leading.getter(v6);
  v9 = static VerticalAlignment.center.getter(v8);
  *a2 = swift_getKeyPath(&unk_100E2FCC0);
  v10 = sub_100008B04(&qword_1014931B0);
  swift_storeEnumTagMultiPayload(a2, v10, 0);
  v11 = (int *)sub_100008B04((uint64_t *)&unk_10149D560);
  sub_10015A69C((uint64_t)v5, (uint64_t)a2 + v11[9]);
  result = sub_1000202F0((uint64_t)v5, type metadata accessor for NearbyTransitCollapsedLinesView);
  *(_QWORD *)((char *)a2 + v11[12]) = v9;
  v13 = (char *)a2 + v11[13];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  *(_QWORD *)((char *)a2 + v11[10]) = v7;
  v14 = (char *)a2 + v11[11];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  *((_BYTE *)a2 + v11[14]) = 0;
  return result;
}

void sub_10015B0F8()
{
  qword_1014D4DC0 = 0x402C000000000000;
}

void sub_10015B108()
{
  qword_1014D4DC8 = 0x4024000000000000;
}

void sub_10015B118()
{
  qword_1014D4DD0 = 0x4046000000000000;
}

void sub_10015B128()
{
  qword_1014D4DD8 = 0x4030000000000000;
}

void sub_10015B138(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  void *object;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  void *v52;
  double v53;
  NSString v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  _OWORD v79[3];
  _OWORD v80[2];
  _QWORD v81[2];

  v60 = type metadata accessor for NearbyTransitLineSectionView(0);
  v61 = v1;
  v2 = v1 + *(int *)(v60 + 24);
  v3 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    KeyPath = swift_getKeyPath(&unk_100E2F5B0);
    v5 = swift_getKeyPath(&unk_100E2F5D8);
    v6 = v3;
    static Published.subscript.getter(v79, v6, KeyPath, v5);

    swift_release();
    swift_release();
    v7 = *(_QWORD *)&v79[0];
    v63 = *(_QWORD *)(*(_QWORD *)&v79[0] + 16);
    if (v63)
    {
      v58 = 0;
      v8 = 0;
      v62 = *(_QWORD *)&v79[0] + 32;
      v59 = *(_QWORD *)&v79[0];
      while (1)
      {
        v2 = *(_QWORD *)(v7 + 16);
        if (v8 >= v2)
        {
LABEL_47:
          __break(1u);
          goto LABEL_48;
        }
        v9 = (_QWORD *)(v62 + 32 * v8);
        v10 = v9[2];
        v11 = *(_QWORD *)(v10 + 16);
        if (!v11)
          goto LABEL_6;
        v66 = v8;
        v12 = v9[1];
        v13 = v9[3];
        v14 = (_OWORD *)(v61 + *(int *)(v60 + 20));
        v15 = v14[3];
        v79[2] = v14[2];
        v80[0] = v15;
        *(_OWORD *)((char *)v80 + 9) = *(_OWORD *)((char *)v14 + 57);
        v16 = v14[1];
        v79[0] = *v14;
        v79[1] = v16;
        v17 = v16;
        v81[0] = v16;
        v18 = v10 + 32;
        swift_bridgeObjectRetain_n(v10, 2);
        v65 = v12;
        swift_bridgeObjectRetain(v12);
        v64 = v13;
        swift_unknownObjectRetain(v13);
        v19 = 0;
        v70 = (uint64_t *)(v17 + 56);
        v71 = v10;
        v68 = v17;
        v69 = v11;
        v67 = v10 + 32;
        while (1)
        {
          v2 = *(_QWORD *)(v10 + 16);
          if (v19 >= v2)
          {
            __break(1u);
            goto LABEL_47;
          }
          v20 = (_QWORD *)(v18 + (v19 << 6));
          v22 = v20[4];
          v21 = v20[5];
          v23 = v20[3];
          v24 = v20[1];
          swift_bridgeObjectRetain(v23);
          swift_bridgeObjectRetain_n(v22, 2);
          swift_bridgeObjectRetain(v21);
          swift_bridgeObjectRetain(v24);
          sub_100084A9C(v79);
          sub_100180E9C(v79, v22);
          v26 = v25;
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v22);
          swift_bridgeObjectRelease(v23);
          swift_bridgeObjectRelease(v24);
          sub_100084B00(v79);
          swift_bridgeObjectRelease(v22);
          if ((v26 & 1) == 0)
          {
            v75 = *(_QWORD *)(v17 + 16);
            if (v75)
              break;
          }
LABEL_11:
          if (++v19 == v11)
          {
            swift_unknownObjectRelease(v64);
            swift_bridgeObjectRelease(v65);
            swift_bridgeObjectRelease_n(v10, 2);
            goto LABEL_5;
          }
        }
        v72 = v19;
        v27 = *a1;
        v76 = a1[1];
        swift_bridgeObjectRetain(v17);
        v28 = 0;
        v29 = v70;
        while (1)
        {
          v30 = *(v29 - 3);
          v31 = *(v29 - 2);
          v33 = *(v29 - 1);
          v32 = *v29;
          v34 = v29[1];
          v35 = v29[2];
          v37 = v29[3];
          v36 = v29[4];
          v38 = v29[5];
          v73 = (id)v29[6];
          v74 = v29[7];
          if ((v30 != v27 || v31 != v76)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v27, v76, 0) & 1) == 0)
          {
            goto LABEL_17;
          }
          v39 = a1[3];
          if (v32)
          {
            if (!v39)
              goto LABEL_17;
            v40 = a1[2];
            if ((v33 != v40 || v32 != v39)
              && (_stringCompareWithSmolCheck(_:_:expecting:)(v33, v32, v40, v39, 0) & 1) == 0)
            {
              goto LABEL_17;
            }
          }
          else if (v39)
          {
            goto LABEL_17;
          }
          v41 = a1[4];
          v42 = a1[5];
          if ((v34 != v41 || v35 != v42)
            && (_stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v41, v42, 0) & 1) == 0)
          {
            goto LABEL_17;
          }
          v43 = a1[7];
          if (v36)
            break;
          if (!v43)
            goto LABEL_37;
LABEL_17:
          ++v28;
          v29 += 11;
          if (v75 == v28)
          {
            sub_10008207C(v81);
            v10 = v71;
            v19 = v72;
            v17 = v68;
            v11 = v69;
            v18 = v67;
            goto LABEL_11;
          }
        }
        if (!v43)
          goto LABEL_17;
        v44 = a1[6];
        if ((v37 != v44 || v36 != v43)
          && ((_stringCompareWithSmolCheck(_:_:expecting:)(v37, v36, a1[6], a1[7], 0) & 1) == 0
           || (_stringCompareWithSmolCheck(_:_:expecting:)(v37, v36, v44, v43, 0) & 1) == 0))
        {
          goto LABEL_17;
        }
LABEL_37:
        if (v38 != a1[8] || v74 != a1[10] || (objc_msgSend(v73, "isEqual:", a1[9]) & 1) == 0)
          goto LABEL_17;
        sub_10008207C(v81);
        swift_bridgeObjectRelease(v71);
        swift_bridgeObjectRelease(v58);
        dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v78 = v45;
        v46._countAndFlagsBits = 8236;
        v46._object = (void *)0xE200000000000000;
        String.append(_:)(v46);
        v47._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v47._object;
        String.append(_:)(v47);
        swift_bridgeObjectRelease(object);
        v49._countAndFlagsBits = 8236;
        v49._object = (void *)0xE200000000000000;
        String.append(_:)(v49);
        v50._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v51 = v50._object;
        String.append(_:)(v50);
        swift_unknownObjectRelease(v64);
        swift_bridgeObjectRelease(v71);
        swift_bridgeObjectRelease(v65);
        swift_bridgeObjectRelease(v51);
        v58 = v78;
LABEL_5:
        v7 = v59;
        v8 = v66;
LABEL_6:
        if (++v8 == v63)
        {
          swift_bridgeObjectRelease(v7);
          v52 = (void *)objc_opt_self(GEOAPPortal);
          if (!v58)
            goto LABEL_44;
          v54 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v53 = swift_bridgeObjectRelease(v58).n128_u64[0];
          goto LABEL_45;
        }
      }
    }
    swift_bridgeObjectRelease(*(_QWORD *)&v79[0]);
    v52 = (void *)objc_opt_self(GEOAPPortal);
LABEL_44:
    v54 = 0;
LABEL_45:
    objc_msgSend(v52, "captureUserAction:target:value:", 231, 44, v54, v53);

  }
  else
  {
LABEL_48:
    v55 = *(_QWORD *)(v2 + 8);
    v56 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v57 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    EnvironmentObject.error()(0, v55, v56, v57);
    __break(1u);
  }
}

uint64_t sub_10015B6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43[16];
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[4];

  v3 = v2;
  v42 = a2;
  v37 = type metadata accessor for BorderlessButtonStyle(0);
  v41 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v36 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NearbyTransitLineSectionView(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100008B04(&qword_10149D660);
  v38 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008B04(&qword_10149D780);
  v14 = *(_QWORD *)(v13 - 8);
  v39 = v13;
  v40 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000202AC(v2, (uint64_t)v9, type metadata accessor for NearbyTransitLineSectionView);
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (v8 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1011A6A28, v19 + 88, v17 | 7);
  sub_10003F29C((uint64_t)v9, v20 + v18, type metadata accessor for NearbyTransitLineSectionView);
  v21 = v20 + v19;
  v22 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v21 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v21 + 48) = v22;
  *(_OWORD *)(v21 + 64) = *(_OWORD *)(a1 + 64);
  *(_QWORD *)(v21 + 80) = *(_QWORD *)(a1 + 80);
  v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v21 = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 16) = v23;
  v44 = a1;
  v45 = v3;
  sub_1000352C8((_QWORD *)a1);
  v24 = sub_100008B04(&qword_10149D788);
  v25 = sub_10002067C(&qword_10149D790, &qword_10149D788, sub_100173304, (uint64_t)&protocol witness table for _FlexFrameLayout);
  v27 = Button.init(action:label:)(sub_1001732A0, v20, sub_1001732FC, v43, v24, v25, v26);
  v28 = v36;
  BorderlessButtonStyle.init()(v27);
  v29 = sub_100010D70(&qword_10149D668, &qword_10149D660, (const char *)&protocol conformance descriptor for Button<A>);
  v30 = sub_10000BC84(&qword_10149D170, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v31 = v37;
  View.buttonStyle<A>(_:)(v28, v10, v37, v29, v30);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v31);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v10);
  v46[0] = v10;
  v46[1] = v31;
  v46[2] = v29;
  v46[3] = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v46, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v33 = v39;
  View.accessibilityIdentifier(_:)(0xD000000000000022, 0x8000000100E2FD20, v39, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v16, v33);
}

uint64_t sub_10015B9DC(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  _BYTE v11[24];
  _BYTE v12[24];
  uint64_t v13;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for NearbyTransitLineSectionView(0) + 24));
  v4 = *v3;
  if (*v3)
  {
    v5 = v4 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess(v4 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate, v11, 0, 0);
    sub_10000C1FC(v5, (uint64_t)v12, (uint64_t *)&unk_1014940B0);
    if (v13)
    {
      sub_100084C44((uint64_t)v12, (uint64_t)v10);
      sub_100010CC4((uint64_t)v12, (uint64_t *)&unk_1014940B0);
      sub_10000BE88(v10, v10[3]);
      sub_10017C43C(a2, 1);
      return sub_10000BEAC(v10);
    }
    else
    {
      return sub_100010CC4((uint64_t)v12, (uint64_t *)&unk_1014940B0);
    }
  }
  else
  {
    v7 = v3[1];
    v8 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v9 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    result = EnvironmentObject.error()(0, v7, v8, v9);
    __break(1u);
  }
  return result;
}

double sub_10015BAF4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  double v63[3];

  v43 = a1[1];
  v44 = *a1;
  v41 = a1[3];
  v42 = a1[2];
  v39 = a1[5];
  v40 = a1[4];
  v37 = a1[7];
  v38 = a1[6];
  v35 = a1[9];
  v36 = a1[8];
  v34 = a1[10];
  v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for NearbyTransitLineSectionView(0) + 20));
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = v5[3];
  v10 = v5[5];
  v32 = *((_BYTE *)v5 + 48);
  v33 = *((_BYTE *)v5 + 32);
  v11 = v5[8];
  v31 = v5[7];
  v30 = *((_BYTE *)v5 + 72);
  sub_1000352C8(a1);
  v12 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v13 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_unknownObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  v14 = EnvironmentObject.init()(v12, v13);
  v16 = v15;
  v17 = static Edge.Set.vertical.getter(v14);
  if (qword_101490FE0 != -1)
    swift_once(&qword_101490FE0, sub_10015B108);
  v19 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DC8);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  if (qword_101490FE8 != -1)
    v18 = swift_once(&qword_101490FE8, sub_10015B118);
  v26 = qword_1014D4DD0;
  v27 = static Alignment.center.getter(v18);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v51, 0, 1, 0, 1, 0, 1, v26, 0, 0, 1, 0, 1, v27, v28);
  v50 = v52;
  v49 = v54;
  v48 = v56;
  v47 = v58;
  v46 = v60;
  v45 = v62;
  *(_QWORD *)a3 = v44;
  *(_QWORD *)(a3 + 8) = v43;
  *(_QWORD *)(a3 + 16) = v42;
  *(_QWORD *)(a3 + 24) = v41;
  *(_QWORD *)(a3 + 32) = v40;
  *(_QWORD *)(a3 + 40) = v39;
  *(_QWORD *)(a3 + 48) = v38;
  *(_QWORD *)(a3 + 56) = v37;
  *(_QWORD *)(a3 + 64) = v36;
  *(_QWORD *)(a3 + 72) = v35;
  *(_QWORD *)(a3 + 80) = v34;
  *(_QWORD *)(a3 + 88) = v7;
  *(_QWORD *)(a3 + 96) = v6;
  *(_QWORD *)(a3 + 104) = v8;
  *(_QWORD *)(a3 + 112) = v9;
  *(_BYTE *)(a3 + 120) = v33;
  *(_QWORD *)(a3 + 128) = v10;
  *(_BYTE *)(a3 + 136) = v32;
  *(_QWORD *)(a3 + 144) = v31;
  *(_QWORD *)(a3 + 152) = v11;
  *(_BYTE *)(a3 + 160) = v30;
  *(_QWORD *)(a3 + 168) = v14;
  *(_QWORD *)(a3 + 176) = v16;
  *(_BYTE *)(a3 + 184) = v17;
  *(_BYTE *)(a3 + 224) = 0;
  *(_QWORD *)(a3 + 232) = v51;
  *(_BYTE *)(a3 + 240) = v50;
  *(_QWORD *)(a3 + 248) = v53;
  *(_BYTE *)(a3 + 256) = v49;
  *(_QWORD *)(a3 + 264) = v55;
  *(_BYTE *)(a3 + 272) = v48;
  *(_QWORD *)(a3 + 280) = v57;
  *(_BYTE *)(a3 + 288) = v47;
  *(_QWORD *)(a3 + 296) = v59;
  *(_BYTE *)(a3 + 304) = v46;
  *(_QWORD *)(a3 + 312) = v61;
  *(_BYTE *)(a3 + 320) = v45;
  *(double *)(a3 + 192) = v19;
  *(_QWORD *)(a3 + 200) = v21;
  *(_QWORD *)(a3 + 208) = v23;
  *(_QWORD *)(a3 + 216) = v25;
  result = v63[0];
  *(_OWORD *)(a3 + 328) = *(_OWORD *)v63;
  return result;
}

_QWORD *sub_10015BE88@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t OpaqueTypeConformance2;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v78 = type metadata accessor for BorderlessButtonStyle(0);
  v75 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v72 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100008B04(&qword_10149D670);
  v71 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v69 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008B04(&qword_10149D678);
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  __chkstk_darwin(v5);
  v74 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04(&qword_10149D680);
  v88 = *(_QWORD *)(v7 - 8);
  v89 = v7;
  __chkstk_darwin(v7);
  v70 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149D688);
  __chkstk_darwin(v9);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v85 = (char *)&v67 - v13;
  v14 = type metadata accessor for NearbyTransitLineSectionView(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v90 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008B04(&qword_10149D690);
  v86 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v87 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v67 - v20;
  v22 = v1 + *(int *)(v14 + 28);
  v23 = *(_QWORD *)(v22 + 8);
  LOBYTE(v91) = *(_BYTE *)v22;
  v92 = v23;
  v84 = sub_100008B04(&qword_10149CD30);
  result = State.wrappedValue.getter(&v95);
  v25 = *(_QWORD *)(v1 + *(int *)(v14 + 20) + 16);
  v26 = *(_QWORD *)(v25 + 16);
  if (v95 == 1)
  {
    if (v26 < 3)
    {
      __break(1u);
      return result;
    }
    v26 = 3;
  }
  v81 = v17;
  v82 = v11;
  v83 = a1;
  v27 = 1;
  v91 = v25;
  v92 = v25 + 32;
  v93 = 0;
  v94 = (2 * v26) | 1;
  v28 = v25;
  v68 = v1;
  v29 = v90;
  sub_1000202AC(v1, v90, type metadata accessor for NearbyTransitLineSectionView);
  v30 = *(unsigned __int8 *)(v15 + 80);
  v31 = (v30 + 16) & ~v30;
  v32 = v31 + v16;
  v67 = v30 | 7;
  v33 = swift_allocObject(&unk_1011A69B0, v32, v30 | 7);
  sub_10003F29C(v29, v33 + v31, type metadata accessor for NearbyTransitLineSectionView);
  v79 = v28;
  swift_bridgeObjectRetain_n(v28, 2);
  v34 = sub_100008B04(&qword_10149D698);
  v35 = sub_100008B04(&qword_10149D6A0);
  v36 = sub_100010D70(&qword_10149D6A8, &qword_10149D698, (const char *)&protocol conformance descriptor for ArraySlice<A>);
  v37 = sub_100010D70(&qword_10149D6B0, &qword_10149D6A0, (const char *)&protocol conformance descriptor for TupleView<A>);
  v38 = sub_100172E10();
  v80 = v21;
  v39 = v35;
  v40 = (uint64_t)v85;
  ForEach<>.init(_:content:)(&v91, sub_100172DC4, v33, v34, &type metadata for String, v39, v36, v37, v38);
  v41 = *(_QWORD *)(v22 + 8);
  LOBYTE(v91) = *(_BYTE *)v22;
  v92 = v41;
  State.wrappedValue.getter(&v95);
  if (v95 == 1)
  {
    v42 = v90;
    sub_1000202AC(v68, v90, type metadata accessor for NearbyTransitLineSectionView);
    v43 = swift_allocObject(&unk_1011A69D8, v32, v67);
    sub_10003F29C(v42, v43 + v31, type metadata accessor for NearbyTransitLineSectionView);
    v44 = sub_100008B04(&qword_10149D6C8);
    v45 = sub_10002067C(&qword_10149D6D0, &qword_10149D6C8, (uint64_t (*)(void))sub_100172F38, (uint64_t)&protocol witness table for _FlexFrameLayout);
    v46 = v69;
    v48 = Button.init(action:label:)(sub_100172F24, v43, sub_10015D320, 0, v44, v45, v47);
    v49 = v72;
    BorderlessButtonStyle.init()(v48);
    v50 = sub_100010D70(&qword_10149D708, &qword_10149D670, (const char *)&protocol conformance descriptor for Button<A>);
    v51 = sub_10000BC84(&qword_10149D170, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v52 = v74;
    v53 = v73;
    v54 = v78;
    View.buttonStyle<A>(_:)(v49, v73, v78, v50, v51);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v54);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v53);
    v91 = v53;
    v92 = v54;
    v93 = v50;
    v94 = v51;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v91, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v56 = (uint64_t)v70;
    v57 = v77;
    View.accessibilityIdentifier(_:)(0xD000000000000021, 0x8000000100E4D540, v77, OpaqueTypeConformance2);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v52, v57);
    sub_1000207BC(v56, v40, &qword_10149D680);
    v27 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v40, v27, 1, v89);
  v59 = v86;
  v58 = v87;
  v60 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  v62 = v80;
  v61 = v81;
  v60(v87, v80, v81);
  v63 = (uint64_t)v82;
  sub_10000C1FC(v40, (uint64_t)v82, &qword_10149D688);
  v64 = v83;
  v60(v83, v58, v61);
  v65 = sub_100008B04(&qword_10149D6C0);
  sub_10000C1FC(v63, (uint64_t)&v64[*(int *)(v65 + 48)], &qword_10149D688);
  swift_bridgeObjectRelease(v79);
  sub_100010CC4(v40, &qword_10149D688);
  v66 = *(void (**)(char *, uint64_t))(v59 + 8);
  v66(v62, v61);
  sub_100010CC4(v63, &qword_10149D688);
  return (_QWORD *)((uint64_t (*)(char *, uint64_t))v66)(v58, v61);
}

uint64_t sub_10015C544@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned __int8 v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t OpaqueTypeConformance2;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD *v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;

  v98 = a3;
  v5 = type metadata accessor for Divider(0);
  v93 = *(_QWORD *)(v5 - 8);
  v94 = v5;
  __chkstk_darwin(v5);
  v91 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100008B04(&qword_10149D710);
  __chkstk_darwin(v89);
  v95 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_100008B04(&qword_10149D718);
  __chkstk_darwin(v92);
  v97 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v90 = (uint64_t)&v81 - v10;
  __chkstk_darwin(v11);
  v96 = (uint64_t)&v81 - v12;
  v13 = type metadata accessor for BorderlessButtonStyle(0);
  v86 = *(_QWORD *)(v13 - 8);
  v87 = v13;
  __chkstk_darwin(v13);
  v85 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for NearbyTransitLineSectionView(0);
  v81 = *(_QWORD *)(v15 - 8);
  v16 = *(_QWORD *)(v81 + 64);
  __chkstk_darwin(v15);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008B04(&qword_10149D720);
  v82 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100008B04(&qword_10149D728);
  v83 = *(_QWORD *)(v21 - 8);
  v84 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100008B04(&qword_10149D730);
  __chkstk_darwin(v24);
  v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v88 = (uint64_t)&v81 - v28;
  v119 = *((_QWORD *)a1 + 10);
  v29 = a1[4];
  v30 = a1[2];
  v117 = a1[3];
  v118 = v29;
  v31 = *a1;
  v115 = a1[1];
  v116 = v30;
  v114 = v31;
  v32 = *(_QWORD *)(a2 + *(int *)(v15 + 20) + 16);
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v34 = v32 + 88 * v33;
    v35 = *(_OWORD *)(v34 - 40);
    v99 = *(_OWORD *)(v34 - 56);
    v100 = v35;
    v36 = *(_OWORD *)(v34 - 24);
    v37 = *(_OWORD *)(v34 - 8);
    v38 = *(_OWORD *)(v34 + 8);
    v104 = *(_QWORD *)(v34 + 24);
    v102 = v37;
    v103 = v38;
    v101 = v36;
    sub_1000352C8(&v99);
    sub_1000352C8(&v114);
    v39 = sub_1001E702C((uint64_t *)&v114, &v99);
    sub_100035330(&v99);
    sub_100035330(&v114);
    if ((v39 & 1) != 0)
      v40 = 0.0;
    else
      v40 = 1.0;
  }
  else
  {
    v41 = *((_QWORD *)a1 + 10);
    v43 = *((_QWORD *)a1 + 4);
    v42 = *((_QWORD *)a1 + 5);
    v44 = *((_QWORD *)a1 + 1);
    *(_QWORD *)&v99 = *(_QWORD *)a1;
    *((_QWORD *)&v99 + 1) = v44;
    v100 = a1[1];
    *(_QWORD *)&v101 = v43;
    *((_QWORD *)&v101 + 1) = v42;
    v45 = a1[4];
    v102 = a1[3];
    v103 = v45;
    v104 = v41;
    v105 = 0u;
    v106 = 0u;
    v107 = 0u;
    v108 = 0u;
    v109 = 0u;
    v110 = 0;
    sub_1000352C8(&v114);
    sub_1001730D4((uint64_t)&v99);
    v40 = 1.0;
  }
  sub_1000202AC(a2, (uint64_t)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitLineSectionView);
  v46 = *(unsigned __int8 *)(v81 + 80);
  v47 = (v46 + 16) & ~v46;
  v48 = (v16 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = swift_allocObject(&unk_1011A6A00, v48 + 88, v46 | 7);
  v50 = sub_10003F29C((uint64_t)v17, v49 + v47, type metadata accessor for NearbyTransitLineSectionView);
  v51 = v49 + v48;
  v52 = v117;
  *(_OWORD *)(v51 + 32) = v116;
  *(_OWORD *)(v51 + 48) = v52;
  *(_OWORD *)(v51 + 64) = v118;
  *(_QWORD *)(v51 + 80) = v119;
  v53 = v115;
  *(_OWORD *)v51 = v114;
  *(_OWORD *)(v51 + 16) = v53;
  __chkstk_darwin(v50);
  *(&v81 - 2) = (uint64_t)&v114;
  sub_1000352C8(&v114);
  v54 = sub_100008B04(&qword_10149D738);
  v55 = sub_10002067C(&qword_10149D740, &qword_10149D738, sub_100173018, (uint64_t)&protocol witness table for _FlexFrameLayout);
  v57 = Button.init(action:label:)(sub_100173004, v49, sub_100173010, &v81 - 4, v54, v55, v56);
  v58 = v85;
  BorderlessButtonStyle.init()(v57);
  v59 = sub_100010D70(&qword_10149D770, &qword_10149D720, (const char *)&protocol conformance descriptor for Button<A>);
  v60 = sub_10000BC84(&qword_10149D170, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v61 = v87;
  View.buttonStyle<A>(_:)(v58, v18, v87, v59, v60);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v58, v61);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v20, v18);
  *(_QWORD *)&v111 = v18;
  *((_QWORD *)&v111 + 1) = v61;
  *(_QWORD *)&v112 = v59;
  *((_QWORD *)&v112 + 1) = v60;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v111, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v63 = v84;
  View.accessibilityIdentifier(_:)(0xD00000000000001ALL, 0x8000000100E2FD00, v84, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v23, v63);
  v64 = v88;
  v65 = sub_1000207BC((uint64_t)v26, v88, &qword_10149D730);
  v66 = v91;
  Divider.init()(v65);
  v68 = v93;
  v67 = v94;
  v69 = (uint64_t)v95;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v95, v66, v94);
  *(double *)(v69 + *(int *)(v89 + 36)) = v40;
  v70 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v66, v67);
  v71 = static Alignment.center.getter(v70);
  _FrameLayout.init(width:height:alignment:)(&v111, 0, 1, 0x3FF0000000000000, 0, v71, v72);
  v73 = v90;
  sub_10000C1FC(v69, v90, &qword_10149D710);
  v74 = (_OWORD *)(v73 + *(int *)(v92 + 36));
  v75 = v112;
  *v74 = v111;
  v74[1] = v75;
  v74[2] = v113;
  sub_100010CC4(v69, &qword_10149D710);
  v76 = v96;
  sub_1000207BC(v73, v96, &qword_10149D718);
  sub_10000C1FC(v64, (uint64_t)v26, &qword_10149D730);
  v77 = v97;
  sub_10000C1FC(v76, v97, &qword_10149D718);
  v78 = v98;
  sub_10000C1FC((uint64_t)v26, v98, &qword_10149D730);
  v79 = sub_100008B04(&qword_10149D778);
  sub_10000C1FC(v77, v78 + *(int *)(v79 + 48), &qword_10149D718);
  sub_100010CC4(v76, &qword_10149D718);
  sub_100010CC4(v64, &qword_10149D730);
  sub_100010CC4(v77, &qword_10149D718);
  return sub_100010CC4((uint64_t)v26, &qword_10149D730);
}

void sub_10015CC5C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];
  _BYTE v10[24];
  _BYTE v11[24];
  uint64_t v12;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for NearbyTransitLineSectionView(0) + 24));
  v4 = *v3;
  if (*v3)
  {
    v5 = v4 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess(v4 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate, v10, 0, 0);
    sub_10000C1FC(v5, (uint64_t)v11, (uint64_t *)&unk_1014940B0);
    if (v12)
    {
      sub_100084C44((uint64_t)v11, (uint64_t)v9);
      sub_100010CC4((uint64_t)v11, (uint64_t *)&unk_1014940B0);
      sub_10000BE88(v9, v9[3]);
      sub_10017C43C(a2, 0);
      sub_10000BEAC(v9);
    }
    else
    {
      sub_100010CC4((uint64_t)v11, (uint64_t *)&unk_1014940B0);
    }
    sub_10015B138(a2);
  }
  else
  {
    v6 = v3[1];
    v7 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v8 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    EnvironmentObject.error()(0, v6, v7, v8);
    __break(1u);
  }
}

uint64_t sub_10015CD88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  char v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v58;
  uint64_t v59;
  _OWORD v60[5];
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v59 = a2;
  v3 = (int *)type metadata accessor for NearbyTransitDepartureView(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149D760);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149D750);
  __chkstk_darwin(v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100008B04(&qword_10149D738);
  __chkstk_darwin(v58);
  v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000352C8((_QWORD *)a1);
  v14 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v15 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  *((_QWORD *)v5 + 12) = EnvironmentObject.init()(v14, v15);
  *((_QWORD *)v5 + 13) = v16;
  v17 = &v5[v3[6]];
  *(_QWORD *)v17 = swift_getKeyPath(&unk_100E2F930);
  v18 = sub_100008B04(&qword_101493188);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  v19 = &v5[v3[7]];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_100E2FCC0);
  v20 = sub_100008B04(&qword_1014931B0);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  v21 = v3[8];
  v22 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v23 = objc_msgSend(v22, "userInterfaceIdiom");

  v5[v21] = v23 == (id)4;
  v24 = *(_OWORD *)(a1 + 48);
  v60[2] = *(_OWORD *)(a1 + 32);
  v60[3] = v24;
  v60[4] = *(_OWORD *)(a1 + 64);
  v61 = *(_QWORD *)(a1 + 80);
  v25 = *(_OWORD *)(a1 + 16);
  v60[0] = *(_OWORD *)a1;
  v60[1] = v25;
  v26 = State.init(wrappedValue:)(&v62, v60, &type metadata for NearbyTransitDeparturesViewModel);
  v27 = *((_QWORD *)&v62 + 1);
  v28 = v64;
  v29 = v66;
  *(_QWORD *)v5 = v62;
  *((_QWORD *)v5 + 1) = v27;
  *((_OWORD *)v5 + 1) = v63;
  *((_OWORD *)v5 + 2) = v28;
  *((_OWORD *)v5 + 3) = v65;
  *((_OWORD *)v5 + 4) = v29;
  *((_OWORD *)v5 + 5) = v67;
  v30 = static Edge.Set.trailing.getter(v26);
  if (qword_101490FD8 != -1)
    swift_once(&qword_101490FD8, sub_10015B0F8);
  v31 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DC0);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_1000202AC((uint64_t)v5, (uint64_t)v8, type metadata accessor for NearbyTransitDepartureView);
  v38 = &v8[*(int *)(v6 + 36)];
  *v38 = v30;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  v39 = sub_1000202F0((uint64_t)v5, type metadata accessor for NearbyTransitDepartureView);
  v40 = static Edge.Set.vertical.getter(v39);
  if (qword_101490FE0 != -1)
    swift_once(&qword_101490FE0, sub_10015B108);
  v41 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DC8);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  sub_10000C1FC((uint64_t)v8, (uint64_t)v11, &qword_10149D760);
  v48 = &v11[*(int *)(v9 + 36)];
  *v48 = v40;
  *((double *)v48 + 1) = v41;
  *((_QWORD *)v48 + 2) = v43;
  *((_QWORD *)v48 + 3) = v45;
  *((_QWORD *)v48 + 4) = v47;
  v48[40] = 0;
  v49 = sub_100010CC4((uint64_t)v8, &qword_10149D760);
  if (qword_101490FE8 != -1)
    v49 = swift_once(&qword_101490FE8, sub_10015B118);
  v50 = qword_1014D4DD0;
  v51 = static Alignment.center.getter(v49);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v62, 0, 1, 0, 1, 0, 1, v50, 0, 0, 1, 0, 1, v51, v52);
  sub_10000C1FC((uint64_t)v11, (uint64_t)v13, &qword_10149D750);
  v53 = &v13[*(int *)(v58 + 36)];
  v54 = v67;
  *((_OWORD *)v53 + 4) = v66;
  *((_OWORD *)v53 + 5) = v54;
  *((_OWORD *)v53 + 6) = v68;
  v55 = v63;
  *(_OWORD *)v53 = v62;
  *((_OWORD *)v53 + 1) = v55;
  v56 = v65;
  *((_OWORD *)v53 + 2) = v64;
  *((_OWORD *)v53 + 3) = v56;
  sub_100010CC4((uint64_t)v11, &qword_10149D750);
  return sub_1000207BC((uint64_t)v13, v59, &qword_10149D738);
}

id sub_10015D298(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for NearbyTransitLineSectionView(0) + 28));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 0;
  v4 = sub_100008B04(&qword_10149CD30);
  State.wrappedValue.setter(v6, v4);
  return objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", 220, 44, 0);
}

__n128 sub_10015D320@<Q0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v3;
  __int128 v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __n128 result;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  __int128 v52;
  _BYTE v53[32];
  __n128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;

  v3 = static VerticalAlignment.center.getter(a2);
  sub_10015D660((uint64_t)&v52);
  v4 = v52;
  v5 = v53[0];
  v6 = *(_QWORD *)&v53[8];
  v7 = *(_QWORD *)&v53[16];
  v8 = v53[24];
  v10 = static Edge.Set.trailing.getter(v9);
  if (qword_101490FD8 != -1)
    swift_once(&qword_101490FD8, sub_10015B0F8);
  v50 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DC0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = static Edge.Set.vertical.getter(v17);
  if (qword_101490FE0 != -1)
    swift_once(&qword_101490FE0, sub_10015B108);
  v20 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DC8);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  if (qword_101490FE8 != -1)
    v19 = swift_once(&qword_101490FE8, sub_10015B118);
  v27 = qword_1014D4DD0;
  v28 = static Alignment.center.getter(v19);
  v52 = (unint64_t)v3;
  v53[0] = 1;
  *(_OWORD *)&v53[8] = v4;
  v53[24] = v5;
  v54.n128_u64[0] = v6;
  v54.n128_u64[1] = v7;
  LOBYTE(v55) = v8;
  BYTE8(v55) = v10;
  *(double *)&v56 = v50;
  *((_QWORD *)&v56 + 1) = v12;
  *(_QWORD *)&v57 = v14;
  *((_QWORD *)&v57 + 1) = v16;
  LOBYTE(v58) = 0;
  BYTE8(v58) = v18;
  *(double *)&v59 = v20;
  *((_QWORD *)&v59 + 1) = v22;
  *(_QWORD *)&v60 = v24;
  *((_QWORD *)&v60 + 1) = v26;
  v61 = 0;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v62, 0, 1, 0, 1, 0, 1, v27, 0, 0, 1, 0, 1, v28, v29);
  v30 = v63;
  v49 = v64;
  v51 = v62;
  v31 = v65;
  v32 = v6;
  v42 = v67;
  v47 = v68;
  v48 = v66;
  v33 = v69;
  v34 = v71;
  v45 = v72;
  v46 = v70;
  v35 = v5;
  v36 = v73;
  v43 = v75;
  v44 = v74;
  sub_100172FC4((uint64_t)&v52);
  sub_10006B77C(v4, *((uint64_t *)&v4 + 1), v35);
  swift_bridgeObjectRelease(v32);
  v37 = v60;
  *(_OWORD *)(a1 + 128) = v59;
  *(_OWORD *)(a1 + 144) = v37;
  *(_BYTE *)(a1 + 160) = v61;
  v38 = v56;
  *(_OWORD *)(a1 + 64) = v55;
  *(_OWORD *)(a1 + 80) = v38;
  v39 = v58;
  *(_OWORD *)(a1 + 96) = v57;
  *(_OWORD *)(a1 + 112) = v39;
  v40 = *(_OWORD *)v53;
  *(_OWORD *)a1 = v52;
  *(_OWORD *)(a1 + 16) = v40;
  result = v54;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v53[16];
  *(__n128 *)(a1 + 48) = result;
  *(_QWORD *)(a1 + 168) = v51;
  *(_BYTE *)(a1 + 176) = v30;
  *(_QWORD *)(a1 + 184) = v49;
  *(_BYTE *)(a1 + 192) = v31;
  *(_QWORD *)(a1 + 200) = v48;
  *(_BYTE *)(a1 + 208) = v42;
  *(_QWORD *)(a1 + 216) = v47;
  *(_BYTE *)(a1 + 224) = v33;
  *(_QWORD *)(a1 + 232) = v46;
  *(_BYTE *)(a1 + 240) = v34;
  *(_QWORD *)(a1 + 248) = v45;
  *(_BYTE *)(a1 + 256) = v36;
  *(_QWORD *)(a1 + 264) = v44;
  *(_QWORD *)(a1 + 272) = v43;
  return result;
}

double sub_10015D660@<D0>(uint64_t a1@<X8>)
{
  Swift::String v2;
  Swift::String v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  Swift::String v30;
  Swift::String v31;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v31._countAndFlagsBits = 0xD00000000000004DLL;
  v31._object = (void *)0x8000000100E4D5A0;
  v2._object = (void *)0x8000000100E4D570;
  v2._countAndFlagsBits = 0xD000000000000020;
  v3._countAndFlagsBits = 0x7065442065726F4DLL;
  v3._object = (void *)0xEF73657275747261;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v3, v31);
  v4 = sub_10006C008();
  v5 = Text.init<A>(_:)(&v30, &type metadata for String, v4);
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  v12 = static Color.blue.getter(v5);
  v13 = Text.foregroundColor(_:)(v12, v5, v7, v11, v9);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release();
  v20 = v17 & 1;
  sub_10006B77C(v5, v7, v11);
  v21 = swift_bridgeObjectRelease(v9);
  v22 = static Font.body.getter(v21);
  v23 = Text.font(_:)(v22, v13, v15, v17 & 1, v19);
  v25 = v24;
  LOBYTE(v11) = v26;
  v28 = v27;
  swift_release();
  sub_10006B77C(v13, v15, v20);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)a1 = v23;
  *(_QWORD *)(a1 + 8) = v25;
  *(_BYTE *)(a1 + 16) = v11 & 1;
  *(_QWORD *)(a1 + 24) = v28;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 1;
  sub_10006BB40(v23, v25, v11 & 1);
  swift_bridgeObjectRetain(v28);
  sub_10006B77C(v23, v25, v11 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  return result;
}

uint64_t sub_10015D848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  _QWORD v19[2];
  _QWORD v20[2];

  v19[1] = a1;
  v2 = type metadata accessor for AccessibilityChildBehavior(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149D5E8);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149D5F0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.leading.getter(v11);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v14 = sub_100008B04(&qword_10149D5F8);
  v15 = sub_10015DA18(v1, (uint64_t)&v8[*(int *)(v14 + 44)]);
  static AccessibilityChildBehavior.combine.getter(v15);
  v16 = sub_100010D70(&qword_10149D600, &qword_10149D5E8, (const char *)&protocol conformance descriptor for VStack<A>);
  View.accessibilityElement(children:)(v5, v6, v16);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100010CC4((uint64_t)v8, &qword_10149D5E8);
  v20[0] = v6;
  v20[1] = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v20, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityIdentifier(_:)(0xD00000000000001CLL, 0x8000000100E2FA40, v9, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_10015DA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t result;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _OWORD v131[3];
  uint64_t v132[11];
  _OWORD v133[5];
  uint64_t v134;
  _OWORD v135[5];
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  char v145;

  v127 = a2;
  v112 = sub_100008B04(&qword_10149D608);
  __chkstk_darwin(v112);
  v103 = (uint64_t)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Date(0);
  v107 = *(_QWORD *)(v4 - 8);
  v108 = v4;
  __chkstk_darwin(v4);
  v106 = (uint64_t *)((char *)&v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v109 = sub_100008B04(&qword_10149D610);
  __chkstk_darwin(v109);
  v111 = (uint64_t)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_100008B04(&qword_10149D618);
  __chkstk_darwin(v110);
  v105 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_10149D620);
  __chkstk_darwin(v8);
  v126 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v123 = (uint64_t)&v102 - v11;
  v125 = type metadata accessor for Divider(0);
  v122 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v124 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v128 = (char *)&v102 - v14;
  v15 = type metadata accessor for NearbyTransitLineSectionHeaderView(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_100008B04(&qword_10149D628);
  __chkstk_darwin(v118);
  v120 = (uint64_t)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_100008B04(&qword_10149D630);
  __chkstk_darwin(v119);
  v129 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v130 = (uint64_t)&v102 - v21;
  v104 = type metadata accessor for NearbyTransitLineSectionView(0);
  v22 = *(int *)(v104 + 20);
  v121 = a1;
  v23 = (uint64_t *)(a1 + v22);
  v24 = *(_QWORD *)(a1 + v22 + 8);
  v117 = *(_QWORD *)(a1 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 16);
  v26 = v23[3];
  v27 = *((unsigned __int8 *)v23 + 32);
  v28 = v23[5];
  v115 = *((unsigned __int8 *)v23 + 48);
  v116 = v27;
  v29 = v23[8];
  v114 = v23[7];
  v113 = *((unsigned __int8 *)v23 + 72);
  KeyPath = swift_getKeyPath(&unk_100E2F930);
  v31 = (uint64_t *)&v17[*(int *)(v15 + 20)];
  *v31 = KeyPath;
  v32 = sub_100008B04(&qword_101493188);
  swift_storeEnumTagMultiPayload(v31, v32, 0);
  *(_QWORD *)v17 = v117;
  *((_QWORD *)v17 + 1) = v24;
  *((_QWORD *)v17 + 2) = v25;
  *((_QWORD *)v17 + 3) = v26;
  v17[32] = v116;
  *((_QWORD *)v17 + 5) = v28;
  v17[48] = v115;
  *((_QWORD *)v17 + 7) = v114;
  *((_QWORD *)v17 + 8) = v29;
  v17[72] = v113;
  v33 = v15;
  v34 = *(int *)(v15 + 24);
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRetain(v25);
  swift_unknownObjectRetain(v26);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v29);
  *(_QWORD *)&v17[v34] = static Font.body.getter(v35);
  v36 = &v17[*(int *)(v33 + 28)];
  v37 = enum case for Font.TextStyle.body(_:);
  v38 = type metadata accessor for Font.TextStyle(0);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  v40 = static Edge.Set.trailing.getter(v39);
  if (qword_101490FD8 != -1)
    swift_once(&qword_101490FD8, sub_10015B0F8);
  v41 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DC0);
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v48 = v120;
  sub_1000202AC((uint64_t)v17, v120, type metadata accessor for NearbyTransitLineSectionHeaderView);
  v49 = v48 + *(int *)(v118 + 36);
  *(_BYTE *)v49 = v40;
  *(double *)(v49 + 8) = v41;
  *(_QWORD *)(v49 + 16) = v43;
  *(_QWORD *)(v49 + 24) = v45;
  *(_QWORD *)(v49 + 32) = v47;
  *(_BYTE *)(v49 + 40) = 0;
  sub_1000202F0((uint64_t)v17, type metadata accessor for NearbyTransitLineSectionHeaderView);
  v50 = sub_100008B04(&qword_10149D390);
  v51 = v121;
  v52 = ScaledMetric.wrappedValue.getter(v135, v50);
  v53 = *(_QWORD *)&v135[0];
  v54 = static Alignment.center.getter(v52);
  _FrameLayout.init(width:height:alignment:)(v131, 0, 1, v53, 0, v54, v55);
  v56 = v129;
  sub_10000C1FC(v48, v129, &qword_10149D628);
  v57 = (_OWORD *)(v56 + *(int *)(v119 + 36));
  v58 = v131[1];
  *v57 = v131[0];
  v57[1] = v58;
  v57[2] = v131[2];
  sub_100010CC4(v48, &qword_10149D628);
  v59 = v130;
  v60 = sub_1000207BC(v56, v130, &qword_10149D630);
  v61 = v128;
  Divider.init()(v60);
  if (*((_BYTE *)v23 + 72) == 1)
  {
    v62 = v105;
    sub_10015BE88(v105);
    v63 = v111;
    sub_10000C1FC((uint64_t)v62, v111, &qword_10149D618);
    swift_storeEnumTagMultiPayload(v63, v109, 0);
    v64 = sub_100010D70(&qword_10149D650, &qword_10149D618, (const char *)&protocol conformance descriptor for TupleView<A>);
    v65 = sub_100172CC0(&qword_10149D658, &qword_10149D608, &qword_10149D660, &qword_10149D668);
    v66 = (uint64_t)v126;
    _ConditionalContent<>.init(storage:)(v63, v110, v112, v64, v65);
    sub_100010CC4((uint64_t)v62, &qword_10149D618);
    v67 = sub_100008B04(&qword_10149D640);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 0, 1, v67);
    v68 = v123;
    sub_1000207BC(v66, v123, &qword_10149D620);
    v69 = v127;
    v70 = v125;
LABEL_10:
    sub_10000C1FC(v59, v56, &qword_10149D630);
    v91 = v56;
    v92 = v122;
    v93 = *(void (**)(char *, char *, uint64_t))(v122 + 16);
    v94 = v124;
    v93(v124, v61, v70);
    sub_10000C1FC(v68, v66, &qword_10149D620);
    sub_10000C1FC(v91, v69, &qword_10149D630);
    v95 = v61;
    v96 = sub_100008B04(&qword_10149D648);
    v93((char *)(v69 + *(int *)(v96 + 48)), v94, v70);
    sub_10000C1FC(v66, v69 + *(int *)(v96 + 64), &qword_10149D620);
    sub_100010CC4(v68, &qword_10149D620);
    v97 = *(void (**)(char *, uint64_t))(v92 + 8);
    v97(v95, v70);
    sub_100010CC4(v130, &qword_10149D630);
    sub_100010CC4(v66, &qword_10149D620);
    v97(v94, v70);
    return sub_100010CC4(v129, &qword_10149D630);
  }
  v71 = v51 + *(int *)(v104 + 24);
  v72 = *(void **)v71;
  v73 = v123;
  if (*(_QWORD *)v71)
  {
    v75 = v23[7];
    v74 = v23[8];
    v76 = *((_BYTE *)v23 + 48);
    v77 = v23[5];
    v78 = *((_BYTE *)v23 + 32);
    v79 = v23[3];
    v80 = *v23;
    v138 = *(_OWORD *)(v23 + 1);
    v137 = v80;
    v139 = v79;
    v140 = v78;
    v141 = v77;
    v142 = v76;
    v143 = v75;
    v144 = v74;
    v145 = 0;
    v81 = swift_getKeyPath(&unk_100E2F9D0);
    v82 = swift_getKeyPath(&unk_100E2F9F8);
    v83 = v72;
    v84 = v106;
    static Published.subscript.getter(v106, v83, v81, v82);

    swift_release();
    swift_release();
    sub_100192F18((uint64_t)v84, v132);
    (*(void (**)(_QWORD *, uint64_t))(v107 + 8))(v84, v108);
    sub_1000207BC((uint64_t)v132, (uint64_t)v133, &qword_10149D638);
    if (*((_QWORD *)&v133[0] + 1))
    {
      v135[2] = v133[2];
      v135[3] = v133[3];
      v135[4] = v133[4];
      v136 = v134;
      v135[0] = v133[0];
      v135[1] = v133[1];
      v85 = v103;
      sub_10015B6C4((uint64_t)v135, v103);
      v86 = v111;
      sub_10000C1FC(v85, v111, &qword_10149D608);
      swift_storeEnumTagMultiPayload(v86, v109, 1);
      v87 = sub_100010D70(&qword_10149D650, &qword_10149D618, (const char *)&protocol conformance descriptor for TupleView<A>);
      v88 = sub_100172CC0(&qword_10149D658, &qword_10149D608, &qword_10149D660, &qword_10149D668);
      v66 = (uint64_t)v126;
      _ConditionalContent<>.init(storage:)(v86, v110, v112, v87, v88);
      sub_100170D14(v132);
      sub_100010CC4(v85, &qword_10149D608);
      v89 = sub_100008B04(&qword_10149D640);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v66, 0, 1, v89);
      v68 = v73;
      sub_1000207BC(v66, v73, &qword_10149D620);
    }
    else
    {
      v90 = sub_100008B04(&qword_10149D640);
      v68 = v73;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v73, 1, 1, v90);
      v66 = (uint64_t)v126;
    }
    v69 = v127;
    v70 = v125;
    v61 = v128;
    v59 = v130;
    goto LABEL_10;
  }
  v99 = *(_QWORD *)(v71 + 8);
  v100 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v101 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  result = EnvironmentObject.error()(0, v99, v100, v101);
  __break(1u);
  return result;
}

uint64_t sub_10015E3CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v39 = a1;
  v2 = type metadata accessor for AccessibilityChildBehavior(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008B04(&qword_10149DAB0);
  v6 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  v38 = v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static Font.body.getter(v7);
  v34[2] = v10;
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v12 = Color.init(uiColor:)(v11);
  v34[1] = v12;
  v14 = static VerticalAlignment.center.getter(v13);
  sub_10015E618(v1, v10, v12, (uint64_t)&v40);
  v16 = v40;
  v15 = v41;
  v17 = v42;
  v18 = v43;
  v19 = v44;
  v20 = v45;
  v22 = static Edge.Set.all.getter(v21);
  v23 = EdgeInsets.init(_all:)(0.0);
  v40 = v14;
  v41 = 0;
  v42 = 1;
  v43 = v16;
  v44 = v15;
  v45 = v17;
  v46 = v18;
  v47 = v19;
  v48 = v20;
  v49 = v22;
  v50 = v23;
  v51 = v24;
  v52 = v25;
  v53 = v26;
  v54 = 0;
  static AccessibilityChildBehavior.combine.getter(v27);
  v28 = sub_100008B04(&qword_10149D6F0);
  v29 = sub_10016EB38(&qword_10149D6E8, &qword_10149D6F0, &qword_10149D6F8, &qword_10149D700);
  View.accessibilityElement(children:)(v4, v28, v29);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v36);
  v30 = v46;
  sub_10006B77C(v43, v44, v45);
  swift_bridgeObjectRelease(v30);
  v40 = v28;
  v41 = v29;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v40, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v32 = v37;
  View.accessibilityIdentifier(_:)(0xD000000000000022, 0x8000000100E2FD20, v37, OpaqueTypeConformance2);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v9, v32);
}

void sub_10015E618(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  uint64_t KeyPath;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  _OWORD v48[5];
  uint64_t v49;

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (_QWORD *)((char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(a1 + 168);
  if (v12)
  {
    v13 = *(_OWORD *)(a1 + 48);
    v48[2] = *(_OWORD *)(a1 + 32);
    v48[3] = v13;
    v48[4] = *(_OWORD *)(a1 + 64);
    v49 = *(_QWORD *)(a1 + 80);
    v14 = *(_OWORD *)(a1 + 16);
    v48[0] = *(_OWORD *)a1;
    v48[1] = v14;
    KeyPath = swift_getKeyPath(&unk_100E2F9D0);
    v16 = swift_getKeyPath(&unk_100E2F9F8);
    v17 = v12;
    static Published.subscript.getter(v11, v17, KeyPath, v16);

    swift_release();
    swift_release();
    sub_1001971CC((uint64_t)v48, (uint64_t)v11);
    v19 = v18;
    v21 = v20;
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    v47[0] = v19;
    v47[1] = v21;
    v22 = sub_10006C008();
    v23 = Text.init<A>(_:)(v47, &type metadata for String, v22);
    v25 = v24;
    v27 = v26;
    v29 = v28 & 1;
    v30 = Text.font(_:)(a2, v23, v24, v29, v26);
    v32 = v31;
    v34 = v33;
    v36 = v35 & 1;
    sub_10006B77C(v23, v25, v29);
    swift_bridgeObjectRelease(v27);
    v47[0] = a3;
    v37 = Text.foregroundStyle<A>(_:)(v47, v30, v32, v36, v34, &type metadata for Color, &protocol witness table for Color);
    v39 = v38;
    v41 = v40;
    LOBYTE(v27) = v42 & 1;
    sub_10006B77C(v30, v32, v36);
    swift_bridgeObjectRelease(v34);
    *(_QWORD *)a4 = v37;
    *(_QWORD *)(a4 + 8) = v39;
    *(_BYTE *)(a4 + 16) = v27;
    *(_QWORD *)(a4 + 24) = v41;
    *(_QWORD *)(a4 + 32) = 0;
    *(_BYTE *)(a4 + 40) = 1;
    sub_10006BB40(v37, v39, v27);
    swift_bridgeObjectRetain(v41);
    sub_10006B77C(v37, v39, v27);
    swift_bridgeObjectRelease(v41);
  }
  else
  {
    v43 = *(_QWORD *)(a1 + 176);
    v44 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v45 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    EnvironmentObject.error()(0, v43, v44, v45);
    __break(1u);
  }
}

uint64_t sub_10015E880@<X0>(uint64_t a1@<X8>)
{
  return sub_10015E3CC(a1);
}

uint64_t sub_10015E8E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[5];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v20 = a1;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v31 = v1[1];
  v32 = v6;
  v7 = v1[2];
  v29 = v1[3];
  v30 = v7;
  v8 = v1[4];
  v27 = v1[5];
  v28 = v8;
  v9 = v1[6];
  v25 = v1[7];
  v26 = v9;
  v10 = v1[8];
  v23 = v1[9];
  v24 = v10;
  v11 = v1[10];
  v21 = v1[11];
  v22 = v11;
  v36 = v6;
  v37 = v31;
  v38 = v7;
  v39 = v29;
  v40 = v8;
  v41 = v27;
  v42 = v9;
  v43 = v25;
  v44 = v10;
  v45 = v23;
  v46 = v11;
  v47 = v21;
  v33 = sub_100008B04(&qword_10149DA40);
  State.wrappedValue.getter(&v48);
  v12 = *((_QWORD *)&v48 + 1);
  v13 = *((_QWORD *)&v49 + 1);
  v14 = *((_QWORD *)&v50 + 1);
  v15 = *((_QWORD *)&v51 + 1);
  v17 = *((_QWORD *)&v52 + 1);
  v16 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
  v18 = (void *)swift_unknownObjectRetain(v17);
  sub_1001E8254(v18, (uint64_t)v5, v16, (uint64_t *)&v48);
  swift_unknownObjectRelease(v17);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v15);
  v36 = v32;
  v37 = v31;
  v38 = v30;
  v39 = v29;
  v40 = v28;
  v41 = v27;
  v42 = v26;
  v43 = v25;
  v44 = v24;
  v45 = v23;
  v46 = v22;
  v47 = v21;
  v34[2] = v50;
  v34[3] = v51;
  v34[4] = v52;
  v35 = v53;
  v34[0] = v48;
  v34[1] = v49;
  return State.wrappedValue.setter(v34, v33);
}

id sub_10015EAC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  void (*v20)(char *, uint64_t);
  id result;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _QWORD v30[12];

  v1 = type metadata accessor for ColorScheme(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v22 - v6;
  v8 = *(_QWORD *)(v0 + 8);
  v9 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 64);
  v12 = *(_QWORD *)(v0 + 72);
  v22[0] = *(_QWORD *)v0;
  v22[1] = v8;
  v23 = *(_OWORD *)(v0 + 16);
  v24 = v9;
  v25 = v10;
  v26 = *(_OWORD *)(v0 + 48);
  v27 = v11;
  v28 = v12;
  v29 = *(_OWORD *)(v0 + 80);
  sub_100008B04(&qword_10149DA40);
  State.wrappedValue.getter(v30);
  v13 = v30[1];
  v14 = v30[3];
  v15 = v30[5];
  v16 = v30[7];
  v17 = v30[8];
  swift_unknownObjectRelease(v30[9]);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v16);
  if (!v17)
    return 0;
  v18 = (void *)objc_opt_self(UIImage);
  type metadata accessor for NearbyTransitDepartureView(0);
  sub_100019F8C((uint64_t)v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ColorScheme.dark(_:), v1);
  v19 = static ColorScheme.== infix(_:_:)(v7, v4);
  v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v20(v4, v1);
  v20(v7, v1);
  result = objc_msgSend(v18, "_mapkit_liveTransitIndicatorImageUsingDarkMode:", v19 & 1);
  if (result)
    return (id)Image.init(uiImage:)(result);
  return result;
}

uint64_t sub_10015EC8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  int v30;
  double (*v31)(_BYTE *, uint64_t);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  _BYTE *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t KeyPath;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  char *v73;
  _BYTE *v74;
  char *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (**v86)(uint64_t);
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE v93[4];
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t *v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE v122[32];

  v116 = a1;
  v2 = sub_100008B04(&qword_10149D9F0);
  v108 = *(_QWORD *)(v2 - 8);
  v109 = v2;
  __chkstk_darwin(v2);
  v107 = &v93[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v102 = sub_100008B04(&qword_10149D9F8);
  __chkstk_darwin(v102);
  v101 = (uint64_t *)&v93[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v106 = &v93[-v6];
  v115 = sub_100008B04(&qword_10149DA00);
  __chkstk_darwin(v115);
  v105 = &v93[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v110 = &v93[-v9];
  v10 = type metadata accessor for NearbyTransitDepartureView(0);
  v103 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v104 = v11;
  v111 = (uint64_t *)&v93[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (int *)sub_100008B04(&qword_10149DA08);
  __chkstk_darwin(v12);
  v14 = &v93[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v114 = &v93[-v16];
  v17 = sub_100008B04(&qword_10149DA10);
  __chkstk_darwin(v17);
  v100 = &v93[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v121 = &v93[-v20];
  v112 = sub_100008B04(&qword_10149DA18);
  __chkstk_darwin(v112);
  v113 = &v93[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = type metadata accessor for DynamicTypeSize(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = &v93[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  v28 = &v93[-v27];
  v120 = v1;
  sub_10001A6B4((uint64_t)&v93[-v27]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v23 + 104))(v25, enum case for DynamicTypeSize.accessibility1(_:), v22);
  v29 = sub_10000BC84((unint64_t *)&qword_10149DA20, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  v30 = dispatch thunk of static Comparable.< infix(_:_:)(v28, v25, v22, v29);
  v31 = *(double (**)(_BYTE *, uint64_t))(v23 + 8);
  v31(v25, v22);
  v32.n128_f64[0] = v31(v28, v22);
  v33 = static Font.body.getter(v32);
  v34 = static Font.subheadline.getter(v33);
  v35 = (void *)objc_opt_self(UIColor);
  v36 = Color.init(uiColor:)(objc_msgSend(v35, "labelColor"));
  v119 = Color.init(uiColor:)(objc_msgSend(v35, "secondaryLabelColor"));
  v118 = static Font.body.getter(v37);
  v38 = Color.init(uiColor:)(objc_msgSend(v35, "labelColor"));
  v40 = v34;
  v41 = v33;
  if ((v30 & 1) != 0)
    v42 = static HorizontalAlignment.trailing.getter();
  else
    v42 = static HorizontalAlignment.leading.getter(v39);
  v99 = v42;
  v117 = static Font.subheadline.getter(v42);
  v45 = v120;
  v44 = v121;
  if (*(_BYTE *)(v120 + *(int *)(v10 + 32)) == 1)
  {
    v46 = v113;
    swift_storeEnumTagMultiPayload(v113, v112, 0);
    v47 = sub_100010D70(&qword_10149DA38, &qword_10149DA00, (const char *)&protocol conformance descriptor for SubscriptionView<A, B>);
    _ConditionalContent<>.init(storage:)(v46, &type metadata for EmptyView, v115, &protocol witness table for EmptyView, v47);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    v94 = v30 ^ 1;
    *(_QWORD *)v44 = static HorizontalAlignment.leading.getter(v43);
    *((_QWORD *)v44 + 1) = 0;
    v44[16] = 1;
    v49 = (uint64_t)&v44[*(int *)(sub_100008B04((uint64_t *)&unk_10149DA28) + 44)];
    v98 = v41;
    v97 = v36;
    v96 = v40;
    sub_10015F618(v45, v41, v36, v40, v119, v49);
    v50 = v44;
    v51 = v111;
    sub_1000202AC(v45, (uint64_t)v111, type metadata accessor for NearbyTransitDepartureView);
    v52 = v118;
    swift_retain();
    swift_retain();
    v53 = v117;
    v54 = swift_retain();
    v55 = static VerticalAlignment.center.getter(v54);
    *v14 = swift_getKeyPath(&unk_100E2FCC0);
    v56 = sub_100008B04(&qword_1014931B0);
    swift_storeEnumTagMultiPayload(v14, v56, 0);
    sub_10015FBA0(v51, v52, v38, v53, (uint64_t)v14 + v12[9]);
    sub_1000202F0((uint64_t)v51, type metadata accessor for NearbyTransitDepartureView);
    swift_release();
    v95 = v38;
    swift_release();
    swift_release();
    *(_QWORD *)((char *)v14 + v12[12]) = v55;
    v57 = (char *)v14 + v12[13];
    *(_QWORD *)v57 = 0;
    v57[8] = 0;
    *(_QWORD *)((char *)v14 + v12[10]) = v99;
    v58 = (char *)v14 + v12[11];
    *(_QWORD *)v58 = 0;
    v58[8] = 1;
    *((_BYTE *)v14 + v12[14]) = 1;
    v59 = v114;
    v60 = sub_1000207BC((uint64_t)v14, (uint64_t)v114, &qword_10149DA08);
    v61 = static VerticalAlignment.firstTextBaseline.getter(v60);
    v62 = (uint64_t)v50;
    v63 = v100;
    sub_10000C1FC(v62, (uint64_t)v100, &qword_10149DA10);
    sub_10000C1FC((uint64_t)v59, (uint64_t)v14, &qword_10149DA08);
    v65 = static HorizontalAlignment.leading.getter(v64);
    KeyPath = swift_getKeyPath(&unk_100E2FCC0);
    v67 = (uint64_t)v101;
    *v101 = KeyPath;
    swift_storeEnumTagMultiPayload(v67, v56, 0);
    v68 = (int *)v102;
    LOBYTE(v59) = v94 & 1;
    sub_1001604E0((uint64_t)v63, v94 & 1, (uint64_t)v14, v67 + *(int *)(v102 + 36));
    sub_100010CC4((uint64_t)v63, &qword_10149DA10);
    sub_100010CC4((uint64_t)v14, &qword_10149DA08);
    *(_QWORD *)(v67 + v68[12]) = v61;
    v69 = v67 + v68[13];
    *(_QWORD *)v69 = 0;
    *(_BYTE *)(v69 + 8) = 1;
    *(_QWORD *)(v67 + v68[10]) = v65;
    v70 = v120;
    v71 = v67 + v68[11];
    *(_QWORD *)v71 = 0;
    *(_BYTE *)(v71 + 8) = 1;
    *(_BYTE *)(v67 + v68[14]) = (_BYTE)v59;
    v72 = v106;
    sub_1000207BC(v67, (uint64_t)v106, &qword_10149D9F8);
    v73 = *(char **)(v70 + 96);
    v74 = v114;
    if (v73)
    {
      swift_beginAccess(&v73[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider__referenceDate], v122, 33, 0);
      v75 = v73;
      v76 = sub_100008B04(&qword_1014940A0);
      v77 = v107;
      Published.projectedValue.getter(v76);
      swift_endAccess(v122);

      v78 = v111;
      sub_1000202AC(v70, (uint64_t)v111, type metadata accessor for NearbyTransitDepartureView);
      v79 = *(unsigned __int8 *)(v103 + 80);
      v80 = (v79 + 16) & ~v79;
      v81 = swift_allocObject(&unk_1011A6AD8, v80 + v104, v79 | 7);
      sub_10003F29C((uint64_t)v78, v81 + v80, type metadata accessor for NearbyTransitDepartureView);
      v82 = v105;
      sub_10000C1FC((uint64_t)v72, (uint64_t)v105, &qword_10149D9F8);
      v83 = v115;
      v85 = v108;
      v84 = v109;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v108 + 16))(&v82[*(int *)(v115 + 52)], v77, v109);
      v86 = (uint64_t (**)(uint64_t))&v82[*(int *)(v83 + 56)];
      *v86 = sub_100175A9C;
      v86[1] = (uint64_t (*)(uint64_t))v81;
      (*(void (**)(_BYTE *, uint64_t))(v85 + 8))(v77, v84);
      sub_100010CC4((uint64_t)v72, &qword_10149D9F8);
      v87 = v110;
      sub_1000207BC((uint64_t)v82, (uint64_t)v110, &qword_10149DA00);
      v88 = v113;
      sub_10000C1FC((uint64_t)v87, (uint64_t)v113, &qword_10149DA00);
      swift_storeEnumTagMultiPayload(v88, v112, 1);
      v89 = sub_100010D70(&qword_10149DA38, &qword_10149DA00, (const char *)&protocol conformance descriptor for SubscriptionView<A, B>);
      _ConditionalContent<>.init(storage:)(v88, &type metadata for EmptyView, v83, &protocol witness table for EmptyView, v89);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_100010CC4((uint64_t)v87, &qword_10149DA00);
      sub_100010CC4((uint64_t)v74, &qword_10149DA08);
      return sub_100010CC4((uint64_t)v121, &qword_10149DA10);
    }
    else
    {
      v90 = *(_QWORD *)(v70 + 104);
      v91 = type metadata accessor for NearbyTransitDeparturesProvider(0);
      v92 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
      result = EnvironmentObject.error()(0, v90, v91, v92);
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10015F618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t KeyPath;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v84 = a5;
  v83 = a4;
  v86 = a3;
  v92 = a6;
  v8 = sub_100008B04(&qword_10149DA88);
  __chkstk_darwin(v8);
  v93 = (uint64_t)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v88 = (char *)&v80 - v11;
  v89 = sub_100008B04(&qword_10149DA90);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v91 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v80 - v14;
  v16 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v94 = *(_QWORD *)a1;
  v95 = v16;
  v96 = *(_OWORD *)(a1 + 16);
  v97 = v17;
  v98 = v18;
  v99 = *(_OWORD *)(a1 + 48);
  v100 = v19;
  v101 = v20;
  v102 = *(_OWORD *)(a1 + 80);
  v85 = sub_100008B04(&qword_10149DA40);
  State.wrappedValue.getter(&v103);
  v21 = v104;
  v23 = v105;
  v22 = v106;
  v24 = v107;
  v25 = v109;
  swift_unknownObjectRelease(v110);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v25);
  v94 = v22;
  v95 = v24;
  v81 = sub_10006C008();
  v26 = Text.init<A>(_:)(&v94, &type metadata for String, v81);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = Text.font(_:)(a2, v26, v27, v32, v29);
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  sub_10006B77C(v26, v28, v32);
  swift_bridgeObjectRelease(v30);
  KeyPath = swift_getKeyPath(&unk_100E2F758);
  v94 = v33;
  v95 = v35;
  LOBYTE(v96) = v39;
  *((_QWORD *)&v96 + 1) = v37;
  v97 = KeyPath;
  LOBYTE(v98) = 0;
  *(_QWORD *)&v99 = v86;
  swift_retain();
  v41 = sub_100008B04(&qword_10149DA98);
  v42 = sub_100175B34();
  v90 = v15;
  v82 = v41;
  v43 = v41;
  v44 = v42;
  View.accessibilityIdentifier(_:)(0xD00000000000001CLL, 0x8000000100E4D670, v43, v42);
  sub_10006B77C(v33, v35, v39);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease(v37);
  v45 = *(_QWORD *)(a1 + 8);
  v46 = *(_QWORD *)(a1 + 32);
  v47 = *(_QWORD *)(a1 + 40);
  v48 = *(_QWORD *)(a1 + 64);
  v49 = *(_QWORD *)(a1 + 72);
  v94 = *(_QWORD *)a1;
  v95 = v45;
  v96 = *(_OWORD *)(a1 + 16);
  v97 = v46;
  v98 = v47;
  v99 = *(_OWORD *)(a1 + 48);
  v100 = v48;
  v101 = v49;
  v102 = *(_OWORD *)(a1 + 80);
  State.wrappedValue.getter(&v103);
  v50 = v104;
  v51 = v105;
  v52 = v107;
  v53 = v108;
  v54 = v109;
  swift_unknownObjectRelease(v110);
  swift_bridgeObjectRelease(v52);
  swift_bridgeObjectRelease(v50);
  v55 = swift_bridgeObjectRelease(v51);
  if (v54)
  {
    v94 = v53;
    v95 = v54;
    v56 = Text.init<A>(_:)(&v94, &type metadata for String, v81);
    v58 = v57;
    v60 = v59;
    v62 = v61 & 1;
    v63 = Text.font(_:)(v83, v56, v57, v62, v59);
    v65 = v64;
    v67 = v66;
    v69 = v68 & 1;
    sub_10006B77C(v56, v58, v62);
    swift_bridgeObjectRelease(v60);
    v70 = swift_getKeyPath(&unk_100E2F758);
    v94 = v63;
    v95 = v65;
    LOBYTE(v96) = v69;
    *((_QWORD *)&v96 + 1) = v67;
    v97 = v70;
    LOBYTE(v98) = 0;
    *(_QWORD *)&v99 = v84;
    swift_retain();
    v71 = v88;
    View.accessibilityIdentifier(_:)(0xD00000000000001FLL, 0x8000000100E4D690, v82, v44);
    sub_10006B77C(v63, v65, v69);
    swift_release();
    swift_release();
    v55 = swift_bridgeObjectRelease(v67);
    v72 = 0;
    v73 = (uint64_t)v71;
  }
  else
  {
    v72 = 1;
    v73 = (uint64_t)v88;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v87 + 56))(v73, v72, 1, v89, v55);
  v74 = (uint64_t)v90;
  v75 = v91;
  sub_10000C1FC((uint64_t)v90, v91, &qword_10149DA90);
  v76 = v93;
  sub_10000C1FC(v73, v93, &qword_10149DA88);
  v77 = v92;
  sub_10000C1FC(v75, v92, &qword_10149DA90);
  v78 = sub_100008B04(&qword_10149DAA8);
  sub_10000C1FC(v76, v77 + *(int *)(v78 + 48), &qword_10149DA88);
  sub_100010CC4(v73, &qword_10149DA88);
  sub_100010CC4(v74, &qword_10149DA90);
  sub_100010CC4(v76, &qword_10149DA88);
  return sub_100010CC4(v75, &qword_10149DA90);
}

id sub_10015FBA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  id result;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;

  v81 = a4;
  v89 = a3;
  v88 = a2;
  v92 = a5;
  v6 = sub_100008B04(&qword_10149C9E0);
  __chkstk_darwin(v6);
  v93 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v82 = (char *)&v81 - v9;
  v10 = sub_100008B04(&qword_10149DA60);
  __chkstk_darwin(v10);
  v87 = (uint64_t *)((char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v86 = sub_100008B04(&qword_10149DA68);
  __chkstk_darwin(v86);
  v91 = (uint64_t)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v85 = (uint64_t)&v81 - v14;
  __chkstk_darwin(v15);
  v90 = (uint64_t)&v81 - v16;
  v17 = *a1;
  v18 = a1[1];
  v19 = a1[2];
  v100 = a1[3];
  v21 = a1[4];
  v20 = a1[5];
  v99 = a1[6];
  v98 = a1[7];
  v97 = a1[8];
  v96 = a1[9];
  v95 = a1[10];
  v94 = a1[11];
  v101 = v17;
  v102 = v18;
  *(_QWORD *)&v103 = v19;
  *((_QWORD *)&v103 + 1) = v100;
  v104 = v21;
  v105 = v20;
  *(_QWORD *)&v106 = v99;
  *((_QWORD *)&v106 + 1) = v98;
  v107 = v97;
  v108 = v96;
  *(_QWORD *)&v109 = v95;
  *((_QWORD *)&v109 + 1) = v94;
  sub_100008B04(&qword_10149DA40);
  State.wrappedValue.getter(&v110);
  v83 = v110;
  v84 = v111;
  v22 = v113;
  v23 = v114;
  v24 = v115;
  swift_unknownObjectRelease(v117);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  v101 = v17;
  v102 = v18;
  *(_QWORD *)&v103 = v19;
  *((_QWORD *)&v103 + 1) = v100;
  v104 = v21;
  v105 = v20;
  *(_QWORD *)&v106 = v99;
  *((_QWORD *)&v106 + 1) = v98;
  v107 = v97;
  v108 = v96;
  *(_QWORD *)&v109 = v95;
  *((_QWORD *)&v109 + 1) = v94;
  State.wrappedValue.getter(&v110);
  v25 = v111;
  v26 = v113;
  v27 = v114;
  v29 = v115;
  v28 = v116;
  swift_unknownObjectRelease(v117);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(v26);
  v30 = swift_bridgeObjectRelease(v29);
  result = (id)MKTransitLiveDepartureColorForLiveStatus(v28, v30);
  if (result)
  {
    v32 = Color.init(uiColor:)(result);
    v34 = static VerticalAlignment.center.getter(v33);
    v35 = (uint64_t)v87;
    *v87 = v34;
    *(_QWORD *)(v35 + 8) = 0x4014000000000000;
    *(_BYTE *)(v35 + 16) = 0;
    v36 = sub_100008B04(&qword_10149DA70);
    v37 = v84;
    sub_100160278(v83, v84, v88, v89, (uint64_t)a1, v32, v35 + *(int *)(v36 + 44));
    swift_bridgeObjectRelease(v37);
    v38 = v85;
    sub_10000C1FC(v35, v85, &qword_10149DA60);
    *(_QWORD *)(v38 + *(int *)(v86 + 36)) = 0x3FF0000000000000;
    sub_100010CC4(v35, &qword_10149DA60);
    v39 = v90;
    sub_1000207BC(v38, v90, &qword_10149DA68);
    v40 = a1[1];
    v41 = a1[4];
    v42 = a1[5];
    v43 = a1[8];
    v44 = a1[9];
    v101 = *a1;
    v102 = v40;
    v103 = *((_OWORD *)a1 + 1);
    v104 = v41;
    v105 = v42;
    v106 = *((_OWORD *)a1 + 3);
    v107 = v43;
    v108 = v44;
    v109 = *((_OWORD *)a1 + 5);
    State.wrappedValue.getter(&v110);
    v45 = v111;
    v46 = v112;
    v47 = v113;
    v48 = v114;
    v49 = v115;
    swift_unknownObjectRelease(v117);
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v49);
    if (v47)
    {
      v101 = v46;
      v102 = v47;
      v50 = sub_10006C008();
      v51 = Text.init<A>(_:)(&v101, &type metadata for String, v50);
      v53 = v52;
      v55 = v54;
      v57 = v56 & 1;
      v101 = v32;
      v58 = Text.foregroundStyle<A>(_:)(&v101, v51, v52, v57, v54, &type metadata for Color, &protocol witness table for Color);
      v60 = v59;
      v100 = v32;
      v61 = v39;
      v63 = v62;
      v65 = v64 & 1;
      sub_10006B77C(v51, v53, v57);
      swift_bridgeObjectRelease(v55);
      v66 = Text.font(_:)(v81, v58, v60, v65, v63);
      v68 = v67;
      v70 = v69;
      v72 = v71 & 1;
      sub_10006B77C(v58, v60, v65);
      v73 = v63;
      v39 = v61;
      swift_bridgeObjectRelease(v73);
      v101 = v66;
      v102 = v68;
      LOBYTE(v103) = v72;
      *((_QWORD *)&v103 + 1) = v70;
      v74 = (uint64_t)v82;
      View.accessibilityIdentifier(_:)(0xD000000000000023, 0x8000000100E4D610, &type metadata for Text, &protocol witness table for Text);
      sub_10006B77C(v66, v68, v72);
      swift_bridgeObjectRelease(v70);
      v75 = sub_100008B04(&qword_10149C998);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v74, 0, 1, v75);
    }
    else
    {
      v76 = sub_100008B04(&qword_10149C998);
      v74 = (uint64_t)v82;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v82, 1, 1, v76);
    }
    v77 = v91;
    sub_10000C1FC(v39, v91, &qword_10149DA68);
    v78 = v93;
    sub_10000C1FC(v74, v93, &qword_10149C9E0);
    v79 = v92;
    sub_10000C1FC(v77, v92, &qword_10149DA68);
    v80 = sub_100008B04(&qword_10149DA78);
    sub_10000C1FC(v78, v79 + *(int *)(v80 + 48), &qword_10149C9E0);
    swift_release();
    sub_100010CC4(v74, &qword_10149C9E0);
    sub_100010CC4(v39, &qword_10149DA68);
    sub_100010CC4(v78, &qword_10149C9E0);
    return (id)sub_100010CC4(v77, &qword_10149DA68);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100160278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v42 = a6;
  v43 = a4;
  v44 = a5;
  v45 = a7;
  v10 = sub_100008B04(&qword_10149C998);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - v14;
  v46 = a1;
  v47 = a2;
  v16 = sub_10006C008();
  swift_bridgeObjectRetain(a2);
  v17 = Text.init<A>(_:)(&v46, &type metadata for String, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  v24 = Text.font(_:)(a3, v17, v18, v23, v20);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  sub_10006B77C(v17, v19, v23);
  swift_bridgeObjectRelease(v21);
  v46 = v43;
  v31 = Text.foregroundStyle<A>(_:)(&v46, v24, v26, v30, v28, &type metadata for Color, &protocol witness table for Color);
  v33 = v32;
  v35 = v34;
  LOBYTE(v21) = v36 & 1;
  sub_10006B77C(v24, v26, v30);
  swift_bridgeObjectRelease(v28);
  v46 = v31;
  v47 = v33;
  v48 = v21;
  v49 = v35;
  View.accessibilityIdentifier(_:)(0xD000000000000020, 0x8000000100E4D640, &type metadata for Text, &protocol witness table for Text);
  sub_10006B77C(v31, v33, v21);
  swift_bridgeObjectRelease(v35);
  v37 = sub_10015EAC8();
  if (v37)
  {
    v38 = v42;
    swift_retain();
  }
  else
  {
    v38 = 0;
  }
  sub_10000C1FC((uint64_t)v15, (uint64_t)v12, &qword_10149C998);
  v39 = v45;
  sub_10000C1FC((uint64_t)v12, v45, &qword_10149C998);
  v40 = (_QWORD *)(v39 + *(int *)(sub_100008B04(&qword_10149DA80) + 48));
  *v40 = v37;
  v40[1] = v38;
  sub_100175ADC((uint64_t)v37, v38);
  sub_100010CC4((uint64_t)v15, &qword_10149C998);
  sub_100175B08((uint64_t)v37, v38);
  return sub_100010CC4((uint64_t)v12, &qword_10149C998);
}

uint64_t sub_1001604E0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v7 = sub_100008B04(&qword_10149DA08);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - v11;
  v13 = sub_100008B04(&qword_10149DA48);
  __chkstk_darwin(v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v22 - v17;
  sub_10000C1FC(a1, (uint64_t)&v22 - v17, &qword_10149DA10);
  *(_WORD *)&v18[*(int *)(v13 + 36)] = 256;
  sub_10000C1FC(v23, (uint64_t)v12, &qword_10149DA08);
  sub_10000C1FC((uint64_t)v18, (uint64_t)v15, &qword_10149DA48);
  sub_10000C1FC((uint64_t)v12, (uint64_t)v9, &qword_10149DA08);
  sub_10000C1FC((uint64_t)v15, a4, &qword_10149DA48);
  v19 = sub_100008B04((uint64_t *)&unk_10149DA50);
  v20 = a4 + *(int *)(v19 + 48);
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = a2 ^ 1;
  *(_BYTE *)(v20 + 9) = a2;
  sub_10000C1FC((uint64_t)v9, a4 + *(int *)(v19 + 64), &qword_10149DA08);
  sub_100010CC4((uint64_t)v12, &qword_10149DA08);
  sub_100010CC4((uint64_t)v18, &qword_10149DA48);
  sub_100010CC4((uint64_t)v9, &qword_10149DA08);
  return sub_100010CC4((uint64_t)v15, &qword_10149DA48);
}

uint64_t sub_1001606B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t KeyPath;
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  __n128 v47;
  char *v48;
  _OWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  char *v64;
  uint64_t OpaqueTypeConformance2;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[3];

  v82 = a1;
  v2 = type metadata accessor for AccessibilityChildBehavior(0);
  v80 = *(_QWORD *)(v2 - 8);
  v81 = v2;
  __chkstk_darwin(v2);
  v79 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v78);
  v77 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008B04(&qword_10149DB30);
  __chkstk_darwin(v5);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100008B04(&qword_10149DB38);
  __chkstk_darwin(v68);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100008B04(&qword_10149DB40);
  __chkstk_darwin(v69);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100008B04(&qword_10149DB48);
  __chkstk_darwin(v70);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_100008B04(&qword_10149DB50);
  __chkstk_darwin(v72);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100008B04(&qword_10149DB58);
  __chkstk_darwin(v73);
  v71 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100008B04(&qword_10149DB60);
  v18 = *(_QWORD *)(v17 - 8);
  v75 = v17;
  v76 = v18;
  v19 = __chkstk_darwin(v17);
  v74 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static VerticalAlignment.center.getter(v19);
  *((_QWORD *)v7 + 1) = 0x4008000000000000;
  v7[16] = 0;
  v21 = sub_100008B04(&qword_10149DB68);
  sub_100160C68(v1, (uint64_t)&v7[*(int *)(v21 + 44)]);
  v22 = (void *)objc_opt_self(UIColor);
  v23 = Color.init(uiColor:)(objc_msgSend(v22, "secondaryLabelColor"));
  KeyPath = swift_getKeyPath(&unk_100E2F960);
  v83[0] = v23;
  v25 = swift_retain();
  v26 = AnyShapeStyle.init<A>(_:)(v83, &type metadata for Color, &protocol witness table for Color, v25);
  sub_10000C1FC((uint64_t)v7, (uint64_t)v9, &qword_10149DB30);
  swift_release();
  v27 = (uint64_t *)&v9[*(int *)(v68 + 36)];
  *v27 = KeyPath;
  v27[1] = v26;
  v28 = sub_100010CC4((uint64_t)v7, &qword_10149DB30);
  LOBYTE(v26) = static Edge.Set.vertical.getter(v28);
  v29 = EdgeInsets.init(_all:)(5.0);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_10000C1FC((uint64_t)v9, (uint64_t)v11, &qword_10149DB38);
  v36 = &v11[*(int *)(v69 + 36)];
  *v36 = v26;
  *((double *)v36 + 1) = v29;
  *((_QWORD *)v36 + 2) = v31;
  *((_QWORD *)v36 + 3) = v33;
  *((_QWORD *)v36 + 4) = v35;
  v36[40] = 0;
  v37 = sub_100010CC4((uint64_t)v9, &qword_10149DB38);
  LOBYTE(v9) = static Edge.Set.horizontal.getter(v37);
  v38 = EdgeInsets.init(_all:)(10.0);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_10000C1FC((uint64_t)v11, (uint64_t)v13, &qword_10149DB40);
  v45 = &v13[*(int *)(v70 + 36)];
  *v45 = (char)v9;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  sub_100010CC4((uint64_t)v11, &qword_10149DB40);
  v46 = Color.init(uiColor:)(objc_msgSend(v22, "tertiarySystemFillColor"));
  LOBYTE(v9) = static Edge.Set.all.getter(v47);
  sub_10000C1FC((uint64_t)v13, (uint64_t)v15, &qword_10149DB48);
  v48 = &v15[*(int *)(v72 + 36)];
  *(_QWORD *)v48 = v46;
  v48[8] = (char)v9;
  sub_100010CC4((uint64_t)v13, &qword_10149DB48);
  v49 = v77;
  v50 = &v77[*(int *)(v78 + 20)];
  v51 = enum case for RoundedCornerStyle.continuous(_:);
  v52 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
  __asm { FMOV            V0.2D, #12.0 }
  *v49 = _Q0;
  v58 = v73;
  v59 = (uint64_t)v71;
  v60 = (uint64_t)&v71[*(int *)(v73 + 36)];
  sub_1000202AC((uint64_t)v49, v60, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v60 + *(int *)(sub_100008B04(&qword_101494DD0) + 36)) = 256;
  sub_10000C1FC((uint64_t)v15, v59, &qword_10149DB50);
  sub_1000202F0((uint64_t)v49, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  v61 = sub_100010CC4((uint64_t)v15, &qword_10149DB50);
  v62 = v79;
  static AccessibilityChildBehavior.combine.getter(v61);
  v63 = sub_100175C88();
  v64 = v74;
  View.accessibilityElement(children:)(v62, v58, v63);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v62, v81);
  sub_100010CC4(v59, &qword_10149DB58);
  v83[0] = v58;
  v83[1] = v63;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v83, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v66 = v75;
  View.accessibilityIdentifier(_:)(0xD00000000000001CLL, 0x8000000100E2FD90, v75, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v64, v66);
}

id sub_100160C68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id result;
  void *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  id v25;
  id v26;
  double v27;
  double v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t countAndFlagsBits;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t OpaqueTypeConformance2;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  _QWORD v92[2];
  Swift::String v93;
  __int16 v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  __int128 v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  char v103;
  __int128 v104;
  Swift::String v105;

  v91 = a1;
  v90 = a2;
  v80 = type metadata accessor for AccessibilityChildBehavior(0);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v78 = (char *)&v77 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for Image.ResizingMode(0);
  v3 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v5 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_100008B04(&qword_10149DBA0);
  v83 = *(_QWORD *)(v84 - 8);
  __chkstk_darwin(v84);
  v82 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100008B04(&qword_10149DBA8);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v81 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_10149DBB0);
  __chkstk_darwin(v8);
  v89 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v86 = (uint64_t)&v77 - v11;
  v12 = type metadata accessor for ColorScheme(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - v17;
  v19 = objc_msgSend(objc_allocWithZone((Class)MKTransitShield), "initWithShieldType:text:color:", 210002, 0, 0);
  result = objc_msgSend(objc_allocWithZone((Class)MKTransitArtwork), "initWithShield:accessibilityText:", v19, 0);
  if (result)
  {
    v21 = result;

    type metadata accessor for NearbyTransitWalkingPillView(0);
    sub_100019F8C((uint64_t)v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for ColorScheme.dark(_:), v12);
    v22 = static ColorScheme.== infix(_:_:)(v18, v15);
    v23 = *(void (**)(char *, uint64_t))(v13 + 8);
    v23(v15, v12);
    v23(v18, v12);
    v24 = (void *)objc_opt_self(UIScreen);
    v25 = v21;
    v26 = objc_msgSend(v24, "mainScreen");
    objc_msgSend(v26, "scale");
    v28 = v27;

    v29 = objc_msgSend((id)objc_opt_self(MKArtworkDataSourceCache), "sharedInstance");
    v30 = objc_msgSend(v29, "imageForArtwork:size:featureType:scale:nightMode:", v25, 6, 2, v22 & 1, v28);

    v31 = 1;
    v85 = v25;
    if (v30)
    {
      v32 = objc_msgSend(v30, "imageWithRenderingMode:", 2);
      v33 = Image.init(uiImage:)(v32);
      v34 = v77;
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v77);
      v35 = Image.resizable(capInsets:resizingMode:)(v5, v33, 0.0, 0.0, 0.0, 0.0);
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v34);
      v36 = v91;
      v37 = sub_100008B04(&qword_10149CF20);
      v38 = ScaledMetric.wrappedValue.getter(&v93, v37);
      countAndFlagsBits = v93._countAndFlagsBits;
      v40 = static Alignment.center.getter(v38);
      v42 = _FrameLayout.init(width:height:alignment:)(&v100, 0, 1, countAndFlagsBits, 0, v40, v41);
      v93._countAndFlagsBits = v35;
      v93._object = 0;
      v94 = 1;
      v95 = v100;
      v96 = v101;
      v97 = v102;
      v98 = v103;
      v99 = v104;
      v43 = v78;
      static AccessibilityChildBehavior.ignore.getter(v42);
      v44 = sub_100008B04(&qword_101495C90);
      v45 = sub_10002067C((unint64_t *)&qword_101495C98, &qword_101495C90, (uint64_t (*)(void))sub_100175E70, (uint64_t)&protocol witness table for _FrameLayout);
      v46 = v82;
      View.accessibilityElement(children:)(v43, v44, v45);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v80);
      swift_release();
      if (qword_101490ED0 != -1)
        swift_once(&qword_101490ED0, sub_10011833C);
      v105._countAndFlagsBits = 0xD000000000000034;
      v105._object = (void *)0x8000000100E4D720;
      v47._object = (void *)0x8000000100E4D700;
      v47._countAndFlagsBits = 0xD000000000000015;
      v48._countAndFlagsBits = 1802264919;
      v48._object = (void *)0xE400000000000000;
      v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v48, v105);
      v93 = v49;
      v92[0] = v44;
      v92[1] = v45;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v92, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
      v51 = sub_10006C008();
      v52 = (uint64_t)v81;
      v53 = v84;
      View.accessibilityLabel<A>(_:)(&v93, v84, &type metadata for String, OpaqueTypeConformance2, v51);
      swift_bridgeObjectRelease(v49._object);

      (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v53);
      v54 = v86;
      sub_1000207BC(v52, v86, &qword_10149DBA8);
      v31 = 0;
      v55 = v88;
      v56 = v87;
    }
    else
    {
      v36 = v91;
      v55 = v88;
      v56 = v87;
      v54 = v86;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v54, v31, 1, v55);
    v57 = (void *)v36[1];
    v93._countAndFlagsBits = *v36;
    v93._object = v57;
    v58 = sub_10006C008();
    swift_bridgeObjectRetain(v57);
    v59 = Text.init<A>(_:)(&v93, &type metadata for String, v58);
    v61 = v60;
    v63 = v62;
    v65 = v64 & 1;
    v66 = static Font.caption.getter();
    v67 = Text.font(_:)(v66, v59, v61, v65, v63);
    v69 = v68;
    v71 = v70;
    v73 = v72;
    swift_release();
    sub_10006B77C(v59, v61, v65);
    swift_bridgeObjectRelease(v63);
    v74 = v89;
    sub_10000C1FC(v54, v89, &qword_10149DBB0);
    v75 = v90;
    sub_10000C1FC(v74, v90, &qword_10149DBB0);
    v76 = v75 + *(int *)(sub_100008B04(&qword_10149DBB8) + 48);
    sub_10006BB40(v67, v69, v71 & 1);
    swift_bridgeObjectRetain(v73);

    *(_QWORD *)v76 = v67;
    *(_QWORD *)(v76 + 8) = v69;
    *(_BYTE *)(v76 + 16) = v71 & 1;
    *(_QWORD *)(v76 + 24) = v73;
    sub_100010CC4(v54, &qword_10149DBB0);
    sub_10006B77C(v67, v69, v71 & 1);
    swift_bridgeObjectRelease(v73);
    return (id)sub_100010CC4(v74, &qword_10149DBB0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100161444@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v2 = v1;
  v30 = a1;
  v3 = type metadata accessor for AccessibilityChildBehavior(0);
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)sub_100008B04(&qword_10149D7B8);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_10149D7C0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017336C(v2);
  v17 = static HorizontalAlignment.leading.getter(v16);
  v19 = static VerticalAlignment.center.getter(v18);
  *v8 = swift_getKeyPath(&unk_100E2FCC0);
  v20 = sub_100008B04(&qword_1014931B0);
  swift_storeEnumTagMultiPayload(v8, v20, 0);
  sub_1001616B4(v2, (uint64_t)v8 + v6[9]);
  sub_1001733DC(v2);
  *(_QWORD *)((char *)v8 + v6[12]) = v19;
  v21 = (char *)v8 + v6[13];
  *(_QWORD *)v21 = 0x4020000000000000;
  v21[8] = 0;
  *(_QWORD *)((char *)v8 + v6[10]) = v17;
  v22 = (char *)v8 + v6[11];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  *((_BYTE *)v8 + v6[14]) = 0;
  v23 = sub_1000207BC((uint64_t)v8, (uint64_t)v11, &qword_10149D7B8);
  static AccessibilityChildBehavior.combine.getter(v23);
  v24 = sub_100010D70(&qword_10149D7C8, &qword_10149D7B8, byte_100E2A610);
  View.accessibilityElement(children:)(v5, v6, v24);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v29);
  sub_100010CC4((uint64_t)v11, &qword_10149D7B8);
  v31[0] = v6;
  v31[1] = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v31, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  View.accessibilityIdentifier(_:)(0xD00000000000001CLL, 0x8000000100E2FAB0, v12, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1001616B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;

  v78 = a2;
  v69 = type metadata accessor for NearbyTransitWalkingPillView(0);
  __chkstk_darwin(v69);
  v71 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_10149D7D0);
  v5 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  v75 = v5;
  __chkstk_darwin(v4);
  v70 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04(&qword_10149D7D8);
  __chkstk_darwin(v7);
  v77 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v73 = (uint64_t)&v68 - v10;
  v11 = sub_100008B04(&qword_10149C998);
  __chkstk_darwin(v11);
  v76 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - v14;
  v16 = *a1;
  v17 = a1[1];
  v68 = a1[2];
  v72 = a1[3];
  v79 = v16;
  v80 = v17;
  v18 = sub_10006C008();
  swift_bridgeObjectRetain(v17);
  v19 = Text.init<A>(_:)(&v79, &type metadata for String, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24 & 1;
  v26 = static Font.title3.getter();
  v27 = Text.font(_:)(v26, v19, v21, v25, v23);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  swift_release();
  sub_10006B77C(v19, v21, v25);
  v34 = swift_bridgeObjectRelease(v23);
  v35 = static Font.Weight.semibold.getter(v34);
  v36 = Text.fontWeight(_:)(*(_QWORD *)&v35, 0, v27, v29, v31 & 1, v33);
  v38 = v37;
  v40 = v39;
  v42 = v41 & 1;
  sub_10006B77C(v27, v29, v31 & 1);
  swift_bridgeObjectRelease(v33);
  v43 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  v79 = Color.init(uiColor:)(v43);
  v44 = Text.foregroundStyle<A>(_:)(&v79, v36, v38, v42, v40, &type metadata for Color, &protocol witness table for Color);
  v46 = v45;
  v48 = v47;
  v50 = v49 & 1;
  sub_10006B77C(v36, v38, v42);
  swift_release();
  swift_bridgeObjectRelease(v40);
  v79 = v44;
  v80 = v46;
  v81 = v50;
  v82 = v48;
  View.accessibilityIdentifier(_:)(0xD000000000000017, 0x8000000100E4D5F0, &type metadata for Text, &protocol witness table for Text);
  v51 = v46;
  v52 = v72;
  sub_10006B77C(v44, v51, v50);
  swift_bridgeObjectRelease(v48);
  if (v52)
  {
    KeyPath = swift_getKeyPath(&unk_100E2F930);
    v54 = (uint64_t *)v71;
    v55 = (uint64_t *)&v71[*(int *)(v69 + 20)];
    *v55 = KeyPath;
    v56 = sub_100008B04(&qword_101493188);
    swift_storeEnumTagMultiPayload(v55, v56, 0);
    *v54 = v68;
    v54[1] = v52;
    v79 = 0x402C000000000000;
    v57 = sub_1000627A8();
    swift_bridgeObjectRetain(v52);
    ScaledMetric.init(wrappedValue:)(&v79, &type metadata for Double, v57);
    v58 = v70;
    sub_1000202AC((uint64_t)v54, v70, type metadata accessor for NearbyTransitWalkingPillView);
    v59 = v74;
    *(_QWORD *)(v58 + *(int *)(v74 + 36)) = 0x3FF0000000000000;
    sub_1000202F0((uint64_t)v54, type metadata accessor for NearbyTransitWalkingPillView);
    v60 = v73;
    sub_1000207BC(v58, v73, &qword_10149D7D0);
    v61 = 0;
    v62 = v59;
  }
  else
  {
    v61 = 1;
    v60 = v73;
    v62 = v74;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v60, v61, 1, v62);
  v63 = v76;
  sub_10000C1FC((uint64_t)v15, v76, &qword_10149C998);
  v64 = v77;
  sub_10000C1FC(v60, v77, &qword_10149D7D8);
  v65 = v78;
  sub_10000C1FC(v63, v78, &qword_10149C998);
  v66 = sub_100008B04(&qword_10149D7E0);
  sub_10000C1FC(v64, v65 + *(int *)(v66 + 48), &qword_10149D7D8);
  sub_100010CC4(v60, &qword_10149D7D8);
  sub_100010CC4((uint64_t)v15, &qword_10149C998);
  sub_100010CC4(v64, &qword_10149D7D8);
  return sub_100010CC4(v63, &qword_10149C998);
}

uint64_t sub_100161B84@<X0>(uint64_t a1@<X8>)
{
  return sub_100161444(a1);
}

id sub_100161BCC()
{
  return objc_msgSend(objc_allocWithZone((Class)TransitItemIncidentCollectionViewCell), "init");
}

id sub_100161BF0(void *a1)
{
  Class isa;
  Class v3;

  sub_100008B04((uint64_t *)&unk_10149D2E0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v3 = Date._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "configureWithIncidents:referenceDate:", isa, v3);

  return objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

uint64_t sub_100161C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10000BC84(&qword_10149D7B0, type metadata accessor for NearbyTransitGroupIncidentsView, (uint64_t)&unk_100E2FB40);
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100161CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10000BC84(&qword_10149D7B0, type metadata accessor for NearbyTransitGroupIncidentsView, (uint64_t)&unk_100E2FB40);
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100161D44(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10000BC84(&qword_10149D7B0, type metadata accessor for NearbyTransitGroupIncidentsView, (uint64_t)&unk_100E2FB40);
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_100161D80()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;
  Swift::String v4;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v4._countAndFlagsBits = 0xD00000000000004BLL;
  v4._object = (void *)0x8000000100E4D3D0;
  v0._object = (void *)0x8000000100E4D3B0;
  v0._countAndFlagsBits = 0xD000000000000014;
  v1._countAndFlagsBits = 7235920;
  v1._object = (void *)0xE300000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v1, v4);
  result = v3._countAndFlagsBits;
  xmmword_1014D4DE0 = (__int128)v3;
  return result;
}

uint64_t sub_100161E24()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t result;
  Swift::String v3;
  Swift::String v4;

  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v4._countAndFlagsBits = 0xD000000000000055;
  v4._object = (void *)0x8000000100E4D350;
  v0._object = (void *)0x8000000100E4D330;
  v0._countAndFlagsBits = 0xD00000000000001BLL;
  v1._countAndFlagsBits = 0x702065766F6D6552;
  v1._object = (void *)0xEA00000000006E69;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v1, v4);
  result = v3._countAndFlagsBits;
  xmmword_1014D4DF0 = (__int128)v3;
  return result;
}

uint64_t sub_100161ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for NearbyTransitGroupView(0);
  sub_100008B04(&qword_10149CD30);
  State.wrappedValue.getter(&v4);
  result = 0;
  if (v4 == 1)
  {
    v3 = *(_QWORD *)(v0 + *(int *)(v1 + 20) + 32);
    if (*(_QWORD *)(v3 + 16) < 3uLL)
      return 0;
    else
      return swift_bridgeObjectRetain(v3);
  }
  return result;
}

void sub_100161FA0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 20) + 32);
  swift_bridgeObjectRetain(v3);
  sub_100008B04(&qword_10149CD30);
  State.wrappedValue.getter(&v30);
  if ((v30 & 1) != 0)
    v4 = 2;
  else
    v4 = *(_QWORD *)(v3 + 16);
  v5 = sub_1001B0EA8(v4, v3);
  v9 = v5;
  if (v7 == v8 >> 1)
  {
    swift_unknownObjectRelease(v5);
  }
  else
  {
    if (v7 >= (uint64_t)(v8 >> 1))
    {
      __break(1u);
      return;
    }
    v10 = (_QWORD *)(v6 + 80 * v7);
    v11 = v10[1];
    v12 = v10[2];
    v13 = v10[3];
    v14 = v10[5];
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
    swift_unknownObjectRetain(v13);
    v15 = swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRelease(v15);
    swift_unknownObjectRelease(v13);
    swift_unknownObjectRelease(v9);
    swift_bridgeObjectRelease(v11);
    if (*(_QWORD *)(v12 + 16))
    {
      v17 = *(_QWORD *)(v12 + 32);
      v16 = *(_QWORD *)(v12 + 40);
      v18 = *(_QWORD *)(v12 + 48);
      v19 = *(_QWORD *)(v12 + 72);
      v20 = *(_QWORD *)(v12 + 80);
      v21 = *(_QWORD *)(v12 + 104);
      v22 = *(_QWORD *)(v12 + 112);
      v27 = *(_OWORD *)(v12 + 88);
      v28 = *(_OWORD *)(v12 + 56);
      v23 = *(_QWORD *)(v12 + 56);
      v29 = *(_QWORD *)(v12 + 88);
      swift_bridgeObjectRetain(v27);
      swift_unknownObjectRetain(v21);
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRelease(v12);
      if (!v22)
      {
        swift_unknownObjectRelease(v21);
        swift_bridgeObjectRelease(v29);
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v16);
        v17 = 0;
        v16 = 0;
        v18 = 0;
        v19 = 0;
        v20 = 0;
        v21 = 0;
        goto LABEL_15;
      }
      if (v22 != 4)
      {
        v26 = v27;
        v25 = v28;
        goto LABEL_16;
      }
      swift_unknownObjectRelease(v21);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v23);
      v24 = v16;
    }
    else
    {
      v24 = v12;
    }
    swift_bridgeObjectRelease(v24);
  }
  v17 = 0;
  v16 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
LABEL_15:
  v25 = 0uLL;
  v26 = 0uLL;
LABEL_16:
  *(_QWORD *)a1 = v17;
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = v18;
  *(_OWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v20;
  *(_OWORD *)(a1 + 56) = v26;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v22;
}

uint64_t sub_1001621E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = type metadata accessor for NearbyTransitGroupView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v7 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + *(int *)(v6 + 20) + 40);
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v19 = *(_QWORD *)(v1 + *(int *)(v6 + 20) + 40);
    else
      v19 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + *(int *)(v6 + 20) + 40));
    v20 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v8);
    if (v20 >= 1)
      goto LABEL_3;
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_1000202AC(v1, (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitGroupView);
    v9 = *(unsigned __int8 *)(v4 + 80);
    v10 = (v9 + 16) & ~v9;
    v11 = (v5 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = swift_allocObject(&unk_1011A68D8, v11 + 8, v9 | 7);
    v13 = sub_10003F29C((uint64_t)v7, v12 + v10, type metadata accessor for NearbyTransitGroupView);
    *(_QWORD *)(v12 + v11) = v8;
    __chkstk_darwin(v13);
    *(&v22 - 2) = v8;
    *(&v22 - 1) = v1;
    v14 = type metadata accessor for NearbyTransitGroupIncidentsView(0);
    v15 = sub_10000BC84(&qword_10149D2D8, type metadata accessor for NearbyTransitGroupIncidentsView, (uint64_t)&unk_100E2FBD0);
    swift_bridgeObjectRetain(v8);
    Button.init(action:label:)(sub_100170EB8, v12, sub_100170EF8, &v22 - 4, v14, v15, v16);
    v17 = sub_100008B04(&qword_10149D2A0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
  v21 = sub_100008B04(&qword_10149D2A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
}

uint64_t sub_1001623EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  void *v5;
  void *v6;
  Class isa;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  _BYTE v14[24];
  _BYTE v15[24];
  uint64_t v16;

  v1 = (uint64_t *)(a1 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 28));
  v2 = *v1;
  if (*v1)
  {
    v3 = v2 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate, v14, 0, 0);
    sub_10000C1FC(v3, (uint64_t)v15, (uint64_t *)&unk_1014940B0);
    if (v16)
    {
      sub_100084C44((uint64_t)v15, (uint64_t)v13);
      sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_1014940B0);
      v4 = (void **)sub_10000BE88(v13, v13[3]);
      v5 = *v4;
      v6 = *(void **)((char *)*v4 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
      if (v6)
      {
        sub_100008B04((uint64_t *)&unk_10149D2E0);
        isa = Array._bridgeToObjectiveC()().super.isa;
        v8 = objc_msgSend(v5, "view");
        objc_msgSend(v6, "viewController:openTransitIncidents:fromView:withUserInfo:", v5, isa, v8, 0);

      }
      return sub_10000BEAC(v13);
    }
    else
    {
      return sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_1014940B0);
    }
  }
  else
  {
    v10 = v1[1];
    v11 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v12 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    result = EnvironmentObject.error()(0, v10, v11, v12);
    __break(1u);
  }
  return result;
}

uint64_t sub_100162574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for NearbyTransitGroupIncidentsView(0);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a2 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 28);
  v10 = *(void **)v9;
  if (*(_QWORD *)v9)
  {
    KeyPath = swift_getKeyPath(&unk_100E2F9D0);
    v12 = swift_getKeyPath(&unk_100E2F9F8);
    v13 = (_QWORD *)((char *)v8 + *(int *)(v6 + 20));
    swift_bridgeObjectRetain(a1);
    v14 = v10;
    static Published.subscript.getter(v13, v14, KeyPath, v12);

    swift_release();
    swift_release();
    *v8 = a1;
    return sub_10003F29C((uint64_t)v8, a3, type metadata accessor for NearbyTransitGroupIncidentsView);
  }
  else
  {
    v16 = *(_QWORD *)(v9 + 8);
    v17 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v18 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    swift_bridgeObjectRetain(a1);
    result = EnvironmentObject.error()(0, v16, v17, v18);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001626C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t OpaqueTypeConformance2;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47[16];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[5];

  v6 = v5;
  v40 = a3;
  v41 = a4;
  v38 = a1;
  v39 = a2;
  v46 = a5;
  v37 = type metadata accessor for BorderlessButtonStyle(0);
  v45 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NearbyTransitGroupView(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = sub_100008B04(&qword_10149D160);
  v42 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100008B04(&qword_10149D178);
  v16 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  v44 = v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100008B04(&qword_10149D158);
  __chkstk_darwin(v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000202AC(v6, (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for NearbyTransitGroupView);
  v22 = *(unsigned __int8 *)(v10 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = swift_allocObject(&unk_1011A67E8, v23 + v11, v22 | 7);
  sub_10003F29C((uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, type metadata accessor for NearbyTransitGroupView);
  v48 = v38;
  v49 = v39;
  v50 = v40;
  v51 = v41;
  v25 = sub_100008B04(&qword_10149D180);
  v26 = sub_10002067C(&qword_10149D188, &qword_10149D180, sub_10017051C, (uint64_t)&protocol witness table for _FlexFrameLayout);
  v28 = Button.init(action:label:)(sub_1001704FC, v24, sub_100170510, v47, v25, v26, v27);
  BorderlessButtonStyle.init()(v28);
  v29 = sub_100010D70(&qword_10149D168, &qword_10149D160, (const char *)&protocol conformance descriptor for Button<A>);
  v30 = sub_10000BC84(&qword_10149D170, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v31 = v37;
  View.buttonStyle<A>(_:)(v8, v12, v37, v29, v30);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v31);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v12);
  v52[0] = v12;
  v52[1] = v31;
  v52[2] = v29;
  v52[3] = v30;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v52, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v33 = v43;
  View.accessibilityIdentifier(_:)(0xD000000000000021, 0x8000000100E4D300, v43, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v33);
  v34 = v46;
  sub_10000C1FC((uint64_t)v21, v46, &qword_10149D158);
  v35 = v34 + *(int *)(sub_100008B04(&qword_10149D140) + 36);
  *(_BYTE *)(v35 + 32) = 0;
  *(_OWORD *)v35 = 0u;
  *(_OWORD *)(v35 + 16) = 0u;
  return sub_100010CC4((uint64_t)v21, &qword_10149D158);
}

id sub_100162A38(uint64_t a1)
{
  char *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[9];
  uint64_t v7;

  v1 = (char *)(a1 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 36));
  v2 = *v1;
  v3 = *((_QWORD *)v1 + 1);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 0;
  v4 = sub_100008B04(&qword_10149CD30);
  State.wrappedValue.setter(v6, v4);
  return objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", 237, 44, 0);
}

uint64_t sub_100162AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t KeyPath;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[7];

  v54 = a4;
  v53 = a3;
  v56 = a5;
  v7 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_100008B04(&qword_10149D1A8);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008B04(&qword_10149D198);
  __chkstk_darwin(v13);
  v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100008B04(&qword_10149D180);
  __chkstk_darwin(v55);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100E2F930);
  v19 = (_QWORD *)((char *)v9 + *(int *)(v7 + 20));
  *v19 = KeyPath;
  v20 = sub_100008B04(&qword_101493188);
  swift_storeEnumTagMultiPayload(v19, v20, 0);
  *v9 = a1;
  v9[1] = a2;
  v21 = v54;
  v9[2] = v53;
  v9[3] = v21;
  *(_QWORD *)((char *)v9 + *(int *)(v7 + 24)) = 0x4010000000000000;
  v22 = swift_unknownObjectRetain(a1);
  v23 = Text.Measurements.init()(v22);
  v24 = static Edge.Set.horizontal.getter(v23);
  if (qword_101490FF0 != -1)
    swift_once(&qword_101490FF0, sub_10015B128);
  v25 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DD8);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_1000202AC((uint64_t)v9, (uint64_t)v12, type metadata accessor for NearbyTransitCollapsedLinesView);
  v32 = &v12[*(int *)(v10 + 36)];
  *v32 = v24;
  *((double *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  v33 = sub_1000202F0((uint64_t)v9, type metadata accessor for NearbyTransitCollapsedLinesView);
  v34 = static Edge.Set.vertical.getter(v33);
  if (qword_101490FE0 != -1)
    swift_once(&qword_101490FE0, sub_10015B108);
  v35 = EdgeInsets.init(_all:)(*(double *)&qword_1014D4DC8);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_10000C1FC((uint64_t)v12, (uint64_t)v15, &qword_10149D1A8);
  v42 = &v15[*(int *)(v13 + 36)];
  *v42 = v34;
  *((double *)v42 + 1) = v35;
  *((_QWORD *)v42 + 2) = v37;
  *((_QWORD *)v42 + 3) = v39;
  *((_QWORD *)v42 + 4) = v41;
  v42[40] = 0;
  v43 = sub_100010CC4((uint64_t)v12, &qword_10149D1A8);
  if (qword_101490FE8 != -1)
    v43 = swift_once(&qword_101490FE8, sub_10015B118);
  v44 = qword_1014D4DD0;
  v45 = static Alignment.center.getter(v43);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v57, 0, 1, 0, 1, 0, 1, v44, 0, 0, 1, 0, 1, v45, v46);
  sub_10000C1FC((uint64_t)v15, (uint64_t)v17, &qword_10149D198);
  v47 = &v17[*(int *)(v55 + 36)];
  v48 = v57[5];
  *((_OWORD *)v47 + 4) = v57[4];
  *((_OWORD *)v47 + 5) = v48;
  *((_OWORD *)v47 + 6) = v57[6];
  v49 = v57[1];
  *(_OWORD *)v47 = v57[0];
  *((_OWORD *)v47 + 1) = v49;
  v50 = v57[3];
  *((_OWORD *)v47 + 2) = v57[2];
  *((_OWORD *)v47 + 3) = v50;
  sub_100010CC4((uint64_t)v15, &qword_10149D198);
  return sub_1000207BC((uint64_t)v17, v56, &qword_10149D180);
}

uint64_t sub_100162ED0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t i;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  unint64_t v42;
  uint64_t v43;
  int *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t OpaqueTypeConformance2;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _OWORD v93[2];
  __int128 v94;
  _BYTE v95[25];
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _OWORD v99[2];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;

  v3 = v2;
  v77 = *a1;
  v80 = *(_OWORD *)(a1 + 1);
  v76 = a1[3];
  v6 = *((_BYTE *)a1 + 32);
  v75 = a1[5];
  v72 = *((unsigned __int8 *)a1 + 48);
  v74 = a1[7];
  v73 = a1[8];
  v7 = *((_BYTE *)a1 + 72);
  v8 = v6 & 1;
  v9 = sub_100008B04(&qword_10149D228);
  __chkstk_darwin(v9);
  v82 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = type metadata accessor for NearbyTransitLineSectionView(0);
  __chkstk_darwin(v81);
  v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100008B04(&qword_10149D1D0);
  v90 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v83 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_100008B04(&qword_10149D220);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v86 = (char *)&v72 - v17;
  v85 = sub_100008B04((uint64_t *)&unk_10149D230);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(_DWORD)v8)
  {
    if (qword_101490FF8 != -1)
      goto LABEL_16;
    goto LABEL_6;
  }
  if (qword_101491000 != -1)
    swift_once(&qword_101491000, sub_100161E24);
  v20 = *((_QWORD *)&xmmword_1014D4DF0 + 1);
  v93[0] = xmmword_1014D4DF0;
  v21 = sub_10006C008();
  swift_bridgeObjectRetain(v20);
  v22 = 0x73616C732E6E6970;
  for (i = 0xEE006C6C69662E68; ; i = 0xE800000000000000)
  {
    Label<>.init<A>(_:systemImage:)(v93, v22, i, &type metadata for String, v21);
    v25 = type metadata accessor for NearbyTransitGroupView(0);
    v26 = *(_QWORD *)(v3 + *(int *)(v25 + 20) + 32);
    v27 = (char *)(v3 + *(int *)(v25 + 36));
    v28 = *v27;
    v29 = *((_QWORD *)v27 + 1);
    LOBYTE(v93[0]) = v28;
    *((_QWORD *)&v93[0] + 1) = v29;
    swift_bridgeObjectRetain(v26);
    sub_100008B04(&qword_10149CD30);
    State.wrappedValue.getter(&v100);
    if ((v100 & 1) != 0)
      v30 = 2;
    else
      v30 = *(_QWORD *)(v26 + 16);
    v31 = sub_1001B0EA8(v30, v26);
    v35 = v31;
    v92 = a2;
    v91 = v13;
    if (v33 == v34 >> 1)
    {
      v36 = v72 & 1;
      swift_unknownObjectRelease(v31);
      *(_QWORD *)&v93[0] = v77;
      *(_OWORD *)((char *)v93 + 8) = v80;
      *((_QWORD *)&v93[1] + 1) = v76;
      *(_QWORD *)&v94 = v8;
      *((_QWORD *)&v94 + 1) = v75;
      *(_QWORD *)v95 = v36;
      *(_QWORD *)&v95[8] = v74;
      *(_QWORD *)&v95[16] = v73;
      v95[24] = v7 & 1;
      v96 = 0u;
      v97 = 0u;
      v98 = 0u;
      memset(v99, 0, 25);
      sub_100084A9C(a1);
      sub_100170848((uint64_t *)v93);
      v37 = 0;
      goto LABEL_15;
    }
    if (v33 < (uint64_t)(v34 >> 1))
      break;
    __break(1u);
LABEL_16:
    swift_once(&qword_101490FF8, sub_100161D80);
LABEL_6:
    v24 = *((_QWORD *)&xmmword_1014D4DE0 + 1);
    v93[0] = xmmword_1014D4DE0;
    v21 = sub_10006C008();
    swift_bridgeObjectRetain(v24);
    v22 = 0x6C6C69662E6E6970;
  }
  v38 = (_OWORD *)(v32 + 80 * v33);
  v93[0] = *v38;
  v39 = v38[1];
  v40 = v38[2];
  v41 = v38[3];
  *(_OWORD *)&v95[9] = *(_OWORD *)((char *)v38 + 57);
  v94 = v40;
  *(_OWORD *)v95 = v41;
  v93[1] = v39;
  sub_100084A9C(v93);
  swift_unknownObjectRelease(v35);
  sub_100084A9C(a1);
  v37 = sub_100194DB0(a1, (uint64_t)v93);
  sub_100084B00(v93);
  sub_100084B00(a1);
LABEL_15:
  v100 = 0x4048000000000000;
  sub_100084A9C(a1);
  v42 = sub_1000627EC();
  v43 = (uint64_t)v12;
  ScaledMetric.init(wrappedValue:)(&v100, &type metadata for CGFloat, v42);
  v44 = (int *)v81;
  v45 = (_QWORD *)(v43 + *(int *)(v81 + 24));
  v46 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v47 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  *v45 = EnvironmentObject.init()(v46, v47);
  v45[1] = v48;
  v49 = v43 + v44[7];
  v104 = 0;
  State.init(wrappedValue:)(&v100, &v104, &type metadata for Bool);
  v50 = (_OWORD *)(v43 + v44[5]);
  v51 = *((_OWORD *)a1 + 3);
  v50[2] = *((_OWORD *)a1 + 2);
  v50[3] = v51;
  *(_OWORD *)((char *)v50 + 57) = *(_OWORD *)((char *)a1 + 57);
  v52 = *((_OWORD *)a1 + 1);
  *v50 = *(_OWORD *)a1;
  v50[1] = v52;
  *(_BYTE *)(v43 + v44[8]) = v37 & 1;
  v104 = *(_QWORD *)(a1[2] + 16) > 3uLL;
  State.init(wrappedValue:)(&v100, &v104, &type metadata for Bool);
  v53 = swift_release();
  v54 = v101;
  *(_BYTE *)v49 = v100;
  *(_QWORD *)(v49 + 8) = v54;
  __chkstk_darwin(v53);
  LODWORD(v80) = v8 ^ 1;
  *((_BYTE *)&v72 - 32) = v8 ^ 1;
  v79 = v3;
  *(&v72 - 3) = v3;
  *(&v72 - 2) = (uint64_t)a1;
  v78 = v19;
  *(&v72 - 1) = (uint64_t)v19;
  v55 = sub_100008B04(&qword_10149D1E0);
  v56 = sub_100010D70(&qword_10149D1F0, &qword_10149D1E0, (const char *)&protocol conformance descriptor for Button<A>);
  v57 = (uint64_t)v82;
  ContextMenu.init(menuItems:)(sub_100170828, &v72 - 6, v55, v56);
  v58 = sub_100008B04(&qword_10149D240);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 0, 1, v58);
  v59 = sub_10000BC84(&qword_10149D1E8, type metadata accessor for NearbyTransitLineSectionView, (uint64_t)&unk_100E2FC20);
  v60 = v83;
  View.contextMenu<A>(_:)(v57, v44, v55, v59, v56);
  sub_100010CC4(v57, &qword_10149D228);
  v61 = sub_1000202F0(v43, type metadata accessor for NearbyTransitLineSectionView);
  v82 = (char *)&v72;
  __chkstk_darwin(v61);
  *((_BYTE *)&v72 - 32) = v80;
  *(&v72 - 3) = v79;
  *(&v72 - 2) = (uint64_t)a1;
  v62 = v78;
  *(&v72 - 1) = (uint64_t)v78;
  v63 = sub_100008B04(&qword_10149D1D8);
  v100 = (uint64_t)v44;
  v101 = v55;
  v102 = v59;
  v103 = v56;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v100, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(_:)>>, 1);
  v65 = sub_10017078C();
  v66 = v87;
  v67 = v91;
  View.swipeActions<A>(edge:allowsFullSwipe:content:)(0, 1, sub_100170838, &v72 - 6, v91, v63, OpaqueTypeConformance2, v65);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v60, v67);
  v68 = *(void (**)(char *, char *, uint64_t))(v88 + 32);
  v69 = v86;
  v70 = v89;
  v68(v86, v66, v89);
  v68(v92, v69, v70);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v62, v85);
}

uint64_t sub_100163724(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  _BYTE v23[16];
  uint64_t v24;

  v8 = type metadata accessor for NearbyTransitGroupView(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000202AC(a2, (uint64_t)v11, type metadata accessor for NearbyTransitGroupView);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 17) & ~v12;
  v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject(&unk_1011A6888, v14 + 73, v12 | 7);
  *(_BYTE *)(v15 + 16) = a1;
  sub_10003F29C((uint64_t)v11, v15 + v13, type metadata accessor for NearbyTransitGroupView);
  v16 = (_OWORD *)(v15 + v14);
  v17 = *(_OWORD *)(a3 + 48);
  v16[2] = *(_OWORD *)(a3 + 32);
  v16[3] = v17;
  *(_OWORD *)((char *)v16 + 57) = *(_OWORD *)(a3 + 57);
  v18 = *(_OWORD *)(a3 + 16);
  *v16 = *(_OWORD *)a3;
  v16[1] = v18;
  v24 = a4;
  sub_100084A9C((_QWORD *)a3);
  v19 = sub_100008B04((uint64_t *)&unk_10149D230);
  v20 = sub_100010D70(&qword_10149D250, (uint64_t *)&unk_10149D230, (const char *)&protocol conformance descriptor for Label<A, B>);
  return Button.init(action:label:)(sub_100170B88, v15, sub_100170C24, v23, v19, v20, v21);
}

uint64_t sub_100163884@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t KeyPath;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];
  uint64_t v41;
  _QWORD v42[4];

  v38 = a4;
  v39 = a5;
  v8 = type metadata accessor for NearbyTransitGroupView(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04(&qword_10149D208);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000202AC(a2, (uint64_t)v11, type metadata accessor for NearbyTransitGroupView);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = (v16 + 17) & ~v16;
  v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject(&unk_1011A6810, v18 + 73, v16 | 7);
  *(_BYTE *)(v19 + 16) = a1;
  sub_10003F29C((uint64_t)v11, v19 + v17, type metadata accessor for NearbyTransitGroupView);
  v20 = (_OWORD *)(v19 + v18);
  v21 = *(_OWORD *)(a3 + 48);
  v20[2] = *(_OWORD *)(a3 + 32);
  v20[3] = v21;
  *(_OWORD *)((char *)v20 + 57) = *(_OWORD *)(a3 + 57);
  v22 = *(_OWORD *)(a3 + 16);
  *v20 = *(_OWORD *)a3;
  v20[1] = v22;
  v41 = v38;
  sub_100084A9C((_QWORD *)a3);
  v23 = sub_100008B04(&qword_10149D248);
  v24 = sub_10000E5D4((uint64_t *)&unk_10149D230);
  v25 = type metadata accessor for IconOnlyLabelStyle(255);
  v26 = sub_100010D70(&qword_10149D250, (uint64_t *)&unk_10149D230, (const char *)&protocol conformance descriptor for Label<A, B>);
  v27 = sub_10000BC84((unint64_t *)&unk_10149D258, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  v42[0] = v24;
  v42[1] = v25;
  v42[2] = v26;
  v42[3] = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v42, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v30 = Button.init(action:label:)(sub_10017095C, v19, sub_100170978, v40, v23, OpaqueTypeConformance2, v29);
  v31 = static Color.yellow.getter(v30);
  KeyPath = swift_getKeyPath(&unk_100E2F960);
  v42[0] = v31;
  v33 = swift_retain();
  v34 = AnyShapeStyle.init<A>(_:)(v42, &type metadata for Color, &protocol witness table for Color, v33);
  v35 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v39, v15, v12);
  swift_release();
  v36 = (uint64_t *)(v35 + *(int *)(sub_100008B04(&qword_10149D1D8) + 36));
  *v36 = KeyPath;
  v36[1] = v34;
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

id sub_100163B04(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v14 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2 + *(int *)(type metadata accessor for NearbyTransitGroupView(0) + 28);
  v18 = *(void **)v17;
  if ((a1 & 1) != 0)
  {
    if (v18)
    {
      v19 = *(void **)(a3 + 24);
      v20 = v18;
      sub_1000366E8(v19);

      return objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", a4, 44, 0);
    }
  }
  else if (v18)
  {
    v22 = *(_QWORD *)(a3 + 24);
    v23 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v16, 1, 1, v23);
    v24 = swift_allocObject(&unk_1011A6838, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    v25 = (_QWORD *)swift_allocObject(a5, 48, 7);
    v25[2] = 0;
    v25[3] = 0;
    v25[4] = v24;
    v25[5] = v22;
    v26 = v18;
    swift_unknownObjectRetain(v22);
    sub_1001B0C08((uint64_t)v16, a6, (uint64_t)v25);

    swift_release();
    return objc_msgSend((id)objc_opt_self(GEOAPPortal), "captureUserAction:target:value:", a7, 44, 0);
  }
  v27 = *(_QWORD *)(v17 + 8);
  v28 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v29 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  result = (id)EnvironmentObject.error()(0, v27, v28, v29);
  __break(1u);
  return result;
}

uint64_t sub_100163D00()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = type metadata accessor for IconOnlyLabelStyle(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  IconOnlyLabelStyle.init()(v2);
  v5 = sub_100008B04((uint64_t *)&unk_10149D230);
  v6 = sub_100010D70(&qword_10149D250, (uint64_t *)&unk_10149D230, (const char *)&protocol conformance descriptor for Label<A, B>);
  v7 = sub_10000BC84((unint64_t *)&unk_10149D258, (uint64_t (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle, (uint64_t)&protocol conformance descriptor for IconOnlyLabelStyle);
  View.labelStyle<A>(_:)(v4, v5, v0, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_100163DF8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v2 = v1;
  v101 = a1;
  v3 = sub_100008B04(&qword_10149D078);
  __chkstk_darwin(v3);
  v95 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v94 = (char *)&v89 - v6;
  v7 = (int *)type metadata accessor for NearbyTransitGroupView(0);
  v89 = *((_QWORD *)v7 - 1);
  v8 = *(_QWORD *)(v89 + 64);
  __chkstk_darwin(v7);
  v91 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v90 = (uint64_t)&v89 - v10;
  v11 = sub_100008B04(&qword_10149D080);
  __chkstk_darwin(v11);
  v93 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v92 = (char *)&v89 - v14;
  v15 = sub_100008B04(&qword_10149D088);
  __chkstk_darwin(v15);
  v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100008B04(&qword_10149D090);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v99 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v89 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v89 - v25;
  sub_1001644F8(v2, (uint64_t)v17);
  v27 = sub_10002067C(&qword_10149D098, &qword_10149D088, sub_10017017C, (uint64_t)&protocol witness table for _PaddingLayout);
  Section<>.init(header:content:)(v17, CollectionPickerContaineeViewController.dataSource(_:didChangeSelectedCollections:), 0, v15, &type metadata for EmptyView, v27, &protocol witness table for EmptyView);
  v97 = v26;
  v98 = v19;
  v28 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v29 = v2;
  v100 = v18;
  v28(v26, v23, v18);
  v30 = *(_QWORD *)(v2 + v7[5] + 32);
  v31 = v2 + v7[9];
  v32 = *(_BYTE *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  LOBYTE(v102) = v32;
  v103 = v33;
  swift_bridgeObjectRetain(v30);
  sub_100008B04(&qword_10149CD30);
  State.wrappedValue.getter(&v106);
  if ((v106 & 1) != 0)
    v34 = 2;
  else
    v34 = *(_QWORD *)(v30 + 16);
  v35 = sub_1001B0EA8(v34, v30);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v42 = v2 + v7[8];
  v43 = *(_QWORD *)(v42 + 8);
  LOBYTE(v102) = *(_BYTE *)v42;
  v103 = v43;
  State.wrappedValue.getter(&v106);
  v96 = v35;
  if ((v106 & 1) != 0)
  {
    v44 = *(void (**)(void))(*(_QWORD *)(sub_100008B04(&qword_10149D128) - 8) + 56);
    v45 = (uint64_t)v92;
  }
  else
  {
    v102 = v35;
    v103 = v37;
    v104 = v39;
    v105 = v41;
    v46 = v90;
    sub_1000202AC(v29, v90, type metadata accessor for NearbyTransitGroupView);
    v47 = *(unsigned __int8 *)(v89 + 80);
    v48 = (v47 + 16) & ~v47;
    v49 = swift_allocObject(&unk_1011A67C0, v48 + v8, v47 | 7);
    sub_10003F29C(v46, v49 + v48, type metadata accessor for NearbyTransitGroupView);
    swift_unknownObjectRetain(v35);
    v50 = sub_100008B04(&qword_10149D100);
    v51 = v29;
    v52 = sub_100008B04(&qword_10149D108);
    v53 = sub_100010D70(&qword_10149D110, &qword_10149D100, (const char *)&protocol conformance descriptor for ArraySlice<A>);
    v54 = sub_100010D70(&qword_10149D118, &qword_10149D108, (const char *)&protocol conformance descriptor for ControlGroup<A>);
    v55 = sub_100170310();
    v56 = v92;
    v57 = v52;
    v29 = v51;
    ForEach<>.init(_:content:)(&v102, sub_1001702C4, v49, v50, &type metadata for String, v57, v53, v54, v55);
    v44 = *(void (**)(void))(*(_QWORD *)(sub_100008B04(&qword_10149D128) - 8) + 56);
    v45 = (uint64_t)v56;
  }
  v44();
  v58 = (uint64_t)v93;
  v59 = (uint64_t)v91;
  v60 = *(_QWORD *)(v42 + 8);
  LOBYTE(v102) = *(_BYTE *)v42;
  v103 = v60;
  State.wrappedValue.getter(&v106);
  v61 = v106;
  sub_1000202AC(v29, v59, type metadata accessor for NearbyTransitGroupView);
  if ((v61 & 1) != 0)
  {
    sub_1000202F0(v59, type metadata accessor for NearbyTransitGroupView);
    v63 = (uint64_t)v94;
    v62 = (uint64_t)v95;
LABEL_12:
    v77 = sub_100008B04(&qword_10149D130);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v63, 1, 1, v77);
    goto LABEL_13;
  }
  v64 = v59 + v7[9];
  v65 = *(_BYTE *)v64;
  v66 = *(_QWORD *)(v64 + 8);
  LOBYTE(v102) = v65;
  v103 = v66;
  State.wrappedValue.getter(&v106);
  v67 = v106;
  sub_1000202F0(v59, type metadata accessor for NearbyTransitGroupView);
  v63 = (uint64_t)v94;
  v62 = (uint64_t)v95;
  if (v67 != 1)
    goto LABEL_12;
  v68 = sub_100161ED4();
  if (!v68)
    goto LABEL_12;
  v69 = v68;
  __chkstk_darwin(v68);
  *(&v89 - 6) = v29;
  *(&v89 - 5) = v70;
  *(&v89 - 4) = v71;
  *(&v89 - 3) = v72;
  v88 = v73;
  v74 = sub_100008B04(&qword_10149D140);
  v75 = sub_100170380();
  ControlGroup.init(content:)(sub_100170354, &v89 - 8, v74, v75);
  swift_unknownObjectRelease(v69);
  v76 = sub_100008B04(&qword_10149D130);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v63, 0, 1, v76);
LABEL_13:
  v78 = v98;
  v79 = v99;
  v80 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
  v81 = v97;
  v82 = v100;
  v80(v99, v97, v100);
  sub_10000C1FC(v45, v58, &qword_10149D080);
  sub_10000C1FC(v63, v62, &qword_10149D078);
  v83 = v62;
  v84 = v101;
  v80(v101, v79, v82);
  v85 = sub_100008B04(&qword_10149D138);
  sub_10000C1FC(v58, (uint64_t)&v84[*(int *)(v85 + 48)], &qword_10149D080);
  sub_10000C1FC(v83, (uint64_t)&v84[*(int *)(v85 + 64)], &qword_10149D078);
  swift_unknownObjectRelease(v96);
  sub_100010CC4(v63, &qword_10149D078);
  sub_100010CC4(v45, &qword_10149D080);
  v86 = *(void (**)(char *, uint64_t))(v78 + 8);
  v86(v81, v82);
  sub_100010CC4(v83, &qword_10149D078);
  sub_100010CC4(v58, &qword_10149D080);
  return ((uint64_t (*)(char *, uint64_t))v86)(v79, v82);
}

uint64_t sub_1001644F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;

  v42 = a2;
  v3 = sub_100008B04(&qword_10149D0D8);
  __chkstk_darwin(v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149D0C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149D0B8);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100008B04(&qword_10149D0A8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = static HorizontalAlignment.leading.getter(v13);
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v16 = sub_100008B04(&qword_10149D278);
  sub_1001647CC(a1, (uint64_t)&v5[*(int *)(v16 + 44)]);
  sub_10000C1FC((uint64_t)v5, (uint64_t)v8, &qword_10149D0D8);
  v17 = &v8[*(int *)(v6 + 36)];
  v17[32] = 0;
  *(_OWORD *)v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  v18 = sub_100010CC4((uint64_t)v5, &qword_10149D0D8);
  v43 = static Color.clear.getter(v18);
  v19 = swift_retain();
  v20 = AnyView.init<A>(_:)(&v43, &type metadata for Color, &protocol witness table for Color, v19);
  sub_10000C1FC((uint64_t)v8, (uint64_t)v11, &qword_10149D0C8);
  swift_release();
  *(_QWORD *)&v11[*(int *)(v9 + 36)] = v20;
  v21 = sub_100010CC4((uint64_t)v8, &qword_10149D0C8);
  LOBYTE(v6) = static Edge.Set.top.getter(v21);
  v22 = type metadata accessor for NearbyTransitGroupView(0);
  v23 = EdgeInsets.init(_all:)(*(double *)(a1 + *(int *)(v22 + 24)));
  v25 = v24;
  v27 = v26;
  v29 = v28;
  sub_10000C1FC((uint64_t)v11, (uint64_t)v15, &qword_10149D0B8);
  v30 = &v15[*(int *)(v12 + 36)];
  *v30 = v6;
  *((double *)v30 + 1) = v23;
  *((_QWORD *)v30 + 2) = v25;
  *((_QWORD *)v30 + 3) = v27;
  *((_QWORD *)v30 + 4) = v29;
  v30[40] = 0;
  v31 = sub_100010CC4((uint64_t)v11, &qword_10149D0B8);
  LOBYTE(v6) = static Edge.Set.bottom.getter(v31);
  v32 = EdgeInsets.init(_all:)(4.0);
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v39 = v42;
  sub_10000C1FC((uint64_t)v15, v42, &qword_10149D0A8);
  v40 = v39 + *(int *)(sub_100008B04(&qword_10149D088) + 36);
  *(_BYTE *)v40 = v6;
  *(double *)(v40 + 8) = v32;
  *(_QWORD *)(v40 + 16) = v34;
  *(_QWORD *)(v40 + 24) = v36;
  *(_QWORD *)(v40 + 32) = v38;
  *(_BYTE *)(v40 + 40) = 0;
  return sub_100010CC4((uint64_t)v15, &qword_10149D0A8);
}

uint64_t sub_1001647CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int v84;
  _BOOL4 v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  _QWORD v102[2];
  double v103;
  uint64_t v104;
  unsigned __int8 v105;
  uint64_t v106[2];

  v100 = a2;
  v75 = type metadata accessor for BorderlessButtonStyle(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_100008B04((uint64_t *)&unk_10149D280);
  v79 = *(_QWORD *)(v80 - 8);
  __chkstk_darwin(v80);
  v77 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008B04(&qword_101499A58);
  __chkstk_darwin(v5);
  v78 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_100008B04(&qword_10149D290);
  v99 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v76 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_10149D298);
  __chkstk_darwin(v8);
  v81 = (uint64_t)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_100008B04(&qword_10149D2A0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v82 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100008B04(&qword_10149D2A8);
  __chkstk_darwin(v11);
  v98 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v94 = (char *)&v72 - v14;
  v93 = sub_100008B04((uint64_t *)&unk_10149D2B0);
  __chkstk_darwin(v93);
  v16 = (uint64_t *)((char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100008B04(&qword_10149C9A0);
  __chkstk_darwin(v17);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_100008B04(&qword_10149D2C0);
  __chkstk_darwin(v91);
  v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v101 = (char *)&v72 - v23;
  v24 = type metadata accessor for NearbyTransitGroupView(0);
  v25 = (uint64_t *)(a1 + *(int *)(v24 + 20));
  v26 = v25[1];
  v90 = *v25;
  v86 = v26;
  v27 = v25[3];
  v89 = v25[2];
  v28 = v25[4];
  v29 = v25[5];
  v88 = *((unsigned __int8 *)v25 + 48);
  v87 = v25[7];
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v26);
  sub_100161FA0((uint64_t)v106);
  v30 = v106[1];
  sub_100170D14(v106);
  v85 = v30 != 0;
  v31 = *(int *)(v24 + 32);
  v83 = a1;
  v32 = a1 + v31;
  v33 = *(_QWORD *)(v32 + 8);
  LOBYTE(v102[0]) = *(_BYTE *)v32;
  v102[1] = v33;
  v92 = sub_100008B04(&qword_10149CD30);
  State.projectedValue.getter(&v103);
  v34 = v103;
  v35 = v104;
  v84 = v105;
  v37 = type metadata accessor for Text.Case(0, v36);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v19, 1, 1, v37);
  KeyPath = swift_getKeyPath(&unk_100E2F998);
  sub_10000C1FC((uint64_t)v19, (uint64_t)v16 + *(int *)(v93 + 28), &qword_10149C9A0);
  *v16 = KeyPath;
  sub_10000C1FC((uint64_t)v16, (uint64_t)&v21[*(int *)(v91 + 36)], (uint64_t *)&unk_10149D2B0);
  v39 = v86;
  *(_QWORD *)v21 = v90;
  *((_QWORD *)v21 + 1) = v39;
  *((_QWORD *)v21 + 2) = v89;
  *((_QWORD *)v21 + 3) = v27;
  *((_QWORD *)v21 + 4) = v28;
  *((_QWORD *)v21 + 5) = v29;
  v21[48] = v88;
  *((_QWORD *)v21 + 7) = v87;
  v21[64] = v85;
  *((double *)v21 + 9) = v34;
  *((_QWORD *)v21 + 10) = v35;
  v21[88] = v84;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v29);
  v40 = (uint64_t)v16;
  v41 = (uint64_t)v101;
  sub_100010CC4(v40, (uint64_t *)&unk_10149D2B0);
  sub_100010CC4((uint64_t)v19, &qword_10149C9A0);
  swift_release();
  swift_release();
  v42 = v29;
  v43 = v95;
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v27);
  v44 = v39;
  v45 = (uint64_t)v94;
  swift_bridgeObjectRelease(v44);
  sub_1000207BC((uint64_t)v21, v41, &qword_10149D2C0);
  v46 = *(_QWORD *)(v32 + 8);
  LOBYTE(v103) = *(_BYTE *)v32;
  v104 = v46;
  State.wrappedValue.getter(v102);
  v47 = 1;
  if ((v102[0] & 1) == 0)
  {
    v48 = v81;
    sub_1001621E4(v81);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v48, 1, v97) == 1)
    {
      sub_100010CC4(v48, &qword_10149D298);
      v47 = 1;
    }
    else
    {
      v49 = v97;
      v50 = (*(uint64_t (**)(void))(v96 + 32))();
      v51 = v73;
      BorderlessButtonStyle.init()(v50);
      v52 = sub_100010D70(&qword_10149D2D0, &qword_10149D2A0, (const char *)&protocol conformance descriptor for Button<A>);
      v53 = sub_10000BC84(&qword_10149D170, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
      v54 = v77;
      v55 = v49;
      v56 = v75;
      View.buttonStyle<A>(_:)(v51, v55, v75, v52, v53);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v56);
      v57 = sub_100008B04(&qword_10149CF20);
      v58 = ScaledMetric.wrappedValue.getter(&v103, v57);
      v59 = v103;
      v60 = static Alignment.center.getter(v58);
      v61 = v78;
      v64 = sub_1000C7838(0, 1, 0.0, 1, INFINITY, 0, 0, 1, v78, v63, v59, 0, 0.0, 1, v60, v62);
      v65 = v54;
      v41 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v65, v80, v64);
      v66 = v76;
      sub_10000C1FC(v61, v76, &qword_101499A58);
      v67 = v66 + *(int *)(v43 + 36);
      *(_BYTE *)(v67 + 32) = 0;
      *(_OWORD *)v67 = 0u;
      *(_OWORD *)(v67 + 16) = 0u;
      sub_100010CC4(v61, &qword_101499A58);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v82, v97);
      sub_1000207BC(v66, v45, &qword_10149D290);
      v47 = 0;
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v45, v47, 1, v43);
  sub_10000C1FC(v41, (uint64_t)v21, &qword_10149D2C0);
  v68 = v98;
  sub_10000C1FC(v45, v98, &qword_10149D2A8);
  v69 = v100;
  sub_10000C1FC((uint64_t)v21, v100, &qword_10149D2C0);
  v70 = sub_100008B04(&qword_10149D2C8);
  sub_10000C1FC(v68, v69 + *(int *)(v70 + 48), &qword_10149D2A8);
  sub_100010CC4(v45, &qword_10149D2A8);
  sub_100010CC4(v41, &qword_10149D2C0);
  sub_100010CC4(v68, &qword_10149D2A8);
  return sub_100010CC4((uint64_t)v21, &qword_10149D2C0);
}

uint64_t sub_100165058(_OWORD *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[4];
  _OWORD v8[3];
  _OWORD v9[2];

  v2 = a1[3];
  v8[2] = a1[2];
  v9[0] = v2;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)a1 + 57);
  v3 = a1[1];
  v8[0] = *a1;
  v8[1] = v3;
  v7[2] = a2;
  v7[3] = v8;
  v4 = sub_100008B04(&qword_10149D1C0);
  v5 = sub_100170624();
  return ControlGroup.init(content:)(sub_10017061C, v7, v4, v5);
}

uint64_t sub_1001650CC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_100008B04(&qword_10149D220);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100162ED0(a1, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a2, v7, v4);
  v8 = a2 + *(int *)(sub_100008B04(&qword_10149D1C0) + 36);
  *(_OWORD *)v8 = xmmword_100E2F4E0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_BYTE *)(v8 + 32) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10016519C@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t OpaqueTypeConformance2;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[16];
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v43 = a1;
  v37 = type metadata accessor for InsetGroupedListStyle(0);
  v40 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_10149CE70);
  v35 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_100008B04(&qword_10149CE78);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04(&qword_10149CE80);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_100008B04(&qword_10149CE88);
  v42 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[1];
  v51 = *v1;
  v52 = v14;
  v53 = v1[2];
  v15 = sub_100008B04((uint64_t *)&unk_10149CE40);
  Binding.wrappedValue.getter(&v54, v15);
  v38 = v55;
  v16 = v56;
  v39 = v57;
  v45 = v56;
  v46 = v1;
  v47 = v54;
  v48 = v55;
  v49 = v56;
  v50 = v57;
  swift_bridgeObjectRetain(v56);
  v17 = sub_100008B04(&qword_10149CE90);
  v18 = sub_10002067C(&qword_10149CE98, &qword_10149CE90, (uint64_t (*)(void))sub_10016EE38, (uint64_t)&protocol witness table for _AppearanceActionModifier);
  List<>.init(content:)(sub_10016EE28, v44, v17, v18);
  v19 = swift_bridgeObjectRelease(v16);
  InsetGroupedListStyle.init()(v19);
  v20 = sub_100010D70(&qword_10149CEB8, &qword_10149CE70, (const char *)&protocol conformance descriptor for List<A, B>);
  v21 = v37;
  View.listStyle<A>(_:)(v3, v4, v37, v20, &protocol witness table for InsetGroupedListStyle);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v3, v21);
  v22 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v6, v4);
  v23 = static Color.clear.getter(v22);
  v25 = static Edge.Set.all.getter(v24);
  v26 = v34;
  v27 = v36;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v11, v8, v36);
  v28 = &v11[*(int *)(v9 + 36)];
  *(_QWORD *)v28 = v23;
  v28[8] = v25;
  v29 = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  *(_QWORD *)&v51 = static Color.clear.getter(v29);
  v30 = sub_10016EEC8();
  View.scrollContentBackground<A>(_:)(&v51, v9, &type metadata for Color, v30, &protocol witness table for Color);
  swift_release();
  sub_100010CC4((uint64_t)v11, &qword_10149CE80);
  *(_QWORD *)&v51 = v9;
  *((_QWORD *)&v51 + 1) = &type metadata for Color;
  *(_QWORD *)&v52 = v30;
  *((_QWORD *)&v52 + 1) = &protocol witness table for Color;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v51, &opaque type descriptor for <<opaque return type of View.scrollContentBackground<A>(_:)>>, 1);
  v32 = v41;
  View.accessibility(identifier:)(0xD000000000000015, 0x8000000100E2F5E0, v41, OpaqueTypeConformance2);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v38);
  swift_unknownObjectRelease(v39);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v13, v32);
}

uint64_t sub_100165594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (**v28)();
  uint64_t (*v29)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a5;
  v35 = a6;
  v32 = a3;
  v33 = a4;
  v10 = sub_100008B04(&qword_10149CEA8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = a1;
  v14 = swift_allocObject(&unk_1011A66F0, 24, 7);
  *(_QWORD *)(v14 + 16) = a1;
  swift_bridgeObjectRetain_n(a1, 2);
  v15 = sub_100008B04(&qword_10149CED8);
  v16 = type metadata accessor for NearbyTransitGroupView(0);
  v17 = sub_100010D70(&qword_10149CEE0, &qword_10149CED8, (const char *)&protocol conformance descriptor for [A]);
  v18 = sub_10000BC84(&qword_10149CEB0, type metadata accessor for NearbyTransitGroupView, (uint64_t)&unk_100E2F818);
  v19 = sub_10016EFD8();
  ForEach<>.init(_:content:)(&v36, sub_10016EFD0, v14, v15, &type metadata for String, v16, v17, v18, v19);
  v20 = swift_allocObject(&unk_1011A6718, 136, 7);
  v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v20 + 64) = v21;
  *(_OWORD *)(v20 + 80) = *(_OWORD *)(a2 + 64);
  v22 = *(_QWORD *)(a2 + 80);
  v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v20 + 32) = v23;
  v24 = v32;
  v25 = v33;
  *(_QWORD *)(v20 + 96) = v22;
  *(_QWORD *)(v20 + 104) = v24;
  v27 = v34;
  v26 = v35;
  *(_QWORD *)(v20 + 112) = v25;
  *(_QWORD *)(v20 + 120) = v27;
  *(_QWORD *)(v20 + 128) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(a7, v13, v10);
  v28 = (void (**)())(a7 + *(int *)(sub_100008B04(&qword_10149CE90) + 36));
  *v28 = sub_10016F090;
  v28[1] = (void (*)())v20;
  v28[2] = 0;
  v28[3] = 0;
  sub_10016F098((uint64_t *)a2);
  v29 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRetain(v27);
  swift_unknownObjectRetain(v26);
  return v29(v13, v10);
}

double sub_10016579C@<D0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  unint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _OWORD *v24;
  __int128 v25;
  double result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;
  _QWORD v37[2];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v4 = a1[1];
  v38 = *a1;
  v39 = v4;
  v5 = a1[3];
  v40 = a1[2];
  v41 = v5;
  if (*(_QWORD *)(a2 + 16))
  {
    v6 = *(_OWORD *)(a2 + 48);
    v28 = *(_OWORD *)(a2 + 32);
    v29 = v6;
    v7 = *(_OWORD *)(a2 + 80);
    v30 = *(_OWORD *)(a2 + 64);
    v31 = v7;
    sub_1000849FC(&v28);
    sub_1000849FC(&v38);
    v8 = sub_100197B6C((uint64_t *)&v38, (uint64_t)&v28);
    sub_100084A4C(&v28);
    sub_100084A4C(&v38);
    v9 = 0.0;
    if ((v8 & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    v10 = *((_QWORD *)a1 + 7);
    v11 = *((unsigned __int8 *)a1 + 48);
    v12 = *((_QWORD *)a1 + 1);
    *(_QWORD *)&v28 = *(_QWORD *)a1;
    *((_QWORD *)&v28 + 1) = v12;
    v13 = a1[2];
    v29 = a1[1];
    v30 = v13;
    *(_QWORD *)&v31 = v11;
    *((_QWORD *)&v31 + 1) = v10;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    sub_1000849FC(&v38);
    sub_10016F728((uint64_t *)&v28);
  }
  v9 = 18.0;
LABEL_6:
  v37[0] = 0x404E000000000000;
  sub_1000849FC(&v38);
  v14 = sub_1000627A8();
  ScaledMetric.init(wrappedValue:)(v37, &type metadata for Double, v14);
  v15 = (int *)type metadata accessor for NearbyTransitGroupView(0);
  v16 = (_QWORD *)(a3 + v15[7]);
  v17 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v18 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  *v16 = EnvironmentObject.init()(v17, v18);
  v16[1] = v19;
  v20 = a3 + v15[8];
  v36 = 0;
  State.init(wrappedValue:)(v37, &v36, &type metadata for Bool);
  v21 = v37[1];
  *(_BYTE *)v20 = v37[0];
  *(_QWORD *)(v20 + 8) = v21;
  v22 = a3 + v15[9];
  v36 = 0;
  State.init(wrappedValue:)(v37, &v36, &type metadata for Bool);
  v23 = *(_QWORD *)(v40 + 16);
  swift_release();
  *(_BYTE *)v22 = v23 > 2;
  *(_QWORD *)(v22 + 8) = 0;
  v24 = (_OWORD *)(a3 + v15[5]);
  v25 = v39;
  *v24 = v38;
  v24[1] = v25;
  result = *(double *)&v40;
  v27 = v41;
  v24[2] = v40;
  v24[3] = v27;
  *(double *)(a3 + v15[6]) = v9;
  return result;
}

uint64_t sub_100165980@<X0>(uint64_t a1@<X8>)
{
  return sub_10016519C(a1);
}

uint64_t sub_1001659C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;

  v62 = a2;
  v3 = sub_100008B04(&qword_10149CD88);
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  __chkstk_darwin(v3);
  v53 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_100008B04(&qword_10149CD90);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v52 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_10149CD98);
  __chkstk_darwin(v6);
  v61 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v56 = (uint64_t)&v50 - v9;
  v10 = sub_100008B04(&qword_10149CDA0);
  __chkstk_darwin(v10);
  v59 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - v13;
  v15 = a1[1];
  v63 = *a1;
  v64 = v15;
  v16 = sub_10006C008();
  swift_bridgeObjectRetain(v15);
  v51 = v16;
  v17 = Text.init<A>(_:)(&v63, &type metadata for String, v16);
  v19 = v18;
  v21 = v20;
  v23 = v22 & 1;
  v69 = a1[6];
  v63 = v69;
  swift_retain();
  v24 = Text.foregroundStyle<A>(_:)(&v63, v17, v19, v23, v21, &type metadata for Color, &protocol witness table for Color);
  v26 = v25;
  v28 = v27;
  v30 = v29 & 1;
  sub_10006B77C(v17, v19, v23);
  swift_bridgeObjectRelease(v21);
  sub_10016E94C(&v69);
  KeyPath = swift_getKeyPath(&unk_100E2F758);
  v63 = v24;
  v64 = v26;
  v65 = v30;
  v66 = v28;
  v67 = KeyPath;
  v32 = 1;
  v68 = 1;
  v33 = sub_100008B04(&qword_10149CDA8);
  v34 = sub_10016E9C0();
  v57 = v14;
  View.accessibility(identifier:)(0xD000000000000016, 0x8000000100E4D2A0, v33, v34);
  sub_10006B77C(v24, v26, v30);
  swift_release();
  swift_bridgeObjectRelease(v28);
  v36 = a1[2];
  v35 = a1[3];
  if (String.count.getter(v36, v35) < 1)
  {
    v43 = v56;
  }
  else
  {
    v63 = v36;
    v64 = v35;
    v38 = a1[4];
    v37 = a1[5];
    swift_bridgeObjectRetain(v35);
    swift_retain();
    v39 = v53;
    Button<>.init<A>(_:action:)(&v63, v38, v37, &type metadata for String, v51);
    v40 = sub_100010D70(&qword_10149CDD0, &qword_10149CD88, (const char *)&protocol conformance descriptor for Button<A>);
    v41 = (uint64_t)v52;
    v42 = v55;
    View.accessibility(identifier:)(0xD00000000000001ELL, 0x8000000100E4D2C0, v55, v40);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v42);
    v43 = v56;
    sub_1000207BC(v41, v56, &qword_10149CD90);
    v32 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v43, v32, 1, v60);
  v44 = (uint64_t)v57;
  v45 = v59;
  sub_10000C1FC((uint64_t)v57, v59, &qword_10149CDA0);
  v46 = v61;
  sub_10000C1FC(v43, v61, &qword_10149CD98);
  v47 = v62;
  sub_10000C1FC(v45, v62, &qword_10149CDA0);
  v48 = sub_100008B04(&qword_10149CDC8);
  sub_10000C1FC(v46, v47 + *(int *)(v48 + 48), &qword_10149CD98);
  sub_100010CC4(v43, &qword_10149CD98);
  sub_100010CC4(v44, &qword_10149CDA0);
  sub_100010CC4(v46, &qword_10149CD98);
  return sub_100010CC4(v45, &qword_10149CDA0);
}

uint64_t sub_100165E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _OWORD v13[3];
  uint64_t v14;

  v10 = *(_OWORD *)(v8 + 16);
  v13[0] = *(_OWORD *)v8;
  v13[1] = v10;
  v13[2] = *(_OWORD *)(v8 + 32);
  v14 = *(_QWORD *)(v8 + 48);
  *(_QWORD *)a8 = static HorizontalAlignment.center.getter(a1, a2, a3, a4, a5, a6, a7);
  *(_QWORD *)(a8 + 8) = 0x4028000000000000;
  *(_BYTE *)(a8 + 16) = 0;
  v11 = sub_100008B04(&qword_10149CD80);
  return sub_1001659C8((uint64_t *)v13, a8 + *(int *)(v11 + 44));
}

void sub_100165E78(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;

  v35 = a1;
  v20 = sub_100008B04(&qword_10149CC40);
  v19[1] = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v19[0] = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100008B04(&qword_10149CC48);
  __chkstk_darwin(v3);
  v26 = sub_100008B04(&qword_10149CC50);
  __chkstk_darwin(v26);
  __chkstk_darwin(v4);
  v21 = (char *)v19 - v5;
  v24 = sub_100008B04(&qword_10149CC58);
  __chkstk_darwin(v24);
  v25 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100008B04(&qword_10149CC60);
  __chkstk_darwin(v34);
  v27 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100008B04(&qword_10149CC68);
  __chkstk_darwin(v8);
  v29 = sub_100008B04(&qword_10149CC70);
  __chkstk_darwin(v29);
  v23 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100008B04(&qword_10149CC78);
  __chkstk_darwin(v22);
  v31 = sub_100008B04(&qword_10149CC80);
  __chkstk_darwin(v31);
  v33 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100008B04(&qword_10149CC88);
  __chkstk_darwin(v28);
  v32 = sub_100008B04((uint64_t *)&unk_10149CC90);
  __chkstk_darwin(v32);
  v30 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v1 + 56);
  if (v12)
  {
    KeyPath = swift_getKeyPath(&unk_100E2F568);
    v14 = swift_getKeyPath(&unk_100E2F590);
    v15 = v12;
    static Published.subscript.getter(&v36, v15, KeyPath, v14);

    swift_release();
    swift_release();
    __asm { BR              X10 }
  }
  v16 = *(_QWORD *)(v1 + 64);
  v17 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v18 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  EnvironmentObject.error()(0, v16, v17, v18);
  __break(1u);
  JUMPOUT(0x100166FF8);
}

uint64_t sub_100167014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  Swift::String v19;
  Swift::String v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t, __n128);
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  __n128 v46;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  Swift::String v54;

  v52 = a1;
  v1 = type metadata accessor for CircularProgressViewStyle(0);
  v51 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100008B04(&qword_10149CCF8);
  v50 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100008B04(&qword_10149CD00);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v48 - v13;
  v15 = ProgressView<>.init<>()(v12);
  CircularProgressViewStyle.init()(v15);
  v16 = sub_100010D70(&qword_10149CD08, &qword_10149CCF8, (const char *)&protocol conformance descriptor for ProgressView<A, B>);
  v17 = sub_10000BC84((unint64_t *)&unk_10149CD10, (uint64_t (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle, (uint64_t)&protocol conformance descriptor for CircularProgressViewStyle);
  View.progressViewStyle<A>(_:)(v3, v4, v1, v16, v17);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v4);
  v49 = v14;
  v50 = v8;
  v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v51 = v7;
  v18(v14, v10, v7);
  if (qword_101490ED0 != -1)
    swift_once(&qword_101490ED0, sub_10011833C);
  v54._object = (void *)0x8000000100E4D250;
  v19._object = (void *)0x8000000100E4D230;
  v19._countAndFlagsBits = 0x100000000000001CLL;
  v20._countAndFlagsBits = 0x20676E6964616F4CLL;
  v20._object = (void *)0xAB00000000A680E2;
  v54._countAndFlagsBits = 0xD000000000000021;
  v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v20, v54);
  v21 = sub_10006C008();
  v22 = Text.init<A>(_:)(&v53, &type metadata for String, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v53._countAndFlagsBits = Color.init(uiColor:)(v29);
  v30 = Text.foregroundStyle<A>(_:)(&v53, v22, v24, v28, v26, &type metadata for Color, &protocol witness table for Color);
  v32 = v31;
  v34 = v33;
  v36 = v35 & 1;
  sub_10006B77C(v22, v24, v28);
  swift_release();
  v37 = swift_bridgeObjectRelease(v26);
  v39 = v50;
  v38 = v51;
  v40 = *(void (**)(char *, char *, uint64_t, __n128))(v50 + 16);
  v41 = v10;
  v42 = v49;
  v40(v10, v49, v51, v37);
  v43 = v52;
  ((void (*)(uint64_t, char *, uint64_t))v40)(v52, v41, v38);
  v44 = v43 + *(int *)(sub_100008B04((uint64_t *)&unk_10149CD20) + 48);
  *(_QWORD *)v44 = v30;
  *(_QWORD *)(v44 + 8) = v32;
  *(_BYTE *)(v44 + 16) = v36;
  *(_QWORD *)(v44 + 24) = v34;
  sub_10006BB40(v30, v32, v36);
  v45 = *(void (**)(char *, uint64_t))(v39 + 8);
  swift_bridgeObjectRetain(v34);
  v45(v42, v38);
  sub_10006B77C(v30, v32, v36);
  v46 = swift_bridgeObjectRelease(v34);
  return ((uint64_t (*)(char *, uint64_t, __n128))v45)(v41, v38, v46);
}

uint64_t sub_1001673C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[5];
  _BYTE v9[24];
  _BYTE v10[24];
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = v1 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate, v9, 0, 0);
    sub_10000C1FC(v2, (uint64_t)v10, (uint64_t *)&unk_1014940B0);
    if (v11)
    {
      sub_100084C44((uint64_t)v10, (uint64_t)v8);
      sub_100010CC4((uint64_t)v10, (uint64_t *)&unk_1014940B0);
      v3 = *(void **)(*sub_10000BE88(v8, v8[3]) + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView);
      if (v3)
        objc_msgSend(v3, "setUserTrackingMode:animated:", 1, 1);
      return sub_10000BEAC(v8);
    }
    else
    {
      return sub_100010CC4((uint64_t)v10, (uint64_t *)&unk_1014940B0);
    }
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 64);
    v6 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v7 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    result = EnvironmentObject.error()(0, v5, v6, v7);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001674E0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t KeyPath;
  uint64_t v11;
  id v12;
  unint64_t v13;
  __int128 v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  char v26;
  double v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _QWORD *v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  char v75;
  _BYTE v76[7];
  char v77;
  _BYTE v78[7];
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  _BYTE v85[7];
  __int128 v86;
  __int128 v87;
  uint64_t v88;

  v4 = sub_100008B04(&qword_10149CD40);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  v8 = (char *)&v57 - v7;
  v9 = (void *)*((_QWORD *)a1 + 7);
  if (v9)
  {
    v62 = a2;
    v63 = v6;
    KeyPath = swift_getKeyPath(&unk_100E2F5B0);
    v11 = swift_getKeyPath(&unk_100E2F5D8);
    v12 = v9;
    static Published.subscript.getter(&v65, v12, KeyPath, v11);

    swift_release();
    swift_release();
    v13 = v65[2];
    swift_bridgeObjectRelease(v65);
    v64 = v8;
    if (v13 <= 1)
    {
      v36 = sub_100008B04(&qword_10149CD48);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 1, 1, v36);
    }
    else
    {
      v14 = a1[1];
      v86 = *a1;
      v87 = v14;
      v88 = *((_QWORD *)a1 + 4);
      sub_100008B04(&qword_10149CD38);
      State.projectedValue.getter(&v65);
      v15 = v65;
      v61 = v65;
      v59 = v66;
      v60 = v67;
      v16 = v68;
      v57 = v68;
      v17 = v70;
      v58 = v69;
      v86 = *(__int128 *)((char *)a1 + 40);
      sub_100008B04(&qword_10149CD30);
      State.projectedValue.getter(&v65);
      v18 = v65;
      v19 = v66;
      v20 = (char)v67;
      v21 = type metadata accessor for NearbyTransitDeparturesProvider(0);
      v22 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
      v23 = (_QWORD *)EnvironmentObject.init()(v21, v22);
      v25 = v24;
      v26 = static Edge.Set.bottom.getter(v23);
      v27 = EdgeInsets.init(_all:)(16.0);
      v84 = 0;
      v65 = v23;
      v66 = v25;
      v67 = v15;
      v68 = v59;
      v69 = v60;
      v70 = v16;
      v28 = v58;
      v71 = v58;
      v72 = v17;
      v73 = v18;
      v74 = v19;
      v75 = v20;
      *(_DWORD *)v76 = v86;
      *(_DWORD *)&v76[3] = *(_DWORD *)((char *)&v86 + 3);
      v77 = v26;
      *(_DWORD *)&v78[3] = *(_DWORD *)&v85[3];
      *(_DWORD *)v78 = *(_DWORD *)v85;
      v79 = v27;
      v80 = v29;
      v81 = v30;
      v82 = v31;
      v83 = 0;
      v32 = sub_100008B04(&qword_10149CD58);
      v33 = sub_10002067C(&qword_10149CD60, &qword_10149CD58, (uint64_t (*)(void))sub_10016DF58, (uint64_t)&protocol witness table for _PaddingLayout);
      v34 = (uint64_t)v64;
      View.accessibility(identifier:)(0xD00000000000001DLL, 0x8000000100E4D280, v32, v33);
      swift_release();
      swift_bridgeObjectRelease(v28);
      swift_bridgeObjectRelease(v57);
      swift_release();

      v8 = (char *)v34;
      swift_release();
      swift_unknownObjectRelease(v17);
      swift_release();
      v35 = sub_100008B04(&qword_10149CD48);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
    }
    v37 = a1[1];
    v86 = *a1;
    v87 = v37;
    v88 = *((_QWORD *)a1 + 4);
    sub_100008B04(&qword_10149CD38);
    State.projectedValue.getter(&v65);
    v60 = v65;
    v38 = v66;
    v61 = v67;
    v39 = v68;
    v40 = v70;
    v59 = v69;
    v86 = *(__int128 *)((char *)a1 + 40);
    sub_100008B04(&qword_10149CD30);
    State.projectedValue.getter(&v65);
    v41 = v65;
    v42 = v66;
    LODWORD(v58) = v67;
    v43 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v44 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    v45 = (void *)EnvironmentObject.init()(v43, v44);
    v47 = v46;
    v48 = v63;
    sub_10000C1FC((uint64_t)v8, v63, &qword_10149CD40);
    v49 = v62;
    sub_10000C1FC(v48, v62, &qword_10149CD40);
    v50 = v49 + *(int *)(sub_100008B04(&qword_10149CD50) + 48);
    *(_QWORD *)v50 = v60;
    *(_QWORD *)(v50 + 8) = v38;
    *(_QWORD *)(v50 + 16) = v61;
    *(_QWORD *)(v50 + 24) = v39;
    v51 = v59;
    *(_QWORD *)(v50 + 32) = v59;
    *(_QWORD *)(v50 + 40) = v40;
    *(_QWORD *)(v50 + 48) = v41;
    *(_QWORD *)(v50 + 56) = v42;
    *(_BYTE *)(v50 + 64) = (_BYTE)v58;
    *(_QWORD *)(v50 + 72) = v45;
    *(_QWORD *)(v50 + 80) = v47;
    v52 = v45;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v51);
    swift_unknownObjectRetain(v40);
    swift_retain();
    swift_retain();
    sub_100010CC4((uint64_t)v64, &qword_10149CD40);

    swift_release();
    swift_release();
    swift_unknownObjectRelease(v40);
    swift_bridgeObjectRelease(v51);
    swift_bridgeObjectRelease(v39);
    swift_release();
    swift_release();
    return sub_100010CC4(v48, &qword_10149CD40);
  }
  else
  {
    v54 = *((_QWORD *)a1 + 8);
    v55 = type metadata accessor for NearbyTransitDeparturesProvider(0);
    v56 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
    result = EnvironmentObject.error()(0, v54, v55, v56);
    __break(1u);
  }
  return result;
}

_QWORD *sub_100167ABC(_QWORD **a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  _QWORD *result;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  __n128 v24;
  os_log_type_t v25;
  uint8_t *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;

  v3 = *a1;
  v49 = *(_OWORD *)(a2 + 40);
  v46 = *(_OWORD *)(a2 + 40);
  v4 = sub_100008B04(&qword_10149CD30);
  State.wrappedValue.getter(&v39);
  if (v39 == 1)
  {
    sub_100167EE4(a2);
    v5 = sub_100168588((uint64_t)v3);
    v7 = v6;
    result = sub_10016DEEC((_QWORD *)a2);
    if ((v7 & 1) == 0)
    {
      if ((v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v5 < v3[2])
      {
        v9 = &v3[4 * v5];
        v10 = v9[4];
        v11 = v9[5];
        v13 = v9[6];
        v12 = v9[7];
        v14 = *(_OWORD *)(a2 + 16);
        v46 = *(_OWORD *)a2;
        v47 = v14;
        v48 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)&v39 = v10;
        *((_QWORD *)&v39 + 1) = v11;
        *(_QWORD *)&v40 = v13;
        *((_QWORD *)&v40 + 1) = v12;
        swift_unknownObjectRetain(v12);
        swift_bridgeObjectRetain(v11);
        swift_bridgeObjectRetain(v13);
        goto LABEL_8;
      }
      __break(1u);
      return result;
    }
  }
  if (!v3[2])
  {
    if (qword_101490E90 != -1)
      swift_once(&qword_101490E90, sub_100114734);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_10000E918(v21, (uint64_t)qword_1014D4AC0);
    v23 = Logger.logObject.getter(v22);
    v25 = static os_log_type_t.fault.getter(v24);
    if (os_log_type_enabled(v23, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v25, "Provider has a loaded state but no categories", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

    goto LABEL_14;
  }
  v16 = v3[4];
  v15 = v3[5];
  v17 = v3[6];
  v18 = v3[7];
  v46 = v49;
  LOBYTE(v39) = 0;
  swift_unknownObjectRetain(v18);
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v17);
  State.wrappedValue.setter(&v39, v4);
  v19 = *(_OWORD *)(a2 + 16);
  v46 = *(_OWORD *)a2;
  v47 = v19;
  v48 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)&v39 = v16;
  *((_QWORD *)&v39 + 1) = v15;
  *(_QWORD *)&v40 = v17;
  *((_QWORD *)&v40 + 1) = v18;
LABEL_8:
  v20 = sub_100008B04(&qword_10149CD38);
  State.wrappedValue.setter(&v39, v20);
LABEL_14:
  v27 = *(_OWORD *)(a2 + 16);
  v46 = *(_OWORD *)a2;
  v47 = v27;
  v48 = *(_QWORD *)(a2 + 32);
  v28 = *(_OWORD *)(a2 + 16);
  v39 = *(_OWORD *)a2;
  v40 = v28;
  v41 = *(_QWORD *)(a2 + 32);
  v29 = sub_100008B04(&qword_10149CD38);
  State.wrappedValue.getter(&v42);
  v30 = v43;
  v31 = v44;
  v32 = v45;
  sub_1001686E8(v42, v43, v44, (uint64_t)v3);
  v34 = v33;
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v30);
  result = (_QWORD *)swift_unknownObjectRelease(v32);
  if ((v34 & 1) == 0)
  {
    if (v3[2])
    {
      v35 = v3[4];
      v36 = v3[5];
      v38 = v3[6];
      v37 = v3[7];
      v39 = v46;
      v40 = v47;
      v41 = v48;
      v42 = v35;
      v43 = v36;
      v44 = v38;
      v45 = v37;
      swift_unknownObjectRetain(v37);
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRetain(v38);
      return (_QWORD *)State.wrappedValue.setter(&v42, v29);
    }
  }
  return result;
}

void sub_100167DA8(uint64_t a1@<X8>)
{
  sub_100165E78(a1);
}

uint64_t sub_100167DE8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E2F568);
  v5 = swift_getKeyPath(&unk_100E2F590);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100167E68(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E2F568);
  v5 = swift_getKeyPath(&unk_100E2F590);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

_QWORD *sub_100167EDC(_QWORD **a1)
{
  uint64_t v1;

  return sub_100167ABC(a1, v1 + 16);
}

uint64_t sub_100167EE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_unknownObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

unint64_t sub_100167F4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CCB8;
  if (!qword_10149CCB8)
  {
    v1 = sub_10000E5D4(&qword_10149CCB0);
    v2[0] = sub_100167FB0();
    v2[1] = v2[0];
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CCB8);
  }
  return result;
}

unint64_t sub_100167FB0()
{
  unint64_t result;

  result = qword_10149CCC0;
  if (!qword_10149CCC0)
  {
    result = swift_getWitnessTable(byte_100E2F708, &type metadata for NearbyTransitErrorView);
    atomic_store(result, (unint64_t *)&qword_10149CCC0);
  }
  return result;
}

uint64_t sub_100167FF4()
{
  return sub_1000D3A50(&qword_10149CCD0, (uint64_t *)&unk_10149CC90, (uint64_t (*)(void))sub_100167F4C, (uint64_t (*)(void))sub_100168018);
}

unint64_t sub_100168018()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CCD8;
  if (!qword_10149CCD8)
  {
    v1 = sub_10000E5D4(&qword_10149CC70);
    v2[0] = sub_100010D70(&qword_10149CCE0, &qword_10149CC78, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = sub_100167FB0();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CCD8);
  }
  return result;
}

unint64_t sub_10016809C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CCE8;
  if (!qword_10149CCE8)
  {
    v1 = sub_10000E5D4(&qword_10149CC60);
    v2[0] = sub_100167F4C();
    v2[1] = sub_100010D70(&qword_10149CCC8, &qword_10149CC50, (const char *)&protocol conformance descriptor for SubscriptionView<A, B>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CCE8);
  }
  return result;
}

uint64_t sub_100168124()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));

  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100168170()
{
  uint64_t v0;

  return sub_1001673C4(v0 + 16);
}

uint64_t sub_100168178@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E2F5B0);
  v5 = swift_getKeyPath(&unk_100E2F5D8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001681F4(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E2F5B0);
  v5 = swift_getKeyPath(&unk_100E2F5D8);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100168268()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100168288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10016829C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10016829C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = a5(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_100168318@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100168340(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

void sub_100168364(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = _swiftEmptyArrayStorage;
  v26 = *(_QWORD *)(a1 + 16);
  if (v26)
  {
    v2 = swift_bridgeObjectRetain(a1);
    v3 = 0;
    v4 = 0;
    v5 = &_swiftEmptyArrayStorage[4];
    v6 = (_QWORD *)(v2 + 56);
    v25 = v2;
    v7 = _swiftEmptyArrayStorage;
    while (1)
    {
      v8 = *(v6 - 3);
      v9 = *(v6 - 2);
      v10 = *(v6 - 1);
      v11 = *v6;
      if (v3)
      {
        swift_unknownObjectRetain(*v6);
        swift_bridgeObjectRetain(v9);
        swift_bridgeObjectRetain(v10);
        v1 = v7;
        v12 = __OFSUB__(v3--, 1);
        if (v12)
          goto LABEL_29;
      }
      else
      {
        v13 = v7[3];
        if ((uint64_t)((v13 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_30;
        v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
        if (v14 <= 1)
          v15 = 1;
        else
          v15 = v14;
        v16 = sub_100008B04(&qword_10149CE68);
        v1 = (_QWORD *)swift_allocObject(v16, 40 * v15 + 32, 7);
        v17 = (uint64_t)(j__malloc_size(v1) - 32) / 40;
        v1[2] = v15;
        v1[3] = 2 * v17;
        v18 = v1 + 4;
        v19 = v7[3] >> 1;
        v5 = &v1[5 * v19 + 4];
        v20 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        if (v7[2])
        {
          v21 = v1 < v7 || v18 >= &v7[5 * v19 + 4];
          if (!v21 && v1 == v7)
          {
            swift_unknownObjectRetain(v11);
            swift_bridgeObjectRetain(v9);
            swift_bridgeObjectRetain(v10);
          }
          else
          {
            memmove(v18, v7 + 4, 40 * v19);
            swift_bridgeObjectRetain(v9);
            swift_bridgeObjectRetain(v10);
            swift_unknownObjectRetain(v11);
          }
          v7[2] = 0;
        }
        else
        {
          swift_unknownObjectRetain(v11);
          swift_bridgeObjectRetain(v9);
          swift_bridgeObjectRetain(v10);
        }
        swift_release();
        v12 = __OFSUB__(v20, 1);
        v3 = v20 - 1;
        if (v12)
        {
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
          return;
        }
      }
      v6 += 4;
      *v5 = v4;
      v5[1] = v8;
      v5[2] = v9;
      v5[3] = v10;
      v5[4] = v11;
      v5 += 5;
      v7 = v1;
      if (v26 == ++v4)
      {
        swift_bridgeObjectRelease(v25);
        goto LABEL_25;
      }
    }
  }
  v3 = 0;
LABEL_25:
  v22 = v1[3];
  if (v22 >= 2)
  {
    v23 = v22 >> 1;
    v12 = __OFSUB__(v23, v3);
    v24 = v23 - v3;
    if (v12)
      goto LABEL_31;
    v1[2] = v24;
  }
}

uint64_t sub_100168588(uint64_t a1)
{
  uint64_t v1;
  _QWORD *i;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[4];
  uint64_t v12;

  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return 0;
  v1 = 0;
  for (i = (_QWORD *)(a1 + 56); ; i += 4)
  {
    v4 = *(i - 3);
    v3 = *(i - 2);
    v5 = *(i - 1);
    v6 = *i;
    swift_unknownObjectRetain(*i);
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v5);
    sub_100008B04(&qword_10149CD38);
    State.wrappedValue.getter(v11);
    v7 = v11[0];
    v8 = v11[1];
    swift_bridgeObjectRelease(v11[2]);
    swift_unknownObjectRelease(v11[3]);
    if (v4 == v7 && v3 == v8)
      break;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v3, v7, v8, 0);
    swift_unknownObjectRelease(v6);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v8);
    if ((v9 & 1) != 0)
      return v1;
    if (v12 == ++v1)
      return 0;
  }
  swift_unknownObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease_n(v3, 2);
  return v1;
}

void sub_1001686E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  char v30;
  _QWORD *v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  char v94;
  BOOL v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  BOOL v102;
  int v103;
  BOOL v104;
  char *v105;
  id v106;
  void *v107;
  int v108;
  char *v109;
  void *v110;
  void *v111;
  uint64_t v112;
  void *v113;
  void *v114;
  unsigned __int8 v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  BOOL v121;
  char v122;
  BOOL v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  id v134;
  char *v135;
  BOOL v136;
  int v137;
  BOOL v138;
  char *v139;
  id v140;
  char *v141;
  int v142;
  void *v143;
  uint64_t v144;
  void *v145;
  void *v146;
  unsigned __int8 v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  char *v151;
  char *v152;
  BOOL v153;
  int v154;
  BOOL v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  void *v160;
  unsigned int v161;
  unsigned __int8 v162;
  char *v163;
  void *v164;
  void *v165;
  char *v166;
  BOOL v167;
  char v168;
  BOOL v169;
  uint64_t v170;
  void *v171;
  uint64_t v172;
  id v173;
  char *v174;
  Block_layout *v175;
  void *v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  id v180;
  Block_layout *v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  id v185;
  Block_layout *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  id v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  BOOL v196;
  char v197;
  BOOL v198;
  unsigned int v199;
  unsigned int v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  BOOL v204;
  int v205;
  BOOL v206;
  int v207;
  char *v208;
  void *v209;
  void *v210;
  uint64_t v211;
  void *v212;
  void *v213;
  unsigned __int8 v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  BOOL v219;
  char v220;
  BOOL v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  id v230;
  char *v231;
  BOOL v232;
  int v233;
  BOOL v234;
  char *v235;
  id v236;
  void *v237;
  int v238;
  void *v239;
  uint64_t v240;
  void *v241;
  void *v242;
  unsigned __int8 v243;
  void *v244;
  char *v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  id v249;
  char *v250;
  unsigned int v251;
  unsigned __int8 v252;
  BOOL v253;
  int v254;
  BOOL v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  id v259;
  void *v260;
  char *v261;
  void *v262;
  void *v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  BOOL v271;
  char v272;
  BOOL v273;
  unsigned int v274;
  unsigned int v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  char *v280;
  BOOL v281;
  int v282;
  BOOL v283;
  void *v284;
  id v285;
  uint64_t v286;
  void *v287;
  uint64_t v288;
  void *v289;
  void *v290;
  unsigned __int8 v291;
  void *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  BOOL v297;
  char v298;
  BOOL v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  char *v309;
  BOOL v310;
  int v311;
  BOOL v312;
  char *v313;
  id v314;
  char *v315;
  int v316;
  void *v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  void *v321;
  char *v322;
  void *v323;
  unsigned __int8 v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  id v329;
  char *v330;
  BOOL v331;
  int v332;
  BOOL v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  id v337;
  void *v338;
  unsigned int v339;
  char *v340;
  unsigned int v341;
  char *v342;
  void *v343;
  void *v344;
  void *v345;
  BOOL v346;
  char v347;
  BOOL v348;
  uint64_t v349;
  uint64_t v350;
  id v351;
  Block_layout *v352;
  uint64_t v353;
  uint64_t v354;
  id v355;
  Block_layout *v356;
  uint64_t v357;
  uint64_t v358;
  id v359;
  id v360;
  Block_layout *v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  id v365;
  id v366;
  BOOL v367;
  char v368;
  BOOL v369;
  id v370;
  id v371;
  id v372;
  id v373;
  uint64_t v374;
  uint64_t v375;
  void *n;
  NSString *v377;
  void *v378;
  BOOL v379;
  char v380;
  BOOL v381;
  void *v382;
  id v383;
  id v384;
  id v385;
  id v386;
  uint64_t v387;
  uint64_t v388;
  void *ii;
  NSString *v390;
  void *v391;
  BOOL v392;
  char v393;
  BOOL v394;
  id v395;
  id v396;
  id v397;
  id v398;
  uint64_t v399;
  uint64_t v400;
  void *jj;
  GEOServerFormatToken *v402;
  void *v403;
  char *v404;
  BOOL v405;
  char v406;
  BOOL v407;
  id v408;
  id v409;
  id v410;
  uint64_t v411;
  uint64_t v412;
  void *j;
  NSString *v414;
  char *v415;
  void *v416;
  BOOL v417;
  char v418;
  BOOL v419;
  uint64_t v420;
  void *v421;
  uint64_t v422;
  id v423;
  char *v424;
  Block_layout *v425;
  void *v426;
  uint64_t v427;
  uint64_t v428;
  id v429;
  id v430;
  Block_layout *v431;
  uint64_t v432;
  uint64_t v433;
  id v434;
  id v435;
  Block_layout *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  id v440;
  id v441;
  char *v442;
  BOOL v443;
  char v444;
  BOOL v445;
  id v446;
  id v447;
  id v448;
  id v449;
  uint64_t v450;
  uint64_t v451;
  void *k;
  NSString *v453;
  void *v454;
  void *v455;
  BOOL v456;
  char v457;
  BOOL v458;
  id v459;
  uint64_t v460;
  id v461;
  id v462;
  id v463;
  uint64_t v464;
  uint64_t v465;
  void *m;
  GEOServerFormatToken *v467;
  void *v468;
  BOOL v469;
  char v470;
  BOOL v471;
  id v472;
  id v473;
  id v474;
  uint64_t v475;
  uint64_t v476;
  void *kk;
  NSString *v478;
  char *v479;
  void *v480;
  char *v481;
  BOOL v482;
  char v483;
  BOOL v484;
  id v485;
  id v486;
  id v487;
  id v488;
  uint64_t v489;
  uint64_t v490;
  void *mm;
  NSString *v492;
  void *v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  void *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  BOOL v502;
  char v503;
  BOOL v504;
  id v505;
  uint64_t v506;
  id v507;
  id v508;
  id v509;
  uint64_t v510;
  uint64_t v511;
  void *nn;
  GEOServerFormatToken *v513;
  void *v514;
  unint64_t v515;
  uint64_t v516;
  unint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  unint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  unint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  id v532;
  id v533;
  void *v534;
  BOOL v535;
  char v536;
  BOOL v537;
  id v538;
  uint64_t v539;
  uint64_t v540;
  id v541;
  id v542;
  unsigned int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  char *v547;
  id v548;
  unsigned int v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  id v553;
  id v554;
  unsigned int v555;
  uint64_t v556;
  uint64_t v557;
  GEOTransitIncidentEntity *v558;
  id v559;
  unsigned int v560;
  uint64_t v561;
  uint64_t v562;
  unsigned int v563;
  uint64_t v564;
  uint64_t v565;
  unsigned int v566;
  uint64_t v567;
  uint64_t v568;
  unsigned int v569;
  uint64_t v570;
  uint64_t v571;
  unsigned int v572;
  void *v573;
  unsigned int v574;
  uint64_t v575;
  uint64_t v576;
  char *v577;
  id v578;
  void *v579;
  unsigned int v580;
  uint64_t v581;
  uint64_t v582;
  unsigned int v583;
  unsigned int v584;
  void *v585;
  void *v586;
  uint64_t v587;
  uint64_t v588;
  id v589;
  Block_layout *v590;
  BOOL v591;
  char v592;
  BOOL v593;
  id v594;
  id v595;
  id v596;
  void *v597;
  void *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  id v602;
  BOOL v603;
  char v604;
  BOOL v605;
  id v606;
  uint64_t v607;
  uint64_t v608;
  unsigned int v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  unsigned int v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  unsigned int v617;
  uint64_t v618;
  uint64_t v619;
  id v620;
  unsigned int v621;
  uint64_t v622;
  uint64_t v623;
  unsigned int v624;
  uint64_t v625;
  uint64_t v626;
  unsigned int v627;
  uint64_t v628;
  uint64_t v629;
  unsigned int v630;
  uint64_t v631;
  uint64_t v632;
  id v633;
  id v634;
  void *v635;
  unsigned int v636;
  void *v637;
  unsigned int v638;
  uint64_t v639;
  uint64_t v640;
  id v641;
  char *v642;
  char *v643;
  unsigned int v644;
  uint64_t v645;
  uint64_t v646;
  id v647;
  void *v648;
  unsigned int v649;
  unsigned int v650;
  char v651;
  void *v652;
  uint64_t v653;
  uint64_t v654;
  char *v655;
  Block_layout *v656;
  unint64_t v657;
  uint64_t v658;
  unint64_t v659;
  uint64_t v660;
  id v661;
  BOOL v662;
  char v663;
  BOOL v664;
  id v665;
  uint64_t v666;
  uint64_t v667;
  id v668;
  unsigned int v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  id v673;
  id v674;
  unsigned int v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  id v679;
  id v680;
  unsigned int v681;
  uint64_t v682;
  uint64_t v683;
  id v684;
  id v685;
  unsigned int v686;
  uint64_t v687;
  uint64_t v688;
  unsigned int v689;
  uint64_t v690;
  uint64_t v691;
  unsigned int v692;
  uint64_t v693;
  uint64_t v694;
  unsigned int v695;
  uint64_t v696;
  uint64_t v697;
  unsigned int v698;
  void *v699;
  unsigned int v700;
  uint64_t v701;
  uint64_t v702;
  unsigned int v703;
  uint64_t v704;
  uint64_t v705;
  unsigned int v706;
  unsigned int v707;
  _BOOL4 v708;
  void *v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  id v713;
  Block_layout *v714;
  BOOL v715;
  char v716;
  BOOL v717;
  id v718;
  id v719;
  id v720;
  void *v721;
  void *v722;
  GEOTransitIncidentEntity *v723;
  void *v724;
  uint64_t v725;
  BOOL v726;
  char v727;
  BOOL v728;
  id v729;
  id v730;
  id v731;
  void *i;
  GEOTransitIncidentEntity *v733;
  void *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  char *v738;
  char *v739;
  char *v740;
  uint64_t v741;
  uint64_t v742;
  id v743;
  id v744;
  void *v745;
  void *v746;
  unsigned __int8 v747;
  void *v748;
  unsigned __int8 v749;
  char *v750;
  char *v751;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  unint64_t v757;
  uint64_t v758;
  uint64_t v759;
  char *v760;
  id v761;
  int v762;
  void *v763;
  void *v764;
  uint64_t v765;
  int v766;
  void *v767;
  uint64_t v768;
  void *v769;
  uint64_t v770;
  id v771;
  id v772;
  _QWORD *v773;
  id v774;
  id v775;
  id v776;
  id obj;
  id obja;
  id objb;
  id objc;
  id objd;
  id obje;
  id objf;
  id objg;
  id objh;
  char *v786;
  id v787;
  uint64_t v788;
  char *v789;
  int v790;
  void *v791;
  void *v792;
  unint64_t v793;
  id v794;
  id v795;
  id v796;
  uint64_t v797;
  void *v798;
  void *v799;
  id v800;
  uint64_t v801;
  char *v802;
  char *v803;
  char *v804;
  id v805;
  id v806;
  id v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  char *v812;
  uint64_t v813;
  uint64_t v814;
  void *v815;
  void *v816;
  id v817;
  uint64_t v818;
  uint64_t v819;
  id v820;
  void *v821;
  uint64_t v822;
  id v823;
  id v824;
  uint64_t v825;
  id v826;
  id v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  id v831;
  id v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  id v837;
  id v838;
  id v839;
  uint64_t v840;
  char *v841;
  int v842;
  char *v843;
  id v844;
  id v845;
  id v846;
  void *v847;
  char *v848;
  char *v849;
  id v850;
  id v851;
  id v852;
  char *v853;
  char *v854;
  unint64_t v855;
  id v856;
  void *v857;
  void *v858;
  uint64_t v859;
  uint64_t v860;
  void *v861;
  void *v862;
  void *v863;
  uint64_t v864;
  uint64_t v865;
  void *v866;
  void *v867;
  void *v868;
  uint64_t v869;
  uint64_t v870;
  _QWORD *v871;
  uint64_t v872;
  unint64_t v873;
  void *v874;
  id v875;
  void *v876;
  uint64_t v877;
  char *v878;
  char *v879;
  unint64_t v880;
  unint64_t v881;
  uint64_t v882;
  unint64_t v883;
  uint64_t v884;
  uint64_t v885;
  id v886;
  id v887;
  uint64_t v888;
  _QWORD *v889;
  uint64_t v890;
  unint64_t v891;
  uint64_t v892;
  char *v893;
  char *v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  _BYTE v899[128];
  __int128 v900;
  __int128 v901;
  __int128 v902;
  __int128 v903;

  v811 = *(_QWORD *)(a4 + 16);
  if (!v811)
    return;
  v4 = a3;
  v810 = a4 + 32;
  v788 = a3 + 32;
  swift_bridgeObjectRetain(a4);
  v7 = 0;
  v754 = a2;
  v755 = v4;
  v753 = a1;
LABEL_8:
  v12 = (_QWORD *)(v810 + 32 * v7);
  v8 = v12[1];
  v13 = v12[2];
  v9 = v12[3];
  v14 = *v12 == a1 && v8 == a2;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v12[1], a1, a2, 0) & 1) == 0)
    goto LABEL_7;
  v15 = *(_QWORD *)(v13 + 16);
  if (v15 != *(_QWORD *)(v4 + 16))
    goto LABEL_7;
  if (!v15 || v13 == v4)
  {
LABEL_1169:
    v741 = a4;
    goto LABEL_1170;
  }
  v16 = v13 + 32;
  swift_unknownObjectRetain(v9);
  swift_bridgeObjectRetain(v8);
  v869 = v13;
  swift_bridgeObjectRetain(v13);
  v17 = 0;
  v808 = v7;
  v818 = v8;
  v829 = v9;
  v758 = v16;
  v759 = v15;
  while (1)
  {
    v809 = v17;
    v18 = v17 << 6;
    v19 = (uint64_t *)(v16 + (v17 << 6));
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v896 = v19[3];
    v871 = (_QWORD *)v19[4];
    v897 = v19[5];
    v23 = *((unsigned __int8 *)v19 + 48);
    v24 = v788 + v18;
    v25 = *(_QWORD *)(v24 + 8);
    v27 = *(_QWORD *)(v24 + 16);
    v26 = *(_QWORD *)(v24 + 24);
    v888 = v21;
    v889 = *(_QWORD **)(v24 + 32);
    v898 = *(_QWORD *)(v24 + 40);
    v28 = *(unsigned __int8 *)(v24 + 48);
    v29 = v20 == *(_QWORD *)v24 && v21 == v25;
    v884 = *(_QWORD *)(v24 + 24);
    if (!v29)
    {
      v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, *(_QWORD *)v24, v25, 0);
      v26 = v884;
      if ((v30 & 1) == 0)
      {
LABEL_1097:
        v735 = v869;
LABEL_1103:
        swift_bridgeObjectRelease(v735);
        a1 = v753;
        a2 = v754;
        goto LABEL_5;
      }
    }
    v870 = v25;
    if (v896)
    {
      v31 = v889;
      if (!v26
        || (v22 == v27 ? (v32 = v896 == v26) : (v32 = 0),
            !v32
         && (v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v896, v27, v884, 0), v26 = v884, (v33 & 1) == 0)))
      {
LABEL_1098:
        swift_bridgeObjectRelease(v869);
        swift_bridgeObjectRelease(v8);
        swift_unknownObjectRelease(v9);
LABEL_1105:
        a1 = v753;
        a2 = v754;
        goto LABEL_6;
      }
    }
    else
    {
      v31 = v889;
      if (v26)
        goto LABEL_1098;
    }
    if (v23 != v28)
      goto LABEL_1097;
    v34 = v871[2];
    v11 = v869;
    if (v34 != v31[2])
    {
      v735 = v869;
      goto LABEL_1103;
    }
    if (!v34)
    {
      swift_bridgeObjectRetain(v26);
      v35 = v31;
      v36 = v898;
      goto LABEL_793;
    }
    swift_bridgeObjectRetain(v26);
    v35 = v871;
    v36 = v898;
    if (v871 != v31)
      break;
LABEL_793:
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v36);
    swift_bridgeObjectRetain(v888);
    swift_bridgeObjectRetain(v896);
    swift_bridgeObjectRetain(v871);
    v38 = v897;
    swift_bridgeObjectRetain(v897);
    swift_bridgeObjectRetain(v870);
LABEL_794:
    v515 = (unint64_t)v38 >> 62;
    if ((unint64_t)v38 >> 62)
    {
      v525 = v38;
      if (v38 >= 0)
        v38 &= 0xFFFFFFFFFFFFFF8uLL;
      swift_bridgeObjectRetain(v525);
      v516 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v525);
      v517 = v36 >> 62;
      if (!(v36 >> 62))
      {
LABEL_796:
        if (v516 != *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_1104;
        goto LABEL_797;
      }
    }
    else
    {
      v516 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      v517 = v36 >> 62;
      if (!(v36 >> 62))
        goto LABEL_796;
    }
    v526 = v36;
    if ((v36 & 0x8000000000000000) == 0)
      v36 &= 0xFFFFFFFFFFFFFF8uLL;
    swift_bridgeObjectRetain(v526);
    v527 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v526);
    if (v516 != v527)
    {
LABEL_1104:
      swift_unknownObjectRelease(v9);
      swift_bridgeObjectRelease(v869);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v897);
      swift_bridgeObjectRelease(v871);
      swift_bridgeObjectRelease(v888);
      swift_bridgeObjectRelease(v898);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v870);
      swift_bridgeObjectRelease(v884);
      swift_bridgeObjectRelease(v896);
      goto LABEL_1105;
    }
LABEL_797:
    v518 = v897;
    v519 = v898;
    if (v515)
    {
      if (v897 < 0)
        v523 = v897;
      else
        v523 = v897 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v897, 2);
      swift_bridgeObjectRetain(v898);
      v524 = v523;
      v518 = v897;
      v520 = _CocoaArrayWrapper.endIndex.getter(v524);
      swift_bridgeObjectRelease(v897);
      if (!v520)
      {
LABEL_808:
        swift_bridgeObjectRelease(v898);
        swift_bridgeObjectRelease(v518);
        goto LABEL_910;
      }
    }
    else
    {
      v520 = *(_QWORD *)((v897 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v897);
      swift_bridgeObjectRetain(v898);
      if (!v520)
        goto LABEL_808;
    }
    v521 = v518 & 0xC000000000000001;
    if ((v518 & 0xC000000000000001) != 0)
    {
      v522 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v518);
      if (!v517)
        goto LABEL_802;
    }
    else
    {
      if (!*(_QWORD *)((v518 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_1173;
      v522 = *(_QWORD *)(v518 + 32);
      swift_unknownObjectRetain(v522);
      if (!v517)
      {
LABEL_802:
        v895 = *(_QWORD *)((v898 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v895)
          goto LABEL_909;
        goto LABEL_821;
      }
    }
    if (v898 < 0)
      v528 = v898;
    else
      v528 = v898 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v898);
    v529 = v528;
    v519 = v898;
    v530 = _CocoaArrayWrapper.endIndex.getter(v529);
    swift_bridgeObjectRelease(v898);
    v895 = v530;
    if (!v530)
      goto LABEL_909;
LABEL_821:
    v891 = v519 & 0xC000000000000001;
    if ((v519 & 0xC000000000000001) != 0)
    {
      v531 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v519);
    }
    else
    {
      if (!*(_QWORD *)((v519 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_1175;
      v531 = *(_QWORD *)(v519 + 32);
      swift_unknownObjectRetain(v531);
    }
    v532 = (id)v522;
    v533 = (id)v531;
    v534 = v533;
    if (v522 | v531)
    {
      if (v532)
        v535 = v531 == 0;
      else
        v535 = 0;
      v536 = v535;
      if (v533)
        v537 = v522 == 0;
      else
        v537 = 0;
      if (v537 || (v536 & 1) != 0 || (v538 = objc_msgSend(v532, "muid"), v538 != objc_msgSend(v534, "muid")))
      {
LABEL_1108:
        swift_unknownObjectRelease(v532);
        v542 = v534;
        goto LABEL_1150;
      }
      v880 = v521;
      v539 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "title"));
      v540 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "title"));
      v541 = (id)v539;
      v542 = (id)v540;
      if (v539 | v540)
      {
        v543 = objc_msgSend(v541, "isEqual:", v542);

        if (!v543)
          goto LABEL_1149;
      }
      v544 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "summary", v742));
      v545 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "summary"));
      v546 = v544 | v545;
      v547 = (char *)(id)v544;
      v548 = (id)v545;
      if (v546)
      {
        v549 = objc_msgSend(v547, "isEqual:", v548);

        if (!v549)
          goto LABEL_1148;
      }
      v886 = v542;
      v874 = v548;
      v550 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "fullDescription"));
      v551 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "fullDescription"));
      v552 = v550 | v551;
      v553 = (id)v550;
      v554 = (id)v551;
      if (v552)
      {
        v555 = objc_msgSend(v553, "isEqual:", v554);

        if (!v555)
        {

          swift_unknownObjectRelease(v532);
          v532 = v541;
LABEL_1119:
          v542 = v886;
          goto LABEL_1150;
        }
      }
      v856 = v553;
      v866 = v554;
      v556 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForRoutePlanning"));
      v557 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForRoutePlanning"));
      v558 = (GEOTransitIncidentEntity *)(id)v556;
      v559 = (id)v557;
      v861 = v541;
      if (!(v556 | v557)
        || (v560 = -[GEOTransitIncidentEntity isEqual:](v558, "isEqual:", v559),
            v558,
            v559,
            v560))
      {
        v561 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForRouteStepping"));
        v562 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForRouteStepping"));
        v853 = (char *)(id)v561;
        v850 = (id)v562;
        if (v561 | v562)
        {
          v563 = objc_msgSend(v853, "isEqual:", v850);

          if (!v563)
          {
            v573 = v558;
            LOBYTE(v558) = 0;
            v518 = v897;
            v585 = v547;
            v586 = v856;
            goto LABEL_900;
          }
        }
        v564 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForNonRoutable"));
        v565 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForNonRoutable"));
        v844 = (id)v564;
        v837 = (id)v565;
        if (v564 | v565)
        {
          v566 = objc_msgSend(v844, "isEqual:", v837);

          if (!v566)
          {
            v573 = v558;
            LOBYTE(v558) = 0;
            v518 = v897;
            v585 = v547;
            v586 = v856;
            goto LABEL_899;
          }
        }
        v567 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "startDate"));
        v568 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "startDate"));
        v831 = (id)v567;
        v826 = (id)v568;
        if (v567 | v568)
        {
          v569 = objc_msgSend(v831, "isEqual:", v826);

          if (!v569)
          {
            v573 = v558;
            LOBYTE(v558) = 0;
            v518 = v897;
            v585 = v547;
            v586 = v856;
            goto LABEL_898;
          }
        }
        v570 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "endDate"));
        v571 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "endDate"));
        v823 = (id)v570;
        v820 = (id)v571;
        if (v570 | v571
          && (v572 = objc_msgSend(v823, "isEqual:", v820), v823, v820, !v572))
        {
          v573 = v558;
        }
        else
        {
          v573 = v558;
          v574 = objc_msgSend(v532, "iconType");
          if (v574 == objc_msgSend(v534, "iconType"))
          {
            v575 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "creationDate"));
            v576 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "creationDate"));
            v577 = (char *)(id)v575;
            v578 = (id)v576;
            v815 = v578;
            if (v575 | v576
              && (v579 = v578,
                  v580 = objc_msgSend(v577, "isEqual:", v578),
                  v577,
                  v579,
                  !v580))
            {
              LOBYTE(v558) = 0;
              v518 = v897;
              v585 = v547;
            }
            else
            {
              v581 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "lastUpdated"));
              v582 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "lastUpdated"));
              v812 = (char *)(id)v581;
              v805 = (id)v582;
              if (v581 | v582
                && (v583 = objc_msgSend(v812, "isEqual:", v805),
                    v812,
                    v805,
                    !v583)
                || (v584 = objc_msgSend(v532, "isBlockingIncident"),
                    v584 != objc_msgSend(v534, "isBlockingIncident")))
              {
                LOBYTE(v558) = 0;
                v518 = v897;
                v585 = v547;
                goto LABEL_895;
              }
              v786 = v577;
              v587 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "affectedEntities"));
              v588 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "affectedEntities"));
              v794 = (id)v587;
              v589 = (id)v588;
              v590 = &stru_1011A6BB0;
              v798 = v589;
              if (!(v587 | v588))
              {
                LOBYTE(v558) = 1;
                goto LABEL_892;
              }
              LOBYTE(v558) = 0;
              if (v794)
                v591 = v588 == 0;
              else
                v591 = 0;
              v592 = v591;
              if (v589)
                v593 = v587 == 0;
              else
                v593 = 0;
              if (v593)
              {
LABEL_892:
                v518 = v897;
                goto LABEL_893;
              }
              v518 = v897;
              v585 = v547;
              if ((v592 & 1) == 0)
              {
                v594 = objc_msgSend(v794, "count");
                if (v594 == objc_msgSend(v589, "count"))
                {
                  v902 = 0u;
                  v903 = 0u;
                  v900 = 0u;
                  v901 = 0u;
                  objf = v794;
                  v595 = objc_msgSend(objf, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                  if (v595)
                  {
                    v596 = v595;
                    v789 = 0;
                    v787 = *(id *)v901;
LABEL_884:
                    v597 = 0;
                    while (1)
                    {
                      if (*(id *)v901 != v787)
                        objc_enumerationMutation(objf);
                      v558 = *(GEOTransitIncidentEntity **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)v597);
                      v598 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v589, "objectAtIndexedSubscript:", (char *)v597 + (_QWORD)v789));
                      LODWORD(v558) = sub_100176284(v598, v558, (GEOTransitIncidentEntity *)v598);

                      if (!(_DWORD)v558)
                        break;
                      v597 = (char *)v597 + 1;
                      v589 = v798;
                      if (v596 == v597)
                      {
                        v596 = objc_msgSend(objf, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                        v789 = (char *)v597 + (_QWORD)v789;
                        if (v596)
                          goto LABEL_884;
                        goto LABEL_890;
                      }
                    }
                  }
                  else
                  {
LABEL_890:
                    LOBYTE(v558) = 1;
                  }
                  v518 = v897;

LABEL_893:
                  v585 = v547;
                }
                else
                {
                  LOBYTE(v558) = 0;
                  v518 = v897;
                }
              }

              v577 = v786;
LABEL_895:

            }
            v586 = v856;

LABEL_897:
LABEL_898:

LABEL_899:
LABEL_900:

LABEL_901:
            swift_unknownObjectRelease(v532);

            swift_unknownObjectRelease(v534);
            v31 = v889;
            v521 = v880;
            if ((v558 & 1) == 0)
              goto LABEL_1151;
            goto LABEL_902;
          }
        }
        LOBYTE(v558) = 0;
        v518 = v897;
        v585 = v547;
        v586 = v856;
        goto LABEL_897;
      }
      v573 = v558;
      LOBYTE(v558) = 0;
      v518 = v897;
      v585 = v547;
      v586 = v856;
      goto LABEL_901;
    }
    swift_unknownObjectRelease(v532);
    swift_unknownObjectRelease(v534);
    v518 = v897;
LABEL_902:
    v8 = v818;
    if (v520 != 1)
    {
      v519 = v898;
      if (v521)
      {
        v522 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v518);
      }
      else
      {
        if (*(_QWORD *)((v518 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          goto LABEL_1181;
        v522 = *(_QWORD *)(v518 + 40);
        swift_unknownObjectRetain(v522);
      }
      v7 = v808;
      v9 = v829;
      if (v895 != 1)
      {
        if (v891)
        {
          v601 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v898);
        }
        else
        {
          if (*(_QWORD *)((v898 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
            goto LABEL_1185;
          v601 = *(_QWORD *)(v898 + 40);
          swift_unknownObjectRetain(v601);
        }
        v532 = (id)v522;
        v602 = (id)v601;
        v534 = v602;
        if (!(v522 | v601))
        {
          swift_unknownObjectRelease(v532);
          swift_unknownObjectRelease(v534);
          v518 = v897;
          goto LABEL_972;
        }
        if (v532)
          v603 = v601 == 0;
        else
          v603 = 0;
        v604 = v603;
        if (v602)
          v605 = v522 == 0;
        else
          v605 = 0;
        if (v605)
          goto LABEL_1108;
        if ((v604 & 1) != 0)
          goto LABEL_1108;
        v606 = objc_msgSend(v532, "muid");
        if (v606 != objc_msgSend(v534, "muid"))
          goto LABEL_1108;
        v881 = v521;
        v607 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "title"));
        v608 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "title"));
        v541 = (id)v607;
        v542 = (id)v608;
        if (v607 | v608)
        {
          v609 = objc_msgSend(v541, "isEqual:", v542);

          if (!v609)
            goto LABEL_1149;
        }
        v610 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "summary", v742));
        v611 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "summary"));
        v612 = v610 | v611;
        v547 = (char *)(id)v610;
        v548 = (id)v611;
        if (v612)
        {
          v613 = objc_msgSend(v547, "isEqual:", v548);

          if (!v613)
            goto LABEL_1148;
        }
        v862 = v548;
        v867 = v547;
        v614 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "fullDescription"));
        v615 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "fullDescription"));
        v616 = v614 | v615;
        v547 = (char *)(id)v614;
        v548 = (id)v615;
        if (v616)
        {
          v617 = objc_msgSend(v547, "isEqual:", v548);

          if (!v617)
          {

LABEL_1148:
LABEL_1149:

            swift_unknownObjectRelease(v532);
            v532 = v541;
LABEL_1150:
            swift_unknownObjectRelease(v534);

            v518 = v897;
LABEL_1151:
            swift_unknownObjectRelease(v829);
            swift_bridgeObjectRelease(v869);
            swift_bridgeObjectRelease(v818);
            swift_bridgeObjectRelease_n(v518, 2);
            swift_bridgeObjectRelease(v871);
            swift_bridgeObjectRelease(v888);
            swift_bridgeObjectRelease_n(v898, 2);
            swift_bridgeObjectRelease(v31);
            swift_bridgeObjectRelease(v870);
            swift_bridgeObjectRelease(v884);
            swift_bridgeObjectRelease(v896);
            a1 = v753;
            a2 = v754;
            v7 = v808;
            goto LABEL_6;
          }
        }
        v857 = v548;
        v618 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForRoutePlanning"));
        v619 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForRoutePlanning"));
        v875 = (id)v618;
        v620 = (id)v619;
        v853 = v547;
        if (v618 | v619)
        {
          v621 = objc_msgSend(v875, "isEqual:", v620);

          if (!v621)
          {
            v637 = v541;
            v651 = 0;
            v518 = v897;
            v652 = v867;
            goto LABEL_971;
          }
        }
        v622 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForRouteStepping"));
        v623 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForRouteStepping"));
        v851 = (id)v622;
        v845 = (id)v623;
        if (v622 | v623)
        {
          v624 = objc_msgSend(v851, "isEqual:", v845);

          if (!v624)
          {
            v637 = v541;
            v651 = 0;
            v518 = v897;
            v652 = v867;
            goto LABEL_970;
          }
        }
        v625 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForNonRoutable"));
        v626 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForNonRoutable"));
        v838 = (id)v625;
        v832 = (id)v626;
        if (v625 | v626)
        {
          v627 = objc_msgSend(v838, "isEqual:", v832);

          if (!v627)
          {
            v637 = v541;
            v651 = 0;
            v518 = v897;
            v652 = v867;
            goto LABEL_969;
          }
        }
        v628 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "startDate"));
        v629 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "startDate"));
        v827 = (id)v628;
        v824 = (id)v629;
        if (v628 | v629)
        {
          v630 = objc_msgSend(v827, "isEqual:", v824);

          if (!v630)
          {
            v637 = v541;
            v651 = 0;
            v518 = v897;
            v652 = v867;
            goto LABEL_968;
          }
        }
        v631 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "endDate"));
        v632 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "endDate"));
        v633 = (id)v631;
        v634 = (id)v632;
        v821 = v633;
        v816 = v634;
        if (v631 | v632
          && (v635 = v634,
              v636 = objc_msgSend(v633, "isEqual:", v634),
              v633,
              v635,
              !v636))
        {
          v637 = v541;
        }
        else
        {
          v637 = v541;
          v638 = objc_msgSend(v532, "iconType");
          if (v638 == objc_msgSend(v534, "iconType"))
          {
            v639 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "creationDate"));
            v640 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "creationDate"));
            v641 = (id)v639;
            v642 = (char *)(id)v640;
            v812 = v642;
            if (v639 | v640
              && (v643 = v642,
                  v644 = objc_msgSend(v641, "isEqual:", v642),
                  v641,
                  v643,
                  !v644))
            {
              v651 = 0;
              v518 = v897;
              v652 = v867;
            }
            else
            {
              v645 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "lastUpdated"));
              v646 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "lastUpdated"));
              v806 = (id)v645;
              v647 = (id)v646;
              v799 = v647;
              if (v645 | v646
                && (v648 = v647,
                    v649 = objc_msgSend(v806, "isEqual:", v647),
                    v806,
                    v648,
                    !v649)
                || (v650 = objc_msgSend(v532, "isBlockingIncident"),
                    v650 != objc_msgSend(v534, "isBlockingIncident")))
              {
                v651 = 0;
                v518 = v897;
                v652 = v867;
                goto LABEL_964;
              }
              objg = v641;
              v653 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "affectedEntities"));
              v654 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "affectedEntities"));
              v795 = (id)v653;
              v655 = (char *)(id)v654;
              v656 = &stru_1011A6BB0;
              v786 = v655;
              if (!(v653 | v654))
              {
                v651 = 1;
                goto LABEL_961;
              }
              v651 = 0;
              if (v795)
                v726 = v654 == 0;
              else
                v726 = 0;
              v727 = v726;
              if (v655)
                v728 = v653 == 0;
              else
                v728 = 0;
              if (v728)
              {
LABEL_961:
                v518 = v897;
                goto LABEL_962;
              }
              v518 = v897;
              v652 = v867;
              if ((v727 & 1) == 0)
              {
                v729 = objc_msgSend(v795, "count");
                if (v729 == objc_msgSend(v655, "count"))
                {
                  v902 = 0u;
                  v903 = 0u;
                  v900 = 0u;
                  v901 = 0u;
                  v776 = v795;
                  v730 = objc_msgSend(v776, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                  if (v730)
                  {
                    v731 = v730;
                    v887 = v542;
                    v789 = 0;
                    v787 = *(id *)v901;
                    while (2)
                    {
                      for (i = 0; i != v731; i = (char *)i + 1)
                      {
                        if (*(id *)v901 != v787)
                          objc_enumerationMutation(v776);
                        v733 = *(GEOTransitIncidentEntity **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)i);
                        v734 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "objectAtIndexedSubscript:", (char *)i + (_QWORD)v789));
                        LODWORD(v733) = sub_100176284(v734, v733, (GEOTransitIncidentEntity *)v734);

                        if (!(_DWORD)v733)
                        {
                          v651 = 0;
                          goto LABEL_1094;
                        }
                      }
                      v731 = objc_msgSend(v776, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                      v789 = (char *)i + (_QWORD)v789;
                      if (v731)
                        continue;
                      break;
                    }
                    v651 = 1;
LABEL_1094:
                    v518 = v897;
                    v542 = v887;
                  }
                  else
                  {
                    v651 = 1;
                    v518 = v897;
                  }

LABEL_962:
                  v652 = v867;
                }
                else
                {
                  v651 = 0;
                  v518 = v897;
                }
              }

              v641 = objg;
LABEL_964:

            }
LABEL_967:

LABEL_968:
LABEL_969:

LABEL_970:
LABEL_971:

            swift_unknownObjectRelease(v532);
            swift_unknownObjectRelease(v534);

            v31 = v889;
            v521 = v881;
            if ((v651 & 1) == 0)
              goto LABEL_1151;
LABEL_972:
            if (v520 == 2)
            {
LABEL_973:
              v519 = v898;
              swift_bridgeObjectRelease(v898);
              swift_bridgeObjectRelease(v518);
              v7 = v808;
              v8 = v818;
              v9 = v829;
              goto LABEL_910;
            }
            v833 = v518 & 0xFFFFFFFFFFFFFF8;
            v835 = v520;
            v828 = v518 + 32;
            v657 = 2;
            while (2)
            {
              if (v521)
              {
                v658 = specialized _ArrayBuffer._getElementSlowPath(_:)(v657, v518);
              }
              else
              {
                if (v657 >= *(_QWORD *)(v833 + 16))
                  goto LABEL_1178;
                v658 = *(_QWORD *)(v828 + 8 * v657);
                swift_unknownObjectRetain(v658);
              }
              v659 = v657 + 1;
              v8 = v818;
              v9 = v829;
              if (__OFADD__(v657, 1))
                goto LABEL_1176;
              if (v657 == v895)
              {
                v519 = v898;
                swift_bridgeObjectRelease(v898);
                swift_bridgeObjectRelease(v897);
                v725 = v658;
                v518 = v897;
                swift_unknownObjectRelease(v725);
                v7 = v808;
                goto LABEL_910;
              }
              if (v891)
              {
                v660 = specialized _ArrayBuffer._getElementSlowPath(_:)(v657, v898);
              }
              else
              {
                if (v657 >= *(_QWORD *)((v898 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_1180;
                v660 = *(_QWORD *)(v898 + 32 + 8 * v657);
                swift_unknownObjectRetain(v660);
              }
              v532 = (id)v658;
              v661 = (id)v660;
              v534 = v661;
              if (v658 | v660)
              {
                if (v532)
                  v662 = v660 == 0;
                else
                  v662 = 0;
                v663 = v662;
                if (v661)
                  v664 = v658 == 0;
                else
                  v664 = 0;
                if (v664)
                  goto LABEL_1108;
                if ((v663 & 1) != 0)
                  goto LABEL_1108;
                v665 = objc_msgSend(v532, "muid");
                if (v665 != objc_msgSend(v534, "muid"))
                  goto LABEL_1108;
                v666 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "title"));
                v667 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "title"));
                v668 = (id)v666;
                v886 = (id)v667;
                if (v666 | v667)
                {
                  v669 = objc_msgSend(v668, "isEqual:", v886);

                  if (!v669)
                    goto LABEL_1117;
                }
                v670 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "summary", v742));
                v671 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "summary"));
                v672 = v670 | v671;
                v673 = (id)v670;
                v674 = (id)v671;
                if (v672)
                {
                  v675 = objc_msgSend(v673, "isEqual:", v674);

                  if (!v675)
                  {

LABEL_1117:
                    swift_unknownObjectRelease(v532);

                    v532 = v668;
                    goto LABEL_1119;
                  }
                }
                v868 = v668;
                v876 = v674;
                v676 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "fullDescription"));
                v677 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "fullDescription"));
                v678 = v676 | v677;
                v679 = (id)v676;
                v680 = (id)v677;
                if (v678)
                {
                  v681 = objc_msgSend(v679, "isEqual:", v680);

                  if (!v681)
                  {

                    swift_unknownObjectRelease(v532);
                    v532 = v868;
                    goto LABEL_1119;
                  }
                }
                v858 = v679;
                v863 = v680;
                v682 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForRoutePlanning"));
                v683 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForRoutePlanning"));
                v684 = (id)v682;
                v685 = (id)v683;
                if (v682 | v683)
                {
                  v686 = objc_msgSend(v684, "isEqual:", v685);

                  if (!v686)
                  {
                    v699 = v684;
                    v708 = 0;
                    v518 = v897;
                    v709 = v673;
                    v520 = v835;
                    goto LABEL_1066;
                  }
                }
                v687 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForRouteStepping"));
                v688 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForRouteStepping"));
                v853 = (char *)(id)v687;
                v852 = (id)v688;
                if (v687 | v688)
                {
                  v689 = objc_msgSend(v853, "isEqual:", v852);

                  if (!v689)
                  {
                    v699 = v684;
                    v708 = 0;
                    v518 = v897;
                    v709 = v673;
                    v520 = v835;
                    goto LABEL_1065;
                  }
                }
                v690 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "messageForNonRoutable"));
                v691 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "messageForNonRoutable"));
                v846 = (id)v690;
                v839 = (id)v691;
                if (v690 | v691)
                {
                  v692 = objc_msgSend(v846, "isEqual:", v839);

                  if (!v692)
                  {
                    v699 = v684;
                    v708 = 0;
                    v518 = v897;
                    v709 = v673;
                    v520 = v835;
                    goto LABEL_1064;
                  }
                }
                v693 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "startDate"));
                v694 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "startDate"));
                v817 = (id)v693;
                v812 = (char *)(id)v694;
                if (v693 | v694)
                {
                  v695 = objc_msgSend(v817, "isEqual:", v812);

                  if (!v695)
                  {
                    v699 = v684;
                    v708 = 0;
                    v518 = v897;
                    v709 = v673;
                    v520 = v835;
                    goto LABEL_1063;
                  }
                }
                v696 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "endDate"));
                v697 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "endDate"));
                v807 = (id)v696;
                v800 = (id)v697;
                if (v696 | v697
                  && (v698 = objc_msgSend(v807, "isEqual:", v800),
                      v807,
                      v800,
                      !v698))
                {
                  v699 = v684;
                }
                else
                {
                  v699 = v684;
                  v700 = objc_msgSend(v532, "iconType");
                  if (v700 == objc_msgSend(v534, "iconType"))
                  {
                    v701 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "creationDate"));
                    v702 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "creationDate"));
                    v796 = (id)v701;
                    v789 = (char *)(id)v702;
                    if (v701 | v702
                      && (v703 = objc_msgSend(v796, "isEqual:", v789),
                          v796,
                          v789,
                          !v703))
                    {
                      v708 = 0;
                      v518 = v897;
                      v709 = v673;
                    }
                    else
                    {
                      v704 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "lastUpdated"));
                      v705 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "lastUpdated"));
                      v787 = (id)v704;
                      v786 = (char *)(id)v705;
                      if (v704 | v705
                        && (v706 = objc_msgSend(v787, "isEqual:", v786),
                            v787,
                            v786,
                            !v706)
                        || (v707 = objc_msgSend(v532, "isBlockingIncident"),
                            v707 != objc_msgSend(v534, "isBlockingIncident")))
                      {
                        v708 = 0;
                        v518 = v897;
                        v709 = v673;
                        goto LABEL_1060;
                      }
                      v710 = objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "affectedEntities"));
                      v711 = objc_claimAutoreleasedReturnValue(objc_msgSend(v534, "affectedEntities"));
                      v712 = v710 | v711;
                      v882 = v710;
                      v775 = (id)v710;
                      v713 = (id)v711;
                      v714 = &stru_1011A6BB0;
                      objh = v713;
                      if (!v712)
                      {
                        v708 = 1;
                        v518 = v897;
                        goto LABEL_1058;
                      }
                      v708 = 0;
                      if (v775)
                        v715 = v711 == 0;
                      else
                        v715 = 0;
                      v716 = v715;
                      if (v713)
                        v717 = v882 == 0;
                      else
                        v717 = 0;
                      if (v717)
                      {
                        v518 = v897;
                        goto LABEL_1058;
                      }
                      v518 = v897;
                      v709 = v673;
                      if ((v716 & 1) == 0)
                      {
                        v718 = objc_msgSend(v775, "count");
                        if (v718 == objc_msgSend(objh, "count"))
                        {
                          v902 = 0u;
                          v903 = 0u;
                          v900 = 0u;
                          v901 = 0u;
                          v761 = v775;
                          v719 = objc_msgSend(v761, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                          if (v719)
                          {
                            v720 = v719;
                            v883 = v521;
                            v765 = *(_QWORD *)v901;
                            v770 = 0;
                            v721 = objh;
LABEL_1046:
                            v722 = 0;
                            while (1)
                            {
                              if (*(_QWORD *)v901 != v765)
                                objc_enumerationMutation(v761);
                              v723 = *(GEOTransitIncidentEntity **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)v722);
                              v724 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v721, "objectAtIndexedSubscript:", (char *)v722 + v770));
                              v708 = sub_100176284(v724, v723, (GEOTransitIncidentEntity *)v724);

                              if (!v708)
                                break;
                              v722 = (char *)v722 + 1;
                              v721 = objh;
                              if (v720 == v722)
                              {
                                v720 = objc_msgSend(v761, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                v770 += (uint64_t)v722;
                                if (v720)
                                  goto LABEL_1046;
                                v708 = 1;
                                break;
                              }
                            }
                            v518 = v897;
                            v521 = v883;
                          }
                          else
                          {
                            v708 = 1;
                            v518 = v897;
                          }

LABEL_1058:
                          v709 = v673;
                        }
                        else
                        {
                          v708 = 0;
                          v518 = v897;
                        }
                      }

LABEL_1060:
                    }
                    v520 = v835;

LABEL_1062:
LABEL_1063:

LABEL_1064:
LABEL_1065:

LABEL_1066:
                    swift_unknownObjectRelease(v532);

                    swift_unknownObjectRelease(v534);
                    v31 = v889;
                    if (!v708)
                      goto LABEL_1151;
LABEL_976:
                    v657 = v659;
                    if (v659 == v520)
                      goto LABEL_973;
                    continue;
                  }
                }
                v708 = 0;
                v518 = v897;
                v709 = v673;
                v520 = v835;
                goto LABEL_1062;
              }
              break;
            }
            swift_unknownObjectRelease(v532);
            swift_unknownObjectRelease(v534);
            v518 = v897;
            goto LABEL_976;
          }
        }
        v651 = 0;
        v518 = v897;
        v652 = v867;
        goto LABEL_967;
      }
LABEL_909:
      swift_bridgeObjectRelease(v519);
      swift_bridgeObjectRelease(v897);
      v599 = v522;
      v518 = v897;
      swift_unknownObjectRelease(v599);
      goto LABEL_910;
    }
    v519 = v898;
    swift_bridgeObjectRelease(v898);
    swift_bridgeObjectRelease(v518);
    v7 = v808;
    v9 = v829;
LABEL_910:
    v600 = v518;
    v17 = v809 + 1;
    swift_bridgeObjectRelease(v600);
    swift_bridgeObjectRelease(v871);
    swift_bridgeObjectRelease(v888);
    swift_bridgeObjectRelease(v519);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v870);
    swift_bridgeObjectRelease(v884);
    swift_bridgeObjectRelease(v896);
    v16 = v758;
    if (v809 + 1 == v759)
    {
      swift_bridgeObjectRelease(a4);
      swift_unknownObjectRelease(v9);
      swift_bridgeObjectRelease(v869);
      v741 = v8;
LABEL_1170:
      swift_bridgeObjectRelease(v741);
      return;
    }
  }
  v37 = v871 + 4;
  v760 = (char *)(v31 + 4);
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRetain(v898);
  swift_bridgeObjectRetain(v888);
  swift_bridgeObjectRetain(v896);
  swift_bridgeObjectRetain(v871);
  v38 = v897;
  swift_bridgeObjectRetain(v897);
  swift_bridgeObjectRetain(v870);
  v39 = 0;
  v756 = v34;
  while (1)
  {
    if (v39 >= v31[2])
      goto LABEL_1172;
    v757 = v39;
    v40 = 80 * v39;
    v41 = &v37[10 * v39];
    v42 = v41[1];
    v43 = v41[2];
    v822 = v41[3];
    v790 = *((unsigned __int8 *)v41 + 32);
    v44 = v41[5];
    LODWORD(v787) = *((unsigned __int8 *)v41 + 48);
    obj = (id)v41[7];
    v766 = *((unsigned __int8 *)v41 + 72);
    v45 = &v760[v40];
    v46 = *((_QWORD *)v45 + 1);
    v890 = *((_QWORD *)v45 + 2);
    v825 = *((_QWORD *)v45 + 3);
    LODWORD(v789) = v45[32];
    v885 = *((_QWORD *)v45 + 5);
    LODWORD(v786) = v45[48];
    v771 = (id)*((_QWORD *)v45 + 7);
    v830 = v41[8];
    v834 = *((_QWORD *)v45 + 8);
    v762 = v45[72];
    v836 = v44;
    if ((*v41 != *(_QWORD *)v45 || v42 != v46)
      && (v47 = v41[2],
          v48 = v41[1],
          v49 = _stringCompareWithSmolCheck(_:_:expecting:)(*v41, v42, *(_QWORD *)v45, v46, 0),
          v42 = v48,
          v43 = v47,
          v44 = v836,
          (v49 & 1) == 0)
      || (v50 = *(_QWORD *)(v43 + 16), v50 != *(_QWORD *)(v890 + 16)))
    {
      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v871);
      swift_bridgeObjectRelease(v896);
      swift_bridgeObjectRelease(v888);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v884);
      v10 = v870;
      a2 = v754;
      goto LABEL_1160;
    }
    v819 = v46;
    v797 = v42;
    if (!v50)
    {
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
      swift_unknownObjectRetain(v822);
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRetain(v830);
      swift_bridgeObjectRetain(v46);
      v52 = v890;
      v51 = v890;
      goto LABEL_72;
    }
    v812 = *(char **)(v43 + 16);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v43);
    swift_unknownObjectRetain(v822);
    swift_bridgeObjectRetain(v44);
    swift_bridgeObjectRetain(v830);
    swift_bridgeObjectRetain(v46);
    v51 = v43;
    v52 = v890;
    if (v43 != v890)
      break;
LABEL_72:
    swift_bridgeObjectRetain(v51);
    swift_unknownObjectRetain(v825);
    swift_bridgeObjectRetain(v885);
    swift_bridgeObjectRetain(v834);
LABEL_73:
    if (v790 != (_DWORD)v789)
    {
      swift_bridgeObjectRelease(v897);
      swift_bridgeObjectRelease(v871);
      swift_bridgeObjectRelease(v896);
      swift_bridgeObjectRelease(v888);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v884);
      swift_bridgeObjectRelease(v870);
      swift_bridgeObjectRelease(v830);
      swift_bridgeObjectRelease(v44);
      swift_unknownObjectRelease(v822);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v797);
      swift_bridgeObjectRelease(v834);
      swift_bridgeObjectRelease(v885);
      swift_unknownObjectRelease(v825);
      v736 = v52;
      goto LABEL_1107;
    }
    v7 = v808;
    v8 = v818;
    v9 = v829;
    v11 = v869;
    if ((_DWORD)v787 != (_DWORD)v786
      || (obj != v771 || v830 != v834)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(obj, v830, v771, v834, 0) & 1) == 0
      || v766 != v762)
    {
      swift_bridgeObjectRelease(v897);
      swift_bridgeObjectRelease(v871);
      swift_bridgeObjectRelease(v896);
      swift_bridgeObjectRelease(v888);
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v884);
      swift_bridgeObjectRelease(v870);
      swift_bridgeObjectRelease(v830);
      swift_bridgeObjectRelease(v44);
      swift_unknownObjectRelease(v822);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v797);
      swift_bridgeObjectRelease(v834);
      swift_bridgeObjectRelease(v885);
      swift_unknownObjectRelease(v825);
      swift_bridgeObjectRelease(v890);
      v10 = v819;
      a2 = v754;
      goto LABEL_1160;
    }
    if ((unint64_t)v44 >> 62)
    {
      if (v44 < 0)
        v494 = v44;
      else
        v494 = v44 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v44);
      v81 = _CocoaArrayWrapper.endIndex.getter(v494);
      swift_bridgeObjectRelease(v44);
    }
    else
    {
      v81 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v82 = v885;
    v83 = (unint64_t)v885 >> 62;
    if ((unint64_t)v885 >> 62)
    {
      if (v885 < 0)
        v495 = v885;
      else
        v495 = v885 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v885);
      v496 = _CocoaArrayWrapper.endIndex.getter(v495);
      swift_bridgeObjectRelease(v885);
      v82 = v885;
      if (v81 != v496)
      {
LABEL_1109:
        v737 = v82;
        swift_bridgeObjectRelease(v897);
        swift_bridgeObjectRelease(v871);
        swift_bridgeObjectRelease(v896);
        swift_bridgeObjectRelease(v888);
        swift_bridgeObjectRelease(v898);
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(v884);
        swift_bridgeObjectRelease(v870);
        swift_bridgeObjectRelease(v830);
        swift_bridgeObjectRelease(v44);
        swift_unknownObjectRelease(v822);
        swift_bridgeObjectRelease(v43);
        swift_bridgeObjectRelease(v797);
        swift_bridgeObjectRelease(v834);
        swift_bridgeObjectRelease(v737);
        swift_unknownObjectRelease(v825);
        swift_bridgeObjectRelease(v890);
        v10 = v819;
        v11 = v869;
        a2 = v754;
        goto LABEL_1160;
      }
    }
    else if (v81 != *(_QWORD *)((v885 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_1109;
    }
    v36 = v898;
    if ((unint64_t)v44 >> 62)
    {
      if (v44 < 0)
        v92 = v44;
      else
        v92 = v44 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v44, 2);
      v85 = v885;
      swift_bridgeObjectRetain(v885);
      v84 = _CocoaArrayWrapper.endIndex.getter(v92);
      swift_bridgeObjectRelease(v44);
      if (v84)
      {
LABEL_85:
        v873 = v44 & 0xC000000000000001;
        if ((v44 & 0xC000000000000001) != 0)
        {
          v86 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v44);
          v85 = v885;
          if (v83)
            goto LABEL_747;
LABEL_88:
          v865 = *(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v865)
            goto LABEL_89;
        }
        else
        {
          if (!*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_1174;
          v86 = *(_QWORD *)(v44 + 32);
          swift_unknownObjectRetain(v86);
          v85 = v885;
          if (!v83)
            goto LABEL_88;
LABEL_747:
          if (v85 < 0)
            v498 = v85;
          else
            v498 = v85 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v85);
          v499 = v498;
          v36 = v898;
          v500 = _CocoaArrayWrapper.endIndex.getter(v499);
          swift_bridgeObjectRelease(v885);
          v85 = v885;
          v865 = v500;
          if (v500)
          {
LABEL_89:
            v855 = v85 & 0xC000000000000001;
            v860 = v84;
            if ((v85 & 0xC000000000000001) != 0)
            {
              v87 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v85);
            }
            else
            {
              if (!*(_QWORD *)((v85 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_1177;
              v87 = *(_QWORD *)(v85 + 32);
              swift_unknownObjectRetain(v87);
            }
            v88 = (char *)(id)v86;
            v89 = (char *)(id)v87;
            v90 = v89;
            if (!(v86 | v87))
            {
              swift_unknownObjectRelease(v88);
              swift_unknownObjectRelease(v90);
              v11 = v869;
              v91 = v860;
              goto LABEL_236;
            }
            if (v88)
              v93 = v87 == 0;
            else
              v93 = 0;
            v94 = v93;
            if (v89)
              v95 = v86 == 0;
            else
              v95 = 0;
            if (v95
              || (v94 & 1) != 0
              || (v96 = objc_msgSend(v88, "artworkSourceType"),
                  v96 != objc_msgSend(v90, "artworkSourceType"))
              || (v97 = objc_msgSend(v88, "artworkUseType"),
                  v97 != objc_msgSend(v90, "artworkUseType")))
            {
LABEL_1110:
              swift_unknownObjectRelease(v88);
              swift_unknownObjectRelease(v90);
              goto LABEL_1158;
            }
            v893 = v88;
            v98 = objc_claimAutoreleasedReturnValue(objc_msgSend(v88, "shieldDataSource"));
            v99 = objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "shieldDataSource"));
            v878 = v90;
            v100 = (char *)(id)v98;
            v101 = (char *)(id)v99;
            v841 = v100;
            v848 = v101;
            if (v98 | v99)
            {
              if (v100)
                v102 = v99 == 0;
              else
                v102 = 0;
              v103 = v102;
              if (v101)
                v104 = v98 == 0;
              else
                v104 = 0;
              v105 = v101;
              if (v104 || v103 || (v106 = objc_msgSend(v100, "shieldType"), v106 != objc_msgSend(v105, "shieldType")))
              {
LABEL_1113:

LABEL_1124:
                v88 = v841;
                v90 = v848;
LABEL_1125:
                swift_unknownObjectRelease(v893);
                swift_unknownObjectRelease(v878);

LABEL_1138:
                v44 = v836;
                goto LABEL_1158;
              }
              v107 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "shieldText"));
              if (v107 || (v853 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldText"))) != 0)
              {
                v90 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "shieldText", v742));
                v106 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldText"));
                if ((objc_msgSend(v90, "isEqualToString:", v106) & 1) == 0)
                  goto LABEL_1120;
                v108 = 1;
              }
              else
              {
                v853 = 0;
                v108 = 0;
              }
              v109 = v100;
              v110 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "shieldColorString", v742));
              if (v110
                || (v812 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldColorString"))) != 0)
              {
                v111 = v107;
                v112 = v43;
                v113 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v109, "shieldColorString"));
                v114 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldColorString"));
                v115 = objc_msgSend(v113, "isEqualToString:", v114);

                if (v110)
                {

                  v8 = v818;
                  v43 = v112;
                  v107 = v111;
                  if (v108)
                    goto LABEL_133;
                  goto LABEL_134;
                }
                v8 = v818;
                v43 = v112;
                v107 = v111;
                v166 = v812;
              }
              else
              {
                v166 = 0;
                v115 = 1;
              }

              if ((v108 & 1) != 0)
              {
LABEL_133:

              }
LABEL_134:
              v31 = v889;
              if (v107)
              {
                v88 = v841;

                v90 = v848;
                v7 = v808;
                if ((v115 & 1) == 0)
                  goto LABEL_1125;
              }
              else
              {
                v88 = v841;

                v90 = v848;
                v7 = v808;
                if ((v115 & 1) == 0)
                  goto LABEL_1125;
              }
            }
            v116 = objc_claimAutoreleasedReturnValue(objc_msgSend(v893, "iconDataSource", v742));
            v117 = objc_claimAutoreleasedReturnValue(objc_msgSend(v878, "iconDataSource"));
            v118 = (char *)(id)v116;
            v119 = (char *)(id)v117;
            v120 = v119;
            if (v116 | v117)
            {
              if (v118)
                v121 = v117 == 0;
              else
                v121 = 0;
              v122 = v121;
              if (v119)
                v123 = v116 == 0;
              else
                v123 = 0;
              if (v123
                || (v122 & 1) != 0
                || (v124 = objc_msgSend(v118, "iconType"),
                    v124 != objc_msgSend(v120, "iconType"))
                || (v125 = objc_msgSend(v118, "cartoID"),
                    v125 != objc_msgSend(v120, "cartoID"))
                || (v126 = objc_msgSend(v118, "defaultTransitType"),
                    v126 != objc_msgSend(v120, "defaultTransitType"))
                || (v127 = objc_msgSend(v118, "iconAttributeKey"),
                    v127 != objc_msgSend(v120, "iconAttributeKey")))
              {
                v134 = v118;
                v139 = v120;
                goto LABEL_1136;
              }
              v128 = objc_msgSend(v118, "iconAttributeValue");
              v129 = objc_msgSend(v120, "iconAttributeValue");

              if (v128 != v129)
                goto LABEL_1137;
            }
            v812 = v120;
            v130 = v893;
            v131 = objc_claimAutoreleasedReturnValue(objc_msgSend(v893, "iconFallbackShieldDataSource"));
            v132 = v878;
            v133 = objc_claimAutoreleasedReturnValue(objc_msgSend(v878, "iconFallbackShieldDataSource"));
            v134 = (id)v131;
            v135 = (char *)(id)v133;
            v791 = v134;
            v853 = v135;
            v802 = v118;
            if (v131 | v133)
            {
              if (v134)
                v136 = v133 == 0;
              else
                v136 = 0;
              v137 = v136;
              if (v135)
                v138 = v131 == 0;
              else
                v138 = 0;
              v139 = v135;
              if (v138 || v137)
              {

                v738 = v139;
                v120 = v812;
                v8 = v818;
                goto LABEL_1135;
              }
              v140 = objc_msgSend(v134, "shieldType");
              v120 = v812;
              v8 = v818;
              if (v140 != objc_msgSend(v139, "shieldType"))
              {

                v738 = v139;
                goto LABEL_1135;
              }
              v141 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldText"));
              if (v141 || (v789 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v139, "shieldText"))) != 0)
              {
                v118 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldText"));
                v140 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v139, "shieldText"));
                if ((objc_msgSend(v118, "isEqualToString:", v140) & 1) == 0)
                {

                  v738 = v789;
                  if (v141)
                    v738 = v141;
                  v118 = v802;
                  v7 = v808;
LABEL_1135:

LABEL_1136:
LABEL_1137:
                  swift_unknownObjectRelease(v893);
                  swift_unknownObjectRelease(v878);

                  v88 = v118;
                  v90 = v120;
                  goto LABEL_1138;
                }
                v142 = 1;
              }
              else
              {
                v789 = 0;
                v142 = 0;
              }
              v143 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldColorString"));
              if (v143
                || (v31 = (_QWORD *)objc_claimAutoreleasedReturnValue(objc_msgSend(v853, "shieldColorString"))) != 0)
              {
                v144 = v43;
                v145 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldColorString"));
                v146 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v853, "shieldColorString"));
                v147 = objc_msgSend(v145, "isEqualToString:", v146);

                if (v143)
                {

                  v43 = v144;
                  if (v142)
                    goto LABEL_176;
                  goto LABEL_177;
                }
                v43 = v144;
              }
              else
              {
                v147 = 1;
              }

              if ((v142 & 1) != 0)
              {
LABEL_176:

              }
LABEL_177:
              v31 = v889;
              v118 = v802;

              v139 = v853;
              if (v141)
              {

              }
              else
              {

              }
              v7 = v808;
              v130 = v893;
              v132 = v878;
              if ((v147 & 1) == 0)
              {
                v120 = v812;
                v8 = v818;
                v134 = v791;
                goto LABEL_1136;
              }
            }
            v148 = objc_claimAutoreleasedReturnValue(objc_msgSend(v130, "textDataSource"));
            v149 = objc_claimAutoreleasedReturnValue(objc_msgSend(v132, "textDataSource"));
            v150 = (id)v148;
            v151 = (char *)(id)v149;
            v152 = v132;
            v8 = v818;
            v787 = v150;
            v789 = v151;
            if (!(v148 | v149))
              goto LABEL_195;
            if (v150)
              v153 = v149 == 0;
            else
              v153 = 0;
            v154 = v153;
            if (v151)
              v155 = v148 == 0;
            else
              v155 = 0;
            v156 = v151;
            if (v155 || v154)
            {

              v162 = 0;
              v163 = v156;
            }
            else
            {
              v157 = objc_claimAutoreleasedReturnValue(objc_msgSend(v150, "text"));
              v158 = objc_claimAutoreleasedReturnValue(objc_msgSend(v156, "text"));
              v786 = (char *)(id)v157;
              v159 = (id)v158;
              v160 = v159;
              if (!(v157 | v158))
              {

                v152 = v878;
                v130 = v893;
                goto LABEL_195;
              }
              if (v786)
                v167 = v158 == 0;
              else
                v167 = 0;
              v168 = v167;
              if (v159)
                v169 = v157 == 0;
              else
                v169 = 0;
              if (!v169 && (v168 & 1) == 0)
              {
                v170 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "formatStrings"));
                v171 = v160;
                v172 = objc_claimAutoreleasedReturnValue(objc_msgSend(v160, "formatStrings"));
                v173 = (id)v170;
                v174 = (char *)(id)v172;
                v175 = &stru_1011A6B10;
                v772 = v171;
                if (!(v170 | v172))
                {
                  v767 = v173;
                  v750 = v174;

                  v176 = v171;
                  goto LABEL_217;
                }
                if (v173)
                  v405 = v172 == 0;
                else
                  v405 = 0;
                v406 = v405;
                if (v174)
                  v407 = v170 == 0;
                else
                  v407 = 0;
                if (!v407 && (v406 & 1) == 0)
                {
                  v408 = objc_msgSend(v173, "count");
                  if (v408 == objc_msgSend(v174, "count"))
                  {
                    v902 = 0u;
                    v903 = 0u;
                    v900 = 0u;
                    v901 = 0u;
                    v767 = v173;
                    objc = v173;
                    v409 = objc_msgSend(objc, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                    if (v409)
                    {
                      v410 = v409;
                      v411 = 0;
                      v412 = *(_QWORD *)v901;
                      while (2)
                      {
                        for (j = 0; j != v410; j = (char *)j + 1)
                        {
                          if (*(_QWORD *)v901 != v412)
                            objc_enumerationMutation(objc);
                          v414 = *(NSString **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)j);
                          v415 = v174;
                          v416 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v174, "objectAtIndexedSubscript:", (char *)j + v411));
                          LODWORD(v414) = sub_1001761B4(v416, v414, (NSString *)v416);

                          if (!(_DWORD)v414)
                          {
                            v442 = v415;

                            v8 = v818;
                            v11 = v869;
                            v31 = v889;
                            v152 = v878;
                            v173 = v767;
                            goto LABEL_632;
                          }
                          v174 = v415;
                        }
                        v410 = objc_msgSend(objc, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                        v411 += (uint64_t)j;
                        if (v410)
                          continue;
                        break;
                      }
                    }
                    v750 = v174;

                    v8 = v818;
                    v31 = v889;
                    v176 = v171;
LABEL_217:
                    v177 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "separators"));
                    v178 = objc_claimAutoreleasedReturnValue(objc_msgSend(v176, "separators"));
                    v179 = (id)v177;
                    v180 = (id)v178;
                    v181 = &stru_1011A6B30;
                    v152 = v878;
                    obja = v180;
                    if (!(v177 | v178))
                    {
                      v763 = v179;

                      goto LABEL_219;
                    }
                    if (v179)
                      v443 = v178 == 0;
                    else
                      v443 = 0;
                    v444 = v443;
                    if (v180)
                      v445 = v177 == 0;
                    else
                      v445 = 0;
                    v91 = v860;
                    if (v445
                      || (v444 & 1) != 0
                      || (v446 = objc_msgSend(v179, "count"), v446 != objc_msgSend(obja, "count")))
                    {

                      v455 = v179;
                      v11 = v869;
                      v44 = v836;
                    }
                    else
                    {
                      v902 = 0u;
                      v903 = 0u;
                      v900 = 0u;
                      v901 = 0u;
                      v763 = v179;
                      v447 = v179;
                      v448 = objc_msgSend(v447, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                      if (v448)
                      {
                        v449 = v448;
                        v450 = 0;
                        v451 = *(_QWORD *)v901;
                        while (2)
                        {
                          for (k = 0; k != v449; k = (char *)k + 1)
                          {
                            if (*(_QWORD *)v901 != v451)
                              objc_enumerationMutation(v447);
                            v453 = *(NSString **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)k);
                            v454 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(obja, "objectAtIndexedSubscript:", (char *)k + v450));
                            LODWORD(v453) = sub_1001761B4(v454, v453, (NSString *)v454);

                            if (!(_DWORD)v453)
                            {

                              v8 = v818;
                              v11 = v869;
                              v31 = v889;
LABEL_779:
                              v44 = v836;
                              goto LABEL_780;
                            }
                          }
                          v449 = objc_msgSend(v447, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                          v450 += (uint64_t)k;
                          if (v449)
                            continue;
                          break;
                        }
                      }

                      v8 = v818;
                      v31 = v889;
LABEL_219:
                      v182 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "formatTokens"));
                      v183 = objc_claimAutoreleasedReturnValue(objc_msgSend(v772, "formatTokens"));
                      v184 = (id)v182;
                      v185 = (id)v183;
                      v186 = &stru_1011A6B70;
                      v44 = v836;
                      if (!(v182 | v183))
                      {

                        goto LABEL_221;
                      }
                      if (v184)
                        v456 = v183 == 0;
                      else
                        v456 = 0;
                      v457 = v456;
                      if (v185)
                        v458 = v182 == 0;
                      else
                        v458 = 0;
                      if (!v458 && (v457 & 1) == 0)
                      {
                        v459 = objc_msgSend(v184, "count");
                        if (v459 == objc_msgSend(v185, "count"))
                        {
                          v460 = v43;
                          v902 = 0u;
                          v903 = 0u;
                          v900 = 0u;
                          v901 = 0u;
                          v461 = v184;
                          v462 = objc_msgSend(v461, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                          if (v462)
                          {
                            v463 = v462;
                            v464 = 0;
                            v465 = *(_QWORD *)v901;
                            while (2)
                            {
                              for (m = 0; m != v463; m = (char *)m + 1)
                              {
                                if (*(_QWORD *)v901 != v465)
                                  objc_enumerationMutation(v461);
                                v467 = *(GEOServerFormatToken **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)m);
                                v468 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v185, "objectAtIndexedSubscript:", (char *)m + v464));
                                LODWORD(v467) = sub_100176234(v468, v467, (GEOServerFormatToken *)v468);

                                if (!(_DWORD)v467)
                                {

                                  v7 = v808;
                                  v8 = v818;
                                  v11 = v869;
                                  v31 = v889;
                                  v43 = v460;
                                  goto LABEL_779;
                                }
                              }
                              v463 = objc_msgSend(v461, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                              v464 += (uint64_t)m;
                              if (v463)
                                continue;
                              break;
                            }
                          }

                          v8 = v818;
                          v43 = v460;
LABEL_221:
                          v187 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "alternativeString"));
                          v188 = objc_claimAutoreleasedReturnValue(objc_msgSend(v772, "alternativeString"));
                          v189 = v187 | v188;
                          v190 = (id)v187;
                          v191 = (id)v188;
                          if (v189)
                            v747 = objc_msgSend(v190, "isEqual:", v191);
                          else
                            v747 = 1;

                          v7 = v808;
                          v31 = v889;
                          v152 = v878;
                          v130 = v893;
                          if ((v747 & 1) == 0)
                          {
LABEL_196:
                            v162 = 0;
                            v11 = v869;
                            v44 = v836;
                            v91 = v860;
                            goto LABEL_235;
                          }
LABEL_195:
                          v161 = objc_msgSend(v130, "hasRoutingIncidentBadge");
                          if (v161 != objc_msgSend(v152, "hasRoutingIncidentBadge"))
                            goto LABEL_196;
                          v163 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v130, "accessibilityText"));
                          if (v163
                            || (v786 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v152, "accessibilityText"))) != 0)
                          {
                            v164 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v130, "accessibilityText"));
                            v165 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v152, "accessibilityText"));
                            v162 = objc_msgSend(v164, "isEqualToString:", v165);

                            v152 = v878;
                            v11 = v869;
                            v44 = v836;
                            v91 = v860;
                            if (!v163)
                              v163 = v786;
                          }
                          else
                          {
                            v786 = 0;
                            v162 = 1;
                            v11 = v869;
                            v44 = v836;
                            v91 = v860;
                            v163 = 0;
                          }
LABEL_234:

LABEL_235:
                          swift_unknownObjectRelease(v893);

                          swift_unknownObjectRelease(v152);
                          if ((v162 & 1) == 0)
                            goto LABEL_1159;
LABEL_236:
                          if (v91 == 1)
                          {
                            v85 = v885;
LABEL_238:
                            swift_bridgeObjectRelease(v85);
                            swift_bridgeObjectRelease(v44);
                            v36 = v898;
                            goto LABEL_753;
                          }
                          v36 = v898;
                          if (v873)
                          {
                            v192 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v44);
                            v9 = v829;
                          }
                          else
                          {
                            v9 = v829;
                            if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
                              goto LABEL_1184;
                            v192 = *(_QWORD *)(v44 + 40);
                            swift_unknownObjectRetain(v192);
                          }
                          v85 = v885;
                          if (v865 == 1)
                          {
                            swift_bridgeObjectRelease(v885);
                            swift_bridgeObjectRelease(v44);
                            swift_unknownObjectRelease(v192);
                            goto LABEL_754;
                          }
                          if (v855)
                          {
                            v193 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v885);
                          }
                          else
                          {
                            if (*(_QWORD *)((v885 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
                              goto LABEL_1186;
                            v193 = *(_QWORD *)(v885 + 40);
                            swift_unknownObjectRetain(v193);
                          }
                          v88 = (char *)(id)v192;
                          v194 = (char *)(id)v193;
                          v90 = v194;
                          if (!(v192 | v193))
                          {
                            swift_unknownObjectRelease(v88);
                            swift_unknownObjectRelease(v90);
                            v11 = v869;
                            v195 = v860;
                            goto LABEL_359;
                          }
                          if (v88)
                            v196 = v193 == 0;
                          else
                            v196 = 0;
                          v197 = v196;
                          if (v194)
                            v198 = v192 == 0;
                          else
                            v198 = 0;
                          if (v198)
                            goto LABEL_1110;
                          if ((v197 & 1) != 0)
                            goto LABEL_1110;
                          v199 = objc_msgSend(v88, "artworkSourceType");
                          if (v199 != objc_msgSend(v90, "artworkSourceType"))
                            goto LABEL_1110;
                          v200 = objc_msgSend(v88, "artworkUseType");
                          if (v200 != objc_msgSend(v90, "artworkUseType"))
                            goto LABEL_1110;
                          v893 = v88;
                          v201 = objc_claimAutoreleasedReturnValue(objc_msgSend(v88, "shieldDataSource"));
                          v202 = objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "shieldDataSource"));
                          v878 = v90;
                          v100 = (char *)(id)v201;
                          v203 = (char *)(id)v202;
                          v841 = v100;
                          v848 = v203;
                          if (v201 | v202)
                          {
                            if (v100)
                              v204 = v202 == 0;
                            else
                              v204 = 0;
                            v205 = v204;
                            if (v203)
                              v206 = v201 == 0;
                            else
                              v206 = 0;
                            v105 = v203;
                            if (v206)
                              goto LABEL_1113;
                            if (v205)
                              goto LABEL_1113;
                            v106 = objc_msgSend(v100, "shieldType");
                            if (v106 != objc_msgSend(v105, "shieldType"))
                              goto LABEL_1113;
                            v107 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "shieldText"));
                            if (v107
                              || (v853 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldText"))) != 0)
                            {
                              v90 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "shieldText", v742));
                              v106 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldText"));
                              if ((objc_msgSend(v90, "isEqualToString:", v106) & 1) == 0)
                              {
LABEL_1120:

                                if (v107)
                                  v105 = (char *)v107;
                                else
                                  v105 = v853;
                                v7 = v808;
                                goto LABEL_1124;
                              }
                              v207 = 1;
                            }
                            else
                            {
                              v853 = 0;
                              v207 = 0;
                            }
                            v208 = v100;
                            v209 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "shieldColorString", v742));
                            if (v209
                              || (v812 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldColorString"))) != 0)
                            {
                              v210 = v107;
                              v211 = v43;
                              v212 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v208, "shieldColorString"));
                              v213 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v105, "shieldColorString"));
                              v214 = objc_msgSend(v212, "isEqualToString:", v213);

                              if (v209)
                              {

                                v8 = v818;
                                v43 = v211;
                                v107 = v210;
                                if (v207)
                                  goto LABEL_285;
                                goto LABEL_286;
                              }
                              v8 = v818;
                              v43 = v211;
                              v107 = v210;
                              v404 = v812;
                            }
                            else
                            {
                              v404 = 0;
                              v214 = 1;
                            }

                            if ((v207 & 1) != 0)
                            {
LABEL_285:

                            }
LABEL_286:
                            v31 = v889;
                            v88 = v841;

                            v90 = v848;
                            if (v107)
                            {

                            }
                            else
                            {

                            }
                            v7 = v808;
                            if ((v214 & 1) == 0)
                              goto LABEL_1125;
                          }
                          v215 = objc_claimAutoreleasedReturnValue(objc_msgSend(v893, "iconDataSource", v742));
                          v216 = objc_claimAutoreleasedReturnValue(objc_msgSend(v878, "iconDataSource"));
                          v217 = (char *)(id)v215;
                          v218 = (char *)(id)v216;
                          v90 = v218;
                          if (v215 | v216)
                          {
                            if (v217)
                              v219 = v216 == 0;
                            else
                              v219 = 0;
                            v220 = v219;
                            if (v218)
                              v221 = v215 == 0;
                            else
                              v221 = 0;
                            if (v221
                              || (v220 & 1) != 0
                              || (v222 = objc_msgSend(v217, "iconType"),
                                  v222 != objc_msgSend(v90, "iconType"))
                              || (v223 = objc_msgSend(v217, "cartoID"),
                                  v223 != objc_msgSend(v90, "cartoID"))
                              || (v224 = objc_msgSend(v217, "defaultTransitType"),
                                  v224 != objc_msgSend(v90, "defaultTransitType"))
                              || (v225 = objc_msgSend(v217, "iconAttributeKey"),
                                  v225 != objc_msgSend(v90, "iconAttributeKey")))
                            {
                              v230 = v217;
                              v235 = v90;
                              goto LABEL_1166;
                            }
                            v226 = objc_msgSend(v217, "iconAttributeValue");
                            v227 = objc_msgSend(v90, "iconAttributeValue");

                            if (v226 != v227)
                              goto LABEL_1167;
                          }
                          v228 = objc_claimAutoreleasedReturnValue(objc_msgSend(v893, "iconFallbackShieldDataSource"));
                          v229 = objc_claimAutoreleasedReturnValue(objc_msgSend(v878, "iconFallbackShieldDataSource"));
                          v230 = (id)v228;
                          v231 = (char *)(id)v229;
                          v792 = v230;
                          v853 = v231;
                          v803 = v217;
                          v812 = v90;
                          if (v228 | v229)
                          {
                            if (v230)
                              v232 = v229 == 0;
                            else
                              v232 = 0;
                            v233 = v232;
                            if (v231)
                              v234 = v228 == 0;
                            else
                              v234 = 0;
                            v235 = v231;
                            if (v234
                              || v233
                              || (v236 = objc_msgSend(v230, "shieldType"), v236 != objc_msgSend(v235, "shieldType")))
                            {

                              v740 = v235;
                              goto LABEL_1165;
                            }
                            v237 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v230, "shieldText"));
                            if (!v237)
                            {
                              v789 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v235, "shieldText"));
                              if (!v789)
                              {
                                v789 = 0;
                                v238 = 0;
                                goto LABEL_324;
                              }
                            }
                            v90 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v230, "shieldText"));
                            v236 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v235, "shieldText"));
                            if ((objc_msgSend(v90, "isEqualToString:", v236) & 1) != 0)
                            {
                              v238 = 1;
LABEL_324:
                              v239 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v230, "shieldColorString"));
                              if (v239
                                || (v31 = (_QWORD *)objc_claimAutoreleasedReturnValue(objc_msgSend(v853, "shieldColorString"))) != 0)
                              {
                                v240 = v43;
                                v241 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v230, "shieldColorString"));
                                v242 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v853, "shieldColorString"));
                                v243 = objc_msgSend(v241, "isEqualToString:", v242);

                                if (v239)
                                {

                                  v8 = v818;
                                  v43 = v240;
                                  if (v238)
                                    goto LABEL_328;
                                  goto LABEL_329;
                                }
                                v8 = v818;
                                v43 = v240;
                              }
                              else
                              {
                                v243 = 1;
                              }

                              if ((v238 & 1) != 0)
                              {
LABEL_328:

                              }
LABEL_329:
                              v31 = v889;
                              v90 = v812;
                              if (v237)
                              {
                                v244 = v792;

                                v235 = v853;
                                v217 = v803;
                                v7 = v808;
                                if ((v243 & 1) == 0)
                                  goto LABEL_1161;
                                goto LABEL_334;
                              }
                              v244 = v792;

                              v235 = v853;
                              v217 = v803;
                              v7 = v808;
                              if ((v243 & 1) != 0)
                                goto LABEL_334;
LABEL_1161:
                              v230 = v244;
                            }
                            else
                            {

                              v740 = v789;
                              if (v237)
                                v740 = (char *)v237;
                              v7 = v808;
                              v90 = v812;
LABEL_1165:

                            }
LABEL_1166:

LABEL_1167:
                            swift_unknownObjectRelease(v893);
                            swift_unknownObjectRelease(v878);

                            v88 = v217;
                            goto LABEL_1138;
                          }
LABEL_334:
                          v245 = v893;
                          v246 = objc_claimAutoreleasedReturnValue(objc_msgSend(v893, "textDataSource"));
                          v247 = v878;
                          v248 = objc_claimAutoreleasedReturnValue(objc_msgSend(v878, "textDataSource"));
                          v249 = (id)v246;
                          v250 = (char *)(id)v248;
                          v787 = v249;
                          v789 = v250;
                          if (!(v246 | v248))
                          {
LABEL_335:
                            v251 = objc_msgSend(v245, "hasRoutingIncidentBadge");
                            if (v251 != objc_msgSend(v247, "hasRoutingIncidentBadge"))
                              goto LABEL_336;
                            v261 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v245, "accessibilityText"));
                            if (v261
                              || (v786 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v247, "accessibilityText"))) != 0)
                            {
                              v262 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v245, "accessibilityText"));
                              v263 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v247, "accessibilityText"));
                              v252 = objc_msgSend(v262, "isEqualToString:", v263);

                              v247 = v878;
                              v11 = v869;
                              v44 = v836;
                              v195 = v860;
                              if (!v261)
                                v261 = v786;
                            }
                            else
                            {
                              HIDWORD(v786) = 0;
                              v252 = 1;
                              v11 = v869;
                              v44 = v836;
                              v195 = v860;
                              v261 = 0;
                            }
LABEL_357:

LABEL_358:
                            swift_unknownObjectRelease(v893);

                            swift_unknownObjectRelease(v247);
                            if ((v252 & 1) == 0)
                              goto LABEL_1159;
LABEL_359:
                            v85 = v885;
                            if (v195 == 2)
                              goto LABEL_238;
                            v768 = v44 + 32;
                            v773 = (_QWORD *)(v44 & 0xFFFFFFFFFFFFFF8);
                            v264 = 2;
                            while (2)
                            {
                              if (v873)
                              {
                                v266 = specialized _ArrayBuffer._getElementSlowPath(_:)(v264, v44);
                                v9 = v829;
                              }
                              else
                              {
                                v9 = v829;
                                if (v264 >= v773[2])
                                  goto LABEL_1182;
                                v266 = *(_QWORD *)(v768 + 8 * v264);
                                swift_unknownObjectRetain(v266);
                              }
                              v267 = v264 + 1;
                              if (__OFADD__(v264, 1))
                                goto LABEL_1179;
                              if (v264 == v865)
                              {
                                v85 = v885;
                                swift_bridgeObjectRelease(v885);
                                swift_bridgeObjectRelease(v44);
                                swift_unknownObjectRelease(v266);
                                v36 = v898;
                                goto LABEL_754;
                              }
                              if (v855)
                              {
                                v268 = specialized _ArrayBuffer._getElementSlowPath(_:)(v264, v885);
                              }
                              else
                              {
                                if (v264 >= *(_QWORD *)((v885 & 0xFFFFFFFFFFFFFF8) + 0x10))
                                  goto LABEL_1183;
                                v268 = *(_QWORD *)(v885 + 32 + 8 * v264);
                                swift_unknownObjectRetain(v268);
                              }
                              v88 = (char *)(id)v266;
                              v269 = (char *)(id)v268;
                              v270 = v269;
                              if (!(v266 | v268))
                              {
                                swift_unknownObjectRelease(v88);
                                swift_unknownObjectRelease(v270);
                                v11 = v869;
                                v265 = v860;
                                v8 = v818;
                                goto LABEL_362;
                              }
                              if (v88)
                                v271 = v268 == 0;
                              else
                                v271 = 0;
                              v272 = v271;
                              if (v269)
                                v273 = v266 == 0;
                              else
                                v273 = 0;
                              if (v273
                                || (v272 & 1) != 0
                                || (v274 = objc_msgSend(v88, "artworkSourceType"),
                                    v274 != objc_msgSend(v270, "artworkSourceType"))
                                || (v275 = objc_msgSend(v88, "artworkUseType"),
                                    v275 != objc_msgSend(v270, "artworkUseType")))
                              {
                                swift_unknownObjectRelease(v88);
                                swift_unknownObjectRelease(v270);
                                v90 = v270;
                                v8 = v818;
                                goto LABEL_1158;
                              }
                              v793 = v267;
                              v894 = v88;
                              v276 = objc_claimAutoreleasedReturnValue(objc_msgSend(v88, "shieldDataSource"));
                              v277 = objc_claimAutoreleasedReturnValue(objc_msgSend(v270, "shieldDataSource"));
                              v278 = (char *)(id)v276;
                              v279 = (char *)(id)v277;
                              v280 = v270;
                              v879 = v270;
                              v849 = v279;
                              v853 = v278;
                              if (v276 | v277)
                              {
                                if (v278)
                                  v281 = v277 == 0;
                                else
                                  v281 = 0;
                                v282 = v281;
                                if (v279)
                                  v283 = v276 == 0;
                                else
                                  v283 = 0;
                                v284 = v279;
                                if (v283
                                  || v282
                                  || (v285 = objc_msgSend(v278, "shieldType"), v285 != objc_msgSend(v284, "shieldType")))
                                {

LABEL_1143:
                                  v90 = v849;
                                  v293 = v853;
LABEL_1144:
                                  swift_unknownObjectRelease(v894);
                                  swift_unknownObjectRelease(v280);

                                  v88 = v293;
                                  v8 = v818;
LABEL_1158:

                                  v11 = v869;
LABEL_1159:
                                  swift_bridgeObjectRelease(v897);
                                  swift_bridgeObjectRelease(v871);
                                  swift_bridgeObjectRelease(v896);
                                  swift_bridgeObjectRelease(v888);
                                  swift_bridgeObjectRelease(v898);
                                  swift_bridgeObjectRelease(v31);
                                  swift_bridgeObjectRelease(v884);
                                  swift_bridgeObjectRelease(v870);
                                  swift_bridgeObjectRelease(v830);
                                  swift_bridgeObjectRelease_n(v44, 2);
                                  swift_unknownObjectRelease(v822);
                                  swift_bridgeObjectRelease(v43);
                                  swift_bridgeObjectRelease(v797);
                                  swift_bridgeObjectRelease(v834);
                                  swift_bridgeObjectRelease_n(v885, 2);
                                  swift_unknownObjectRelease(v825);
                                  swift_bridgeObjectRelease(v890);
                                  v10 = v819;
                                  a2 = v754;
                                  v9 = v829;
LABEL_1160:
                                  a1 = v753;
LABEL_4:
                                  swift_bridgeObjectRelease(v10);
                                  swift_bridgeObjectRelease(v11);
LABEL_5:
                                  swift_bridgeObjectRelease(v8);
                                  swift_unknownObjectRelease(v9);
LABEL_6:
                                  v4 = v755;
LABEL_7:
                                  if (++v7 != v811)
                                    goto LABEL_8;
                                  goto LABEL_1169;
                                }
                                v286 = objc_claimAutoreleasedReturnValue(objc_msgSend(v278, "shieldText"));
                                if (v286
                                  || (v812 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v284, "shieldText"))) != 0)
                                {
                                  v278 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v278, "shieldText", v742));
                                  v285 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v284, "shieldText"));
                                  if ((objc_msgSend(v278, "isEqualToString:", v285) & 1) == 0)
                                  {

                                    if (v286)
                                      v284 = (void *)v286;
                                    else
                                      v284 = v812;
                                    v280 = v270;
                                    goto LABEL_1143;
                                  }
                                  v842 = 1;
                                }
                                else
                                {
                                  v812 = 0;
                                  v842 = 0;
                                }
                                v287 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v853, "shieldColorString", v742));
                                if (v287
                                  || (v31 = (_QWORD *)objc_claimAutoreleasedReturnValue(objc_msgSend(v284, "shieldColorString"))) != 0)
                                {
                                  v288 = v43;
                                  v289 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v853, "shieldColorString"));
                                  v290 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v284, "shieldColorString"));
                                  v291 = objc_msgSend(v289, "isEqualToString:", v290);

                                  if (v287)
                                  {

                                    v43 = v288;
                                    v44 = v836;
                                    v292 = (void *)v286;
                                    if (v842)
                                      goto LABEL_408;
                                    goto LABEL_409;
                                  }
                                  v43 = v288;
                                  v44 = v836;
                                }
                                else
                                {
                                  v291 = 1;
                                }
                                v292 = (void *)v286;

                                if ((v842 & 1) != 0)
                                {
LABEL_408:

                                }
LABEL_409:
                                v31 = v889;
                                v280 = v879;
                                v293 = v853;
                                if (v292)
                                {

                                  v90 = v849;
                                  v7 = v808;
                                  if ((v291 & 1) == 0)
                                    goto LABEL_1144;
                                }
                                else
                                {

                                  v90 = v849;
                                  v7 = v808;
                                  if ((v291 & 1) == 0)
                                    goto LABEL_1144;
                                }
                              }
                              v294 = objc_claimAutoreleasedReturnValue(objc_msgSend(v894, "iconDataSource", v742));
                              v295 = v280;
                              v296 = objc_claimAutoreleasedReturnValue(objc_msgSend(v280, "iconDataSource"));
                              v88 = (char *)(id)v294;
                              v843 = (char *)(id)v296;
                              if (v294 | v296)
                              {
                                if (v88)
                                  v297 = v296 == 0;
                                else
                                  v297 = 0;
                                v298 = v297;
                                if (v843)
                                  v299 = v294 == 0;
                                else
                                  v299 = 0;
                                if (v299
                                  || (v298 & 1) != 0
                                  || (v300 = objc_msgSend(v88, "iconType"),
                                      v300 != objc_msgSend(v843, "iconType"))
                                  || (v301 = objc_msgSend(v88, "cartoID"),
                                      v301 != objc_msgSend(v843, "cartoID"))
                                  || (v302 = objc_msgSend(v88, "defaultTransitType"),
                                      v302 != objc_msgSend(v843, "defaultTransitType"))
                                  || (v303 = objc_msgSend(v88, "iconAttributeKey"),
                                      v303 != objc_msgSend(v843, "iconAttributeKey")))
                                {
                                  v313 = v843;
                                  v308 = v88;
                                  goto LABEL_1156;
                                }
                                v304 = objc_msgSend(v88, "iconAttributeValue");
                                v305 = objc_msgSend(v843, "iconAttributeValue");

                                if (v304 != v305)
                                  goto LABEL_1157;
                              }
                              v306 = objc_claimAutoreleasedReturnValue(objc_msgSend(v894, "iconFallbackShieldDataSource"));
                              v307 = objc_claimAutoreleasedReturnValue(objc_msgSend(v295, "iconFallbackShieldDataSource"));
                              v308 = (char *)(id)v306;
                              v309 = (char *)(id)v307;
                              v804 = v308;
                              v812 = v88;
                              if (v306 | v307)
                              {
                                if (v308)
                                  v310 = v307 == 0;
                                else
                                  v310 = 0;
                                v311 = v310;
                                if (v309)
                                  v312 = v306 == 0;
                                else
                                  v312 = 0;
                                v313 = v309;
                                if (v312
                                  || v311
                                  || (v314 = objc_msgSend(v308, "shieldType"), v314 != objc_msgSend(v313, "shieldType")))
                                {

                                  v739 = v313;
                                  goto LABEL_1155;
                                }
                                v315 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldText"));
                                if (v315
                                  || (v789 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v313, "shieldText"))) != 0)
                                {
                                  v295 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldText"));
                                  v314 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v313, "shieldText"));
                                  if ((objc_msgSend(v295, "isEqualToString:", v314) & 1) == 0)
                                  {

                                    v739 = v789;
                                    if (v315)
                                      v739 = v315;
                                    v295 = v879;
LABEL_1155:

LABEL_1156:
LABEL_1157:
                                    swift_unknownObjectRelease(v894);
                                    swift_unknownObjectRelease(v295);

                                    v90 = v843;
                                    v8 = v818;
                                    goto LABEL_1158;
                                  }
                                  v316 = 1;
                                }
                                else
                                {
                                  v789 = 0;
                                  v316 = 0;
                                }
                                v317 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldColorString"));
                                if (v317
                                  || (v787 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v313, "shieldColorString"))) != 0)
                                {
                                  v318 = v43;
                                  v319 = objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldColorString"));
                                  v320 = v313;
                                  v321 = (void *)v319;
                                  v322 = v320;
                                  v323 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v320, "shieldColorString"));
                                  v324 = objc_msgSend(v321, "isEqualToString:", v323);

                                  if (v317)
                                  {

                                    v43 = v318;
                                    v44 = v836;
                                    v88 = v812;
                                    v313 = v322;
                                    if (v316)
                                      goto LABEL_451;
                                    goto LABEL_452;
                                  }
                                  v43 = v318;
                                  v44 = v836;
                                  v313 = v322;
                                  v345 = v787;
                                }
                                else
                                {
                                  v345 = 0;
                                  v324 = 1;
                                }

                                v88 = v812;
                                if ((v316 & 1) != 0)
                                {
LABEL_451:

                                }
LABEL_452:
                                v31 = v889;
                                v295 = v879;

                                if (v315)
                                {

                                }
                                else
                                {

                                }
                                v7 = v808;
                                v309 = v313;
                                if ((v324 & 1) == 0)
                                {
                                  v308 = v804;
                                  goto LABEL_1156;
                                }
                              }
                              v786 = v309;
                              v325 = v894;
                              v326 = objc_claimAutoreleasedReturnValue(objc_msgSend(v894, "textDataSource"));
                              v327 = objc_claimAutoreleasedReturnValue(objc_msgSend(v295, "textDataSource"));
                              objb = (id)(v326 | v327);
                              v328 = v295;
                              v329 = (id)v326;
                              v330 = (char *)(id)v327;
                              v8 = v818;
                              v787 = v329;
                              v789 = v330;
                              if (!(v326 | v327))
                                goto LABEL_470;
                              if (v329)
                                v331 = v327 == 0;
                              else
                                v331 = 0;
                              v332 = v331;
                              if (v330)
                                v333 = v326 == 0;
                              else
                                v333 = 0;
                              v334 = v330;
                              if (v333 || v332)
                              {

                                v341 = 0;
                                v342 = v334;
                              }
                              else
                              {
                                v335 = objc_claimAutoreleasedReturnValue(objc_msgSend(v329, "text"));
                                v336 = objc_claimAutoreleasedReturnValue(objc_msgSend(v334, "text"));
                                objb = (id)v335;
                                v337 = (id)v336;
                                if (!(v335 | v336))
                                {
                                  v338 = v337;

                                  v328 = v879;
                                  v325 = v894;
                                  goto LABEL_470;
                                }
                                if (objb)
                                  v346 = v336 == 0;
                                else
                                  v346 = 0;
                                v347 = v346;
                                v748 = v337;
                                if (v337)
                                  v348 = v335 == 0;
                                else
                                  v348 = 0;
                                if (!v348 && (v347 & 1) == 0)
                                {
                                  v349 = objc_claimAutoreleasedReturnValue(objc_msgSend(objb, "formatStrings"));
                                  v350 = objc_claimAutoreleasedReturnValue(objc_msgSend(v748, "formatStrings"));
                                  v744 = (id)v349;
                                  v351 = (id)v350;
                                  v352 = &stru_1011A6B10;
                                  v265 = v860;
                                  if (!(v349 | v350))
                                  {
                                    v746 = v351;

                                    goto LABEL_492;
                                  }
                                  if (v744)
                                    v367 = v350 == 0;
                                  else
                                    v367 = 0;
                                  v368 = v367;
                                  if (v351)
                                    v369 = v349 == 0;
                                  else
                                    v369 = 0;
                                  v342 = (char *)v351;
                                  if (v369
                                    || (v368 & 1) != 0
                                    || (v370 = objc_msgSend(v744, "count"), v370 != objc_msgSend(v351, "count")))
                                  {

                                    v11 = v869;
                                    v340 = v879;
LABEL_534:

                                    v341 = 0;
                                    goto LABEL_508;
                                  }
                                  v746 = v351;
                                  v902 = 0u;
                                  v903 = 0u;
                                  v900 = 0u;
                                  v901 = 0u;
                                  v371 = v744;
                                  v372 = objc_msgSend(v371, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                  if (v372)
                                  {
                                    v373 = v372;
                                    v374 = 0;
                                    v375 = *(_QWORD *)v901;
                                    while (2)
                                    {
                                      for (n = 0; n != v373; n = (char *)n + 1)
                                      {
                                        if (*(_QWORD *)v901 != v375)
                                          objc_enumerationMutation(v371);
                                        v377 = *(NSString **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)n);
                                        v378 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v746, "objectAtIndexedSubscript:", (char *)n + v374));
                                        LODWORD(v377) = sub_1001761B4(v378, v377, (NSString *)v378);

                                        if (!(_DWORD)v377)
                                        {
                                          v342 = (char *)v746;

                                          v8 = v818;
                                          v11 = v869;
                                          v31 = v889;
                                          v340 = v879;
                                          v265 = v860;
                                          goto LABEL_534;
                                        }
                                      }
                                      v373 = objc_msgSend(v371, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                      v374 += (uint64_t)n;
                                      if (v373)
                                        continue;
                                      break;
                                    }
                                  }

                                  v8 = v818;
                                  v31 = v889;
                                  v265 = v860;
LABEL_492:
                                  v353 = objc_claimAutoreleasedReturnValue(objc_msgSend(objb, "separators"));
                                  v354 = objc_claimAutoreleasedReturnValue(objc_msgSend(v748, "separators"));
                                  v742 = v353 | v354;
                                  v743 = (id)v353;
                                  v355 = (id)v354;
                                  v356 = &stru_1011A6B30;
                                  v745 = v355;
                                  if (!(v353 | v354))
                                  {

                                    goto LABEL_494;
                                  }
                                  if (v743)
                                    v379 = v354 == 0;
                                  else
                                    v379 = 0;
                                  v380 = v379;
                                  if (v355)
                                    v381 = v353 == 0;
                                  else
                                    v381 = 0;
                                  v382 = v743;
                                  if (v381
                                    || (v380 & 1) != 0
                                    || (v383 = objc_msgSend(v743, "count"), v383 != objc_msgSend(v355, "count")))
                                  {

                                    v11 = v869;
                                    v340 = v879;
                                  }
                                  else
                                  {
                                    v902 = 0u;
                                    v903 = 0u;
                                    v900 = 0u;
                                    v901 = 0u;
                                    v384 = v743;
                                    v385 = objc_msgSend(v384, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                    if (v385)
                                    {
                                      v386 = v385;
                                      v387 = 0;
                                      v388 = *(_QWORD *)v901;
                                      while (2)
                                      {
                                        for (ii = 0; ii != v386; ii = (char *)ii + 1)
                                        {
                                          if (*(_QWORD *)v901 != v388)
                                            objc_enumerationMutation(v384);
                                          v390 = *(NSString **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)ii);
                                          v391 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v745, "objectAtIndexedSubscript:", (char *)ii + v387, v742));
                                          LODWORD(v390) = sub_1001761B4(v391, v390, (NSString *)v391);

                                          if (!(_DWORD)v390)
                                          {

                                            v8 = v818;
LABEL_585:
                                            v11 = v869;
                                            v31 = v889;
                                            goto LABEL_586;
                                          }
                                        }
                                        v386 = objc_msgSend(v384, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                        v387 += (uint64_t)ii;
                                        if (v386)
                                          continue;
                                        break;
                                      }
                                    }

                                    v8 = v818;
                                    v31 = v889;
LABEL_494:
                                    v357 = objc_claimAutoreleasedReturnValue(objc_msgSend(objb, "formatTokens", v742));
                                    v358 = objc_claimAutoreleasedReturnValue(objc_msgSend(v748, "formatTokens"));
                                    v359 = (id)v357;
                                    v360 = (id)v358;
                                    v361 = &stru_1011A6B70;
                                    if (!(v357 | v358))
                                    {

                                      goto LABEL_496;
                                    }
                                    if (v359)
                                      v392 = v358 == 0;
                                    else
                                      v392 = 0;
                                    v393 = v392;
                                    if (v360)
                                      v394 = v357 == 0;
                                    else
                                      v394 = 0;
                                    if (!v394 && (v393 & 1) == 0)
                                    {
                                      v395 = objc_msgSend(v359, "count");
                                      if (v395 == objc_msgSend(v360, "count"))
                                      {
                                        v814 = v43;
                                        v902 = 0u;
                                        v903 = 0u;
                                        v900 = 0u;
                                        v901 = 0u;
                                        v396 = v359;
                                        v397 = objc_msgSend(v396, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                        if (v397)
                                        {
                                          v398 = v397;
                                          v399 = 0;
                                          v400 = *(_QWORD *)v901;
                                          while (2)
                                          {
                                            for (jj = 0; jj != v398; jj = (char *)jj + 1)
                                            {
                                              if (*(_QWORD *)v901 != v400)
                                                objc_enumerationMutation(v396);
                                              v402 = *(GEOServerFormatToken **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)jj);
                                              v403 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v360, "objectAtIndexedSubscript:", (char *)jj + v399));
                                              LODWORD(v402) = sub_100176234(v403, v402, (GEOServerFormatToken *)v403);

                                              if (!(_DWORD)v402)
                                              {

                                                v7 = v808;
                                                v43 = v814;
                                                v8 = v818;
                                                goto LABEL_585;
                                              }
                                            }
                                            v398 = objc_msgSend(v396, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                            v399 += (uint64_t)jj;
                                            if (v398)
                                              continue;
                                            break;
                                          }
                                        }

                                        v43 = v814;
                                        v8 = v818;
LABEL_496:
                                        v362 = objc_claimAutoreleasedReturnValue(objc_msgSend(objb, "alternativeString"));
                                        v363 = objc_claimAutoreleasedReturnValue(objc_msgSend(v748, "alternativeString"));
                                        v364 = v362 | v363;
                                        v365 = (id)v362;
                                        v366 = (id)v363;
                                        if (v364)
                                          LODWORD(v742) = objc_msgSend(v365, "isEqual:", v366);
                                        else
                                          LODWORD(v742) = 1;

                                        v7 = v808;
                                        v31 = v889;
                                        v328 = v879;
                                        v325 = v894;
                                        if ((v742 & 1) == 0)
                                        {
                                          v341 = 0;
                                          v11 = v869;
                                          v340 = v879;
                                          v265 = v860;
                                          goto LABEL_509;
                                        }
LABEL_470:
                                        v339 = objc_msgSend(v325, "hasRoutingIncidentBadge", v742);
                                        v340 = v328;
                                        if (v339 != objc_msgSend(v328, "hasRoutingIncidentBadge"))
                                        {
                                          v341 = 0;
                                          v11 = v869;
                                          v265 = v860;
LABEL_509:

                                          swift_unknownObjectRelease(v894);
                                          swift_unknownObjectRelease(v340);

                                          v267 = v793;
                                          if (!v341)
                                            goto LABEL_1159;
LABEL_362:
                                          v264 = v267;
                                          v14 = v267 == v265;
                                          v85 = v885;
                                          if (v14)
                                            goto LABEL_238;
                                          continue;
                                        }
                                        v342 = (char *)objc_claimAutoreleasedReturnValue(objc_msgSend(v325, "accessibilityText"));
                                        if (v342
                                          || (objb = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v328, "accessibilityText"))) != 0)
                                        {
                                          v343 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v325, "accessibilityText"));
                                          v344 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v328, "accessibilityText"));
                                          v341 = objc_msgSend(v343, "isEqualToString:", v344);

                                          v340 = v879;
                                          v11 = v869;
                                          v265 = v860;
                                          if (!v342)
                                            v342 = (char *)objb;
                                        }
                                        else
                                        {
                                          v341 = 1;
                                          v11 = v869;
                                          v265 = v860;
                                          v342 = 0;
                                        }
LABEL_508:

                                        goto LABEL_509;
                                      }
                                    }

                                    v7 = v808;
                                    v11 = v869;
LABEL_586:
                                    v340 = v879;
                                    v265 = v860;
                                    v382 = v743;
                                  }

                                  v341 = 0;
                                  v342 = (char *)v745;
                                  goto LABEL_508;
                                }

                                v342 = (char *)v748;
                                v341 = 0;
                              }
                              break;
                            }
                            v11 = v869;
                            v340 = v879;
                            v265 = v860;
                            goto LABEL_508;
                          }
                          if (v249)
                            v253 = v248 == 0;
                          else
                            v253 = 0;
                          v254 = v253;
                          if (v250)
                            v255 = v246 == 0;
                          else
                            v255 = 0;
                          v256 = v250;
                          if (v255 || v254)
                          {

                            v252 = 0;
                            v261 = v256;
                          }
                          else
                          {
                            v257 = objc_claimAutoreleasedReturnValue(objc_msgSend(v249, "text"));
                            v258 = objc_claimAutoreleasedReturnValue(objc_msgSend(v256, "text"));
                            v786 = (char *)(id)v257;
                            v259 = (id)v258;
                            v260 = v259;
                            if (!(v257 | v258))
                            {

                              v247 = v878;
                              v245 = v893;
                              goto LABEL_335;
                            }
                            if (v786)
                              v417 = v258 == 0;
                            else
                              v417 = 0;
                            v418 = v417;
                            if (v259)
                              v419 = v257 == 0;
                            else
                              v419 = 0;
                            if (!v419 && (v418 & 1) == 0)
                            {
                              v420 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "formatStrings"));
                              v421 = v260;
                              v422 = objc_claimAutoreleasedReturnValue(objc_msgSend(v260, "formatStrings"));
                              v423 = (id)v420;
                              v424 = (char *)(id)v422;
                              v425 = &stru_1011A6B10;
                              v774 = v421;
                              if (!(v420 | v422))
                              {
                                v769 = v423;
                                v751 = v424;

                                v426 = v421;
                                goto LABEL_625;
                              }
                              if (v423)
                                v469 = v422 == 0;
                              else
                                v469 = 0;
                              v470 = v469;
                              if (v424)
                                v471 = v420 == 0;
                              else
                                v471 = 0;
                              if (!v471 && (v470 & 1) == 0)
                              {
                                v472 = objc_msgSend(v423, "count");
                                if (v472 == objc_msgSend(v424, "count"))
                                {
                                  v902 = 0u;
                                  v903 = 0u;
                                  v900 = 0u;
                                  v901 = 0u;
                                  v769 = v423;
                                  obje = v423;
                                  v473 = objc_msgSend(obje, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                  if (v473)
                                  {
                                    v474 = v473;
                                    v475 = 0;
                                    v476 = *(_QWORD *)v901;
                                    while (2)
                                    {
                                      for (kk = 0; kk != v474; kk = (char *)kk + 1)
                                      {
                                        if (*(_QWORD *)v901 != v476)
                                          objc_enumerationMutation(obje);
                                        v478 = *(NSString **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)kk);
                                        v479 = v424;
                                        v480 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v424, "objectAtIndexedSubscript:", (char *)kk + v475));
                                        LODWORD(v478) = sub_1001761B4(v480, v478, (NSString *)v480);

                                        if (!(_DWORD)v478)
                                        {
                                          v481 = v479;

                                          v8 = v818;
                                          v11 = v869;
                                          v31 = v889;
                                          v247 = v878;
                                          v423 = v769;
                                          goto LABEL_712;
                                        }
                                        v424 = v479;
                                      }
                                      v474 = objc_msgSend(obje, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                      v475 += (uint64_t)kk;
                                      if (v474)
                                        continue;
                                      break;
                                    }
                                  }
                                  v751 = v424;

                                  v8 = v818;
                                  v31 = v889;
                                  v426 = v421;
LABEL_625:
                                  v427 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "separators"));
                                  v428 = objc_claimAutoreleasedReturnValue(objc_msgSend(v426, "separators"));
                                  v429 = (id)v427;
                                  v430 = (id)v428;
                                  v431 = &stru_1011A6B30;
                                  v247 = v878;
                                  objd = v430;
                                  if (!(v427 | v428))
                                  {
                                    v764 = v429;

                                    goto LABEL_627;
                                  }
                                  if (v429)
                                    v482 = v428 == 0;
                                  else
                                    v482 = 0;
                                  v483 = v482;
                                  if (v430)
                                    v484 = v427 == 0;
                                  else
                                    v484 = 0;
                                  v195 = v860;
                                  if (v484
                                    || (v483 & 1) != 0
                                    || (v485 = objc_msgSend(v429, "count"), v485 != objc_msgSend(objd, "count")))
                                  {

                                    v497 = v429;
                                    v11 = v869;
                                    v44 = v836;
                                  }
                                  else
                                  {
                                    v902 = 0u;
                                    v903 = 0u;
                                    v900 = 0u;
                                    v901 = 0u;
                                    v764 = v429;
                                    v486 = v429;
                                    v487 = objc_msgSend(v486, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                    if (v487)
                                    {
                                      v488 = v487;
                                      v489 = 0;
                                      v490 = *(_QWORD *)v901;
                                      while (2)
                                      {
                                        for (mm = 0; mm != v488; mm = (char *)mm + 1)
                                        {
                                          if (*(_QWORD *)v901 != v490)
                                            objc_enumerationMutation(v486);
                                          v492 = *(NSString **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)mm);
                                          v493 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(objd, "objectAtIndexedSubscript:", (char *)mm + v489));
                                          LODWORD(v492) = sub_1001761B4(v493, v492, (NSString *)v493);

                                          if (!(_DWORD)v492)
                                          {

                                            v8 = v818;
                                            v11 = v869;
                                            v31 = v889;
LABEL_789:
                                            v44 = v836;
                                            goto LABEL_790;
                                          }
                                        }
                                        v488 = objc_msgSend(v486, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                        v489 += (uint64_t)mm;
                                        if (v488)
                                          continue;
                                        break;
                                      }
                                    }

                                    v8 = v818;
                                    v31 = v889;
LABEL_627:
                                    v432 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "formatTokens"));
                                    v433 = objc_claimAutoreleasedReturnValue(objc_msgSend(v774, "formatTokens"));
                                    v434 = (id)v432;
                                    v435 = (id)v433;
                                    v436 = &stru_1011A6B70;
                                    v44 = v836;
                                    if (!(v432 | v433))
                                    {

LABEL_629:
                                      v437 = objc_claimAutoreleasedReturnValue(objc_msgSend(v786, "alternativeString"));
                                      v438 = objc_claimAutoreleasedReturnValue(objc_msgSend(v774, "alternativeString"));
                                      v439 = v437 | v438;
                                      v440 = (id)v437;
                                      v441 = (id)v438;
                                      if (v439)
                                        v749 = objc_msgSend(v440, "isEqual:", v441);
                                      else
                                        v749 = 1;

                                      v7 = v808;
                                      v31 = v889;
                                      v247 = v878;
                                      v245 = v893;
                                      if ((v749 & 1) != 0)
                                        goto LABEL_335;
LABEL_336:
                                      v252 = 0;
                                      v11 = v869;
                                      v44 = v836;
                                      v195 = v860;
                                      goto LABEL_358;
                                    }
                                    if (v434)
                                      v502 = v433 == 0;
                                    else
                                      v502 = 0;
                                    v503 = v502;
                                    if (v435)
                                      v504 = v432 == 0;
                                    else
                                      v504 = 0;
                                    if (!v504 && (v503 & 1) == 0)
                                    {
                                      v505 = objc_msgSend(v434, "count");
                                      if (v505 == objc_msgSend(v435, "count"))
                                      {
                                        v506 = v43;
                                        v902 = 0u;
                                        v903 = 0u;
                                        v900 = 0u;
                                        v901 = 0u;
                                        v507 = v434;
                                        v508 = objc_msgSend(v507, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                        if (v508)
                                        {
                                          v509 = v508;
                                          v510 = 0;
                                          v511 = *(_QWORD *)v901;
                                          while (2)
                                          {
                                            for (nn = 0; nn != v509; nn = (char *)nn + 1)
                                            {
                                              if (*(_QWORD *)v901 != v511)
                                                objc_enumerationMutation(v507);
                                              v513 = *(GEOServerFormatToken **)(*((_QWORD *)&v900 + 1) + 8 * (_QWORD)nn);
                                              v514 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v435, "objectAtIndexedSubscript:", (char *)nn + v510));
                                              LODWORD(v513) = sub_100176234(v514, v513, (GEOServerFormatToken *)v514);

                                              if (!(_DWORD)v513)
                                              {

                                                v7 = v808;
                                                v8 = v818;
                                                v11 = v869;
                                                v31 = v889;
                                                v43 = v506;
                                                goto LABEL_789;
                                              }
                                            }
                                            v509 = objc_msgSend(v507, "countByEnumeratingWithState:objects:count:", &v900, v899, 16);
                                            v510 += (uint64_t)nn;
                                            if (v509)
                                              continue;
                                            break;
                                          }
                                        }

                                        v8 = v818;
                                        v43 = v506;
                                        goto LABEL_629;
                                      }
                                    }

                                    v7 = v808;
                                    v11 = v869;
LABEL_790:
                                    v247 = v878;
                                    v195 = v860;
                                    v497 = v764;
                                  }

                                  v252 = 0;
                                  v261 = (char *)objd;
                                  goto LABEL_357;
                                }
                              }

                              v11 = v869;
                              v481 = v424;
                              v247 = v878;
LABEL_712:

                              v252 = 0;
                              v261 = v481;
                              v44 = v836;
LABEL_356:
                              v195 = v860;
                              goto LABEL_357;
                            }

                            v252 = 0;
                            v261 = (char *)v260;
                          }
                          v11 = v869;
                          v44 = v836;
                          v247 = v878;
                          goto LABEL_356;
                        }
                      }

                      v7 = v808;
                      v11 = v869;
LABEL_780:
                      v152 = v878;
                      v91 = v860;
                      v455 = v763;
                    }

                    v162 = 0;
                    v163 = (char *)obja;
                    goto LABEL_234;
                  }
                }

                v11 = v869;
                v442 = v174;
                v152 = v878;
LABEL_632:

                v162 = 0;
                v163 = v442;
                v44 = v836;
LABEL_233:
                v91 = v860;
                goto LABEL_234;
              }

              v162 = 0;
              v163 = (char *)v160;
            }
            v11 = v869;
            v44 = v836;
            v152 = v878;
            goto LABEL_233;
          }
        }
        swift_bridgeObjectRelease(v85);
        swift_bridgeObjectRelease(v44);
        swift_unknownObjectRelease(v86);
        goto LABEL_752;
      }
    }
    else
    {
      v84 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v44);
      v85 = v885;
      swift_bridgeObjectRetain(v885);
      if (v84)
        goto LABEL_85;
    }
    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v44);
LABEL_752:
    v11 = v869;
LABEL_753:
    v9 = v829;
LABEL_754:
    swift_bridgeObjectRelease(v830);
    v501 = v44;
    v39 = v757 + 1;
    swift_bridgeObjectRelease(v501);
    swift_unknownObjectRelease(v822);
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v797);
    swift_bridgeObjectRelease(v834);
    swift_bridgeObjectRelease(v85);
    swift_unknownObjectRelease(v825);
    swift_bridgeObjectRelease(v890);
    swift_bridgeObjectRelease(v819);
    v37 = v871 + 4;
    v38 = v897;
    if (v757 + 1 == v756)
      goto LABEL_794;
  }
  swift_bridgeObjectRetain(v890);
  swift_unknownObjectRetain(v825);
  swift_bridgeObjectRetain(v885);
  swift_bridgeObjectRetain(v834);
  v53 = 0;
  v54 = 0;
  v813 = v43;
  while ((unint64_t)v54 < *(_QWORD *)(v52 + 16))
  {
    v55 = (_QWORD *)(v43 + v53);
    v56 = *(_QWORD *)(v43 + v53 + 32);
    v57 = *(_QWORD *)(v43 + v53 + 40);
    v58 = *(_QWORD *)(v43 + v53 + 48);
    v59 = *(_QWORD *)(v43 + v53 + 56);
    v61 = *(_QWORD *)(v43 + v53 + 64);
    v60 = v55[9];
    v877 = v55[10];
    v892 = v55[11];
    v864 = v55[12];
    v847 = (void *)v55[13];
    v854 = (char *)v55[14];
    v62 = (_QWORD *)(v52 + v53);
    v63 = *(_QWORD *)(v52 + v53 + 32);
    v64 = *(_QWORD *)(v52 + v53 + 40);
    v65 = *(_QWORD *)(v52 + v53 + 48);
    v66 = *(_QWORD *)(v52 + v53 + 56);
    v68 = *(_QWORD *)(v52 + v53 + 64);
    v67 = v62[9];
    v69 = v62[11];
    v872 = v62[10];
    v859 = v62[12];
    v840 = v62[13];
    v853 = (char *)v62[14];
    if (v56 != v63 || v57 != v64)
    {
      v801 = v61;
      v70 = v62[9];
      v71 = v62[11];
      v72 = v60;
      v73 = v58;
      v74 = v54;
      v75 = v65;
      v76 = v59;
      v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v56, v57, v63, v64, 0);
      v59 = v76;
      v65 = v75;
      v54 = v74;
      v58 = v73;
      v60 = v72;
      v69 = v71;
      v67 = v70;
      v61 = v801;
      if ((v77 & 1) == 0)
      {
LABEL_3:
        swift_bridgeObjectRelease(v830);
        swift_bridgeObjectRelease(v836);
        swift_unknownObjectRelease(v822);
        swift_bridgeObjectRelease(v813);
        swift_bridgeObjectRelease(v797);
        swift_bridgeObjectRelease(v834);
        swift_bridgeObjectRelease(v885);
        swift_unknownObjectRelease(v825);
        swift_bridgeObjectRelease(v890);
        swift_bridgeObjectRelease(v819);
        swift_bridgeObjectRelease(v897);
        swift_bridgeObjectRelease(v871);
        swift_bridgeObjectRelease(v896);
        swift_bridgeObjectRelease(v888);
        swift_bridgeObjectRelease(v898);
        swift_bridgeObjectRelease(v889);
        swift_bridgeObjectRelease(v884);
        a1 = v753;
        a2 = v754;
        v7 = v808;
        v8 = v818;
        v9 = v829;
        v11 = v869;
        v10 = v870;
        goto LABEL_4;
      }
    }
    if (v59)
    {
      if (!v66)
        goto LABEL_3;
      if (v58 != v65 || v59 != v66)
      {
        v78 = v66;
        v79 = v60;
        v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v59, v65, v78, 0);
        v60 = v79;
        if ((v80 & 1) == 0)
          goto LABEL_3;
      }
    }
    else if (v66)
    {
      goto LABEL_3;
    }
    if ((v61 != v68 || v60 != v67) && (_stringCompareWithSmolCheck(_:_:expecting:)(v61, v60, v68, v67, 0) & 1) == 0)
      goto LABEL_3;
    if (v892)
    {
      if (!v69
        || (v877 != v872 || v892 != v69)
        && ((_stringCompareWithSmolCheck(_:_:expecting:)(v877, v892, v872, v69, 0) & 1) == 0
         || (_stringCompareWithSmolCheck(_:_:expecting:)(v877, v892, v872, v69, 0) & 1) == 0))
      {
        goto LABEL_3;
      }
    }
    else if (v69)
    {
      goto LABEL_3;
    }
    if (v864 != v859 || v854 != v853)
      goto LABEL_3;
    if ((objc_msgSend(v847, "isEqual:", v840) & 1) == 0)
    {
      swift_bridgeObjectRelease(v897);
      swift_bridgeObjectRelease(v871);
      swift_bridgeObjectRelease(v896);
      swift_bridgeObjectRelease(v888);
      swift_bridgeObjectRelease(v898);
      swift_bridgeObjectRelease(v889);
      swift_bridgeObjectRelease(v884);
      swift_bridgeObjectRelease(v870);
      swift_bridgeObjectRelease(v830);
      swift_bridgeObjectRelease(v836);
      swift_unknownObjectRelease(v822);
      swift_bridgeObjectRelease(v813);
      swift_bridgeObjectRelease(v797);
      swift_bridgeObjectRelease(v834);
      swift_bridgeObjectRelease(v885);
      swift_unknownObjectRelease(v825);
      v736 = v890;
LABEL_1107:
      swift_bridgeObjectRelease(v736);
      v8 = v818;
      v10 = v819;
      a1 = v753;
      a2 = v754;
      v7 = v808;
      v9 = v829;
      v11 = v869;
      goto LABEL_4;
    }
    ++v54;
    v53 += 88;
    v43 = v813;
    v31 = v889;
    v52 = v890;
    v36 = v898;
    v44 = v836;
    if (v812 == v54)
      goto LABEL_73;
  }
  __break(1u);
LABEL_1172:
  __break(1u);
LABEL_1173:
  __break(1u);
LABEL_1174:
  __break(1u);
LABEL_1175:
  __break(1u);
LABEL_1176:
  __break(1u);
LABEL_1177:
  __break(1u);
LABEL_1178:
  __break(1u);
LABEL_1179:
  __break(1u);
LABEL_1180:
  __break(1u);
LABEL_1181:
  __break(1u);
LABEL_1182:
  __break(1u);
LABEL_1183:
  __break(1u);
LABEL_1184:
  __break(1u);
LABEL_1185:
  __break(1u);
LABEL_1186:
  __break(1u);
}

_QWORD *sub_10016DEEC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[6];
  v6 = (void *)a1[7];
  swift_bridgeObjectRelease(a1[2]);
  swift_bridgeObjectRelease(v2);
  swift_unknownObjectRelease(v3);
  swift_release(v4);
  swift_release(v5);

  return a1;
}

unint64_t sub_10016DF58()
{
  unint64_t result;

  result = qword_10149CD68;
  if (!qword_10149CD68)
  {
    result = swift_getWitnessTable(byte_100E2F6B8, &type metadata for NearbyTransitFilterHorizontalScrollView);
    atomic_store(result, (unint64_t *)&qword_10149CD68);
  }
  return result;
}

void destroy for NearbyTransitListView(uint64_t a1)
{
  swift_release(*(_QWORD *)a1);
  swift_release(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 40));
  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(*(_QWORD *)(a1 + 56));

}

uint64_t initializeWithCopy for NearbyTransitListView(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  v6 = a2[4];
  v7 = a2[5];
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = a2[6];
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  v11 = (void *)a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v10;
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_unknownObjectRetain(v7);
  swift_retain(v8);
  swift_retain(v9);
  v12 = v11;
  return a1;
}

uint64_t *assignWithCopy for NearbyTransitListView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;

  v4 = *a1;
  v5 = *a2;
  *a1 = *a2;
  swift_retain(v5);
  swift_release(v4);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a1[5];
  v13 = a2[5];
  a1[5] = v13;
  swift_unknownObjectRetain(v13);
  swift_unknownObjectRelease(v12);
  v14 = a1[6];
  v15 = a2[6];
  a1[6] = v15;
  swift_retain(v15);
  swift_release(v14);
  v16 = a2[7];
  v17 = a1[7];
  a1[7] = v16;
  swift_retain(v16);
  swift_release(v17);
  *((_BYTE *)a1 + 64) = *((_BYTE *)a2 + 64);
  v18 = (void *)a1[9];
  v19 = (void *)a2[9];
  a1[9] = (uint64_t)v19;
  v20 = v19;

  a1[10] = a2[10];
  return a1;
}

__n128 initializeWithTake for NearbyTransitDeparturesViewModel(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitListView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  swift_release(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 40));
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v7);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitDeparturesViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitDeparturesViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitListView()
{
  return &type metadata for NearbyTransitListView;
}

uint64_t destroy for NearbyTransitFilterHorizontalScrollView(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 56));
  swift_release(*(_QWORD *)(a1 + 64));
  return swift_release(*(_QWORD *)(a1 + 72));
}

uint64_t initializeWithCopy for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v12 = v3;
  swift_retain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_unknownObjectRetain(v9);
  swift_retain(v10);
  swift_retain(v11);
  return a1;
}

uint64_t assignWithCopy for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_retain(v8);
  swift_release(v7);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  swift_retain(v9);
  swift_release(v10);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v16;
  swift_unknownObjectRetain(v16);
  swift_unknownObjectRelease(v15);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v18;
  swift_retain(v18);
  swift_release(v17);
  v19 = *(_QWORD *)(a2 + 72);
  v20 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v19;
  swift_retain(v19);
  swift_release(v20);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitFilterHorizontalScrollView(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(*(_QWORD *)(a1 + 16));
  v5 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v6);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 56));
  v7 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v8);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitFilterHorizontalScrollView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitFilterHorizontalScrollView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitFilterHorizontalScrollView()
{
  return &type metadata for NearbyTransitFilterHorizontalScrollView;
}

uint64_t destroy for NearbyTransitErrorView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_release(a1[5]);
  return swift_release(a1[6]);
}

uint64_t initializeWithCopy for NearbyTransitErrorView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v7;
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v7);
  swift_retain(v4);
  swift_retain(v5);
  return a1;
}

_QWORD *assignWithCopy for NearbyTransitErrorView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[5];
  v9 = a1[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a2[6];
  v11 = a1[6];
  a1[6] = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

__n128 initializeWithTake for NearbyTransitErrorView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for NearbyTransitErrorView(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_release(a1[5]);
  v6 = a1[6];
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitErrorView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitErrorView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitErrorView()
{
  return &type metadata for NearbyTransitErrorView;
}

uint64_t sub_10016E8E8()
{
  return sub_1000D3A50(&qword_10149CD70, &qword_10149CD78, sub_100167FF4, (uint64_t (*)(void))sub_10016809C);
}

uint64_t sub_10016E91C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A00C, 1);
}

uint64_t sub_10016E92C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101069FE4, 1);
}

uint64_t sub_10016E93C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_101069FBC, 1);
}

_QWORD *sub_10016E94C(_QWORD *a1)
{
  swift_release(*a1);
  return a1;
}

uint64_t sub_10016E974@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10016E99C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

unint64_t sub_10016E9C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149CDB0;
  if (!qword_10149CDB0)
  {
    v1 = sub_10000E5D4(&qword_10149CDA8);
    v2[0] = &protocol witness table for Text;
    v2[1] = sub_100010D70(&qword_10149CDB8, &qword_10149CDC0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CDB0);
  }
  return result;
}

uint64_t sub_10016EA44()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 105, 7);
}

uint64_t sub_10016EAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001583B0(*(_QWORD *)(v1 + 16), v1 + 24, a1);
}

uint64_t sub_10016EAB4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 72);
  swift_retain(*(_QWORD *)(a1 + 64));
  swift_retain(v8);
  v9 = v2;
  swift_retain(v3);
  swift_retain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_unknownObjectRetain(v7);
  return a1;
}

uint64_t sub_10016EB38(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = sub_10000E5D4(a2);
    v9[0] = sub_100010D70(a3, a4, (const char *)&protocol conformance descriptor for HStack<A>);
    v9[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016EBB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 97, 7);
}

uint64_t sub_10016EC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, __n128 a7@<Q0>)
{
  uint64_t v7;

  return sub_1001585E0(a1, a2, a3, a4, a5, v7 + 16, a6, a7);
}

uint64_t sub_10016EC1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016EC40(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*a1, a1[1], a1[2], a1[3], a1[4]);
}

unint64_t sub_10016EC70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[4];

  result = qword_10149CE20;
  if (!qword_10149CE20)
  {
    v1 = sub_10000E5D4(&qword_10149CE10);
    v3[0] = sub_10000E5D4(&qword_10149CD88);
    v3[1] = &type metadata for FilterBarButtonStyle;
    v3[2] = sub_100010D70(&qword_10149CDD0, &qword_10149CD88, (const char *)&protocol conformance descriptor for Button<A>);
    v3[3] = sub_10016ED50();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CE20);
  }
  return result;
}

unint64_t sub_10016ED50()
{
  unint64_t result;

  result = qword_10149CE28;
  if (!qword_10149CE28)
  {
    result = swift_getWitnessTable(byte_100E2F868, &type metadata for FilterBarButtonStyle);
    atomic_store(result, (unint64_t *)&qword_10149CE28);
  }
  return result;
}

uint64_t sub_10016ED94()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));
  swift_release(*(_QWORD *)(v0 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 152));
  return swift_deallocObject(v0, 160, 7);
}

void sub_10016EE10()
{
  uint64_t v0;

  sub_100158A70(v0 + 16, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(void **)(v0 + 152));
}

uint64_t sub_10016EE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100165594(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

unint64_t sub_10016EE38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_10149CEA0;
  if (!qword_10149CEA0)
  {
    v1 = sub_10000E5D4(&qword_10149CEA8);
    v2 = sub_10000BC84(&qword_10149CEB0, type metadata accessor for NearbyTransitGroupView, (uint64_t)&unk_100E2F818);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ForEach<A, B, C>, v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149CEA0);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitGroupView(uint64_t a1)
{
  return sub_100021D9C(a1, (uint64_t *)&unk_10149CF80, (uint64_t)&nominal type descriptor for NearbyTransitGroupView);
}

unint64_t sub_10016EEC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[4];

  result = qword_10149CEC0;
  if (!qword_10149CEC0)
  {
    v1 = sub_10000E5D4(&qword_10149CE80);
    v3[0] = sub_10000E5D4(&qword_10149CE70);
    v3[1] = type metadata accessor for InsetGroupedListStyle(255);
    v3[2] = sub_100010D70(&qword_10149CEB8, &qword_10149CE70, (const char *)&protocol conformance descriptor for List<A, B>);
    v3[3] = &protocol witness table for InsetGroupedListStyle;
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.listStyle<A>(_:)>>, 1);
    v2[1] = sub_100010D70((unint64_t *)&unk_101495E10, &qword_10149CED0, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CEC0);
  }
  return result;
}

uint64_t sub_10016EFAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_10016EFD0@<D0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10016579C(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_10016EFD8()
{
  unint64_t result;

  result = qword_10149CEE8;
  if (!qword_10149CEE8)
  {
    result = swift_getWitnessTable("9k7", &type metadata for NearbyTransitGroupViewModel);
    atomic_store(result, (unint64_t *)&qword_10149CEE8);
  }
  return result;
}

uint64_t sub_10016F01C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 128));
  return swift_deallocObject(v0, 136, 7);
}

void sub_10016F090()
{
  uint64_t v0;

  sub_10016F120(*(_QWORD *)(v0 + 120));
}

uint64_t *sub_10016F098(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = (id)a1[9];
  swift_retain(v2);
  swift_retain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_unknownObjectRetain(v6);
  swift_retain(v7);
  swift_retain(v8);
  return a1;
}

void sub_10016F120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  Class isa;
  double v37;
  id v38;
  _QWORD *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  double v47;
  NSString v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  _QWORD *v69;
  char v70[80];
  char v71[8];
  char v72[8];

  v2 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v2);
  v53 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(_QWORD *)(a1 + 16);
  if (v56)
  {
    v55 = a1 + 32;
    v52 = a1;
    swift_bridgeObjectRetain(a1);
    v4 = 0;
    v5 = _swiftEmptyArrayStorage;
    v54 = xmmword_100E22F70;
    v64 = xmmword_100E22F40;
    do
    {
      v6 = (_QWORD *)(v55 + (v4 << 6));
      v7 = v6[4];
      v8 = *(_QWORD *)(v7 + 16);
      if (v8)
      {
        v62 = v5;
        v63 = v4;
        v9 = v6[1];
        v10 = v6[5];
        v58 = v6[3];
        swift_bridgeObjectRetain(v58);
        swift_bridgeObjectRetain_n(v7, 2);
        v57 = v10;
        swift_bridgeObjectRetain(v10);
        v59 = v9;
        swift_bridgeObjectRetain(v9);
        v60 = v7;
        v11 = (uint64_t *)(v7 + 56);
        v61 = v8;
        v12 = _swiftEmptyArrayStorage;
        do
        {
          if (*((_BYTE *)v11 + 8) == 1)
          {
            v16 = *(v11 - 2);
            v65 = *(v11 - 3);
            v17 = *(v11 - 1);
            v18 = *v11;
            v19 = v11[2];
            v20 = *((unsigned __int8 *)v11 + 24);
            v21 = v11[4];
            v22 = v11[5];
            v66 = *((unsigned __int8 *)v11 + 48);
            swift_bridgeObjectRetain(v16);
            swift_bridgeObjectRetain(v17);
            swift_unknownObjectRetain(v18);
            swift_bridgeObjectRetain(v19);
            swift_bridgeObjectRetain(v22);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
            v69 = v12;
            v68 = v20;
            v67 = v21;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_100132564(0, v12[2] + 1, 1);
              v12 = v69;
            }
            v14 = v12[2];
            v13 = v12[3];
            if (v14 >= v13 >> 1)
            {
              sub_100132564(v13 > 1, v14 + 1, 1);
              v12 = v69;
            }
            v12[2] = v14 + 1;
            v15 = &v12[10 * v14];
            v15[4] = v65;
            v15[5] = v16;
            v15[6] = v17;
            v15[7] = v18;
            *((_BYTE *)v15 + 64) = 1;
            v15[9] = v19;
            *((_BYTE *)v15 + 80) = v68;
            v15[11] = v67;
            v15[12] = v22;
            *((_BYTE *)v15 + 104) = v66;
          }
          v11 += 10;
          --v8;
        }
        while (v8);
        swift_bridgeObjectRelease(v57);
        swift_bridgeObjectRelease(v58);
        swift_bridgeObjectRelease(v59);
        swift_bridgeObjectRelease_n(v60, 2);
        v4 = v63;
        v5 = v62;
        v8 = v61;
      }
      else
      {
        v12 = _swiftEmptyArrayStorage;
      }
      v24 = v12[2];
      swift_release();
      v25 = sub_100008B04(&qword_10149CEF0);
      v26 = swift_allocObject(v25, 48, 7);
      *(_OWORD *)(v26 + 16) = v54;
      v27 = sub_100008B04((uint64_t *)&unk_10149CEF8);
      inited = swift_initStackObject(v27, v72);
      *(_OWORD *)(inited + 16) = v64;
      *(_QWORD *)(inited + 32) = 0x73656E696CLL;
      *(_QWORD *)(inited + 40) = 0xE500000000000000;
      *(_QWORD *)(inited + 48) = v8 - v24;
      *(_QWORD *)(v26 + 32) = sub_10000A248(inited);
      v29 = swift_initStackObject(v27, v71);
      *(_OWORD *)(v29 + 16) = v64;
      strcpy((char *)(v29 + 32), "pinned_lines");
      *(_BYTE *)(v29 + 45) = 0;
      *(_WORD *)(v29 + 46) = -5120;
      *(_QWORD *)(v29 + 48) = v24;
      *(_QWORD *)(v26 + 40) = sub_10000A248(v29);
      v30 = sub_100008B04(&qword_10149BAF0);
      v31 = swift_initStackObject(v30, v70);
      *(_OWORD *)(v31 + 16) = v64;
      *(_QWORD *)(v31 + 32) = 0x70756F7267;
      *(_QWORD *)(v31 + 40) = 0xE500000000000000;
      *(_QWORD *)(v31 + 72) = sub_100008B04(&qword_10149CF08);
      *(_QWORD *)(v31 + 48) = v26;
      v32 = sub_100009624(v31);
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
        v5 = sub_1000A8B18(0, v5[2] + 1, 1, v5);
      v34 = v5[2];
      v33 = v5[3];
      if (v34 >= v33 >> 1)
        v5 = sub_1000A8B18((_QWORD *)(v33 > 1), v34 + 1, 1, v5);
      ++v4;
      v5[2] = v34 + 1;
      v5[v34 + 4] = v32;
    }
    while (v4 != v56);
    swift_bridgeObjectRelease(v52);
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  v35 = (void *)objc_opt_self(NSJSONSerialization);
  sub_100008B04((uint64_t *)&unk_10149CF10);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v37 = swift_bridgeObjectRelease(v5).n128_u64[0];
  v69 = 0;
  v38 = objc_msgSend(v35, "dataWithJSONObject:options:error:", isa, 0, &v69, v37);

  v39 = v69;
  if (!v38)
  {
    v49 = v39;
    v50 = _convertNSErrorToError(_:)(v39);

    swift_willThrow(v51);
    swift_errorRelease(v50);
    v46 = (void *)objc_opt_self(GEOAPPortal);
    goto LABEL_25;
  }
  v40 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v38);
  v42 = v41;

  v43 = v53;
  static String.Encoding.utf8.getter();
  String.init(data:encoding:)(v40, v42, v43);
  v45 = v44;
  sub_100036B4C(v40, v42);
  v46 = (void *)objc_opt_self(GEOAPPortal);
  if (!v45)
  {
LABEL_25:
    v48 = 0;
    goto LABEL_26;
  }
  v48 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v47 = swift_bridgeObjectRelease(v45).n128_u64[0];
LABEL_26:
  objc_msgSend(v46, "captureUserAction:target:value:", 21, 44, v48, v47);

}

uint64_t *sub_10016F728(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  sub_10016F7B4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_10016F7B4(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_10016F7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a5);
    swift_bridgeObjectRelease(a6);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FilterBarButtonStyle(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FilterBarButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterBarButtonStyle()
{
  return &type metadata for FilterBarButtonStyle;
}

uint64_t *sub_10016F8A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  id v28;
  uint64_t v29;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100008B04(&qword_10149CF20);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)v4 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
    *((_QWORD *)v10 + 3) = v13;
    v14 = *((_QWORD *)v11 + 4);
    v15 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 4) = v14;
    *((_QWORD *)v10 + 5) = v15;
    v10[48] = v11[48];
    v16 = *(uint64_t *)((char *)a2 + v9);
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *(uint64_t *)((char *)v4 + v9) = v16;
    v17 = a3[7];
    v18 = a3[8];
    v19 = (uint64_t *)((char *)v4 + v17);
    v20 = (char *)a2 + v17;
    v22 = *(void **)v20;
    v21 = *((_QWORD *)v20 + 1);
    *v19 = v22;
    v19[1] = v21;
    v23 = (char *)v4 + v18;
    v24 = (char *)a2 + v18;
    *v23 = *v24;
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    v25 = a3[9];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    *v26 = *v27;
    *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v15);
    v28 = v22;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10016F9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[4]);
  swift_bridgeObjectRelease(v5[5]);

  swift_release();
  return swift_release();
}

uint64_t sub_10016FA80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v6 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_QWORD *)(v9 + 24) = v12;
  v13 = *(_QWORD *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = v13;
  *(_QWORD *)(v9 + 40) = v14;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v15 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(a1 + v8) = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v16);
  v19 = a2 + v16;
  v21 = *(void **)v19;
  v20 = *(_QWORD *)(v19 + 8);
  *v18 = v21;
  v18[1] = v20;
  v22 = a1 + v17;
  v23 = a2 + v17;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  v24 = a3[9];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  v27 = v21;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10016FB98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  v12 = *(_QWORD *)(v9 + 24);
  v13 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(v9 + 32);
  v15 = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v8 + 32) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(v9 + 40);
  v17 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = a2 + v18;
  v21 = *(void **)(a1 + v18);
  v22 = *(void **)(a2 + v18);
  *v19 = v22;
  v23 = v22;

  v19[1] = *(_QWORD *)(v20 + 8);
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_BYTE *)v25 = *(_BYTE *)v26;
  *(_QWORD *)(v25 + 8) = *(_QWORD *)(v26 + 8);
  swift_retain();
  swift_release();
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_BYTE *)v28 = *(_BYTE *)v29;
  *(_QWORD *)(v28 + 8) = *(_QWORD *)(v29 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10016FD0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v13 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10016FDA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(v9 + 24);
  v13 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(v8 + 32);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  v16 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(void **)(a1 + v16);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);

  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  *(_BYTE *)v21 = *(_BYTE *)v22;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  swift_release();
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_BYTE *)v24 = *(_BYTE *)v25;
  *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
  swift_release();
  return a1;
}

uint64_t sub_10016FED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016FEDC);
}

uint64_t sub_10016FEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100171C90(a1, a2, a3, &qword_10149CF20);
}

uint64_t sub_10016FEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016FEF4);
}

uint64_t sub_10016FEF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100171D28(a1, a2, a3, a4, &qword_10149CF20);
}

void sub_10016FF00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_100064AF0(319, (unint64_t *)&unk_10149CF90, (uint64_t (*)(void))sub_1000627A8, (uint64_t)&type metadata for Double);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "@";
    v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[3] = &unk_100E2F800;
    v4[4] = &unk_100E2F800;
    v4[5] = &unk_100E2F800;
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
  }
}

uint64_t sub_10016FFA4()
{
  return sub_100010D70(&qword_10149CFD0, &qword_10149CFD8, (const char *)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_10016FFD0()
{
  return sub_100010D70(&qword_10149CFE0, &qword_10149CFE8, byte_100E2D3E0);
}

unint64_t sub_100170000()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[4];

  result = qword_10149CFF0;
  if (!qword_10149CFF0)
  {
    v1 = sub_10000E5D4(&qword_10149CFF8);
    v3[0] = sub_10000E5D4(&qword_10149CE80);
    v3[1] = &type metadata for Color;
    v3[2] = sub_10016EEC8();
    v3[3] = &protocol witness table for Color;
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.scrollContentBackground<A>(_:)>>, 1);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149CFF0);
  }
  return result;
}

uint64_t sub_1001700C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A0F0, 1);
}

uint64_t sub_1001700D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A0C8, 1);
}

uint64_t sub_1001700E0()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100170100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10016829C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

uint64_t sub_10017012C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100170154(_QWORD *a1)
{
  __n128 v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tintColor.setter(v1);
}

uint64_t sub_10017017C()
{
  return sub_10002067C(&qword_10149D0A0, &qword_10149D0A8, (uint64_t (*)(void))sub_1001701A0, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_1001701A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D0B0;
  if (!qword_10149D0B0)
  {
    v1 = sub_10000E5D4(&qword_10149D0B8);
    v2[0] = sub_100170224();
    v2[1] = sub_100010D70(&qword_10149D0F0, &qword_10149D0F8, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D0B0);
  }
  return result;
}

unint64_t sub_100170224()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D0C0;
  if (!qword_10149D0C0)
  {
    v1 = sub_10000E5D4(&qword_10149D0C8);
    v2[0] = sub_100010D70(&qword_10149D0D0, &qword_10149D0D8, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[1] = sub_100010D70(&qword_10149D0E0, &qword_10149D0E8, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D0C0);
  }
  return result;
}

uint64_t sub_1001702C4(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NearbyTransitGroupView(0) - 8) + 80);
  return sub_100165058(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_100170310()
{
  unint64_t result;

  result = qword_10149D120;
  if (!qword_10149D120)
  {
    result = swift_getWitnessTable(byte_100E311F8, &type metadata for NearbyTransitLinesSectionViewModel);
    atomic_store(result, (unint64_t *)&qword_10149D120);
  }
  return result;
}

uint64_t sub_100170354@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1001626C8(v1[3], v1[4], v1[5], v1[6], a1);
}

unint64_t sub_100170380()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D148;
  if (!qword_10149D148)
  {
    v1 = sub_10000E5D4(&qword_10149D140);
    v2[0] = sub_100172CC0(&qword_10149D150, &qword_10149D158, &qword_10149D160, &qword_10149D168);
    v2[1] = sub_100010D70(&qword_10149D0E0, &qword_10149D0E8, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D148);
  }
  return result;
}

uint64_t sub_100170428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for NearbyTransitGroupView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (_QWORD *)(v7 + *(int *)(v1 + 20));
  swift_bridgeObjectRelease(v9[1]);
  swift_bridgeObjectRelease(v9[3]);
  swift_bridgeObjectRelease(v9[4]);
  swift_bridgeObjectRelease(v9[5]);

  swift_release();
  swift_release();
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001704FC()
{
  return sub_10006EC34(type metadata accessor for NearbyTransitGroupView, (uint64_t (*)(uint64_t))sub_100162A38);
}

uint64_t sub_100170510@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_100162AC0(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_10017051C()
{
  return sub_10002067C(&qword_10149D190, &qword_10149D198, (uint64_t (*)(void))sub_100170540, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_100170540()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D1A0;
  if (!qword_10149D1A0)
  {
    v1 = sub_10000E5D4(&qword_10149D1A8);
    v2[0] = sub_10000BC84((unint64_t *)&unk_10149D1B0, type metadata accessor for NearbyTransitCollapsedLinesView, (uint64_t)&unk_100E2FC70);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D1A0);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitCollapsedLinesView(uint64_t a1)
{
  return sub_100021D9C(a1, qword_10149D348, (uint64_t)&nominal type descriptor for NearbyTransitCollapsedLinesView);
}

uint64_t sub_1001705D8()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1001705F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10016829C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_10017061C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1001650CC(*(uint64_t **)(v1 + 24), a1);
}

unint64_t sub_100170624()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  unint64_t v5;
  _QWORD v6[2];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = qword_10149D1C8;
  if (!qword_10149D1C8)
  {
    v1 = sub_10000E5D4(&qword_10149D1C0);
    v2 = sub_10000E5D4(&qword_10149D1D0);
    v3 = sub_10000E5D4(&qword_10149D1D8);
    v7 = type metadata accessor for NearbyTransitLineSectionView(255);
    v8 = sub_10000E5D4(&qword_10149D1E0);
    v9 = sub_10000BC84(&qword_10149D1E8, type metadata accessor for NearbyTransitLineSectionView, (uint64_t)&unk_100E2FC20);
    v10 = sub_100010D70(&qword_10149D1F0, &qword_10149D1E0, (const char *)&protocol conformance descriptor for Button<A>);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.contextMenu<A>(_:)>>, 1);
    v5 = sub_10017078C();
    v7 = v2;
    v8 = v3;
    v9 = OpaqueTypeConformance2;
    v10 = v5;
    v6[0] = swift_getOpaqueTypeConformance2(&v7, &opaque type descriptor for <<opaque return type of View.swipeActions<A>(edge:allowsFullSwipe:content:)>>, 1);
    v6[1] = sub_100010D70(&qword_10149D0E0, &qword_10149D0E8, (const char *)&protocol conformance descriptor for _TraitWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v6);
    atomic_store(result, (unint64_t *)&qword_10149D1C8);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitLineSectionView(uint64_t a1)
{
  return sub_100021D9C(a1, (uint64_t *)&unk_10149D3F0, (uint64_t)&nominal type descriptor for NearbyTransitLineSectionView);
}

unint64_t sub_10017078C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D1F8;
  if (!qword_10149D1F8)
  {
    v1 = sub_10000E5D4(&qword_10149D1D8);
    v2[0] = sub_100010D70(&qword_10149D200, &qword_10149D208, (const char *)&protocol conformance descriptor for Button<A>);
    v2[1] = sub_100010D70(&qword_10149D210, &qword_10149D218, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D1F8);
  }
  return result;
}

uint64_t sub_100170828()
{
  uint64_t v0;

  return sub_100163724(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_100170838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100163884(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t *sub_100170848(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = a1[11];
  v11 = a1[10];
  v3 = a1[12];
  v4 = a1[13];
  v5 = a1[14];
  v6 = a1[15];
  v7 = a1[16];
  v8 = a1[17];
  v9 = a1[18];
  sub_1001708FC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  sub_1001708FC(v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1001708FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    swift_unknownObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    return swift_bridgeObjectRelease(a9);
  }
  return result;
}

id sub_10017095C()
{
  return sub_100170BA4(255, (uint64_t)&unk_1011A6860, (uint64_t)&unk_10149D268, 256);
}

uint64_t sub_100170978()
{
  return sub_100163D00();
}

uint64_t sub_100170980@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001709A8(_QWORD *a1)
{
  __n128 v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tint.setter(v1);
}

uint64_t sub_1001709D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001709F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1014940CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000DD08;
  return sub_10002BFA0(a1, v4, v5, v7, v6);
}

uint64_t sub_100170A74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for NearbyTransitGroupView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 17) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  v8 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (_QWORD *)(v7 + *(int *)(v1 + 20));
  swift_bridgeObjectRelease(v9[1]);
  swift_bridgeObjectRelease(v9[3]);
  swift_bridgeObjectRelease(v9[4]);
  swift_bridgeObjectRelease(v9[5]);

  swift_release();
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 64));
  return swift_deallocObject(v0, v6 + 73, v5);
}

id sub_100170B88()
{
  return sub_100170BA4(254, (uint64_t)&unk_1011A68B0, (uint64_t)&unk_10149D270, 253);
}

id sub_100170BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for NearbyTransitGroupView(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_100163B04(*(_BYTE *)(v4 + 16), v4 + v10, v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8), a1, a2, a3, a4);
}

uint64_t sub_100170C24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_100008B04((uint64_t *)&unk_10149D230);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_100170C68()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_unknownObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100170C9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1014940CC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000C0E0;
  return sub_10002BFA0(a1, v4, v5, v7, v6);
}

uint64_t *sub_100170D14(uint64_t *a1)
{
  sub_100170D64(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

uint64_t sub_100170D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a6);
    swift_unknownObjectRelease(a10);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a8);
  }
  return result;
}

uint64_t sub_100170DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for NearbyTransitGroupView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  v8 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (_QWORD *)(v7 + *(int *)(v1 + 20));
  swift_bridgeObjectRelease(v9[1]);
  swift_bridgeObjectRelease(v9[3]);
  swift_bridgeObjectRelease(v9[4]);
  swift_bridgeObjectRelease(v9[5]);

  swift_release();
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100170EB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NearbyTransitGroupView(0) - 8) + 80);
  return sub_1001623EC(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_100170EF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100162574(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t type metadata accessor for NearbyTransitGroupIncidentsView(uint64_t a1)
{
  return sub_100021D9C(a1, qword_10149D498, (uint64_t)&nominal type descriptor for NearbyTransitGroupIncidentsView);
}

uint64_t sub_100170F1C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = a2[3];
    v8 = a3[5];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_unknownObjectRetain(v5);
    v11 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v14 = a3[7];
    *(_QWORD *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    v18 = type metadata accessor for Text.Measurements(0, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
  }
  return a1;
}

uint64_t sub_10017103C(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  char *v8;
  uint64_t v9;

  swift_unknownObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v8 = (char *)a1 + *(int *)(a2 + 28);
  v9 = type metadata accessor for Text.Measurements(0, v7);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t sub_1001710DC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  swift_unknownObjectRetain(v6);
  v10 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  v14 = a1 + v13;
  v15 = (uint64_t)a2 + v13;
  v17 = type metadata accessor for Text.Measurements(0, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
  return a1;
}

uint64_t *sub_1001711D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  if (a1 != a2)
  {
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_100010CC4((uint64_t)a1 + v9, &qword_101493188);
    v12 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      *v10 = *v11;
      swift_retain();
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  v15 = a3[6];
  v8.n128_u64[0] = *(uint64_t *)((char *)a2 + v15);
  *(uint64_t *)((char *)a1 + v15) = v8.n128_u64[0];
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for Text.Measurements(0, v8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

_OWORD *sub_100171304(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Text.Measurements(0, v12);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

__n128 *sub_1001713F0(__n128 *a1, __n128 *a2, int *a3)
{
  unint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a1->n128_u64[0];
  a1->n128_u64[0] = a2->n128_u64[0];
  swift_unknownObjectRelease(v6);
  a1->n128_u64[1] = a2->n128_u64[1];
  v7 = a2[1];
  a1[1] = v7;
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_100010CC4((uint64_t)a1 + v8, &qword_101493188);
    v11 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = a3[6];
  v14 = a3[7];
  v7.n128_u64[0] = *(unint64_t *)((char *)a2->n128_u64 + v13);
  *(unint64_t *)((char *)a1->n128_u64 + v13) = v7.n128_u64[0];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = type metadata accessor for Text.Measurements(0, v7);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_10017150C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100171518);
}

uint64_t sub_100171518(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v8;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = type metadata accessor for Text.Measurements(0, v9);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t sub_1001715BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001715C8);
}

char *sub_1001715C8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v10 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v8;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v11 = type metadata accessor for Text.Measurements(0, v9);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v5[v12], a2, a2, v11);
  }
  return result;
}

void sub_100171668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100174EF0(a1, a2, a3, (uint64_t)" ", (uint64_t)&value witness table for Builtin.Int64 + 64, (uint64_t (*)(uint64_t))&type metadata accessor for Text.Measurements);
}

_QWORD *sub_100171688(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  id v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v26 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100008B04(&qword_10149D390);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)v4 + v8;
    v11 = (char *)a2 + v8;
    v12 = *((_QWORD *)v11 + 1);
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = v12;
    v13 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    *((_QWORD *)v10 + 2) = v13;
    *((_QWORD *)v10 + 3) = v14;
    v10[32] = v11[32];
    v15 = *((_QWORD *)v11 + 5);
    *((_QWORD *)v10 + 5) = v15;
    v10[48] = v11[48];
    v16 = *((_QWORD *)v11 + 8);
    *((_QWORD *)v10 + 7) = *((_QWORD *)v11 + 7);
    *((_QWORD *)v10 + 8) = v16;
    v10[72] = v11[72];
    v17 = (_QWORD *)((char *)v4 + v9);
    v18 = (char *)a2 + v9;
    v20 = *(void **)v18;
    v19 = *((_QWORD *)v18 + 1);
    *v17 = v20;
    v17[1] = v19;
    v21 = a3[7];
    v22 = a3[8];
    v23 = (char *)v4 + v21;
    v24 = (char *)a2 + v21;
    *v23 = *v24;
    *((_QWORD *)v23 + 1) = *((_QWORD *)v24 + 1);
    *((_BYTE *)v4 + v22) = *((_BYTE *)a2 + v22);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    swift_unknownObjectRetain(v14);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    v25 = v20;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001717BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = sub_100008B04(&qword_10149D390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease(v5[1]);
  swift_bridgeObjectRelease(v5[2]);
  swift_unknownObjectRelease(v5[3]);
  swift_bridgeObjectRelease(v5[5]);
  swift_bridgeObjectRelease(v5[8]);

  return swift_release();
}

uint64_t sub_10017184C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;

  v6 = sub_100008B04(&qword_10149D390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  v11 = *(_QWORD *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = v11;
  v12 = *(_QWORD *)(v10 + 16);
  v13 = *(_QWORD *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 24) = v13;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 40) = v14;
  *(_BYTE *)(v9 + 48) = *(_BYTE *)(v10 + 48);
  v15 = *(_QWORD *)(v10 + 64);
  *(_QWORD *)(v9 + 56) = *(_QWORD *)(v10 + 56);
  *(_QWORD *)(v9 + 64) = v15;
  *(_BYTE *)(v9 + 72) = *(_BYTE *)(v10 + 72);
  v16 = (_QWORD *)(a1 + v8);
  v17 = a2 + v8;
  v19 = *(void **)v17;
  v18 = *(_QWORD *)(v17 + 8);
  *v16 = v19;
  v16[1] = v18;
  v20 = a3[7];
  v21 = a3[8];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_unknownObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  v24 = v19;
  swift_retain();
  return a1;
}

uint64_t sub_100171958(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_100008B04(&qword_10149D390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v8 + 16) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(v9 + 24);
  v15 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 24) = v14;
  swift_unknownObjectRetain(v14);
  swift_unknownObjectRelease(v15);
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v16 = *(_QWORD *)(v9 + 40);
  v17 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  v18 = *(_QWORD *)(v9 + 64);
  v19 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v8 + 64) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(v8 + 72) = *(_BYTE *)(v9 + 72);
  v20 = a3[6];
  v21 = (_QWORD *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(void **)(a1 + v20);
  v24 = *(void **)(a2 + v20);
  *v21 = v24;
  v25 = v24;

  v21[1] = *(_QWORD *)(v22 + 8);
  v26 = a3[7];
  v27 = a1 + v26;
  v28 = a2 + v26;
  *(_BYTE *)v27 = *(_BYTE *)v28;
  *(_QWORD *)(v27 + 8) = *(_QWORD *)(v28 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100171AC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v6 = sub_100008B04(&qword_10149D390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_OWORD *)(a1 + v7);
  v10 = (_OWORD *)(a2 + v7);
  v11 = v10[3];
  v9[2] = v10[2];
  v9[3] = v11;
  *(_OWORD *)((char *)v9 + 57) = *(_OWORD *)((char *)v10 + 57);
  v12 = v10[1];
  *v9 = *v10;
  v9[1] = v12;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v13 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t sub_100171B54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_100008B04(&qword_10149D390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 24) = *(_QWORD *)(v9 + 24);
  swift_unknownObjectRelease(v13);
  *(_BYTE *)(v8 + 32) = *(_BYTE *)(v9 + 32);
  v14 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRelease(v14);
  *(_BYTE *)(v8 + 48) = *(_BYTE *)(v9 + 48);
  v15 = *(_QWORD *)(v9 + 64);
  v16 = *(_QWORD *)(v8 + 64);
  *(_QWORD *)(v8 + 56) = *(_QWORD *)(v9 + 56);
  *(_QWORD *)(v8 + 64) = v15;
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(v8 + 72) = *(_BYTE *)(v9 + 72);
  v17 = a3[6];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = *(void **)(a1 + v17);
  *v18 = *v19;

  v18[1] = v19[1];
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_BYTE *)v22 = *(_BYTE *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  swift_release();
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100171C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100171C84);
}

uint64_t sub_100171C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100171C90(a1, a2, a3, &qword_10149D390);
}

uint64_t sub_100171C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = sub_100008B04(a4);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_100171D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100171D1C);
}

uint64_t sub_100171D1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_100171D28(a1, a2, a3, a4, &qword_10149D390);
}

uint64_t sub_100171D28(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result;
  uint64_t v10;

  result = sub_100008B04(a5);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_100171DA4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  sub_100064AF0(319, (unint64_t *)&unk_10149D400, (uint64_t (*)(void))sub_1000627EC, (uint64_t)&type metadata for CGFloat);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "I";
    v4[2] = &unk_100E2F800;
    v4[3] = &unk_100E2F800;
    v4[4] = &unk_100E2FA98;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t *sub_100171E44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for Date(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v4);
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100171EDC(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t *sub_100171F24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for Date(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_100171F94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_QWORD *sub_100172008(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_100172064(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001720D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001720DC);
}

uint64_t sub_1001720DC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_100172158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100172164);
}

char *sub_100172164(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1001721D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t destroy for NearbyTransitGroupHeaderView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[5]);
  swift_release(a1[9]);
  return swift_release(a1[10]);
}

uint64_t initializeWithCopy for NearbyTransitGroupHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for NearbyTransitGroupHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v12);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v14;
  swift_retain(v14);
  swift_release(v15);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t assignWithTake for NearbyTransitGroupHeaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_release(*(_QWORD *)(a1 + 72));
  v8 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release(v8);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitGroupHeaderView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitGroupHeaderView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitGroupHeaderView()
{
  return &type metadata for NearbyTransitGroupHeaderView;
}

unint64_t sub_100172570()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D4D0;
  if (!qword_10149D4D0)
  {
    v1 = sub_10000E5D4((uint64_t *)&unk_10149D040);
    v2[0] = sub_1001725F4();
    v2[1] = sub_100010D70((unint64_t *)&unk_101494E00, &qword_101494DD0, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D4D0);
  }
  return result;
}

unint64_t sub_1001725F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D4D8;
  if (!qword_10149D4D8)
  {
    v1 = sub_10000E5D4(&qword_10149D038);
    v2[0] = sub_100172678();
    v2[1] = sub_100010D70((unint64_t *)&unk_10149D538, (uint64_t *)&unk_10149D068, (const char *)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D4D8);
  }
  return result;
}

unint64_t sub_100172678()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D4E0;
  if (!qword_10149D4E0)
  {
    v1 = sub_10000E5D4(&qword_10149D030);
    v2[0] = sub_1001726FC();
    v2[1] = sub_100010D70(&qword_101495D78, &qword_101495D80, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D4E0);
  }
  return result;
}

unint64_t sub_1001726FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D4E8;
  if (!qword_10149D4E8)
  {
    v1 = sub_10000E5D4(&qword_10149D028);
    v2[0] = sub_10002067C(&qword_10149D4F0, &qword_10149D020, sub_1001727A0, (uint64_t)&protocol witness table for _PaddingLayout);
    v2[1] = sub_100010D70((unint64_t *)&unk_101494DC0, &qword_10149D530, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D4E8);
  }
  return result;
}

uint64_t sub_1001727A0()
{
  return sub_10002067C(&qword_10149D4F8, &qword_10149D018, (uint64_t (*)(void))sub_1001727C4, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_1001727C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D500;
  if (!qword_10149D500)
  {
    v1 = sub_10000E5D4(&qword_10149D010);
    v2[0] = sub_100172848();
    v2[1] = sub_100010D70((unint64_t *)&unk_101495710, (uint64_t *)&unk_10149D520, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D500);
  }
  return result;
}

unint64_t sub_100172848()
{
  unint64_t result;
  uint64_t v1;
  __n128 v2;
  __n128 v3;
  _QWORD v4[2];
  _QWORD v5[4];

  result = qword_10149D508;
  if (!qword_10149D508)
  {
    v1 = sub_10000E5D4(&qword_10149D008);
    v5[0] = type metadata accessor for ButtonStyleConfiguration.Label(255, v2);
    v5[1] = type metadata accessor for BorderedProminentButtonStyle(255, v3);
    v5[2] = sub_10000BC84(&qword_101496220, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    v5[3] = sub_10000BC84(&qword_10149D058, (uint64_t (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle, (uint64_t)&protocol conformance descriptor for BorderedProminentButtonStyle);
    v4[0] = swift_getOpaqueTypeConformance2(v5, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v4[1] = sub_100010D70((unint64_t *)&unk_10149D510, &qword_10149D060, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v4);
    atomic_store(result, (unint64_t *)&qword_10149D508);
  }
  return result;
}

uint64_t sub_100172950()
{
  return sub_100010D70(&qword_10149D548, (uint64_t *)&unk_10149D550, (const char *)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_10017297C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A1FC, 1);
}

uint64_t sub_10017298C()
{
  return sub_10000BC84(&qword_10149D2D8, type metadata accessor for NearbyTransitGroupIncidentsView, (uint64_t)&unk_100E2FBD0);
}

uint64_t sub_1001729B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A1D4, 1);
}

uint64_t sub_1001729C8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A1AC, 1);
}

uint64_t sub_1001729D8()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_1001729F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10016829C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100172A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for NearbyTransitCollapsedLinesView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4));
  v7 = v0 + v4 + *(int *)(v1 + 20);
  v8 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release();
  }
  v11 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = v6 + *(int *)(v1 + 28);
  v13 = type metadata accessor for Text.Measurements(0, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v11));
  return swift_deallocObject(v0, v11 + 8, v3 | 7);
}

uint64_t sub_100172B14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for NearbyTransitCollapsedLinesView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10015A988(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

unint64_t sub_100172B74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_101497900;
  if (!qword_101497900)
  {
    v1 = objc_opt_self(UIImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_101497900);
  }
  return result;
}

unint64_t sub_100172BB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D5C0;
  if (!qword_10149D5C0)
  {
    v1 = sub_10000E5D4(&qword_10149D5A0);
    v2[0] = &protocol witness table for Image;
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D5C0);
  }
  return result;
}

uint64_t sub_100172C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t result;

  if ((a7 & 1) == 0)
  {
    sub_10006BB40(a3, a4, a5 & 1);
    return swift_bridgeObjectRetain(a6);
  }
  return result;
}

double sub_100172C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  double result;

  if ((a7 & 1) == 0)
  {
    sub_10006B77C(a3, a4, a5 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a6).n128_u64[0];
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitLineSectionHeaderView(uint64_t a1)
{
  return sub_100021D9C(a1, qword_10149D8F0, (uint64_t)&nominal type descriptor for NearbyTransitLineSectionHeaderView);
}

uint64_t sub_100172CC0(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];
  _QWORD v10[4];

  result = *a1;
  if (!result)
  {
    v8 = sub_10000E5D4(a2);
    v10[0] = sub_10000E5D4(a3);
    v10[1] = type metadata accessor for BorderlessButtonStyle(255);
    v10[2] = sub_100010D70(a4, a3, (const char *)&protocol conformance descriptor for Button<A>);
    v10[3] = sub_10000BC84(&qword_10149D170, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    v9[0] = swift_getOpaqueTypeConformance2(v10, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    v9[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100172DC4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for NearbyTransitLineSectionView(0) - 8) + 80);
  return sub_10015C544(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_100172E10()
{
  unint64_t result;

  result = qword_10149D6B8;
  if (!qword_10149D6B8)
  {
    result = swift_getWitnessTable(byte_100E330C8, &type metadata for NearbyTransitDeparturesViewModel);
    atomic_store(result, (unint64_t *)&qword_10149D6B8);
  }
  return result;
}

uint64_t sub_100172E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for NearbyTransitLineSectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = v0 + v4;
  v8 = sub_100008B04(&qword_10149D390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (_QWORD *)(v7 + *(int *)(v1 + 20));
  swift_bridgeObjectRelease(v9[1]);
  swift_bridgeObjectRelease(v9[2]);
  swift_unknownObjectRelease(v9[3]);
  swift_bridgeObjectRelease(v9[5]);
  swift_bridgeObjectRelease(v9[8]);

  swift_release();
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100172F24()
{
  return sub_10006EC34(type metadata accessor for NearbyTransitLineSectionView, (uint64_t (*)(uint64_t))sub_10015D298);
}

unint64_t sub_100172F38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D6D8;
  if (!qword_10149D6D8)
  {
    v1 = sub_10000E5D4(&qword_10149D6E0);
    v2[0] = sub_10016EB38(&qword_10149D6E8, &qword_10149D6F0, &qword_10149D6F8, &qword_10149D700);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D6D8);
  }
  return result;
}

uint64_t sub_100172FC4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  sub_10006BB40(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_100173004()
{
  return sub_1001732AC((uint64_t (*)(unint64_t, unint64_t))sub_10015CC5C);
}

uint64_t sub_100173010@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015CD88(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100173018()
{
  return sub_10002067C(&qword_10149D748, &qword_10149D750, (uint64_t (*)(void))sub_10017303C, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_10017303C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149D758;
  if (!qword_10149D758)
  {
    v1 = sub_10000E5D4(&qword_10149D760);
    v2[0] = sub_10000BC84(&qword_10149D768, type metadata accessor for NearbyTransitDepartureView, (uint64_t)&unk_100E2FED8);
    v2[1] = &protocol witness table for _PaddingLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D758);
  }
  return result;
}

uint64_t type metadata accessor for NearbyTransitDepartureView(uint64_t a1)
{
  return sub_100021D9C(a1, qword_10149D848, (uint64_t)&nominal type descriptor for NearbyTransitDepartureView);
}

uint64_t sub_1001730D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_QWORD *)(a1 + 104);
  v5 = *(_QWORD *)(a1 + 112);
  v6 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 136);
  v9 = *(_QWORD *)(a1 + 144);
  v11 = *(_OWORD *)(a1 + 152);
  sub_100170D64(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  sub_100170D64(v2, v3, v4, v5, v6, v7, v8, v9, v11, *((uint64_t *)&v11 + 1));
  return a1;
}

uint64_t sub_100173194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = type metadata accessor for NearbyTransitLineSectionView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;
  v8 = sub_100008B04(&qword_10149D390);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = (_QWORD *)(v7 + *(int *)(v1 + 20));
  swift_bridgeObjectRelease(v9[1]);
  swift_bridgeObjectRelease(v9[2]);
  swift_unknownObjectRelease(v9[3]);
  swift_bridgeObjectRelease(v9[5]);
  swift_bridgeObjectRelease(v9[8]);

  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6 + 72));
  return swift_deallocObject(v0, v6 + 88, v5);
}

uint64_t sub_1001732A0()
{
  return sub_1001732AC((uint64_t (*)(unint64_t, unint64_t))sub_10015B9DC);
}

uint64_t sub_1001732AC(uint64_t (*a1)(unint64_t, unint64_t))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(type metadata accessor for NearbyTransitLineSectionView(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  return a1(v1 + v3, v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
}

double sub_1001732FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10015BAF4(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_100173304()
{
  return sub_10002067C(&qword_10149D798, &qword_10149D7A0, (uint64_t (*)(void))sub_100173328, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_100173328()
{
  unint64_t result;

  result = qword_10149D7A8;
  if (!qword_10149D7A8)
  {
    result = swift_getWitnessTable("Im7", &type metadata for NearbyTransitInactiveDepartureView);
    atomic_store(result, (unint64_t *)&qword_10149D7A8);
  }
  return result;
}

_QWORD *sub_10017336C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[10];
  swift_retain(a1[9]);
  swift_retain(v6);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *sub_1001733DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[9];
  swift_release(a1[10]);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_release(v6);
  return a1;
}

uint64_t type metadata accessor for NearbyTransitWalkingPillView(uint64_t a1)
{
  return sub_100021D9C(a1, qword_10149D988, (uint64_t)&nominal type descriptor for NearbyTransitWalkingPillView);
}

void destroy for NearbyTransitInactiveDepartureView(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 104));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 152));

}

uint64_t initializeWithCopy for NearbyTransitInactiveDepartureView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 104) = v9;
  v16 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 112) = v16;
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v10 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v10;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v13 = *(void **)(a2 + 168);
  v12 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v13;
  *(_QWORD *)(a1 + 176) = v12;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_unknownObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_unknownObjectRetain(v16);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  v14 = v13;
  return a1;
}

uint64_t assignWithCopy for NearbyTransitInactiveDepartureView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v12;
  swift_unknownObjectRetain(v12);
  swift_unknownObjectRelease(v13);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v18;
  swift_unknownObjectRetain(v18);
  swift_unknownObjectRelease(v19);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v22 = *(_QWORD *)(a2 + 152);
  v23 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v24 = *(void **)(a1 + 168);
  v25 = *(void **)(a2 + 168);
  *(_QWORD *)(a1 + 168) = v25;
  v26 = v25;

  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

__n128 initializeWithTake for NearbyTransitInactiveDepartureView(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitInactiveDepartureView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_unknownObjectRelease(v13);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 96));
  v14 = *(_QWORD *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_unknownObjectRelease(v15);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  v16 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v17 = *(_QWORD *)(a2 + 152);
  v18 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v17;
  swift_bridgeObjectRelease(v18);
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v19 = *(void **)(a1 + 168);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);

  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitInactiveDepartureView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitInactiveDepartureView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitInactiveDepartureView()
{
  return &type metadata for NearbyTransitInactiveDepartureView;
}

_QWORD *sub_10017395C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    v11 = a2[10];
    v12 = a2[11];
    v14 = (void *)a2[12];
    v13 = a2[13];
    a1[12] = v14;
    a1[13] = v13;
    v15 = a3[6];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    a1[10] = v11;
    a1[11] = v12;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_unknownObjectRetain(v10);
    swift_retain();
    v18 = v14;
    v19 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v17, v19) == 1)
    {
      v20 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v16, v17, v20);
      v21 = 1;
    }
    else
    {
      *v16 = *v17;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v19, v21);
    v23 = a3[7];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = sub_100008B04(&qword_1014931B0);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
      v28 = 1;
    }
    else
    {
      *v24 = *v25;
      swift_retain();
      v28 = 0;
    }
    swift_storeEnumTagMultiPayload(v24, v26, v28);
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_100173B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 72));
  swift_release();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_100008B04(&qword_1014931B0);
  if (swift_getEnumCaseMultiPayload(v7, v8) != 1)
    return swift_release();
  v9 = type metadata accessor for DynamicTypeSize(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
}

_QWORD *sub_100173C3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[10];
  v11 = a2[11];
  v13 = (void *)a2[12];
  v12 = a2[13];
  a1[12] = v13;
  a1[13] = v12;
  v14 = a3[6];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  a1[10] = v10;
  a1[11] = v11;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_unknownObjectRetain(v9);
  swift_retain();
  v17 = v13;
  v18 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v16, v18) == 1)
  {
    v19 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v15, v16, v19);
    v20 = 1;
  }
  else
  {
    *v15 = *v16;
    swift_retain();
    v20 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v18, v20);
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = sub_100008B04(&qword_1014931B0);
  if (swift_getEnumCaseMultiPayload(v23, v24) == 1)
  {
    v25 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v22, v23, v25);
    v26 = 1;
  }
  else
  {
    *v22 = *v23;
    swift_retain();
    v26 = 0;
  }
  swift_storeEnumTagMultiPayload(v22, v24, v26);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_100173DEC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[4] = a2[4];
  v10 = a2[5];
  v11 = a1[5];
  a1[5] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  a1[8] = a2[8];
  v14 = a2[9];
  v15 = a1[9];
  a1[9] = v14;
  swift_unknownObjectRetain(v14);
  swift_unknownObjectRelease(v15);
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_retain();
  swift_release();
  v16 = (void *)a1[12];
  v17 = (void *)a2[12];
  a1[12] = v17;
  v18 = v17;

  a1[13] = a2[13];
  if (a1 != a2)
  {
    v19 = a3[6];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    sub_100010CC4((uint64_t)a1 + v19, &qword_101493188);
    v22 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
    {
      v23 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v21, v23);
      v24 = 1;
    }
    else
    {
      *v20 = *v21;
      swift_retain();
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v20, v22, v24);
    v25 = a3[7];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    sub_100010CC4((uint64_t)a1 + v25, &qword_1014931B0);
    v28 = sub_100008B04(&qword_1014931B0);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v26, v27, v29);
      v30 = 1;
    }
    else
    {
      *v26 = *v27;
      swift_retain();
      v30 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v28, v30);
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_10017401C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  v9 = a3[6];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  v12 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload(v10, v12, 1);
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_100008B04(&qword_1014931B0);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload(v15, v17, 1);
  }
  else
  {
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_100174170(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = a2[5];
  v11 = a1[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[6] = a2[6];
  a1[7] = v12;
  swift_bridgeObjectRelease(v13);
  v14 = a2[9];
  v15 = a1[9];
  a1[8] = a2[8];
  a1[9] = v14;
  swift_unknownObjectRelease(v15);
  v16 = a2[11];
  a1[10] = a2[10];
  a1[11] = v16;
  swift_release();
  v17 = (void *)a1[12];
  a1[12] = a2[12];

  a1[13] = a2[13];
  if (a1 != a2)
  {
    v18 = a3[6];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    sub_100010CC4((uint64_t)a1 + v18, &qword_101493188);
    v21 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload(v19, v21, 1);
    }
    else
    {
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    v23 = a3[7];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    sub_100010CC4((uint64_t)a1 + v23, &qword_1014931B0);
    v26 = sub_100008B04(&qword_1014931B0);
    if (swift_getEnumCaseMultiPayload(v25, v26) == 1)
    {
      v27 = type metadata accessor for DynamicTypeSize(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload(v24, v26, 1);
    }
    else
    {
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
  }
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100174344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100174350);
}

uint64_t sub_100174350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_100008B04(&qword_10149D7E8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1001743F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100174404);
}

uint64_t sub_100174404(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_100008B04(&qword_10149D7E8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1001744A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[1] = &unk_100E2F800;
  sub_100174568(319, (unint64_t *)&unk_101495428, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_100174568(319, (unint64_t *)&qword_101499220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = &unk_100E2FA98;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_100174568(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Environment.Content(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1001745B4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = a2[3];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v10 = a2[5];
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v11 = a2[7];
    v12 = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    v13 = a3[5];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_unknownObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    v16 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v15, v17);
      v18 = 1;
    }
    else
    {
      *v14 = *v15;
      swift_retain();
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v14, v16, v18);
    v20 = a3[7];
    *(_QWORD *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v21 = a1 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = type metadata accessor for Font.TextStyle(0);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v23 - 8) + 16);
    v25 = swift_retain();
    v24(v21, v22, v23, v25);
  }
  return a1;
}

uint64_t sub_100174738(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_unknownObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[8]);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  v7 = (char *)a1 + *(int *)(a2 + 28);
  v8 = type metadata accessor for Font.TextStyle(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t sub_100174804(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v12 = a3[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_unknownObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  v15 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    v17 = 1;
  }
  else
  {
    *v13 = *v14;
    swift_retain();
    v17 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v17);
  v18 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for Font.TextStyle(0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v21 - 8) + 16);
  v23 = swift_retain();
  v22(v19, v20, v21, v23);
  return a1;
}

uint64_t sub_10017495C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  swift_unknownObjectRetain(v10);
  swift_unknownObjectRelease(v11);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (a1 != a2)
  {
    v16 = a3[5];
    v17 = (_QWORD *)(a1 + v16);
    v18 = (_QWORD *)(a2 + v16);
    sub_100010CC4(a1 + v16, &qword_101493188);
    v19 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = 1;
    }
    else
    {
      *v17 = *v18;
      swift_retain();
      v21 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v21);
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  v22 = a3[7];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_OWORD *sub_100174B08(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t sub_100174C04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRelease(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  if (a1 != a2)
  {
    v13 = a3[5];
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_100010CC4(a1 + v13, &qword_101493188);
    v16 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      v17 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_release();
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for Font.TextStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t sub_100174D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100174D80);
}

uint64_t sub_100174D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for Font.TextStyle(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_100174E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100174E30);
}

uint64_t sub_100174E30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for Font.TextStyle(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100174ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100174EF0(a1, a2, a3, (uint64_t)"I", (uint64_t)&value witness table for Builtin.NativeObject + 64, (uint64_t (*)(uint64_t))&type metadata accessor for Font.TextStyle);
}

void sub_100174EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[4];

  v13[0] = a4;
  sub_100174568(319, (unint64_t *)&unk_101495428, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v10 <= 0x3F)
  {
    v13[1] = *(_QWORD *)(v9 - 8) + 64;
    v13[2] = a5;
    v11 = a6(319);
    if (v12 <= 0x3F)
    {
      v13[3] = *(_QWORD *)(v11 - 8) + 64;
      swift_initStructMetadata(a1, 256, 4, v13, a1 + 16);
    }
  }
}

uint64_t *sub_100174F98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain(v7);
    v11 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
    v15 = *(int *)(a3 + 24);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_100008B04(&qword_10149CF20);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return a1;
}

uint64_t sub_1001750AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 24);
  v8 = sub_100008B04(&qword_10149CF20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *sub_100175150(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_bridgeObjectRetain(v6);
  v10 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    v12 = 1;
  }
  else
  {
    *v8 = *v9;
    swift_retain();
    v12 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v10, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

_QWORD *sub_100175238(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_100010CC4((uint64_t)a1 + v8, &qword_101493188);
    v11 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
      v13 = 1;
    }
    else
    {
      *v9 = *v10;
      swift_retain();
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v11, v13);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *sub_10017534C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

_QWORD *sub_100175434(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_100010CC4((uint64_t)a1 + v8, &qword_101493188);
    v11 = sub_100008B04(&qword_101493188);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_100008B04(&qword_10149CF20);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_10017553C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100175548);
}

uint64_t sub_100175548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_100008B04(&qword_10149CF20);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1001755F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001755FC);
}

uint64_t sub_1001755FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100008B04(&qword_1014953B8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_100008B04(&qword_10149CF20);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1001756A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[3];

  v6[0] = &unk_100E2FDD0;
  sub_100174568(319, (unint64_t *)&unk_101495428, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100064AF0(319, (unint64_t *)&unk_10149CF90, (uint64_t (*)(void))sub_1000627A8, (uint64_t)&type metadata for Double);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v6, a1 + 16);
    }
  }
}

uint64_t sub_100175758()
{
  return sub_100010D70(&qword_10149D9C8, (uint64_t *)&unk_10149D560, byte_100E2A610);
}

unint64_t sub_100175788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10149D9D0;
  if (!qword_10149D9D0)
  {
    v1 = sub_10000E5D4(&qword_10149D9D8);
    v3[0] = sub_10000E5D4(&qword_10149D5E8);
    v3[1] = sub_100010D70(&qword_10149D600, &qword_10149D5E8, (const char *)&protocol conformance descriptor for VStack<A>);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D9D0);
  }
  return result;
}

unint64_t sub_100175858()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10149D9E0;
  if (!qword_10149D9E0)
  {
    v1 = sub_10000E5D4(&qword_10149D9E8);
    v3[0] = sub_10000E5D4(&qword_10149D7B8);
    v3[1] = sub_100010D70(&qword_10149D7C8, &qword_10149D7B8, byte_100E2A610);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149D9E0);
  }
  return result;
}

uint64_t sub_100175924(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A29C, 1);
}

uint64_t sub_100175934(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A274, 1);
}

uint64_t sub_100175944(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A24C, 1);
}

uint64_t sub_100175954(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A224, 1);
}

uint64_t sub_100175964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for NearbyTransitDepartureView(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v4 + 72));
  swift_release();

  v6 = v0 + v4 + *(int *)(v1 + 24);
  v7 = sub_100008B04(&qword_101493188);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    v8 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
  }
  v9 = v0 + v4 + *(int *)(v1 + 28);
  v10 = sub_100008B04(&qword_1014931B0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for DynamicTypeSize(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100175A9C(uint64_t a1)
{
  type metadata accessor for NearbyTransitDepartureView(0);
  return sub_10015E8E0(a1);
}

double sub_100175ADC(uint64_t a1, uint64_t a2)
{
  double result;

  if (a1)
  {
    swift_retain(a1);
    *(_QWORD *)&result = swift_retain(a2).n128_u64[0];
  }
  return result;
}

uint64_t sub_100175B08(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_release(result);
    return swift_release(a2);
  }
  return result;
}

unint64_t sub_100175B34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149DAA0;
  if (!qword_10149DAA0)
  {
    v1 = sub_10000E5D4(&qword_10149DA98);
    v2[0] = sub_10016E9C0();
    v2[1] = sub_100010D70(&qword_101495D78, &qword_101495D80, (const char *)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DAA0);
  }
  return result;
}

double sub_100175BC0(void *a1, char a2, void *a3, char a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  id v13;
  double result;
  id v16;

  if ((a13 & 1) != 0)
  {
    sub_10008506C(a1, a2 & 1);
    v13 = a5;
  }
  else
  {
    sub_10008506C(a3, a4 & 1);
    v16 = a7;
    *(_QWORD *)&result = swift_retain().n128_u64[0];
  }
  return result;
}

void sub_100175C24(void *a1, char a2, void *a3, char a4, void *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  void *v14;

  if ((a13 & 1) != 0)
  {
    sub_1000850A4(a1, a2 & 1);
    v14 = a5;
  }
  else
  {
    sub_1000850A4(a3, a4 & 1);
    swift_release();
    v14 = a7;
  }

}

unint64_t sub_100175C88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149DB70;
  if (!qword_10149DB70)
  {
    v1 = sub_10000E5D4(&qword_10149DB58);
    v2[0] = sub_100175D0C();
    v2[1] = sub_100010D70((unint64_t *)&unk_101494E00, &qword_101494DD0, (const char *)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DB70);
  }
  return result;
}

unint64_t sub_100175D0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149DB78;
  if (!qword_10149DB78)
  {
    v1 = sub_10000E5D4(&qword_10149DB50);
    v2[0] = sub_10002067C(&qword_10149DB80, &qword_10149DB48, sub_100175DB0, (uint64_t)&protocol witness table for _PaddingLayout);
    v2[1] = sub_100010D70((unint64_t *)&unk_101495E10, &qword_10149CED0, (const char *)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DB78);
  }
  return result;
}

uint64_t sub_100175DB0()
{
  return sub_10002067C(&qword_10149DB88, &qword_10149DB40, (uint64_t (*)(void))sub_100175DD4, (uint64_t)&protocol witness table for _PaddingLayout);
}

unint64_t sub_100175DD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149DB90;
  if (!qword_10149DB90)
  {
    v1 = sub_10000E5D4(&qword_10149DB38);
    v2[0] = sub_100010D70(&qword_10149DB98, &qword_10149DB30, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[1] = sub_100010D70(&qword_10149D210, &qword_10149D218, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DB90);
  }
  return result;
}

unint64_t sub_100175E70()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_101495CA0;
  if (!qword_101495CA0)
  {
    v1 = sub_10000E5D4(&qword_101495CA8);
    v2[0] = &protocol witness table for Image;
    v2[1] = &protocol witness table for _AspectRatioLayout;
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_101495CA0);
  }
  return result;
}

unint64_t sub_100175ED8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149DBC0;
  if (!qword_10149DBC0)
  {
    v1 = sub_10000E5D4(&qword_10149DBC8);
    v2[0] = &protocol witness table for EmptyView;
    v2[1] = sub_100010D70(&qword_10149DA38, &qword_10149DA00, (const char *)&protocol conformance descriptor for SubscriptionView<A, B>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DBC0);
  }
  return result;
}

unint64_t sub_100175F60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10149DBD0;
  if (!qword_10149DBD0)
  {
    v1 = sub_10000E5D4(&qword_10149DBD8);
    v3[0] = sub_10000E5D4(&qword_10149D6F0);
    v3[1] = sub_10016EB38(&qword_10149D6E8, &qword_10149D6F0, &qword_10149D6F8, &qword_10149D700);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DBD0);
  }
  return result;
}

unint64_t sub_100176038()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10149DBE0;
  if (!qword_10149DBE0)
  {
    v1 = sub_10000E5D4(&qword_10149DAC8);
    v3[0] = sub_10000E5D4(&qword_10149DAB8);
    v3[1] = sub_100010D70(&qword_10149DAD8, &qword_10149DAB8, (const char *)&protocol conformance descriptor for HStack<A>);
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DBE0);
  }
  return result;
}

unint64_t sub_100176108()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];
  _QWORD v3[2];

  result = qword_10149DBE8;
  if (!qword_10149DBE8)
  {
    v1 = sub_10000E5D4((uint64_t *)&unk_10149DBF0);
    v3[0] = sub_10000E5D4(&qword_10149DB58);
    v3[1] = sub_100175C88();
    v2[0] = swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149DBE8);
  }
  return result;
}

uint64_t sub_1001761BC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;

  v4 = a2 | a3;
  v5 = (id)a2;
  v6 = (id)a3;
  v7 = v5;
  v8 = v6;
  if (v4)
    v9 = (uint64_t)objc_msgSend(v7, "isEqual:", v8);
  else
    v9 = 1;

  return v9;
}

BOOL sub_100176234(id a1, GEOServerFormatToken *a2, GEOServerFormatToken *a3)
{
  GEOServerFormatToken *v4;
  GEOServerFormatToken *v5;
  char v6;

  v4 = a2;
  v5 = a3;
  v6 = GEOServerFormatTokenEqual(v4, v5);

  return v6;
}

BOOL sub_100176284(id a1, GEOTransitIncidentEntity *a2, GEOTransitIncidentEntity *a3)
{
  unint64_t v5;
  GEOTransitIncidentEntity *v6;
  GEOTransitIncidentEntity *v7;
  GEOTransitIncidentEntity *v8;
  GEOTransitIncidentEntity *v9;
  GEOTransitIncidentEntity *v10;
  unsigned __int8 v11;
  BOOL v12;
  char v13;
  BOOL v14;
  id v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v5 = (unint64_t)a2 | (unint64_t)a3;
  v6 = a2;
  v7 = a3;
  v8 = v6;
  v9 = v7;
  v10 = v9;
  if (v5)
  {
    v11 = 0;
    if (v8)
      v12 = a3 == 0;
    else
      v12 = 0;
    v13 = v12;
    if (v9)
      v14 = a2 == 0;
    else
      v14 = 0;
    if (!v14 && (v13 & 1) == 0)
    {
      v15 = -[GEOTransitIncidentEntity muid](v8, "muid");
      if (v15 == -[GEOTransitIncidentEntity muid](v10, "muid")
        && (v16 = -[GEOTransitIncidentEntity hasNextStopIDs](v8, "hasNextStopIDs"),
            v16 == -[GEOTransitIncidentEntity hasNextStopIDs](v10, "hasNextStopIDs")))
      {
        v17 = objc_claimAutoreleasedReturnValue(-[GEOTransitIncidentEntity nextStopIDs](v8, "nextStopIDs"));
        v18 = objc_claimAutoreleasedReturnValue(-[GEOTransitIncidentEntity nextStopIDs](v10, "nextStopIDs"));
        v19 = v17 | v18;
        v20 = (id)v17;
        v21 = (id)v18;
        if (v19)
          v11 = objc_msgSend(v20, "isEqual:", v21);
        else
          v11 = 1;

      }
      else
      {
        v11 = 0;
      }
    }
  }
  else
  {
    v11 = 1;
  }

  return v11;
}

id sub_1001764D8(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  void *Strong;
  id v8;
  char *v9;
  id v10;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC4Maps23TransitSchedulesContext_chromeViewController]);
  v8 = a3;
  v9 = a1;
  v10 = objc_msgSend(Strong, *a4);

  return v10;
}

void sub_1001767AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v10;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC4Maps23TransitSchedulesContext_chromeViewController);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (objc_class *)type metadata accessor for TransitLineContext();
    v6 = (char *)objc_allocWithZone(v5);
    *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController] = 0;
    v7 = OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem;
    *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps18TransitLineContext_lineItem] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps18TransitLineContext_labelMarker] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps18TransitLineContext_lineCardViewController] = 0;
    *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps18TransitLineContext_disambiguationViewController] = 0;
    v8 = *(_QWORD *)&v6[v7];
    *(_QWORD *)&v6[v7] = a1;
    swift_unknownObjectRetain_n(a1, 2);
    swift_unknownObjectRelease(v8);
    v10.receiver = v6;
    v10.super_class = v5;
    v9 = objc_msgSendSuper2(&v10, "init");
    swift_unknownObjectRelease(a1);
    objc_msgSend(v4, "pushContext:animated:completion:", v9, 1, 0);

  }
}

unint64_t sub_1001768C4()
{
  unint64_t result;

  result = qword_10149DC60;
  if (!qword_10149DC60)
  {
    result = swift_getWitnessTable(")n7", &type metadata for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149DC60);
  }
  return result;
}

uint64_t sub_100176908()
{
  return sub_100010D70(&qword_10149DC68, &qword_10149DC70, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_100176934()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4E00);
  sub_10000E918(v20, (uint64_t)qword_1014D4E00);
  v21 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E4D780);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "A setting to avoid busy roads when walking", 42, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_100176B48(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4E18);
  sub_10000E918(v1, (uint64_t)qword_1014D4E18);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000042, 0x8000000100E4D8D0);
}

uint64_t sub_100176BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4E30);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4E30);
  IntentDescription.init(stringLiteral:)(0xD00000000000004BLL, 0x8000000100E4D880);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_100176C30()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E304D0);
  qword_1014D4E48 = result;
  return result;
}

uint64_t sub_100176C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_100176C70, 0, 0);
}

uint64_t sub_100176C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101491020 != -1)
    swift_once(&qword_101491020, sub_100176C30);
  v2 = qword_1014D4E48;
  *(_QWORD *)(v0 + 80) = qword_1014D4E48;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149DD70, &qword_10149DD78, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_100176D70;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_100176D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_100176DF0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100176DF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4E48;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_100176E84()
{
  double result;

  if (qword_101491020 != -1)
    swift_once(&qword_101491020, sub_100176C30);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_100176EC8()
{
  unint64_t result;

  result = qword_10149DC78;
  if (!qword_10149DC78)
  {
    result = swift_getWitnessTable(byte_100E30090, &type metadata for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149DC78);
  }
  return result;
}

unint64_t sub_100176F10()
{
  unint64_t result;

  result = qword_10149DC80;
  if (!qword_10149DC80)
  {
    result = swift_getWitnessTable(byte_100E300B8, &type metadata for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149DC80);
  }
  return result;
}

uint64_t sub_100176F54(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10106A318, 1) + 8);
}

uint64_t sub_100176F78(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1001768C4();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_100176FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491010, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4E18, (uint64_t)sub_100176B48, a1);
}

uint64_t sub_100176FDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101491018 != -1)
    swift_once(&qword_101491018, sub_100176BA8);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4E30);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_10017703C(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149DD8C);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_100176C70, 0, 0);
}

uint64_t sub_1001770A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100177B8C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001770C8()
{
  return 0xD00000000000002ELL;
}

unint64_t sub_1001770E8()
{
  unint64_t result;

  result = qword_10149DC90;
  if (!qword_10149DC90)
  {
    result = swift_getWitnessTable(byte_100E30104, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DC90);
  }
  return result;
}

unint64_t sub_100177130()
{
  unint64_t result;

  result = qword_10149DC98;
  if (!qword_10149DC98)
  {
    result = swift_getWitnessTable(byte_100E302FC, &type metadata for AvoidBusyRoadsInWalkingQuery);
    atomic_store(result, (unint64_t *)&qword_10149DC98);
  }
  return result;
}

unint64_t sub_100177178()
{
  unint64_t result;

  result = qword_10149DCA0;
  if (!qword_10149DCA0)
  {
    result = swift_getWitnessTable(byte_100E3015C, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCA0);
  }
  return result;
}

unint64_t sub_1001771C0()
{
  unint64_t result;

  result = qword_10149DCA8;
  if (!qword_10149DCA8)
  {
    result = swift_getWitnessTable(byte_100E30194, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCA8);
  }
  return result;
}

unint64_t sub_100177208()
{
  unint64_t result;

  result = qword_10149DCB0;
  if (!qword_10149DCB0)
  {
    result = swift_getWitnessTable(byte_100E301C4, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCB0);
  }
  return result;
}

unint64_t sub_100177250()
{
  unint64_t result;

  result = qword_10149DCB8;
  if (!qword_10149DCB8)
  {
    result = swift_getWitnessTable(byte_100E30374, &type metadata for AvoidBusyRoadsInWalkingQuery);
    atomic_store(result, (unint64_t *)&qword_10149DCB8);
  }
  return result;
}

uint64_t sub_100177294(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_1001772AC, 0, 0);
}

uint64_t sub_1001772AC()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  id v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)WalkPreferences), "initWithDefaults:", v2);

  LOBYTE(v2) = objc_msgSend(v3, "avoidBusyRoads");
  *v1 = (_BYTE)v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100177348(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_100177364, 0, 0);
}

uint64_t sub_100177364()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  int BOOL;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)WalkPreferences), "initWithDefaults:", v2);

  objc_msgSend(v3, "setAvoidBusyRoads:", v1);
  objc_msgSend(v3, "synchronize");
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100177438()
{
  unint64_t result;

  result = qword_10149DCC0;
  if (!qword_10149DCC0)
  {
    result = swift_getWitnessTable(byte_100E301FC, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCC0);
  }
  return result;
}

unint64_t sub_100177480()
{
  unint64_t result;

  result = qword_10149DCC8;
  if (!qword_10149DCC8)
  {
    result = swift_getWitnessTable("Em7", &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCC8);
  }
  return result;
}

unint64_t sub_1001774C8()
{
  unint64_t result;

  result = qword_10149DCD0;
  if (!qword_10149DCD0)
  {
    result = swift_getWitnessTable("-m7", &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCD0);
  }
  return result;
}

unint64_t sub_100177510()
{
  unint64_t result;

  result = qword_10149DCD8;
  if (!qword_10149DCD8)
  {
    result = swift_getWitnessTable(byte_100E302A4, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCD8);
  }
  return result;
}

uint64_t sub_100177554@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_10017771C();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100177590@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491008, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4E00, (uint64_t)sub_100176934, a1);
}

uint64_t sub_1001775B4()
{
  return sub_100010D70(&qword_10149DCE0, &qword_10149DCE8, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1001775E0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001770E8();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10017761C()
{
  unint64_t result;

  result = qword_10149DCF0;
  if (!qword_10149DCF0)
  {
    result = swift_getWitnessTable(byte_100E302D4, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, (unint64_t *)&qword_10149DCF0);
  }
  return result;
}

uint64_t sub_100177660(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10017771C();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100177698(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100177510();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001776D4()
{
  unint64_t result;

  result = qword_10149DCF8;
  if (!qword_10149DCF8)
  {
    result = swift_getWitnessTable(byte_100E3033C, &type metadata for AvoidBusyRoadsInWalkingQuery);
    atomic_store(result, (unint64_t *)&qword_10149DCF8);
  }
  return result;
}

unint64_t sub_10017771C()
{
  unint64_t result;

  result = qword_10149DD00[0];
  if (!qword_10149DD00[0])
  {
    result = swift_getWitnessTable(byte_100E300D4, &type metadata for AvoidBusyRoadsInWalkingEntity);
    atomic_store(result, qword_10149DD00);
  }
  return result;
}

uint64_t sub_100177760(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001777B8, 0, 0);
}

uint64_t sub_1001777B8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149DC70);
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001BLL, 0x8000000100E4D760);
  v3 = sub_100010D70(&qword_10149DD70, &qword_10149DD78, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149DD60, 0, &unk_10149DD68, 0, &type metadata for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100177874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100177130();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001778E0()
{
  unint64_t result;

  result = qword_10149DD18;
  if (!qword_10149DD18)
  {
    result = swift_getWitnessTable(byte_100E303CC, &type metadata for AvoidBusyRoadsInWalkingQuery);
    atomic_store(result, (unint64_t *)&qword_10149DD18);
  }
  return result;
}

unint64_t sub_100177928()
{
  unint64_t result;

  result = qword_10149DD20[0];
  if (!qword_10149DD20[0])
  {
    result = swift_getWitnessTable("uj7", &type metadata for AvoidBusyRoadsInWalkingQuery);
    atomic_store(result, qword_10149DD20);
  }
  return result;
}

uint64_t sub_10017796C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100177130();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001779D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_100177130();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100177A44()
{
  unint64_t result;

  result = qword_10149DD38;
  if (!qword_10149DD38)
  {
    result = swift_getWitnessTable("]j7", &type metadata for AvoidBusyRoadsInWalkingQuery);
    atomic_store(result, (unint64_t *)&qword_10149DD38);
  }
  return result;
}

unint64_t sub_100177A8C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149DD40;
  if (!qword_10149DD40)
  {
    v1 = sub_10000E5D4(qword_10149DD48);
    v2 = sub_1001774C8();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149DD40);
  }
  return result;
}

uint64_t sub_100177AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_100177250();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInWalkingQuery()
{
  return &type metadata for AvoidBusyRoadsInWalkingQuery;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value()
{
  return &type metadata for AvoidBusyRoadsInWalkingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidBusyRoadsInWalkingEntity()
{
  return &type metadata for AvoidBusyRoadsInWalkingEntity;
}

uint64_t sub_100177B8C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149DD80);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000025, 0x8000000100E4D800);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_1001770E8();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000044, 0x8000000100E4D830);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_100177EB0@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t withTimeout<A>(seconds:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 32) = a2;
  *(double *)(v5 + 24) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_100177EE0, 0, 0);
}

uint64_t sub_100177EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = static Duration.seconds(_:)(*(double *)(v0 + 24));
  v3 = v2;
  v4 = (_QWORD *)swift_task_alloc(dword_10149DD9C);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_100177F4C;
  return withTimeout<A>(_:block:)(*(_QWORD *)(v0 + 16), v1, v3, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100177F4C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t withTimeout<A>(_:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = type metadata accessor for ContinuousClock.Instant(0);
  v6[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[9] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[10] = swift_task_alloc(v9);
  v6[11] = swift_task_alloc(v9);
  v10 = type metadata accessor for ContinuousClock(0);
  v6[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v6[13] = v11;
  v6[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100178034, 0, 0);
}

uint64_t sub_100178034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = ContinuousClock.init()();
  ContinuousClock.now.getter(v6);
  ContinuousClock.Instant.advanced(by:)(v5, v4);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 120) = v7;
  v7(v1, v2);
  v8 = swift_task_alloc(dword_10149DDA4);
  *(_QWORD *)(v0 + 128) = v8;
  v9 = sub_1001783F0();
  *(_QWORD *)v8 = v0;
  *(_QWORD *)(v8 + 8) = sub_100178118;
  v10 = *(_QWORD *)(v0 + 112);
  v11 = *(_QWORD *)(v0 + 88);
  v12 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v8 + 72) = v9;
  *(_QWORD *)(v8 + 56) = v12;
  *(_OWORD *)(v8 + 40) = v14;
  *(_QWORD *)(v8 + 24) = v11;
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 16) = v13;
  return swift_task_switch(sub_100178298, 0, 0);
}

uint64_t sub_100178118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1001781F8;
  else
    v3 = sub_10017817C;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10017817C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD))(v0 + 120))(v4, *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001781F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, _QWORD))(v0 + 120))(v4, *(_QWORD *)(v0 + 64));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t withDeadline<A, B>(_:clock:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch(sub_100178298, 0, 0);
}

uint64_t sub_100178298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = swift_task_alloc(80);
  *(_QWORD *)(v0 + 80) = v2;
  v3 = *(_OWORD *)(v0 + 40);
  v4 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = v3;
  *(_OWORD *)(v2 + 56) = v4;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 88) = v5;
  *v5 = v0;
  v5[1] = sub_100178348;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD00000000000001CLL, 0x8000000100E47800, sub_100178A7C, v2, *(_QWORD *)(v0 + 56));
}

uint64_t sub_100178348()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 88);
  v3 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1001783BC, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 80));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1001783BC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1001783F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1014992A0;
  if (!qword_1014992A0)
  {
    v1 = type metadata accessor for ContinuousClock(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for ContinuousClock, v1);
    atomic_store(result, (unint64_t *)&qword_1014992A0);
  }
  return result;
}

uint64_t withTimeout<A, B>(_:clock:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  unint64_t v11;

  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a8, a7, &protocol requirements base descriptor for Clock, &associated type descriptor for Clock.Instant);
  v8[10] = AssociatedTypeWitness;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[11] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[12] = swift_task_alloc(v11);
  v8[13] = swift_task_alloc(v11);
  return swift_task_switch(sub_1001784CC, 0, 0);
}

uint64_t sub_1001784CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedConformanceWitness;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 24);
  dispatch thunk of Clock.now.getter(v5, v4);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v5, v2, &protocol requirements base descriptor for Clock, &associated conformance descriptor for Clock.Clock.Instant: InstantProtocol);
  dispatch thunk of InstantProtocol.advanced(by:)(v6, v2, AssociatedConformanceWitness);
  v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 112) = v8;
  v8(v1, v2);
  v9 = swift_task_alloc(dword_10149DDA4);
  *(_QWORD *)(v0 + 120) = v9;
  *(_QWORD *)v9 = v0;
  *(_QWORD *)(v9 + 8) = sub_1001785C4;
  v10 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 16);
  v12 = *(_OWORD *)(v0 + 32);
  v13 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v9 + 64) = v13;
  *(_OWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 24) = v10;
  return swift_task_switch(sub_100178298, 0, 0);
}

uint64_t sub_1001785C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_100178678;
  else
    v3 = sub_100178628;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_100178628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, _QWORD))(v0 + 112))(v1, *(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100178678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 96);
  (*(void (**)(uint64_t, _QWORD))(v0 + 112))(v1, *(_QWORD *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001786C8(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;

  v64 = a4;
  v65 = a5;
  v60 = a2;
  v61 = a3;
  v55 = a1;
  v70 = *(_QWORD *)(a7 - 8);
  v71 = a8;
  v59 = a7;
  v66 = *(_QWORD *)(v70 + 64);
  __chkstk_darwin(a1);
  v69 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v12, v11, &protocol requirements base descriptor for Clock, &associated type descriptor for Clock.Instant);
  v68 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = *(_QWORD *)(v68 + 64);
  v62 = AssociatedTypeWitness;
  v63 = v14;
  __chkstk_darwin(AssociatedTypeWitness);
  v72 = (char *)&v52 - v15;
  v16 = sub_10000E5D4(&qword_10149E610);
  v58 = a6;
  v17 = type metadata accessor for CheckedContinuation(0, a6, v16, &protocol self-conformance witness table for Error);
  v18 = *(_QWORD *)(v17 - 8);
  v56 = *(_QWORD *)(v18 + 64);
  v19 = v56;
  __chkstk_darwin(v17);
  v21 = (char *)&v52 - v20;
  v22 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v22);
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v24;
  v25 = type metadata accessor for TimeoutActor();
  v26 = swift_allocObject(v25, 113, 15);
  swift_defaultActor_initialize();
  *(_BYTE *)(v26 + 112) = 0;
  v27 = type metadata accessor for TaskPriority(0);
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v52(v24, 1, 1, v27);
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v28 = v21;
  v54(v21, a1, v17);
  v29 = *(unsigned __int8 *)(v18 + 80);
  v30 = (v29 + 80) & ~v29;
  v31 = (char *)swift_allocObject(&unk_1011A70E8, v30 + v19, v29 | 7);
  *((_QWORD *)v31 + 2) = 0;
  *((_QWORD *)v31 + 3) = 0;
  *((_QWORD *)v31 + 4) = a6;
  v32 = v59;
  v33 = v71;
  *((_QWORD *)v31 + 5) = v59;
  *((_QWORD *)v31 + 6) = v33;
  v34 = v61;
  *((_QWORD *)v31 + 7) = v60;
  *((_QWORD *)v31 + 8) = v34;
  v57 = v26;
  *((_QWORD *)v31 + 9) = v26;
  v60 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v35 = v28;
  v53 = v28;
  v60(&v31[v30], v28, v17);
  swift_retain();
  swift_retain();
  v36 = (uint64_t)v67;
  v61 = sub_1001B0C08((uint64_t)v67, (uint64_t)&unk_10149DE80, (uint64_t)v31);
  v52((char *)v36, 1, 1, v27);
  v37 = v68;
  v38 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v72, v64, v62);
  v39 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v65, v32);
  v40 = v35;
  v41 = v17;
  v54(v40, v55, v17);
  v42 = *(unsigned __int8 *)(v37 + 80);
  v43 = (v42 + 56) & ~v42;
  v44 = *(unsigned __int8 *)(v39 + 80);
  v45 = (v63 + v44 + v43) & ~v44;
  v46 = (v66 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v29 + v47 + 8) & ~v29;
  v49 = (char *)swift_allocObject(&unk_1011A7110, v48 + v56, v29 | v42 | v44 | 7);
  *((_QWORD *)v49 + 2) = 0;
  *((_QWORD *)v49 + 3) = 0;
  *((_QWORD *)v49 + 4) = v58;
  *((_QWORD *)v49 + 5) = v32;
  v50 = v72;
  *((_QWORD *)v49 + 6) = v71;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v49[v43], v50, v38);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(&v49[v45], v69, v32);
  *(_QWORD *)&v49[v46] = v57;
  *(_QWORD *)&v49[v47] = v61;
  v60(&v49[v48], v53, v41);
  sub_1001B0C08((uint64_t)v67, (uint64_t)&unk_10149DE90, (uint64_t)v49);
  return swift_release();
}

uint64_t sub_100178A7C(uint64_t a1)
{
  uint64_t v1;

  return sub_1001786C8(a1, *(void (**)(char *, char *, uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

ValueMetadata *type metadata accessor for TimeoutError()
{
  return &type metadata for TimeoutError;
}

uint64_t sub_100178AA0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t);

  v8[4] = a7;
  v8[5] = a8;
  v8[3] = a6;
  v10 = *(_QWORD *)(a8 - 8);
  v8[6] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[7] = swift_task_alloc(v11);
  v12 = swift_task_alloc(v11);
  v8[8] = v12;
  v15 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v13 = (_QWORD *)swift_task_alloc(a4[1]);
  v8[9] = v13;
  *v13 = v8;
  v13[1] = sub_100178B40;
  return v15(v12);
}

uint64_t sub_100178B40()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 72);
  *(_QWORD *)(*v1 + 80) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100178D8C;
    v5 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 24);
    v4 = sub_100178BA8;
  }
  return swift_task_switch(v4, v5, 0);
}

uint64_t sub_100178BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v1 + 112) & 1) != 0)
  {
    v2 = sub_100178C84;
  }
  else
  {
    *(_BYTE *)(v1 + 112) = 1;
    v2 = sub_100178BDC;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100178BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  v5 = sub_10000E5D4(&qword_10149E610);
  v6 = type metadata accessor for CheckedContinuation(0, v3, v5, &protocol self-conformance witness table for Error);
  CheckedContinuation.resume(returning:)(v2, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  v7 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100178C84()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100178CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 80);
  v2 = sub_10000E5D4(&qword_10149E610);
  v3 = type metadata accessor for CheckedContinuation(0, v1, v2, &protocol self-conformance witness table for Error);
  CheckedContinuation.resume(throwing:)(v0 + 16, v3);
  v4 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100178D4C()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100178D8C()
{
  uint64_t v0;

  return swift_task_switch(sub_100178DA0, *(_QWORD *)(v0 + 24), 0);
}

uint64_t sub_100178DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(v0 + 24);
  if ((*(_BYTE *)(v1 + 112) & 1) != 0)
  {
    v2 = sub_100178D4C;
  }
  else
  {
    *(_BYTE *)(v1 + 112) = 1;
    v2 = sub_100178CCC;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_100178DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[10] = v14;
  v8[11] = v15;
  v8[8] = a8;
  v8[9] = v13;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v9 = ((uint64_t (*)(uint64_t, void *, void *))swift_getAssociatedTypeWitness)(255, &protocol requirements base descriptor for Clock, &associated type descriptor for Clock.Duration);
  v8[12] = v9;
  v10 = type metadata accessor for Optional(0, v9);
  v8[13] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[14] = v11;
  v8[15] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100178E68, 0, 0);
}

uint64_t sub_100178E68()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0[12] - 8) + 56))(v0[15], 1, 1);
  v1 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep<A>(until:tolerance:clock:)[1]);
  v0[16] = v1;
  *v1 = v0;
  v1[1] = sub_100178EDC;
  return static Task<>.sleep<A>(until:tolerance:clock:)(v0[4], v0[15], v0[5], v0[10], v0[11]);
}

uint64_t sub_100178EDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 120);
  v3 = *(_QWORD *)(*v1 + 128);
  v5 = *(_QWORD *)(*v1 + 104);
  v6 = *(_QWORD *)(*v1 + 112);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (v0)
  {
    v7 = sub_100179154;
    v8 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 48);
    v7 = sub_100178F68;
  }
  return swift_task_switch(v7, v8, 0);
}

uint64_t sub_100178F68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  if ((*(_BYTE *)(v1 + 112) & 1) != 0)
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 120));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(v1 + 112) = 1;
    return swift_task_switch(sub_100178FCC, 0, 0);
  }
}

uint64_t sub_100178FCC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 72);
  Task.cancel()();
  v2 = sub_1000C32DC();
  *(_QWORD *)(v0 + 24) = swift_allocError(&type metadata for TimeoutError, v2, 0, 0);
  v3 = sub_10000E5D4(&qword_10149E610);
  v4 = type metadata accessor for CheckedContinuation(0, v1, v3, &protocol self-conformance witness table for Error);
  CheckedContinuation.resume(throwing:)(v0 + 24, v4);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100179080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 72);
  Task.cancel()();
  *(_QWORD *)(v0 + 16) = v1;
  v3 = sub_10000E5D4(&qword_10149E610);
  v4 = type metadata accessor for CheckedContinuation(0, v2, v3, &protocol self-conformance witness table for Error);
  CheckedContinuation.resume(throwing:)(v0 + 16, v4);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10017911C()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100179154()
{
  uint64_t v0;

  return swift_task_switch(sub_100179168, *(_QWORD *)(v0 + 48), 0);
}

uint64_t sub_100179168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(v0 + 48);
  if ((*(_BYTE *)(v1 + 112) & 1) != 0)
  {
    v2 = sub_10017911C;
  }
  else
  {
    *(_BYTE *)(v1 + 112) = 1;
    v2 = sub_100179080;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10017919C()
{
  uint64_t v0;

  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for TimeoutActor()
{
  return objc_opt_self(_TtC4MapsP33_8E794A8629025431FCAF2EA4792D680912TimeoutActor);
}

uint64_t sub_1001791D8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1001791E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_10000E5D4(&qword_10149E610);
  v3 = type metadata accessor for CheckedContinuation(0, v1, v2, &protocol self-conformance witness table for Error);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 80) & ~v5;
  v7 = v6 + *(_QWORD *)(v4 + 64);
  v8 = v5 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v6, v3);
  return swift_deallocObject(v0, v7, v8);
}

uint64_t sub_100179288(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v3 = v1[4];
  v4 = sub_10000E5D4(&qword_10149E610);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CheckedContinuation(0, v3, v4, &protocol self-conformance witness table for Error)- 8)+ 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = (int *)v1[7];
  v9 = v1[8];
  v10 = v1[9];
  v11 = (uint64_t)v1 + ((v5 + 80) & ~v5);
  v12 = (_QWORD *)swift_task_alloc(dword_10149DE7C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000DD08;
  return sub_100178AA0(a1, v6, v7, v8, v9, v10, v11, v3);
}

uint64_t sub_100179364()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *((_QWORD *)v0 + 4);
  v2 = *((_QWORD *)v0 + 5);
  v20 = v2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *((_QWORD *)v0 + 6), v2, &protocol requirements base descriptor for Clock, &associated type descriptor for Clock.Instant);
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 + 56) & ~v5;
  v7 = *(_QWORD *)(v2 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v6 + *(_QWORD *)(v4 + 64) + v8) & ~v8;
  v19 = AssociatedTypeWitness;
  v17 = (((*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = sub_10000E5D4(&qword_10149E610);
  v11 = type metadata accessor for CheckedContinuation(0, v1, v10, &protocol self-conformance witness table for Error);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + v17 + 8) & ~v13;
  v18 = v14 + *(_QWORD *)(v12 + 64);
  v15 = v5 | v8 | v13 | 7;
  swift_unknownObjectRelease(*((_QWORD *)v0 + 2));
  (*(void (**)(char *, uint64_t))(v4 + 8))(&v0[v6], v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(&v0[v9], v20);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(&v0[v14], v11);
  return swift_deallocObject(v0, v18, v15);
}

uint64_t sub_1001794C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v3 = v1[4];
  v2 = v1[5];
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness(0, v1[6], v2, &protocol requirements base descriptor for Clock, &associated type descriptor for Clock.Instant)- 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v2 - 8);
  v7 = (v5 + *(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = sub_10000E5D4(&qword_10149E610);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CheckedContinuation(0, v3, v10, &protocol self-conformance witness table for Error)- 8)+ 80);
  v12 = v1[2];
  v13 = v1[3];
  v14 = (uint64_t)v1 + v5;
  v15 = *(_QWORD *)((char *)v1 + v8);
  v16 = (uint64_t)v1 + v7;
  v17 = *(_QWORD *)((char *)v1 + v9);
  v18 = (uint64_t)v1 + ((v11 + v9 + 8) & ~v11);
  v19 = (_QWORD *)swift_task_alloc(dword_10149DE8C);
  *(_QWORD *)(v21 + 16) = v19;
  *v19 = v21;
  v19[1] = sub_10000C0E0;
  return sub_100178DD4(a1, v12, v13, v14, v16, v15, v17, v18);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitServerOverride()
{
  return &type metadata for PlaceSummaryUnitServerOverride;
}

id sub_100179664()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___modalHeaderView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___modalHeaderView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___modalHeaderView);
  }
  else
  {
    v4 = sub_1001796C4(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1001796C4(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  NSString v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v2 = objc_msgSend((id)objc_opt_self(ModalCardHeaderConfiguration), "defaultModalCardHeaderConfiguration");
  v3 = objc_msgSend(objc_allocWithZone((Class)ModalCardHeaderView), "initWithConfiguration:", v2);

  objc_msgSend(v3, "setUseAdaptiveFont:", 1);
  v4 = objc_msgSend(v3, "bottomHairline");
  objc_msgSend(v4, "setHidden:", 1);

  v5 = objc_msgSend(v3, "leadingButton");
  v6 = sub_1009A98D8();
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v9 = v8;
    v6 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v7 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  objc_msgSend(v5, "setTitle:forState:", v6, 0, v7);

  v10 = objc_msgSend(v3, "leadingButton");
  objc_msgSend(v10, "addTarget:action:forControlEvents:", a1, "cancelTapped", 64);

  return v3;
}

id sub_100179820()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___tableView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___tableView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController____lazy_storage___tableView);
  }
  else
  {
    v4 = sub_10017987C();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_10017987C()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSString v5;

  v0 = objc_msgSend(objc_allocWithZone((Class)MapsThemeTableView), "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v0, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v1 = (void *)objc_opt_self(UIColor);
  v2 = v0;
  v3 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v2, "setBackgroundColor:", v3);

  objc_msgSend(v2, "setPreservesSuperviewLayoutMargins:", 1);
  v4 = v2;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setAccessibilityIdentifier:", v5);

  return v4;
}

Swift::Void __swiftcall CollectionPickerContaineeViewController.viewDidLoad()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "viewDidLoad");
  v1 = objc_msgSend(v0, "cardPresentationController");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setTakesAvailableHeight:", 1);

    v3 = objc_msgSend(v0, "cardPresentationController");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "setPresentedModally:", 1);

      sub_100179B7C();
      sub_10017A144();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100179B7C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  Class isa;
  Swift::String v55;

  v1 = objc_msgSend(v0, "headerView");
  if (v1)
  {
    v2 = v1;
    v3 = sub_100179664();
    objc_msgSend(v2, "addSubview:", v3);

    v4 = sub_100179664();
    if (qword_101490ED0 != -1)
      swift_once(&qword_101490ED0, sub_10011833C);
    v55._countAndFlagsBits = 0xD00000000000004ELL;
    v55._object = (void *)0x8000000100E4DBC0;
    v5._object = (void *)0x8000000100E4DB90;
    v5._countAndFlagsBits = 0xD000000000000022;
    v6._countAndFlagsBits = 0x61206F7420646441;
    v6._object = (void *)0xEE00656469754720;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v6, v55)._object;
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "setTitle:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

    v9 = objc_msgSend(v0, "contentView");
    if (v9)
    {
      v10 = v9;
      v11 = sub_100179820();
      objc_msgSend(v10, "addSubview:", v11);

      v12 = sub_100008B04((uint64_t *)&unk_101493B10);
      v13 = swift_allocObject(v12, 96, 7);
      *(_OWORD *)(v13 + 16) = xmmword_100E247C0;
      v14 = sub_100179664();
      v15 = objc_msgSend(v14, "leadingAnchor");

      v16 = objc_msgSend(v2, "leadingAnchor");
      v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

      *(_QWORD *)(v13 + 32) = v17;
      v18 = sub_100179664();
      v19 = objc_msgSend(v18, "topAnchor");

      v20 = objc_msgSend(v2, "topAnchor");
      v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

      *(_QWORD *)(v13 + 40) = v21;
      v22 = sub_100179664();
      v23 = objc_msgSend(v22, "trailingAnchor");

      v24 = objc_msgSend(v2, "trailingAnchor");
      v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

      *(_QWORD *)(v13 + 48) = v25;
      v26 = sub_100179664();
      v27 = objc_msgSend(v26, "bottomAnchor");

      v28 = objc_msgSend(v2, "bottomAnchor");
      v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

      *(_QWORD *)(v13 + 56) = v29;
      v30 = sub_100179820();
      v31 = objc_msgSend(v30, "topAnchor");

      v32 = objc_msgSend(v2, "bottomAnchor");
      v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

      *(_QWORD *)(v13 + 64) = v33;
      v34 = sub_100179820();
      v35 = objc_msgSend(v34, "leadingAnchor");

      v36 = objc_msgSend(v0, "contentView");
      if (v36)
      {
        v37 = v36;
        v38 = objc_msgSend(v36, "leadingAnchor");

        v39 = objc_msgSend(v35, "constraintEqualToAnchor:", v38);
        *(_QWORD *)(v13 + 72) = v39;
        v40 = sub_100179820();
        v41 = objc_msgSend(v40, "trailingAnchor");

        v42 = objc_msgSend(v0, "contentView");
        if (v42)
        {
          v43 = v42;
          v44 = objc_msgSend(v42, "trailingAnchor");

          v45 = objc_msgSend(v41, "constraintEqualToAnchor:", v44);
          *(_QWORD *)(v13 + 80) = v45;
          v46 = sub_100179820();
          v47 = objc_msgSend(v46, "bottomAnchor");

          v48 = objc_msgSend(v0, "contentView");
          if (v48)
          {
            v49 = v48;
            v50 = (void *)objc_opt_self(NSLayoutConstraint);
            v51 = objc_msgSend(v49, "bottomAnchor");

            v52 = objc_msgSend(v47, "constraintEqualToAnchor:", v51);
            *(_QWORD *)(v13 + 88) = v52;
            specialized Array._endMutation()(v53);
            sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v50, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

            return;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

void sub_10017A144()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = sub_100179820();
  v2 = objc_msgSend(objc_allocWithZone((Class)CollectionListDataSource), "initWithTableView:editSession:showsAddCollection:", v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionSession), 1);

  objc_msgSend(v2, "setCellsSize:", 1);
  objc_msgSend(v2, "setDelegate:", v0);
  v3 = sub_100179820();
  objc_msgSend(v3, "setDelegate:", v2);

  v4 = sub_100179820();
  objc_msgSend(v4, "setDataSource:", v2);

  v5 = *(void **)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionListDataSource);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionListDataSource) = v2;
  v6 = v2;

  objc_msgSend(v6, "setActive:", 1);
}

Swift::Void __swiftcall CollectionPickerContaineeViewController.dataSourceUpdated(_:)(DataSource_optional *a1)
{
  uint64_t v1;
  void *v2;
  DataSource_optional *v3;
  id v4;
  DataSource_optional *v5;
  id v6;
  id v7;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_collectionListDataSource);
  if (a1)
  {
    if (v2)
    {
      v3 = a1;
      sub_10000E4BC(0, &qword_10149DEA8, off_101196110);
      v4 = v2;
      v5 = v3;
      LOBYTE(v3) = static NSObject.== infix(_:_:)(v5, v4);

      if ((v3 & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (!v2)
  {
    v6 = 0;
LABEL_8:
    v7 = sub_100179820();
    objc_msgSend(v7, "reloadData");

  }
}

void CollectionPickerContaineeViewController.dataSource(_:itemTapped:)(uint64_t a1, uint64_t a2)
{
  sub_10017A9E8(a2);
}

uint64_t CollectionPickerContaineeViewController.dataSource(_:confirmDeleteCollections:sourceView:sourceRect:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter();
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10017A594, v2, v3);
}

uint64_t sub_10017A594()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_10017A73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[4] = a4;
  v5[5] = a5;
  v5[2] = a1;
  v5[3] = a3;
  v6 = type metadata accessor for MainActor(0);
  v5[6] = v6;
  v5[7] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10017A7B0, v7, v8);
}

uint64_t sub_10017A7B0()
{
  _QWORD *v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[6];
  v2 = (const void *)v0[4];
  v3 = (void *)v0[5];
  v5 = (void *)v0[2];
  v4 = (void *)v0[3];
  swift_release();
  v0[8] = _Block_copy(v2);
  v6 = v4;
  v7 = v3;
  v0[9] = static MainActor.shared.getter(v5);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10017A844, v8, v9);
}

uint64_t sub_10017A844()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD);
  void *v2;
  void *v3;
  void *v4;

  v1 = *(void (***)(_QWORD, _QWORD))(v0 + 64);
  v2 = *(void **)(v0 + 40);
  v4 = *(void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 72));

  v1[2](v1, 0);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void CollectionPickerContaineeViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Maps.CollectionPickerContaineeViewController", 44, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

void sub_10017A9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *Strong;
  void *v5;
  void *v6;
  _BYTE v7[24];
  uint64_t v8;

  sub_1000110D4(a1, (uint64_t)v7);
  if (v8)
  {
    v2 = sub_10000E4BC(0, (unint64_t *)&qword_10149DF70, off_1011960E8);
    if ((swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v2, 6) & 1) != 0)
    {
      v3 = v6;
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC4Maps39CollectionPickerContaineeViewController_delegate);
      if (Strong)
      {
        v5 = Strong;
        objc_msgSend(Strong, "collectionPickerContaineeViewController:selectCollection:", v1, v3);

        swift_unknownObjectRelease(v5);
      }
      else
      {

      }
    }
  }
  else
  {
    sub_10000C180((uint64_t)v7);
  }
}

uint64_t type metadata accessor for CollectionPickerContaineeViewController()
{
  return objc_opt_self(_TtC4Maps39CollectionPickerContaineeViewController);
}

uint64_t sub_10017AACC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 72));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10017AB10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v6 = v0[9];
  v5 = v0[10];
  v7 = (_QWORD *)swift_task_alloc(dword_10149DF64);
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_10000C0E0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10149DF60
                                                                              + dword_10149DF60))(v2, v3, v4, v6, v5);
}

id sub_10017AC00(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  id v7;
  objc_super v9;

  v3 = &v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_QWORD *)v3 + 8) = 0;
  v4 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider;
  v5 = objc_allocWithZone((Class)type metadata accessor for NearbyTransitDeparturesProvider(0));
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView] = 0;
  v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition] = 1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_initialMapViewMode] = 0;

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  v7 = objc_msgSendSuper2(&v9, "initWithCoder:", a1);

  return v7;
}

void sub_10017AD08()
{
  char *v0;
  char *v1;
  objc_class *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  NSString v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  void *object;
  NSString v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  Class isa;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  Class v46;
  uint64_t v47;
  void *ObjCClassFromMetadata;
  uint64_t v49;
  uint64_t v50;
  Class v51;
  id v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  objc_class *v61;
  id v62;
  _BYTE v63[24];
  _QWORD v64[5];
  objc_super v65;
  Swift::String v66;

  v1 = v0;
  v2 = (objc_class *)type metadata accessor for NearbyTransitViewController();
  v65.receiver = v0;
  v65.super_class = v2;
  objc_msgSendSuper2(&v65, "viewDidLoad");
  v3 = objc_msgSend(v0, "headerView");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v0, "view");
    if (v5)
    {
      v6 = v5;
      v7 = String._bridgeToObjectiveC()();
      objc_msgSend(v6, "setAccessibilityIdentifier:", v7);

      v8 = objc_msgSend(objc_allocWithZone((Class)ContainerHeaderView), "initWithCardButtonType:", 0);
      if (v8)
      {
        v9 = v8;
        v61 = v2;
        objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        objc_msgSend(v9, "setDelegate:", v1);
        objc_msgSend(v9, "setHairLineAlpha:", 0.0);
        objc_msgSend(v4, "addSubview:", v9);
        v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
        objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
        objc_msgSend(v10, "addSubview:", v11);
        objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
        if (qword_101490ED0 != -1)
          swift_once(&qword_101490ED0, sub_10011833C);
        v12._countAndFlagsBits = 0xD00000000000001FLL;
        v66._countAndFlagsBits = 0xD000000000000022;
        v66._object = (void *)0x8000000100E4DD90;
        v12._object = (void *)0x8000000100E4DD70;
        v13._countAndFlagsBits = 0x542079627261654ELL;
        v13._object = (void *)0xEE007469736E6172;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_1014D4B80, v13, v66)._object;
        v15 = String._bridgeToObjectiveC()();
        objc_msgSend(v11, "setText:", v15, swift_bridgeObjectRelease(object).n128_f64[0]);

        objc_msgSend(v11, "setNumberOfLines:", 2);
        v16 = objc_msgSend((id)objc_opt_self(UIFont), "_preferredFontForTextStyle:weight:", UIFontTextStyleTitle1, UIFontWeightBold);
        objc_msgSend(v11, "setFont:", v16);

        v62 = (id)objc_opt_self(NSLayoutConstraint);
        v60 = sub_100008B04((uint64_t *)&unk_101493B10);
        v17 = swift_allocObject(v60, 64, 7);
        *(_OWORD *)(v17 + 16) = xmmword_100E2A2C0;
        v18 = objc_msgSend(v11, "leadingAnchor");
        v19 = objc_msgSend(v10, "leadingAnchor");
        v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, 16.0);

        *(_QWORD *)(v17 + 32) = v20;
        v21 = objc_msgSend(v11, "trailingAnchor");
        v22 = objc_msgSend(v10, "trailingAnchor");
        v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, -16.0);

        *(_QWORD *)(v17 + 40) = v23;
        v24 = objc_msgSend(v11, "topAnchor");
        v25 = objc_msgSend(v10, "topAnchor");
        v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, 16.0);

        *(_QWORD *)(v17 + 48) = v26;
        v27 = objc_msgSend(v11, "bottomAnchor");
        v28 = objc_msgSend(v10, "bottomAnchor");
        v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, -14.0);

        *(_QWORD *)(v17 + 56) = v29;
        specialized Array._endMutation()(v30);
        sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v62, "activateConstraints:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

        objc_msgSend(v9, "setTitleView:", v10);
        v32 = swift_allocObject(v60, 64, 7);
        *(_OWORD *)(v32 + 16) = xmmword_100E2A2C0;
        v33 = objc_msgSend(v9, "leadingAnchor");
        v34 = objc_msgSend(v4, "leadingAnchor");
        v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

        *(_QWORD *)(v32 + 32) = v35;
        v36 = objc_msgSend(v9, "trailingAnchor");
        v37 = objc_msgSend(v4, "trailingAnchor");
        v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

        *(_QWORD *)(v32 + 40) = v38;
        v39 = objc_msgSend(v9, "topAnchor");
        v40 = objc_msgSend(v4, "topAnchor");
        v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

        *(_QWORD *)(v32 + 48) = v41;
        v42 = objc_msgSend(v9, "bottomAnchor");
        v43 = objc_msgSend(v4, "bottomAnchor");
        v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

        *(_QWORD *)(v32 + 56) = v44;
        v64[0] = v32;
        specialized Array._endMutation()(v45);
        v46 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v62, "activateConstraints:", v46, swift_bridgeObjectRelease(v32).n128_f64[0]);

        v2 = v61;
      }
      v47 = sub_10000E4BC(0, &qword_10149E100, UITableView_ptr);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v47);
      v49 = sub_100008B04(&qword_10149E108);
      v50 = swift_allocObject(v49, 40, 7);
      *(_OWORD *)(v50 + 16) = xmmword_100E22F40;
      *(_QWORD *)(v50 + 32) = v2;
      sub_100008B04((uint64_t *)&unk_10149E110);
      v51 = Array._bridgeToObjectiveC()().super.isa;
      v52 = objc_msgSend(ObjCClassFromMetadata, "appearanceWhenContainedInInstancesOfClasses:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

      v53 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v52, "setBackgroundColor:", v53);

      v54 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider;
      v55 = *(char **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
      v64[3] = v2;
      v64[4] = &off_1011A7200;
      v64[0] = v1;
      v56 = (uint64_t)&v55[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate];
      swift_beginAccess(&v55[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_viewDelegate], v63, 33, 0);
      v57 = v55;
      v58 = v1;
      sub_10017D020((uint64_t)v64, v56);
      swift_endAccess(v63);

      sub_10017B58C();
      sub_10017BBA8();
      v59 = *(_QWORD *)&v1[v54] + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_delegate;
      *(_QWORD *)(v59 + 8) = &off_1011A7228;
      swift_unknownObjectWeakAssign(v59, v58);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10017B58C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  Class isa;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  char *v78;
  int v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  _QWORD v90[5];

  v90[0] = 0;
  v90[1] = 0xE000000000000000;
  v90[2] = _swiftEmptyArrayStorage;
  v90[3] = 0;
  State.init(wrappedValue:)(&v80, v90, &type metadata for NearbyTransitCategory);
  v1 = v80;
  v3 = v82;
  v2 = v83;
  v76 = v81;
  LOBYTE(v90[0]) = 0;
  State.init(wrappedValue:)(&v80, v90, &type metadata for Bool);
  v4 = v80;
  v5 = v81;
  v6 = type metadata accessor for NearbyTransitDeparturesProvider(0);
  v7 = sub_10000BC84(&qword_10149E120, type metadata accessor for NearbyTransitDeparturesProvider, (uint64_t)&unk_100E252A0);
  v8 = EnvironmentObject.init()(v6, v7);
  v78 = v0;
  v9 = (uint64_t *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 8];
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 16];
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 24];
  v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 32];
  v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 40];
  v16 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 48];
  v17 = *(void **)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 56];
  v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView + 64];
  *v9 = v1;
  *(_OWORD *)(v9 + 1) = v76;
  v9[3] = v3;
  v9[4] = v2;
  v9[5] = v4;
  v9[6] = v5;
  v9[7] = v8;
  v9[8] = v19;
  v74 = v18;
  sub_10017D068(v10, v11, v12, v13, v14, v15, v16, v17);
  v20 = v9[1];
  if (v20)
  {
    v22 = (void *)v9[7];
    v21 = v9[8];
    v23 = v6;
    v24 = v9[5];
    v25 = v9[6];
    v27 = v9[3];
    v26 = v9[4];
    v77 = v7;
    v28 = v9[2];
    v29 = *v9;
    v30 = *(void **)&v78[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
    v74 = v21;
    v75 = v24 & 1;
    sub_10017D0D8(v29, v20, v28, v27, v26, v24, v25, v22);
    v31 = v30;
    v32 = static ObservableObject.environmentStore.getter(v23, v77);
    v33 = v75;
  }
  else
  {
    v29 = 0;
    v28 = 0;
    v27 = 0;
    v26 = 0;
    v33 = 0;
    v25 = 0;
    v22 = 0;
    v21 = 0;
    v32 = 0;
    v31 = 0;
  }
  v80 = v29;
  *(_QWORD *)&v81 = v20;
  *((_QWORD *)&v81 + 1) = v28;
  v82 = v27;
  v83 = v26;
  v84 = v33;
  v85 = v25;
  v86 = v22;
  v87 = v21;
  v88 = v32;
  v89 = v31;
  v34 = objc_allocWithZone((Class)sub_100008B04(&qword_10149E128));
  v35 = (void *)UIHostingController.init(rootView:)(&v80);
  objc_msgSend(v78, "addChildViewController:", v35, v74);
  v36 = objc_msgSend(v78, "contentView");
  if (v36)
  {
    v37 = v36;
    v38 = objc_msgSend(v35, "view");
    if (!v38)
    {
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    v39 = v38;
    objc_msgSend(v37, "addSubview:", v38);

  }
  objc_msgSend(v35, "didMoveToParentViewController:", v78);
  v40 = objc_msgSend(v35, "view");
  if (!v40)
  {
LABEL_13:

    return;
  }
  v41 = v40;
  objc_msgSend(v40, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v42 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v41, "setBackgroundColor:", v42);

  type metadata accessor for UILayoutPriority(0);
  v44 = v43;
  LODWORD(v90[0]) = 1132068864;
  v79 = 1065353216;
  v45 = sub_10000BC84((unint64_t *)&qword_10149E130, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&protocol conformance descriptor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v80, v90, &v79, v44, v45);
  LODWORD(v46) = v80;
  objc_msgSend(v41, "setContentHuggingPriority:forAxis:", 1, v46);
  LODWORD(v90[0]) = 1132068864;
  v79 = 1065353216;
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v80, v90, &v79, v44, v45);
  LODWORD(v47) = v80;
  objc_msgSend(v41, "setContentCompressionResistancePriority:forAxis:", 1, v47);
  v48 = sub_100008B04((uint64_t *)&unk_101493B10);
  v49 = swift_allocObject(v48, 64, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100E2A2C0;
  v50 = objc_msgSend(v41, "leadingAnchor");
  v51 = objc_msgSend(v78, "contentView");
  if (!v51)
    goto LABEL_15;
  v52 = v51;
  v53 = objc_msgSend(v51, "leadingAnchor");

  v54 = objc_msgSend(v50, "constraintEqualToAnchor:", v53);
  *(_QWORD *)(v49 + 32) = v54;
  v55 = objc_msgSend(v41, "trailingAnchor");
  v56 = objc_msgSend(v78, "contentView");
  if (!v56)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v57 = v56;
  v58 = objc_msgSend(v56, "trailingAnchor");

  v59 = objc_msgSend(v55, "constraintEqualToAnchor:", v58);
  *(_QWORD *)(v49 + 40) = v59;
  v60 = objc_msgSend(v41, "topAnchor");
  v61 = objc_msgSend(v78, "contentView");
  if (!v61)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, "topAnchor");

  v64 = objc_msgSend(v60, "constraintEqualToAnchor:", v63);
  *(_QWORD *)(v49 + 48) = v64;
  v65 = objc_msgSend(v41, "bottomAnchor");
  v66 = objc_msgSend(v78, "contentView");
  if (v66)
  {
    v67 = v66;
    v68 = (void *)objc_opt_self(NSLayoutConstraint);
    v69 = objc_msgSend(v67, "bottomAnchor");

    v70 = objc_msgSend(v65, "constraintEqualToAnchor:", v69);
    *(_QWORD *)(v49 + 56) = v70;
    v80 = v49;
    specialized Array._endMutation()(v71);
    v72 = v80;
    sub_10000E4BC(0, (unint64_t *)&qword_101493070, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v68, "activateConstraints:", isa, swift_bridgeObjectRelease(v72).n128_f64[0]);

    goto LABEL_13;
  }
LABEL_18:
  __break(1u);
}

void sub_10017BBA8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSObject *v3;
  id v4;
  void *v5;
  unsigned int v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;

  v1 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView);
  if (v2)
  {
    v3 = v2;
    if (-[NSObject isUserLocationVisible](v3, "isUserLocationVisible"))
    {
      v4 = objc_msgSend((id)objc_opt_self(MKLocationManager), "sharedLocationManager");
      if (!v4)
      {
        __break(1u);
        return;
      }
      v5 = v4;
      v6 = objc_msgSend(v4, "isAuthorizedForPreciseLocation");

      if (v6)
      {
        v22 = *(id *)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
        sub_100027550();
LABEL_14:

        return;
      }
    }

    v7 = *(void **)(v0 + v1);
    if (v7)
    {
      v22 = v7;
      objc_msgSend(v22, "centerCoordinate");
      v10 = objc_msgSend(objc_allocWithZone((Class)GEOLocation), "initWithLatitude:longitude:", v8, v9);
      if (v10)
      {
        v11 = v10;
        objc_msgSend(v22, "_zoomLevel");
        v13 = v12;
        v14 = *(_BYTE **)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
        v14[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser] = 0;
        v15 = *(void **)&v14[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation];
        *(_QWORD *)&v14[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation] = v11;
        v3 = v14;
        v16 = v11;

        v17 = (char *)v3 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedZoomLevel;
        *(_QWORD *)v17 = v13;
        v17[8] = 0;
        sub_100027A38();

      }
      else
      {
        if (qword_101490E90 != -1)
          swift_once(&qword_101490E90, sub_100114734);
        v18 = type metadata accessor for Logger(0);
        v19 = sub_10000E918(v18, (uint64_t)qword_1014D4AC0);
        v3 = Logger.logObject.getter(v19);
        v20 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v3, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v21 = 0;
          _os_log_impl((void *)&_mh_execute_header, v3, v20, "Unable to get the center coordinates from mapView when requesting nearby departures", v21, 2u);
          swift_slowDealloc(v21, -1, -1);
        }
      }
      goto LABEL_14;
    }
  }
}

void sub_10017BE34(char a1)
{
  char *v1;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  void *v7;
  _BYTE *v8;
  void *v9;
  objc_super v10;

  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  objc_msgSendSuper2(&v10, "viewWillAppear:", a1 & 1);
  v3 = *(_BYTE **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
  v4 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive;
  v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive] = 1;
  v5 = *(void **)&v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater];
  if (v5)
  {
    v6 = v3;
    objc_msgSend(v5, "setActive:", 1);
    if ((v3[v4] & 1) == 0)
    {
      v7 = *(void **)&v6[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_singleLocationUpdate];
      if (v7)
      {
        objc_msgSend(v7, "cancel");

        goto LABEL_7;
      }
    }
  }
  else
  {
    v8 = v3;
  }

LABEL_7:
  v9 = *(void **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator];
  if (v9)
  {
    if (objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator], "displayedViewMode") != (id)3)objc_msgSend(v9, "setViewMode:animated:", 3, 1);
  }
}

id sub_10017BF88(char a1)
{
  char *v1;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;
  _BYTE *v7;
  void *v8;
  void *v9;
  id v10;
  objc_super v12;

  v3 = *(_BYTE **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
  v4 = OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive;
  v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isActive] = 0;
  v5 = *(void **)&v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_mapItemUpdater];
  if (v5)
  {
    v6 = v3;
    objc_msgSend(v5, "setActive:", 0);
    if ((v3[v4] & 1) != 0)
      goto LABEL_7;
  }
  else
  {
    v7 = v3;
  }
  v8 = *(void **)&v3[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_singleLocationUpdate];
  if (v8)
    objc_msgSend(v8, "cancel");
LABEL_7:

  v9 = *(void **)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator];
  if (v9)
  {
    v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator], "displayedViewMode");
    if (v10 != *(id *)&v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_initialMapViewMode])
      objc_msgSend(v9, "setViewMode:animated:");
  }
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  return objc_msgSendSuper2(&v12, "viewWillDisappear:", a1 & 1);
}

void sub_10017C0D8()
{
  uint64_t v0;
  id v1;
  NSString v2;
  unsigned __int8 v3;
  void *v4;

  v1 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "BOOLForKey:", v2);

  if ((v3 & 1) == 0 && sub_1000B6314())
  {
    v4 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
    if (v4)
      objc_msgSend(v4, "showNearbyTeachableMomentCard");
  }
}

id sub_10017C224()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NearbyTransitViewController()
{
  return objc_opt_self(_TtC4Maps27NearbyTransitViewController);
}

void sub_10017C2EC(uint64_t a1)
{
  uint64_t v1;
  id v3;
  NSString v4;
  unsigned __int8 v5;
  void *v6;

  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "BOOLForKey:", v4);

  if ((v5 & 1) == 0 && *(_QWORD *)(a1 + 16))
  {
    v6 = *(void **)(v1 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
    if (v6)
      objc_msgSend(v6, "showNearbyTeachableMomentCard");
  }
}

uint64_t sub_10017C43C(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  __n128 v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  Class isa;
  Class v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;

  v3 = v2;
  v34 = a2;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100008B04((uint64_t *)&unk_10149E730);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  v18 = a1[9];
  v19 = objc_msgSend((id)swift_unknownObjectRetain(v18), "timeZone");
  if (v19)
  {
    v21 = v19;
    static TimeZone._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

    v22 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 0, 1, v22);
  }
  else
  {
    v23 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 1, 1, v23);
  }
  sub_10017D144((uint64_t)v14, (uint64_t)v17);
  sub_10017C6AC(v3, a1, (uint64_t)v8);
  v24 = *(void **)(v3 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator);
  if (v24)
  {
    v32 = v6;
    v33 = v5;
    sub_10017D18C((uint64_t)v17, (uint64_t)v11);
    v25 = type metadata accessor for TimeZone(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25);
    swift_unknownObjectRetain(v18);
    isa = 0;
    if (v27 != 1)
    {
      isa = TimeZone._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
    }
    v29 = Date._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "viewController:displayTransitSchedulesForDepartureSequence:withTimeZone:scheduleWindowStartDate:includeAllDirections:", v3, v18, isa, v29, v34 & 1);
    swift_unknownObjectRelease_n(v18, 2);

    v6 = v32;
    v5 = v33;
  }
  else
  {
    swift_unknownObjectRelease(v18);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_100010CC4((uint64_t)v17, (uint64_t *)&unk_10149E730);
}

uint64_t sub_10017C6AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  uint64_t KeyPath;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void *v21;
  Class isa;
  id v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v26;

  v6 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v26 - v14);
  v16 = *(void **)(a1 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
  KeyPath = swift_getKeyPath(&unk_100E30640);
  v18 = swift_getKeyPath(&unk_100E30668);
  v19 = v16;
  static Published.subscript.getter(v15, v19, KeyPath, v18);

  swift_release();
  swift_release();
  v20 = a2[1];
  if ((v20 & 0x2000000000000000) != 0)
  {
    if ((v20 & 0xF00000000000000) != 0)
      return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v10 + 32))(a3, v15, v9);
  }
  else if ((*a2 & 0xFFFFFFFFFFFFLL) != 0)
  {
    return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v10 + 32))(a3, v15, v9);
  }
  v21 = (void *)a2[9];
  isa = Date._bridgeToObjectiveC()().super.isa;
  v23 = objc_msgSend(v21, "serviceResumesAfterDate:", isa);

  if (v23)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v23);

    v24 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v24(v8, v12, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v15, v9);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v24)(a3, v8, v9);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  sub_100010CC4((uint64_t)v8, (uint64_t *)&unk_10149E140);
  return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v10 + 32))(a3, v15, v9);
}

id sub_10017C990(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  NSString v16;
  unsigned __int8 v17;
  objc_super v19;

  v3 = &v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitView];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_QWORD *)v3 + 8) = 0;
  v4 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider;
  v5 = objc_allocWithZone((Class)type metadata accessor for NearbyTransitDeparturesProvider(0));
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_mapView] = 0;
  v8 = OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition;
  v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition] = 1;
  v9 = objc_msgSend(a1, "containerViewController");
  v10 = v9;
  if (v9)
  {
    v11 = objc_msgSend(v9, "chromeViewController");

    if (v11)
    {
      v10 = objc_msgSend(v11, "mapView");

    }
    else
    {
      v10 = 0;
    }
  }
  v12 = *(void **)&v6[v7];
  *(_QWORD *)&v6[v7] = v10;

  v13 = objc_msgSend(a1, "displayedViewMode");
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_initialMapViewMode] = v13;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_actionCoordinator] = a1;
  v14 = (void *)objc_opt_self(NSUserDefaults);
  swift_unknownObjectRetain(a1);
  v15 = objc_msgSend(v14, "standardUserDefaults");
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "BOOLForKey:", v16);

  v6[v8] = v17 ^ 1;
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for NearbyTransitViewController();
  return objc_msgSendSuper2(&v19, "initWithNibName:bundle:", 0, 0);
}

void sub_10017CB70(id a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  unsigned int v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  void *v23;
  char *v24;
  id v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;

  v2 = v1;
  if (v1[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_shouldAlwaysPrioritizeUserPosition] != 1
    || !objc_msgSend(a1, "isUserLocationVisible"))
  {
    goto LABEL_7;
  }
  v4 = objc_msgSend((id)objc_opt_self(MKLocationManager), "sharedLocationManager");
  if (!v4)
  {
    __break(1u);
    return;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "isAuthorizedForPreciseLocation");

  if (v6)
  {
    v7 = *(void **)&v2[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
    if ((*((_BYTE *)v7 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser) & 1) == 0)
    {
      v31 = v7;
      sub_100027550();

    }
  }
  else
  {
LABEL_7:
    if ((char *)objc_msgSend(a1, "userTrackingMode") - 1 >= (char *)2)
    {
      if (qword_101490E90 != -1)
        swift_once(&qword_101490E90, sub_100114734);
      v8 = type metadata accessor for Logger(0);
      sub_10000E918(v8, (uint64_t)qword_1014D4AC0);
      v9 = a1;
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v10, v11))
      {
        v30 = v2;
        v12 = (uint8_t *)swift_slowAlloc(12, -1);
        v13 = (_QWORD *)swift_slowAlloc(8, -1);
        *(_DWORD *)v12 = 138412290;
        v32 = v9;
        v14 = v9;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v12 + 4, v12 + 12);
        *v13 = v9;

        v2 = v30;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "changed visible region on mapview: %@", v12, 0xCu);
        v15 = sub_100008B04((uint64_t *)&unk_101494470);
        swift_arrayDestroy(v13, 1, v15);
        swift_slowDealloc(v13, -1, -1);
        swift_slowDealloc(v12, -1, -1);

      }
      else
      {

      }
      objc_msgSend(v9, "centerCoordinate", v30, v32);
      v18 = objc_msgSend(objc_allocWithZone((Class)GEOLocation), "initWithLatitude:longitude:", v16, v17);
      if (v18)
      {
        v19 = v18;
        objc_msgSend(v9, "_zoomLevel");
        v21 = v20;
        v22 = *(_BYTE **)&v2[OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider];
        v22[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser] = 0;
        v23 = *(void **)&v22[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation];
        *(_QWORD *)&v22[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation] = v19;
        v24 = v22;
        v25 = v19;

        v26 = &v24[OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedZoomLevel];
        *(_QWORD *)v26 = v21;
        v26[8] = 0;
        sub_100027A38();

      }
      else
      {
        v27 = Logger.logObject.getter(0);
        v28 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v29 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "Unable to get updated center coordinates from mapView", v29, 2u);
          swift_slowDealloc(v29, -1, -1);
        }

      }
    }
  }
}

void sub_10017CF18(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *oslog;

  if ((unint64_t)(a1 - 1) <= 1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps27NearbyTransitViewController_nearbyTransitDeparturesProvider);
    if ((*((_BYTE *)v2 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser) & 1) == 0)
    {
      v3 = v2;
      sub_100027550();

    }
  }
  if (qword_101490E90 != -1)
    swift_once(&qword_101490E90, sub_100114734);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_10000E918(v4, (uint64_t)qword_1014D4AC0);
  oslog = Logger.logObject.getter(v5);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Map mode switched to tracking, requesting the data provider to use the user location instead", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

}

uint64_t sub_10017D020(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_1014940B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10017D068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a3);
    swift_unknownObjectRelease(a4);
    swift_release(a5);
    swift_release(a7);

  }
}

double sub_10017D0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v13;
  double result;

  if (a2)
  {
    v13 = a8;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    swift_unknownObjectRetain(a4);
    swift_retain(a5);
    *(_QWORD *)&result = swift_retain(a7).n128_u64[0];
  }
  return result;
}

uint64_t sub_10017D144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149E730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017D18C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149E730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10017D200(char *a1, uint64_t a2, _QWORD *a3)
{
  void *v3;
  char *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;

  v3 = *(void **)&a1[*a3];
  v4 = a1;
  v5 = objc_msgSend(v3, "text");
  if (v5)
  {
    v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
  }
  else
  {

    v9 = 0;
  }
  return v9;
}

void sub_10017D298(char *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  id v11;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v7 = v6;
    v8 = *(void **)&a1[*a4];
    v9 = a1;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = *(void **)&a1[*a4];
    v10 = a1;
    v11 = 0;
  }
  objc_msgSend(v8, "setText:", v11);

}

void sub_10017D39C(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  BOOL v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  Class isa;
  uint64_t v13;
  Class v14;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_imageView);
  v4 = OBJC_IVAR____TtC4Maps14EmptyStateView_image;
  objc_msgSend(v3, "setImage:", *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_image));
  objc_msgSend(v3, "setHidden:", *(_QWORD *)(v1 + v4) == 0);
  v5 = *(_QWORD *)(v1 + v4);
  if ((a1 == 0) == (v5 != 0))
  {
    v6 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_1000174D4();
    v7 = v5 == 0;
    if (v5)
      v8 = &OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints;
    else
      v8 = &OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints;
    v9 = *v8;
    v10 = *(_QWORD *)(v1 + v9);
    if (v7)
      v11 = &OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints;
    else
      v11 = &OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints;
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + v9));
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

    v13 = *(_QWORD *)(v1 + *v11);
    swift_bridgeObjectRetain(v13);
    v14 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "activateConstraints:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  }
}

void sub_10017D51C(char *a1, uint64_t a2, void *a3, _QWORD *a4, void (*a5)(void *))
{
  void *v7;
  char *v8;
  id v9;

  v7 = *(void **)&a1[*a4];
  *(_QWORD *)&a1[*a4] = a3;
  v9 = a3;
  v8 = a1;
  a5(v7);

}

void sub_10017D580(void *a1)
{
  char *v1;
  char *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  Class v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  Class v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Class v32;
  Class v33;

  v2 = v1;
  if (a1)
    objc_msgSend(a1, "removeFromSuperview");
  v3 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_button];
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v1, "addSubview:", v4);
    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints;
    v7 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints];
    sub_1000174D4();
    swift_bridgeObjectRetain(v7);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    v9 = sub_100008B04((uint64_t *)&unk_101493B10);
    v10 = swift_allocObject(v9, 56, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100E25080;
    v11 = objc_msgSend(v4, "centerXAnchor");
    v12 = objc_msgSend(v2, "centerXAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v10 + 32) = v13;
    v14 = objc_msgSend(v4, "leadingAnchor");
    v15 = objc_msgSend(v2, "leadingAnchor");
    v16 = objc_msgSend(v14, "constraintGreaterThanOrEqualToAnchor:", v15);

    *(_QWORD *)(v10 + 40) = v16;
    v17 = objc_msgSend(v4, "trailingAnchor");
    v18 = objc_msgSend(v2, "trailingAnchor");
    v19 = objc_msgSend(v17, "constraintLessThanOrEqualToAnchor:", v18);

    *(_QWORD *)(v10 + 48) = v19;
    specialized Array._endMutation()(v20);
    v21 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "activateConstraints:", v21, swift_bridgeObjectRelease(v10).n128_f64[0]);

    v22 = sub_10017D8F0();
    v23 = *(_QWORD *)&v2[v6];
    *(_QWORD *)&v2[v6] = v22;
    swift_bridgeObjectRelease(v23);
    v24 = *(_QWORD *)&v2[v6];
    swift_bridgeObjectRetain(v24);
    v32 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "activateConstraints:", v32, swift_bridgeObjectRelease(v24).n128_f64[0]);

  }
  else
  {
    v25 = (void *)objc_opt_self(NSLayoutConstraint);
    v26 = OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints;
    v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints];
    sub_1000174D4();
    swift_bridgeObjectRetain(v27);
    v28 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "deactivateConstraints:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

    v29 = sub_10017D8F0();
    v30 = *(_QWORD *)&v2[v26];
    *(_QWORD *)&v2[v26] = v29;
    swift_bridgeObjectRelease(v30);
    v31 = *(_QWORD *)&v2[v26];
    swift_bridgeObjectRetain(v31);
    v33 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "activateConstraints:", v33, swift_bridgeObjectRelease(v31).n128_f64[0]);

  }
}

uint64_t sub_10017D8F0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;

  v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_button];
  if (v1)
  {
    v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle + 8];
    v3 = sub_100008B04((uint64_t *)&unk_101493B10);
    if (v2)
    {
      v4 = swift_allocObject(v3, 56, 7);
      *(_OWORD *)(v4 + 16) = xmmword_100E25080;
      v5 = v1;
      v6 = objc_msgSend(v5, "topAnchor");
      v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel], "bottomAnchor");
      v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, 12.0);

      *(_QWORD *)(v4 + 32) = v8;
      v9 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
      v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView], "topAnchor");
      v11 = objc_msgSend(v5, "bottomAnchor");
      v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, 16.0);

      *(_QWORD *)(v4 + 40) = v12;
      v13 = objc_msgSend(*(id *)&v0[v9], "bottomAnchor");
      v14 = objc_msgSend(v0, "bottomAnchor");
      v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

      *(_QWORD *)(v4 + 48) = v15;
    }
    else
    {
      v4 = swift_allocObject(v3, 48, 7);
      *(_OWORD *)(v4 + 16) = xmmword_100E250A0;
      v5 = v1;
      v28 = objc_msgSend(v5, "topAnchor");
      v29 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel], "bottomAnchor");
      v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, 12.0);

      *(_QWORD *)(v4 + 32) = v30;
      v31 = objc_msgSend(v5, "bottomAnchor");
      v32 = objc_msgSend(v0, "bottomAnchor");
      v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

      *(_QWORD *)(v4 + 40) = v33;
    }
    specialized Array._endMutation()(v16);
    v34 = v4;

  }
  else
  {
    v17 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle + 8];
    v18 = sub_100008B04((uint64_t *)&unk_101493B10);
    if (v17)
    {
      v19 = swift_allocObject(v18, 48, 7);
      *(_OWORD *)(v19 + 16) = xmmword_100E250A0;
      v20 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
      v21 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView], "topAnchor");
      v22 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel], "bottomAnchor");
      v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, 16.0);

      *(_QWORD *)(v19 + 32) = v23;
      v24 = objc_msgSend(*(id *)&v0[v20], "bottomAnchor");
      v25 = objc_msgSend(v0, "bottomAnchor");
      v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

      *(_QWORD *)(v19 + 40) = v26;
    }
    else
    {
      v19 = swift_allocObject(v18, 40, 7);
      *(_OWORD *)(v19 + 16) = xmmword_100E23F50;
      v35 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel], "bottomAnchor");
      v36 = objc_msgSend(v0, "bottomAnchor");
      v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

      *(_QWORD *)(v19 + 32) = v37;
    }
    specialized Array._endMutation()(v27);
    return v19;
  }
  return v34;
}

void sub_10017DD84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Class v18;
  _QWORD v19[5];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel, v19, 33, 0);
  swift_bridgeObjectRetain(v4);
  UIListContentConfiguration.text.setter(v3, v4);
  swift_endAccess(v19);
  v6 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  v7 = *(void **)(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v19[3] = v8;
  v19[4] = &protocol witness table for UIListContentConfiguration;
  v9 = sub_100011DCC(v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v9, v5, v8);
  v10 = v7;
  UITableViewCell.contentConfiguration.setter(v19);

  objc_msgSend(*(id *)(v1 + v6), "setHidden:", *(_QWORD *)(v2 + 8) == 0);
  v11 = (void *)objc_opt_self(NSLayoutConstraint);
  v12 = OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints);
  sub_1000174D4();
  swift_bridgeObjectRetain(v13);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v15 = sub_10017D8F0();
  v16 = *(_QWORD *)(v1 + v12);
  *(_QWORD *)(v1 + v12) = v15;
  swift_bridgeObjectRelease(v16);
  v17 = *(_QWORD *)(v1 + v12);
  swift_bridgeObjectRetain(v17);
  v18 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v11, "activateConstraints:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

}

void sub_10017DF4C(char *a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  if (a3)
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = (uint64_t *)&a1[*a4];
  v11 = v10[1];
  *v10 = v8;
  v10[1] = v9;
  v13 = a1;
  v12 = swift_bridgeObjectRelease(v11);
  a5(v12);

}

void sub_10017DFC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  _QWORD v10[5];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureSubtitle;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureSubtitle);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel, v10, 33, 0);
  swift_bridgeObjectRetain(v4);
  UIListContentConfiguration.secondaryText.setter(v3, v4);
  swift_endAccess(v10);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView);
  v7 = type metadata accessor for UIListContentConfiguration(0);
  v10[3] = v7;
  v10[4] = &protocol witness table for UIListContentConfiguration;
  v8 = sub_100011DCC(v10);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v8, v5, v7);
  v9 = v6;
  UITableViewCell.contentConfiguration.setter(v10);

}

id sub_10017E19C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  id v18;
  objc_super v20;

  v9 = OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC4Maps14EmptyStateView_imageView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  static UIListContentConfiguration.valueCell()();
  v14 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_image] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps14EmptyStateView_button] = 0;
  v15 = &v11[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v16 = &v11[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureSubtitle];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v11[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureAction];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for EmptyStateView(0);
  v18 = objc_msgSendSuper2(&v20, "initWithFrame:", a1, a2, a3, a4);
  sub_10017E348();
  sub_10017E9F0();

  return v18;
}

uint64_t sub_10017E348()
{
  char *v0;
  char *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSString v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  void *v18;
  id v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  id v25;
  NSString v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  __n128 v32;
  void (*v33)(_QWORD *, _QWORD);
  id v34;
  NSString v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  id v46;
  id v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD v53[5];
  _BYTE v54[24];

  v1 = v0;
  v2 = sub_100008B04(&qword_10149E1C8);
  v3 = __chkstk_darwin(v2);
  v52 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for UIBackgroundConfiguration(0, v3);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  *(_QWORD *)&v6 = __chkstk_darwin(v5).n128_u64[0];
  v49 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel];
  objc_msgSend(v0, "addSubview:", v8, v6);
  v9 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel];
  objc_msgSend(v0, "addSubview:", v9);
  v10 = *(void **)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_imageView];
  objc_msgSend(v1, "addSubview:", v10);
  v11 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView]);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setAccessibilityIdentifier:", v12);

  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "setTextAlignment:", 1);
  objc_msgSend(v8, "setNumberOfLines:", 0);
  v13 = (void *)objc_opt_self(UIFont);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleTitle2);
  v15 = v14;
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = objc_msgSend(v13, "_mapkit_preferredFontForTextStyleInTableViewCell:weight:", v16, UIFontWeightSemibold);

  objc_msgSend(v8, "setFont:", v17);
  v18 = (void *)objc_opt_self(UIColor);
  v19 = objc_msgSend(v18, "labelColor");
  objc_msgSend(v8, "setTextColor:", v19);

  objc_msgSend(v8, "setAdjustsFontForContentSizeCategory:", 1);
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setAccessibilityIdentifier:", v20);

  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setTextAlignment:", 1);
  static String._unconditionallyBridgeFromObjectiveC(_:)(UIFontTextStyleBody);
  v22 = v21;
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  v24 = objc_msgSend(v13, "_mapkit_preferredFontForTextStyleInTableViewCell:weight:", v23, UIFontWeightRegular);

  objc_msgSend(v9, "setFont:", v24);
  v25 = objc_msgSend(v18, "secondaryLabelColor");
  objc_msgSend(v9, "setTextColor:", v25);

  objc_msgSend(v9, "setNumberOfLines:", 0);
  objc_msgSend(v9, "setAdjustsFontForContentSizeCategory:", 1);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v26);

  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "setHidden:", 1);
  v27 = objc_msgSend(v18, "secondaryLabelColor");
  objc_msgSend(v10, "setTintColor:", v27);

  v28 = objc_msgSend(v13, "systemFontOfSize:weight:", 48.0, UIFontWeightMedium);
  v29 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v28, 2);

  objc_msgSend(v10, "setPreferredSymbolConfiguration:", v29);
  v30 = objc_msgSend(v18, "secondaryLabelColor");
  v31 = &v1[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel];
  v32 = swift_beginAccess(&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureModel], v54, 33, 0);
  v33 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v53, v32);
  UIListContentConfiguration.TextProperties.color.setter(v30);
  v33(v53, 0);
  swift_endAccess(v54);
  v34 = *(id *)&v1[v11];
  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setAccessibilityIdentifier:", v35);

  objc_msgSend(*(id *)&v1[v11], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v1[v11], "setHidden:", 1);
  objc_msgSend(*(id *)&v1[v11], "setAccessoryType:", 1);
  objc_msgSend(*(id *)&v1[v11], "setSelectionStyle:", 2);
  v36 = *(void **)&v1[v11];
  v37 = type metadata accessor for UIListContentConfiguration(0);
  v53[3] = v37;
  v53[4] = &protocol witness table for UIListContentConfiguration;
  v38 = sub_100011DCC(v53);
  (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v38, v31, v37);
  v39 = v36;
  UITableViewCell.contentConfiguration.setter(v53);

  v40 = v49;
  v41 = static UIBackgroundConfiguration.listCell()();
  UIBackgroundConfiguration.cornerRadius.setter(v41, 10.0);
  v42 = *(void **)&v1[v11];
  v44 = v50;
  v43 = v51;
  v45 = v52;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v52, v40, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  v46 = v42;
  UITableViewCell.backgroundConfiguration.setter(v45);

  v47 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "_pressedDisclosureCell");
  objc_msgSend(*(id *)&v1[v11], "addGestureRecognizer:", v47);

  return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v40, v43);
}

void sub_10017E9F0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  Class isa;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Class v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  Class v65;
  uint64_t v66;

  v1 = v0;
  v63 = (id)objc_opt_self(NSLayoutConstraint);
  v64 = (id)sub_100008B04((uint64_t *)&unk_101493B10);
  v2 = swift_allocObject(v64, 128, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100E30690;
  v3 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_imageView];
  v4 = objc_msgSend(v3, "topAnchor");
  v5 = objc_msgSend(v1, "topAnchor");
  v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

  *(_QWORD *)(v2 + 32) = v6;
  v7 = objc_msgSend(v3, "centerXAnchor");
  v8 = objc_msgSend(v1, "centerXAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v2 + 40) = v9;
  v10 = objc_msgSend(v3, "leadingAnchor");
  v11 = objc_msgSend(v1, "leadingAnchor");
  v12 = objc_msgSend(v10, "constraintGreaterThanOrEqualToAnchor:", v11);

  *(_QWORD *)(v2 + 48) = v12;
  v13 = objc_msgSend(v3, "trailingAnchor");
  v14 = objc_msgSend(v1, "trailingAnchor");
  v15 = objc_msgSend(v13, "constraintLessThanOrEqualToAnchor:", v14);

  *(_QWORD *)(v2 + 56) = v15;
  v16 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel];
  v17 = objc_msgSend(v16, "leadingAnchor");
  v18 = objc_msgSend(v1, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, 16.0);

  *(_QWORD *)(v2 + 64) = v19;
  v20 = objc_msgSend(v16, "trailingAnchor");
  v21 = objc_msgSend(v1, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, -16.0);

  *(_QWORD *)(v2 + 72) = v22;
  v23 = *(void **)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel];
  v24 = objc_msgSend(v23, "topAnchor");
  v25 = objc_msgSend(v16, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, 2.0);

  *(_QWORD *)(v2 + 80) = v26;
  v27 = objc_msgSend(v23, "leadingAnchor");
  v28 = objc_msgSend(v1, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, 16.0);

  *(_QWORD *)(v2 + 88) = v29;
  v30 = objc_msgSend(v23, "trailingAnchor");
  v31 = objc_msgSend(v1, "trailingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, -16.0);

  *(_QWORD *)(v2 + 96) = v32;
  v33 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  v34 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView], "leadingAnchor");
  v35 = objc_msgSend(v1, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v2 + 104) = v36;
  v37 = objc_msgSend(*(id *)&v1[v33], "trailingAnchor");
  v38 = objc_msgSend(v1, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v2 + 112) = v39;
  v40 = objc_msgSend(*(id *)&v1[v33], "heightAnchor");
  v41 = objc_msgSend(v40, "constraintEqualToConstant:", 44.0);

  *(_QWORD *)(v2 + 120) = v41;
  specialized Array._endMutation()(v42);
  sub_1000174D4();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v63, "activateConstraints:", isa, swift_bridgeObjectRelease(v2).n128_f64[0]);

  v44 = swift_allocObject(v64, 40, 7);
  *(_OWORD *)(v44 + 16) = xmmword_100E23F50;
  v45 = objc_msgSend(v16, "topAnchor");
  v46 = objc_msgSend(v1, "topAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  *(_QWORD *)(v44 + 32) = v47;
  v66 = v44;
  specialized Array._endMutation()(v48);
  v49 = OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints;
  v50 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints] = v66;
  swift_bridgeObjectRelease(v50);
  v51 = *(_QWORD *)&v1[v49];
  swift_bridgeObjectRetain(v51);
  v52 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v63, "activateConstraints:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

  v53 = swift_allocObject(v64, 40, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100E23F50;
  v54 = objc_msgSend(v16, "topAnchor");
  v55 = objc_msgSend(v3, "bottomAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, 12.0);

  *(_QWORD *)(v53 + 32) = v56;
  specialized Array._endMutation()(v57);
  v58 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints] = v53;
  swift_bridgeObjectRelease(v58);
  v59 = sub_10017D8F0();
  v60 = OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints;
  v61 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints] = v59;
  swift_bridgeObjectRelease(v61);
  v62 = *(_QWORD *)&v1[v60];
  swift_bridgeObjectRetain(v62);
  v65 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v63, "activateConstraints:", v65, swift_bridgeObjectRelease(v62).n128_f64[0]);

}

id sub_10017F184()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EmptyStateView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10017F2C4()
{
  return type metadata accessor for EmptyStateView(0);
}

uint64_t type metadata accessor for EmptyStateView(uint64_t a1)
{
  uint64_t result;

  result = qword_10149E1B8;
  if (!qword_10149E1B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EmptyStateView);
  return result;
}

uint64_t sub_10017F308(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for UIListContentConfiguration(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = "\b";
    v4[9] = "\b";
    v4[10] = &unk_100E306D0;
    v4[11] = &unk_100E306D0;
    v4[12] = &unk_100E306D0;
    return swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
  return result;
}

void sub_10017F420()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;

  v1 = OBJC_IVAR____TtC4Maps14EmptyStateView_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC4Maps14EmptyStateView_subtitleLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = OBJC_IVAR____TtC4Maps14EmptyStateView_imageView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  static UIListContentConfiguration.valueCell()();
  v4 = OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_imageConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_noImageConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView__bottomVerticalConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_image] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps14EmptyStateView_button] = 0;
  v5 = &v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureTitle];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = &v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureSubtitle];
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = &v0[OBJC_IVAR____TtC4Maps14EmptyStateView_disclosureAction];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x8000000100E41970, "Maps/EmptyStateView.swift", 25, 2, 115, 0);
  __break(1u);
}

uint64_t sub_10017F588()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_10017F5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_10017F5BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10017F5C8()
{
  unint64_t result;

  result = qword_10149E1D0;
  if (!qword_10149E1D0)
  {
    result = swift_getWitnessTable("al7", &type metadata for AvoidStairsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149E1D0);
  }
  return result;
}

uint64_t sub_10017F60C()
{
  return sub_100010D70(&qword_10149E1D8, &qword_10149E1E0, (const char *)&protocol conformance descriptor for _IntentUpdatableEntityProperty<A, B, C>);
}

uint64_t sub_10017F638()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v0 = sub_100008B04(&qword_101494370);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0, v1);
  v4 = *(_QWORD *)(v23[0] - 8);
  __chkstk_darwin(v23[0]);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for String.LocalizationValue(0, v8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for LocalizedStringResource(0, v12);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TypeDisplayRepresentation(0, v17);
  sub_10000E930(v20, qword_1014D4E78);
  sub_10000E918(v20, (uint64_t)qword_1014D4E78);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x74532064696F7641, 0xEC00000073726961);
  static Locale.current.getter(v21);
  (*(void (**)(char *, _QWORD, _QWORD))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v23[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v14, 0, 0, v10, v6, "A setting to avoid stairs when walking", 38, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v15);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v19, v3);
}

uint64_t sub_10017F850(__n128 a1)
{
  uint64_t v1;

  v1 = type metadata accessor for LocalizedStringResource(0, a1);
  sub_10000E930(v1, qword_1014D4E90);
  sub_10000E918(v1, (uint64_t)qword_1014D4E90);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000013, 0x8000000100E4E0D0);
}

uint64_t sub_10017F8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_100008B04(&qword_1014964F0);
  sub_10000E930(v0, qword_1014D4EA8);
  v1 = sub_10000E918(v0, (uint64_t)qword_1014D4EA8);
  IntentDescription.init(stringLiteral:)(0xD00000000000002DLL, 0x8000000100E4E0A0);
  v2 = type metadata accessor for IntentDescription(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_10017F938()
{
  uint64_t result;

  result = swift_getKeyPath(&unk_100E30C28);
  qword_1014D4EC0 = result;
  return result;
}

uint64_t sub_10017F95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return swift_task_switch(sub_10017F978, 0, 0);
}

uint64_t sub_10017F978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 146));
  *(_BYTE *)(v0 + 145) = *(_BYTE *)(v0 + 146);
  if (qword_101491040 != -1)
    swift_once(&qword_101491040, sub_10017F938);
  v2 = qword_1014D4EC0;
  *(_QWORD *)(v0 + 80) = qword_1014D4EC0;
  v3 = async function pointer to AppEntity._setValue<A, B, C>(_:for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  *(_QWORD *)(v0 + 88) = v4;
  v5 = sub_100010D70(&qword_10149E2E0, &qword_10149E2E8, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *(_QWORD *)(v0 + 96) = v5;
  *v4 = v0;
  v4[1] = sub_10017FA78;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v5);
}

uint64_t sub_10017FA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  swift_release();
  swift_release();
  if (v0)
    v3 = sub_100072D78;
  else
    v3 = sub_10017FAF8;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10017FAF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  IntentParameter.wrappedValue.getter(v0 + 5);
  v1 = v0[5];
  v0[4] = v1;
  v2 = qword_1014D4EC0;
  v0[14] = v1;
  v0[15] = v2;
  v3 = async function pointer to AppEntity._value<A, B>(for:)[1];
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_100072CA0;
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v0[12]);
}

double sub_10017FB8C()
{
  double result;

  if (qword_101491040 != -1)
    swift_once(&qword_101491040, sub_10017F938);
  *(_QWORD *)&result = swift_retain().n128_u64[0];
  return result;
}

unint64_t sub_10017FBD0()
{
  unint64_t result;

  result = qword_10149E1E8;
  if (!qword_10149E1E8)
  {
    result = swift_getWitnessTable("Il7", &type metadata for AvoidStairsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149E1E8);
  }
  return result;
}

unint64_t sub_10017FC18()
{
  unint64_t result;

  result = qword_10149E1F0;
  if (!qword_10149E1F0)
  {
    result = swift_getWitnessTable("1l7", &type metadata for AvoidStairsEntity.UpdateIntent_value);
    atomic_store(result, (unint64_t *)&qword_10149E1F0);
  }
  return result;
}

uint64_t sub_10017FC5C(uint64_t a1)
{
  return *(_QWORD *)(swift_getOpaqueTypeConformance2(a1, &unk_10106A68C, 1) + 8);
}

uint64_t sub_10017FC80(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10017F5C8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10017FCC0@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491030, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1014D4E90, (uint64_t)sub_10017F850, a1);
}

uint64_t sub_10017FCE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_101491038 != -1)
    swift_once(&qword_101491038, sub_10017F8B0);
  v2 = sub_100008B04(&qword_1014964F0);
  v3 = sub_10000E918(v2, (uint64_t)qword_1014D4EA8);
  return sub_1000742A4(v3, a1);
}

uint64_t sub_10017FD44(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_10149E2FC);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000DD08;
  *(_OWORD *)(v4 + 56) = *v1;
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch(sub_10017F978, 0, 0);
}

uint64_t sub_10017FDAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100180898();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10017FDD0()
{
  return 0xD000000000000022;
}

unint64_t sub_10017FDF0()
{
  unint64_t result;

  result = qword_10149E200;
  if (!qword_10149E200)
  {
    result = swift_getWitnessTable(byte_100E30864, &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E200);
  }
  return result;
}

unint64_t sub_10017FE38()
{
  unint64_t result;

  result = qword_10149E208;
  if (!qword_10149E208)
  {
    result = swift_getWitnessTable(byte_100E30A5C, &type metadata for AvoidStairsQuery);
    atomic_store(result, (unint64_t *)&qword_10149E208);
  }
  return result;
}

unint64_t sub_10017FE80()
{
  unint64_t result;

  result = qword_10149E210;
  if (!qword_10149E210)
  {
    result = swift_getWitnessTable(byte_100E308BC, &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E210);
  }
  return result;
}

unint64_t sub_10017FEC8()
{
  unint64_t result;

  result = qword_10149E218;
  if (!qword_10149E218)
  {
    result = swift_getWitnessTable(byte_100E308F4, &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E218);
  }
  return result;
}

unint64_t sub_10017FF10()
{
  unint64_t result;

  result = qword_10149E220;
  if (!qword_10149E220)
  {
    result = swift_getWitnessTable(byte_100E30924, &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E220);
  }
  return result;
}

unint64_t sub_10017FF58()
{
  unint64_t result;

  result = qword_10149E228;
  if (!qword_10149E228)
  {
    result = swift_getWitnessTable(byte_100E30AD4, &type metadata for AvoidStairsQuery);
    atomic_store(result, (unint64_t *)&qword_10149E228);
  }
  return result;
}

uint64_t sub_10017FF9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch(sub_10017FFB4, 0, 0);
}

uint64_t sub_10017FFB4()
{
  uint64_t v0;
  _BYTE *v1;
  id v2;
  id v3;

  v1 = *(_BYTE **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)WalkPreferences), "initWithDefaults:", v2);

  LOBYTE(v2) = objc_msgSend(v3, "avoidStairs");
  *v1 = (_BYTE)v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100180050(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + 16) = *a2;
  return swift_task_switch(sub_10018006C, 0, 0);
}

uint64_t sub_10018006C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  int BOOL;

  v1 = *(unsigned __int8 *)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v3 = objc_msgSend(objc_allocWithZone((Class)WalkPreferences), "initWithDefaults:", v2);

  objc_msgSend(v3, "setAvoidStairs:", v1);
  objc_msgSend(v3, "synchronize");
  BOOL = GEOConfigGetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518);
  GEOConfigSetBOOL(MapsConfig_PreferencesUniqueEntityDidUpdate, off_1014B5518, BOOL ^ 1u);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100180140()
{
  unint64_t result;

  result = qword_10149E230;
  if (!qword_10149E230)
  {
    result = swift_getWitnessTable(byte_100E3095C, &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E230);
  }
  return result;
}

unint64_t sub_100180188()
{
  unint64_t result;

  result = qword_10149E238;
  if (!qword_10149E238)
  {
    result = swift_getWitnessTable("}k7", &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E238);
  }
  return result;
}

unint64_t sub_1001801D0()
{
  unint64_t result;

  result = qword_10149E240;
  if (!qword_10149E240)
  {
    result = swift_getWitnessTable("ek7", &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E240);
  }
  return result;
}

unint64_t sub_100180218()
{
  unint64_t result;

  result = qword_10149E248;
  if (!qword_10149E248)
  {
    result = swift_getWitnessTable("Mk7", &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E248);
  }
  return result;
}

uint64_t sub_10018025C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_100180424();
  result = UniqueAppEntity<>.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_100180298@<X0>(uint64_t a1@<X8>)
{
  return sub_100073694(&qword_101491028, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1014D4E78, (uint64_t)sub_10017F638, a1);
}

uint64_t sub_1001802BC()
{
  return sub_100010D70(&qword_10149E250, &qword_10149E258, (const char *)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_1001802E8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10017FDF0();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100180324()
{
  unint64_t result;

  result = qword_10149E260;
  if (!qword_10149E260)
  {
    result = swift_getWitnessTable("5k7", &type metadata for AvoidStairsEntity);
    atomic_store(result, (unint64_t *)&qword_10149E260);
  }
  return result;
}

uint64_t sub_100180368(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100180424();
  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1001803A0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100180218();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001803DC()
{
  unint64_t result;

  result = qword_10149E268;
  if (!qword_10149E268)
  {
    result = swift_getWitnessTable(byte_100E30A9C, &type metadata for AvoidStairsQuery);
    atomic_store(result, (unint64_t *)&qword_10149E268);
  }
  return result;
}

unint64_t sub_100180424()
{
  unint64_t result;

  result = qword_10149E270[0];
  if (!qword_10149E270[0])
  {
    result = swift_getWitnessTable(byte_100E30834, &type metadata for AvoidStairsEntity);
    atomic_store(result, qword_10149E270);
  }
  return result;
}

uint64_t sub_100180468(uint64_t a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = type metadata accessor for LocalizedStringResource(0, a2);
  *(_QWORD *)(v2 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1001804C0, 0, 0);
}

uint64_t sub_1001804C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = *(_QWORD **)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_100008B04(&qword_10149E1E0);
  LocalizedStringResource.init(stringLiteral:)(0x74532064696F7641, 0xEC00000073726961);
  v3 = sub_100010D70(&qword_10149E2E0, &qword_10149E2E8, (const char *)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  *v2 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)(v1, &unk_10149E2D0, 0, &unk_10149E2D8, 0, &type metadata for AvoidStairsEntity.UpdateIntent_value, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100180580(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.allEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10017FE38();
  *v4 = v2;
  v4[1] = sub_100073A34;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001805EC()
{
  unint64_t result;

  result = qword_10149E288;
  if (!qword_10149E288)
  {
    result = swift_getWitnessTable(byte_100E30B2C, &type metadata for AvoidStairsQuery);
    atomic_store(result, (unint64_t *)&qword_10149E288);
  }
  return result;
}

unint64_t sub_100180634()
{
  unint64_t result;

  result = qword_10149E290[0];
  if (!qword_10149E290[0])
  {
    result = swift_getWitnessTable(byte_100E30B8C, &type metadata for AvoidStairsQuery);
    atomic_store(result, qword_10149E290);
  }
  return result;
}

uint64_t sub_100180678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.entities(for:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10017FE38();
  *v5 = v2;
  v5[1] = sub_100073B94;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001806E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to UniqueAppEntityQuery.suggestedEntities()[1]);
  *(_QWORD *)(v2 + 24) = v4;
  v5 = sub_10017FE38();
  *v4 = v2;
  v4[1] = sub_1000742EC;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_100180750()
{
  unint64_t result;

  result = qword_10149E2A8;
  if (!qword_10149E2A8)
  {
    result = swift_getWitnessTable(byte_100E30BB4, &type metadata for AvoidStairsQuery);
    atomic_store(result, (unint64_t *)&qword_10149E2A8);
  }
  return result;
}

unint64_t sub_100180798()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_10149E2B0;
  if (!qword_10149E2B0)
  {
    v1 = sub_10000E5D4(qword_10149E2B8);
    v2 = sub_1001801D0();
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_10149E2B0);
  }
  return result;
}

uint64_t sub_1001807FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10017FF58();
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidStairsQuery()
{
  return &type metadata for AvoidStairsQuery;
}

ValueMetadata *type metadata accessor for AvoidStairsEntity.UpdateIntent_value()
{
  return &type metadata for AvoidStairsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidStairsEntity()
{
  return &type metadata for AvoidStairsEntity;
}

uint64_t sub_100180898()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  void (*v28)(char *);
  unsigned int v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  uint64_t v34;

  v0 = sub_100008B04(&qword_1014964C0);
  v1 = __chkstk_darwin(v0);
  v32 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for InputConnectionBehavior(0, v1);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v31 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100008B04(&qword_1014964C8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = sub_100008B04(&qword_101494370);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for LocalizedStringResource(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_100008B04(&qword_10149E2F0);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016, 0x8000000100E4E050);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v30(v15, 1, 1, v16);
  v34 = 0;
  v20 = type metadata accessor for IntentDialog(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21(v11, 1, 1, v20);
  v21(v8, 1, 1, v20);
  v29 = enum case for InputConnectionBehavior.default(_:);
  v28 = *(void (**)(char *))(v4 + 104);
  v22 = v31;
  v28(v31);
  v23 = sub_10017FDF0();
  v27 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v19, v15, &v34, v11, v8, v22, v23);
  sub_100008B04(&qword_1014964D8);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000026, 0x8000000100E4E070);
  v30(v15, 1, 1, v16);
  v33 = 2;
  v24 = type metadata accessor for Bool.IntentDisplayName(0);
  v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v32, 1, 1, v24);
  v21(v11, 1, 1, v20);
  ((void (*)(char *, _QWORD, uint64_t))v28)(v22, v29, v3);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)(v19, v15, &v33, v25, v11, v22);
  return v27;
}

double sub_100180BBC@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1;
  *a2 = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100180BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for ContentSizeCategory(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  v9 = sub_100185738();
  v10 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v9) & 1) == 0)
  {
    ++v10;
    v7 += v8;
    if (v2 == v10)
      return 0;
  }
  return v10;
}

uint64_t sub_100180C7C(uint64_t a1, double a2)
{
  uint64_t v2;
  double v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  double v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = *(double *)(a1 + 32);
  result = 0;
  if (v4 != a2)
  {
    v6 = v2 - 1;
    v7 = a1 + 40;
    while (v6 != result)
    {
      v8 = *(double *)(v7 + 8 * result++);
      if (v8 == a2)
        return result;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100180CDC(uint64_t a1, uint64_t a2)
{
  return sub_100180D04(a1, a2, (unint64_t *)&qword_101491C90, GEOComposedWaypoint_ptr);
}

uint64_t sub_100180CF0(uint64_t a1, uint64_t a2)
{
  return sub_100180D04(a1, a2, (unint64_t *)&unk_101499130, MUCardButton_ptr);
}

uint64_t sub_100180D04(uint64_t result, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  char v11;
  uint64_t i;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;

  v7 = result;
  if ((unint64_t)a2 >> 62)
    goto LABEL_21;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    }
    else
    {
      if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      v9 = *(id *)(a2 + 32);
    }
    v10 = v9;
    a4 = (_QWORD *)sub_10000E4BC(0, a3, a4);
    v11 = static NSObject.== infix(_:_:)(v10, v7);

    if ((v11 & 1) != 0)
      return 0;
    for (i = 0; ; ++i)
    {
      a3 = (unint64_t *)(i + 1);
      if (__OFADD__(i, 1))
        break;
      if (a3 == (unint64_t *)v8)
        return 0;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i + 1, a2);
      }
      else
      {
        if (((unint64_t)a3 & 0x8000000000000000) != 0)
          goto LABEL_19;
        if ((unint64_t)a3 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        v13 = *(id *)(a2 + 32 + 8 * (_QWORD)a3);
      }
      v14 = v13;
      v15 = static NSObject.== infix(_:_:)(v13, v7);

      if ((v15 & 1) != 0)
        return (uint64_t)a3;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    if (a2 < 0)
      v16 = a2;
    else
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    result = swift_bridgeObjectRelease(a2);
  }
  return 0;
}

void sub_100180E9C(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  char v41;
  void *v42;
  void *v43;
  char v44;
  void *v45;
  void *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  char v71;
  BOOL v72;
  unsigned int v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  id v95;
  BOOL v96;
  int v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  void *v105;
  unsigned __int8 v106;
  void *v107;
  void *v108;
  uint64_t v109;
  id v110;
  id v111;
  void *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  id v116;
  id v117;
  id v118;
  BOOL v119;
  char v120;
  BOOL v121;
  void *v122;
  void *v123;
  unsigned int v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  id v130;
  BOOL v131;
  int v132;
  BOOL v133;
  void *v134;
  id v135;
  void *v136;
  int v137;
  void *v138;
  void *v139;
  void *v140;
  unsigned __int8 v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  BOOL v146;
  char v147;
  BOOL v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  id v158;
  id v159;
  BOOL v160;
  int v161;
  BOOL v162;
  void *v163;
  void *v164;
  id v165;
  void *v166;
  int v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  unsigned __int8 v172;
  char v173;
  uint64_t v174;
  void *v175;
  void *v176;
  uint64_t v177;
  id v178;
  id v179;
  unsigned int v180;
  void *v181;
  unsigned int v182;
  BOOL v183;
  int v184;
  BOOL v185;
  void *v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  BOOL v196;
  char v197;
  BOOL v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  id v202;
  Block_layout *v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  id v207;
  Block_layout *v208;
  uint64_t v209;
  uint64_t v210;
  id v211;
  id v212;
  Block_layout *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  id v218;
  unsigned __int8 v219;
  BOOL v220;
  char v221;
  BOOL v222;
  void *v223;
  void *v224;
  id v225;
  id v226;
  id v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  void *jj;
  NSString *v232;
  void *v233;
  void *v234;
  BOOL v235;
  char v236;
  BOOL v237;
  id v238;
  id v239;
  id v240;
  id v241;
  uint64_t v242;
  uint64_t v243;
  void *kk;
  NSString *v245;
  void *v246;
  BOOL v247;
  char v248;
  BOOL v249;
  void *v250;
  id v251;
  id v252;
  id v253;
  id v254;
  uint64_t v255;
  uint64_t v256;
  void *mm;
  GEOServerFormatToken *v258;
  void *v259;
  void *v260;
  BOOL v261;
  char v262;
  BOOL v263;
  unsigned int v264;
  unsigned int v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  uint64_t v269;
  uint64_t v270;
  id v271;
  void *v272;
  uint64_t v273;
  void *v274;
  uint64_t v275;
  id v276;
  void *v277;
  uint64_t v278;
  void *v279;
  uint64_t v280;
  id v281;
  id v282;
  id v283;
  void *v284;
  unsigned __int8 v285;
  void *v286;
  BOOL v287;
  int v288;
  BOOL v289;
  id v290;
  void *v291;
  int v292;
  id v293;
  void *v294;
  void *v295;
  BOOL v296;
  char v297;
  BOOL v298;
  void *v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  BOOL v306;
  int v307;
  BOOL v308;
  void *v309;
  id v310;
  void *v311;
  int v312;
  void *v313;
  BOOL v314;
  int v315;
  BOOL v316;
  id v317;
  int v318;
  BOOL v319;
  char v320;
  BOOL v321;
  void *v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  void *v329;
  void *v330;
  BOOL v331;
  int v332;
  BOOL v333;
  id v334;
  uint64_t v335;
  int v336;
  void *v337;
  void *v338;
  BOOL v339;
  int v340;
  BOOL v341;
  void *v342;
  void *v343;
  uint64_t v344;
  uint64_t v345;
  id v346;
  id v347;
  void *v348;
  void *v349;
  void *v350;
  void *v351;
  void *v352;
  BOOL v353;
  char v354;
  BOOL v355;
  void *v356;
  uint64_t v357;
  uint64_t v358;
  id v359;
  Block_layout *v360;
  uint64_t v361;
  uint64_t v362;
  Block_layout *v363;
  uint64_t v364;
  uint64_t v365;
  Block_layout *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  id v370;
  id v371;
  unsigned __int8 v372;
  void *v373;
  void *v374;
  void *v375;
  unsigned __int8 v376;
  char v377;
  void *v378;
  void *v379;
  BOOL v380;
  char v381;
  void *v382;
  BOOL v383;
  void *v384;
  uint64_t v385;
  uint64_t v386;
  Block_layout *v387;
  uint64_t v388;
  uint64_t v389;
  Block_layout *v390;
  uint64_t v391;
  uint64_t v392;
  Block_layout *v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  id v397;
  id v398;
  unsigned __int8 v399;
  void *v400;
  void *v401;
  void *v402;
  void *v403;
  void *v404;
  void *v405;
  BOOL v406;
  char v407;
  BOOL v408;
  id v409;
  id v410;
  id v411;
  id v412;
  uint64_t v413;
  uint64_t v414;
  void *i;
  NSString *v416;
  void *v417;
  BOOL v418;
  char v419;
  BOOL v420;
  id v421;
  id v422;
  id v423;
  id v424;
  uint64_t v425;
  uint64_t v426;
  void *j;
  NSString *v428;
  void *v429;
  void *v430;
  void *v431;
  void *v432;
  void *v433;
  BOOL v434;
  char v435;
  BOOL v436;
  id v437;
  id v438;
  id v439;
  id v440;
  uint64_t v441;
  uint64_t v442;
  void *m;
  NSString *v444;
  void *v445;
  BOOL v446;
  char v447;
  BOOL v448;
  id v449;
  id v450;
  id v451;
  id v452;
  uint64_t v453;
  uint64_t v454;
  void *k;
  GEOServerFormatToken *v456;
  void *v457;
  BOOL v458;
  char v459;
  BOOL v460;
  id v461;
  id v462;
  id v463;
  id v464;
  uint64_t v465;
  uint64_t v466;
  void *n;
  NSString *v468;
  void *v469;
  void *v470;
  BOOL v471;
  char v472;
  BOOL v473;
  id v474;
  id v475;
  id v476;
  id v477;
  uint64_t v478;
  uint64_t v479;
  void *ii;
  GEOServerFormatToken *v481;
  void *v482;
  void *v483;
  uint64_t v484;
  id v485;
  void *v486;
  void *v487;
  void *v488;
  void *v489;
  void *v490;
  void *v491;
  void *v492;
  id v493;
  void *v494;
  id v495;
  id v496;
  uint64_t v497;
  id v498;
  id v499;
  uint64_t v500;
  id v501;
  id v502;
  void *v503;
  id v504;
  id v505;
  void *v506;
  void *v507;
  id v508;
  unsigned __int8 v509;
  unsigned __int8 v510;
  void *v511;
  void *v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  void *v521;
  uint64_t v522;
  id v523;
  unsigned __int8 v524;
  uint64_t v525;
  void *v526;
  void *v527;
  id v528;
  uint64_t v529;
  uint64_t v531;
  void *v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  void *v539;
  void *v540;
  void *v541;
  void *v542;
  id v543;
  void *v544;
  void *v545;
  void *v546;
  uint64_t v547;
  void *v548;
  unint64_t v549;
  void *v550;
  uint64_t v551;
  void *v552;
  void *v553;
  void *v554;
  uint64_t v555;
  unint64_t v556;
  uint64_t v557;
  uint64_t v558;
  int v559;
  unint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  _BYTE v566[128];
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;

  v525 = *(_QWORD *)(a2 + 16);
  if (!v525)
    return;
  v2 = a1;
  v3 = 0;
  v522 = a2 + 32;
  v5 = *a1;
  v4 = a1[1];
  v529 = v4;
  v513 = *a1;
  while (1)
  {
    v6 = v522 + 80 * v3;
    v7 = *(_QWORD *)(v6 + 8);
    v8 = *(_QWORD *)(v6 + 16);
    v9 = *(_QWORD *)(v6 + 24);
    v559 = *(unsigned __int8 *)(v6 + 32);
    v10 = *(_QWORD *)(v6 + 40);
    LODWORD(v532) = *(unsigned __int8 *)(v6 + 48);
    v11 = *(_QWORD *)(v6 + 64);
    v526 = *(void **)(v6 + 56);
    LODWORD(v523) = *(unsigned __int8 *)(v6 + 72);
    v12 = *(_QWORD *)v6 == v5 && v7 == v4;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v6, v7, v5, v4, 0) & 1) == 0)
      goto LABEL_5;
    v13 = *(_QWORD *)(v8 + 16);
    v563 = v2[2];
    if (v13 != *(_QWORD *)(v563 + 16))
      goto LABEL_5;
    v514 = v3;
    v531 = v10;
    if (v13)
    {
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
      swift_unknownObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
      if (v8 != v563)
      {
        v14 = 0;
        v533 = v7;
        v517 = v9;
        v519 = v8;
        v515 = v11;
        do
        {
          v15 = *(_QWORD *)(v8 + v14 + 32);
          v16 = *(_QWORD *)(v8 + v14 + 40);
          v18 = *(_QWORD *)(v8 + v14 + 48);
          v17 = *(_QWORD *)(v8 + v14 + 56);
          v19 = *(void **)(v8 + v14 + 64);
          v20 = *(void **)(v8 + v14 + 72);
          v521 = *(void **)(v8 + v14 + 80);
          v561 = *(_QWORD *)(v8 + v14 + 88);
          v21 = *(_QWORD *)(v8 + v14 + 96);
          v542 = *(void **)(v8 + v14 + 104);
          v551 = *(_QWORD *)(v8 + v14 + 112);
          v22 = *(_QWORD *)(v563 + v14 + 32);
          v23 = *(_QWORD *)(v563 + v14 + 40);
          v25 = *(_QWORD *)(v563 + v14 + 48);
          v24 = *(_QWORD *)(v563 + v14 + 56);
          v26 = *(void **)(v563 + v14 + 64);
          v27 = *(void **)(v563 + v14 + 72);
          v28 = *(void **)(v563 + v14 + 80);
          v29 = *(_QWORD *)(v563 + v14 + 88);
          v555 = *(_QWORD *)(v563 + v14 + 96);
          v557 = v21;
          v538 = *(_QWORD *)(v563 + v14 + 104);
          v547 = *(_QWORD *)(v563 + v14 + 112);
          if (v15 != v22 || v16 != v23)
          {
            v511 = *(void **)(v563 + v14 + 72);
            v512 = *(void **)(v563 + v14 + 64);
            v30 = v19;
            v31 = v20;
            v32 = *(_QWORD *)(v563 + v14 + 88);
            v33 = *(void **)(v563 + v14 + 80);
            v34 = v14;
            v35 = v13;
            v36 = v17;
            v37 = v24;
            v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v22, v23, 0);
            v24 = v37;
            v17 = v36;
            v13 = v35;
            v14 = v34;
            v28 = v33;
            v29 = v32;
            v20 = v31;
            v19 = v30;
            v27 = v511;
            v26 = v512;
            if ((v38 & 1) == 0)
            {
LABEL_51:
              swift_bridgeObjectRelease(v515);
              swift_bridgeObjectRelease(v531);
              swift_unknownObjectRelease(v517);
              swift_bridgeObjectRelease(v519);
              v5 = v513;
              v3 = v514;
              v7 = v533;
              v4 = v529;
              v2 = a1;
              goto LABEL_4;
            }
          }
          if (v17)
          {
            if (!v24)
              goto LABEL_51;
            if (v18 != v25 || v17 != v24)
            {
              v39 = v18;
              v40 = v28;
              v41 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v17, v25, v24, 0);
              v28 = v40;
              if ((v41 & 1) == 0)
                goto LABEL_51;
            }
          }
          else if (v24)
          {
            goto LABEL_51;
          }
          if (v19 != v26 || v20 != v27)
          {
            v42 = v26;
            v43 = v28;
            v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v42, v27, 0);
            v28 = v43;
            if ((v44 & 1) == 0)
              goto LABEL_51;
          }
          v9 = v517;
          v8 = v519;
          v10 = v531;
          v11 = v515;
          if (v561)
          {
            v4 = v529;
            if (!v29)
            {
              swift_bridgeObjectRelease(v515);
              swift_bridgeObjectRelease(v531);
              swift_unknownObjectRelease(v517);
              swift_bridgeObjectRelease(v519);
              v5 = v513;
              v3 = v514;
              v2 = a1;
              v7 = v533;
              goto LABEL_4;
            }
            v8 = v519;
            v11 = v515;
            if (v521 != v28 || v561 != v29)
            {
              v45 = v28;
              if ((_stringCompareWithSmolCheck(_:_:expecting:)(v521, v561, v28, v29, 0) & 1) == 0
                || (_stringCompareWithSmolCheck(_:_:expecting:)(v521, v561, v45, v29, 0) & 1) == 0)
              {
LABEL_52:
                swift_bridgeObjectRelease(v11);
                swift_bridgeObjectRelease(v531);
                swift_unknownObjectRelease(v517);
                swift_bridgeObjectRelease(v8);
                v5 = v513;
                v3 = v514;
                goto LABEL_60;
              }
            }
          }
          else if (v29)
          {
            goto LABEL_52;
          }
          if (v557 != v555)
            goto LABEL_52;
          v5 = v513;
          if (v551 != v547)
          {
            swift_bridgeObjectRelease(v11);
            swift_bridgeObjectRelease(v531);
            swift_unknownObjectRelease(v517);
            swift_bridgeObjectRelease(v8);
            v3 = v514;
LABEL_60:
            v2 = a1;
LABEL_62:
            v7 = v533;
            v4 = v529;
            goto LABEL_4;
          }
          v2 = a1;
          if ((objc_msgSend(v542, "isEqual:", v538) & 1) == 0)
          {
            swift_bridgeObjectRelease(v11);
            swift_bridgeObjectRelease(v531);
            swift_unknownObjectRelease(v517);
            swift_bridgeObjectRelease(v8);
            v3 = v514;
            goto LABEL_62;
          }
          v14 += 88;
          --v13;
          v7 = v533;
          v4 = v529;
        }
        while (v13);
      }
    }
    else
    {
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v8);
      swift_unknownObjectRetain(v9);
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRetain(v11);
    }
    if (((v559 ^ *((unsigned __int8 *)v2 + 32)) & 1) != 0)
    {
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v10);
      swift_unknownObjectRelease(v9);
      swift_bridgeObjectRelease(v8);
      v3 = v514;
      goto LABEL_4;
    }
    v3 = v514;
    if (((v532 ^ *((unsigned __int8 *)v2 + 48)) & 1) != 0
      || ((v46 = (void *)v2[7], v47 = v2[8], v526 == v46) ? (v48 = v11 == v47) : (v48 = 0),
          !v48 && (_stringCompareWithSmolCheck(_:_:expecting:)(v526, v11, v46, v47, 0) & 1) == 0
       || ((v523 ^ *((unsigned __int8 *)v2 + 72)) & 1) != 0))
    {
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v10);
      swift_unknownObjectRelease(v9);
      swift_bridgeObjectRelease(v8);
      goto LABEL_4;
    }
    v516 = v11;
    v518 = v9;
    v49 = v10;
    v50 = v10 >> 62;
    v520 = v8;
    if (v50)
    {
      v58 = v49 < 0 ? v49 : v49 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v49);
      v51 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease(v49);
    }
    else
    {
      v51 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v52 = v2[5];
    v565 = v52;
    v53 = (unint64_t)v52 >> 62;
    if ((unint64_t)v52 >> 62)
    {
      if (v52 < 0)
        v59 = v52;
      else
        v59 = v52 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v52);
      v60 = _CocoaArrayWrapper.endIndex.getter(v59);
      sub_10008207C(&v565);
      if (v51 != v60)
      {
LABEL_82:
        swift_bridgeObjectRelease(v516);
        swift_bridgeObjectRelease(v531);
        swift_unknownObjectRelease(v9);
        v61 = v520;
        goto LABEL_392;
      }
    }
    else if (v51 != *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_82;
    }
    v564 = v52;
    if (v50)
    {
      v54 = v531;
      if (v531 < 0)
        v56 = v531;
      else
        v56 = v531 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v531, 2);
      sub_100185780(&v565);
      v55 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease(v531);
    }
    else
    {
      v54 = v531;
      v55 = *(_QWORD *)((v531 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v531);
      sub_100185780(&v565);
    }
    if (!v55)
    {
      swift_bridgeObjectRelease(v54);
      v68 = v520;
      goto LABEL_827;
    }
    v560 = v54 & 0xC000000000000001;
    if ((v54 & 0xC000000000000001) != 0)
    {
      v57 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v54);
      if (!v53)
        goto LABEL_72;
    }
    else
    {
      if (!*(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_829;
      v57 = *(_QWORD *)(v54 + 32);
      swift_unknownObjectRetain(v57);
      if (!v53)
      {
LABEL_72:
        v558 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v558)
          goto LABEL_824;
        goto LABEL_88;
      }
    }
    if (v52 < 0)
      v62 = v52;
    else
      v62 = v52 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v52);
    v63 = _CocoaArrayWrapper.endIndex.getter(v62);
    sub_10008207C(&v565);
    v558 = v63;
    if (!v63)
    {
LABEL_824:
      swift_bridgeObjectRelease(v531);
      v484 = v57;
      v54 = v531;
      swift_unknownObjectRelease(v484);
      v68 = v520;
      goto LABEL_827;
    }
LABEL_88:
    v556 = v52 & 0xC000000000000001;
    v562 = v55;
    if ((v52 & 0xC000000000000001) != 0)
    {
      v64 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v52);
    }
    else
    {
      if (!*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_830;
      v64 = *(_QWORD *)(v52 + 32);
      swift_unknownObjectRetain(v64);
    }
    v65 = (id)v57;
    v66 = (id)v64;
    v67 = v66;
    if (!(v57 | v64))
      break;
    if (v65)
      v70 = v64 == 0;
    else
      v70 = 0;
    v71 = v70;
    if (v66)
      v72 = v57 == 0;
    else
      v72 = 0;
    if (v72
      || (v71 & 1) != 0
      || (v73 = objc_msgSend(v65, "artworkSourceType"),
          v73 != objc_msgSend(v67, "artworkSourceType"))
      || (v74 = objc_msgSend(v65, "artworkUseType"),
          v74 != objc_msgSend(v67, "artworkUseType")))
    {

      swift_unknownObjectRelease(v65);
      v108 = v67;
      goto LABEL_388;
    }
    v548 = v65;
    v75 = objc_claimAutoreleasedReturnValue(objc_msgSend(v65, "shieldDataSource"));
    v552 = v67;
    v76 = objc_claimAutoreleasedReturnValue(objc_msgSend(v67, "shieldDataSource"));
    v77 = (void *)(v75 | v76);
    v78 = (id)v75;
    v79 = (id)v76;
    v80 = v79;
    if (v75 | v76)
    {
      if (v78)
        v287 = v76 == 0;
      else
        v287 = 0;
      v288 = v287;
      if (v79)
        v289 = v75 == 0;
      else
        v289 = 0;
      if (v289 || v288 || (v290 = objc_msgSend(v78, "shieldType"), v290 != objc_msgSend(v80, "shieldType")))
      {
        v293 = v78;

        v294 = v80;
      }
      else
      {
        v545 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "shieldText"));
        if (!v545)
        {
          v526 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v80, "shieldText"));
          if (!v526)
          {
            v541 = v80;
            v291 = v78;
            v526 = 0;
            v292 = 0;
            goto LABEL_568;
          }
        }
        v76 = objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "shieldText"));
        v77 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v80, "shieldText"));
        if ((objc_msgSend((id)v76, "isEqualToString:", v77) & 1) != 0)
        {
          v541 = v80;
          v291 = v78;
          v292 = 1;
LABEL_568:
          v373 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v291, "shieldColorString"));
          if (v373 || (v523 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v541, "shieldColorString"))) != 0)
          {
            v374 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v291, "shieldColorString"));
            v375 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v541, "shieldColorString"));
            v376 = objc_msgSend(v374, "isEqualToString:", v375);

            if (v373)
            {

              v5 = v513;
              v3 = v514;
              v52 = v564;
              v377 = v376;
              if (v292)
                goto LABEL_572;
              goto LABEL_573;
            }
            v3 = v514;
            v52 = v564;
            v377 = v376;
            v378 = v523;
          }
          else
          {
            v378 = 0;
            v377 = 1;
          }

          v5 = v513;
          if ((v292 & 1) != 0)
          {
LABEL_572:

          }
LABEL_573:
          if (v545)
          {
            v78 = v291;

            v80 = v541;
            if ((v377 & 1) == 0)
              goto LABEL_413;
          }
          else
          {
            v78 = v291;

            v80 = v541;
            if ((v377 & 1) == 0)
              goto LABEL_413;
          }
          goto LABEL_110;
        }

        v293 = v78;
        v294 = v80;

        if (v545)
          v80 = v545;
        else
          v80 = v526;
      }

      v78 = v293;
      v80 = v294;
LABEL_413:

      swift_unknownObjectRelease(v548);
      v295 = v552;
      goto LABEL_451;
    }
LABEL_110:
    v532 = v78;
    v539 = v80;
    v81 = objc_claimAutoreleasedReturnValue(objc_msgSend(v548, "iconDataSource"));
    v82 = objc_claimAutoreleasedReturnValue(objc_msgSend(v552, "iconDataSource"));
    v543 = (id)v81;
    v83 = (id)v82;
    v84 = v83;
    if (v81 | v82)
    {
      if (v543)
        v296 = v82 == 0;
      else
        v296 = 0;
      v297 = v296;
      if (v83)
        v298 = v81 == 0;
      else
        v298 = 0;
      v299 = v543;
      v90 = v83;
      if (v298)
        goto LABEL_585;
      v299 = v543;
      v90 = v83;
      if ((v297 & 1) != 0)
        goto LABEL_585;
      v300 = objc_msgSend(v543, "iconType");
      v299 = v543;
      v90 = v84;
      if (v300 != objc_msgSend(v84, "iconType"))
        goto LABEL_585;
      v301 = objc_msgSend(v543, "cartoID");
      v299 = v543;
      v90 = v84;
      if (v301 != objc_msgSend(v84, "cartoID"))
        goto LABEL_585;
      v302 = objc_msgSend(v543, "defaultTransitType");
      v299 = v543;
      v90 = v84;
      if (v302 != objc_msgSend(v84, "defaultTransitType"))
        goto LABEL_585;
      v303 = objc_msgSend(v543, "iconAttributeKey");
      v299 = v543;
      v90 = v84;
      if (v303 != objc_msgSend(v84, "iconAttributeKey"))
        goto LABEL_585;
      v304 = objc_msgSend(v543, "iconAttributeValue");
      v305 = objc_msgSend(v84, "iconAttributeValue");

      if (v304 != v305)
        goto LABEL_586;
    }
    v526 = v84;
    v85 = v548;
    v86 = objc_claimAutoreleasedReturnValue(objc_msgSend(v548, "iconFallbackShieldDataSource"));
    v87 = objc_claimAutoreleasedReturnValue(objc_msgSend(v552, "iconFallbackShieldDataSource"));
    v88 = (id)v86;
    v89 = (id)v87;
    v90 = v89;
    if (v86 | v87)
    {
      v313 = v88;
      if (v88)
        v314 = v87 == 0;
      else
        v314 = 0;
      v315 = v314;
      if (v89)
        v316 = v86 == 0;
      else
        v316 = 0;
      if (v316 || v315)
      {
        v299 = v88;

        v330 = v90;
        v84 = v526;
      }
      else
      {
        v299 = v88;
        v317 = objc_msgSend(v88, "shieldType");
        v84 = v526;
        if (v317 == objc_msgSend(v90, "shieldType"))
        {
          v523 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v313, "shieldText"));
          if (!v523)
          {
            v521 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "shieldText"));
            if (!v521)
            {
              v521 = 0;
              v318 = 0;
              goto LABEL_635;
            }
          }
          v299 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v313, "shieldText"));
          v317 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "shieldText"));
          if ((objc_msgSend(v299, "isEqualToString:", v317) & 1) != 0)
          {
            v318 = 1;
LABEL_635:
            v403 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v313, "shieldColorString"));
            if (v403
              || (v84 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "shieldColorString"))) != 0)
            {
              v404 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v313, "shieldColorString"));
              v405 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v90, "shieldColorString"));
              v509 = objc_msgSend(v404, "isEqualToString:", v405);

              if (v403)
              {

                v3 = v514;
                if (v318)
                  goto LABEL_639;
                goto LABEL_640;
              }
            }
            else
            {
              v509 = 1;
            }

            v3 = v514;
            if ((v318 & 1) != 0)
            {
LABEL_639:

            }
LABEL_640:
            v52 = v564;
            v88 = v313;

            if (v523)
            {

            }
            else
            {

            }
            v5 = v513;
            v85 = v548;
            if ((v509 & 1) != 0)
              goto LABEL_112;
            v299 = v313;
            v84 = v526;
LABEL_585:

LABEL_586:
            swift_unknownObjectRelease(v548);
            v379 = v552;
            goto LABEL_632;
          }

          v330 = v523;
          if (!v523)
            v330 = v521;
          v299 = v313;
        }
        else
        {

          v330 = v90;
        }
      }

      goto LABEL_585;
    }
LABEL_112:
    v511 = v88;
    v512 = v90;
    v91 = objc_claimAutoreleasedReturnValue(objc_msgSend(v85, "textDataSource"));
    v92 = objc_claimAutoreleasedReturnValue(objc_msgSend(v552, "textDataSource"));
    v93 = (id)v91;
    v94 = (id)v92;
    v521 = v93;
    v523 = v94;
    if (!(v91 | v92))
      goto LABEL_126;
    v95 = v94;
    if (v93)
      v96 = v92 == 0;
    else
      v96 = 0;
    v97 = v96;
    if (v94)
      v98 = v91 == 0;
    else
      v98 = 0;
    if (v98 || v97)
    {

      goto LABEL_591;
    }
    v99 = objc_claimAutoreleasedReturnValue(objc_msgSend(v93, "text"));
    v100 = objc_claimAutoreleasedReturnValue(objc_msgSend(v95, "text"));
    v101 = (id)v99;
    v102 = (id)v100;
    if (!(v99 | v100))
    {
      v103 = v102;

      v85 = v548;
LABEL_126:
      v104 = objc_msgSend(v85, "hasRoutingIncidentBadge");
      v105 = v552;
      if ((_DWORD)v104 != objc_msgSend(v552, "hasRoutingIncidentBadge"))
      {
        v106 = 0;
        v107 = v526;
        goto LABEL_594;
      }
      v95 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v85, "accessibilityText"));
      if (v95 || (v104 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v552, "accessibilityText"))) != 0)
      {
        v337 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v548, "accessibilityText"));
        v338 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v552, "accessibilityText"));
        v106 = objc_msgSend(v337, "isEqualToString:", v338);

        v105 = v552;
        v52 = v564;
        v107 = v526;
        if (!v95)
          v95 = v104;
      }
      else
      {
        v106 = 1;
        v107 = v526;
        v95 = 0;
      }
LABEL_593:

      goto LABEL_594;
    }
    if (v101)
      v353 = v100 == 0;
    else
      v353 = 0;
    v354 = v353;
    v507 = v102;
    if (v102)
      v355 = v99 == 0;
    else
      v355 = 0;
    if (v355 || (v354 & 1) != 0)
    {

      v95 = v507;
LABEL_591:
      v106 = 0;
      goto LABEL_592;
    }
    v536 = v7;
    v356 = v101;
    v357 = objc_claimAutoreleasedReturnValue(objc_msgSend(v101, "formatStrings"));
    v358 = objc_claimAutoreleasedReturnValue(objc_msgSend(v507, "formatStrings"));
    v359 = (id)v357;
    v95 = (id)v358;
    v360 = &stru_1011A7650;
    v503 = v359;
    if (v357 | v358)
    {
      if (v359)
        v406 = v358 == 0;
      else
        v406 = 0;
      v407 = v406;
      if (v95)
        v408 = v357 == 0;
      else
        v408 = 0;
      if (v408 || (v407 & 1) != 0 || (v409 = objc_msgSend(v359, "count"), v409 != objc_msgSend(v95, "count")))
      {

LABEL_671:
        v106 = 0;
        v5 = v513;
        v3 = v514;
        v7 = v536;
        v52 = v564;
LABEL_592:
        v105 = v552;
        v107 = v526;
        goto LABEL_593;
      }
      v569 = 0u;
      v570 = 0u;
      v567 = 0u;
      v568 = 0u;
      v410 = v359;
      v411 = objc_msgSend(v410, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
      if (v411)
      {
        v412 = v411;
        v413 = 0;
        v414 = *(_QWORD *)v568;
        while (2)
        {
          for (i = 0; i != v412; i = (char *)i + 1)
          {
            if (*(_QWORD *)v568 != v414)
              objc_enumerationMutation(v410);
            v416 = *(NSString **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)i);
            v417 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v95, "objectAtIndexedSubscript:", (char *)i + v413));
            LODWORD(v416) = sub_1001857A8(v417, v416, (NSString *)v417);

            if (!(_DWORD)v416)
            {

              goto LABEL_671;
            }
          }
          v412 = objc_msgSend(v410, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
          v413 += (uint64_t)i;
          if (v412)
            continue;
          break;
        }
      }

    }
    else
    {

    }
    v361 = objc_claimAutoreleasedReturnValue(objc_msgSend(v356, "separators"));
    v362 = objc_claimAutoreleasedReturnValue(objc_msgSend(v507, "separators"));
    v498 = (id)v361;
    v501 = (id)v362;
    v363 = &stru_1011A7670;
    if (v361 | v362)
    {
      if (v498)
        v418 = v362 == 0;
      else
        v418 = 0;
      v419 = v418;
      if (v501)
        v420 = v361 == 0;
      else
        v420 = 0;
      if (v420 || (v419 & 1) != 0 || (v421 = objc_msgSend(v498, "count"), v421 != objc_msgSend(v501, "count")))
      {

LABEL_812:
        v106 = 0;
        v5 = v513;
        v3 = v514;
        v7 = v536;
        v52 = v564;
        v105 = v552;
        v107 = v526;
        v95 = v501;
        goto LABEL_593;
      }
      v569 = 0u;
      v570 = 0u;
      v567 = 0u;
      v568 = 0u;
      v422 = v498;
      v423 = objc_msgSend(v422, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
      if (v423)
      {
        v424 = v423;
        v425 = 0;
        v426 = *(_QWORD *)v568;
        while (2)
        {
          for (j = 0; j != v424; j = (char *)j + 1)
          {
            if (*(_QWORD *)v568 != v426)
              objc_enumerationMutation(v422);
            v428 = *(NSString **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)j);
            v429 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v501, "objectAtIndexedSubscript:", (char *)j + v425));
            LODWORD(v428) = sub_1001857A8(v429, v428, (NSString *)v429);

            if (!(_DWORD)v428)
            {

              goto LABEL_812;
            }
          }
          v424 = objc_msgSend(v422, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
          v425 += (uint64_t)j;
          if (v424)
            continue;
          break;
        }
      }

    }
    else
    {

    }
    v364 = objc_claimAutoreleasedReturnValue(objc_msgSend(v356, "formatTokens"));
    v365 = objc_claimAutoreleasedReturnValue(objc_msgSend(v507, "formatTokens"));
    v493 = (id)v364;
    v495 = (id)v365;
    v366 = &stru_1011A7690;
    if (!(v364 | v365))
    {

      goto LABEL_565;
    }
    if (v493)
      v446 = v365 == 0;
    else
      v446 = 0;
    v447 = v446;
    if (v495)
      v448 = v364 == 0;
    else
      v448 = 0;
    if (v448 || (v447 & 1) != 0 || (v449 = objc_msgSend(v493, "count"), v449 != objc_msgSend(v495, "count")))
    {

      v470 = v495;
LABEL_782:

      goto LABEL_812;
    }
    v569 = 0u;
    v570 = 0u;
    v567 = 0u;
    v568 = 0u;
    v450 = v493;
    v451 = objc_msgSend(v450, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
    if (v451)
    {
      v452 = v451;
      v453 = 0;
      v454 = *(_QWORD *)v568;
      while (2)
      {
        for (k = 0; k != v452; k = (char *)k + 1)
        {
          if (*(_QWORD *)v568 != v454)
            objc_enumerationMutation(v450);
          v456 = *(GEOServerFormatToken **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)k);
          v457 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v495, "objectAtIndexedSubscript:", (char *)k + v453));
          LODWORD(v456) = sub_1001857B0(v457, v456, (GEOServerFormatToken *)v457);

          if (!(_DWORD)v456)
          {
            v470 = v495;

            goto LABEL_782;
          }
        }
        v452 = objc_msgSend(v450, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
        v453 += (uint64_t)k;
        if (v452)
          continue;
        break;
      }
    }

LABEL_565:
    v367 = objc_claimAutoreleasedReturnValue(objc_msgSend(v356, "alternativeString"));
    v368 = objc_claimAutoreleasedReturnValue(objc_msgSend(v507, "alternativeString"));
    v369 = v367 | v368;
    v370 = (id)v367;
    v371 = (id)v368;
    if (v369)
      v372 = objc_msgSend(v370, "isEqual:", v371);
    else
      v372 = 1;

    v5 = v513;
    v3 = v514;
    v7 = v536;
    v52 = v564;
    v85 = v548;
    if ((v372 & 1) != 0)
      goto LABEL_126;
    v106 = 0;
    v105 = v552;
    v107 = v526;
LABEL_594:

    swift_unknownObjectRelease(v548);
    swift_unknownObjectRelease(v105);

    v4 = v529;
    v68 = v520;
    if ((v106 & 1) != 0)
      goto LABEL_93;
LABEL_391:
    swift_bridgeObjectRelease(v531);
    sub_10008207C(&v565);
    swift_bridgeObjectRelease(v516);
    swift_bridgeObjectRelease(v531);
    swift_unknownObjectRelease(v518);
    v61 = v68;
LABEL_392:
    swift_bridgeObjectRelease(v61);
    v2 = a1;
LABEL_4:
    swift_bridgeObjectRelease(v7);
LABEL_5:
    if (++v3 == v525)
      return;
  }
  swift_unknownObjectRelease(v65);
  swift_unknownObjectRelease(v67);
  v68 = v520;
LABEL_93:
  if (v562 == 1)
  {
    v54 = v531;
LABEL_826:
    swift_bridgeObjectRelease(v54);
    goto LABEL_827;
  }
  v54 = v531;
  if (v560)
  {
    v69 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v531);
  }
  else
  {
    if (*(_QWORD *)((v531 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      goto LABEL_833;
    v69 = *(_QWORD *)(v531 + 40);
    swift_unknownObjectRetain(v69);
  }
  if (v558 == 1)
  {
LABEL_822:
    swift_bridgeObjectRelease(v54);
    swift_unknownObjectRelease(v69);
LABEL_827:
    sub_10008207C(&v565);
    swift_bridgeObjectRelease(v516);
    swift_bridgeObjectRelease(v54);
    swift_unknownObjectRelease(v518);
    swift_bridgeObjectRelease(v68);
    swift_bridgeObjectRelease(v7);
    return;
  }
  if (v556)
  {
    v109 = specialized _ArrayBuffer._getElementSlowPath(_:)(1, v52);
  }
  else
  {
    if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      goto LABEL_834;
    v109 = *(_QWORD *)(v52 + 40);
    swift_unknownObjectRetain(v109);
  }
  v110 = (id)v69;
  v111 = (id)v109;
  v112 = v111;
  if (v69 | v109)
  {
    if (v110)
      v261 = v109 == 0;
    else
      v261 = 0;
    v262 = v261;
    if (v111)
      v263 = v69 == 0;
    else
      v263 = 0;
    if (!v263 && (v262 & 1) == 0)
    {
      v264 = objc_msgSend(v110, "artworkSourceType");
      if (v264 == objc_msgSend(v112, "artworkSourceType"))
      {
        v265 = objc_msgSend(v110, "artworkUseType");
        if (v265 == objc_msgSend(v112, "artworkUseType"))
        {
          v554 = v110;
          v266 = objc_claimAutoreleasedReturnValue(objc_msgSend(v110, "shieldDataSource"));
          v550 = v112;
          v267 = objc_claimAutoreleasedReturnValue(objc_msgSend(v112, "shieldDataSource"));
          v78 = (id)v266;
          v268 = (id)v267;
          v80 = v268;
          if (!(v266 | v267))
            goto LABEL_382;
          if (v78)
            v306 = v267 == 0;
          else
            v306 = 0;
          v307 = v306;
          if (v268)
            v308 = v266 == 0;
          else
            v308 = 0;
          v309 = v268;
          if (v308 || v307 || (v310 = objc_msgSend(v78, "shieldType"), v310 != objc_msgSend(v80, "shieldType")))
          {

          }
          else
          {
            v546 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "shieldText"));
            if (!v546)
            {
              v526 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v80, "shieldText"));
              if (!v526)
              {
                v311 = v80;
                v526 = 0;
                v312 = 0;
                goto LABEL_616;
              }
            }
            v267 = objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "shieldText"));
            v311 = v80;
            v309 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v80, "shieldText"));
            if ((objc_msgSend((id)v267, "isEqualToString:", v309) & 1) != 0)
            {
              v312 = 1;
LABEL_616:
              v400 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "shieldColorString"));
              if (v400
                || (v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v311, "shieldColorString"))) != 0)
              {
                v401 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v78, "shieldColorString"));
                v402 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v311, "shieldColorString"));
                v524 = objc_msgSend(v401, "isEqualToString:", v402);

                if (v400)
                {

                  v3 = v514;
                  v52 = v564;
                  if (!v312)
                    goto LABEL_621;
                  goto LABEL_620;
                }
              }
              else
              {
                v524 = 1;
              }
              v3 = v514;

              v52 = v564;
              if ((v312 & 1) == 0)
              {
LABEL_621:

                v80 = v311;
                if (v546)
                {

                }
                else
                {

                }
                v5 = v513;
                if ((v524 & 1) != 0)
                {
LABEL_382:
                  v532 = v78;
                  v539 = v80;
                  v269 = objc_claimAutoreleasedReturnValue(objc_msgSend(v554, "iconDataSource"));
                  v270 = objc_claimAutoreleasedReturnValue(objc_msgSend(v550, "iconDataSource"));
                  v543 = (id)v269;
                  v271 = (id)v270;
                  v84 = v271;
                  if (v269 | v270)
                  {
                    if (v543)
                      v319 = v270 == 0;
                    else
                      v319 = 0;
                    v320 = v319;
                    if (v271)
                      v321 = v269 == 0;
                    else
                      v321 = 0;
                    v322 = v543;
                    v277 = v271;
                    if (v321)
                      goto LABEL_630;
                    v322 = v543;
                    v277 = v271;
                    if ((v320 & 1) != 0)
                      goto LABEL_630;
                    v323 = objc_msgSend(v543, "iconType");
                    v322 = v543;
                    v277 = v84;
                    if (v323 != objc_msgSend(v84, "iconType"))
                      goto LABEL_630;
                    v324 = objc_msgSend(v543, "cartoID");
                    v322 = v543;
                    v277 = v84;
                    if (v324 != objc_msgSend(v84, "cartoID"))
                      goto LABEL_630;
                    v325 = objc_msgSend(v543, "defaultTransitType");
                    v322 = v543;
                    v277 = v84;
                    if (v325 != objc_msgSend(v84, "defaultTransitType"))
                      goto LABEL_630;
                    v326 = objc_msgSend(v543, "iconAttributeKey");
                    v322 = v543;
                    v277 = v84;
                    if (v326 != objc_msgSend(v84, "iconAttributeKey"))
                      goto LABEL_630;
                    v327 = objc_msgSend(v543, "iconAttributeValue");
                    v328 = objc_msgSend(v84, "iconAttributeValue");

                    if (v327 != v328)
                      goto LABEL_631;
                  }
                  v523 = v84;
                  v272 = v554;
                  v273 = objc_claimAutoreleasedReturnValue(objc_msgSend(v554, "iconFallbackShieldDataSource"));
                  v274 = v550;
                  v275 = objc_claimAutoreleasedReturnValue(objc_msgSend(v550, "iconFallbackShieldDataSource"));
                  v528 = (id)v273;
                  v276 = (id)v275;
                  v277 = v276;
                  if (!(v273 | v275))
                    goto LABEL_384;
                  if (v528)
                    v331 = v275 == 0;
                  else
                    v331 = 0;
                  v332 = v331;
                  if (v276)
                    v333 = v273 == 0;
                  else
                    v333 = 0;
                  if (v333 || v332)
                  {
                    v322 = v528;

                    v349 = v277;
                    v84 = v523;
                  }
                  else
                  {
                    v322 = v528;
                    v334 = objc_msgSend(v528, "shieldType");
                    v84 = v523;
                    if (v334 == objc_msgSend(v277, "shieldType"))
                    {
                      v335 = objc_claimAutoreleasedReturnValue(objc_msgSend(v528, "shieldText"));
                      if (!v335)
                      {
                        v521 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v277, "shieldText"));
                        if (!v521)
                        {
                          v512 = 0;
                          v535 = v7;
                          v521 = 0;
                          v336 = 0;
                          goto LABEL_698;
                        }
                      }
                      v322 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v528, "shieldText"));
                      v334 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v277, "shieldText"));
                      if ((objc_msgSend(v322, "isEqualToString:", v334) & 1) != 0)
                      {
                        v512 = (void *)v335;
                        v535 = v7;
                        v336 = 1;
LABEL_698:
                        v430 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v528, "shieldColorString"));
                        if (v430
                          || (v84 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v277, "shieldColorString"))) != 0)
                        {
                          v431 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v528, "shieldColorString"));
                          v432 = v277;
                          v433 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v277, "shieldColorString"));
                          v510 = objc_msgSend(v431, "isEqualToString:", v433);

                          if (v430)
                          {

                            if (!v336)
                              goto LABEL_703;
                            goto LABEL_702;
                          }
                        }
                        else
                        {
                          v432 = v277;
                          v510 = 1;
                        }

                        if ((v336 & 1) == 0)
                        {
LABEL_703:

                          v277 = v432;
                          if (v512)
                          {

                          }
                          else
                          {

                          }
                          v5 = v513;
                          v3 = v514;
                          v7 = v535;
                          v52 = v564;
                          v274 = v550;
                          v272 = v554;
                          if ((v510 & 1) == 0)
                          {
                            v84 = v523;
                            v322 = v528;
                            goto LABEL_630;
                          }
LABEL_384:
                          v511 = v277;
                          v278 = objc_claimAutoreleasedReturnValue(objc_msgSend(v272, "textDataSource"));
                          v279 = v274;
                          v280 = objc_claimAutoreleasedReturnValue(objc_msgSend(v274, "textDataSource"));
                          v281 = (id)v278;
                          v282 = (id)v280;
                          v521 = v281;
                          v512 = v282;
                          if (!(v278 | v280))
                            goto LABEL_385;
                          if (v281)
                            v339 = v280 == 0;
                          else
                            v339 = 0;
                          v340 = v339;
                          if (v282)
                            v341 = v278 == 0;
                          else
                            v341 = 0;
                          v342 = v281;
                          v343 = v282;
                          if (v341 || v340)
                          {

                            v285 = 0;
                            v350 = v343;
                          }
                          else
                          {
                            v344 = objc_claimAutoreleasedReturnValue(objc_msgSend(v281, "text"));
                            v345 = objc_claimAutoreleasedReturnValue(objc_msgSend(v343, "text"));
                            v346 = (id)v344;
                            v347 = (id)v345;
                            if (!(v344 | v345))
                            {
                              v348 = v347;

                              v279 = v550;
                              v272 = v554;
LABEL_385:
                              v283 = objc_msgSend(v272, "hasRoutingIncidentBadge");
                              v284 = v279;
                              if ((_DWORD)v283 != objc_msgSend(v279, "hasRoutingIncidentBadge"))
                              {
                                v285 = 0;
                                v286 = v523;
                                goto LABEL_734;
                              }
                              v350 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v272, "accessibilityText"));
                              if (v350
                                || (v283 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v284, "accessibilityText"))) != 0)
                              {
                                v351 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v554, "accessibilityText"));
                                v352 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v550, "accessibilityText"));
                                v285 = objc_msgSend(v351, "isEqualToString:", v352);

                                v284 = v550;
                                v52 = v564;
                                v286 = v523;
                                if (!v350)
                                  v350 = v283;
                              }
                              else
                              {
                                v285 = 1;
                                v52 = v564;
                                v286 = v523;
                                v350 = 0;
                              }
                              goto LABEL_733;
                            }
                            if (v346)
                              v380 = v345 == 0;
                            else
                              v380 = 0;
                            v381 = v380;
                            v382 = v347;
                            if (v347)
                              v383 = v344 == 0;
                            else
                              v383 = 0;
                            if (v383 || (v381 & 1) != 0)
                            {

                              v350 = v382;
                              v285 = 0;
                              v5 = v513;
                            }
                            else
                            {
                              v537 = v7;
                              v384 = v346;
                              v385 = objc_claimAutoreleasedReturnValue(objc_msgSend(v346, "formatStrings"));
                              v386 = objc_claimAutoreleasedReturnValue(objc_msgSend(v382, "formatStrings"));
                              v505 = (id)v385;
                              v508 = (id)v386;
                              v387 = &stru_1011A7650;
                              if (!(v385 | v386))
                              {

                                goto LABEL_609;
                              }
                              if (v505)
                                v434 = v386 == 0;
                              else
                                v434 = 0;
                              v435 = v434;
                              if (v508)
                                v436 = v385 == 0;
                              else
                                v436 = 0;
                              if (!v436 && (v435 & 1) == 0)
                              {
                                v437 = objc_msgSend(v505, "count");
                                if (v437 == objc_msgSend(v508, "count"))
                                {
                                  v569 = 0u;
                                  v570 = 0u;
                                  v567 = 0u;
                                  v568 = 0u;
                                  v438 = v505;
                                  v439 = objc_msgSend(v438, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
                                  if (v439)
                                  {
                                    v440 = v439;
                                    v441 = 0;
                                    v442 = *(_QWORD *)v568;
                                    while (2)
                                    {
                                      for (m = 0; m != v440; m = (char *)m + 1)
                                      {
                                        if (*(_QWORD *)v568 != v442)
                                          objc_enumerationMutation(v438);
                                        v444 = *(NSString **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)m);
                                        v445 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v508, "objectAtIndexedSubscript:", (char *)m + v441));
                                        LODWORD(v444) = sub_1001857A8(v445, v444, (NSString *)v445);

                                        if (!(_DWORD)v444)
                                        {

                                          goto LABEL_731;
                                        }
                                      }
                                      v440 = objc_msgSend(v438, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
                                      v441 += (uint64_t)m;
                                      if (v440)
                                        continue;
                                      break;
                                    }
                                  }

LABEL_609:
                                  v388 = objc_claimAutoreleasedReturnValue(objc_msgSend(v384, "separators"));
                                  v389 = objc_claimAutoreleasedReturnValue(objc_msgSend(v382, "separators"));
                                  v502 = (id)v388;
                                  v504 = (id)v389;
                                  v390 = &stru_1011A7670;
                                  if (v388 | v389)
                                  {
                                    if (v502)
                                      v458 = v389 == 0;
                                    else
                                      v458 = 0;
                                    v459 = v458;
                                    if (v504)
                                      v460 = v388 == 0;
                                    else
                                      v460 = 0;
                                    if (v460
                                      || (v459 & 1) != 0
                                      || (v461 = objc_msgSend(v502, "count"), v461 != objc_msgSend(v504, "count")))
                                    {

LABEL_819:
                                      v285 = 0;
                                      v5 = v513;
                                      v3 = v514;
                                      v7 = v537;
                                      v52 = v564;
                                      v284 = v550;
                                      v286 = v523;
                                      v350 = v504;
                                      goto LABEL_733;
                                    }
                                    v569 = 0u;
                                    v570 = 0u;
                                    v567 = 0u;
                                    v568 = 0u;
                                    v462 = v502;
                                    v463 = objc_msgSend(v462, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
                                    if (v463)
                                    {
                                      v464 = v463;
                                      v465 = 0;
                                      v466 = *(_QWORD *)v568;
                                      while (2)
                                      {
                                        for (n = 0; n != v464; n = (char *)n + 1)
                                        {
                                          if (*(_QWORD *)v568 != v466)
                                            objc_enumerationMutation(v462);
                                          v468 = *(NSString **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)n);
                                          v469 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v504, "objectAtIndexedSubscript:", (char *)n + v465));
                                          LODWORD(v468) = sub_1001857A8(v469, v468, (NSString *)v469);

                                          if (!(_DWORD)v468)
                                          {

                                            goto LABEL_819;
                                          }
                                        }
                                        v464 = objc_msgSend(v462, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
                                        v465 += (uint64_t)n;
                                        if (v464)
                                          continue;
                                        break;
                                      }
                                    }

                                  }
                                  else
                                  {

                                  }
                                  v391 = objc_claimAutoreleasedReturnValue(objc_msgSend(v384, "formatTokens"));
                                  v392 = objc_claimAutoreleasedReturnValue(objc_msgSend(v382, "formatTokens"));
                                  v496 = (id)v391;
                                  v499 = (id)v392;
                                  v393 = &stru_1011A7690;
                                  if (!(v391 | v392))
                                  {

                                    goto LABEL_613;
                                  }
                                  if (v496)
                                    v471 = v392 == 0;
                                  else
                                    v471 = 0;
                                  v472 = v471;
                                  if (v499)
                                    v473 = v391 == 0;
                                  else
                                    v473 = 0;
                                  if (!v473 && (v472 & 1) == 0)
                                  {
                                    v474 = objc_msgSend(v496, "count");
                                    if (v474 == objc_msgSend(v499, "count"))
                                    {
                                      v569 = 0u;
                                      v570 = 0u;
                                      v567 = 0u;
                                      v568 = 0u;
                                      v475 = v496;
                                      v476 = objc_msgSend(v475, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
                                      if (v476)
                                      {
                                        v477 = v476;
                                        v478 = 0;
                                        v479 = *(_QWORD *)v568;
                                        while (2)
                                        {
                                          for (ii = 0; ii != v477; ii = (char *)ii + 1)
                                          {
                                            if (*(_QWORD *)v568 != v479)
                                              objc_enumerationMutation(v475);
                                            v481 = *(GEOServerFormatToken **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)ii);
                                            v482 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v499, "objectAtIndexedSubscript:", (char *)ii + v478));
                                            LODWORD(v481) = sub_1001857B0(v482, v481, (GEOServerFormatToken *)v482);

                                            if (!(_DWORD)v481)
                                            {
                                              v483 = v499;

                                              goto LABEL_810;
                                            }
                                          }
                                          v477 = objc_msgSend(v475, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
                                          v478 += (uint64_t)ii;
                                          if (v477)
                                            continue;
                                          break;
                                        }
                                      }

LABEL_613:
                                      v394 = objc_claimAutoreleasedReturnValue(objc_msgSend(v384, "alternativeString"));
                                      v395 = objc_claimAutoreleasedReturnValue(objc_msgSend(v382, "alternativeString"));
                                      v396 = v394 | v395;
                                      v397 = (id)v394;
                                      v398 = (id)v395;
                                      if (v396)
                                        v399 = objc_msgSend(v397, "isEqual:", v398);
                                      else
                                        v399 = 1;

                                      v5 = v513;
                                      v3 = v514;
                                      v7 = v537;
                                      v52 = v564;
                                      v279 = v550;
                                      v272 = v554;
                                      if ((v399 & 1) == 0)
                                      {
                                        v285 = 0;
                                        v284 = v550;
                                        v286 = v523;
LABEL_734:

                                        swift_unknownObjectRelease(v554);
                                        swift_unknownObjectRelease(v284);

                                        v4 = v529;
                                        v68 = v520;
                                        if ((v285 & 1) != 0)
                                          goto LABEL_138;
                                        goto LABEL_391;
                                      }
                                      goto LABEL_385;
                                    }
                                  }

                                  v483 = v499;
LABEL_810:

                                  goto LABEL_819;
                                }
                              }

LABEL_731:
                              v285 = 0;
                              v350 = v508;
                              v5 = v513;
                              v3 = v514;
                              v7 = v537;
                              v52 = v564;
                            }
                          }
                          v284 = v550;
                          v286 = v523;
LABEL_733:

                          goto LABEL_734;
                        }
LABEL_702:

                        goto LABEL_703;
                      }

                      v322 = v528;
                      v349 = v521;
                      if (v335)
                        v349 = (void *)v335;
                    }
                    else
                    {

                      v349 = v277;
                    }
                  }

LABEL_630:
LABEL_631:

                  swift_unknownObjectRelease(v554);
                  v379 = v550;
LABEL_632:

                  swift_unknownObjectRelease(v379);
LABEL_389:
                  v4 = v529;
LABEL_390:
                  v68 = v520;
                  goto LABEL_391;
                }
                goto LABEL_450;
              }
LABEL_620:

              goto LABEL_621;
            }

            if (v546)
              v309 = v546;
            else
              v309 = v526;
          }

LABEL_450:
          swift_unknownObjectRelease(v554);
          v295 = v550;
LABEL_451:

          swift_unknownObjectRelease(v295);
          goto LABEL_389;
        }
      }
    }

    swift_unknownObjectRelease(v110);
    v108 = v112;
LABEL_388:
    swift_unknownObjectRelease(v108);
    goto LABEL_389;
  }
  swift_unknownObjectRelease(v110);
  swift_unknownObjectRelease(v112);
  v4 = v529;
  v68 = v520;
LABEL_138:
  v54 = v531;
  if (v562 == 2)
    goto LABEL_826;
  v497 = v52 + 32;
  v500 = v52 & 0xFFFFFFFFFFFFFF8;
  v113 = 2;
  v534 = v7;
  while (v560)
  {
    v69 = specialized _ArrayBuffer._getElementSlowPath(_:)(v113, v54);
    v114 = v113 + 1;
    if (__OFADD__(v113, 1))
      goto LABEL_828;
LABEL_148:
    if (v113 == v558)
      goto LABEL_822;
    v549 = v114;
    if (v556)
    {
      v115 = specialized _ArrayBuffer._getElementSlowPath(_:)(v113, v52);
    }
    else
    {
      if (v113 >= *(_QWORD *)(v500 + 16))
        goto LABEL_832;
      v115 = *(_QWORD *)(v497 + 8 * v113);
      swift_unknownObjectRetain(v115);
    }
    v116 = (id)v69;
    v117 = (id)v115;
    v118 = v117;
    if (!(v69 | v115))
    {
      swift_unknownObjectRelease(v116);
      swift_unknownObjectRelease(v118);
      v52 = v564;
      v68 = v520;
      goto LABEL_141;
    }
    if (v116)
      v119 = v115 == 0;
    else
      v119 = 0;
    v120 = v119;
    if (v117)
      v121 = v69 == 0;
    else
      v121 = 0;
    v122 = v117;
    v123 = v116;
    if (v121
      || (v120 & 1) != 0
      || (v124 = objc_msgSend(v116, "artworkSourceType"),
          v124 != objc_msgSend(v122, "artworkSourceType"))
      || (v125 = objc_msgSend(v116, "artworkUseType"),
          v125 != objc_msgSend(v122, "artworkUseType")))
    {
      swift_unknownObjectRelease(v116);
      swift_unknownObjectRelease(v122);
      goto LABEL_500;
    }
    v126 = objc_claimAutoreleasedReturnValue(objc_msgSend(v116, "shieldDataSource"));
    v553 = v122;
    v127 = objc_claimAutoreleasedReturnValue(objc_msgSend(v122, "shieldDataSource"));
    v128 = (void *)(v126 | v127);
    v129 = (id)v126;
    v130 = (id)v127;
    v540 = v123;
    v544 = v129;
    v527 = v130;
    if (v126 | v127)
    {
      if (v129)
        v131 = v127 == 0;
      else
        v131 = 0;
      v132 = v131;
      if (v130)
        v133 = v126 == 0;
      else
        v133 = 0;
      v134 = v130;
      if (v133 || v132 || (v135 = objc_msgSend(v129, "shieldType"), v135 != objc_msgSend(v134, "shieldType")))
      {

      }
      else
      {
        v136 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v129, "shieldText"));
        if (!v136)
        {
          v532 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldText"));
          if (!v532)
          {
            v532 = 0;
            v137 = 0;
            goto LABEL_184;
          }
        }
        v123 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v129, "shieldText"));
        v128 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldText"));
        if ((objc_msgSend(v123, "isEqualToString:", v128) & 1) != 0)
        {
          v137 = 1;
LABEL_184:
          v138 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v129, "shieldColorString"));
          if (v138 || (v135 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldColorString"))) != 0)
          {
            v139 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v129, "shieldColorString"));
            v140 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v134, "shieldColorString"));
            v141 = objc_msgSend(v139, "isEqualToString:", v140);

            if (v138)
            {

              v5 = v513;
              v3 = v514;
              if (v137)
                goto LABEL_188;
              goto LABEL_189;
            }
            v3 = v514;
          }
          else
          {
            v141 = 1;
          }

          v5 = v513;
          if ((v137 & 1) != 0)
          {
LABEL_188:

          }
LABEL_189:
          v123 = v540;
          v129 = v544;

          v142 = v527;
          if (v136)
          {

          }
          else
          {

          }
          v7 = v534;
          v4 = v529;
          if ((v141 & 1) == 0)
            goto LABEL_492;
          goto LABEL_193;
        }

        if (v136)
          v134 = v136;
        else
          v134 = v532;
        v4 = v529;
        v123 = v540;
      }

      v142 = v527;
LABEL_492:
      swift_unknownObjectRelease(v123);
      swift_unknownObjectRelease(v553);

      v123 = v129;
      v122 = v142;
      goto LABEL_500;
    }
LABEL_193:
    v143 = objc_claimAutoreleasedReturnValue(objc_msgSend(v123, "iconDataSource"));
    v144 = objc_claimAutoreleasedReturnValue(objc_msgSend(v553, "iconDataSource"));
    v145 = (id)v143;
    v523 = (id)v144;
    v521 = v145;
    if (v143 | v144)
    {
      if (v145)
        v146 = v144 == 0;
      else
        v146 = 0;
      v147 = v146;
      if (v523)
        v148 = v143 == 0;
      else
        v148 = 0;
      if (v148
        || (v147 & 1) != 0
        || (v149 = objc_msgSend(v145, "iconType"), v149 != objc_msgSend(v523, "iconType"))
        || (v150 = objc_msgSend(v145, "cartoID"), v150 != objc_msgSend(v523, "cartoID"))
        || (v151 = objc_msgSend(v145, "defaultTransitType"),
            v151 != objc_msgSend(v523, "defaultTransitType"))
        || (v152 = objc_msgSend(v145, "iconAttributeKey"),
            v152 != objc_msgSend(v523, "iconAttributeKey")))
      {
        v164 = v145;
        v163 = v523;
        goto LABEL_498;
      }
      v153 = objc_msgSend(v145, "iconAttributeValue");
      v154 = objc_msgSend(v523, "iconAttributeValue");

      if (v153 != v154)
        goto LABEL_499;
    }
    v155 = objc_claimAutoreleasedReturnValue(objc_msgSend(v123, "iconFallbackShieldDataSource"));
    v156 = objc_claimAutoreleasedReturnValue(objc_msgSend(v553, "iconFallbackShieldDataSource"));
    v157 = (void *)(v155 | v156);
    v158 = (id)v155;
    v159 = (id)v156;
    v532 = v158;
    if (!(v155 | v156))
      goto LABEL_236;
    if (v158)
      v160 = v156 == 0;
    else
      v160 = 0;
    v161 = v160;
    if (v159)
      v162 = v155 == 0;
    else
      v162 = 0;
    v163 = v159;
    if (v162 || v161)
    {
      v164 = v532;
LABEL_486:

      v329 = v163;
LABEL_497:

LABEL_498:
      v145 = v521;
LABEL_499:
      swift_unknownObjectRelease(v123);
      swift_unknownObjectRelease(v553);

      v123 = v145;
      v122 = v523;
LABEL_500:

      goto LABEL_390;
    }
    v164 = v532;
    v165 = objc_msgSend(v532, "shieldType");
    if (v165 != objc_msgSend(v163, "shieldType"))
      goto LABEL_486;
    v166 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "shieldText"));
    if (v166 || (v512 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v163, "shieldText"))) != 0)
    {
      v123 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "shieldText"));
      v157 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v163, "shieldText"));
      if ((objc_msgSend(v123, "isEqualToString:", v157) & 1) == 0)
      {

        v329 = v512;
        if (v166)
          v329 = v166;
        v4 = v529;
        v123 = v540;
        goto LABEL_497;
      }
      v167 = 1;
    }
    else
    {
      v512 = 0;
      v167 = 0;
    }
    v168 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "shieldColorString"));
    if (v168 || (v511 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v163, "shieldColorString"))) != 0)
    {
      v169 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v532, "shieldColorString"));
      v170 = v163;
      v171 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v163, "shieldColorString"));
      v172 = objc_msgSend(v169, "isEqualToString:", v171);

      if (v168)
      {

        v5 = v513;
        v3 = v514;
        v163 = v170;
        v173 = v172;
        if (!v167)
          goto LABEL_232;
LABEL_231:

        goto LABEL_232;
      }
      v3 = v514;
      v163 = v170;
      v173 = v172;
      v195 = v511;
    }
    else
    {
      v195 = 0;
      v173 = 1;
    }

    v5 = v513;
    if ((v167 & 1) != 0)
      goto LABEL_231;
LABEL_232:
    v123 = v540;

    if (v166)
    {

    }
    else
    {

    }
    v7 = v534;
    v4 = v529;
    v159 = v163;
    if ((v173 & 1) == 0)
    {
      v164 = v532;
      goto LABEL_498;
    }
LABEL_236:
    v506 = v159;
    v174 = objc_claimAutoreleasedReturnValue(objc_msgSend(v123, "textDataSource"));
    v175 = v123;
    v176 = v553;
    v177 = objc_claimAutoreleasedReturnValue(objc_msgSend(v553, "textDataSource"));
    v178 = (id)v174;
    v179 = (id)v177;
    v511 = v179;
    v512 = v178;
    if (v174 | v177)
    {
      if (v178)
        v183 = v177 == 0;
      else
        v183 = 0;
      v184 = v183;
      if (v179)
        v185 = v174 == 0;
      else
        v185 = 0;
      v186 = v178;
      v187 = v179;
      if (v185 || v184)
      {

        v182 = 0;
        v192 = v187;
        v181 = v553;
        v52 = v564;
        v68 = v520;
        goto LABEL_365;
      }
      v188 = objc_claimAutoreleasedReturnValue(objc_msgSend(v178, "text"));
      v189 = objc_claimAutoreleasedReturnValue(objc_msgSend(v187, "text"));
      v178 = (id)v188;
      v190 = (id)v189;
      if (v188 | v189)
      {
        if (v178)
          v196 = v189 == 0;
        else
          v196 = 0;
        v197 = v196;
        v494 = v190;
        if (v190)
          v198 = v188 == 0;
        else
          v198 = 0;
        v52 = v564;
        v68 = v520;
        if (v198 || (v197 & 1) != 0)
        {

          v192 = v494;
          v182 = 0;
          v181 = v553;
          goto LABEL_365;
        }
        v492 = v178;
        v199 = objc_claimAutoreleasedReturnValue(objc_msgSend(v178, "formatStrings"));
        v200 = objc_claimAutoreleasedReturnValue(objc_msgSend(v494, "formatStrings"));
        v201 = (id)v199;
        v202 = (id)v200;
        v203 = &stru_1011A7650;
        if (v199 | v200)
        {
          if (v201)
            v220 = v200 == 0;
          else
            v220 = 0;
          v221 = v220;
          if (v202)
            v222 = v199 == 0;
          else
            v222 = 0;
          v223 = v202;
          v224 = v201;
          if (v222 || (v221 & 1) != 0 || (v225 = objc_msgSend(v201, "count"), v225 != objc_msgSend(v223, "count")))
          {

            v233 = v223;
            v68 = v520;
            v181 = v553;
LABEL_311:

            v182 = 0;
            v192 = v233;
            goto LABEL_365;
          }
          v569 = 0u;
          v570 = 0u;
          v567 = 0u;
          v568 = 0u;
          v490 = v201;
          v226 = v201;
          v227 = objc_msgSend(v226, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
          if (v227)
          {
            v228 = v227;
            v229 = 0;
            v230 = *(_QWORD *)v568;
            while (2)
            {
              for (jj = 0; jj != v228; jj = (char *)jj + 1)
              {
                if (*(_QWORD *)v568 != v230)
                  objc_enumerationMutation(v226);
                v232 = *(NSString **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)jj);
                v233 = v223;
                v234 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v223, "objectAtIndexedSubscript:", (char *)jj + v229));
                LODWORD(v232) = sub_1001857A8(v234, v232, (NSString *)v234);

                if (!(_DWORD)v232)
                {

                  v3 = v514;
                  v4 = v529;
                  v68 = v520;
                  v52 = v564;
                  v181 = v553;
                  v224 = v490;
                  goto LABEL_311;
                }
                v223 = v233;
              }
              v228 = objc_msgSend(v226, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
              v229 += (uint64_t)jj;
              if (v228)
                continue;
              break;
            }
          }
          v489 = v223;

          v3 = v514;
          v4 = v529;
          v52 = v564;
        }
        else
        {
          v489 = v202;
          v490 = v201;

        }
        v204 = objc_claimAutoreleasedReturnValue(objc_msgSend(v492, "separators"));
        v205 = objc_claimAutoreleasedReturnValue(objc_msgSend(v494, "separators"));
        v206 = (id)v204;
        v207 = (id)v205;
        v208 = &stru_1011A7670;
        v491 = v207;
        if (!(v204 | v205))
        {
          v488 = v206;

          goto LABEL_275;
        }
        if (v206)
          v235 = v205 == 0;
        else
          v235 = 0;
        v236 = v235;
        if (v207)
          v237 = v204 == 0;
        else
          v237 = 0;
        v68 = v520;
        if (v237 || (v236 & 1) != 0 || (v238 = objc_msgSend(v206, "count"), v238 != objc_msgSend(v207, "count")))
        {

          v181 = v553;
        }
        else
        {
          v569 = 0u;
          v570 = 0u;
          v567 = 0u;
          v568 = 0u;
          v488 = v206;
          v239 = v206;
          v240 = objc_msgSend(v239, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
          if (v240)
          {
            v241 = v240;
            v242 = 0;
            v243 = *(_QWORD *)v568;
            while (2)
            {
              for (kk = 0; kk != v241; kk = (char *)kk + 1)
              {
                if (*(_QWORD *)v568 != v243)
                  objc_enumerationMutation(v239);
                v245 = *(NSString **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)kk);
                v246 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v491, "objectAtIndexedSubscript:", (char *)kk + v242));
                LODWORD(v245) = sub_1001857A8(v246, v245, (NSString *)v246);

                if (!(_DWORD)v245)
                {

LABEL_362:
                  v3 = v514;
                  v4 = v529;
                  v68 = v520;
                  v52 = v564;
                  goto LABEL_363;
                }
              }
              v241 = objc_msgSend(v239, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
              v242 += (uint64_t)kk;
              if (v241)
                continue;
              break;
            }
          }

          v3 = v514;
          v4 = v529;
          v52 = v564;
LABEL_275:
          v209 = objc_claimAutoreleasedReturnValue(objc_msgSend(v492, "formatTokens"));
          v210 = objc_claimAutoreleasedReturnValue(objc_msgSend(v494, "formatTokens"));
          v211 = (id)v209;
          v212 = (id)v210;
          v213 = &stru_1011A7690;
          if (!(v209 | v210))
          {
            v485 = v212;
            v487 = v211;

            goto LABEL_277;
          }
          if (v211)
            v247 = v210 == 0;
          else
            v247 = 0;
          v248 = v247;
          if (v212)
            v249 = v209 == 0;
          else
            v249 = 0;
          v250 = v212;
          if (!v249 && (v248 & 1) == 0)
          {
            v487 = v211;
            v251 = objc_msgSend(v211, "count");
            if (v251 == objc_msgSend(v212, "count"))
            {
              v569 = 0u;
              v570 = 0u;
              v567 = 0u;
              v568 = 0u;
              v252 = v211;
              v253 = objc_msgSend(v252, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
              if (v253)
              {
                v254 = v253;
                v255 = 0;
                v256 = *(_QWORD *)v568;
                while (2)
                {
                  for (mm = 0; mm != v254; mm = (char *)mm + 1)
                  {
                    if (*(_QWORD *)v568 != v256)
                      objc_enumerationMutation(v252);
                    v258 = *(GEOServerFormatToken **)(*((_QWORD *)&v567 + 1) + 8 * (_QWORD)mm);
                    v259 = v250;
                    v260 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v250, "objectAtIndexedSubscript:", (char *)mm + v255));
                    LODWORD(v258) = sub_1001857B0(v260, v258, (GEOServerFormatToken *)v260);

                    if (!(_DWORD)v258)
                    {

                      goto LABEL_362;
                    }
                    v250 = v259;
                  }
                  v254 = objc_msgSend(v252, "countByEnumeratingWithState:objects:count:", &v567, v566, 16);
                  v255 += (uint64_t)mm;
                  if (v254)
                    continue;
                  break;
                }
              }
              v485 = v250;

              v3 = v514;
              v4 = v529;
LABEL_277:
              v214 = objc_claimAutoreleasedReturnValue(objc_msgSend(v492, "alternativeString", v485));
              v215 = objc_claimAutoreleasedReturnValue(objc_msgSend(v494, "alternativeString"));
              v216 = v214 | v215;
              v217 = (id)v214;
              v218 = (id)v215;
              if (v216)
                v219 = objc_msgSend(v217, "isEqual:", v218);
              else
                v219 = 1;
              v178 = v512;

              v176 = v553;
              v175 = v540;
              if ((v219 & 1) == 0)
              {
                v182 = 0;
                v181 = v553;
                goto LABEL_239;
              }
              goto LABEL_237;
            }
          }

          v68 = v520;
LABEL_363:
          v181 = v553;
          v206 = v488;
        }

        v182 = 0;
        v192 = v491;
        goto LABEL_365;
      }
      v191 = v190;

      v176 = v553;
      v175 = v540;
    }
LABEL_237:
    v180 = objc_msgSend(v175, "hasRoutingIncidentBadge");
    v181 = v176;
    if (v180 != objc_msgSend(v176, "hasRoutingIncidentBadge"))
    {
      v182 = 0;
LABEL_239:
      v52 = v564;
      v68 = v520;
      goto LABEL_366;
    }
    v192 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v175, "accessibilityText"));
    v68 = v520;
    if (v192 || (v178 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v181, "accessibilityText"))) != 0)
    {
      v193 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v175, "accessibilityText"));
      v194 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v553, "accessibilityText"));
      v182 = objc_msgSend(v193, "isEqualToString:", v194);

      v181 = v553;
      v68 = v520;
      v52 = v564;
      if (!v192)
        v192 = v178;
    }
    else
    {
      v182 = 1;
      v52 = v564;
      v192 = 0;
    }
LABEL_365:

LABEL_366:
    swift_unknownObjectRelease(v540);

    swift_unknownObjectRelease(v181);
    if (!v182)
      goto LABEL_391;
LABEL_141:
    v113 = v549;
    v54 = v531;
    if (v549 == v562)
      goto LABEL_826;
  }
  if (v113 >= *(_QWORD *)((v531 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_831;
  v69 = *(_QWORD *)(v531 + 32 + 8 * v113);
  swift_unknownObjectRetain(v69);
  v114 = v113 + 1;
  if (!__OFADD__(v113, 1))
    goto LABEL_148;
LABEL_828:
  __break(1u);
LABEL_829:
  __break(1u);
LABEL_830:
  __break(1u);
LABEL_831:
  __break(1u);
LABEL_832:
  __break(1u);
LABEL_833:
  __break(1u);
LABEL_834:
  __break(1u);
}

uint64_t sub_10018450C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t *v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v4 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a2);
    if (v4)
      goto LABEL_3;
    return 0;
  }
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return 0;
LABEL_3:
  v5 = 0;
  v6 = &OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
  v7 = OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
  v22 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA);
  v20 = OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
  v21 = v4;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a2);
    }
    else
    {
      v8 = *(_QWORD *)(a2 + 8 * v5 + 32);
      *(_QWORD *)&v9 = swift_retain(v8).n128_u64[0];
    }
    if (v22 != *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA)
      || (objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem), "isEqual:", *(uint64_t *)((char *)a1 + v7), v9) & 1) == 0)
    {
      swift_release(v8);
      goto LABEL_16;
    }
    v10 = a1;
    KeyPath = swift_getKeyPath(&unk_100E30C70);
    v12 = swift_getKeyPath(&unk_100E30C98);
    static Published.subscript.getter(&v23, v8, KeyPath, v12);
    swift_release(KeyPath);
    swift_release(v12);
    v13 = v23;
    a1 = v24;
    v14 = swift_getKeyPath(&unk_100E30C70);
    v15 = swift_getKeyPath(&unk_100E30C98);
    static Published.subscript.getter(&v23, v10, v14, v15);
    swift_release(v14);
    swift_release(v15);
    v6 = v24;
    if (!a1)
      break;
    if (!v24)
    {
      swift_release(v8);
      v17 = a1;
      goto LABEL_22;
    }
    if (v13 == v23 && a1 == v24)
      goto LABEL_25;
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, a1, v23, v24, 0);
    swift_release(v8);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(v6);
    a1 = v10;
    v7 = v20;
    v4 = v21;
    v6 = &OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
    if ((v16 & 1) != 0)
      return v5;
LABEL_16:
    if (__OFADD__(v5, 1))
      goto LABEL_24;
LABEL_17:
    if (++v5 == v4)
      return 0;
  }
  swift_release(v8);
  if (!v6)
    return v5;
  v17 = v6;
LABEL_22:
  swift_bridgeObjectRelease(v17);
  a1 = v10;
  v7 = v20;
  v4 = v21;
  v6 = &OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
  if (!__OFADD__(v5, 1))
    goto LABEL_17;
LABEL_24:
  __break(1u);
LABEL_25:
  swift_release(v8);
  swift_bridgeObjectRelease(a1);
  swift_bridgeObjectRelease(v6);
  return v5;
}

void *sub_1001847B0@<X0>(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  void *result;
  char v9;

  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_10020D8A4(v5);
  v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    sub_10000BE60(&v5[4 * a1 + 4], a2);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      result = memmove(&v5[4 * a1 + 4], &v5[4 * a1 + 8], 32 * (v7 - a1));
      v5[2] = v7;
      *v2 = v5;
      return result;
    }
  }
  v9 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100184898(unint64_t a1)
{
  return sub_1001848A4(a1, sub_10020D8B8);
}

uint64_t sub_1001848A4(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  char v15;

  v5 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    v5 = a2(v5);
    *v2 = v5;
  }
  v7 = v5 & 0xFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 <= a1)
  {
    __break(1u);
  }
  else
  {
    v9 = v8 - 1;
    v10 = v8 - 1 - a1;
    if (v10 >= 0)
    {
      v11 = v7 + 8 * a1;
      v12 = *(_QWORD *)(v11 + 32);
      v13 = memmove((void *)(v11 + 32), (const void *)(v11 + 40), 8 * v10);
      *(_QWORD *)(v7 + 16) = v9;
      specialized Array._endMutation()(v13);
      return v12;
    }
  }
  v15 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v15, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100184988(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if (result)
  {
    v1 = result;
    if ((unint64_t)result >> 62)
    {
      if (result >= 0)
        v37 = result & 0xFFFFFFFFFFFFFF8;
      else
        v37 = result;
      swift_bridgeObjectRetain(result);
      result = _CocoaArrayWrapper.endIndex.getter(v37);
      v2 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain(result);
      if (v2)
      {
LABEL_4:
        v43 = v2 - 1;
        if (v2 < 1)
        {
          __break(1u);
          return result;
        }
        v3 = 0;
        v40 = (_QWORD *)(v39 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_models);
        v38 = (_QWORD *)(v39 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_etaProviders);
        v41 = v1 & 0xC000000000000001;
        v42 = v1;
        if ((v1 & 0xC000000000000001) == 0)
          goto LABEL_7;
LABEL_6:
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
        while (1)
        {
          v5 = *(id *)(v4 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem);
          v6 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedLongLong:", objc_msgSend(v5, "_muid"));
          KeyPath = swift_getKeyPath(&unk_100E30C70);
          v8 = swift_getKeyPath(&unk_100E30C98);
          static Published.subscript.getter(&v44, v4, KeyPath, v8);
          swift_release();
          swift_release();
          v9 = v45;
          swift_bridgeObjectRelease(v45);
          sub_10000E4BC(0, (unint64_t *)&qword_10149E3A0, OS_os_log_ptr);
          v10 = (void *)static OS_os_log.default.getter();
          v11 = static os_log_type_t.debug.getter();
          v12 = sub_100008B04((uint64_t *)&unk_10149A4F0);
          v13 = swift_allocObject(v12, 112, 7);
          *(_OWORD *)(v13 + 16) = xmmword_100E22F70;
          *(_QWORD *)(v13 + 56) = sub_10000E4BC(0, (unint64_t *)&qword_10149E3B0, NSNumber_ptr);
          *(_QWORD *)(v13 + 64) = sub_1001856D8();
          *(_QWORD *)(v13 + 32) = v6;
          v14 = v6;
          v15 = objc_msgSend(v5, "name");
          v16 = v15;
          if (v9)
            break;
          if (v15)
          {
            v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
            v22 = v21;

          }
          else
          {
            v20 = 0;
            v22 = 0;
          }
          *(_QWORD *)(v13 + 96) = &type metadata for String;
          *(_QWORD *)(v13 + 104) = sub_10000D8E0();
          if (v22)
            v25 = v20;
          else
            v25 = 0;
          v26 = 0xE000000000000000;
          if (v22)
            v26 = v22;
          *(_QWORD *)(v13 + 72) = v25;
          *(_QWORD *)(v13 + 80) = v26;
          os_log(_:dso:log:type:_:)("[PlaceSummaryETADownloader] Requesting ETA for muid %@ (%@)", 59, 2, &_mh_execute_header, v10, v11, v13);

          swift_bridgeObjectRelease(v13);
          swift_beginAccess(v40, &v44, 33, 0);
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
          v29 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v28 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v29 >= v28 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1);
          v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v4);
          specialized Array._endMutation()(v30);
          swift_endAccess(&v44);
          v31 = objc_msgSend(objc_allocWithZone((Class)MKETAProvider), "initWithMapItem:", v5);
          if (!v31)
          {

LABEL_20:
            swift_release();
            goto LABEL_33;
          }
          v32 = v31;
          objc_msgSend(v31, "_placeSummary_addObserver:", v39);
          swift_beginAccess(v38, &v44, 33, 0);
          v33 = v32;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
          v35 = *(_QWORD *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v34 = *(_QWORD *)((*v38 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v35 >= v34 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
          v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
          specialized Array._endMutation()(v36);
          swift_endAccess(&v44);
          objc_msgSend(v33, "start");
          swift_release();

LABEL_33:
          v1 = v42;
          if (v43 == v3)
            return swift_bridgeObjectRelease(v42);
          ++v3;
          if (v41)
            goto LABEL_6;
LABEL_7:
          v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
          swift_retain();
        }
        if (v15)
        {
          v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
          v19 = v18;

        }
        else
        {
          v17 = 0;
          v19 = 0;
        }
        *(_QWORD *)(v13 + 96) = &type metadata for String;
        *(_QWORD *)(v13 + 104) = sub_10000D8E0();
        if (v19)
          v23 = v17;
        else
          v23 = 0;
        v24 = 0xE000000000000000;
        if (v19)
          v24 = v19;
        *(_QWORD *)(v13 + 72) = v23;
        *(_QWORD *)(v13 + 80) = v24;
        os_log(_:dso:log:type:_:)("[PlaceSummaryETADownloader] using cached ETA for muid %@ (%@)", 61, 2, &_mh_execute_header, v10, v11, v13);

        swift_bridgeObjectRelease(v13);
        goto LABEL_20;
      }
    }
    return swift_bridgeObjectRelease(v1);
  }
  return result;
}

void sub_100184E64(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t *v8;
  double v9;
  double v10;
  BOOL v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD v35[3];
  char v36[24];

  if (!a1)
    goto LABEL_24;
  v2 = v1;
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_models);
  swift_beginAccess(v2 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_models, v36, 0, 0);
  v5 = *v4;
  v6 = a1;
  v7 = swift_bridgeObjectRetain(v5);
  v8 = (uint64_t *)sub_100185530(v7, v6);
  swift_bridgeObjectRelease(v5);

  if (!v8)
    return;
  objc_msgSend(v6, "etaTravelTime");
  v10 = v9;
  if (*((_BYTE *)v8 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_searchAlongRoute) == 1)
  {
    v11 = v9 > 0.0;
    KeyPath = swift_getKeyPath(&unk_100E30CB8);
    v13 = swift_getKeyPath(&unk_100E30CE0);
    LOBYTE(v35[0]) = v11;
    swift_retain();
    static Published.subscript.setter(v35, v8, KeyPath, v13);
  }
  if (v10 > 0.0)
  {
    v14 = (void *)objc_opt_self(NSString);
    if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) != 0)
    {
      if (v10 > -1.0)
      {
        if (v10 < 1.84467441e19)
        {
          v15 = objc_msgSend(v14, "_navigation_stringWithSeconds:andAbbreviationType:", (unint64_t)v10, 2);
          if (v15)
          {
            v16 = v15;
            v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
            v19 = v18;

            v20 = swift_getKeyPath(&unk_100E30C70);
            v21 = swift_getKeyPath(&unk_100E30C98);
            v35[0] = v17;
            v35[1] = v19;
            swift_retain();
            static Published.subscript.setter(v35, v8, v20, v21);
            sub_10000E4BC(0, (unint64_t *)&qword_10149E3A0, OS_os_log_ptr);
            v22 = (void *)static OS_os_log.default.getter();
            v23 = static os_log_type_t.debug.getter();
            v24 = sub_100008B04((uint64_t *)&unk_10149A4F0);
            v25 = swift_allocObject(v24, 112, 7);
            *(_OWORD *)(v25 + 16) = xmmword_100E22F70;
            v26 = OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem;
            v27 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithUnsignedLongLong:", objc_msgSend(*(id *)((char *)v8 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem), "_muid"));
            *(_QWORD *)(v25 + 56) = sub_10000E4BC(0, (unint64_t *)&qword_10149E3B0, NSNumber_ptr);
            *(_QWORD *)(v25 + 64) = sub_1001856D8();
            *(_QWORD *)(v25 + 32) = v27;
            v28 = objc_msgSend(*(id *)((char *)v8 + v26), "name");
            if (v28)
            {
              v29 = v28;
              v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
              v32 = v31;

            }
            else
            {
              v30 = 0;
              v32 = 0;
            }
            *(_QWORD *)(v25 + 96) = &type metadata for String;
            *(_QWORD *)(v25 + 104) = sub_10000D8E0();
            if (v32)
              v33 = v30;
            else
              v33 = 0;
            v34 = 0xE000000000000000;
            if (v32)
              v34 = v32;
            *(_QWORD *)(v25 + 72) = v33;
            *(_QWORD *)(v25 + 80) = v34;
            os_log(_:dso:log:type:_:)("[PlaceSummaryETADownloader] Received ETA for muid %@ (%@)", 57, 2, &_mh_execute_header, v22, v23, v25);

            swift_bridgeObjectRelease(v25);
            sub_100185208((uint64_t)v6, v8);
          }
          goto LABEL_19;
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
LABEL_19:
  swift_release();
}

void sub_100185208(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  _BYTE v17[24];
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = v2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_etaProviders);
  swift_beginAccess(v6, v19, 0, 0);
  v7 = *v6;
  swift_bridgeObjectRetain(*v6);
  v8 = sub_100180D04(a1, v7, &qword_10149E398, MKETAProvider_ptr);
  v10 = v9;
  swift_bridgeObjectRelease(v7);
  if ((v10 & 1) == 0)
  {
    swift_beginAccess(v6, v18, 33, 0);
    v11 = (void *)sub_1001848A4(v8, sub_10020D8B8);
    swift_endAccess(v18);

  }
  v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_models);
  swift_beginAccess(v3 + OBJC_IVAR____TtC4Maps25PlaceSummaryETADownloader_models, v18, 0, 0);
  v13 = *v12;
  swift_bridgeObjectRetain(*v12);
  v14 = sub_10018450C(a2, v13);
  v16 = v15;
  swift_bridgeObjectRelease(v13);
  if ((v16 & 1) == 0)
  {
    swift_beginAccess(v12, v17, 33, 0);
    sub_1001848A4(v14, sub_10020D8B8);
    swift_endAccess(v17);
    swift_release();
  }
}

id sub_1001853B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryETADownloader();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaceSummaryETADownloader()
{
  return objc_opt_self(_TtC4Maps25PlaceSummaryETADownloader);
}

uint64_t sub_10018543C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E30CB8);
  v5 = swift_getKeyPath(&unk_100E30CE0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001854B8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E30CB8);
  v5 = swift_getKeyPath(&unk_100E30CE0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100185530(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  uint64_t v13;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    v4 = 4;
    while (1)
    {
      v5 = v4 - 4;
      if ((a1 & 0xC000000000000001) == 0)
        break;
      v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, a1);
      v7 = v4 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_16;
LABEL_11:
      v8 = *(id *)(v6 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem);
      v9 = objc_msgSend(a2, "mapItem");
      if (v9)
      {
        v10 = v9;
        sub_10000E4BC(0, &qword_101493E78, MKMapItem_ptr);
        v11 = v8;
        v12 = static NSObject.== infix(_:_:)(v11, v10);

        if ((v12 & 1) != 0)
        {
          swift_bridgeObjectRelease(a1);
          return v6;
        }
        swift_release();
      }
      else
      {
        swift_release();

      }
      ++v4;
      if (v7 == v3)
        goto LABEL_21;
    }
    v6 = *(_QWORD *)(a1 + 8 * v4);
    swift_retain();
    v7 = v4 - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_11;
LABEL_16:
    __break(1u);
LABEL_17:
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_21:
  swift_bridgeObjectRelease(a1);
  return 0;
}

unint64_t sub_1001856D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149E3B8;
  if (!qword_10149E3B8)
  {
    v1 = sub_10000E4BC(255, (unint64_t *)&qword_10149E3B0, NSNumber_ptr);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_10149E3B8);
  }
  return result;
}

unint64_t sub_100185738()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149E3C0;
  if (!qword_10149E3C0)
  {
    v1 = type metadata accessor for ContentSizeCategory(255);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for ContentSizeCategory, v1);
    atomic_store(result, (unint64_t *)&qword_10149E3C0);
  }
  return result;
}

_QWORD *sub_100185780(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

BOOL sub_1001857B0(id a1, GEOServerFormatToken *a2, GEOServerFormatToken *a3)
{
  GEOServerFormatToken *v4;
  GEOServerFormatToken *v5;
  char v6;

  v4 = a2;
  v5 = a3;
  v6 = GEOServerFormatTokenEqual(v4, v5);

  return v6;
}

uint64_t sub_100185804(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t *assignWithCopy for PlaceSummaryLine(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  return a1;
}

uint64_t initializeWithTake for PlaceSummaryLine(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t *assignWithTake for PlaceSummaryLine(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
  *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryLine(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 10))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryLine(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 10) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryLine()
{
  return &type metadata for PlaceSummaryLine;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitPublisherNameForGuide()
{
  return &type metadata for PlaceSummaryUnitPublisherNameForGuide;
}

uint64_t sub_10018598C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for AppEntityVisualState(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_10000BC84(&qword_10149E3D8, (uint64_t (*)(uint64_t))&type metadata accessor for AppEntityVisualState, (uint64_t)&protocol conformance descriptor for AppEntityVisualState);
  v2 = sub_100008B04(&qword_10149E3E0);
  v3 = sub_100185D54();
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

Swift::Void __swiftcall UIView.annotateView(placeCardViewController:)(PlaceCardViewController *placeCardViewController)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  PlaceCardItem *v15;
  MKMapItem *v16;
  MKMapItem *v17;
  uint64_t v18;
  MKMapItem *v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  PlaceCardItem *v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v2 = type metadata accessor for AppEntityVisualState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008B04((uint64_t *)&unk_10149AA90);
  __chkstk_darwin(v5);
  v7 = (char *)&v25[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PlaceEntity(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12 = __chkstk_darwin(v11).n128_u64[0];
  v14 = (char *)&v25[-1] - v13;
  v15 = -[PlaceCardViewController placeCardItem](placeCardViewController, "placeCardItem", v12);
  if (v15)
  {
    v24 = v15;
    v16 = -[PlaceCardItem mapItem](v15, "mapItem");
    if (v16)
    {
      v17 = v16;
      v18 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
      v19 = v17;
      sub_10020FB00(v19, (uint64_t)v7, (uint64_t)v14);
      v26 = v8;
      v20 = sub_10000BC84(&qword_10149E3D0, type metadata accessor for PlaceEntity, (uint64_t)&unk_100E341C0);
      v27 = v20;
      v21 = sub_100011DCC(v25);
      sub_100185C80((uint64_t)v14, (uint64_t)v21);
      sub_10000BE88(v25, v26);
      sub_10018598C();
      sub_100185C80((uint64_t)v21, (uint64_t)v10);
      v22 = objc_allocWithZone((Class)type metadata accessor for AppEntityViewAnnotation(0));
      v23 = (void *)AppEntityViewAnnotation.init<A>(entity:state:)(v10, v4, v8, v20);
      UIView.annotate(with:)();

      sub_10000BEAC(v25);
      sub_100185CC4((uint64_t)v14);
    }
    else
    {

    }
  }
}

uint64_t sub_100185C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PlaceEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100185CC4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PlaceEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100185D54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10149E3E8;
  if (!qword_10149E3E8)
  {
    v1 = sub_10000E5D4(&qword_10149E3E0);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10149E3E8);
  }
  return result;
}

uint64_t sub_100185DA0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100E30DE0);
  v4 = swift_getKeyPath(&unk_100E30E08);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

id sub_100185E04()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __n128 v9;
  objc_class *v10;
  uint64_t v12;
  objc_super v13;
  _BYTE v14[24];

  v1 = type metadata accessor for AttributedString(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps31DistanceAccessoryLabelViewModel____lazy_storage___labelView] = 1;
  v8 = v0;
  AttributedString.init(stringLiteral:)(0, 0xE000000000000000);
  v9 = swift_beginAccess(&v8[OBJC_IVAR____TtC4Maps31DistanceAccessoryLabelViewModel__distanceString], v14, 33, 0);
  (*(void (**)(char *, char *, uint64_t, __n128))(v2 + 16))(v4, v7, v1, v9);
  Published.init(initialValue:)(v4, v1);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  swift_endAccess(v14);

  v10 = (objc_class *)type metadata accessor for DistanceAccessoryLabelViewModel(0);
  v13.receiver = v8;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, "init");
}

id sub_100186094()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = OBJC_IVAR____TtC4Maps31DistanceAccessoryLabelViewModel____lazy_storage___labelView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps31DistanceAccessoryLabelViewModel____lazy_storage___labelView];
  v3 = v2;
  if (v2 == (void *)1)
  {
    v3 = sub_100186130(v0);
    v4 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v3;
    v5 = v3;
    sub_100042EEC(v4);
  }
  sub_100042F44(v2);
  return v3;
}

id sub_100186130(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id result;
  void *v14;
  id v15;
  id v16;
  _QWORD v17[2];

  v2 = type metadata accessor for UIHostingControllerSizingOptions(0);
  __chkstk_darwin(v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DistanceAccessoryLabelViewModel(0);
  v6 = sub_10000BC84(&qword_10149E440, type metadata accessor for DistanceAccessoryLabelViewModel, (uint64_t)&unk_100E30DA8);
  v7 = ObservedObject.init(wrappedValue:)(a1, v5, v6);
  v9 = v8;
  objc_allocWithZone((Class)sub_100008B04(&qword_10149E448));
  v17[0] = v7;
  v17[1] = v9;
  v10 = v9;
  v11 = (void *)UIHostingController.init(rootView:)(v17);
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter(v4);
  v12 = v11;
  dispatch thunk of UIHostingController._disableSafeArea.setter(1);

  result = objc_msgSend(v12, "view");
  if (result)
  {
    v14 = result;
    v15 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v14, "setBackgroundColor:", v15);

    v16 = objc_msgSend(v12, "view");
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001862B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DistanceAccessoryLabelViewModel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100186340()
{
  return type metadata accessor for DistanceAccessoryLabelViewModel(0);
}

uint64_t type metadata accessor for DistanceAccessoryLabelViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_10149E428;
  if (!qword_10149E428)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DistanceAccessoryLabelViewModel);
  return result;
}

void sub_100186384(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1001863F8(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

void sub_1001863F8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10149E438)
  {
    v2 = type metadata accessor for AttributedString(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10149E438);
  }
}

uint64_t sub_10018644C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for DistanceAccessoryLabelViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_100186488@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v77 = a2;
  v3 = type metadata accessor for ContentTransition.Style(0);
  v75 = *(_QWORD *)(v3 - 8);
  v76 = v3;
  __chkstk_darwin(v3);
  v74 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100008B04(&qword_10149E458);
  v6 = __chkstk_darwin(v5);
  v65 = (uint64_t *)((char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for ContentTransition(0, v6);
  v63 = *(_QWORD *)(v8 - 8);
  v64 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for AttributedString(0);
  v70 = *(_QWORD *)(v72 - 8);
  __chkstk_darwin(v72);
  v12 = (char **)((char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_100008B04(&qword_10149E460);
  __chkstk_darwin(v62);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_100008B04(&qword_10149E468);
  __chkstk_darwin(v67);
  v66 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_100008B04(&qword_10149E470);
  __chkstk_darwin(v69);
  v68 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_100008B04(&qword_10149E478);
  __chkstk_darwin(v73);
  v71 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100E30DE0);
  v19 = swift_getKeyPath(&unk_100E30E08);
  v20 = a1;
  v60 = v12;
  v61 = v20;
  static Published.subscript.getter(v12, v20, KeyPath, v19);

  swift_release();
  swift_release();
  v21 = Text.init(_:)(v12);
  v23 = v22;
  v25 = v24;
  v27 = v26 & 1;
  v28 = swift_getKeyPath(&unk_100E30EA0);
  v29 = v10;
  v59 = v10;
  static ContentTransition.numericText(increasing:)(0);
  v30 = swift_getKeyPath(&unk_100E30ED0);
  v31 = *(int *)(v5 + 28);
  v32 = v65;
  v33 = v63;
  v34 = v29;
  v35 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))((char *)v65 + v31, v34, v64);
  *v32 = v30;
  sub_10000C1FC((uint64_t)v32, (uint64_t)&v14[*(int *)(v62 + 36)], &qword_10149E458);
  *(_QWORD *)v14 = v21;
  *((_QWORD *)v14 + 1) = v23;
  v14[16] = v27;
  *((_QWORD *)v14 + 3) = v25;
  *((_QWORD *)v14 + 4) = v28;
  v14[40] = 0;
  sub_10006BB40(v21, v23, v27);
  swift_bridgeObjectRetain(v25);
  swift_retain();
  sub_100010CC4((uint64_t)v32, &qword_10149E458);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v59, v35);
  sub_10006B77C(v21, v23, v27);
  swift_release();
  swift_bridgeObjectRelease(v25);
  v36 = static Animation.spring(response:dampingFraction:blendDuration:)(0.5, 0.7, 0.0);
  v37 = swift_getKeyPath(&unk_100E30DE0);
  v38 = swift_getKeyPath(&unk_100E30E08);
  v39 = v61;
  v40 = v60;
  static Published.subscript.getter(v60, v39, v37, v38);

  swift_release();
  swift_release();
  v41 = (uint64_t)v66;
  v42 = (uint64_t *)&v66[*(int *)(v67 + 36)];
  v43 = sub_100008B04(&qword_10149E480);
  v44 = v70;
  v45 = v72;
  (*(void (**)(char *, _QWORD *, uint64_t))(v70 + 16))((char *)v42 + *(int *)(v43 + 36), v40, v72);
  *v42 = v36;
  sub_10000C1FC((uint64_t)v14, v41, &qword_10149E460);
  (*(void (**)(_QWORD *, uint64_t))(v44 + 8))(v40, v45);
  sub_100010CC4((uint64_t)v14, &qword_10149E460);
  v46 = swift_getKeyPath(&unk_100E30F00);
  v47 = v74;
  static ContentTransition.Style.sessionWidget.getter();
  v48 = (uint64_t)v68;
  v49 = (uint64_t *)&v68[*(int *)(v69 + 36)];
  v50 = sub_100008B04(&qword_10149E488);
  v52 = v75;
  v51 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))((char *)v49 + *(int *)(v50 + 28), v47, v76);
  *v49 = v46;
  sub_10000C1FC(v41, v48, &qword_10149E468);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v51);
  sub_100010CC4(v41, &qword_10149E468);
  v53 = swift_getKeyPath(&unk_100E30F30);
  v54 = v71;
  sub_10000C1FC(v48, v71, &qword_10149E470);
  v55 = v73;
  v56 = v54 + *(int *)(v73 + 36);
  *(_QWORD *)v56 = v53;
  *(_BYTE *)(v56 + 8) = 1;
  sub_100010CC4(v48, &qword_10149E470);
  v57 = sub_100186D24();
  View.accessibility(identifier:)(0xD00000000000001ALL, 0x8000000100E4E2F0, v55, v57);
  return sub_100010CC4(v54, &qword_10149E478);
}

uint64_t sub_100186A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100186488(*(void **)(v1 + 8), a1);
}

uint64_t sub_100186A14@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100E30DE0);
  v5 = swift_getKeyPath(&unk_100E30E08);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_100186A80(uint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v16;

  v4 = type metadata accessor for AttributedString(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v16 - v9, a1, v4);
  v12 = *a2;
  KeyPath = swift_getKeyPath(&unk_100E30DE0);
  v14 = swift_getKeyPath(&unk_100E30E08);
  v11(v8, (uint64_t)v10, v4);
  static Published.subscript.setter(v8, v12, KeyPath, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

_QWORD *initializeBufferWithCopyOfBuffer for DistanceAccessoryLabelView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for DistanceAccessoryLabelView(uint64_t a1)
{

}

_QWORD *assignWithCopy for DistanceAccessoryLabelView(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for DistanceAccessoryLabelView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for DistanceAccessoryLabelView()
{
  return &type metadata for DistanceAccessoryLabelView;
}

uint64_t sub_100186C34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10106A860, 1);
}

uint64_t sub_100186C4C()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100186C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10016829C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_100186C90()
{
  return EnvironmentValues.contentTransitionStyle.getter();
}

uint64_t sub_100186CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10016829C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ContentTransition.Style, (uint64_t (*)(char *))&EnvironmentValues.contentTransitionStyle.setter);
}

uint64_t sub_100186CD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.contentTransitionAddsDrawingGroup.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100186D00(unsigned __int8 *a1)
{
  return EnvironmentValues.contentTransitionAddsDrawingGroup.setter(*a1);
}

unint64_t sub_100186D24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149E490;
  if (!qword_10149E490)
  {
    v1 = sub_10000E5D4(&qword_10149E478);
    v2[0] = sub_100186DA8();
    v2[1] = sub_100010D70(&qword_10149E4C8, &qword_10149E4D0, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149E490);
  }
  return result;
}

unint64_t sub_100186DA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149E498;
  if (!qword_10149E498)
  {
    v1 = sub_10000E5D4(&qword_10149E470);
    v2[0] = sub_100186E2C();
    v2[1] = sub_100010D70(&qword_10149E4C0, &qword_10149E488, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149E498);
  }
  return result;
}

unint64_t sub_100186E2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149E4A0;
  if (!qword_10149E4A0)
  {
    v1 = sub_10000E5D4(&qword_10149E468);
    v2[0] = sub_100186EB0();
    v2[1] = sub_100010D70(&qword_10149E4B8, &qword_10149E480, (const char *)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149E4A0);
  }
  return result;
}

unint64_t sub_100186EB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149E4A8;
  if (!qword_10149E4A8)
  {
    v1 = sub_10000E5D4(&qword_10149E460);
    v2[0] = sub_10016E9C0();
    v2[1] = sub_100010D70(&qword_10149E4B0, &qword_10149E458, (const char *)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149E4A8);
  }
  return result;
}

unint64_t sub_100186F38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_10149E4D8;
  if (!qword_10149E4D8)
  {
    v1 = sub_10000E5D4((uint64_t *)&unk_10149E4E0);
    v2[0] = sub_100186D24();
    v2[1] = sub_10000BC84((unint64_t *)&qword_10149CE30, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable((const char *)&protocol conformance descriptor for <> ModifiedContent<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_10149E4D8);
  }
  return result;
}

unint64_t sub_100186FC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  _QWORD *v13;
  unint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  _QWORD *v58;

  v52 = sub_100008B04(&qword_10149E670);
  __chkstk_darwin(v52);
  v51 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v50 = (char *)&v42 - v5;
  __chkstk_darwin(v6);
  v49 = (char *)&v42 - v7;
  v8 = type metadata accessor for Handle(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = _swiftEmptyArrayStorage;
  if (!v12)
    return (unint64_t)v13;
  v42 = v1;
  v58 = _swiftEmptyArrayStorage;
  sub_100132580(0, v12, 0);
  result = sub_100192084(a1);
  v16 = 0;
  v17 = a1 + 64;
  v53 = a1 + 80;
  v47 = v9;
  v48 = a1;
  v45 = a1 + 64;
  v46 = v11;
  v43 = v12;
  v44 = v15;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(a1 + 32))
  {
    v20 = result >> 6;
    if ((*(_QWORD *)(v17 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
      goto LABEL_26;
    v54 = v16;
    v55 = 1 << result;
    v21 = v52;
    v22 = v49;
    v23 = &v49[*(int *)(v52 + 48)];
    v24 = *(_QWORD *)(a1 + 56);
    v25 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * result);
    v27 = *v25;
    v26 = v25[1];
    v56 = *(_QWORD *)(v9 + 72);
    v57 = result;
    v28 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v28(v23, v24 + v56 * result, v8);
    *v22 = v27;
    v22[1] = v26;
    v29 = v8;
    v30 = v50;
    *(_QWORD *)v50 = v27;
    *((_QWORD *)v30 + 1) = v26;
    v28(&v30[*(int *)(v21 + 48)], (unint64_t)v23, v29);
    v31 = (uint64_t)v30;
    v8 = v29;
    v32 = v51;
    sub_1000207BC(v31, v51, &qword_10149E670);
    swift_bridgeObjectRetain_n(v26, 2);
    sub_100010CC4((uint64_t)v22, &qword_10149E670);
    v33 = *(int *)(v21 + 48);
    v34 = v46;
    v28(v46, v32 + v33, v29);
    sub_100010CC4(v32, &qword_10149E670);
    v13 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native(v58) & 1) == 0)
    {
      sub_100132580(0, v13[2] + 1, 1);
      v13 = v58;
    }
    v36 = v13[2];
    v35 = v13[3];
    v9 = v47;
    a1 = v48;
    if (v36 >= v35 >> 1)
    {
      sub_100132580(v35 > 1, v36 + 1, 1);
      v13 = v58;
    }
    v13[2] = v36 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v13+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ v36 * v56, v34, v8);
    v58 = v13;
    v18 = 1 << *(_BYTE *)(a1 + 32);
    if (v57 >= v18)
      goto LABEL_27;
    v17 = v45;
    v37 = *(_QWORD *)(v45 + 8 * v20);
    if ((v37 & v55) == 0)
      goto LABEL_28;
    LODWORD(v15) = v44;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v44)
      goto LABEL_29;
    v38 = v37 & (-2 << (v57 & 0x3F));
    if (v38)
    {
      v18 = __clz(__rbit64(v38)) | v57 & 0xFFFFFFFFFFFFFFC0;
      v19 = v43;
    }
    else
    {
      v39 = v20 + 1;
      v40 = (unint64_t)(v18 + 63) >> 6;
      v19 = v43;
      if (v20 + 1 < v40)
      {
        v41 = *(_QWORD *)(v45 + 8 * v39);
        if (v41)
        {
LABEL_22:
          v18 = __clz(__rbit64(v41)) + (v39 << 6);
        }
        else
        {
          while (v40 - 2 != v20)
          {
            v41 = *(_QWORD *)(v53 + 8 * v20++);
            if (v41)
            {
              v39 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v16 = v54 + 1;
    result = v18;
    if (v54 + 1 == v19)
      return (unint64_t)v13;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1001874D8()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  NSString v16;
  NSString v17;
  NSString v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v1 = type metadata accessor for Logger(0);
  sub_10000E918(v1, (uint64_t)qword_1014D4B38);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v21 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v8);
    v20 = sub_1000C28FC(v7, v8, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation is starting for query: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  if (objc_msgSend(v2, "isCancelled"))
  {
    v9 = v2;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v21 = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain(v15);
      v20 = sub_1000C28FC(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v12 + 4, v12 + 12);

      swift_bridgeObjectRelease(v15);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "SearchFindMyFriendOperation is cancelled: %s. Marking it as finished.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

    }
    v18 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "willChangeValueForKey:", v18);

    v9[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation] = 1;
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "didChangeValueForKey:", v19);

  }
  else
  {
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "willChangeValueForKey:", v16);

    v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation] = 1;
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "didChangeValueForKey:", v17);

    objc_msgSend(v2, "main");
  }
}

id sub_100187900()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  double Double;
  uint64_t v29;
  double *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t Strong;
  void *v41;
  char *v42;
  uint64_t v43;
  Class isa;
  uint64_t v45;
  uint64_t v46[3];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v5 = (char *)&v46[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46[-1] - v7;
  v9 = sub_100008B04(&qword_101494070);
  __chkstk_darwin(v9);
  v12 = (char *)&v46[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isOffline] & 1) != 0)
  {
    Date.init()(v10);
    if (qword_101490EB8 != -1)
      swift_once(&qword_101490EB8, sub_1001147FC);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_10000E918(v13, (uint64_t)qword_1014D4B38);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "SearchFindMyFriendOperation is offline, building contacts only.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    static TaskPriority.userInitiated.getter();
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v12, 0, 1, v18);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    v19 = *(unsigned __int8 *)(v3 + 80);
    v20 = (v19 + 40) & ~v19;
    v21 = (char *)swift_allocObject(&unk_1011A79C8, v20 + v4, v19 | 7);
    *((_QWORD *)v21 + 2) = 0;
    *((_QWORD *)v21 + 3) = 0;
    *((_QWORD *)v21 + 4) = v1;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v21[v20], v5, v2);
    v22 = v1;
    sub_1001B0C08((uint64_t)v12, (uint64_t)&unk_10149E638, (uint64_t)v21);
    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    v24 = *(_QWORD *)&v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchFindMySession];
    if (v24 && (v25 = *(_QWORD *)(v24 + OBJC_IVAR____TtC4Maps19SearchFindMySession_session)) != 0)
    {
      v26 = MapsConfig_SearchACFindMyTimeoutInterval;
      v27 = off_1014B4E88;
      swift_retain();
      Double = GEOConfigGetDouble(v26, v27);
      static TaskPriority.userInitiated.getter();
      v29 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
      v30 = (double *)swift_allocObject(&unk_1011A79A0, 56, 7);
      v30[2] = 0.0;
      v30[3] = 0.0;
      v30[4] = Double;
      *((_QWORD *)v30 + 5) = v1;
      *((_QWORD *)v30 + 6) = v25;
      swift_retain();
      v31 = v1;
      *(_QWORD *)&v31[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_findFriendsTask] = sub_1001B0C08((uint64_t)v12, (uint64_t)&unk_10149E628, (uint64_t)v30);
      swift_release();
      return (id)swift_release();
    }
    else
    {
      if (qword_101490EB8 != -1)
        swift_once(&qword_101490EB8, sub_1001147FC);
      v32 = type metadata accessor for Logger(0);
      sub_10000E918(v32, (uint64_t)qword_1014D4B38);
      v33 = v1;
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        v46[0] = v37;
        *(_DWORD *)v36 = 136315138;
        v38 = *(_QWORD *)&v33[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
        v39 = *(_QWORD *)&v33[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
        swift_bridgeObjectRetain(v39);
        v45 = sub_1000C28FC(v38, v39, v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v36 + 4, v36 + 12);
        swift_bridgeObjectRelease(v39);

        _os_log_impl((void *)&_mh_execute_header, v34, v35, "SearchFindMyFriendOperation: No session found: %s", v36, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v36, -1, -1);
      }
      else
      {

      }
      Strong = swift_unknownObjectWeakLoadStrong(&v33[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate]);
      if (Strong)
      {
        v41 = (void *)Strong;
        v42 = &v33[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems];
        swift_beginAccess(&v33[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems], v46, 0, 0);
        v43 = *(_QWORD *)v42;
        sub_10000E4BC(0, &qword_10149E618, off_101195E20);
        swift_bridgeObjectRetain(v43);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v41, "searchFindMyFriendOperation:didMatchResults:", v33, isa, swift_bridgeObjectRelease(v43).n128_f64[0]);
        swift_unknownObjectRelease(v41);

      }
      return objc_msgSend(v33, "markOperationAsComplete");
    }
  }
}

uint64_t sub_100187E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v5[25] = a4;
  v5[26] = a5;
  v6 = type metadata accessor for Date(0);
  v5[27] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[28] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[29] = swift_task_alloc(v8);
  v5[30] = swift_task_alloc(v8);
  return swift_task_switch(sub_100187EA4, 0, 0);
}

uint64_t sub_100187EA4()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _BOOL4 v5;
  char *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v1 = (void *)v0[25];
  v2 = type metadata accessor for Logger(0);
  v0[31] = sub_10000E918(v2, (uint64_t)qword_1014D4B38);
  v3 = Logger.logObject.getter(v1);
  v4 = static os_log_type_t.info.getter();
  v5 = os_log_type_enabled(v3, v4);
  v6 = (char *)v0[25];
  if (v5)
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v16 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v10);
    v0[21] = sub_1000C28FC(v9, v10, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 21, v0 + 22, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v10);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation: Starting to build contacts for query: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v11 = v0 + 2;
  v12 = (void *)v0[25];
  v0[7] = v0 + 32;
  v0[2] = v0;
  v0[3] = sub_1001880C0;
  v13 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v14 = v0 + 10;
  v14[1] = 0x40000000;
  v14[2] = sub_100188570;
  v14[3] = &unk_1011A79E0;
  v14[4] = v13;
  objc_msgSend(v12, "contactsMatchingSearchQueryWithCompletionHandler:", v14);
  return swift_continuation_await(v11);
}

uint64_t sub_1001880C0()
{
  return swift_task_switch(sub_10018810C, 0, 0);
}

uint64_t sub_10018810C()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  char *v21;
  uint8_t *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t Strong;
  void *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  Class isa;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t type;
  uint64_t typea;
  uint64_t v44;

  v1 = (uint64_t *)(v0 + 200);
  v2 = *(void **)(v0 + 200);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 16))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 216));
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    type = v4;
    v5 = *(_QWORD *)(v0 + 232);
    v6 = *(_QWORD *)(v0 + 240);
    v39 = *(_QWORD *)(v0 + 224);
    v40 = *(_QWORD *)(v0 + 216);
    v7 = *(char **)(v0 + 200);
    v8 = swift_slowAlloc(22, -1);
    v41 = swift_slowAlloc(32, -1);
    v44 = v41;
    *(_DWORD *)v8 = 136315394;
    v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v9);
    *(_QWORD *)(v0 + 184) = sub_1000C28FC(v10, v9, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 184, v0 + 192, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v9);

    *(_WORD *)(v8 + 12) = 2048;
    Date.init()(v11);
    v12 = Date.timeIntervalSince(_:)(v6);
    v13 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v13(v5, v40);
    *(double *)(v0 + 192) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v8 + 14, v8 + 22);
    v13(v6, v40);
    _os_log_impl((void *)&_mh_execute_header, v3, type, "SearchFindMyFriendOperation: Finished building contacts\n searchQuery:%s\n Time taken: %f", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 240);
    v15 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }

  v17 = *(void **)(v0 + 200);
  objc_msgSend(v17, "createAutocompletePersonContacts");
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.info.getter();
  v20 = os_log_type_enabled(v18, v19);
  v21 = *(char **)(v0 + 200);
  if (v20)
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    typea = swift_slowAlloc(32, -1);
    v44 = typea;
    *(_DWORD *)v22 = 136315138;
    v23 = &v21[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems];
    swift_beginAccess(&v21[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems], v0 + 120, 0, 0);
    v24 = *(_QWORD *)v23;
    v25 = sub_10000E4BC(0, &qword_10149E618, off_101195E20);
    v26 = swift_bridgeObjectRetain(v24);
    v27 = Array.description.getter(v26, v25);
    v29 = v28;
    swift_bridgeObjectRelease(v24);
    *(_QWORD *)(v0 + 176) = sub_1000C28FC(v27, v29, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v0 + 184, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v29);

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "SearchFindMyFriendOperation: calling delegate method with items: %s", v22, 0xCu);
    swift_arrayDestroy(typea, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(typea, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {

  }
  Strong = swift_unknownObjectWeakLoadStrong(*v1 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate);
  if (Strong)
  {
    v31 = (void *)Strong;
    v32 = *v1;
    v33 = (uint64_t *)(v32 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
    swift_beginAccess(v32 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems, v0 + 144, 0, 0);
    v34 = *v33;
    sub_10000E4BC(0, &qword_10149E618, off_101195E20);
    swift_bridgeObjectRetain(v34);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v31, "searchFindMyFriendOperation:didMatchResults:", v32, isa, swift_bridgeObjectRelease(v34).n128_f64[0]);
    swift_unknownObjectRelease(v31);

  }
  v36 = *(_QWORD *)(v0 + 232);
  v37 = *(_QWORD *)(v0 + 240);
  objc_msgSend(*(id *)(v0 + 200), "markOperationAsComplete");
  swift_task_dealloc(v37);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100188570(uint64_t a1, char a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  **(_BYTE **)(*(_QWORD *)(v2 + 64) + 40) = a2;
  return swift_continuation_resume(v2);
}

uint64_t sub_100188584(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = a6;
  *(double *)(v6 + 32) = a1;
  return swift_task_switch(sub_1001885A0, 0, 0);
}

uint64_t sub_1001885A0()
{
  double *v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double **v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *((_QWORD *)v0 + 6);
  v2 = v0[4];
  v3 = swift_allocObject(&unk_1011A7A08, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v4 = swift_allocObject(&unk_1011A7A30, 32, 7);
  *((_QWORD *)v0 + 7) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  swift_retain();
  v5 = static Duration.seconds(_:)(v2);
  v7 = v6;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_101499278 + dword_101499278);
  v8 = (double **)swift_task_alloc(unk_10149927C);
  *((_QWORD *)v0 + 8) = v8;
  *v8 = v0;
  v8[1] = (double *)sub_100188680;
  return v10((uint64_t)v10, v5, v7, (uint64_t)&unk_10149E648, v4);
}

uint64_t sub_100188680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc(v2);
  if (v0)
  {
    v3 = sub_1001886EC;
  }
  else
  {
    swift_release();
    v3 = sub_1000C1008;
  }
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001886EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  uint64_t v17;
  Class isa;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  swift_release();
  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 40);
  v3 = type metadata accessor for Logger(0);
  sub_10000E918(v3, (uint64_t)qword_1014D4B38);
  swift_errorRetain(v1);
  swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v2);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 72);
  v8 = *(char **)(v0 + 40);
  if (v6)
  {
    v9 = swift_slowAlloc(22, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    v21 = swift_slowAlloc(32, -1);
    v22 = v21;
    *(_DWORD *)v9 = 138412546;
    swift_errorRetain(v7);
    v11 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    *(_WORD *)(v9 + 12) = 2080;
    v12 = *(_QWORD *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v13 = *(_QWORD *)&v8[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v13);
    *(_QWORD *)(v0 + 24) = sub_1000C28FC(v12, v13, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 14, v9 + 22);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "SearchFindMyFriendOperation: encountered error: %@ for searchQuery:%s", (uint8_t *)v9, 0x16u);
    v14 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v10, 1, v14);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 72));
    swift_errorRelease(v7);

  }
  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate);
  if (Strong)
  {
    v16 = (void *)Strong;
    v17 = *(_QWORD *)(v0 + 40);
    sub_10000E4BC(0, &qword_10149E618, off_101195E20);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "searchFindMyFriendOperation:didMatchResults:", v17, isa);
    swift_unknownObjectRelease(v16);

  }
  v19 = *(_QWORD *)(v0 + 72);
  objc_msgSend(*(id *)(v0 + 40), "markOperationAsComplete");
  swift_errorRelease(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001889DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v3[191] = a3;
  v3[190] = a2;
  v4 = sub_100008B04(&qword_10149E650);
  v3[192] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Location(0);
  v3[193] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[194] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[195] = swift_task_alloc(v7);
  v3[196] = swift_task_alloc(v7);
  v3[197] = swift_task_alloc(v7);
  v3[198] = swift_task_alloc(v7);
  v3[199] = swift_task_alloc(v7);
  v3[200] = swift_task_alloc(v7);
  v3[201] = swift_task_alloc(v7);
  v8 = (*(_QWORD *)(*(_QWORD *)(sub_100008B04(&qword_10149E658) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[202] = swift_task_alloc(v8);
  v3[203] = swift_task_alloc(v8);
  v9 = type metadata accessor for Handle(0);
  v3[204] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[205] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[206] = swift_task_alloc(v11);
  v3[207] = swift_task_alloc(v11);
  v3[208] = swift_task_alloc(v11);
  v3[209] = swift_task_alloc(v11);
  v3[210] = swift_task_alloc(v11);
  v3[211] = swift_task_alloc(v11);
  v3[212] = swift_task_alloc(v11);
  v12 = type metadata accessor for Date(0);
  v3[213] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v3[214] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[215] = swift_task_alloc(v14);
  v3[216] = swift_task_alloc(v14);
  v3[217] = swift_task_alloc(v14);
  v3[218] = swift_task_alloc(v14);
  return swift_task_switch(sub_100188BD4, 0, 0);
}

uint64_t sub_100188BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  id v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = *(_QWORD *)(v0 + 1520) + 16;
  swift_beginAccess(v1, v0 + 824, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 1752) = Strong;
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = swift_allocObject(&unk_1011A7A58, 24, 7);
    *(_QWORD *)(v0 + 1760) = v4;
    *(_QWORD *)(v4 + 16) = v3;
    v5 = v3;
    v6 = swift_retain();
    v7 = swift_asyncLet_begin(v0 + 16, 0, &type metadata for Bool, &unk_10149E668, v4, v0 + 1892, v6);
    Date.init()(v7);
    if (qword_101490EB8 != -1)
      swift_once(&qword_101490EB8, sub_1001147FC);
    v8 = type metadata accessor for Logger(0);
    *(_QWORD *)(v0 + 1768) = sub_10000E918(v8, (uint64_t)qword_1014D4B38);
    v9 = (char *)v5;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v41 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      v14 = *(_QWORD *)&v9[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain(v14);
      *(_QWORD *)(v0 + 1472) = sub_1000C28FC(v15, v14, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1472, v0 + 1480, v12 + 4, v12 + 12);

      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "SearchFindMyFriendOperation: Friends for \n searchQuery:%s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

    }
    v26 = *(_QWORD *)(v0 + 1520) + 16;
    v27 = swift_allocObject(&unk_1011A7A08, 24, 7);
    *(_QWORD *)(v0 + 1776) = v27;
    swift_beginAccess(v26, v0 + 1016, 0, 0);
    v28 = (void *)swift_unknownObjectWeakLoadStrong(v26);
    swift_unknownObjectWeakInit(v27 + 16);

    v29 = (_QWORD *)swift_task_alloc(async function pointer to Session.friendsSharingLocationsWithMe(filter:)[1]);
    *(_QWORD *)(v0 + 1784) = v29;
    *v29 = v0;
    v29[1] = sub_10018902C;
    return Session.friendsSharingLocationsWithMe(filter:)(sub_100192784, v27);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 1736);
    v17 = *(_QWORD *)(v0 + 1728);
    v18 = *(_QWORD *)(v0 + 1720);
    v19 = *(_QWORD *)(v0 + 1696);
    v20 = *(_QWORD *)(v0 + 1688);
    v21 = *(_QWORD *)(v0 + 1680);
    v22 = *(_QWORD *)(v0 + 1672);
    v23 = *(_QWORD *)(v0 + 1664);
    v24 = *(_QWORD *)(v0 + 1656);
    v30 = *(_QWORD *)(v0 + 1648);
    v31 = *(_QWORD *)(v0 + 1624);
    v32 = *(_QWORD *)(v0 + 1616);
    v33 = *(_QWORD *)(v0 + 1608);
    v34 = *(_QWORD *)(v0 + 1600);
    v35 = *(_QWORD *)(v0 + 1592);
    v36 = *(_QWORD *)(v0 + 1584);
    v37 = *(_QWORD *)(v0 + 1576);
    v38 = *(_QWORD *)(v0 + 1568);
    v39 = *(_QWORD *)(v0 + 1560);
    v40 = *(_QWORD *)(v0 + 1536);
    swift_task_dealloc(*(_QWORD *)(v0 + 1744));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10018902C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 1784);
  *(_QWORD *)(v3 + 1792) = a1;
  *(_QWORD *)(v3 + 1800) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10018C3A8;
  }
  else
  {
    swift_release();
    v5 = sub_1001890F0;
  }
  return swift_task_switch(v5, 0, 0);
}

id sub_1001890F0()
{
  double *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  double v22;
  void (*v23)(uint64_t, uint64_t);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(unint64_t, uint64_t, uint64_t);
  uint64_t isUniquelyReferenced_nonNull_native;
  char v47;
  unint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  __n128 v61;
  id result;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  double *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;

  v1 = *((_QWORD *)v0 + 224);
  v2 = (void *)*((_QWORD *)v0 + 219);
  v3 = *((_QWORD *)v0 + 218);
  v4 = *((_QWORD *)v0 + 217);
  v5 = *((_QWORD *)v0 + 213);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*((_QWORD *)v0 + 214) + 16);
  *((_QWORD *)v0 + 226) = v6;
  v6(v4, v3, v5);
  v7 = v2;
  swift_bridgeObjectRetain_n(v1, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.info.getter();
  v70 = v0;
  if (os_log_type_enabled(v8, v9))
  {
    v10 = *((_QWORD *)v0 + 224);
    v11 = (char *)*((_QWORD *)v0 + 219);
    v65 = *((_QWORD *)v0 + 217);
    v12 = *((_QWORD *)v0 + 216);
    v66 = *((_QWORD *)v0 + 214);
    v68 = *((_QWORD *)v0 + 213);
    v13 = swift_slowAlloc(32, -1);
    v72 = swift_slowAlloc(64, -1);
    v74 = (_QWORD *)v72;
    *(_DWORD *)v13 = 136315650;
    v14 = type metadata accessor for Friend(0);
    swift_bridgeObjectRetain(v10);
    v16 = Array.description.getter(v15, v14);
    v18 = v17;
    swift_bridgeObjectRelease(v10);
    *((_QWORD *)v0 + 188) = sub_1000C28FC(v16, v18, (uint64_t *)&v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 188, v0 + 189, v13 + 4, v13 + 12);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease_n(v10, 2);
    *(_WORD *)(v13 + 12) = 2080;
    v19 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v20 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v20);
    *((_QWORD *)v0 + 189) = sub_1000C28FC(v19, v20, (uint64_t *)&v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 189, v0 + 190, v13 + 14, v13 + 22);
    swift_bridgeObjectRelease(v20);

    *(_WORD *)(v13 + 22) = 2048;
    Date.init()(v21);
    v22 = Date.timeIntervalSince(_:)(v65);
    v23 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    v23(v12, v68);
    v0[186] = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 186, v0 + 187, v13 + 24, v13 + 32);
    v23(v65, v68);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SearchFindMyFriendOperation: Found friends:%s\n searchQuery:%s\n Time taken: %f", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {
    v24 = (void *)*((_QWORD *)v0 + 219);
    v25 = *((_QWORD *)v0 + 217);
    v26 = *((_QWORD *)v0 + 214);
    v27 = *((_QWORD *)v0 + 213);
    swift_bridgeObjectRelease_n(*((_QWORD *)v0 + 224), 2);

    v23 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v23(v25, v27);
  }

  *((_QWORD *)v0 + 227) = v23;
  v28 = *((_QWORD *)v0 + 224);
  v29 = (_QWORD *)sub_10000A47C((uint64_t)_swiftEmptyArrayStorage);
  v30 = *(_QWORD *)(v28 + 16);
  v31 = *((_QWORD *)v0 + 224);
  if (v30)
  {
    v67 = v23;
    v73 = *((_QWORD *)v0 + 205);
    v32 = *(_QWORD *)(type metadata accessor for Friend(0) - 8);
    v33 = v31 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v69 = *(_QWORD *)(v32 + 72);
    swift_bridgeObjectRetain(v31);
    while (1)
    {
      v71 = v30;
      v35 = *((_QWORD *)v0 + 212);
      v36 = *((_QWORD *)v0 + 211);
      v37 = *((_QWORD *)v0 + 210);
      v38 = *((_QWORD *)v0 + 204);
      v39 = Friend.handle.getter(v34);
      v40 = Handle.identifier.getter(v39);
      v42 = v41;
      v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8))(v35, v38);
      Friend.handle.getter(v43);
      v44 = v38;
      v45 = *(void (**)(unint64_t, uint64_t, uint64_t))(v73 + 32);
      v45(v37, v36, v44);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v29);
      v74 = v29;
      v48 = sub_1000C17A0(v40, v42);
      v49 = v29[2];
      v50 = (v47 & 1) == 0;
      v51 = v49 + v50;
      if (__OFADD__(v49, v50))
      {
        __break(1u);
LABEL_25:
        __break(1u);
      }
      v52 = v47;
      if (v29[3] >= v51)
      {
        v0 = v70;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1001A17CC();
          v29 = v74;
        }
      }
      else
      {
        sub_1000DAF8C(v51, isUniquelyReferenced_nonNull_native);
        v29 = v74;
        v53 = sub_1000C17A0(v40, v42);
        v0 = v70;
        if ((v52 & 1) != (v54 & 1))
          return (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        v48 = v53;
      }
      v55 = *((_QWORD *)v0 + 210);
      v56 = *((_QWORD *)v0 + 204);
      if ((v52 & 1) != 0)
      {
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v73 + 40))(v29[7] + *(_QWORD *)(v73 + 72) * v48, v55, v56);
      }
      else
      {
        v29[(v48 >> 6) + 8] |= 1 << v48;
        v57 = (uint64_t *)(v29[6] + 16 * v48);
        *v57 = v40;
        v57[1] = v42;
        v45(v29[7] + *(_QWORD *)(v73 + 72) * v48, v55, v56);
        v58 = v29[2];
        v59 = __OFADD__(v58, 1);
        v60 = v58 + 1;
        if (v59)
          goto LABEL_25;
        v29[2] = v60;
        swift_bridgeObjectRetain(v42);
      }
      swift_bridgeObjectRelease(0x8000000000000000);
      swift_bridgeObjectRelease(v42);
      v33 += v69;
      v30 = v71 - 1;
      if (v71 == 1)
      {
        swift_bridgeObjectRelease_n(*((_QWORD *)v0 + 224), 2);
        v23 = v67;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease(*((_QWORD *)v0 + 224));
LABEL_19:
  *((_QWORD *)v0 + 228) = v29;
  if ((sub_10018DC6C() & 1) != 0)
  {
    v23(*((_QWORD *)v0 + 218), *((_QWORD *)v0 + 213));
    v61 = swift_bridgeObjectRelease(v29);
    return (id)swift_asyncLet_finish(v0 + 2, (char *)v0 + 1892, sub_10018C148, v0 + 98, v61);
  }
  else
  {
    v63 = (void *)objc_opt_self(AddressBookManager);
    *((_QWORD *)v0 + 229) = v63;
    result = objc_msgSend(v63, "sharedManager");
    if (result)
    {
      v64 = result;
      *((_QWORD *)v0 + 230) = objc_msgSend(result, "contactStore");

      return (id)swift_asyncLet_get(v0 + 2, (char *)v0 + 1892, sub_100189768, v0 + 122);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100189768()
{
  return swift_task_switch(sub_1001897C8, 0, 0);
}

uint64_t sub_1001897C8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t Strong;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  Class isa;
  void *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _QWORD *v35;

  v2 = *(unsigned __int8 *)(v1 + 1892);
  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    *(_DWORD *)(v1 + 1888) = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1888, v1 + 1892, v5 + 4, v5 + 8);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation: did fetch contacts: %{BOOL}d", v5, 8u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = *(_QWORD *)(v1 + 1824);

  if (!*(_QWORD *)(v6 + 16))
  {
    v15 = Logger.logObject.getter(v7);
    v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "SearchFindMyFriendOperation: no handles were found from FindMy.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    v18 = *(void **)(v1 + 1752);

    v19 = Logger.logObject.getter(objc_msgSend(v18, "createAutocompletePersonContacts"));
    v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "SearchFindMyFriendOperation: calling delegate method with no items", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }
    v22 = *(_QWORD *)(v1 + 1752);

    Strong = swift_unknownObjectWeakLoadStrong(v22 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate);
    if (Strong)
    {
      v24 = (void *)Strong;
      v25 = (uint64_t *)(*(_QWORD *)(v1 + 1752) + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
      swift_beginAccess(v25, v1 + 952, 0, 0);
      v26 = *(_QWORD *)(v1 + 1752);
      v27 = *v25;
      sub_10000E4BC(0, &qword_10149E618, off_101195E20);
      swift_bridgeObjectRetain(v27);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v24, "searchFindMyFriendOperation:didMatchResults:", v26, isa, swift_bridgeObjectRelease(v27).n128_f64[0]);
      swift_unknownObjectRelease(v24);

    }
    v29 = *(void **)(v1 + 1840);
    v30 = *(_QWORD *)(v1 + 1824);
    v31 = *(void (**)(uint64_t, uint64_t))(v1 + 1816);
    v32 = *(_QWORD *)(v1 + 1744);
    v33 = *(_QWORD *)(v1 + 1704);
    objc_msgSend(*(id *)(v1 + 1752), "markOperationAsComplete");

    v31(v32, v33);
    v13 = swift_bridgeObjectRelease(v30);
    v14 = v1 + 1296;
    return swift_asyncLet_finish(v1 + 16, v1 + 1892, sub_10018C148, v14, v13);
  }
  v8 = *(_QWORD *)(v1 + 1824);
  swift_bridgeObjectRetain(v8);
  v10 = sub_100186FC0(v9);
  *(_QWORD *)(v1 + 1848) = v10;
  swift_bridgeObjectRelease(v8);
  if ((sub_10018DC6C() & 1) != 0)
  {
    v11 = *(void **)(v1 + 1840);
    v12 = *(_QWORD *)(v1 + 1824);
    (*(void (**)(_QWORD, _QWORD))(v1 + 1816))(*(_QWORD *)(v1 + 1744), *(_QWORD *)(v1 + 1704));
    swift_bridgeObjectRelease(v10);

    v13 = swift_bridgeObjectRelease(v12);
    v14 = v1 + 656;
    return swift_asyncLet_finish(v1 + 16, v1 + 1892, sub_10018C148, v14, v13);
  }
  *(CFAbsoluteTime *)(v1 + 1856) = CFAbsoluteTimeGetCurrent();
  v35 = (_QWORD *)swift_task_alloc(async function pointer to Session.locations(for:reverseGeocode:)[1]);
  *(_QWORD *)(v1 + 1864) = v35;
  *v35 = v1;
  v35[1] = sub_100189BCC;
  return Session.locations(for:reverseGeocode:)(v10, 0);
}

uint64_t sub_100189BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 1864);
  v3[234] = a1;
  v3[235] = v1;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease(v3[231]);
  if (v1)
    v5 = sub_10018C63C;
  else
    v5 = sub_100189C90;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100189C90()
{
  uint64_t v0;
  double Current;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  double v5;
  uint8_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  NSString v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, unint64_t, uint64_t);
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  Class isa;
  double v76;
  id v77;
  void *v78;
  uint64_t v79;
  id v80;
  id v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  BOOL v96;
  void *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  objc_class *v105;
  id v106;
  _BYTE *v107;
  char v108;
  id v109;
  void *v110;
  id v111;
  uint64_t v112;
  void *v113;
  Class v114;
  void *v115;
  id v116;
  unint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  uint8_t *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t, uint64_t, uint64_t, __n128);
  objc_class *v142;
  char *v143;
  id v144;
  objc_class *v145;
  char *v146;
  uint64_t v147;
  void *v148;
  id v149;
  id v150;
  void *v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  _BOOL4 v155;
  uint64_t v156;
  uint64_t v157;
  uint8_t *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  __n128 v163;
  void (*v164)(uint64_t, uint64_t, __n128);
  unint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, unint64_t, uint64_t);
  uint64_t v171;
  NSObject *v172;
  os_log_type_t v173;
  uint8_t *v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  os_log_type_t v178;
  uint8_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t (*v188)(uint64_t, uint64_t, uint64_t, __n128);
  objc_class *MyHandle;
  char *v190;
  id v191;
  objc_class *MyLocation;
  char *v193;
  id v194;
  void (*v195)(uint64_t, uint64_t);
  objc_class *MyLocationHandle;
  char *v197;
  uint64_t v198;
  void *v199;
  id v200;
  id v201;
  id v202;
  void *v203;
  void *v204;
  unint64_t v205;
  _BYTE *v206;
  NSObject *v207;
  os_log_type_t v208;
  uint64_t v209;
  _QWORD *v210;
  _BYTE *v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  id v220;
  id v221;
  id v222;
  NSObject *v223;
  os_log_type_t v224;
  uint64_t v225;
  _QWORD *v226;
  id v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __n128 v232;
  uint64_t v233;
  NSObject *v234;
  os_log_type_t v235;
  BOOL v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint8_t *v240;
  uint64_t v241;
  uint64_t v242;
  unint64_t v243;
  unint64_t v244;
  __n128 v245;
  uint64_t v246;
  void (*v247)(uint64_t, uint64_t);
  uint64_t v248;
  id v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  void *v253;
  void *v254;
  void *v255;
  id v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  void *v270;
  uint64_t v271;
  void *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  void *v277;
  NSObject *v278;
  os_log_type_t v279;
  _BOOL4 v280;
  void (*v281)(uint64_t, uint64_t);
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t v289;
  unint64_t v290;
  uint64_t v291;
  double v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t Strong;
  void *v296;
  uint64_t v297;
  uint64_t v298;
  Class v299;
  void *v300;
  uint64_t v301;
  void (*v302)(uint64_t, uint64_t);
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t *v306;
  uint64_t *v307;
  uint64_t *v308;
  uint64_t *v309;
  uint64_t *v310;
  uint64_t v311;
  uint64_t *v312;
  uint64_t *v313;
  uint64_t *v314;
  _QWORD *v315;
  uint64_t *v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  _QWORD *v321;
  uint64_t *v322;
  uint64_t *v323;
  uint64_t *v324;
  void **v325;
  _QWORD *v326;
  uint64_t *v327;
  os_log_t log;
  NSObject *loga;
  NSObject *logb;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t (*v337)(uint64_t, uint64_t, uint64_t, __n128);
  void *v338;
  uint64_t v339;
  void (*v340)(uint64_t, uint64_t);
  objc_class *v341;
  _BYTE *v342;
  int64_t v343;
  void *v344;
  void (*v345)(uint64_t, uint64_t);
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  uint64_t v351;
  id v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  int64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363[3];

  Current = CFAbsoluteTimeGetCurrent();
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(double *)(v0 + 1856);
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v6 = 134217984;
    *(double *)(v0 + 1464) = Current - v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1464, v0 + 1472, v6 + 4, v6 + 12);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation: did fetch locations. Time Take: %f", v6, 0xCu);
    swift_slowDealloc(v6, -1, -1);
  }

  if ((sub_10018DC6C() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 1872);
    v8 = *(void **)(v0 + 1840);
    v9 = *(_QWORD *)(v0 + 1824);
    (*(void (**)(_QWORD, _QWORD))(v0 + 1816))(*(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1704));
    swift_bridgeObjectRelease(v7);

    v10 = swift_bridgeObjectRelease(v9);
    v11 = v0 + 848;
    v12 = sub_10018C148;
    goto LABEL_112;
  }
  v315 = (_QWORD *)(v0 + 728);
  v320 = v0 + 760;
  v321 = (_QWORD *)(v0 + 696);
  v318 = v0 + 1080;
  v305 = (uint64_t *)(v0 + 1288);
  v309 = (uint64_t *)(v0 + 1344);
  v317 = (_QWORD *)(v0 + 1352);
  v308 = (uint64_t *)(v0 + 1360);
  v314 = (uint64_t *)(v0 + 1376);
  v326 = (_QWORD *)(v0 + 1368);
  v327 = (uint64_t *)(v0 + 1384);
  v13 = *(_QWORD *)(v0 + 1824);
  v14 = *(_QWORD *)(v0 + 1752);
  v336 = v13 + 64;
  v15 = -1;
  v16 = -1 << *(_BYTE *)(v13 + 32);
  if (-v16 < 64)
    v15 = ~(-1 << -(char)v16);
  v17 = v15 & *(_QWORD *)(v13 + 64);
  v307 = (uint64_t *)(v14 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery);
  v334 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_singularResults;
  v335 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context;
  v319 = v14 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict;
  v347 = *(_QWORD *)(v0 + 1752);
  v323 = (uint64_t *)(v14 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
  v322 = (uint64_t *)(v0 + 1392);
  v316 = (uint64_t *)(v0 + 1400);
  v310 = (uint64_t *)(v0 + 1408);
  v306 = (uint64_t *)(v0 + 1416);
  v312 = (uint64_t *)(v0 + 1448);
  v313 = (uint64_t *)(v0 + 1440);
  v324 = (uint64_t *)(v0 + 1456);
  v325 = (void **)(v0 + 1432);
  v18 = *(_QWORD *)(v0 + 1872);
  v346 = *(_QWORD *)(v0 + 1840);
  v19 = *(_QWORD *)(v0 + 1640);
  v349 = *(_QWORD *)(v0 + 1616);
  v355 = *(_QWORD *)(v0 + 1624);
  v356 = *(_QWORD *)(v0 + 1552);
  v343 = (unint64_t)(63 - v16) >> 6;
  swift_bridgeObjectRetain(v13);
  v20 = 0;
  v339 = v13;
  v354 = v18;
  v357 = v19;
  if (!v17)
    goto LABEL_13;
LABEL_8:
  v359 = v20;
  v361 = (v17 - 1) & v17;
  v21 = __clz(__rbit64(v17)) | (v20 << 6);
LABEL_9:
  v22 = *(_QWORD *)(v0 + 1632);
  v23 = *(char **)(v0 + 1616);
  v24 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
  v25 = v24[1];
  *(_QWORD *)v23 = *v24;
  *(_QWORD *)(v349 + 8) = v25;
  v26 = *(_QWORD *)(v13 + 56) + *(_QWORD *)(v19 + 72) * v21;
  v27 = sub_100008B04(&qword_10149E670);
  (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(&v23[*(int *)(v27 + 48)], v26, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v23, 0, 1, v27);
  swift_bridgeObjectRetain(v25);
  while (1)
  {
    v36 = *(_QWORD *)(v0 + 1624);
    sub_1000207BC(*(_QWORD *)(v0 + 1616), v36, &qword_10149E658);
    v37 = sub_100008B04(&qword_10149E670);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v36, 1, v37) == 1)
      break;
    v38 = *(uint64_t **)(v0 + 1624);
    v39 = *v38;
    v40 = *(_QWORD *)(v355 + 8);
    v41 = (*(uint64_t (**)(_QWORD, char *, _QWORD))(v19 + 32))(*(_QWORD *)(v0 + 1672), (char *)v38 + *(int *)(v37 + 48), *(_QWORD *)(v0 + 1632));
    v42 = Handle.contactIdentifier.getter(v41);
    if (v43)
    {
      v44 = v43;
      if (v346)
      {
        v45 = v42;
        v46 = *(void **)(v0 + 1832);
        v47 = *(id *)(v0 + 1840);
        v48 = String._bridgeToObjectiveC()();
        v49 = objc_msgSend(v46, "sharedManager");
        if (!v49)
          goto LABEL_122;
        v50 = v49;
        v51 = objc_msgSend(v49, "properties");

        if (v51)
        {
          v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v51, (char *)&type metadata for Any + 8);

          v53 = sub_10018D33C(v52);
          swift_bridgeObjectRelease(v52);
          if (v53)
            v54 = v53;
          else
            v54 = _swiftEmptyArrayStorage;
        }
        else
        {
          v54 = _swiftEmptyArrayStorage;
        }
        v74 = *(void **)(v0 + 1840);
        sub_100008B04(&qword_10149E598);
        isa = Array._bridgeToObjectiveC()().super.isa;
        *(_QWORD *)&v76 = swift_bridgeObjectRelease(v54).n128_u64[0];
        *(_QWORD *)(v0 + 1480) = 0;
        v77 = objc_msgSend(v74, "unifiedContactWithIdentifier:keysToFetch:error:", v48, isa, v0 + 1480, v76);

        v78 = *(void **)(v0 + 1480);
        v350 = v40;
        v348 = v39;
        if (!v77)
        {
          v87 = *(void **)(v0 + 1752);
          v88 = v78;
          swift_bridgeObjectRelease(v44);
          v89 = _convertNSErrorToError(_:)(v78);

          swift_willThrow(v90);
          v91 = v87;
          swift_errorRetain(v89);
          v92 = v91;
          v93 = swift_errorRetain(v89);
          v94 = Logger.logObject.getter(v93);
          v95 = static os_log_type_t.error.getter(v94);
          v96 = os_log_type_enabled(v94, v95);
          v97 = *(void **)(v0 + 1752);
          v353 = v89;
          if (v96)
          {
            v98 = swift_slowAlloc(22, -1);
            v99 = (uint64_t *)swift_slowAlloc(8, -1);
            v100 = swift_slowAlloc(32, -1);
            v363[0] = v100;
            *(_DWORD *)v98 = 138412546;
            swift_errorRetain(v89);
            v101 = _swift_stdlib_bridgeErrorToNSError(v89);
            *v322 = v101;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v322, v316, v98 + 4, v98 + 12);
            *v99 = v101;
            swift_errorRelease(v89);
            swift_errorRelease(v89);
            *(_WORD *)(v98 + 12) = 2080;
            v102 = *v307;
            v103 = v307[1];
            swift_bridgeObjectRetain(v103);
            *v309 = sub_1000C28FC(v102, v103, v363);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v309, v317, v98 + 14, v98 + 22);
            swift_bridgeObjectRelease(v103);

            _os_log_impl((void *)&_mh_execute_header, v94, v95, "SearchFindMyFriendOperation: encountered contact matching error: %@ for searchQuery:%s", (uint8_t *)v98, 0x16u);
            v104 = sub_100008B04((uint64_t *)&unk_101494470);
            swift_arrayDestroy(v99, 1, v104);
            swift_slowDealloc(v99, -1, -1);
            swift_arrayDestroy(v100, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v100, -1, -1);
            swift_slowDealloc(v98, -1, -1);
          }
          else
          {
            swift_errorRelease(v89);
            swift_errorRelease(v89);

          }
          v152 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v357 + 16))(*(_QWORD *)(v0 + 1648), *(_QWORD *)(v0 + 1672), *(_QWORD *)(v0 + 1632));
          v153 = Logger.logObject.getter(v152);
          v154 = static os_log_type_t.info.getter();
          v155 = os_log_type_enabled(v153, v154);
          v156 = *(_QWORD *)(v0 + 1648);
          v157 = *(_QWORD *)(v0 + 1632);
          if (v155)
          {
            v158 = (uint8_t *)swift_slowAlloc(12, -1);
            v159 = swift_slowAlloc(32, -1);
            v363[0] = v159;
            *(_DWORD *)v158 = 136315138;
            v160 = Handle.identifier.getter(v159);
            v162 = v161;
            *v316 = sub_1000C28FC(v160, v161, v363);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v316, v310, v158 + 4, v158 + 12);
            v163 = swift_bridgeObjectRelease(v162);
            v164 = *(void (**)(uint64_t, uint64_t, __n128))(v357 + 8);
            v164(v156, v157, v163);
            _os_log_impl((void *)&_mh_execute_header, v153, v154, "SearchFindMyFriendOperation: Creating a regular find my handle:%s", v158, 0xCu);
            swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v159, -1, -1);
            swift_slowDealloc(v158, -1, -1);
          }
          else
          {
            v164 = *(void (**)(uint64_t, uint64_t, __n128))(v357 + 8);
            ((void (*)(_QWORD, _QWORD))v164)(*(_QWORD *)(v0 + 1648), *(_QWORD *)(v0 + 1632));
          }

          v18 = v354;
          if (*(_QWORD *)(v354 + 16) && (v165 = sub_1000C1AF8(*(_QWORD *)(v0 + 1672)), (v166 & 1) != 0))
          {
            v345 = (void (*)(uint64_t, uint64_t))v164;
            v167 = *(_QWORD *)(v0 + 1568);
            v168 = *(_QWORD *)(v0 + 1560);
            v169 = *(_QWORD *)(v0 + 1544);
            v170 = *(void (**)(uint64_t, unint64_t, uint64_t))(v356 + 16);
            v170(v168, *(_QWORD *)(v354 + 56) + *(_QWORD *)(v356 + 72) * v165, v169);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 32))(v167, v168, v169);
            swift_bridgeObjectRetain(v350);
            v172 = Logger.logObject.getter(v171);
            v173 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v172, v173))
            {
              v174 = (uint8_t *)swift_slowAlloc(12, -1);
              v175 = swift_slowAlloc(32, -1);
              v363[0] = v175;
              *(_DWORD *)v174 = 136315138;
              swift_bridgeObjectRetain(v350);
              *v310 = sub_1000C28FC(v348, v350, v363);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v310, v306, v174 + 4, v174 + 12);
              swift_bridgeObjectRelease_n(v350, 3);
              _os_log_impl((void *)&_mh_execute_header, v172, v173, "SearchFindMyFriendOperation: Handle:%s and has location.", v174, 0xCu);
              swift_arrayDestroy(v175, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v175, -1, -1);
              swift_slowDealloc(v174, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n(v350, 2);
            }

            v263 = *(_QWORD *)(v0 + 1752);
            v264 = *(_QWORD *)(v0 + 1672);
            v265 = *(_QWORD *)(v0 + 1632);
            v266 = *(_QWORD *)(v0 + 1568);
            v267 = *(_QWORD *)(v0 + 1544);
            v268 = *(_QWORD *)(v0 + 1536);
            v170(v268, v266, v267);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v356 + 56))(v268, 0, 1, v267);
            sub_10018CC70(v264, v268, v263);
            swift_errorRelease(v353);
            sub_100010CC4(v268, &qword_10149E650);
            (*(void (**)(unint64_t, uint64_t))(v356 + 8))(v266, v267);
            v345(v264, v265);
            v13 = v339;
LABEL_98:
            v19 = v357;
          }
          else
          {
            swift_bridgeObjectRetain(v350);
            v177 = Logger.logObject.getter(v176);
            v178 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v177, v178))
            {
              v179 = (uint8_t *)swift_slowAlloc(12, -1);
              v180 = swift_slowAlloc(32, -1);
              v363[0] = v180;
              *(_DWORD *)v179 = 136315138;
              swift_bridgeObjectRetain(v350);
              *v324 = sub_1000C28FC(v348, v350, v363);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v324, v0 + 1464, v179 + 4, v179 + 12);
              swift_bridgeObjectRelease_n(v350, 3);
              _os_log_impl((void *)&_mh_execute_header, v177, v178, "SearchFindMyFriendOperation: Handle:%s and does not have location.", v179, 0xCu);
              swift_arrayDestroy(v180, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v180, -1, -1);
              swift_slowDealloc(v179, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n(v350, 2);
            }

            v19 = v357;
            v181 = *(_QWORD *)(v0 + 1752);
            v182 = *(_QWORD *)(v0 + 1672);
            v183 = *(_QWORD *)(v0 + 1632);
            v184 = *(_QWORD *)(v0 + 1536);
            (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v356 + 56))(v184, 1, 1, *(_QWORD *)(v0 + 1544));
            sub_10018CC70(v182, v184, v181);
            swift_errorRelease(v353);
            sub_100010CC4(v184, &qword_10149E650);
            ((void (*)(uint64_t, uint64_t))v164)(v182, v183);
            v13 = v339;
          }
LABEL_12:
          v20 = v359;
          v17 = v361;
          if (v361)
            goto LABEL_8;
          goto LABEL_13;
        }
        v79 = *(_QWORD *)(v347 + v335);
        v80 = objc_allocWithZone((Class)SearchAddressBookOperationMatch);
        v81 = v78;
        v352 = objc_msgSend(v80, "initWithContact:context:", v77, v79);
        swift_bridgeObjectRetain_n(v40, 2);
        swift_bridgeObjectRetain(v44);
        v83 = Logger.logObject.getter(v82);
        v84 = static os_log_type_t.info.getter();
        v344 = v77;
        if (os_log_type_enabled(v83, v84))
        {
          v85 = swift_slowAlloc(22, -1);
          v86 = swift_slowAlloc(64, -1);
          v363[0] = v86;
          *(_DWORD *)v85 = 136315394;
          swift_bridgeObjectRetain(v40);
          *v313 = sub_1000C28FC(v39, v40, v363);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v313, v312, v85 + 4, v85 + 12);
          swift_bridgeObjectRelease_n(v40, 3);
          *(_WORD *)(v85 + 12) = 2080;
          swift_bridgeObjectRetain(v44);
          *v312 = sub_1000C28FC(v45, v44, v363);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v312, v324, v85 + 14, v85 + 22);
          swift_bridgeObjectRelease_n(v44, 3);
          _os_log_impl((void *)&_mh_execute_header, v83, v84, "SearchFindMyFriendOperation: Handle:%s has a matching contact: %s", (uint8_t *)v85, 0x16u);
          swift_arrayDestroy(v86, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v86, -1, -1);
          swift_slowDealloc(v85, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n(v40, 2);
          swift_bridgeObjectRelease_n(v44, 2);
        }

        v105 = (objc_class *)type metadata accessor for MapsAutocompletePerson();
        v106 = objc_allocWithZone(v105);
        v107 = sub_1001F10E0(0, 0, 0, 0);
        v108 = *(_BYTE *)(v347 + v334);
        v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_placeSummaryShowsStackedIconsAndLabels] = v108 ^ 1;
        if ((v108 & 1) == 0)
        {
          v109 = objc_msgSend(v352, "autocompleteMatchInfo");
          v110 = *(void **)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo];
          *(_QWORD *)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = v109;

        }
        if (*(_BYTE *)(v347 + v334) == 1
          && (v111 = objc_msgSend(v77, "mutableCopy"),
              _bridgeAnyObjectToAny(_:)(v315),
              swift_unknownObjectRelease(v111),
              v112 = sub_10000E4BC(0, &qword_10149E678, CNMutableContact_ptr),
              (swift_dynamicCast(v325, v315, (char *)&type metadata for Any + 8, v112, 6) & 1) != 0))
        {
          v113 = *v325;
          sub_100008B04((uint64_t *)&unk_1014A0C80);
          v114 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v113, "setPostalAddresses:", v114);

          v115 = *(void **)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
          *(_QWORD *)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = v113;
        }
        else
        {
          v115 = *(void **)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
          *(_QWORD *)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = v77;
          v116 = v77;
        }

        v341 = v105;
        if (*(_QWORD *)(v354 + 16) && (v117 = sub_1000C1AF8(*(_QWORD *)(v0 + 1672)), (v118 & 1) != 0))
        {
          v119 = *(_QWORD *)(v0 + 1608);
          v120 = *(_QWORD *)(v0 + 1600);
          v121 = *(_QWORD *)(v0 + 1544);
          log = *(os_log_t *)(v356 + 16);
          ((void (*)(uint64_t, unint64_t, uint64_t))log)(v120, *(_QWORD *)(v354 + 56) + *(_QWORD *)(v356 + 72) * v117, v121);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 32))(v119, v120, v121);
          v122 = swift_bridgeObjectRetain_n(v40, 2);
          v123 = Logger.logObject.getter(v122);
          v124 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v123, v124))
          {
            v125 = (uint8_t *)swift_slowAlloc(12, -1);
            v126 = swift_slowAlloc(32, -1);
            v363[0] = v126;
            *(_DWORD *)v125 = 136315138;
            swift_bridgeObjectRetain(v40);
            *v306 = sub_1000C28FC(v348, v40, v363);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v306, v0 + 1424, v125 + 4, v125 + 12);
            swift_bridgeObjectRelease_n(v40, 3);
            _os_log_impl((void *)&_mh_execute_header, v123, v124, "SearchFindMyFriendOperation: Handle:%s has a location", v125, 0xCu);
            swift_arrayDestroy(v126, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v126, -1, -1);
            swift_slowDealloc(v125, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v40, 2);
          }

          v185 = *(_QWORD *)(v0 + 1664);
          v186 = *(_QWORD *)(v0 + 1632);
          v331 = *(_QWORD *)(v0 + 1608);
          v187 = *(_QWORD *)(v0 + 1592);
          v311 = *(_QWORD *)(v0 + 1544);
          v188 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v357 + 16);
          ((void (*)(uint64_t, _QWORD, uint64_t))v188)(v185, *(_QWORD *)(v0 + 1672), v186);
          MyHandle = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
          v190 = (char *)objc_allocWithZone(MyHandle);
          UUID.init()(v190);
          v337 = v188;
          ((void (*)(char *, uint64_t, uint64_t))v188)(&v190[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v185, v186);

          *(_QWORD *)(v0 + 1208) = v190;
          *(_QWORD *)(v0 + 1216) = MyHandle;
          v191 = objc_msgSendSuper2((objc_super *)(v0 + 1208), "init");
          v340 = *(void (**)(uint64_t, uint64_t))(v357 + 8);
          v340(v185, v186);
          ((void (*)(uint64_t, uint64_t, uint64_t))log)(v187, v331, v311);
          MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
          v193 = (char *)objc_allocWithZone(MyLocation);
          UUID.init()(v193);
          ((void (*)(char *, uint64_t, uint64_t))log)(&v193[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], v187, v311);

          *(_QWORD *)(v0 + 1272) = v193;
          *(_QWORD *)(v0 + 1280) = MyLocation;
          v194 = objc_msgSendSuper2((objc_super *)(v0 + 1272), "init");
          v195 = *(void (**)(uint64_t, uint64_t))(v356 + 8);
          v195(v187, v311);
          MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
          v197 = (char *)objc_allocWithZone(MyLocationHandle);
          v198 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
          *(_QWORD *)&v197[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
          *(_QWORD *)&v197[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v191;
          v199 = *(void **)&v197[v198];
          *(_QWORD *)&v197[v198] = v194;
          v200 = v191;
          v201 = v194;

          *(_QWORD *)(v0 + 1224) = v197;
          *(_QWORD *)(v0 + 1232) = MyLocationHandle;
          v202 = objc_msgSendSuper2((objc_super *)(v0 + 1224), "init");

          v203 = *(void **)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
          *(_QWORD *)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v202;

          v195(v331, v311);
        }
        else
        {
          v127 = swift_bridgeObjectRetain_n(v40, 2);
          v128 = Logger.logObject.getter(v127);
          v129 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v128, v129))
          {
            v130 = (uint8_t *)swift_slowAlloc(12, -1);
            v131 = v40;
            v132 = swift_slowAlloc(32, -1);
            v363[0] = v132;
            *(_DWORD *)v130 = 136315138;
            swift_bridgeObjectRetain(v131);
            *v327 = sub_1000C28FC(v348, v131, v363);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v327, v322, v130 + 4, v130 + 12);
            swift_bridgeObjectRelease_n(v131, 3);
            _os_log_impl((void *)&_mh_execute_header, v128, v129, "SearchFindMyFriendOperation: Handle:%s does not have a location", v130, 0xCu);
            swift_arrayDestroy(v132, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v132, -1, -1);
            swift_slowDealloc(v130, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v40, 2);
          }

          v139 = *(_QWORD *)(v0 + 1664);
          v140 = *(_QWORD *)(v0 + 1632);
          v141 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v357 + 16);
          ((void (*)(uint64_t, _QWORD, uint64_t))v141)(v139, *(_QWORD *)(v0 + 1672), v140);
          v142 = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
          v143 = (char *)objc_allocWithZone(v142);
          UUID.init()(v143);
          v337 = v141;
          ((void (*)(char *, uint64_t, uint64_t))v141)(&v143[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v139, v140);

          *(_QWORD *)(v0 + 1240) = v143;
          *(_QWORD *)(v0 + 1248) = v142;
          v144 = objc_msgSendSuper2((objc_super *)(v0 + 1240), "init");
          v340 = *(void (**)(uint64_t, uint64_t))(v357 + 8);
          v340(v139, v140);
          v145 = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
          v146 = (char *)objc_allocWithZone(v145);
          v147 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
          *(_QWORD *)&v146[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
          *(_QWORD *)&v146[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v144;
          v148 = *(void **)&v146[v147];
          *(_QWORD *)&v146[v147] = 0;
          v149 = v144;

          *(_QWORD *)(v0 + 1256) = v146;
          *(_QWORD *)(v0 + 1264) = v145;
          v150 = objc_msgSendSuper2((objc_super *)(v0 + 1256), "init");

          v151 = *(void **)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
          *(_QWORD *)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v150;

        }
        v204 = *(void **)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo];
        *(_QWORD *)&v107[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo] = 0;

        v205 = v350;
        swift_bridgeObjectRetain_n(v350, 2);
        v206 = v107;
        v207 = Logger.logObject.getter(v206);
        v208 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v207, v208))
        {
          v209 = swift_slowAlloc(22, -1);
          loga = v207;
          v210 = (_QWORD *)swift_slowAlloc(8, -1);
          v332 = swift_slowAlloc(32, -1);
          v363[0] = v332;
          *(_DWORD *)v209 = 138412546;
          *v326 = v206;
          v211 = v206;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v326, v314, v209 + 4, v209 + 12);
          *v210 = v206;

          *(_WORD *)(v209 + 12) = 2080;
          swift_bridgeObjectRetain(v350);
          *v314 = sub_1000C28FC(v348, v350, v363);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v314, v327, v209 + 14, v209 + 22);
          swift_bridgeObjectRelease_n(v350, 3);
          _os_log_impl((void *)&_mh_execute_header, loga, v208, "SearchFindMyFriendOperation: Successfully built a person:\n%@ for key:%s", (uint8_t *)v209, 0x16u);
          v212 = sub_100008B04((uint64_t *)&unk_101494470);
          swift_arrayDestroy(v210, 1, v212);
          swift_slowDealloc(v210, -1, -1);
          swift_arrayDestroy(v332, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v332, -1, -1);
          swift_slowDealloc(v209, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v350, 2);
        }
        *(_QWORD *)(v0 + 720) = v341;
        *(_QWORD *)(v0 + 696) = v206;
        v342 = v206;
        v213 = objc_msgSend(v352, "autocompleteMatchInfo");
        v214 = *(_QWORD *)(v0 + 720);
        if (v214)
        {
          v215 = sub_10000BE88(v321, *(_QWORD *)(v0 + 720));
          v216 = *(_QWORD *)(v214 - 8);
          v217 = swift_task_alloc((*(_QWORD *)(v216 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(uint64_t, _QWORD *, uint64_t))(v216 + 16))(v217, v215, v214);
          v218 = _bridgeAnythingToObjectiveC<A>(_:)(v217, v214);
          (*(void (**)(uint64_t, uint64_t))(v216 + 8))(v217, v214);
          v219 = v217;
          v205 = v350;
          swift_task_dealloc(v219);
          sub_10000BEAC(v321);
        }
        else
        {
          v218 = 0;
        }
        v220 = objc_msgSend(objc_allocWithZone((Class)AutocompleteItem), "initWithLocalCompletion:sourceType:sourceSubtype:matchInfo:", v218, 10, 0, v213);

        swift_unknownObjectRelease(v218);
        if (!v220)
        {
          v229 = *(_QWORD *)(v0 + 1672);
          v230 = *(_QWORD *)(v0 + 1656);
          v231 = *(_QWORD *)(v0 + 1632);
          v232 = swift_bridgeObjectRelease(v205);
          v233 = v337(v230, v229, v231, v232);
          v234 = Logger.logObject.getter(v233);
          v235 = static os_log_type_t.error.getter(v234);
          v236 = os_log_type_enabled(v234, v235);
          v237 = *(_QWORD *)(v0 + 1672);
          v238 = *(_QWORD *)(v0 + 1656);
          v239 = *(_QWORD *)(v0 + 1632);
          if (v236)
          {
            v240 = (uint8_t *)swift_slowAlloc(12, -1);
            v241 = swift_slowAlloc(32, -1);
            v363[0] = v241;
            *(_DWORD *)v240 = 136315138;
            v242 = Handle.identifier.getter(v241);
            v351 = v237;
            v244 = v243;
            *v305 = sub_1000C28FC(v242, v243, v363);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v305, v0 + 1296, v240 + 4, v240 + 12);
            v245 = swift_bridgeObjectRelease(v244);
            v246 = v238;
            v247 = v340;
            ((void (*)(uint64_t, uint64_t, __n128))v340)(v246, v239, v245);
            _os_log_impl((void *)&_mh_execute_header, v234, v235, "SearchFindMyFriendOperation: Unable to create AC item for handle:%s", v240, 0xCu);
            swift_arrayDestroy(v241, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v241, -1, -1);
            swift_slowDealloc(v240, -1, -1);

            v248 = v351;
          }
          else
          {

            v262 = v238;
            v247 = v340;
            v340(v262, v239);

            v248 = v237;
          }
          v247(v248, v239);
          v13 = v339;
          v18 = v354;
          goto LABEL_98;
        }
        v221 = v220;
        swift_bridgeObjectRetain(v205);
        v222 = v221;
        v223 = Logger.logObject.getter(v222);
        v224 = static os_log_type_t.info.getter();
        v338 = v222;
        if (os_log_type_enabled(v223, v224))
        {
          v225 = swift_slowAlloc(22, -1);
          logb = v223;
          v226 = (_QWORD *)swift_slowAlloc(8, -1);
          v333 = swift_slowAlloc(32, -1);
          v363[0] = v333;
          *(_DWORD *)v225 = 138412546;
          *v317 = v222;
          v227 = v222;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v317, v308, v225 + 4, v225 + 12);
          *v226 = v220;

          *(_WORD *)(v225 + 12) = 2080;
          swift_bridgeObjectRetain(v205);
          *v308 = sub_1000C28FC(v348, v205, v363);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v308, v326, v225 + 14, v225 + 22);
          swift_bridgeObjectRelease_n(v205, 3);
          _os_log_impl((void *)&_mh_execute_header, logb, v224, "SearchFindMyFriendOperation: \nAC item:%@ \nkey:%s", (uint8_t *)v225, 0x16u);
          v228 = sub_100008B04((uint64_t *)&unk_101494470);
          swift_arrayDestroy(v226, 1, v228);
          swift_slowDealloc(v226, -1, -1);
          swift_arrayDestroy(v333, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v333, -1, -1);
          swift_slowDealloc(v225, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v205, 2);
        }
        v13 = v339;
        v249 = objc_msgSend(v344, "identifier");
        v250 = static String._unconditionallyBridgeFromObjectiveC(_:)(v249);
        v252 = v251;

        swift_beginAccess(v319, v320, 33, 0);
        v253 = (void *)sub_100191FA0(v250, v252);
        v255 = v254;
        swift_endAccess(v320);
        swift_bridgeObjectRelease(v252);
        sub_10019278C(v253, v255);
        swift_beginAccess(v323, v318, 33, 0);
        v256 = v338;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v256);
        v258 = *(_QWORD *)((*v323 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v257 = *(_QWORD *)((*v323 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v258 >= v257 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v257 > 1, v258 + 1, 1);
        v259 = *(_QWORD *)(v0 + 1672);
        v260 = *(_QWORD *)(v0 + 1632);
        v261 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v258, v256);
        specialized Array._endMutation()(v261);
        swift_endAccess(v318);

        v340(v259, v260);
        v19 = v357;
        goto LABEL_92;
      }
      swift_bridgeObjectRelease(v43);
    }
    if (!*(_QWORD *)(v18 + 16) || (v55 = sub_1000C1AF8(*(_QWORD *)(v0 + 1672)), (v56 & 1) == 0))
    {
      swift_bridgeObjectRetain(v40);
      v69 = Logger.logObject.getter(v68);
      v70 = static os_log_type_t.info.getter();
      v19 = v357;
      if (os_log_type_enabled(v69, v70))
      {
        v71 = v39;
        v72 = swift_slowAlloc(12, -1);
        v73 = swift_slowAlloc(32, -1);
        v363[0] = v73;
        *(_DWORD *)v72 = 136315138;
        swift_bridgeObjectRetain(v40);
        *(_QWORD *)(v72 + 4) = sub_1000C28FC(v71, v40, v363);
        swift_bridgeObjectRelease_n(v40, 3);
        _os_log_impl((void *)&_mh_execute_header, v69, v70, "SearchFindMyFriendOperation: No matching contact Handle:%s and does not have location.", (uint8_t *)v72, 0xCu);
        swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v73, -1, -1);
        swift_slowDealloc(v72, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v40, 2);
      }

      v28 = *(_QWORD *)(v0 + 1752);
      v29 = *(_QWORD *)(v0 + 1672);
      v30 = *(_QWORD *)(v0 + 1632);
      v31 = *(_QWORD *)(v0 + 1536);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v356 + 56))(v31, 1, 1, *(_QWORD *)(v0 + 1544));
      sub_10018CC70(v29, v31, v28);
      sub_100010CC4(v31, &qword_10149E650);
      (*(void (**)(uint64_t, uint64_t))(v357 + 8))(v29, v30);
      goto LABEL_12;
    }
    v57 = v18;
    v58 = v39;
    v59 = *(_QWORD *)(v0 + 1584);
    v60 = *(_QWORD *)(v0 + 1576);
    v61 = *(_QWORD *)(v0 + 1544);
    v62 = *(void (**)(uint64_t, unint64_t, uint64_t))(v356 + 16);
    v62(v60, *(_QWORD *)(v57 + 56) + *(_QWORD *)(v356 + 72) * v55, v61);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 32))(v59, v60, v61);
    swift_bridgeObjectRetain(v40);
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc(12, -1);
      v67 = swift_slowAlloc(32, -1);
      v363[0] = v67;
      *(_DWORD *)v66 = 136315138;
      swift_bridgeObjectRetain(v40);
      *(_QWORD *)(v66 + 4) = sub_1000C28FC(v58, v40, v363);
      swift_bridgeObjectRelease_n(v40, 3);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "SearchFindMyFriendOperation: No matching contact Handle:%s but has location.", (uint8_t *)v66, 0xCu);
      swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v66, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v40, 2);
    }

    v133 = *(_QWORD *)(v0 + 1752);
    v134 = *(_QWORD *)(v0 + 1672);
    v135 = *(_QWORD *)(v0 + 1632);
    v136 = *(_QWORD *)(v0 + 1584);
    v137 = *(_QWORD *)(v0 + 1544);
    v138 = *(_QWORD *)(v0 + 1536);
    v62(v138, v136, v137);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v356 + 56))(v138, 0, 1, v137);
    sub_10018CC70(v134, v138, v133);
    sub_100010CC4(v138, &qword_10149E650);
    (*(void (**)(unint64_t, uint64_t))(v356 + 8))(v136, v137);
    v19 = v357;
    (*(void (**)(uint64_t, uint64_t))(v357 + 8))(v134, v135);
LABEL_92:
    v20 = v359;
    v17 = v361;
    v18 = v354;
    if (v361)
      goto LABEL_8;
LABEL_13:
    v32 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
    }
    if (v32 >= v343)
    {
LABEL_23:
      v359 = v20;
      goto LABEL_24;
    }
    v33 = *(_QWORD *)(v336 + 8 * v32);
    if (v33)
      goto LABEL_16;
    v20 += 2;
    if (v32 + 1 < v343)
    {
      v33 = *(_QWORD *)(v336 + 8 * v20);
      if (v33)
        goto LABEL_19;
      if (v32 + 2 >= v343)
        goto LABEL_23;
      v33 = *(_QWORD *)(v336 + 8 * (v32 + 2));
      if (v33)
      {
        v32 += 2;
        goto LABEL_16;
      }
      v20 = v32 + 3;
      if (v32 + 3 >= v343)
      {
        v359 = v32 + 2;
        goto LABEL_24;
      }
      v33 = *(_QWORD *)(v336 + 8 * v20);
      if (v33)
      {
LABEL_19:
        v32 = v20;
LABEL_16:
        v359 = v32;
        v361 = (v33 - 1) & v33;
        v21 = __clz(__rbit64(v33)) + (v32 << 6);
        goto LABEL_9;
      }
      while (1)
      {
        v32 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_121;
        if (v32 >= v343)
          break;
        v33 = *(_QWORD *)(v336 + 8 * v32);
        ++v20;
        if (v33)
          goto LABEL_16;
      }
      v32 = v343 - 1;
    }
    v359 = v32;
LABEL_24:
    v34 = *(_QWORD *)(v0 + 1616);
    v35 = sub_100008B04(&qword_10149E670);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
    v361 = 0;
  }
  v269 = *(_QWORD *)(v0 + 1872);
  swift_release();
  swift_bridgeObjectRelease(v269);
  if ((sub_10018DC6C() & 1) != 0)
  {
    v270 = *(void **)(v0 + 1840);
    v271 = *(_QWORD *)(v0 + 1824);
    (*(void (**)(_QWORD, _QWORD))(v0 + 1816))(*(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1704));

    v10 = swift_bridgeObjectRelease(v271);
    v11 = v0 + 1168;
    v12 = sub_10018C1A8;
    goto LABEL_112;
  }
  objc_msgSend(*(id *)(v0 + 1752), "createAutocompletePersonContacts");
  if ((sub_10018DC6C() & 1) != 0)
  {
    v272 = *(void **)(v0 + 1840);
    v273 = *(_QWORD *)(v0 + 1824);
    (*(void (**)(_QWORD, _QWORD))(v0 + 1816))(*(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1704));

    v10 = swift_bridgeObjectRelease(v273);
    v11 = v0 + 1040;
    v12 = sub_10018C148;
LABEL_112:
    v274 = v0 + 16;
    v275 = v0 + 1892;
  }
  else
  {
    v277 = *(void **)(v0 + 1752);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 1808))(*(_QWORD *)(v0 + 1720), *(_QWORD *)(v0 + 1744), *(_QWORD *)(v0 + 1704));
    v278 = Logger.logObject.getter(v277);
    v279 = static os_log_type_t.info.getter();
    v280 = os_log_type_enabled(v278, v279);
    v281 = *(void (**)(uint64_t, uint64_t))(v0 + 1816);
    v282 = *(void **)(v0 + 1752);
    if (v280)
    {
      v283 = *(_QWORD *)(v0 + 1728);
      v358 = *(_QWORD *)(v0 + 1720);
      v360 = *(_QWORD *)(v0 + 1704);
      v284 = swift_slowAlloc(22, -1);
      v362 = swift_slowAlloc(32, -1);
      v363[0] = v362;
      *(_DWORD *)v284 = 136315394;
      swift_beginAccess(v323, v0 + 888, 0, 0);
      v285 = *v323;
      v286 = sub_10000E4BC(0, &qword_10149E618, off_101195E20);
      swift_bridgeObjectRetain(v285);
      v288 = Array.description.getter(v287, v286);
      v290 = v289;
      swift_bridgeObjectRelease(v285);
      *(_QWORD *)(v0 + 1496) = sub_1000C28FC(v288, v290, v363);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1496, v0 + 1504, v284 + 4, v284 + 12);
      swift_bridgeObjectRelease(v290);

      *(_WORD *)(v284 + 12) = 2048;
      Date.init()(v291);
      v292 = Date.timeIntervalSince(_:)(v358);
      v281(v283, v360);
      *(double *)(v0 + 1336) = v292;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1336, v309, v284 + 14, v284 + 22);
      v281(v358, v360);
      _os_log_impl((void *)&_mh_execute_header, v278, v279, "SearchFindMyFriendOperation: calling delegate method with items: %s \n Time taken: %f", (uint8_t *)v284, 0x16u);
      swift_arrayDestroy(v362, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v362, -1, -1);
      swift_slowDealloc(v284, -1, -1);
    }
    else
    {
      v293 = *(_QWORD *)(v0 + 1720);
      v294 = *(_QWORD *)(v0 + 1704);

      v281(v293, v294);
    }

    Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 1752) + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate);
    if (Strong)
    {
      v296 = (void *)Strong;
      swift_beginAccess(v323, v0 + 1144, 0, 0);
      v297 = *(_QWORD *)(v0 + 1752);
      v298 = *v323;
      sub_10000E4BC(0, &qword_10149E618, off_101195E20);
      swift_bridgeObjectRetain(v298);
      v299 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v296, "searchFindMyFriendOperation:didMatchResults:", v297, v299, swift_bridgeObjectRelease(v298).n128_f64[0]);
      swift_unknownObjectRelease(v296);

    }
    v300 = *(void **)(v0 + 1840);
    v301 = *(_QWORD *)(v0 + 1824);
    v302 = *(void (**)(uint64_t, uint64_t))(v0 + 1816);
    v303 = *(_QWORD *)(v0 + 1744);
    v304 = *(_QWORD *)(v0 + 1704);
    objc_msgSend(*(id *)(v0 + 1752), "markOperationAsComplete");

    v302(v303, v304);
    v10 = swift_bridgeObjectRelease(v301);
    v12 = sub_10018C148;
    v274 = v0 + 16;
    v275 = v0 + 1892;
    v11 = v0 + 1296;
  }
  return swift_asyncLet_finish(v274, v275, v12, v11, v10);
}

uint64_t sub_10018C148()
{
  return swift_task_switch(sub_100192980, 0, 0);
}

uint64_t sub_10018C1A8()
{
  return swift_task_switch(sub_10018C208, 0, 0);
}

uint64_t sub_10018C208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 1760);

  swift_release_n(v1, 2);
  v2 = *(_QWORD *)(v0 + 1736);
  v3 = *(_QWORD *)(v0 + 1728);
  v4 = *(_QWORD *)(v0 + 1720);
  v5 = *(_QWORD *)(v0 + 1696);
  v6 = *(_QWORD *)(v0 + 1688);
  v7 = *(_QWORD *)(v0 + 1680);
  v8 = *(_QWORD *)(v0 + 1672);
  v9 = *(_QWORD *)(v0 + 1664);
  v10 = *(_QWORD *)(v0 + 1656);
  v12 = *(_QWORD *)(v0 + 1648);
  v13 = *(_QWORD *)(v0 + 1624);
  v14 = *(_QWORD *)(v0 + 1616);
  v15 = *(_QWORD *)(v0 + 1608);
  v16 = *(_QWORD *)(v0 + 1600);
  v17 = *(_QWORD *)(v0 + 1592);
  v18 = *(_QWORD *)(v0 + 1584);
  v19 = *(_QWORD *)(v0 + 1576);
  v20 = *(_QWORD *)(v0 + 1568);
  v21 = *(_QWORD *)(v0 + 1560);
  v22 = *(_QWORD *)(v0 + 1536);
  swift_task_dealloc(*(_QWORD *)(v0 + 1744));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018C3A8()
{
  _QWORD *v0;
  __n128 v1;

  (*(void (**)(_QWORD, _QWORD))(v0[214] + 8))(v0[218], v0[213]);
  swift_release();
  return swift_asyncLet_finish(v0 + 2, (char *)v0 + 1892, sub_10018C42C, v0 + 114, v1);
}

uint64_t sub_10018C42C()
{
  return swift_task_switch(sub_10018C48C, 0, 0);
}

uint64_t sub_10018C48C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 1760);
  v2 = *(_QWORD *)(v0 + 1744);
  v3 = *(_QWORD *)(v0 + 1736);
  v4 = *(_QWORD *)(v0 + 1728);
  v5 = *(_QWORD *)(v0 + 1720);
  v6 = *(_QWORD *)(v0 + 1696);
  v7 = *(_QWORD *)(v0 + 1688);
  v8 = *(_QWORD *)(v0 + 1680);
  v9 = *(_QWORD *)(v0 + 1672);
  v11 = *(_QWORD *)(v0 + 1664);
  v12 = *(_QWORD *)(v0 + 1656);
  v13 = *(_QWORD *)(v0 + 1648);
  v14 = *(_QWORD *)(v0 + 1624);
  v15 = *(_QWORD *)(v0 + 1616);
  v16 = *(_QWORD *)(v0 + 1608);
  v17 = *(_QWORD *)(v0 + 1600);
  v18 = *(_QWORD *)(v0 + 1592);
  v19 = *(_QWORD *)(v0 + 1584);
  v20 = *(_QWORD *)(v0 + 1576);
  v21 = *(_QWORD *)(v0 + 1568);
  v22 = *(_QWORD *)(v0 + 1560);
  v23 = *(_QWORD *)(v0 + 1536);

  swift_release_n(v1, 2);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018C63C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *(_QWORD *)(v0 + 1824);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1816);
  v3 = *(_QWORD *)(v0 + 1744);
  v4 = *(_QWORD *)(v0 + 1704);

  v2(v3, v4);
  v5 = swift_bridgeObjectRelease(v1);
  return swift_asyncLet_finish(v0 + 16, v0 + 1892, sub_10018C6DC, v0 + 1104, v5);
}

uint64_t sub_10018C6DC()
{
  return swift_task_switch(sub_10018C73C, 0, 0);
}

uint64_t sub_10018C73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 1760);
  v2 = *(_QWORD *)(v0 + 1744);
  v3 = *(_QWORD *)(v0 + 1736);
  v4 = *(_QWORD *)(v0 + 1728);
  v5 = *(_QWORD *)(v0 + 1720);
  v6 = *(_QWORD *)(v0 + 1696);
  v7 = *(_QWORD *)(v0 + 1688);
  v8 = *(_QWORD *)(v0 + 1680);
  v9 = *(_QWORD *)(v0 + 1672);
  v11 = *(_QWORD *)(v0 + 1664);
  v12 = *(_QWORD *)(v0 + 1656);
  v13 = *(_QWORD *)(v0 + 1648);
  v14 = *(_QWORD *)(v0 + 1624);
  v15 = *(_QWORD *)(v0 + 1616);
  v16 = *(_QWORD *)(v0 + 1608);
  v17 = *(_QWORD *)(v0 + 1600);
  v18 = *(_QWORD *)(v0 + 1592);
  v19 = *(_QWORD *)(v0 + 1584);
  v20 = *(_QWORD *)(v0 + 1576);
  v21 = *(_QWORD *)(v0 + 1568);
  v22 = *(_QWORD *)(v0 + 1560);
  v23 = *(_QWORD *)(v0 + 1536);

  swift_release_n(v1, 2);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018C8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch(sub_10018C904, 0, 0);
}

uint64_t sub_10018C904()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v0[7] = v0 + 17;
  v0[2] = v0;
  v0[3] = sub_10018C998;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100188570;
  v4[3] = &unk_1011A7A70;
  v4[4] = v3;
  objc_msgSend(v2, "contactsMatchingSearchQueryWithCompletionHandler:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_10018C998()
{
  return swift_task_switch(sub_10018C9E4, 0, 0);
}

uint64_t sub_10018C9E4()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 120) = *(_BYTE *)(v0 + 136);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10018C9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  char *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id result;
  void *v26;
  id v27;
  NSString v28;
  id v29;
  uint64_t v30;
  NSString v31;
  id v32;
  double v33;
  double v34;
  _QWORD v36[4];
  char v37[24];

  v3 = type metadata accessor for Handle(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v36[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36[-1] - v8;
  a2 += 16;
  swift_beginAccess(a2, v37, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
  {
    v20 = 0;
    return (id)(v20 & 1);
  }
  v11 = (char *)Strong;
  v12 = Friend.handle.getter(Strong);
  v13 = Handle.identifier.getter(v12);
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v9, v3);
  v36[2] = v13;
  v36[3] = v15;
  v17 = &v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
  v18 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
  v36[0] = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
  v36[1] = v18;
  v19 = sub_10006C008();
  v20 = StringProtocol.localizedCaseInsensitiveContains<A>(_:)(v36, &type metadata for String, &type metadata for String, v19, v19);
  swift_bridgeObjectRelease(v15);
  v22 = Friend.handle.getter(v21);
  Handle.prettyName.getter(v22);
  v24 = v23;
  v16(v6, v3);
  if (!v24)
  {
LABEL_9:

    return (id)(v20 & 1);
  }
  result = objc_msgSend(objc_allocWithZone((Class)AutocompleteMatchInfo), "initWithType:", 1);
  if (result)
  {
    v26 = result;
    v27 = objc_allocWithZone((Class)AutocompleteStringMatcher);
    v28 = String._bridgeToObjectiveC()();
    v29 = objc_msgSend(v27, "initWithString:requiredMatchLength:matchInfo:", v28, 1, v26, swift_bridgeObjectRelease(v24).n128_f64[0]);

    v30 = *((_QWORD *)v17 + 1);
    swift_bridgeObjectRetain(v30);
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend(v29, "matchForAutocompleteSearchString:", v31, swift_bridgeObjectRelease(v30).n128_f64[0]);

    if (v32)
    {
      objc_msgSend(v32, "fractionOfMatch");
      v34 = v33;

      if (v34 > 0.0)
        v20 = 1;
      return (id)(v20 & 1);
    }

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_10018CC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  int v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  objc_class *MyHandle;
  char *v25;
  id v26;
  objc_class *MyLocationHandle;
  char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  void *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  objc_class *v37;
  char *v38;
  id v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  objc_class *MyLocation;
  char *v43;
  id v44;
  void (*v45)(char *, uint64_t);
  objc_class *v46;
  char *v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  char *v56;
  void *v57;
  _QWORD *v58;
  id v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  __n128 v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t, uint64_t);
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  objc_super v83;
  objc_super v84;
  objc_super v85;
  uint64_t v86[3];
  uint64_t v87;
  objc_super v88;
  objc_super v89;

  v79 = a3;
  v82 = a1;
  v4 = type metadata accessor for Handle(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v81 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v74 - v8;
  v10 = sub_100008B04(&qword_10149E650);
  __chkstk_darwin(v10);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Location(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v74 - v18;
  v20 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
  v80 = (char *)sub_1001F10E0(0, 0, 0, 0);
  sub_1000B365C(a2, (uint64_t)v12);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v78 = v4;
  if (v21 == 1)
  {
    sub_100010CC4((uint64_t)v12, &qword_10149E650);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v23 = v82;
    v22(v9, v82, v4);
    MyHandle = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
    v25 = (char *)objc_allocWithZone(MyHandle);
    UUID.init()(v25);
    v22(&v25[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], (uint64_t)v9, v4);

    v89.receiver = v25;
    v89.super_class = MyHandle;
    v26 = objc_msgSendSuper2(&v89, "init");
    v77 = *(void (**)(char *, uint64_t))(v5 + 8);
    v77(v9, v4);
    MyLocationHandle = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    v28 = (char *)objc_allocWithZone(MyLocationHandle);
    v29 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(_QWORD *)&v28[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(_QWORD *)&v28[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v26;
    v30 = *(void **)&v28[v29];
    *(_QWORD *)&v28[v29] = 0;
    v31 = v26;

    v88.receiver = v28;
    v88.super_class = MyLocationHandle;
    v32 = objc_msgSendSuper2(&v88, "init");

    v33 = v80;
    v34 = *(void **)&v80[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
    *(_QWORD *)&v80[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v32;

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v35(v9, v82, v4);
    v75 = v19;
    v36 = (void (*)(char *, char *, uint64_t))v35;
    v76 = v35;
    v37 = (objc_class *)type metadata accessor for SearchFindMyHandle(0);
    v38 = (char *)objc_allocWithZone(v37);
    UUID.init()(v38);
    v36(&v38[OBJC_IVAR____TtC4Maps18SearchFindMyHandle_handle], v9, v4);

    v85.receiver = v38;
    v85.super_class = v37;
    v39 = objc_msgSendSuper2(&v85, "init");
    v77 = *(void (**)(char *, uint64_t))(v5 + 8);
    v77(v9, v4);
    v40 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v41 = v75;
    v40(v16, v75, v13);
    MyLocation = (objc_class *)type metadata accessor for SearchFindMyLocation(0);
    v43 = (char *)objc_allocWithZone(MyLocation);
    UUID.init()(v43);
    v40(&v43[OBJC_IVAR____TtC4Maps20SearchFindMyLocation_location], v16, v13);

    v84.receiver = v43;
    v84.super_class = MyLocation;
    v44 = objc_msgSendSuper2(&v84, "init");
    v45 = *(void (**)(char *, uint64_t))(v14 + 8);
    v45(v16, v13);
    v46 = (objc_class *)type metadata accessor for MapsFindMyLocationHandle();
    v47 = (char *)objc_allocWithZone(v46);
    v48 = OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location;
    *(_QWORD *)&v47[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_location] = 0;
    *(_QWORD *)&v47[OBJC_IVAR____TtC4Maps24MapsFindMyLocationHandle_handle] = v39;
    v49 = *(void **)&v47[v48];
    *(_QWORD *)&v47[v48] = v44;
    v50 = v39;
    v51 = v44;

    v83.receiver = v47;
    v83.super_class = v46;
    v52 = objc_msgSendSuper2(&v83, "init");

    v33 = v80;
    v53 = *(void **)&v80[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle];
    *(_QWORD *)&v80[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handle] = v52;

    v22 = v76;
    v45(v41, v13);
    v23 = v82;
  }
  v54 = *(void **)&v33[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo];
  *(_QWORD *)&v33[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_handleMatchInfo] = 0;

  v55 = objc_msgSend(objc_allocWithZone((Class)AutocompleteItem), "initWithLocalCompletion:sourceType:sourceSubtype:matchInfo:", v33, 10, 0, 0);
  v56 = v81;
  if (v55)
  {
    v57 = v55;
    v58 = (_QWORD *)(v79 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
    swift_beginAccess(v79 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems, v86, 33, 0);
    v59 = v57;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
    v61 = *(_QWORD *)((*v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v60 = *(_QWORD *)((*v58 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v61 >= v60 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1);
    v62 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
    specialized Array._endMutation()(v62);
    swift_endAccess(v86);

  }
  else
  {
    if (qword_101490EB8 != -1)
      swift_once(&qword_101490EB8, sub_1001147FC);
    v63 = type metadata accessor for Logger(0);
    sub_10000E918(v63, (uint64_t)qword_1014D4B38);
    v64 = v78;
    v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v56, v23, v78);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter(v66);
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc(12, -1);
      v69 = swift_slowAlloc(32, -1);
      v86[0] = v69;
      *(_DWORD *)v68 = 136315138;
      v70 = Handle.identifier.getter(v69);
      v72 = v71;
      v87 = sub_1000C28FC(v70, v71, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88, v68 + 4, v68 + 12);
      v73 = swift_bridgeObjectRelease(v72);
      ((void (*)(char *, uint64_t, __n128))v77)(v56, v64, v73);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "SearchFindMyFriendOperation: Unable to create AC item for handle:%s", v68, 0xCu);
      swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v68, -1, -1);

    }
    else
    {

      v77(v56, v64);
    }

  }
}

_QWORD *sub_10018D33C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[32];
  _QWORD *v12;

  v12 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return v12;
  for (i = a1 + 32; ; i += 32)
  {
    sub_100011E20(i, (uint64_t)v11);
    v4 = sub_100008B04(&qword_10149E598);
    v5 = swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6);
    if (!(_DWORD)v5)
      break;
    v6 = v10;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = v12[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
    v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
    specialized ContiguousArray._endMutation()(v8);
    if (!--v2)
      return v12;
  }
  v10 = 0;
  swift_release();
  swift_unknownObjectRelease(v10);
  return 0;
}

_QWORD *sub_10018D444(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  _BYTE v11[32];
  _QWORD *v12;

  v12 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return v12;
  for (i = a1 + 32; ; i += 32)
  {
    sub_100011E20(i, (uint64_t)v11);
    v4 = sub_10000E4BC(0, &qword_101493E78, MKMapItem_ptr);
    v5 = swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6);
    if (!(_DWORD)v5)
      break;
    v6 = v10;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = v12[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
    v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
    specialized ContiguousArray._endMutation()(v8);
    if (!--v2)
      return v12;
  }
  v10 = 0;
  swift_release();

  return 0;
}

id sub_10018D590()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  char **v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t Strong;
  void *v16;
  Class isa;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v1 = type metadata accessor for Logger(0);
  sub_10000E918(v1, (uint64_t)qword_1014D4B38);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(22, -1);
    v6 = (char **)swift_slowAlloc(8, -1);
    v19 = swift_slowAlloc(32, -1);
    v20 = (uint64_t)v2;
    v21 = v19;
    *(_DWORD *)v5 = 138412546;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 4, v5 + 12);
    *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v8);
    v20 = sub_1000C28FC(v9, v8, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 14, v5 + 22);

    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation: %@ was cancelled for searchQuery:%s.", (uint8_t *)v5, 0x16u);
    v10 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v6, 1, v10);
    swift_slowDealloc(v6, -1, -1);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "SearchFindMyFriendOperation: calling delegate method with no items", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate]);
  if (Strong)
  {
    v16 = (void *)Strong;
    sub_10000E4BC(0, &qword_10149E618, off_101195E20);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "searchFindMyFriendOperation:didMatchResults:", v2, isa);

    swift_unknownObjectRelease(v16);
  }
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_findFriendsTask])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  return objc_msgSend(v2, "markOperationAsComplete", v19);
}

id sub_10018D944()
{
  void *v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *MyFriendOperation;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v1 = type metadata accessor for Logger(0);
  sub_10000E918(v1, (uint64_t)qword_1014D4B38);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(22, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    v13 = swift_slowAlloc(32, -1);
    v14 = (uint64_t)v2;
    v15 = v13;
    *(_DWORD *)v5 = 138412546;
    v7 = (char *)v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v5 + 4, v5 + 12);
    *v6 = v2;

    *(_WORD *)(v5 + 12) = 2080;
    v9 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v8 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v8);
    v14 = sub_1000C28FC(v9, v8, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v5 + 14, v5 + 22);
    swift_bridgeObjectRelease(v8);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SearchFindMyFriendOperation: deallocating operation:%@ for query:%s", (uint8_t *)v5, 0x16u);
    v10 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v6, 1, v10);
    swift_slowDealloc(v6, -1, -1);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }
  else
  {

  }
  objc_msgSend(v2, "markOperationAsComplete");
  MyFriendOperation = (objc_class *)type metadata accessor for SearchFindMyFriendOperation();
  v16.receiver = v2;
  v16.super_class = MyFriendOperation;
  return objc_msgSendSuper2(&v16, "dealloc");
}

uint64_t sub_10018DC6C()
{
  void *v0;
  uint64_t result;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char **v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  void *v11;
  Class isa;
  char *v13;
  uint64_t v14;

  if ((objc_msgSend(v0, "isFinished") & 1) != 0
    || (result = (uint64_t)objc_msgSend(v0, "isCancelled"), (_DWORD)result))
  {
    if (qword_101490EB8 != -1)
      swift_once(&qword_101490EB8, sub_1001147FC);
    v2 = type metadata accessor for Logger(0);
    sub_10000E918(v2, (uint64_t)qword_1014D4B38);
    v3 = v0;
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = (char **)swift_slowAlloc(8, -1);
      *(_DWORD *)v6 = 138412290;
      v13 = v3;
      v8 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);
      *v7 = v3;

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "SearchFindMyFriendOperation: %%@ is cancelled or finished: %@. Treating it as No-Op.", v6, 0xCu);
      v9 = sub_100008B04((uint64_t *)&unk_101494470);
      swift_arrayDestroy(v7, 1, v9);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {

    }
    Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate]);
    if (Strong)
    {
      v11 = (void *)Strong;
      sub_10000E4BC(0, &qword_10149E618, off_101195E20);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v11, "searchFindMyFriendOperation:didMatchResults:", v3, isa);

      swift_unknownObjectRelease(v11);
    }
    objc_msgSend(v3, "markOperationAsComplete");
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for SearchFindMyFriendOperation()
{
  return objc_opt_self(_TtC4Maps27SearchFindMyFriendOperation);
}

uint64_t sub_10018DF1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[54] = v0;
  v2 = type metadata accessor for Date(0);
  v1[55] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[56] = v3;
  v1[57] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10018DFA8, 0, 0);
}

id sub_10018DFA8()
{
  double *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  char *v7;
  uint64_t *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id result;
  void *v20;
  id v21;
  void *v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  double *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  NSString v37;
  id v38;
  void *v39;
  _QWORD *v40;
  void *v41;
  id v42;
  id v43;
  unsigned int v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  id v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  double *v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  NSString v61;
  id v62;
  Class v63;
  id v64;
  void *v65;
  _QWORD *v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  double Current;
  id v75;
  id v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  unint64_t v80;
  _QWORD *v81;
  double v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t KeyPath;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id *v111;
  uint64_t v112;
  char *v113;
  char **v114;
  char **v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  void *v127;
  id v128;
  void *v129;
  void *v130;
  Class v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  double *v136;
  char *v137;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v139;
  char v140;
  unint64_t v141;
  uint64_t v142;
  _BOOL8 v143;
  char v144;
  char v145;
  uint64_t v146;
  void *v147;
  uint64_t *v148;
  double **v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  id *v157;
  Class v158;
  id v159;
  uint64_t v160;
  id v161;
  id v162;
  _QWORD *v163;
  char v164;
  unint64_t v165;
  unint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  void *v172;
  double v173;
  NSObject *v174;
  os_log_type_t v175;
  unint64_t v176;
  double v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  void *v187;
  void *v188;
  _QWORD *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  _QWORD *v195;
  uint64_t v196;
  char *v197;
  id *v198;
  char *v199;
  _QWORD *v200;
  void *v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  id v207;
  double *v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  _QWORD *v213;
  uint64_t v214;
  unint64_t v215;
  void *v216;
  unint64_t v217;
  void *v218;
  uint64_t *v219;
  void *v220;
  void *v221;
  void *v222;
  uint64_t v223;
  uint64_t v224;
  id *v225;
  uint64_t v226[3];

  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v1 = (char *)(v0 + 54);
  v2 = (void *)*((_QWORD *)v0 + 54);
  v3 = type metadata accessor for Logger(0);
  *((_QWORD *)v0 + 58) = sub_10000E918(v3, (uint64_t)qword_1014D4B38);
  v4 = Logger.logObject.getter(v2);
  v5 = static os_log_type_t.info.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = (char *)*((_QWORD *)v0 + 54);
  v208 = v0;
  v225 = (id *)(v0 + 54);
  if (v6)
  {
    v8 = (uint64_t *)(v0 + 53);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v226[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v12 = *(_QWORD *)&v7[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v12);
    *v8 = sub_1000C28FC(v11, v12, v226);
    v13 = v8;
    v0 = v208;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v13, v1, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v12);

    _os_log_impl((void *)&_mh_execute_header, v4, v5, " [⌛] SearchFindMyFriendOperation: Starting to build contacts for searchQuery:%s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {

  }
  v0[59] = CFAbsoluteTimeGetCurrent();
  v14 = swift_allocObject(&unk_1011A78E8, 24, 7);
  *((_QWORD *)v0 + 60) = v14;
  *(_QWORD *)(v14 + 16) = _swiftEmptyArrayStorage;
  v15 = (uint64_t *)(v14 + 16);
  v16 = swift_allocObject(&unk_1011A7910, 24, 7);
  *((_QWORD *)v0 + 61) = v16;
  *(_QWORD *)(v16 + 16) = sub_10000A61C((uint64_t)_swiftEmptyArrayStorage);
  v17 = swift_allocObject(&unk_1011A7910, 24, 7);
  *((_QWORD *)v0 + 62) = v17;
  *(_QWORD *)(v17 + 16) = sub_10000A61C((uint64_t)_swiftEmptyArrayStorage);
  v18 = (void *)objc_opt_self(AddressBookManager);
  if (!objc_msgSend(v18, "addressBookAllowed"))
    goto LABEL_17;
  result = objc_msgSend(v18, "sharedManager");
  if (!result)
  {
    __break(1u);
    goto LABEL_97;
  }
  v20 = result;
  v21 = objc_msgSend(result, "contactStore");
  *((_QWORD *)v0 + 63) = v21;

  result = objc_msgSend(v18, "sharedManager");
  if (!result)
  {
LABEL_97:
    __break(1u);
    return result;
  }
  v22 = result;
  v194 = (char *)(v0 + 52);
  v23 = objc_msgSend(result, "properties");

  v24 = _swiftEmptyArrayStorage;
  v222 = v21;
  if (v23)
  {
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, (char *)&type metadata for Any + 8);

    v26 = sub_10018D33C(v25);
    swift_bridgeObjectRelease(v25);
    if (v26)
      v24 = v26;
  }
  v219 = (uint64_t *)(v0 + 50);
  v27 = *((_QWORD *)v0 + 54);
  v28 = objc_allocWithZone((Class)CNContactFetchRequest);
  sub_100008B04(&qword_10149E598);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v28, "initWithKeysToFetch:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);
  v31 = v0;
  v32 = v30;
  *((_QWORD *)v0 + 64) = v30;

  v33 = (void *)objc_opt_self(CNContact);
  v34 = v27 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery;
  v35 = *(_QWORD *)(v27 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery);
  *((_QWORD *)v0 + 65) = v35;
  v36 = *(_QWORD *)(v34 + 8);
  *((_QWORD *)v0 + 66) = v36;
  v211 = v35;
  v215 = v36;
  v37 = String._bridgeToObjectiveC()();
  v38 = objc_msgSend(v33, "predicateForContactsMatchingName:", v37);

  objc_msgSend(v32, "setPredicate:", v38);
  objc_msgSend(v32, "setSortOrder:", 1);
  CFAbsoluteTimeGetCurrent();
  if (v222)
  {
    v39 = (void *)*((_QWORD *)v0 + 54);
    v40 = (_QWORD *)swift_allocObject(&unk_1011A7950, 48, 7);
    v40[2] = v39;
    v40[3] = v14;
    v40[4] = v16;
    v40[5] = v17;
    *((_QWORD *)v31 + 14) = sub_100192478;
    *((_QWORD *)v31 + 15) = v40;
    *((_QWORD *)v31 + 10) = _NSConcreteStackBlock;
    *((_QWORD *)v31 + 11) = 1107296256;
    *((_QWORD *)v31 + 12) = sub_100190B28;
    *((_QWORD *)v31 + 13) = &unk_1011A7968;
    v41 = _Block_copy(v31 + 10);
    v42 = v39;
    v43 = v222;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    v31[52] = 0.0;
    v44 = objc_msgSend(v43, "enumerateContactsAndMatchInfoWithFetchRequest:error:usingBlock:", v32, v194, v41);
    _Block_release(v41);

    v45 = *((id *)v31 + 52);
    if (!v44)
    {
      v70 = v45;
      v71 = _convertNSErrorToError(_:)(v45);

      swift_willThrow(v72);
      v73 = (void *)*((_QWORD *)v31 + 54);
      Current = CFAbsoluteTimeGetCurrent();
      v75 = v73;
      swift_errorRetain(v71);
      v76 = v75;
      v77 = swift_errorRetain(v71);
      v78 = Logger.logObject.getter(v77);
      v79 = static os_log_type_t.info.getter();
      v0 = v31;
      if (os_log_type_enabled(v78, v79))
      {
        v80 = *((_QWORD *)v31 + 66);
        v81 = v31 + 48;
        v206 = v31 + 49;
        v202 = v31 + 47;
        v204 = *((_QWORD *)v31 + 65);
        v212 = (void *)*((_QWORD *)v31 + 64);
        v216 = (void *)*((_QWORD *)v31 + 63);
        v82 = v31[59];
        v209 = (void *)*((_QWORD *)v31 + 54);
        v83 = swift_slowAlloc(32, -1);
        v84 = (uint64_t *)swift_slowAlloc(8, -1);
        v85 = swift_slowAlloc(32, -1);
        v226[0] = v85;
        *(_DWORD *)v83 = 138412802;
        swift_errorRetain(v71);
        v86 = _swift_stdlib_bridgeErrorToNSError(v71);
        *((_QWORD *)v208 + 47) = v86;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v202, v81, v83 + 4, v83 + 12);
        *v84 = v86;
        swift_errorRelease(v71);
        swift_errorRelease(v71);
        *(_WORD *)(v83 + 12) = 2080;
        swift_bridgeObjectRetain(v80);
        *((_QWORD *)v208 + 48) = sub_1000C28FC(v204, v80, v226);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v81, v206, v83 + 14, v83 + 22);
        swift_bridgeObjectRelease(v80);

        *(_WORD *)(v83 + 22) = 2048;
        v208[49] = Current - v82;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v206, v219, v83 + 24, v83 + 32);
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "[⌛]SearchFindMyFriendOperation: Error encountered while fetching contacts:%@ for query:%s\n Time taken: %f", (uint8_t *)v83, 0x20u);
        v87 = sub_100008B04((uint64_t *)&unk_101494470);
        swift_arrayDestroy(v84, 1, v87);
        swift_slowDealloc(v84, -1, -1);
        swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
        v88 = v85;
        v0 = v208;
        swift_slowDealloc(v88, -1, -1);
        swift_slowDealloc(v83, -1, -1);

        swift_errorRelease(v71);
      }
      else
      {
        v89 = (void *)*((_QWORD *)v31 + 64);
        v90 = (void *)*((_QWORD *)v31 + 54);

        swift_errorRelease(v71);
        swift_errorRelease(v71);
        swift_errorRelease(v71);

      }
      goto LABEL_17;
    }
  }
  if ((sub_10018DC6C() & 1) != 0)
  {
    v46 = Logger.logObject.getter(*v225);
    v47 = static os_log_type_t.info.getter();
    v48 = os_log_type_enabled(v46, v47);
    v49 = *v225;
    if (!v48)
    {

      swift_release();
      swift_release();
      swift_release();
      v52 = 0;
      v0 = v31;
      goto LABEL_18;
    }
    v189 = v31 + 51;
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v51 = swift_slowAlloc(32, -1);
    v226[0] = v51;
    *(_DWORD *)v50 = 136315138;
    swift_bridgeObjectRetain(v215);
    *v219 = sub_1000C28FC(v211, v215, v226);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v219, v189, v50 + 4, v50 + 12);
    swift_bridgeObjectRelease(v215);

    _os_log_impl((void *)&_mh_execute_header, v46, v47, " [⌛] SearchFindMyFriendOperation: Cancelled, Not building contacts for:%s", v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);

    v0 = v208;
LABEL_17:
    swift_release();
    swift_release();
    swift_release();
    v52 = 0;
LABEL_18:
    swift_task_dealloc(*((_QWORD *)v0 + 57));
    return (id)(*((uint64_t (**)(uint64_t))v0 + 1))(v52);
  }
  v190 = v31 + 51;
  v53 = v31;
  if (!GEOConfigGetBOOL(MapsConfig_UseCoreDuetToRankContactsInAC, off_1014B2F88))
    goto LABEL_35;
  swift_beginAccess(v15, v31 + 31, 0, 0);
  v54 = *v15;
  if ((unint64_t)*v15 >> 62)
  {
    if (v54 < 0)
      v91 = *v15;
    else
      v91 = v54 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v15);
    v92 = _CocoaArrayWrapper.endIndex.getter(v91);
    swift_bridgeObjectRelease(v54);
    if (v92 >= 1)
      goto LABEL_22;
LABEL_35:
    v93 = v31 + 45;
    v94 = *((_QWORD *)v31 + 60);
    swift_beginAccess(v94 + 16, v31 + 28, 1, 0);
    v95 = *(_QWORD *)(v94 + 16);
    *((_QWORD *)v31 + 46) = v95;
    v96 = sub_100008B04(&qword_10149E5A0);
    v97 = sub_100008B04(&qword_10149E5A8);
    v98 = swift_allocObject(v96, ((*(unsigned __int8 *)(*(_QWORD *)(v97 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v97 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v97 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v97 - 8) + 80) | 7);
    *(_OWORD *)(v98 + 16) = xmmword_100E22F70;
    KeyPath = swift_getKeyPath(&unk_100E30FC8);
    swift_bridgeObjectRetain(v95);
    KeyPathComparator.init<A>(_:order:)(KeyPath, 1, &protocol witness table for Double);
    v100 = swift_getKeyPath(&unk_100E31000);
    KeyPathComparator.init<A>(_:order:)(v100, 1, &protocol witness table for Double);
    *((_QWORD *)v208 + 45) = v98;
    v101 = sub_100008B04(&qword_10149E5B0);
    v102 = sub_100008B04(&qword_10149E5B8);
    v103 = sub_100010D70(&qword_10149E5C0, &qword_10149E5B0, (const char *)&protocol conformance descriptor for [A]);
    v104 = sub_100010D70(&qword_10149E5C8, &qword_10149E5B8, (const char *)&protocol conformance descriptor for [A]);
    v105 = sub_100010D70((unint64_t *)&unk_10149E5D0, &qword_10149E5A8, (const char *)&protocol conformance descriptor for KeyPathComparator<A>);
    v106 = v93;
    v0 = v208;
    v107 = Sequence.sorted<A, B>(using:)(v106, v101, v102, v97, v103, v104, v105);
    swift_bridgeObjectRelease(v98);
    swift_bridgeObjectRelease(*((_QWORD *)v208 + 46));
    v108 = *(_QWORD *)(v94 + 16);
    *(_QWORD *)(v94 + 16) = v107;
    swift_bridgeObjectRelease(v108);
    v109 = *(_QWORD *)(v94 + 16);
    v192 = v109;
    if ((unint64_t)v109 >> 62)
      goto LABEL_87;
    v110 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v109, 2);
    v111 = v225;
    if (!v110)
    {
LABEL_91:
      v172 = (void *)*((_QWORD *)v0 + 54);
      swift_bridgeObjectRelease_n(v192, 2);
      v173 = CFAbsoluteTimeGetCurrent();
      v174 = Logger.logObject.getter(v172);
      v175 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v174, v175))
      {
        v176 = *((_QWORD *)v208 + 66);
        v214 = *((_QWORD *)v208 + 65);
        v218 = (void *)*((_QWORD *)v208 + 64);
        v221 = (void *)*((_QWORD *)v208 + 63);
        v177 = v208[59];
        v178 = (char *)*((_QWORD *)v208 + 54);
        v179 = swift_slowAlloc(32, -1);
        v180 = swift_slowAlloc(64, -1);
        v226[0] = v180;
        *(_DWORD *)v179 = 134218498;
        v208[41] = v173 - v177;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v208 + 41, v208 + 42, v179 + 4, v179 + 12);
        *(_WORD *)(v179 + 12) = 2080;
        v181 = &v178[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict];
        swift_beginAccess(&v178[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict], v0 + 25, 0, 0);
        v182 = *(_QWORD *)v181;
        swift_bridgeObjectRetain(*(_QWORD *)v181);
        v183 = sub_100008B04((uint64_t *)&unk_10149E5E0);
        v184 = Dictionary.description.getter(v182, &type metadata for String, v183, &protocol witness table for String);
        v186 = v185;
        swift_bridgeObjectRelease(v182);
        *((_QWORD *)v208 + 51) = sub_1000C28FC(v184, v186, v226);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v190, v194, v179 + 14, v179 + 22);
        swift_bridgeObjectRelease(v186);

        *(_WORD *)(v179 + 22) = 2080;
        swift_bridgeObjectRetain(v176);
        *((_QWORD *)v208 + 42) = sub_1000C28FC(v214, v176, v226);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v208 + 42, v208 + 43, v179 + 24, v179 + 32);
        v0 = v208;
        swift_bridgeObjectRelease(v176);

        _os_log_impl((void *)&_mh_execute_header, v174, v175, "[⌛(%f)]SearchFindMyFriendOperation: Finished fetching \n contacts:%s\n searchQuery:%s", (uint8_t *)v179, 0x20u);
        swift_arrayDestroy(v180, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v180, -1, -1);
        swift_slowDealloc(v179, -1, -1);

      }
      else
      {
        v187 = (void *)*((_QWORD *)v0 + 64);
        v188 = (void *)*((_QWORD *)v0 + 54);

      }
      swift_release();
      swift_release();
      swift_release();
      v52 = 1;
      goto LABEL_18;
    }
LABEL_37:
    v112 = 0;
    v113 = (char *)(v0 + 34);
    v199 = (char *)(v0 + 37);
    v200 = v0 + 21;
    v196 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context;
    v213 = (char *)*v111 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict;
    v197 = (char *)*v111;
    v195 = (char *)*v111 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray;
    v114 = &selRef_shouldShowManualRedoButton;
    v115 = &selRef_isTilted;
    v191 = v110;
    v198 = (id *)(v0 + 40);
    while (1)
    {
      v116 = v112;
      if ((v192 & 0xC000000000000001) != 0)
        v109 = specialized _ArrayBuffer._getElementSlowPath(_:)(v112, v192);
      else
        v109 = (uint64_t)*(id *)(v192 + 32 + 8 * v112);
      v220 = (void *)v109;
      v117 = __OFADD__(v116, 1);
      v118 = v116 + 1;
      if (v117)
        goto LABEL_86;
      v193 = v118;
      v119 = objc_msgSend((id)v109, "contact");
      v120 = objc_msgSend(v119, "postalAddresses");
      v210 = sub_100008B04((uint64_t *)&unk_1014A0C80);
      v121 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v120, v210);

      if ((unint64_t)v121 >> 62)
      {
        if (v121 < 0)
          v169 = v121;
        else
          v169 = v121 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(v121, 3);
        v122 = _CocoaArrayWrapper.endIndex.getter(v169);
        swift_bridgeObjectRelease(v121);
        if (v122)
        {
LABEL_45:
          v123 = (void *)objc_opt_self(AddressBookAddress);
          v124 = 0;
          v217 = v121 & 0xC000000000000001;
          v205 = v121;
          v207 = v119;
          v201 = v123;
          v203 = v122;
          if ((v121 & 0xC000000000000001) != 0)
          {
LABEL_46:
            v109 = specialized _ArrayBuffer._getElementSlowPath(_:)(v124, v121);
            v125 = v124 + 1;
            if (__OFADD__(v124, 1))
              goto LABEL_83;
            goto LABEL_50;
          }
          while (2)
          {
            v109 = (uint64_t)*(id *)(v121 + 8 * v124 + 32);
            v125 = v124 + 1;
            if (!__OFADD__(v124, 1))
            {
LABEL_50:
              v224 = v124;
              v225 = (id *)v109;
              v223 = v125;
              v126 = objc_msgSend(v123, v114[299], v119);
              if (!v126)
                __break(1u);
              v127 = v126;
              if (objc_msgSend(v126, v115[61]))
              {
                v128 = objc_msgSend(v220, "autocompleteMatchInfo");
                if (v128)
                {
                  v129 = v128;
                  v130 = *(void **)&v197[v196];
                  v131 = Array._bridgeToObjectiveC()().super.isa;
                  objc_msgSend(v130, "setMatchInfo:forObject:", v129, v131);

                }
                v132 = objc_msgSend(v119, "identifier");
                v133 = static String._unconditionallyBridgeFromObjectiveC(_:)(v132);
                v135 = v134;

                v0 = (double *)v119;
                v136 = (double *)objc_msgSend(v220, "autocompleteMatchInfo");
                v137 = v113;
                swift_beginAccess(v213, v113, 33, 0);
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v213);
                v226[0] = *v213;
                v139 = (_QWORD *)v226[0];
                *v213 = 0x8000000000000000;
                v141 = sub_1000C17A0(v133, v135);
                v142 = v139[2];
                v143 = (v140 & 1) == 0;
                v109 = v142 + v143;
                if (__OFADD__(v142, v143))
                  goto LABEL_84;
                v144 = v140;
                if (v139[3] >= v109)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                  {
                    v113 = v137;
                    if ((v140 & 1) == 0)
                      goto LABEL_64;
                  }
                  else
                  {
                    v109 = (uint64_t)sub_1001A1608();
                    v139 = (_QWORD *)v226[0];
                    v113 = v137;
                    if ((v144 & 1) == 0)
                      goto LABEL_64;
                  }
                }
                else
                {
                  sub_1000DAC7C(v109, isUniquelyReferenced_nonNull_native);
                  v139 = (_QWORD *)v226[0];
                  v109 = sub_1000C17A0(v133, v135);
                  if ((v144 & 1) != (v145 & 1))
                    return (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
                  v141 = v109;
                  v113 = v137;
                  if ((v144 & 1) == 0)
                  {
LABEL_64:
                    v139[(v141 >> 6) + 8] |= 1 << v141;
                    v148 = (uint64_t *)(v139[6] + 16 * v141);
                    *v148 = v133;
                    v148[1] = v135;
                    v149 = (double **)(v139[7] + 16 * v141);
                    *v149 = v0;
                    v149[1] = v136;
                    v150 = v139[2];
                    v117 = __OFADD__(v150, 1);
                    v151 = v150 + 1;
                    if (v117)
                      goto LABEL_85;
                    v139[2] = v151;
                    swift_bridgeObjectRetain(v135);
LABEL_66:
                    v152 = *v213;
                    *v213 = v139;
                    swift_bridgeObjectRelease(v152);
                    swift_bridgeObjectRelease(v135);
                    swift_endAccess(v113);
                    v153 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), "initWithContact:", v0);
                    v154 = sub_100008B04((uint64_t *)&unk_101493B10);
                    v155 = swift_allocObject(v154, 40, 7);
                    *(_OWORD *)(v155 + 16) = xmmword_100E23F50;
                    *(_QWORD *)(v155 + 32) = v225;
                    v226[0] = v155;
                    specialized Array._endMutation()(v155);
                    v156 = v226[0];
                    v157 = v225;
                    v158 = Array._bridgeToObjectiveC()().super.isa;
                    objc_msgSend(v153, "setPostalAddresses:", v158, swift_bridgeObjectRelease(v156).n128_f64[0]);

                    v159 = objc_msgSend(v153, "copy");
                    _bridgeAnyObjectToAny(_:)(v200);
                    swift_unknownObjectRelease(v159);
                    v160 = sub_10000E4BC(0, (unint64_t *)&unk_10149E5F0, CNContact_ptr);
                    v0 = v208;
                    if ((swift_dynamicCast(v198, v200, (char *)&type metadata for Any + 8, v160, 6) & 1) != 0)
                    {
                      v161 = *v198;
                      v162 = objc_msgSend(v220, "autocompleteMatchInfo");
                      swift_beginAccess(v195, v199, 33, 0);
                      v163 = (_QWORD *)*v195;
                      v164 = swift_isUniquelyReferenced_nonNull_native(*v195);
                      *v195 = v163;
                      if ((v164 & 1) == 0)
                      {
                        v163 = sub_1000A8C24(0, v163[2] + 1, 1, v163);
                        *v195 = v163;
                      }
                      v166 = v163[2];
                      v165 = v163[3];
                      if (v166 >= v165 >> 1)
                      {
                        v163 = sub_1000A8C24((_QWORD *)(v165 > 1), v166 + 1, 1, v163);
                        *v195 = v163;
                      }
                      v163[2] = v166 + 1;
                      v167 = &v163[2 * v166];
                      v167[4] = v161;
                      v167[5] = v162;
                      swift_endAccess(v199);

                      v122 = v203;
                      v121 = v205;
                      v114 = &selRef_shouldShowManualRedoButton;
                      v115 = &selRef_isTilted;
                      v119 = v207;
                      v123 = v201;
                      v168 = v224;
                      if (v223 == v203)
                        goto LABEL_38;
                      goto LABEL_75;
                    }

                    v114 = &selRef_shouldShowManualRedoButton;
                    v115 = &selRef_isTilted;
                    v121 = v205;
                    v119 = v207;
                    v123 = v201;
                    v122 = v203;
LABEL_74:
                    v168 = v224;
                    if (v223 == v122)
                      goto LABEL_38;
LABEL_75:
                    v124 = v168 + 1;
                    if (v217)
                      goto LABEL_46;
                    continue;
                  }
                }
                v146 = v139[7] + 16 * v141;
                v147 = *(void **)(v146 + 8);

                *(_QWORD *)v146 = v0;
                *(_QWORD *)(v146 + 8) = v136;
                goto LABEL_66;
              }

              goto LABEL_74;
            }
            break;
          }
LABEL_83:
          __break(1u);
LABEL_84:
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          if (v109 < 0)
            v170 = v109;
          else
            v170 = v109 & 0xFFFFFFFFFFFFFF8;
          v171 = v109;
          swift_bridgeObjectRetain_n(v109, 3);
          v110 = _CocoaArrayWrapper.endIndex.getter(v170);
          swift_bridgeObjectRelease(v171);
          v111 = v225;
          if (!v110)
            goto LABEL_91;
          goto LABEL_37;
        }
      }
      else
      {
        v122 = *(_QWORD *)((v121 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n(v121, 2);
        if (v122)
          goto LABEL_45;
      }
LABEL_38:

      swift_bridgeObjectRelease_n(v121, 3);
      v112 = v193;
      if (v193 == v191)
        goto LABEL_91;
    }
  }
  if (*(uint64_t *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
    goto LABEL_35;
LABEL_22:
  v55 = objc_msgSend((id)objc_opt_self(_CDPeopleSuggesterContext), "currentContext");
  v56 = v55;
  *((_QWORD *)v31 + 67) = v55;
  if (v55)
  {
    v58 = *((_QWORD *)v31 + 56);
    v57 = *((_QWORD *)v31 + 57);
    v59 = *((_QWORD *)v31 + 55);
    v60 = v55;
    v61 = String._bridgeToObjectiveC()();
    objc_msgSend(v60, "setConsumerIdentifier:", v61);

    v62 = v60;
    Date.init()(v62);
    v63 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v57, v59);
    objc_msgSend(v62, "setDate:", v63);

  }
  v64 = objc_msgSend((id)objc_opt_self(_CDPeopleSuggesterSettings), "defaultSettings");
  v65 = v64;
  *((_QWORD *)v53 + 68) = v64;
  if (v64)
  {
    objc_msgSend(v64, "setMaxNumberOfPeopleSuggested:", 100);
    objc_msgSend(v65, "setAggregateByIdentifier:", 1);
  }
  v66 = v53 + 2;
  v67 = objc_msgSend(objc_allocWithZone((Class)_CDPeopleSuggester), "init");
  *((_QWORD *)v53 + 69) = v67;
  objc_msgSend(v67, "setContext:", v56);
  objc_msgSend(v67, "setSettings:", v65);
  v53[43] = 0.0;
  CFAbsoluteTimeGetCurrent();
  *((_QWORD *)v53 + 7) = v53 + 44;
  *((_QWORD *)v53 + 2) = v53;
  *((_QWORD *)v53 + 3) = sub_10018F784;
  v68 = swift_continuation_init(v53 + 2, 1);
  *((_QWORD *)v53 + 16) = _NSConcreteStackBlock;
  v69 = v53 + 16;
  v69[1] = 0x40000000;
  v69[2] = sub_100190BA4;
  v69[3] = &unk_1011A7928;
  v69[4] = v68;
  objc_msgSend(v67, "suggestPeopleWithCompletionHandler:", v69);
  return (id)swift_continuation_await(v66);
}

uint64_t sub_10018F784()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 560) = v1;
  if (v1)
    v2 = sub_1001904E8;
  else
    v2 = sub_10018F828;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10018F828()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char **v31;
  char **v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  Class isa;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  char v61;
  char v62;
  uint64_t v63;
  void *v64;
  uint64_t *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  Class v75;
  id v76;
  uint64_t v77;
  id v78;
  id v79;
  _QWORD *v80;
  char v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  double Current;
  NSObject *v91;
  os_log_type_t v92;
  unint64_t v93;
  double v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  id *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  void *v123;
  void *v124;
  unint64_t v125;
  void *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  void *v131;
  id v132[3];

  v2 = (_QWORD *)(v1 + 344);
  v3 = *(_QWORD *)(v1 + 352);
  v106 = v1 + 344;
  if (!v3)
  {
    v10 = *(void **)(v1 + 552);
    v11 = *(void **)(v1 + 544);
    goto LABEL_16;
  }
  if ((unint64_t)v3 >> 62)
  {
    if (v3 >= 0)
      v12 = v3 & 0xFFFFFFFFFFFFFF8;
    else
      v12 = *(_QWORD *)(v1 + 352);
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (v4)
      goto LABEL_4;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
    {
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
LABEL_77:
        __break(1u);
      }
      v0 = 0;
      v5 = 0;
      do
      {
        if ((v3 & 0xC000000000000001) != 0)
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
        else
          v6 = *(id *)(v3 + 8 * v5 + 32);
        v7 = v6;
        v8 = (uint64_t *)(*(_QWORD *)(v110 + 496) + 16);
        v9 = (uint64_t *)(*(_QWORD *)(v110 + 488) + 16);
        ++v5;
        v132[0] = v6;
        sub_100190C78(v132, v8, v9, v2);

      }
      while (v4 != v5);
    }
  }
  v105 = v0;
  v1 = v110;
  v11 = *(void **)(v110 + 552);
  v10 = *(void **)(v110 + 544);
  swift_bridgeObjectRelease_n(v3, 2);
LABEL_16:

  v13 = *(_QWORD *)(v1 + 480);
  swift_beginAccess(v13 + 16, v1 + 224, 1, 0);
  v14 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v1 + 368) = v14;
  v15 = sub_100008B04(&qword_10149E5A0);
  v16 = sub_100008B04(&qword_10149E5A8);
  v17 = swift_allocObject(v15, ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))+ 2 * *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100E22F70;
  KeyPath = swift_getKeyPath(&unk_100E30FC8);
  swift_bridgeObjectRetain(v14);
  KeyPathComparator.init<A>(_:order:)(KeyPath, 1, &protocol witness table for Double);
  v19 = swift_getKeyPath(&unk_100E31000);
  KeyPathComparator.init<A>(_:order:)(v19, 1, &protocol witness table for Double);
  *(_QWORD *)(v1 + 360) = v17;
  v20 = sub_100008B04(&qword_10149E5B0);
  v21 = sub_100008B04(&qword_10149E5B8);
  v22 = sub_100010D70(&qword_10149E5C0, &qword_10149E5B0, (const char *)&protocol conformance descriptor for [A]);
  v23 = sub_100010D70(&qword_10149E5C8, &qword_10149E5B8, (const char *)&protocol conformance descriptor for [A]);
  v24 = sub_100010D70((unint64_t *)&unk_10149E5D0, &qword_10149E5A8, (const char *)&protocol conformance descriptor for KeyPathComparator<A>);
  v25 = Sequence.sorted<A, B>(using:)(v1 + 360, v20, v21, v16, v22, v23, v24);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 368));
  v26 = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v13 + 16) = v25;
  swift_bridgeObjectRelease(v26);
  v27 = *(_QWORD *)(v13 + 16);
  v108 = v27;
  if ((unint64_t)v27 >> 62)
    goto LABEL_68;
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(v27, 2);
  if (v28)
  {
LABEL_18:
    v29 = 0;
    v30 = v110 + 272;
    v115 = v110 + 296;
    v116 = (_QWORD *)(v110 + 168);
    v112 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context;
    v113 = *(_QWORD *)(v110 + 432);
    v121 = (_QWORD *)(v113 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict);
    v111 = (_QWORD *)(v113 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray);
    v31 = &selRef_shouldShowManualRedoButton;
    v32 = &selRef_isTilted;
    v107 = v28;
    v114 = (id *)(v110 + 320);
    while (1)
    {
      v33 = v29;
      if ((v108 & 0xC000000000000001) != 0)
        v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v108);
      else
        v27 = (uint64_t)*(id *)(v108 + 32 + 8 * v29);
      v130 = (void *)v27;
      v34 = __OFADD__(v33, 1);
      v35 = v33 + 1;
      if (v34)
        goto LABEL_67;
      v109 = v35;
      v36 = objc_msgSend((id)v27, "contact");
      v37 = objc_msgSend(v36, "postalAddresses");
      v120 = sub_100008B04((uint64_t *)&unk_1014A0C80);
      v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v120);

      if ((unint64_t)v38 >> 62)
        break;
      v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v38, 2);
      if (v39)
        goto LABEL_26;
LABEL_19:

      swift_bridgeObjectRelease_n(v38, 3);
      v29 = v109;
      if (v109 == v107)
        goto LABEL_72;
    }
    if (v38 < 0)
      v85 = v38;
    else
      v85 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v38, 3);
    v39 = _CocoaArrayWrapper.endIndex.getter(v85);
    swift_bridgeObjectRelease(v38);
    if (!v39)
      goto LABEL_19;
LABEL_26:
    v40 = 0;
    v123 = (void *)objc_opt_self(AddressBookAddress);
    v125 = v38 & 0xC000000000000001;
    v118 = v38;
    v119 = v36;
    v117 = v39;
    while (1)
    {
      if (v125)
      {
        v27 = specialized _ArrayBuffer._getElementSlowPath(_:)(v40, v38);
        v41 = v40 + 1;
        if (__OFADD__(v40, 1))
          goto LABEL_64;
      }
      else
      {
        v27 = (uint64_t)*(id *)(v38 + 8 * v40 + 32);
        v41 = v40 + 1;
        if (__OFADD__(v40, 1))
        {
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          if (v27 < 0)
            v87 = v27;
          else
            v87 = v27 & 0xFFFFFFFFFFFFFF8;
          v88 = v27;
          swift_bridgeObjectRetain_n(v27, 3);
          v28 = _CocoaArrayWrapper.endIndex.getter(v87);
          swift_bridgeObjectRelease(v88);
          if (!v28)
            break;
          goto LABEL_18;
        }
      }
      v131 = (void *)v27;
      v42 = objc_msgSend(v123, v31[299], v36, v105, v106);
      if (!v42)
        goto LABEL_77;
      v43 = v42;
      if (!objc_msgSend(v42, v32[61]))
      {

        goto LABEL_28;
      }
      v127 = v41;
      v129 = v40;
      v44 = objc_msgSend(v130, "autocompleteMatchInfo");
      if (v44)
      {
        v45 = v44;
        v46 = *(void **)(v113 + v112);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v46, "setMatchInfo:forObject:", v45, isa);

      }
      v48 = objc_msgSend(v36, "identifier");
      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
      v51 = v50;

      v52 = v36;
      v53 = objc_msgSend(v130, "autocompleteMatchInfo");
      v54 = v30;
      swift_beginAccess(v121, v30, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v121);
      v132[0] = *(id *)v121;
      v56 = v132[0];
      *v121 = 0x8000000000000000;
      v58 = sub_1000C17A0(v49, v51);
      v59 = v56[2];
      v60 = (v57 & 1) == 0;
      v27 = v59 + v60;
      if (__OFADD__(v59, v60))
        goto LABEL_65;
      v61 = v57;
      if (v56[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v30 = v54;
          if ((v57 & 1) != 0)
            goto LABEL_46;
        }
        else
        {
          v27 = (uint64_t)sub_1001A1608();
          v56 = v132[0];
          v30 = v54;
          if ((v61 & 1) != 0)
            goto LABEL_46;
        }
      }
      else
      {
        sub_1000DAC7C(v27, isUniquelyReferenced_nonNull_native);
        v56 = v132[0];
        v27 = sub_1000C17A0(v49, v51);
        if ((v61 & 1) != (v62 & 1))
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        v58 = v27;
        v30 = v54;
        if ((v61 & 1) != 0)
        {
LABEL_46:
          v63 = v56[7] + 16 * v58;
          v64 = *(void **)(v63 + 8);

          *(_QWORD *)v63 = v52;
          *(_QWORD *)(v63 + 8) = v53;
          goto LABEL_50;
        }
      }
      v56[(v58 >> 6) + 8] |= 1 << v58;
      v65 = (uint64_t *)(v56[6] + 16 * v58);
      *v65 = v49;
      v65[1] = v51;
      v66 = (_QWORD *)(v56[7] + 16 * v58);
      *v66 = v52;
      v66[1] = v53;
      v67 = v56[2];
      v34 = __OFADD__(v67, 1);
      v68 = v67 + 1;
      if (v34)
        goto LABEL_66;
      v56[2] = v68;
      swift_bridgeObjectRetain(v51);
LABEL_50:
      v69 = *v121;
      *v121 = v56;
      swift_bridgeObjectRelease(v69);
      swift_bridgeObjectRelease(v51);
      swift_endAccess(v30);
      v70 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), "initWithContact:", v52);
      v71 = sub_100008B04((uint64_t *)&unk_101493B10);
      v72 = swift_allocObject(v71, 40, 7);
      *(_OWORD *)(v72 + 16) = xmmword_100E23F50;
      *(_QWORD *)(v72 + 32) = v131;
      v132[0] = (id)v72;
      specialized Array._endMutation()(v72);
      v73 = v132[0];
      v74 = v131;
      v75 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v70, "setPostalAddresses:", v75, swift_bridgeObjectRelease(v73).n128_f64[0]);

      v76 = objc_msgSend(v70, "copy");
      _bridgeAnyObjectToAny(_:)(v116);
      swift_unknownObjectRelease(v76);
      v77 = sub_10000E4BC(0, (unint64_t *)&unk_10149E5F0, CNContact_ptr);
      v41 = v127;
      v40 = v129;
      if ((swift_dynamicCast(v114, v116, (char *)&type metadata for Any + 8, v77, 6) & 1) == 0)
      {

        v31 = &selRef_shouldShowManualRedoButton;
        v32 = &selRef_isTilted;
        v38 = v118;
        v36 = v119;
        v39 = v117;
LABEL_28:
        if (v41 == v39)
          goto LABEL_19;
        goto LABEL_29;
      }
      v78 = *v114;
      v79 = objc_msgSend(v130, "autocompleteMatchInfo");
      swift_beginAccess(v111, v115, 33, 0);
      v80 = (_QWORD *)*v111;
      v81 = swift_isUniquelyReferenced_nonNull_native(*v111);
      *v111 = v80;
      if ((v81 & 1) == 0)
      {
        v80 = sub_1000A8C24(0, v80[2] + 1, 1, v80);
        *v111 = v80;
      }
      v83 = v80[2];
      v82 = v80[3];
      if (v83 >= v82 >> 1)
      {
        v80 = sub_1000A8C24((_QWORD *)(v82 > 1), v83 + 1, 1, v80);
        *v111 = v80;
      }
      v80[2] = v83 + 1;
      v84 = &v80[2 * v83];
      v84[4] = v78;
      v84[5] = v79;
      swift_endAccess(v115);

      v39 = v117;
      v38 = v118;
      v40 = v129;
      v31 = &selRef_shouldShowManualRedoButton;
      v32 = &selRef_isTilted;
      v36 = v119;
      if (v127 == v117)
        goto LABEL_19;
LABEL_29:
      ++v40;
    }
  }
LABEL_72:
  v89 = *(void **)(v110 + 432);
  swift_bridgeObjectRelease_n(v108, 2);
  Current = CFAbsoluteTimeGetCurrent();
  v91 = Logger.logObject.getter(v89);
  v92 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v91, v92))
  {
    v93 = *(_QWORD *)(v110 + 528);
    v122 = *(_QWORD *)(v110 + 520);
    v126 = *(void **)(v110 + 512);
    v128 = *(void **)(v110 + 504);
    v94 = *(double *)(v110 + 472);
    v95 = *(char **)(v110 + 432);
    v96 = swift_slowAlloc(32, -1);
    v124 = (void *)swift_slowAlloc(64, -1);
    v132[0] = v124;
    *(_DWORD *)v96 = 134218498;
    *(double *)(v110 + 328) = Current - v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v110 + 328, v110 + 336, v96 + 4, v96 + 12);
    *(_WORD *)(v96 + 12) = 2080;
    v97 = &v95[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict];
    swift_beginAccess(&v95[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict], v110 + 200, 0, 0);
    v98 = *(_QWORD *)v97;
    swift_bridgeObjectRetain(*(_QWORD *)v97);
    v99 = sub_100008B04((uint64_t *)&unk_10149E5E0);
    v100 = Dictionary.description.getter(v98, &type metadata for String, v99, &protocol witness table for String);
    v102 = v101;
    swift_bridgeObjectRelease(v98);
    *(_QWORD *)(v110 + 408) = sub_1000C28FC(v100, v102, (uint64_t *)v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v110 + 408, v110 + 416, v96 + 14, v96 + 22);
    swift_bridgeObjectRelease(v102);

    *(_WORD *)(v96 + 22) = 2080;
    swift_bridgeObjectRetain(v93);
    *(_QWORD *)(v110 + 336) = sub_1000C28FC(v122, v93, (uint64_t *)v132);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v110 + 336, v106, v96 + 24, v96 + 32);
    swift_bridgeObjectRelease(v93);

    _os_log_impl((void *)&_mh_execute_header, v91, v92, "[⌛(%f)]SearchFindMyFriendOperation: Finished fetching \n contacts:%s\n searchQuery:%s", (uint8_t *)v96, 0x20u);
    swift_arrayDestroy(v124, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v124, -1, -1);
    swift_slowDealloc(v96, -1, -1);

  }
  else
  {
    v103 = *(void **)(v110 + 512);
    v104 = *(void **)(v110 + 432);

  }
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc(*(_QWORD *)(v110 + 456));
  return (*(uint64_t (**)(uint64_t))(v110 + 8))(1);
}

uint64_t sub_1001904E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  double Current;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  unint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v2 = *(void **)(v1 + 552);
  v3 = *(void **)(v1 + 544);
  v4 = *(void **)(v1 + 536);
  swift_willThrow(a1);

  v5 = *(_QWORD *)(v1 + 560);
  v6 = *(void **)(v1 + 432);
  Current = CFAbsoluteTimeGetCurrent();
  v8 = v6;
  swift_errorRetain(v5);
  v9 = v8;
  v10 = swift_errorRetain(v5);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = *(_QWORD *)(v1 + 528);
    v22 = *(_QWORD *)(v1 + 520);
    v25 = *(void **)(v1 + 512);
    v26 = *(void **)(v1 + 504);
    v14 = *(double *)(v1 + 472);
    v23 = *(void **)(v1 + 432);
    v15 = swift_slowAlloc(32, -1);
    v16 = (uint64_t *)swift_slowAlloc(8, -1);
    v24 = swift_slowAlloc(32, -1);
    v27 = v24;
    *(_DWORD *)v15 = 138412802;
    swift_errorRetain(v5);
    v17 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(_QWORD *)(v1 + 376) = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 376, v1 + 384, v15 + 4, v15 + 12);
    *v16 = v17;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain(v13);
    *(_QWORD *)(v1 + 384) = sub_1000C28FC(v22, v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 384, v1 + 392, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease(v13);

    *(_WORD *)(v15 + 22) = 2048;
    *(double *)(v1 + 392) = Current - v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 392, v1 + 400, v15 + 24, v15 + 32);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[⌛]SearchFindMyFriendOperation: Error encountered while fetching contacts:%@ for query:%s\n Time taken: %f", (uint8_t *)v15, 0x20u);
    v18 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v16, 1, v18);
    swift_slowDealloc(v16, -1, -1);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v15, -1, -1);

    swift_errorRelease(v5);
    swift_release();
    swift_release();
  }
  else
  {
    v19 = *(void **)(v1 + 512);
    v20 = *(void **)(v1 + 432);

    swift_errorRelease(v5);
    swift_errorRelease(v5);
    swift_errorRelease(v5);

    swift_release();
    swift_release();
  }
  swift_release();
  swift_task_dealloc(*(_QWORD *)(v1 + 456));
  return (*(uint64_t (**)(_QWORD))(v1 + 8))(0);
}

void sub_100190834(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  _QWORD *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];

  if ((sub_10018DC6C() & 1) != 0)
    *a3 = 1;
  v37 = objc_msgSend(objc_allocWithZone((Class)SearchAddressBookOperationMatch), "initWithContact:context:", a1, *(_QWORD *)(a4 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context));
  if (objc_msgSend(v37, "isGoodMatch"))
  {
    v13 = (_QWORD *)(a5 + 16);
    v14 = (_QWORD *)(a6 + 16);
    swift_beginAccess(a5 + 16, v40, 33, 0);
    v15 = v37;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    v17 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v16 = *(_QWORD *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v17 >= v16 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
    v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
    specialized Array._endMutation()(v18);
    swift_endAccess(v40);
    v19 = objc_msgSend(v15, "contact");
    v20 = objc_msgSend(v19, "identifier");

    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v23 = v22;

    swift_beginAccess(v14, v40, 33, 0);
    v24 = v15;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
    v38 = *v14;
    *v14 = 0x8000000000000000;
    sub_1001A05C0((uint64_t)v24, v21, v23, isUniquelyReferenced_nonNull_native);
    v26 = *v14;
    *v14 = v38;
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v26);
    swift_endAccess(v40);
    v27 = objc_msgSend(v24, "contact");
    v28 = objc_msgSend(v27, "iOSLegacyIdentifier");

    if (v28 >= 1)
    {
      v29 = (_QWORD *)(a7 + 16);
      v30 = sub_100008B04((uint64_t *)&unk_10149A4F0);
      v31 = swift_allocObject(v30, 72, 7);
      *(_OWORD *)(v31 + 16) = xmmword_100E22F40;
      *(_QWORD *)(v31 + 56) = &type metadata for Int32;
      *(_QWORD *)(v31 + 64) = &protocol witness table for Int32;
      *(_DWORD *)(v31 + 32) = v28;
      v32 = String.init(format:_:)(25637, 0xE200000000000000, v31);
      v34 = v33;
      swift_beginAccess(v29, v40, 33, 0);
      v24 = v24;
      v35 = swift_isUniquelyReferenced_nonNull_native(*v29);
      v39 = *v29;
      *v29 = 0x8000000000000000;
      sub_1001A05C0((uint64_t)v24, v32, v34, v35);
      v36 = *v29;
      *v29 = v39;
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v36);
      swift_endAccess(v40);
    }

  }
  else
  {

  }
}

void sub_100190B28(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  void (*v8)(id, id, uint64_t);
  id v9;
  id v10;

  v8 = *(void (**)(id, id, uint64_t))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  swift_retain(v7);
  v10 = a2;
  v9 = a3;
  v8(v10, v9, a4);
  swift_release(v7);

}

uint64_t sub_100190BA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_100008B04(&qword_10149E610);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    if (a2)
    {
      v11 = sub_10000E4BC(0, &qword_10149E608, _CDSuggestedPerson_ptr);
      v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    }
    else
    {
      v12 = 0;
    }
    v13 = v12;
    sub_1000207BC((uint64_t)&v13, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40), &qword_10149E600);
    return swift_continuation_throwingResume(v3);
  }
}

void sub_100190C78(id *a1, uint64_t *a2, uint64_t *a3, _QWORD *a4)
{
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  _BYTE v34[24];

  v7 = *a1;
  v8 = objc_msgSend(*a1, "contact");
  if (!v8)
    return;
  v9 = v8;
  v10 = objc_msgSend(v8, "personId");
  if (!v10)
  {

    return;
  }
  v11 = v10;
  v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  if (objc_msgSend(v9, "personIdType") == (id)1)
  {
    swift_beginAccess(a2, v34, 32, 0);
    v14 = *a2;
    if (*(_QWORD *)(*a2 + 16))
    {
      swift_bridgeObjectRetain(v13);
      v15 = sub_1000C17A0(v33, v13);
      if ((v16 & 1) != 0)
      {
        v17 = *(void **)(*(_QWORD *)(v14 + 56) + 8 * v15);
        v18 = v17;
      }
      else
      {
        v17 = 0;
      }
      swift_bridgeObjectRelease(v13);
    }
    else
    {
      v17 = 0;
    }
    swift_endAccess(v34);
  }
  else
  {
    v17 = 0;
  }
  if (objc_msgSend(v9, "personIdType") != (id)3)
  {
    swift_bridgeObjectRelease(v13);
    if (!v17)
    {

      return;
    }
    v23 = v17;
    goto LABEL_24;
  }
  swift_beginAccess(a3, v34, 32, 0);
  v19 = *a3;
  if (!*(_QWORD *)(*a3 + 16))
  {
LABEL_21:
    swift_endAccess(v34);

    swift_beginAccess(a2, v34, 32, 0);
    v24 = *a2;
    if (!*(_QWORD *)(*a2 + 16))
    {
      swift_endAccess(v34);

      swift_bridgeObjectRelease(v13);
      return;
    }
    swift_bridgeObjectRetain(v13);
    v25 = sub_1000C17A0(v33, v13);
    if ((v26 & 1) == 0)
    {
      swift_endAccess(v34);

      swift_bridgeObjectRelease_n(v13, 2);
      return;
    }
    v17 = *(void **)(*(_QWORD *)(v24 + 56) + 8 * v25);
    swift_endAccess(v34);
    v23 = v17;
    swift_bridgeObjectRelease_n(v13, 2);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain(v13);
  v20 = sub_1000C17A0(v33, v13);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRelease(v13);
    goto LABEL_21;
  }
  v22 = *(void **)(*(_QWORD *)(v19 + 56) + 8 * v20);
  swift_endAccess(v34);
  v23 = v22;
  swift_bridgeObjectRelease_n(v13, 2);

  v17 = v22;
LABEL_24:
  v27 = v23;
  if (*a4 == -1)
  {
    __break(1u);
  }
  else
  {
    v28 = v27;
    ++*a4;
    objc_msgSend(v27, "peopleSuggesterRank");
    if (v29 == 0.0)
    {
      objc_msgSend(v7, "rank");
    }
    else
    {
      objc_msgSend(v28, "peopleSuggesterRank");
      v32 = v31;
      objc_msgSend(v7, "rank");
      if (v30 >= v32)
        v30 = v32;
    }
    objc_msgSend(v28, "setPeopleSuggesterRank:", v30);

  }
}

uint64_t sub_100191098(const void *a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = dword_10149E594;
  a2;
  v5 = (_QWORD *)swift_task_alloc(v4);
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1001910F8;
  return sub_10018DF1C();
}

uint64_t sub_1001910F8(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 24);
  v4 = *(void **)(*v1 + 16);
  v6 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 32));

  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

void sub_10019116C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  void **v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45[24];
  uint64_t v46;
  _BYTE v47[16];
  uint64_t v48[4];
  char v49[24];

  v1 = &v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict];
  swift_beginAccess(&v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict], v49, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v1 + 16)
    || (v2 = &v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray],
        swift_beginAccess(&v0[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray], v45, 0, 0),
        *(_QWORD *)(*(_QWORD *)v2 + 16)))
  {
    if (qword_101490EB8 != -1)
      swift_once(&qword_101490EB8, sub_1001147FC);
    v3 = type metadata accessor for Logger(0);
    sub_10000E918(v3, (uint64_t)qword_1014D4B38);
    v4 = v0;
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(12, -1);
      v8 = swift_slowAlloc(32, -1);
      v48[0] = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain(v10);
      v46 = sub_1000C28FC(v9, v10, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v7 + 4, v7 + 12);

      swift_bridgeObjectRelease(v10);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "SearchFindMyFriendOperation: Creating person objects for query: %s", v7, 0xCu);
      swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1, -1);
      swift_slowDealloc(v7, -1, -1);

    }
    else
    {

    }
    if (v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_singularResults] == 1)
    {
      v12 = &v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray];
      swift_beginAccess(&v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray], v48, 0, 0);
      v13 = *(_QWORD *)v12;
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        v15 = &v4[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems];
        v16 = (objc_class *)type metadata accessor for MapsAutocompletePerson();
        swift_bridgeObjectRetain(v13);
        v44 = v13;
        v17 = (void **)(v13 + 40);
        do
        {
          v21 = *(v17 - 1);
          v22 = *v17;
          v23 = objc_allocWithZone(v16);
          v24 = v22;
          v25 = v21;
          v20 = (char *)sub_1001F10E0(0, 0, 0, 0);
          v26 = *(void **)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
          *(_QWORD *)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = v25;
          v19 = (char *)v25;

          v27 = *(void **)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo];
          *(_QWORD *)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = v22;
          v28 = v24;

          v29 = objc_msgSend(objc_allocWithZone((Class)AutocompleteItem), "initWithLocalCompletion:sourceType:sourceSubtype:matchInfo:", v20, 4, 0, v28);
          if (v29)
          {
            v30 = v29;
            swift_beginAccess(v15, &v46, 33, 0);
            v31 = v30;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
            v33 = *(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v32 = *(_QWORD *)((*(_QWORD *)v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v33 >= v32 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
            v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
            specialized Array._endMutation()(v18);
            swift_endAccess(&v46);

            v19 = v20;
            v20 = v31;
          }
          v17 += 2;

          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease(v44);
      }
    }
    else
    {
      v34 = *(_QWORD *)v1;
      __chkstk_darwin(v11);
      v35 = swift_bridgeObjectRetain(v34);
      sub_10019210C(v35, sub_100191F98);
      swift_bridgeObjectRelease(v34);
    }
  }
  else
  {
    if (qword_101490EB8 != -1)
      swift_once(&qword_101490EB8, sub_1001147FC);
    v36 = type metadata accessor for Logger(0);
    sub_10000E918(v36, (uint64_t)qword_1014D4B38);
    v37 = v0;
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v48[0] = v41;
      *(_DWORD *)v40 = 136315138;
      v42 = *(_QWORD *)&v37[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
      v43 = *(_QWORD *)&v37[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
      swift_bridgeObjectRetain(v43);
      v46 = sub_1000C28FC(v42, v43, v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v40 + 4, v40 + 12);

      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "SearchFindMyFriendOperation: did not find any handles or matching contacts for query: %s", v40, 0xCu);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1001916D4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  _QWORD *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  _BYTE v21[24];

  v8 = objc_allocWithZone((Class)type metadata accessor for MapsAutocompletePerson());
  v20 = (char *)sub_1001F10E0(0, 0, 0, 0);
  v9 = *(void **)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact];
  *(_QWORD *)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contact] = a3;
  v10 = a3;

  v11 = *(void **)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo];
  *(_QWORD *)&v20[OBJC_IVAR____TtC4Maps22MapsAutocompletePerson_contactMatchInfo] = a4;
  v12 = a4;

  v13 = objc_msgSend(objc_allocWithZone((Class)AutocompleteItem), "initWithLocalCompletion:sourceType:sourceSubtype:matchInfo:", v20, 4, 0, v12);
  if (v13)
  {
    v14 = v13;
    v15 = (_QWORD *)(a5 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems);
    swift_beginAccess(a5 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems, v21, 33, 0);
    v16 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
    v18 = *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v17 = *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v18 >= v17 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
    v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
    specialized Array._endMutation()(v19);
    swift_endAccess(v21);

  }
  else
  {

  }
}

void sub_100191868()
{
  void *v0;
  NSString v1;
  NSString v2;
  NSString v3;
  NSString v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "willChangeValueForKey:", v1);

  *((_BYTE *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation) = 1;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "didChangeValueForKey:", v2);

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "willChangeValueForKey:", v3);

  *((_BYTE *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation) = 0;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "didChangeValueForKey:", v4);

  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v5 = type metadata accessor for Logger(0);
  sub_10000E918(v5, (uint64_t)qword_1014D4B38);
  v15 = v0;
  v6 = Logger.logObject.getter(v15);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    v10 = swift_slowAlloc(32, -1);
    v17 = v10;
    *(_DWORD *)v8 = 138412546;
    v16 = (uint64_t)v15;
    v11 = (char *)v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 4, v8 + 12);
    *v9 = v15;

    *(_WORD *)(v8 + 12) = 2080;
    v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v13);
    v16 = sub_1000C28FC(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 14, v8 + 22);

    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SearchFindMyFriendOperation: marking operation:%@ as complete for query:%s", (uint8_t *)v8, 0x16u);
    v14 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v14);
    swift_slowDealloc(v9, -1, -1);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
}

void sub_100191C00()
{
  void *v0;
  NSString v1;
  NSString v2;
  NSString v3;
  NSString v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "willChangeValueForKey:", v1);

  *((_BYTE *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation) = 0;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "didChangeValueForKey:", v2);

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "willChangeValueForKey:", v3);

  *((_BYTE *)v0 + OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation) = 1;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "didChangeValueForKey:", v4);

  if (qword_101490EB8 != -1)
    swift_once(&qword_101490EB8, sub_1001147FC);
  v5 = type metadata accessor for Logger(0);
  sub_10000E918(v5, (uint64_t)qword_1014D4B38);
  v15 = v0;
  v6 = Logger.logObject.getter(v15);
  v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(22, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    v10 = swift_slowAlloc(32, -1);
    v17 = v10;
    *(_DWORD *)v8 = 138412546;
    v16 = (uint64_t)v15;
    v11 = (char *)v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 4, v8 + 12);
    *v9 = v15;

    *(_WORD *)(v8 + 12) = 2080;
    v12 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
    v13 = *(_QWORD *)&v11[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery + 8];
    swift_bridgeObjectRetain(v13);
    v16 = sub_1000C28FC(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 14, v8 + 22);

    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "SearchFindMyFriendOperation: marking operation:%@ as complete for query:%s", (uint8_t *)v8, 0x16u);
    v14 = sub_100008B04((uint64_t *)&unk_101494470);
    swift_arrayDestroy(v9, 1, v14);
    swift_slowDealloc(v9, -1, -1);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
}

void sub_100191F98(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_1001916D4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_100191FA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1000C17A0(a1, a2);
  LOBYTE(a2) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v10 = *v3;
  v14 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001A1608();
    v10 = v14;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v7 + 8));
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v7);
  sub_1001A001C(v7, v10);
  v12 = *v3;
  *v3 = v10;
  swift_bridgeObjectRelease(v12);
  return v11;
}

uint64_t sub_100192084(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_10019210C(uint64_t a1, void (*a2)(uint64_t, uint64_t, id, void *))
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;

  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v23 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v19 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v23)
      return swift_release(a1);
    v20 = *(_QWORD *)(v22 + 8 * v19);
    ++v7;
    if (!v20)
    {
      v7 = v19 + 1;
      if (v19 + 1 >= v23)
        return swift_release(a1);
      v20 = *(_QWORD *)(v22 + 8 * v7);
      if (!v20)
      {
        v7 = v19 + 2;
        if (v19 + 2 >= v23)
          return swift_release(a1);
        v20 = *(_QWORD *)(v22 + 8 * v7);
        if (!v20)
        {
          v7 = v19 + 3;
          if (v19 + 3 >= v23)
            return swift_release(a1);
          v20 = *(_QWORD *)(v22 + 8 * v7);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v20 - 1) & v20;
    v9 = __clz(__rbit64(v20)) + (v7 << 6);
LABEL_5:
    v10 = 16 * v9;
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v10);
    v12 = *v11;
    v13 = v11[1];
    v14 = *(_QWORD *)(a1 + 56) + v10;
    v16 = *(void **)v14;
    v15 = *(void **)(v14 + 8);
    v17 = v15;
    swift_bridgeObjectRetain(v13);
    v18 = v16;
    a2(v12, v13, v18, v15);

    result = swift_bridgeObjectRelease(v13);
  }
  v21 = v19 + 4;
  if (v21 >= v23)
    return swift_release(a1);
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
  {
    v7 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v7 >= v23)
      return swift_release(a1);
    v20 = *(_QWORD *)(v22 + 8 * v7);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1001922F4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100192320()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_10149E584);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000C0E0;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_10149E580 + dword_10149E580))(v2, v3);
}

uint64_t sub_10019238C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

const char *sub_1001923B0()
{
  return "peopleSuggesterRank";
}

id sub_1001923BC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "peopleSuggesterRank");
  *a2 = v4;
  return result;
}

id sub_1001923EC(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setPeopleSuggesterRank:", *a1);
}

const char *sub_100192400()
{
  return "fractionOfMatch";
}

id sub_10019240C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*a1, "fractionOfMatch");
  *a2 = v4;
  return result;
}

uint64_t sub_10019243C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100192478(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t *v3;

  sub_100190834(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

double sub_100192484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

uint64_t sub_100192494(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10019249C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001924D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc(dword_10149E624);
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000DD08;
  *(_OWORD *)(v3 + 40) = v4;
  *(_QWORD *)(v3 + 32) = v2;
  return swift_task_switch(sub_1001885A0, 0, 0);
}

uint64_t sub_100192538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001925B4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_10149E634);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000DD08;
  return sub_100187E34(a1, v5, v6, v7, v8);
}

uint64_t sub_100192648()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019266C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100192698(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_10149E644);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000DD08;
  return sub_1001889DC(a1, v5, v4);
}

uint64_t sub_1001926FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100192720(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10149E664);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000C0E0;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch(sub_10018C904, 0, 0);
}

id sub_100192784(uint64_t a1)
{
  uint64_t v1;

  return sub_10018C9FC(a1, v1);
}

void sub_10019278C(void *a1, void *a2)
{
  if (a1)
  {

  }
}

id sub_1001927B8(uint64_t a1, uint64_t a2, void *a3, int a4, int a5, void *a6)
{
  _BYTE *v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _BYTE *v15;
  _QWORD *v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  objc_class *MyFriendOperation;
  int v22;
  int v23;
  uint64_t v24;
  objc_super v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a4;
  v23 = a5;
  v24 = type metadata accessor for CharacterSet(0);
  v11 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_delegate]);
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_findFriendsTask] = 0;
  v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isExecutingOperation] = 0;
  v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isFinishedOperation] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_autocompleteItems] = _swiftEmptyArrayStorage;
  v14 = OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsDict;
  v15 = v6;
  *(_QWORD *)&v6[v14] = sub_10000A358((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_matchedContactsArray] = _swiftEmptyArrayStorage;
  v16 = &v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchQuery];
  *v16 = a1;
  v16[1] = a2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_context] = a3;
  v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_isOffline] = v22;
  v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_singularResults] = v23;
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchFindMySession] = a6;
  v26 = a1;
  v27 = a2;
  v17 = a6;
  swift_bridgeObjectRetain(a2);
  static CharacterSet.whitespacesAndNewlines.getter(a3);
  v18 = sub_10006C008();
  v19 = StringProtocol.components(separatedBy:)(v13, &type metadata for String, v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  swift_bridgeObjectRelease(a2);
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Maps27SearchFindMyFriendOperation_searchTerms] = v19;

  MyFriendOperation = (objc_class *)type metadata accessor for SearchFindMyFriendOperation();
  v25.receiver = v15;
  v25.super_class = MyFriendOperation;
  return objc_msgSendSuper2(&v25, "init");
}

uint64_t sub_100192980()
{
  return sub_10018C208();
}

uint64_t sub_1001929D0(uint64_t a1)
{
  return sub_100192A68(a1, &qword_10149E710, qword_1014D4EC8, (uint64_t)sub_1001929F4, (uint64_t)&type metadata for HomeListFavoritesCellModel);
}

uint64_t sub_1001929F4(void *a1, uint64_t a2, _QWORD *a3)
{
  return sub_100192AF4(a1, a2, a3, (SEL *)&selRef_setFavoritesDataProvider_);
}

uint64_t sub_100192A00@<X0>(uint64_t a1@<X8>)
{
  return sub_100192BD4(&qword_101491048, &qword_10149E710, (uint64_t)qword_1014D4EC8, (uint64_t)sub_1001929D0, a1);
}

Swift::Int sub_100192A24()
{
  return sub_1000127E4();
}

uint64_t sub_100192A44(uint64_t a1)
{
  return sub_100192A68(a1, (uint64_t *)&unk_10149C110, qword_1014D4EE0, (uint64_t)sub_100192AE8, (uint64_t)&type metadata for HomeListFavoritesCellModelLegacy);
}

uint64_t sub_100192A68(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_100008B04(a2);
  sub_10000E930(v8, a3);
  sub_10000E918(v8, (uint64_t)a3);
  v9 = sub_10000E4BC(0, &qword_10149E718, &off_101197F80);
  return UICollectionView.CellRegistration.init(handler:)(a4, 0, v9, a5);
}

uint64_t sub_100192AE8(void *a1, uint64_t a2, _QWORD *a3)
{
  return sub_100192AF4(a1, a2, a3, (SEL *)&selRef_setSuggestionsDataProvider_);
}

uint64_t sub_100192AF4(void *a1, uint64_t a2, _QWORD *a3, SEL *a4)
{
  _QWORD *v5;
  uint64_t Strong;
  uint64_t v7;
  __objc2_prot *v9;

  v5 = a3 + 1;
  objc_msgSend(a1, *a4, *a3);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (!Strong)
    goto LABEL_4;
  v9 = &OBJC_PROTOCOL___ShortcutsRowTableViewCellDelegate;
  v7 = swift_dynamicCastObjCProtocolConditional(Strong, 1, &v9);
  if (!v7)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "Maps/HashableWrappers.swift", 27, 2, 83, 0);
    __break(1u);
LABEL_4:
    v7 = 0;
  }
  objc_msgSend(a1, "setDelegate:", v7);
  return swift_unknownObjectRelease(v7);
}

uint64_t sub_100192BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_100192BD4(&qword_101491050, (uint64_t *)&unk_10149C110, (uint64_t)qword_1014D4EE0, (uint64_t)sub_100192A44, a1);
}

uint64_t sub_100192BD4@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = sub_100008B04(a2);
  v9 = sub_10000E918(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t sub_100192C44(_QWORD *a1, _QWORD *a2)
{
  sub_10000E4BC(0, (unint64_t *)&qword_101492E60, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*a1, *a2) & 1) != 0)
    return sub_100012C7C(a1 + 1, a2 + 1);
  else
    return 0;
}

unint64_t sub_100192CB8()
{
  unint64_t result;

  result = qword_10149E680;
  if (!qword_10149E680)
  {
    result = swift_getWitnessTable("Yk7", &type metadata for HomeListFavoritesCellModelLegacy);
    atomic_store(result, (unint64_t *)&qword_10149E680);
  }
  return result;
}

unint64_t sub_100192CFC(uint64_t a1)
{
  unint64_t result;

  result = sub_100192D20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100192D20()
{
  unint64_t result;

  result = qword_10149E6C0;
  if (!qword_10149E6C0)
  {
    result = swift_getWitnessTable("Ak7", &type metadata for HomeListFavoritesCellModelLegacy);
    atomic_store(result, (unint64_t *)&qword_10149E6C0);
  }
  return result;
}

unint64_t sub_100192D68()
{
  unint64_t result;

  result = qword_10149E6C8;
  if (!qword_10149E6C8)
  {
    result = swift_getWitnessTable(byte_100E310B4, &type metadata for HomeListFavoritesCellModel);
    atomic_store(result, (unint64_t *)&qword_10149E6C8);
  }
  return result;
}

unint64_t sub_100192DAC(uint64_t a1)
{
  unint64_t result;

  result = sub_100192DD0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100192DD0()
{
  unint64_t result;

  result = qword_10149E708;
  if (!qword_10149E708)
  {
    result = swift_getWitnessTable(byte_100E310DC, &type metadata for HomeListFavoritesCellModel);
    atomic_store(result, (unint64_t *)&qword_10149E708);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeListFavoritesCellModel()
{
  return &type metadata for HomeListFavoritesCellModel;
}

ValueMetadata *type metadata accessor for HomeListFavoritesCellModelLegacy()
{
  return &type metadata for HomeListFavoritesCellModelLegacy;
}

unint64_t sub_100192E54()
{
  unint64_t result;

  result = qword_10149E720;
  if (!qword_10149E720)
  {
    result = swift_getWitnessTable(byte_100E311D0, &type metadata for NearbyTransitLinesSectionViewModel);
    atomic_store(result, (unint64_t *)&qword_10149E720);
  }
  return result;
}

void sub_100192E98(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_1000DDED4(v5);
  sub_10019382C(a1, a2);
  *v2 = v5;
}

uint64_t sub_100192F18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[16];
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  v18 = *(_QWORD **)(v2 + 16);
  v19 = v18;
  v17 = a1;
  swift_bridgeObjectRetain_n(v18, 2);
  sub_100192E98((uint64_t (*)(uint64_t *, uint64_t *))sub_100197120, (uint64_t)v16);
  sub_10008207C(&v19);
  if (v18[2])
  {
    v4 = v18[5];
    v5 = v18[7];
    v14 = v18[6];
    v15 = v18[4];
    v6 = v18[9];
    v13 = v18[8];
    v8 = v18[10];
    v7 = v18[11];
    v10 = v18[12];
    v9 = v18[13];
    v11 = v18[14];
    swift_bridgeObjectRetain(v7);
    swift_unknownObjectRetain(v9);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
  }
  else
  {
    v14 = 0;
    v15 = 0;
    v4 = 0;
    v5 = 0;
    v13 = 0;
    v6 = 0;
    v8 = 0;
    v7 = 0;
    v10 = 0;
    v9 = 0;
    v11 = 0;
  }
  result = swift_release();
  *a2 = v15;
  a2[1] = v4;
  a2[2] = v14;
  a2[3] = v5;
  a2[4] = v13;
  a2[5] = v6;
  a2[6] = v8;
  a2[7] = v7;
  a2[8] = v10;
  a2[9] = v9;
  a2[10] = v11;
  return result;
}

uint64_t sub_100193050@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(void **)(v1 + 64);
  objc_msgSend(*(id *)(v1 + 24), "muid");
  v9 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  v10 = v5;
  v6._countAndFlagsBits = 95;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRetain(v4);
  v7._countAndFlagsBits = v3;
  v7._object = v4;
  String.append(_:)(v7);
  result = swift_bridgeObjectRelease(v4);
  *a1 = v9;
  a1[1] = v10;
  return result;
}

uint64_t sub_1001930E8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[2];
  _OWORD v9[3];
  _OWORD v10[2];

  v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_100194DB0((uint64_t *)v7, (uint64_t)v9) & 1;
}

void sub_100193140(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::UInt v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[5];
  uint64_t v28;

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[2];
  v26 = v6;
  v7 = *(_QWORD *)(v6 + 16);
  Hasher._combine(_:)(v7);
  if (v7)
  {
    v8 = v6 + 32;
    swift_bridgeObjectRetain(v6);
    do
    {
      v9 = *(_OWORD *)(v8 + 16);
      v27[0] = *(_OWORD *)v8;
      v27[1] = v9;
      v10 = *(_OWORD *)(v8 + 32);
      v11 = *(_OWORD *)(v8 + 48);
      v12 = *(_OWORD *)(v8 + 64);
      v28 = *(_QWORD *)(v8 + 80);
      v27[3] = v11;
      v27[4] = v12;
      v27[2] = v10;
      sub_1000352C8(v27);
      sub_1001E6DA0(a1);
      sub_100035330(v27);
      v8 += 88;
      --v7;
    }
    while (v7);
    sub_10008207C(&v26);
  }
  Hasher._combine(_:)((Swift::UInt64)objc_msgSend((id)v2[3], "muid"));
  Hasher._combine(_:)(v2[4] & 1);
  Hasher._combine(_:)(v2[6] & 1);
  v13 = v2[7];
  v14 = v2[8];
  swift_bridgeObjectRetain(v14);
  String.hash(into:)(a1, v13, v14);
  swift_bridgeObjectRelease(v14);
  Hasher._combine(_:)(v2[9] & 1);
  v15 = v2[5];
  v25 = v15;
  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v15);
    if (v16)
      goto LABEL_7;
LABEL_20:
    sub_10008207C(&v25);
    return;
  }
  if (v15 >= 0)
    v24 = v15 & 0xFFFFFFFFFFFFFF8;
  else
    v24 = v15;
  swift_bridgeObjectRetain(v15);
  v16 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v16)
    goto LABEL_20;
LABEL_7:
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
      }
      else
      {
        v19 = *(void **)(v15 + 8 * i + 32);
        swift_unknownObjectRetain(v19);
      }
      v20 = objc_msgSend(v19, "accessibilityText", v25, v26);
      if (v20)
      {
        v21 = v20;
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v18 = v23;

        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(v18);
        String.hash(into:)(a1, v22, v18);
        swift_unknownObjectRelease(v19);
        swift_bridgeObjectRelease(v18);
      }
      else
      {
        Hasher._combine(_:)(0);
        swift_unknownObjectRelease(v19);
        v18 = 0;
      }
      swift_bridgeObjectRelease(v18);
    }
    goto LABEL_20;
  }
  __break(1u);
}

Swift::Int sub_1001933A8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100193140((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1001933E8(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100193140((uint64_t)v2);
  return Hasher._finalize()();
}

BOOL sub_100193420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  Class isa;
  id v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  Class v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unsigned int v38;
  uint64_t v39;
  _BOOL8 v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  id v51;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD **)(v4 - 8);
  __chkstk_darwin(v4);
  v45 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v47 = (char *)&v44 - v8;
  v9 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v9);
  v48 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v46 = (char *)&v44 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v44 - v17;
  __chkstk_darwin(v19);
  v49 = (char *)&v44 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v44 - v22;
  __chkstk_darwin(v24);
  v50 = (uint64_t)&v44 - v25;
  v26 = *(void **)(a1 + 72);
  v51 = *(id *)(a2 + 72);
  isa = Date._bridgeToObjectiveC()().super.isa;
  v28 = objc_msgSend(v26, "serviceResumesAfterDate:", isa);

  if (v28)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

    v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v29(v23, 0, 1, v4);
  }
  else
  {
    v29 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7];
    v29(v23, 1, 1, v4);
  }
  v30 = v50;
  sub_10019713C((uint64_t)v23, v50);
  v31 = Date._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v51, "serviceResumesAfterDate:", v31);

  if (v32)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v32);

    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  v34 = (uint64_t)v49;
  v29(v18, v33, 1, v4);
  sub_10019713C((uint64_t)v18, v34);
  sub_100197184(v30, (uint64_t)v15);
  v35 = (unsigned int (*)(char *, uint64_t, uint64_t))v5[6];
  if (v35(v15, 1, v4) != 1)
  {
    v36 = (void (*)(char *, char *, uint64_t))v5[4];
    v37 = v47;
    v36(v47, v15, v4);
    v15 = v46;
    sub_100197184(v34, (uint64_t)v46);
    if (v35(v15, 1, v4) != 1)
    {
      v41 = v45;
      v36(v45, v15, v4);
      v40 = Date.compare(_:)(v41) == -1;
      v42 = (void (*)(char *, uint64_t))v5[1];
      v42(v41, v4);
      v42(v37, v4);
      sub_100010CC4(v34, (uint64_t *)&unk_10149E140);
      goto LABEL_15;
    }
    ((void (*)(char *, uint64_t))v5[1])(v37, v4);
  }
  sub_100010CC4((uint64_t)v15, (uint64_t *)&unk_10149E140);
  v38 = v35((char *)v30, 1, v4);
  v39 = v48;
  sub_10019713C(v34, v48);
  if (v38 == 1 && v35((char *)v39, 1, v4) == 1)
  {
    sub_100010CC4(v39, (uint64_t *)&unk_10149E140);
    v40 = 1;
  }
  else
  {
    sub_100010CC4(v39, (uint64_t *)&unk_10149E140);
    v40 = v35((char *)v30, 1, v4) != 1;
  }
LABEL_15:
  sub_100010CC4(v30, (uint64_t *)&unk_10149E140);
  return v40;
}

void sub_10019382C(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  Swift::Int v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  uint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  Swift::Int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  Swift::Int v51;
  Swift::Int v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  Swift::Int v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  __int128 *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  Swift::Int v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  uint64_t v145;
  Swift::Int v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  Swift::Int v151;
  _QWORD *v152;
  Swift::Int v153;
  char *v154;
  Swift::Int v155;
  Swift::Int v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  char *__dst;
  uint64_t v167;
  uint64_t v168;
  Swift::Int v169;
  Swift::Int v170;
  Swift::Int v171;
  Swift::Int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __int128 v181;
  uint64_t v182;
  uint64_t v183;
  __int128 v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;

  v4 = v3;
  v196 = a2;
  v5 = v2[1];
  v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_140;
    if (v5)
      sub_1001944B0(0, v5, 1, a1);
    return;
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 <= -2)
    goto LABEL_149;
  v155 = v5;
  v151 = v6;
  v149 = v2;
  if (v5 < 2)
  {
    v10 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    v152 = _swiftEmptyArrayStorage;
    if (v5 != 1)
    {
      v62 = _swiftEmptyArrayStorage[2];
      goto LABEL_103;
    }
  }
  else
  {
    v8 = v7 >> 1;
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7 >> 1, &type metadata for NearbyTransitDeparturesViewModel);
    *(_QWORD *)(v9 + 16) = v8;
    v152 = (_QWORD *)v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = *v2;
  v150 = *v2 + 128;
  v148 = *v2 + 80;
  v10 = (char *)_swiftEmptyArrayStorage;
  v13 = v155;
  v173 = *v2;
  do
  {
    v14 = v11;
    v15 = v11 + 1;
    v153 = v11;
    v154 = v10;
    if (v11 + 1 < v13)
    {
      v16 = (uint64_t *)(v12 + 88 * v15);
      v17 = v16[1];
      v18 = v16[2];
      v20 = v16[5];
      v19 = v16[6];
      v22 = v16[9];
      v21 = v16[10];
      v187 = *v16;
      v188 = v17;
      v189 = v18;
      v190 = *(_OWORD *)(v16 + 3);
      v191 = v20;
      v192 = v19;
      v193 = *(_OWORD *)(v16 + 7);
      v194 = v22;
      v195 = v21;
      v23 = (uint64_t *)(v12 + 88 * v11);
      v24 = v23[1];
      v25 = v23[2];
      v174 = v4;
      v27 = v23[5];
      v26 = v23[6];
      v29 = v23[9];
      v28 = v23[10];
      v178 = *v23;
      v179 = v24;
      v180 = v25;
      v181 = *(_OWORD *)(v23 + 3);
      v182 = v27;
      v183 = v26;
      v184 = *(_OWORD *)(v23 + 7);
      v30 = v190;
      v31 = v193;
      v32 = v181;
      v185 = v29;
      v186 = v28;
      v163 = v184;
      swift_bridgeObjectRetain(v184);
      swift_unknownObjectRetain(v29);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v30);
      swift_bridgeObjectRetain(v20);
      swift_bridgeObjectRetain(v31);
      swift_unknownObjectRetain(v22);
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v27);
      v158 = a1(&v187, &v178);
      if (v174)
      {
        swift_bridgeObjectRelease(v154);
        swift_unknownObjectRelease(v22);
        swift_bridgeObjectRelease(v31);
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRelease(v30);
        swift_bridgeObjectRelease(v17);
        swift_unknownObjectRelease(v29);
        swift_bridgeObjectRelease(v163);
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v32);
        v145 = v24;
        goto LABEL_116;
      }
      swift_unknownObjectRelease(v22);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease(v17);
      swift_unknownObjectRelease(v29);
      swift_bridgeObjectRelease(v163);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v24);
      v15 = v14 + 2;
      if (v14 + 2 < v155)
      {
        v33 = v150 + 88 * v14;
        while (1)
        {
          v169 = v15;
          v34 = *(_QWORD *)(v33 + 56);
          v35 = *(_QWORD *)(v33 + 64);
          v37 = *(_QWORD *)(v33 + 88);
          v36 = *(_QWORD *)(v33 + 96);
          v39 = *(_QWORD *)(v33 + 120);
          v38 = *(_QWORD *)(v33 + 128);
          v187 = *(_QWORD *)(v33 + 48);
          v188 = v34;
          v189 = v35;
          v190 = *(_OWORD *)(v33 + 72);
          v191 = v37;
          v192 = v36;
          v193 = *(_OWORD *)(v33 + 104);
          v194 = v39;
          v195 = v38;
          v40 = *(_QWORD *)(v33 - 40);
          v42 = *(_QWORD *)(v33 - 24);
          v44 = *(_QWORD *)v33;
          v43 = *(_QWORD *)(v33 + 8);
          v46 = *(_QWORD *)(v33 + 32);
          v45 = *(_QWORD *)(v33 + 40);
          v179 = *(_QWORD *)(v33 - 32);
          v41 = v179;
          v180 = v42;
          v181 = *(_OWORD *)(v33 - 16);
          v182 = v44;
          v183 = v43;
          v184 = *(_OWORD *)(v33 + 16);
          v185 = v46;
          v186 = v45;
          v47 = v190;
          v48 = v193;
          v49 = v181;
          v178 = v40;
          v159 = v184;
          swift_bridgeObjectRetain(v184);
          swift_unknownObjectRetain(v46);
          v164 = v34;
          swift_bridgeObjectRetain(v34);
          swift_bridgeObjectRetain(v47);
          swift_bridgeObjectRetain(v37);
          swift_bridgeObjectRetain(v48);
          swift_unknownObjectRetain(v39);
          swift_bridgeObjectRetain(v41);
          swift_bridgeObjectRetain(v49);
          swift_bridgeObjectRetain(v44);
          LODWORD(v34) = a1(&v187, &v178);
          swift_unknownObjectRelease(v39);
          swift_bridgeObjectRelease(v48);
          swift_bridgeObjectRelease(v37);
          swift_bridgeObjectRelease(v47);
          swift_bridgeObjectRelease(v164);
          swift_unknownObjectRelease(v46);
          swift_bridgeObjectRelease(v159);
          swift_bridgeObjectRelease(v44);
          swift_bridgeObjectRelease(v49);
          swift_bridgeObjectRelease(v41);
          if (((v158 ^ v34) & 1) != 0)
            break;
          v15 = v169 + 1;
          v33 += 88;
          if (v155 == v169 + 1)
          {
            v15 = v155;
            goto LABEL_21;
          }
        }
        v15 = v169;
LABEL_21:
        v14 = v153;
      }
      v12 = v173;
      v4 = 0;
      v10 = v154;
      if ((v158 & 1) != 0)
      {
        if (v15 < v14)
          goto LABEL_144;
        if (v14 < v15)
        {
          v50 = 88 * v15;
          v170 = v15;
          v51 = v14;
          v52 = v15;
          v53 = v51;
          v54 = 88 * v51;
          do
          {
            if (v53 != --v52)
            {
              if (!v12)
                goto LABEL_147;
              v55 = v12 + v50;
              v56 = *(_QWORD *)(v12 + v54);
              v57 = *(_QWORD *)(v12 + v54 + 8);
              v58 = *(_QWORD *)(v12 + v54 + 40);
              v167 = *(_QWORD *)(v12 + v54 + 32);
              v175 = *(_QWORD *)(v12 + v54 + 80);
              v165 = *(_OWORD *)(v12 + v54 + 64);
              v160 = *(_OWORD *)(v12 + v54 + 16);
              v161 = *(_OWORD *)(v12 + v54 + 48);
              memmove((void *)(v12 + v54), (const void *)(v12 + v50 - 88), 0x58uLL);
              *(_QWORD *)(v55 - 88) = v56;
              *(_QWORD *)(v55 - 80) = v57;
              *(_OWORD *)(v55 - 72) = v160;
              *(_QWORD *)(v55 - 56) = v167;
              *(_QWORD *)(v55 - 48) = v58;
              *(_OWORD *)(v55 - 40) = v161;
              *(_OWORD *)(v55 - 24) = v165;
              v12 = v173;
              *(_QWORD *)(v55 - 8) = v175;
              v10 = v154;
            }
            ++v53;
            v50 -= 88;
            v54 += 88;
          }
          while (v53 < v52);
          v15 = v170;
          v14 = v153;
        }
      }
    }
    if (v15 >= v155)
      goto LABEL_41;
    if (__OFSUB__(v15, v14))
      goto LABEL_141;
    if (v15 - v14 >= v151)
    {
LABEL_41:
      if (v15 < v14)
        goto LABEL_139;
      goto LABEL_42;
    }
    if (__OFADD__(v14, v151))
      goto LABEL_142;
    v59 = v155;
    if (v14 + v151 < v155)
      v59 = v14 + v151;
    if (v59 < v14)
    {
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
    if (v15 == v59)
      goto LABEL_41;
    v176 = v4;
    v110 = (_QWORD *)(v148 + 88 * v15);
    v146 = v59;
    do
    {
      v111 = (uint64_t *)(v12 + 88 * v15);
      v112 = *v111;
      v113 = v111[1];
      v114 = v111[2];
      v115 = v111[3];
      v116 = v111[4];
      v117 = v111[5];
      v118 = v111[6];
      v119 = *(_OWORD *)(v111 + 7);
      v121 = v111[9];
      v120 = v111[10];
      v147 = v110;
      v172 = v15;
      while (1)
      {
        v156 = v14;
        v187 = v112;
        v188 = v113;
        v189 = v114;
        *(_QWORD *)&v190 = v115;
        *((_QWORD *)&v190 + 1) = v116;
        v191 = v117;
        v193 = v119;
        v192 = v118;
        v194 = v121;
        v195 = v120;
        v122 = (__int128 *)(v110 - 21);
        v168 = *(v110 - 20);
        v123 = *(v110 - 19);
        v125 = *(v110 - 16);
        v124 = *(v110 - 15);
        v127 = *(v110 - 12);
        v126 = *(v110 - 11);
        v178 = *(v110 - 21);
        v179 = v168;
        v180 = v123;
        v181 = *((_OWORD *)v110 - 9);
        v182 = v125;
        v183 = v124;
        v184 = *((_OWORD *)v110 - 7);
        v128 = v119;
        v129 = v181;
        v185 = v127;
        v186 = v126;
        v130 = v115;
        v131 = v121;
        v157 = v184;
        swift_bridgeObjectRetain(v184);
        swift_unknownObjectRetain(v127);
        swift_bridgeObjectRetain(v113);
        v162 = v130;
        swift_bridgeObjectRetain(v130);
        swift_bridgeObjectRetain(v117);
        swift_bridgeObjectRetain(v128);
        swift_unknownObjectRetain(v131);
        swift_bridgeObjectRetain(v168);
        swift_bridgeObjectRetain(v129);
        swift_bridgeObjectRetain(v125);
        v132 = a1(&v187, &v178);
        if (v176)
        {
          swift_bridgeObjectRelease(v154);
          swift_unknownObjectRelease(v131);
          swift_bridgeObjectRelease(v128);
          swift_bridgeObjectRelease(v117);
          swift_bridgeObjectRelease(v130);
          swift_bridgeObjectRelease(v113);
          swift_unknownObjectRelease(v127);
          swift_bridgeObjectRelease(v157);
          swift_bridgeObjectRelease(v125);
          swift_bridgeObjectRelease(v129);
          v145 = v168;
LABEL_116:
          swift_bridgeObjectRelease(v145);
          goto LABEL_117;
        }
        v133 = v132;
        swift_unknownObjectRelease(v131);
        swift_bridgeObjectRelease(v128);
        swift_bridgeObjectRelease(v117);
        swift_bridgeObjectRelease(v162);
        swift_bridgeObjectRelease(v113);
        swift_unknownObjectRelease(v127);
        swift_bridgeObjectRelease(v157);
        swift_bridgeObjectRelease(v125);
        swift_bridgeObjectRelease(v129);
        swift_bridgeObjectRelease(v168);
        if ((v133 & 1) == 0)
          break;
        v134 = v172;
        v12 = v173;
        if (!v173)
          goto LABEL_146;
        v112 = *(v110 - 10);
        v113 = *(v110 - 9);
        v114 = *(v110 - 8);
        v115 = *(v110 - 7);
        v116 = *(v110 - 6);
        v117 = *(v110 - 5);
        v118 = *(v110 - 4);
        v119 = *(_OWORD *)(v110 - 3);
        v121 = *(v110 - 1);
        v120 = *v110;
        v135 = *(_OWORD *)(v110 - 15);
        *((_OWORD *)v110 - 3) = *(_OWORD *)(v110 - 17);
        *((_OWORD *)v110 - 2) = v135;
        *((_OWORD *)v110 - 1) = *(_OWORD *)(v110 - 13);
        *v110 = *(v110 - 11);
        v136 = *v122;
        v137 = *(_OWORD *)(v110 - 19);
        *(v110 - 11) = v120;
        v110 -= 11;
        *(__int128 *)((char *)v122 + 88) = v136;
        *(__int128 *)((char *)v122 + 104) = v137;
        *(v110 - 10) = v112;
        *(v110 - 9) = v113;
        *(v110 - 8) = v114;
        *(v110 - 7) = v115;
        *(v110 - 6) = v116;
        *(v110 - 5) = v117;
        *(v110 - 4) = v118;
        *(_OWORD *)(v110 - 3) = v119;
        v14 = v156 + 1;
        *(v110 - 1) = v121;
        if (v172 == v156 + 1)
          goto LABEL_99;
      }
      v134 = v172;
      v12 = v173;
LABEL_99:
      v15 = v134 + 1;
      v110 = v147 + 11;
      v14 = v153;
    }
    while (v15 != v146);
    v15 = v146;
    v4 = 0;
    v10 = v154;
    if (v146 < v153)
      goto LABEL_139;
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      v10 = sub_1000DCBFC(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v61 = *((_QWORD *)v10 + 2);
    v60 = *((_QWORD *)v10 + 3);
    v62 = v61 + 1;
    v12 = v173;
    if (v61 >= v60 >> 1)
    {
      v138 = sub_1000DCBFC((char *)(v60 > 1), v61 + 1, 1, v10);
      v12 = v173;
      v10 = v138;
    }
    *((_QWORD *)v10 + 2) = v62;
    v63 = v10 + 32;
    v64 = &v10[16 * v61 + 32];
    *(_QWORD *)v64 = v153;
    *((_QWORD *)v64 + 1) = v15;
    v171 = v15;
    if (v61)
    {
      while (2)
      {
        v65 = v62 - 1;
        if (v62 >= 4)
        {
          v70 = &v63[16 * v62];
          v71 = *((_QWORD *)v70 - 8);
          v72 = *((_QWORD *)v70 - 7);
          v76 = __OFSUB__(v72, v71);
          v73 = v72 - v71;
          if (v76)
            goto LABEL_124;
          v75 = *((_QWORD *)v70 - 6);
          v74 = *((_QWORD *)v70 - 5);
          v76 = __OFSUB__(v74, v75);
          v68 = v74 - v75;
          v69 = v76;
          if (v76)
            goto LABEL_125;
          v77 = v62 - 2;
          v78 = &v63[16 * v62 - 32];
          v80 = *(_QWORD *)v78;
          v79 = *((_QWORD *)v78 + 1);
          v76 = __OFSUB__(v79, v80);
          v81 = v79 - v80;
          if (v76)
            goto LABEL_127;
          v76 = __OFADD__(v68, v81);
          v82 = v68 + v81;
          if (v76)
            goto LABEL_130;
          if (v82 >= v73)
          {
            v100 = &v63[16 * v65];
            v102 = *(_QWORD *)v100;
            v101 = *((_QWORD *)v100 + 1);
            v76 = __OFSUB__(v101, v102);
            v103 = v101 - v102;
            if (v76)
              goto LABEL_134;
            v93 = v68 < v103;
          }
          else
          {
LABEL_60:
            if ((v69 & 1) != 0)
              goto LABEL_126;
            v77 = v62 - 2;
            v83 = &v63[16 * v62 - 32];
            v85 = *(_QWORD *)v83;
            v84 = *((_QWORD *)v83 + 1);
            v86 = __OFSUB__(v84, v85);
            v87 = v84 - v85;
            v88 = v86;
            if (v86)
              goto LABEL_129;
            v89 = &v63[16 * v65];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v76 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v76)
              goto LABEL_132;
            if (__OFADD__(v87, v92))
              goto LABEL_133;
            if (v87 + v92 < v68)
              goto LABEL_72;
            v93 = v68 < v92;
          }
          if (v93)
            v65 = v77;
        }
        else
        {
          if (v62 == 3)
          {
            v67 = *((_QWORD *)v10 + 4);
            v66 = *((_QWORD *)v10 + 5);
            v76 = __OFSUB__(v66, v67);
            v68 = v66 - v67;
            v69 = v76;
            goto LABEL_60;
          }
          v94 = *((_QWORD *)v10 + 4);
          v95 = *((_QWORD *)v10 + 5);
          v76 = __OFSUB__(v95, v94);
          v87 = v95 - v94;
          v88 = v76;
LABEL_72:
          if ((v88 & 1) != 0)
            goto LABEL_128;
          v96 = &v63[16 * v65];
          v98 = *(_QWORD *)v96;
          v97 = *((_QWORD *)v96 + 1);
          v76 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          if (v76)
            goto LABEL_131;
          if (v99 < v87)
            goto LABEL_89;
        }
        v104 = v65 - 1;
        if (v65 - 1 >= v62)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v12)
          goto LABEL_145;
        v105 = &v63[16 * v104];
        v106 = *(_QWORD *)v105;
        v107 = &v63[16 * v65];
        v108 = *((_QWORD *)v107 + 1);
        sub_100194720((char *)(v12 + 88 * *(_QWORD *)v105), (char *)(v12 + 88 * *(_QWORD *)v107), v12 + 88 * v108, __dst, a1);
        if (v4)
          goto LABEL_114;
        if (v108 < v106)
          goto LABEL_121;
        if (v65 > *((_QWORD *)v10 + 2))
          goto LABEL_122;
        *(_QWORD *)v105 = v106;
        *(_QWORD *)&v63[16 * v104 + 8] = v108;
        v109 = *((_QWORD *)v10 + 2);
        if (v65 >= v109)
          goto LABEL_123;
        v62 = v109 - 1;
        memmove(&v63[16 * v65], v107 + 16, 16 * (v109 - 1 - v65));
        *((_QWORD *)v10 + 2) = v109 - 1;
        v12 = v173;
        if (v109 <= 2)
          goto LABEL_89;
        continue;
      }
    }
    v62 = 1;
LABEL_89:
    v13 = v155;
    v11 = v171;
  }
  while (v171 < v155);
LABEL_103:
  if (v62 >= 2)
  {
    v139 = *v149;
    do
    {
      v140 = v62 - 2;
      if (v62 < 2)
        goto LABEL_135;
      if (!v139)
        goto LABEL_148;
      v141 = *(_QWORD *)&v10[16 * v140 + 32];
      v142 = *(_QWORD *)&v10[16 * v62 + 24];
      sub_100194720((char *)(v139 + 88 * v141), (char *)(v139 + 88 * *(_QWORD *)&v10[16 * v62 + 16]), v139 + 88 * v142, __dst, a1);
      if (v4)
        break;
      if (v142 < v141)
        goto LABEL_136;
      if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
        v10 = sub_1000DD110((uint64_t)v10);
      if (v140 >= *((_QWORD *)v10 + 2))
        goto LABEL_137;
      v143 = &v10[16 * v140 + 32];
      *(_QWORD *)v143 = v141;
      *((_QWORD *)v143 + 1) = v142;
      v144 = *((_QWORD *)v10 + 2);
      if (v62 > v144)
        goto LABEL_138;
      memmove(&v10[16 * v62 + 16], &v10[16 * v62 + 32], 16 * (v144 - v62));
      *((_QWORD *)v10 + 2) = v144 - 1;
      v62 = v144 - 1;
    }
    while (v144 > 2);
  }
LABEL_114:
  swift_bridgeObjectRelease(v10);
LABEL_117:
  v152[2] = 0;
  swift_bridgeObjectRelease(v152);
}

uint64_t sub_1001944B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, _QWORD *))
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[7];
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  if (a3 != a2)
  {
    v5 = *v4;
    v6 = (_QWORD *)(*v4 + 88 * a3 + 80);
    v34 = result;
    v37 = *v4;
LABEL_4:
    v7 = (uint64_t *)(v5 + 88 * a3);
    v8 = *v7;
    v9 = v7[1];
    v10 = v7[2];
    v11 = v7[3];
    v12 = v7[4];
    v13 = v7[5];
    v14 = v7[6];
    v15 = *(_OWORD *)(v7 + 7);
    v17 = v7[9];
    v16 = v7[10];
    v36 = v6;
    v38 = a3;
    while (1)
    {
      v40 = result;
      v18 = *(v6 - 21);
      v19 = *(v6 - 20);
      v20 = (__int128 *)(v6 - 21);
      v52[0] = v8;
      v52[1] = v9;
      v52[2] = v10;
      v52[3] = v11;
      v52[4] = v12;
      v52[5] = v13;
      v52[6] = v14;
      v53 = v15;
      v54 = v17;
      v55 = v16;
      v21 = *(v6 - 19);
      v23 = *(v6 - 16);
      v22 = *(v6 - 15);
      v25 = *(v6 - 12);
      v24 = *(v6 - 11);
      v45[0] = v18;
      v45[1] = v19;
      v43 = v19;
      v45[2] = v21;
      v46 = *((_OWORD *)v6 - 9);
      v47 = v23;
      v48 = v22;
      v49 = *((_OWORD *)v6 - 7);
      v41 = v15;
      v26 = v46;
      v44 = v49;
      v50 = v25;
      v51 = v24;
      v42 = v9;
      swift_bridgeObjectRetain(v49);
      swift_unknownObjectRetain(v25);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v11);
      v27 = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRetain(v41);
      swift_unknownObjectRetain(v17);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v23);
      v28 = v56;
      v29 = a4(v52, v45);
      swift_unknownObjectRelease(v17);
      swift_bridgeObjectRelease(v41);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v42);
      swift_unknownObjectRelease(v25);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v26);
      result = swift_bridgeObjectRelease(v43);
      v56 = v28;
      if (v28)
        break;
      if ((v29 & 1) == 0)
      {
        v5 = v37;
        v33 = v38;
LABEL_11:
        a3 = v33 + 1;
        v6 = v36 + 11;
        result = v34;
        if (a3 != a2)
          goto LABEL_4;
        return result;
      }
      v5 = v37;
      if (!v37)
      {
        __break(1u);
        return result;
      }
      v8 = *(v6 - 10);
      v9 = *(v6 - 9);
      v10 = *(v6 - 8);
      v11 = *(v6 - 7);
      v12 = *(v6 - 6);
      v13 = *(v6 - 5);
      v14 = *(v6 - 4);
      v15 = *(_OWORD *)(v6 - 3);
      v17 = *(v6 - 1);
      v16 = *v6;
      v30 = *(_OWORD *)(v6 - 15);
      *((_OWORD *)v6 - 3) = *(_OWORD *)(v6 - 17);
      *((_OWORD *)v6 - 2) = v30;
      *((_OWORD *)v6 - 1) = *(_OWORD *)(v6 - 13);
      *v6 = *(v6 - 11);
      v31 = *v20;
      v32 = *(_OWORD *)(v6 - 19);
      *(v6 - 11) = v16;
      v6 -= 11;
      *(__int128 *)((char *)v20 + 88) = v31;
      *(__int128 *)((char *)v20 + 104) = v32;
      *(v6 - 10) = v8;
      *(v6 - 9) = v9;
      *(v6 - 8) = v10;
      *(v6 - 7) = v11;
      *(v6 - 6) = v12;
      *(v6 - 5) = v13;
      *(v6 - 4) = v14;
      *(_OWORD *)(v6 - 3) = v15;
      result = v40 + 1;
      *(v6 - 1) = v17;
      v33 = v38;
      if (v38 == v40 + 1)
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_100194720(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t result;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *__dsta;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  const void *v99;
  void *v100[2];
  char *v101;

  v6 = v5;
  v7 = __dst;
  v8 = a2;
  v9 = __src;
  v10 = a2 - __src;
  v11 = (a2 - __src) / 88;
  v12 = a3 - (_QWORD)a2;
  v13 = (uint64_t)(a3 - (_QWORD)a2) / 88;
  v99 = __dst;
  v100[0] = __src;
  if (v11 >= v13)
  {
    if (v12 > -88)
    {
      if (__dst != a2 || &a2[88 * v13] <= __dst)
        memmove(__dst, a2, 88 * v13);
      v34 = &v7[88 * v13];
      v98 = v34;
      v100[0] = v8;
      if (v9 < v8 && v12 >= 88)
      {
        v35 = (char *)(a3 - 88);
        v36 = v8;
        v77 = v9;
        v79 = v7;
        while (1)
        {
          v73 = v6;
          __dsta = v35;
          v101 = v8;
          v65 = v34;
          v37 = *((_QWORD *)v34 - 11);
          v38 = *((_QWORD *)v34 - 10);
          v39 = v34 - 88;
          v40 = *((_QWORD *)v34 - 9);
          v41 = *((_QWORD *)v39 + 6);
          v72 = *((_QWORD *)v39 + 5);
          v43 = *((_QWORD *)v39 + 9);
          v42 = *((_QWORD *)v39 + 10);
          v44 = *(_OWORD *)(v39 + 24);
          v45 = *(_OWORD *)(v39 + 56);
          v89 = v37;
          v90 = v38;
          v91 = v40;
          v92 = v44;
          v93 = v72;
          v94 = v41;
          v95 = v45;
          v96 = v43;
          v97 = v42;
          v46 = *((_QWORD *)v36 - 11);
          v47 = *((_QWORD *)v36 - 10);
          v36 -= 88;
          v48 = *((_QWORD *)v36 + 2);
          v50 = *((_QWORD *)v36 + 5);
          v49 = *((_QWORD *)v36 + 6);
          v52 = *((_QWORD *)v36 + 9);
          v51 = *((_QWORD *)v36 + 10);
          v53 = *(_OWORD *)(v36 + 24);
          v54 = *(_OWORD *)(v36 + 56);
          v81 = v47;
          v82 = v48;
          v83 = v53;
          v84 = v50;
          v85 = v49;
          v86 = v54;
          v87 = v52;
          v88 = v51;
          v55 = v44;
          v56 = v45;
          v57 = v53;
          v80 = v46;
          v67 = v54;
          swift_bridgeObjectRetain(v54);
          swift_unknownObjectRetain(v52);
          swift_bridgeObjectRetain(v38);
          v66 = v55;
          swift_bridgeObjectRetain(v55);
          swift_bridgeObjectRetain(v72);
          swift_bridgeObjectRetain(v56);
          swift_unknownObjectRetain(v43);
          swift_bridgeObjectRetain(v47);
          swift_bridgeObjectRetain(v57);
          v69 = v50;
          swift_bridgeObjectRetain(v50);
          v58 = a5(&v89, &v80);
          if (v73)
            break;
          v59 = v58;
          v60 = __dsta + 88;
          swift_unknownObjectRelease(v43);
          swift_bridgeObjectRelease(v56);
          swift_bridgeObjectRelease(v72);
          swift_bridgeObjectRelease(v66);
          swift_bridgeObjectRelease(v38);
          swift_unknownObjectRelease(v52);
          swift_bridgeObjectRelease(v67);
          swift_bridgeObjectRelease(v69);
          swift_bridgeObjectRelease(v57);
          swift_bridgeObjectRelease(v47);
          if ((v59 & 1) != 0)
          {
            v61 = __dsta;
            if (v60 != v101 || __dsta >= v101)
              memmove(__dsta, v36, 0x58uLL);
            v100[0] = v36;
            v6 = 0;
            v62 = (unint64_t)v77;
            v34 = v65;
            if (v65 <= v79)
              goto LABEL_44;
          }
          else
          {
            v98 = v39;
            v61 = __dsta;
            if (v60 < v65 || __dsta >= v65)
            {
              memmove(__dsta, v39, 0x58uLL);
              v36 = v101;
              v34 = v39;
              v6 = 0;
            }
            else
            {
              v6 = 0;
              if (v60 != v65)
                memmove(__dsta, v39, 0x58uLL);
              v36 = v101;
              v34 = v39;
            }
            v62 = (unint64_t)v77;
            if (v34 <= v79)
              goto LABEL_44;
          }
          v35 = v61 - 88;
          v8 = v36;
          if ((unint64_t)v36 <= v62)
            goto LABEL_44;
        }
        swift_unknownObjectRelease(v43);
        swift_bridgeObjectRelease(v56);
        swift_bridgeObjectRelease(v72);
        swift_bridgeObjectRelease(v55);
        swift_bridgeObjectRelease(v38);
        swift_unknownObjectRelease(v52);
        swift_bridgeObjectRelease(v67);
        swift_bridgeObjectRelease(v50);
        swift_bridgeObjectRelease(v57);
        v63 = v47;
LABEL_47:
        swift_bridgeObjectRelease(v63);
        sub_1000DCEEC(v100, &v99, &v98);
        return 1;
      }
LABEL_44:
      sub_1000DCEEC(v100, &v99, &v98);
      return 1;
    }
  }
  else if (v10 > -88)
  {
    if (__dst != __src || &__src[88 * v11] <= __dst)
      memmove(__dst, __src, 88 * v11);
    v68 = &v7[88 * v11];
    v98 = v68;
    if ((unint64_t)v8 < a3 && v10 >= 88)
    {
      while (1)
      {
        v76 = v9;
        v14 = *((_QWORD *)v8 + 1);
        v15 = *((_QWORD *)v8 + 2);
        v17 = *((_QWORD *)v8 + 5);
        v16 = *((_QWORD *)v8 + 6);
        v19 = *((_QWORD *)v8 + 9);
        v18 = *((_QWORD *)v8 + 10);
        v89 = *(_QWORD *)v8;
        v90 = v14;
        v91 = v15;
        v92 = *(_OWORD *)(v8 + 24);
        v93 = v17;
        v94 = v16;
        v101 = v8;
        v95 = *(_OWORD *)(v8 + 56);
        v96 = v19;
        v97 = v18;
        v20 = *(_QWORD *)v7;
        v22 = *((_QWORD *)v7 + 2);
        v24 = *((_QWORD *)v7 + 5);
        v23 = *((_QWORD *)v7 + 6);
        v26 = *((_QWORD *)v7 + 9);
        v25 = *((_QWORD *)v7 + 10);
        v81 = *((_QWORD *)v7 + 1);
        v21 = v81;
        v82 = v22;
        v83 = *(_OWORD *)(v7 + 24);
        v84 = v24;
        v85 = v23;
        v78 = v7;
        v80 = v20;
        v86 = *(_OWORD *)(v7 + 56);
        v87 = v26;
        v88 = v25;
        v27 = v92;
        v28 = v95;
        v29 = v83;
        v71 = v86;
        swift_bridgeObjectRetain(v86);
        swift_unknownObjectRetain(v26);
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRetain(v27);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v28);
        swift_unknownObjectRetain(v19);
        swift_bridgeObjectRetain(v21);
        swift_bridgeObjectRetain(v29);
        swift_bridgeObjectRetain(v24);
        v30 = a5(&v89, &v80);
        if (v6)
        {
          swift_unknownObjectRelease(v19);
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v27);
          swift_bridgeObjectRelease(v14);
          swift_unknownObjectRelease(v26);
          swift_bridgeObjectRelease(v71);
          swift_bridgeObjectRelease(v24);
          swift_bridgeObjectRelease(v29);
          v63 = v21;
          goto LABEL_47;
        }
        v31 = v30;
        swift_unknownObjectRelease(v19);
        swift_bridgeObjectRelease(v28);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v27);
        swift_bridgeObjectRelease(v14);
        swift_unknownObjectRelease(v26);
        swift_bridgeObjectRelease(v71);
        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v29);
        swift_bridgeObjectRelease(v21);
        if ((v31 & 1) != 0)
        {
          v32 = v101 + 88;
          v33 = v76;
          v7 = v78;
          if (v76 >= v101 && v76 < v32)
          {
            v6 = 0;
            if (v76 != v101)
              memmove(v76, v101, 0x58uLL);
            goto LABEL_19;
          }
          memmove(v76, v101, 0x58uLL);
        }
        else
        {
          v33 = v76;
          v32 = v101;
          if (v76 != v78)
            memmove(v76, v78, 0x58uLL);
          v7 = v78 + 88;
          v99 = v78 + 88;
        }
        v6 = 0;
LABEL_19:
        v9 = v33 + 88;
        v100[0] = v9;
        if (v7 < v68)
        {
          v8 = v32;
          if ((unint64_t)v32 < a3)
            continue;
        }
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100194DB0(uint64_t *a1, uint64_t a2)
{
  id v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  BOOL v34;
  char v35;
  BOOL v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42;
  BOOL v43;
  int v44;
  BOOL v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  char v59;
  void *v60;
  BOOL v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  BOOL v71;
  int v72;
  BOOL v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  void *v83;
  unsigned int v84;
  void *v85;
  void *v86;
  void *v87;
  BOOL v88;
  int v89;
  BOOL v90;
  uint64_t v91;
  id v92;
  id v93;
  void *v94;
  id v95;
  void *v96;
  id v97;
  void *v98;
  void *v99;
  BOOL v100;
  char v101;
  void *v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  Block_layout *v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  Block_layout *v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  Block_layout *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  unsigned __int8 v120;
  void *v121;
  BOOL v122;
  char v123;
  BOOL v124;
  id v125;
  id v126;
  id v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  void *m;
  NSString *v132;
  void *v133;
  BOOL v134;
  char v135;
  BOOL v136;
  id v137;
  id v138;
  id v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  void *n;
  NSString *v144;
  void *v145;
  BOOL v146;
  char v147;
  BOOL v148;
  id v149;
  id v150;
  id v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  void *ii;
  GEOServerFormatToken *v156;
  void *v157;
  BOOL v158;
  char v159;
  BOOL v160;
  unsigned int v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned int v171;
  unsigned __int8 v172;
  void *v173;
  BOOL v174;
  int v175;
  BOOL v176;
  id v177;
  BOOL v178;
  char v179;
  BOOL v180;
  void *v181;
  void *v182;
  unsigned int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  void *v193;
  BOOL v194;
  int v195;
  BOOL v196;
  id v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  void *v201;
  void *v202;
  BOOL v203;
  int v204;
  BOOL v205;
  uint64_t v206;
  id v207;
  void *v208;
  void *v209;
  BOOL v210;
  char v211;
  BOOL v212;
  uint64_t v213;
  uint64_t v214;
  Block_layout *v215;
  uint64_t v216;
  uint64_t v217;
  Block_layout *v218;
  uint64_t v219;
  uint64_t v220;
  Block_layout *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  id v225;
  id v226;
  unsigned __int8 v227;
  void *v228;
  void *v229;
  void *v230;
  void *v231;
  void *v232;
  void *v233;
  BOOL v234;
  char v235;
  BOOL v236;
  id v237;
  id v238;
  id v239;
  id v240;
  uint64_t v241;
  void *i;
  NSString *v243;
  void *v244;
  BOOL v245;
  char v246;
  BOOL v247;
  id v248;
  id v249;
  id v250;
  uint64_t v251;
  void *j;
  NSString *v253;
  void *v254;
  BOOL v255;
  char v256;
  BOOL v257;
  id v258;
  id v259;
  id v260;
  uint64_t v261;
  void *k;
  GEOServerFormatToken *v263;
  void *v264;
  void *v265;
  void *v266;
  id v267;
  void *v268;
  void *v269;
  uint64_t v270;
  uint64_t v271;
  void *v272;
  void *v273;
  void *v274;
  id v275;
  id v276;
  id v277;
  id v278;
  int v279;
  void *v280;
  uint64_t v281;
  unsigned __int8 obj;
  id obja;
  id objb;
  id objc;
  uint64_t v286;
  id v287;
  uint64_t v288;
  uint64_t v289;
  id v290;
  uint64_t v291;
  id v292;
  _QWORD *v293;
  unint64_t v294;
  id v295;
  id v296;
  uint64_t v297;
  unsigned int v298;
  id v299;
  unsigned __int8 v300;
  int v301;
  uint64_t v302;
  int v303;
  id v304;
  unsigned __int8 v305;
  id v306;
  id v307;
  id v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _BYTE v313[128];
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;

  v5 = *a1;
  v6 = a1[1];
  v7 = *(_QWORD *)(a2 + 8);
  if (v5 != *(_QWORD *)a2 || v6 != v7)
  {
    v9 = 0;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, *(_QWORD *)a2, v7, 0) & 1) == 0)
      return v9;
  }
  if ((sub_100083168(a1[2], *(_QWORD *)(a2 + 16)) & 1) == 0
    || ((*((unsigned __int8 *)a1 + 32) ^ *(unsigned __int8 *)(a2 + 32)) & 1) != 0
    || ((*((unsigned __int8 *)a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) != 0)
  {
    return 0;
  }
  v10 = a1[7];
  v11 = a1[8];
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 64);
  if (v10 != v12 || v11 != v13)
  {
    v9 = 0;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0) & 1) == 0)
      return v9;
  }
  if (((*((unsigned __int8 *)a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0)
    return 0;
  v14 = a1[5];
  v312 = v14;
  v15 = (id)((unint64_t)v14 >> 62);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v25 = v14;
    else
      v25 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v14);
    v16 = _CocoaArrayWrapper.endIndex.getter(v25);
    sub_10008207C(&v312);
  }
  else
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v17 = *(_QWORD *)(a2 + 40);
  v311 = v17;
  v18 = (void *)((unint64_t)v17 >> 62);
  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v26 = v17;
    else
      v26 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v19 = _CocoaArrayWrapper.endIndex.getter(v26);
    sub_10008207C(&v311);
    if (v16 == v19)
      goto LABEL_17;
    return 0;
  }
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 != v19)
    return 0;
LABEL_17:
  if (v15)
  {
    if (v14 < 0)
      v21 = v14;
    else
      v21 = v14 & 0xFFFFFFFFFFFFFF8;
    sub_100185780(&v312);
    sub_100185780(&v311);
    v20 = (id)_CocoaArrayWrapper.endIndex.getter(v21);
  }
  else
  {
    v20 = *(id *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_100185780(&v312);
    sub_100185780(&v311);
  }
  if (!v20)
    goto LABEL_279;
  v22 = (void *)(v14 & 0xC000000000000001);
  if ((v14 & 0xC000000000000001) != 0)
  {
    v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v14);
    if (!v18)
    {
LABEL_27:
      v24 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_43;
    }
  }
  else
  {
    if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_431:
      __break(1u);
      goto LABEL_432;
    }
    v23 = *(_QWORD *)(v14 + 32);
    swift_unknownObjectRetain(v23);
    if (!v18)
      goto LABEL_27;
  }
  if (v17 < 0)
    v28 = v17;
  else
    v28 = v17 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v17);
  v24 = _CocoaArrayWrapper.endIndex.getter(v28);
  sub_10008207C(&v311);
LABEL_43:
  if (!v24)
  {
LABEL_278:
    swift_unknownObjectRelease(v23);
LABEL_279:
    v9 = 1;
    goto LABEL_280;
  }
  v309 = v17 & 0xC000000000000001;
  v310 = v24;
  if ((v17 & 0xC000000000000001) != 0)
  {
    v29 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_438;
    }
    v29 = *(_QWORD *)(v17 + 32);
    swift_unknownObjectRetain(v29);
  }
  v15 = (id)v23;
  v30 = (id)v29;
  v18 = v30;
  if (v23 | v29)
  {
    if (v15)
      v158 = v29 == 0;
    else
      v158 = 0;
    v159 = v158;
    if (v30)
      v160 = v23 == 0;
    else
      v160 = 0;
    if (v160
      || (v159 & 1) != 0
      || (v161 = objc_msgSend(v15, "artworkSourceType"),
          v161 != objc_msgSend(v18, "artworkSourceType"))
      || (v162 = objc_msgSend(v15, "artworkUseType"),
          v162 != objc_msgSend(v18, "artworkUseType")))
    {

      swift_unknownObjectRelease(v15);
      swift_unknownObjectRelease(v18);
      v9 = 0;
      goto LABEL_280;
    }
    v163 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "shieldDataSource"));
    v164 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "shieldDataSource"));
    v308 = (id)v163;
    v307 = (id)v164;
    if (!(v163 | v164))
    {
LABEL_295:
      v294 = (unint64_t)v22;
      v295 = v20;
      v165 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "iconDataSource"));
      v166 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "iconDataSource"));
      v20 = (id)v165;
      v167 = (id)v166;
      v2 = v167;
      if (v165 | v166)
      {
        if (v20)
          v178 = v166 == 0;
        else
          v178 = 0;
        v179 = v178;
        if (v167)
          v180 = v165 == 0;
        else
          v180 = 0;
        v181 = v20;
        v182 = v167;
        if (v180)
          goto LABEL_365;
        v181 = v20;
        v182 = v167;
        if ((v179 & 1) != 0)
          goto LABEL_365;
        v183 = objc_msgSend(v20, "iconType");
        v184 = objc_msgSend(v2, "iconType");
        v181 = v20;
        v182 = v2;
        if (v183 != v184)
          goto LABEL_365;
        v185 = objc_msgSend(v20, "cartoID");
        v186 = objc_msgSend(v2, "cartoID");
        v181 = v20;
        v182 = v2;
        if (v185 != v186)
          goto LABEL_365;
        v187 = objc_msgSend(v20, "defaultTransitType");
        v188 = objc_msgSend(v2, "defaultTransitType");
        v181 = v20;
        v182 = v2;
        if (v187 != v188)
          goto LABEL_365;
        v189 = objc_msgSend(v20, "iconAttributeKey");
        v190 = objc_msgSend(v2, "iconAttributeKey");
        v181 = v20;
        v182 = v2;
        if (v189 != v190)
          goto LABEL_365;
        v191 = objc_msgSend(v20, "iconAttributeValue");
        v192 = objc_msgSend(v2, "iconAttributeValue");

        if (v191 != v192)
          goto LABEL_366;
      }
      v270 = v14;
      v271 = v17;
      v168 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "iconFallbackShieldDataSource"));
      v169 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "iconFallbackShieldDataSource"));
      v306 = (id)v168;
      v304 = (id)v169;
      if (!(v168 | v169))
        goto LABEL_297;
      if (v306)
        v194 = v169 == 0;
      else
        v194 = 0;
      v195 = v194;
      if (v304)
        v196 = v168 == 0;
      else
        v196 = 0;
      if (v196 || v195 || (v197 = objc_msgSend(v306, "shieldType"), v197 != objc_msgSend(v304, "shieldType")))
      {

        v202 = v304;
      }
      else
      {
        v198 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v306, "shieldText"));
        if (!v198)
        {
          v302 = objc_claimAutoreleasedReturnValue(objc_msgSend(v304, "shieldText"));
          if (!v302)
          {
            v302 = 0;
            v301 = 0;
            goto LABEL_440;
          }
        }
        v199 = objc_claimAutoreleasedReturnValue(objc_msgSend(v306, "shieldText"));
        v200 = objc_claimAutoreleasedReturnValue(objc_msgSend(v304, "shieldText"));
        v17 = v199;
        v201 = (void *)v199;
        v14 = v200;
        if ((objc_msgSend(v201, "isEqualToString:") & 1) != 0)
        {
          v301 = 1;
LABEL_440:
          v231 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v306, "shieldColorString"));
          if (v231 || (v296 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v304, "shieldColorString"))) != 0)
          {
            v232 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v306, "shieldColorString"));
            v233 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v304, "shieldColorString"));
            LODWORD(v297) = objc_msgSend(v232, "isEqualToString:", v233);

            if (v231)
            {

              if (!v301)
                goto LABEL_445;
              goto LABEL_444;
            }
          }
          else
          {
            v296 = 0;
            LODWORD(v297) = 1;
          }

          if ((v301 & 1) == 0)
          {
LABEL_445:

            if (v198)
            {

            }
            else
            {

            }
            if ((v297 & 1) != 0)
            {
LABEL_297:
              v170 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "textDataSource"));
              v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "textDataSource"));
              v302 = (uint64_t)(id)v170;
              v299 = (id)v24;
              if (!(v170 | v24))
              {
LABEL_298:
                v171 = objc_msgSend(v15, "hasRoutingIncidentBadge");
                if (v171 != objc_msgSend(v18, "hasRoutingIncidentBadge"))
                {
LABEL_299:
                  v172 = 0;
                  goto LABEL_532;
                }
                v207 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "accessibilityText"));
                if (v207 || (v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "accessibilityText"))) != 0)
                {
                  v208 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "accessibilityText"));
                  v209 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "accessibilityText"));
                  v172 = objc_msgSend(v208, "isEqualToString:", v209);

                  if (!v207)
                    v207 = (id)v24;
                  goto LABEL_531;
                }
LABEL_438:
                v172 = 1;
                v207 = (id)v24;
                goto LABEL_531;
              }
              if (v302)
                v203 = v24 == 0;
              else
                v203 = 0;
              v204 = v203;
              if (v299)
                v205 = v170 == 0;
              else
                v205 = 0;
              if (v205 || v204)
              {

                v172 = 0;
                v207 = v299;
                goto LABEL_531;
              }
              v206 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v302, "text"));
              v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v299, "text"));
              v296 = (id)v206;
              v297 = (uint64_t)(id)v24;
              if (!(v206 | v24))
              {

                goto LABEL_298;
              }
              if (v296)
                v210 = v24 == 0;
              else
                v210 = 0;
              v211 = v210;
              if (v297)
                v212 = v206 == 0;
              else
                v212 = 0;
              if (v212 || (v211 & 1) != 0)
              {

                v207 = (id)v297;
LABEL_530:
                v172 = 0;
                goto LABEL_531;
              }
              v213 = objc_claimAutoreleasedReturnValue(objc_msgSend(v296, "formatStrings"));
              v214 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v297, "formatStrings"));
              v292 = (id)v213;
              v293 = (id)v214;
              v215 = &stru_1011A7C60;
              if (v213 | v214)
              {
                if (v292)
                  v234 = v214 == 0;
                else
                  v234 = 0;
                v235 = v234;
                if (v293)
                  v236 = v213 == 0;
                else
                  v236 = 0;
                if (v236)
                  goto LABEL_473;
                if ((v235 & 1) != 0)
                  goto LABEL_473;
                v237 = objc_msgSend(v292, "count");
                if (v237 != objc_msgSend(v293, "count"))
                  goto LABEL_473;
                v316 = 0u;
                v317 = 0u;
                v314 = 0u;
                v315 = 0u;
                v238 = v292;
                v239 = objc_msgSend(v238, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                if (v239)
                {
                  v240 = v239;
                  v241 = 0;
                  v291 = *(_QWORD *)v315;
                  while (2)
                  {
                    for (i = 0; i != v240; i = (char *)i + 1)
                    {
                      if (*(_QWORD *)v315 != v291)
                        objc_enumerationMutation(v238);
                      v243 = *(NSString **)(*((_QWORD *)&v314 + 1) + 8 * (_QWORD)i);
                      v244 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v293, "objectAtIndexedSubscript:", (char *)i + v241));
                      LODWORD(v243) = sub_100197550(v244, v243, (NSString *)v244);

                      if (!(_DWORD)v243)
                      {

                        goto LABEL_474;
                      }
                    }
                    v240 = objc_msgSend(v238, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                    v241 += (uint64_t)i;
                    if (v240)
                      continue;
                    break;
                  }
                }

              }
              else
              {

              }
              v216 = objc_claimAutoreleasedReturnValue(objc_msgSend(v296, "separators"));
              v217 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v297, "separators"));
              v290 = (id)v216;
              v207 = (id)v217;
              v218 = &stru_1011A7C80;
              if (v216 | v217)
              {
                if (v290)
                  v245 = v217 == 0;
                else
                  v245 = 0;
                v246 = v245;
                if (v207)
                  v247 = v216 == 0;
                else
                  v247 = 0;
                if (v247
                  || (v246 & 1) != 0
                  || (v248 = objc_msgSend(v290, "count"), v248 != objc_msgSend(v207, "count")))
                {

LABEL_529:
                  goto LABEL_530;
                }
                v316 = 0u;
                v317 = 0u;
                v314 = 0u;
                v315 = 0u;
                objc = v290;
                v249 = objc_msgSend(objc, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                if (v249)
                {
                  v250 = v249;
                  v251 = 0;
                  v288 = *(_QWORD *)v315;
                  while (2)
                  {
                    for (j = 0; j != v250; j = (char *)j + 1)
                    {
                      if (*(_QWORD *)v315 != v288)
                        objc_enumerationMutation(objc);
                      v253 = *(NSString **)(*((_QWORD *)&v314 + 1) + 8 * (_QWORD)j);
                      v254 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v207, "objectAtIndexedSubscript:", (char *)j + v251));
                      LODWORD(v253) = sub_100197550(v254, v253, (NSString *)v254);

                      if (!(_DWORD)v253)
                      {

                        v266 = objc;
                        goto LABEL_528;
                      }
                    }
                    v250 = objc_msgSend(objc, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                    v251 += (uint64_t)j;
                    if (v250)
                      continue;
                    break;
                  }
                }

              }
              else
              {

              }
              v219 = objc_claimAutoreleasedReturnValue(objc_msgSend(v296, "formatTokens"));
              v220 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v297, "formatTokens"));
              objb = (id)v219;
              v287 = (id)v220;
              v221 = &stru_1011A7CA0;
              if (!(v219 | v220))
              {

                goto LABEL_414;
              }
              if (objb)
                v255 = v220 == 0;
              else
                v255 = 0;
              v256 = v255;
              if (v287)
                v257 = v219 == 0;
              else
                v257 = 0;
              if (!v257 && (v256 & 1) == 0)
              {
                v258 = objc_msgSend(objb, "count");
                if (v258 == objc_msgSend(v287, "count"))
                {
                  v316 = 0u;
                  v317 = 0u;
                  v314 = 0u;
                  v315 = 0u;
                  v278 = objb;
                  v259 = objc_msgSend(v278, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                  if (v259)
                  {
                    v260 = v259;
                    v261 = 0;
                    v281 = *(_QWORD *)v315;
                    while (2)
                    {
                      for (k = 0; k != v260; k = (char *)k + 1)
                      {
                        if (*(_QWORD *)v315 != v281)
                          objc_enumerationMutation(v278);
                        v263 = *(GEOServerFormatToken **)(*((_QWORD *)&v314 + 1) + 8 * (_QWORD)k);
                        v264 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v287, "objectAtIndexedSubscript:", (char *)k + v261));
                        LODWORD(v263) = sub_100197558(v264, v263, (GEOServerFormatToken *)v264);

                        if (!(_DWORD)v263)
                        {
                          v266 = v287;

                          v265 = v278;
                          goto LABEL_522;
                        }
                      }
                      v260 = objc_msgSend(v278, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                      v261 += (uint64_t)k;
                      if (v260)
                        continue;
                      break;
                    }
                  }

LABEL_414:
                  v222 = objc_claimAutoreleasedReturnValue(objc_msgSend(v296, "alternativeString"));
                  v223 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v297, "alternativeString"));
                  v224 = v222 | v223;
                  v225 = (id)v222;
                  v226 = (id)v223;
                  if (v224)
                    v227 = objc_msgSend(v225, "isEqual:", v226);
                  else
                    v227 = 1;

                  v24 = v297;
                  if ((v227 & 1) == 0)
                    goto LABEL_299;
                  goto LABEL_298;
                }
              }
              v265 = objb;

              v266 = v287;
LABEL_522:

LABEL_528:
              goto LABEL_529;
            }
            goto LABEL_364;
          }
LABEL_444:

          goto LABEL_445;
        }

        v202 = (void *)v302;
        if (v198)
          v202 = v198;
      }

LABEL_364:
      v182 = v304;
      v181 = v306;
LABEL_365:

LABEL_366:
      swift_unknownObjectRelease(v15);

      swift_unknownObjectRelease(v18);
      v9 = 0;
      goto LABEL_280;
    }
    v173 = v307;
    if (v308)
      v174 = v164 == 0;
    else
      v174 = 0;
    v175 = v174;
    if (v307)
      v176 = v163 == 0;
    else
      v176 = 0;
    if (v176
      || v175
      || (v294 = v14 & 0xC000000000000001,
          v295 = v20,
          v177 = objc_msgSend(v308, "shieldType"),
          v177 != objc_msgSend(v307, "shieldType")))
    {

    }
    else
    {
      v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldText"));
      if (!v19)
      {
        v306 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v307, "shieldText"));
        if (!v306)
        {
          v306 = 0;
          LODWORD(v302) = 0;
          goto LABEL_417;
        }
      }
      v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldText"));
      v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v307, "shieldText"));
      if ((objc_msgSend(v2, "isEqualToString:", v20) & 1) != 0)
      {
        LODWORD(v302) = 1;
LABEL_417:
        v228 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldColorString"));
        if (v228 || (v299 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v307, "shieldColorString"))) != 0)
        {
          v229 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldColorString"));
          v230 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v307, "shieldColorString"));
          v305 = objc_msgSend(v229, "isEqualToString:", v230);

          if (v228)
          {

            if (!(_DWORD)v302)
              goto LABEL_422;
            goto LABEL_421;
          }
LABEL_433:

          if ((v302 & 1) == 0)
          {
LABEL_422:

            if (v19)
            {

            }
            else
            {

            }
            v22 = (void *)v294;
            v20 = v295;
            if ((v305 & 1) != 0)
              goto LABEL_295;
LABEL_391:

            swift_unknownObjectRelease(v15);
            swift_unknownObjectRelease(v18);

            v9 = 0;
            goto LABEL_280;
          }
LABEL_421:

          goto LABEL_422;
        }
LABEL_432:
        v299 = 0;
        v305 = 1;
        goto LABEL_433;
      }

      if (v19)
        v173 = (void *)v19;
      else
        v173 = v306;
    }

    goto LABEL_391;
  }
  swift_unknownObjectRelease(v15);
  swift_unknownObjectRelease(v18);
  do
  {
    if (v20 == (id)1)
      goto LABEL_279;
    v292 = (id)(v14 + 32);
    v293 = (_QWORD *)(v14 & 0xFFFFFFFFFFFFFF8);
    v286 = v17 + 32;
    v289 = v17 & 0xFFFFFFFFFFFFFF8;
    v19 = 1;
    v294 = (unint64_t)v22;
    v295 = v20;
    while (1)
    {
      if (v22)
      {
        v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v14);
        goto LABEL_57;
      }
      if (v19 >= v293[2])
        break;
      v23 = *((_QWORD *)v292 + v19);
      swift_unknownObjectRetain(v23);
LABEL_57:
      v2 = (id)(v19 + 1);
      if (__OFADD__(v19, 1))
        goto LABEL_431;
      if (v19 == v310)
        goto LABEL_278;
      if (v309)
      {
        v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v17);
      }
      else
      {
        if (v19 >= *(_QWORD *)(v289 + 16))
          goto LABEL_472;
        v31 = *(_QWORD *)(v286 + 8 * v19);
        swift_unknownObjectRetain(v31);
      }
      v18 = (void *)(v23 | v31);
      v32 = (id)v23;
      v33 = (id)v31;
      v15 = v33;
      if (!(v23 | v31))
      {
        swift_unknownObjectRelease(v32);
        swift_unknownObjectRelease(v15);
        goto LABEL_52;
      }
      if (v32)
        v34 = v31 == 0;
      else
        v34 = 0;
      v35 = v34;
      if (v33)
        v36 = v23 == 0;
      else
        v36 = 0;
      if (v36
        || (v35 & 1) != 0
        || (v37 = objc_msgSend(v32, "artworkSourceType"),
            v37 != objc_msgSend(v15, "artworkSourceType"))
        || (v38 = objc_msgSend(v32, "artworkUseType"),
            v38 != objc_msgSend(v15, "artworkUseType")))
      {
        swift_unknownObjectRelease(v32);
        swift_unknownObjectRelease(v15);
        goto LABEL_373;
      }
      v306 = v2;
      v39 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "shieldDataSource"));
      v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "shieldDataSource"));
      v41 = (id)v39;
      v42 = (id)v40;
      v307 = v32;
      v308 = v41;
      v304 = v42;
      if (v39 | v40)
      {
        if (v41)
          v43 = v40 == 0;
        else
          v43 = 0;
        v44 = v43;
        if (v42)
          v45 = v39 == 0;
        else
          v45 = 0;
        v46 = v42;
        if (v45 || v44 || (v47 = v41, v48 = objc_msgSend(v41, "shieldType"), v48 != objc_msgSend(v46, "shieldType")))
        {

LABEL_359:
          v46 = v304;
          v47 = v308;
LABEL_360:
          swift_unknownObjectRelease(v32);
          swift_unknownObjectRelease(v15);

          v32 = v47;
          v15 = v46;
LABEL_373:

          v9 = 0;
          goto LABEL_280;
        }
        v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "shieldText"));
        if (v49 || (v297 = objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "shieldText"))) != 0)
        {
          v41 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "shieldText"));
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "shieldText"));
          if ((objc_msgSend(v41, "isEqualToString:", v22) & 1) == 0)
          {

            if (v49)
              v46 = v49;
            else
              v46 = (void *)v297;
            goto LABEL_359;
          }
          v303 = 1;
        }
        else
        {
          v297 = 0;
          v303 = 0;
        }
        v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldColorString"));
        if (v50 || (v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v46, "shieldColorString"))) != 0)
        {
          v51 = v15;
          v52 = objc_claimAutoreleasedReturnValue(objc_msgSend(v308, "shieldColorString"));
          v53 = v46;
          v54 = (void *)v52;
          v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v53, "shieldColorString"));
          v300 = objc_msgSend(v54, "isEqualToString:", v55);

          if (v50)
          {

            v15 = v51;
            v32 = v307;
            v47 = v308;
            v46 = v304;
            if (v303)
              goto LABEL_98;
            goto LABEL_99;
          }
          v15 = v51;
          v46 = v304;
          v47 = v308;
        }
        else
        {
          v300 = 1;
        }

        v32 = v307;
        if ((v303 & 1) != 0)
        {
LABEL_98:

        }
LABEL_99:

        if (v49)
        {

        }
        else
        {

        }
        if ((v300 & 1) == 0)
          goto LABEL_360;
      }
      v56 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "iconDataSource"));
      v57 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "iconDataSource"));
      v302 = (uint64_t)(id)v56;
      v299 = (id)v57;
      v2 = v306;
      if (v56 | v57)
      {
        if (v302)
          v58 = v57 == 0;
        else
          v58 = 0;
        v59 = v58;
        v60 = v299;
        if (v299)
          v61 = v56 == 0;
        else
          v61 = 0;
        if (v61
          || (v59 & 1) != 0
          || (v62 = objc_msgSend((id)v302, "iconType"), v62 != objc_msgSend(v299, "iconType"))|| (v63 = objc_msgSend((id)v302, "cartoID"), v63 != objc_msgSend(v299, "cartoID"))|| (v64 = objc_msgSend((id)v302, "defaultTransitType"), v64 != objc_msgSend(v299, "defaultTransitType"))|| (v65 = objc_msgSend((id)v302, "iconAttributeKey"), v65 != objc_msgSend(v299, "iconAttributeKey")))
        {
          v69 = (id)v302;
          goto LABEL_371;
        }
        v298 = objc_msgSend((id)v302, "iconAttributeValue");
        v66 = objc_msgSend(v299, "iconAttributeValue");

        if (v298 != v66)
          goto LABEL_372;
      }
      v67 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "iconFallbackShieldDataSource"));
      v68 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "iconFallbackShieldDataSource"));
      v69 = (id)v67;
      v70 = (id)v68;
      if (v67 | v68)
      {
        if (v69)
          v71 = v68 == 0;
        else
          v71 = 0;
        v72 = v71;
        if (v70)
          v73 = v67 == 0;
        else
          v73 = 0;
        v60 = v70;
        if (v73 || v72 || (v74 = objc_msgSend(v69, "shieldType"), v74 != objc_msgSend(v60, "shieldType")))
        {

          v193 = v60;
LABEL_370:

LABEL_371:
LABEL_372:
          swift_unknownObjectRelease(v32);
          swift_unknownObjectRelease(v15);

          v15 = v299;
          v32 = (id)v302;
          goto LABEL_373;
        }
        v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "shieldText"));
        if (v75 || (v273 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v60, "shieldText"))) != 0)
        {
          v74 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "shieldText"));
          v32 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v60, "shieldText"));
          if ((objc_msgSend(v74, "isEqualToString:", v32) & 1) == 0)
          {

            v193 = v273;
            if (v75)
              v193 = v75;
            v32 = v307;
            goto LABEL_370;
          }
          v279 = 1;
        }
        else
        {
          v273 = 0;
          v279 = 0;
        }
        v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "shieldColorString"));
        if (v76 || (v272 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v60, "shieldColorString"))) != 0)
        {
          v274 = v75;
          v276 = v15;
          v77 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "shieldColorString"));
          v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v60, "shieldColorString"));
          obj = objc_msgSend(v77, "isEqualToString:", v78);

          if (v76)
          {

            v75 = v274;
            v15 = v276;
            v2 = v306;
            if (v279)
              goto LABEL_141;
            goto LABEL_142;
          }
          v75 = v274;
          v15 = v276;
          v99 = v272;
        }
        else
        {
          v99 = 0;
          obj = 1;
        }

        v2 = v306;
        if ((v279 & 1) != 0)
        {
LABEL_141:

        }
LABEL_142:
        v32 = v307;

        if (v75)
        {

        }
        else
        {

        }
        v70 = v60;
        if ((obj & 1) == 0)
          goto LABEL_371;
      }
      v296 = v69;
      v297 = (uint64_t)v70;
      v79 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "textDataSource"));
      v80 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "textDataSource"));
      v81 = (id)v79;
      v82 = (id)v80;
      v83 = v82;
      if (v79 | v80)
      {
        if (v81)
          v88 = v80 == 0;
        else
          v88 = 0;
        v89 = v88;
        if (v82)
          v90 = v79 == 0;
        else
          v90 = 0;
        v86 = v82;
        if (v90 || v89)
        {
          obja = v81;

          v9 = 0;
          v95 = v83;
LABEL_168:
          v18 = v307;
          v87 = v296;
          goto LABEL_169;
        }
        v91 = objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "text"));
        v80 = objc_claimAutoreleasedReturnValue(objc_msgSend(v83, "text"));
        v92 = (id)v91;
        v93 = (id)v80;
        if (v91 | v80)
        {
          if (v92)
            v100 = v80 == 0;
          else
            v100 = 0;
          v101 = v100;
          v102 = v93;
          if (v93)
            v103 = v91 == 0;
          else
            v103 = 0;
          obja = v81;
          if (v103 || (v101 & 1) != 0)
          {

            v9 = 0;
            v95 = v102;
            goto LABEL_168;
          }
          v280 = v92;
          v104 = objc_claimAutoreleasedReturnValue(objc_msgSend(v92, "formatStrings"));
          v105 = objc_claimAutoreleasedReturnValue(objc_msgSend(v102, "formatStrings"));
          v106 = (id)v104;
          v275 = (id)v105;
          v107 = &stru_1011A7C60;
          v277 = v15;
          v273 = v86;
          v270 = v14;
          v271 = v17;
          if (v104 | v105)
          {
            v121 = v102;
            if (v106)
              v122 = v105 == 0;
            else
              v122 = 0;
            v123 = v122;
            v95 = v275;
            if (v275)
              v124 = v104 == 0;
            else
              v124 = 0;
            if (v124 || (v123 & 1) != 0 || (v125 = objc_msgSend(v106, "count"), v125 != objc_msgSend(v275, "count")))
            {

LABEL_225:
              v86 = v273;

              goto LABEL_277;
            }
            v316 = 0u;
            v317 = 0u;
            v314 = 0u;
            v315 = 0u;
            v269 = v106;
            v126 = v106;
            v127 = objc_msgSend(v126, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
            if (v127)
            {
              v128 = v127;
              v129 = 0;
              v130 = *(_QWORD *)v315;
              while (2)
              {
                for (m = 0; m != v128; m = (char *)m + 1)
                {
                  if (*(_QWORD *)v315 != v130)
                    objc_enumerationMutation(v126);
                  v132 = *(NSString **)(*((_QWORD *)&v314 + 1) + 8 * (_QWORD)m);
                  v133 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v275, "objectAtIndexedSubscript:", (char *)m + v129));
                  LODWORD(v132) = sub_100197550(v133, v132, (NSString *)v133);

                  if (!(_DWORD)v132)
                  {

                    v95 = v275;
                    v106 = v269;
                    goto LABEL_225;
                  }
                }
                v128 = objc_msgSend(v126, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                v129 += (uint64_t)m;
                if (v128)
                  continue;
                break;
              }
            }

            v102 = v121;
          }
          else
          {
            v269 = v106;

          }
          v108 = objc_claimAutoreleasedReturnValue(objc_msgSend(v280, "separators"));
          v272 = v102;
          v109 = objc_claimAutoreleasedReturnValue(objc_msgSend(v102, "separators"));
          v110 = (id)v108;
          v95 = (id)v109;
          v111 = &stru_1011A7C80;
          v268 = v110;
          if (v108 | v109)
          {
            if (v110)
              v134 = v109 == 0;
            else
              v134 = 0;
            v135 = v134;
            if (v95)
              v136 = v108 == 0;
            else
              v136 = 0;
            if (v136 || (v135 & 1) != 0 || (v137 = objc_msgSend(v110, "count"), v137 != objc_msgSend(v95, "count")))
            {

LABEL_276:
              v86 = v273;

LABEL_277:
              v9 = 0;
              v15 = v277;
              v2 = v306;
              v18 = v307;
              v87 = v296;
              v14 = v270;
              v17 = v271;
              goto LABEL_169;
            }
            v316 = 0u;
            v317 = 0u;
            v314 = 0u;
            v315 = 0u;
            v138 = v110;
            v139 = objc_msgSend(v138, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
            if (v139)
            {
              v140 = v139;
              v141 = 0;
              v142 = *(_QWORD *)v315;
              while (2)
              {
                for (n = 0; n != v140; n = (char *)n + 1)
                {
                  if (*(_QWORD *)v315 != v142)
                    objc_enumerationMutation(v138);
                  v144 = *(NSString **)(*((_QWORD *)&v314 + 1) + 8 * (_QWORD)n);
                  v145 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v95, "objectAtIndexedSubscript:", (char *)n + v141));
                  LODWORD(v144) = sub_100197550(v145, v144, (NSString *)v145);

                  if (!(_DWORD)v144)
                  {

                    goto LABEL_276;
                  }
                }
                v140 = objc_msgSend(v138, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                v141 += (uint64_t)n;
                if (v140)
                  continue;
                break;
              }
            }

          }
          else
          {

          }
          v112 = objc_claimAutoreleasedReturnValue(objc_msgSend(v280, "formatTokens"));
          v113 = objc_claimAutoreleasedReturnValue(objc_msgSend(v272, "formatTokens"));
          v267 = (id)v112;
          v114 = (id)v113;
          v115 = &stru_1011A7CA0;
          if (v112 | v113)
          {
            if (v267)
              v146 = v113 == 0;
            else
              v146 = 0;
            v147 = v146;
            if (v114)
              v148 = v112 == 0;
            else
              v148 = 0;
            if (v148 || (v147 & 1) != 0 || (v149 = objc_msgSend(v267, "count"), v149 != objc_msgSend(v114, "count")))
            {

              goto LABEL_276;
            }
            v316 = 0u;
            v317 = 0u;
            v314 = 0u;
            v315 = 0u;
            v150 = v267;
            v151 = objc_msgSend(v150, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
            if (v151)
            {
              v152 = v151;
              v153 = 0;
              v154 = *(_QWORD *)v315;
              while (2)
              {
                for (ii = 0; ii != v152; ii = (char *)ii + 1)
                {
                  if (*(_QWORD *)v315 != v154)
                    objc_enumerationMutation(v150);
                  v156 = *(GEOServerFormatToken **)(*((_QWORD *)&v314 + 1) + 8 * (_QWORD)ii);
                  v157 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v114, "objectAtIndexedSubscript:", (char *)ii + v153));
                  LODWORD(v156) = sub_100197558(v157, v156, (GEOServerFormatToken *)v157);

                  if (!(_DWORD)v156)
                  {

                    goto LABEL_276;
                  }
                }
                v152 = objc_msgSend(v150, "countByEnumeratingWithState:objects:count:", &v314, v313, 16);
                v153 += (uint64_t)ii;
                if (v152)
                  continue;
                break;
              }
            }

          }
          else
          {

          }
          v116 = objc_claimAutoreleasedReturnValue(objc_msgSend(v280, "alternativeString"));
          v117 = objc_claimAutoreleasedReturnValue(objc_msgSend(v272, "alternativeString"));
          v118 = v116 | v117;
          v80 = (uint64_t)(id)v116;
          v119 = (id)v117;
          if (v118)
            v120 = objc_msgSend((id)v80, "isEqual:", v119);
          else
            v120 = 1;

          v83 = v273;
          v81 = obja;

          v15 = v277;
          v2 = v306;
          v32 = v307;
          v14 = v270;
          v17 = v271;
          if ((v120 & 1) == 0)
          {
            v9 = 0;
            v18 = v307;
            goto LABEL_149;
          }
        }
        else
        {
          v94 = v93;

          v83 = v86;
          v32 = v307;
        }
      }
      v84 = objc_msgSend(v32, "hasRoutingIncidentBadge");
      v18 = v32;
      if (v84 != objc_msgSend(v15, "hasRoutingIncidentBadge"))
      {
        v9 = 0;
LABEL_149:
        v85 = v299;
        v86 = v83;
        v87 = v296;
        goto LABEL_170;
      }
      obja = v81;
      v95 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "accessibilityText"));
      if (v95 || (v80 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "accessibilityText"))) != 0)
      {
        v96 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "accessibilityText"));
        v97 = v15;
        v98 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "accessibilityText"));
        v9 = (uint64_t)objc_msgSend(v96, "isEqualToString:", v98);

        v15 = v97;
        v18 = v307;
        v86 = v83;
        v87 = v296;
        if (!v95)
          v95 = (id)v80;
      }
      else
      {
        v9 = 1;
        v86 = v83;
        v87 = v296;
        v95 = 0;
      }
LABEL_169:

      v85 = v299;
      v81 = obja;
LABEL_170:

      swift_unknownObjectRelease(v18);
      swift_unknownObjectRelease(v15);

      v22 = (void *)v294;
      v20 = v295;
      if (!(_DWORD)v9)
        goto LABEL_280;
LABEL_52:
      v9 = 1;
      v19 = (unint64_t)v2;
      if (v2 == v20)
        goto LABEL_280;
    }
    __break(1u);
LABEL_472:
    __break(1u);
LABEL_473:

LABEL_474:
    v172 = 0;
    v207 = v293;
LABEL_531:

LABEL_532:
    swift_unknownObjectRelease(v15);

    swift_unknownObjectRelease(v18);
    v22 = (void *)v294;
    v20 = v295;
    v14 = v270;
    v17 = v271;
  }
  while ((v172 & 1) != 0);
  v9 = 0;
LABEL_280:
  sub_10008207C(&v312);
  sub_10008207C(&v311);
  return v9;
}

uint64_t destroy for NearbyTransitLinesSectionViewModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  swift_unknownObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[8]);
}

uint64_t initializeWithCopy for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_unknownObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_unknownObjectRetain(v8);
  swift_unknownObjectRelease(v9);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NearbyTransitLinesSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRelease(v5);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v6);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitLinesSectionViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitLinesSectionViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NearbyTransitLinesSectionViewModel()
{
  return &type metadata for NearbyTransitLinesSectionViewModel;
}

BOOL sub_100197120(uint64_t a1, uint64_t a2)
{
  return sub_100193420(a1, a2);
}

uint64_t sub_10019713C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149E140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100197184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008B04((uint64_t *)&unk_10149E140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1001971CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  Class isa;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  Class v35;
  Class v36;
  Class v37;
  id v38;
  uint64_t v39;
  char *v40;

  v4 = sub_100008B04((uint64_t *)&unk_10149E730);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TimeZone(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v40 = (char *)&v39 - v12;
  v13 = sub_100008B04((uint64_t *)&unk_10149E140);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v39 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v39 - v20;
  v22 = *(void **)(a1 + 72);
  v39 = a2;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v22, "serviceResumesAfterDate:", isa);

  if (v24)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v24);

    v25 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 0, 1, v25);
  }
  else
  {
    v26 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v18, 1, 1, v26);
  }
  sub_10019713C((uint64_t)v18, (uint64_t)v21);
  v27 = objc_msgSend(v22, "timeZone");
  if (v27)
  {
    v29 = v27;
    static TimeZone._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

    v30 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v30(v6, v10, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    v32 = v40;
    if ((_DWORD)v31 != 1)
    {
      v30(v40, v6, v7);
      goto LABEL_9;
    }
  }
  else
  {
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    v32 = v40;
  }
  static TimeZone.current.getter(v31);
  sub_100010CC4((uint64_t)v6, (uint64_t *)&unk_10149E730);
LABEL_9:
  sub_100197184((uint64_t)v21, (uint64_t)v15);
  v33 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v15, 1, v33) != 1)
  {
    v35 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v33);
  }
  v36 = Date._bridgeToObjectiveC()().super.isa;
  v37 = TimeZone._bridgeToObjectiveC()().super.isa;
  v38 = (id)MKServiceGapDescription(v35, v36, v37, 0);

  if (v38)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v38);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v32, v7);
    sub_100010CC4((uint64_t)v21, (uint64_t *)&unk_10149E140);
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_100197558(id a1, GEOServerFormatToken *a2, GEOServerFormatToken *a3)
{
  GEOServerFormatToken *v4;
  GEOServerFormatToken *v5;
  char v6;

  v4 = a2;
  v5 = a3;
  v6 = GEOServerFormatTokenEqual(v4, v5);

  return v6;
}

unint64_t sub_1001975AC()
{
  unint64_t result;

  result = qword_10149E740;
  if (!qword_10149E740)
  {
    result = swift_getWitnessTable("Qk7", &type metadata for NearbyTransitGroupViewModel);
    atomic_store(result, (unint64_t *)&qword_10149E740);
  }
  return result;
}

uint64_t sub_1001975F0()
{
  __int128 *v0;
  Swift::String v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  __int128 v9;
  __int128 v10;

  v9 = *v0;
  v10 = *v0;
  sub_10006E484((uint64_t)&v10);
  v1._countAndFlagsBits = 95;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  if ((v0[3] & 1) != 0)
    v2 = 1702195828;
  else
    v2 = 0x65736C6166;
  if ((v0[3] & 1) != 0)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  return v9;
}

uint64_t sub_1001976C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1001975F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001976E8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_100197B6C((uint64_t *)v7, (uint64_t)v8) & 1;
}

void sub_100197730(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::UInt v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[3];
  _BYTE v22[25];

  v2 = v1;
  v4 = *v1;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[3];
  if (v6)
  {
    v7 = v2[2];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v6);
    String.hash(into:)(a1, v7, v6);
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v8 = v2[4];
  v20 = v8;
  v9 = *(_QWORD *)(v8 + 16);
  Hasher._combine(_:)(v9);
  if (v9)
  {
    v10 = (_OWORD *)(v8 + 32);
    swift_bridgeObjectRetain(v8);
    do
    {
      v21[0] = *v10;
      v11 = v10[1];
      v12 = v10[2];
      v13 = v10[3];
      *(_OWORD *)&v22[9] = *(_OWORD *)((char *)v10 + 57);
      v21[2] = v12;
      *(_OWORD *)v22 = v13;
      v21[1] = v11;
      sub_100084A9C(v21);
      sub_100193140(a1);
      sub_100084B00(v21);
      v10 += 5;
      --v9;
    }
    while (v9);
    sub_10008207C(&v20);
  }
  Hasher._combine(_:)(v2[6] & 1);
  v14 = v2[5];
  v19 = v14;
  if (!((unint64_t)v14 >> 62))
  {
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v14);
    if (v15)
      goto LABEL_10;
LABEL_20:
    sub_10008207C(&v19);
    return;
  }
  if (v14 >= 0)
    v18 = v14 & 0xFFFFFFFFFFFFFF8;
  else
    v18 = v14;
  swift_bridgeObjectRetain(v14);
  v15 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v15)
    goto LABEL_20;
LABEL_10:
  if (v15 >= 1)
  {
    for (i = 0; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0)
      {
        v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v14);
      }
      else
      {
        v17 = *(void **)(v14 + 8 * i + 32);
        swift_unknownObjectRetain(v17);
      }
      Hasher._combine(_:)((Swift::UInt64)objc_msgSend(v17, "muid", v19, v20));
      swift_unknownObjectRelease(v17);
    }
    goto LABEL_20;
  }
  __break(1u);
}

Swift::Int sub_100197920()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100197730((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100197960(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100197730((uint64_t)v2);
  return Hasher._finalize()();
}

void (*sub_100197998(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10010F424(v6, a2, a3);
  return sub_1001979EC;
}

void (*sub_1001979F0(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10010F490(v6, a2, a3);
  return sub_1001979EC;
}

void (*sub_100197A44(_QWORD *a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_10010F4FC((uint64_t (*)(_QWORD *))v6, a2, a3);
  return sub_1001979EC;
}

void (*sub_100197A98(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_10010F550(v6, a2, a3);
  return sub_1001979EC;
}

void (*sub_100197AEC(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10010F5BC(v6, a2, a3);
  return sub_1001979EC;
}

void sub_100197B40(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_100197B6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v29;
  uint64_t v30;
  id v31;
  void *v32;
  BOOL v33;
  char v34;
  BOOL v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  id v89;
  void *v90;
  unsigned int v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  Block_layout *v97;
  BOOL v98;
  char v99;
  BOOL v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  GEOTransitIncidentEntity *v105;
  void *v106;
  BOOL v107;
  char v108;
  BOOL v109;
  id v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  id v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  void *v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  void *v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  void *v144;
  unsigned int v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  unsigned int v151;
  uint64_t v152;
  uint64_t v153;
  id v154;
  void *v155;
  unsigned int v156;
  unsigned int v157;
  char v158;
  Block_layout *v159;
  BOOL v160;
  char v161;
  BOOL v162;
  id v163;
  void *i;
  GEOTransitIncidentEntity *v165;
  void *v166;
  id obj;
  id obja;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  void *v175;
  id v176;
  id v177;
  void *v178;
  uint64_t v179;
  void *v180;
  id v181;
  void *v182;
  uint64_t v183;
  id v184;
  id v185;
  id v186;
  void *v187;
  _QWORD *v188;
  id v189;
  _QWORD *v190;
  id v191;
  id v192;
  uint64_t v193;
  unint64_t v194;
  id v195;
  id v196;
  id v197;
  void *v198;
  void *v199;
  id v200;
  void *v201;
  id v202;
  void *v203;
  void *v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _BYTE v209[128];
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;

  v6 = *a1;
  v7 = a1[1];
  v8 = *(_QWORD *)(a2 + 8);
  if (v6 != *(_QWORD *)a2 || v7 != v8)
  {
    v10 = 0;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *(_QWORD *)a2, v8, 0) & 1) == 0)
      return v10;
  }
  v11 = a1[3];
  v12 = *(_QWORD *)(a2 + 24);
  if (!v11)
  {
    if (v12)
      return 0;
    goto LABEL_15;
  }
  if (!v12)
    return 0;
  v13 = a1[2];
  v14 = *(_QWORD *)(a2 + 16);
  v15 = v13 == v14 && v11 == v12;
  if (v15 || (v10 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v11, v14, v12, 0) & 1) != 0))
  {
LABEL_15:
    if (((*((unsigned __int8 *)a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0
      && (sub_100083C2C(a1[4], *(_QWORD *)(a2 + 32)) & 1) != 0)
    {
      v16 = a1[5];
      v208 = v16;
      v17 = (unint64_t)v16 >> 62;
      if ((unint64_t)v16 >> 62)
      {
        if (v16 < 0)
          v26 = v16;
        else
          v26 = v16 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v16);
        v18 = _CocoaArrayWrapper.endIndex.getter(v26);
        sub_10008207C(&v208);
      }
      else
      {
        v18 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v19 = *(_QWORD *)(a2 + 40);
      v207 = v19;
      v20 = (unint64_t)v19 >> 62;
      if ((unint64_t)v19 >> 62)
      {
        if (v19 < 0)
          v27 = v19;
        else
          v27 = v19 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v19);
        v21 = _CocoaArrayWrapper.endIndex.getter(v27);
        sub_10008207C(&v207);
        if (v18 == v21)
          goto LABEL_21;
      }
      else
      {
        v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v18 == v21)
        {
LABEL_21:
          if (v17)
          {
            if (v16 < 0)
              v23 = v16;
            else
              v23 = v16 & 0xFFFFFFFFFFFFFF8;
            sub_100185780(&v208);
            sub_100185780(&v207);
            v22 = _CocoaArrayWrapper.endIndex.getter(v23);
          }
          else
          {
            v22 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
            sub_100185780(&v208);
            sub_100185780(&v207);
          }
          if (!v22)
            goto LABEL_148;
          v24 = (id)(v16 & 0xC000000000000001);
          if ((v16 & 0xC000000000000001) != 0)
          {
            v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
            if (!v20)
            {
LABEL_31:
              v25 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_47:
              if (v25)
              {
                v205 = v19 & 0xC000000000000001;
                v206 = v25;
                if ((v19 & 0xC000000000000001) == 0)
                {
                  if (!*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    __break(1u);
LABEL_237:
                    __break(1u);
LABEL_238:
                    __break(1u);
                    goto LABEL_239;
                  }
                  v17 = *(_QWORD *)(v19 + 32);
                  swift_unknownObjectRetain(v17);
LABEL_51:
                  v2 = (uint64_t)(id)v21;
                  v29 = (id)v17;
                  v20 = (unint64_t)v29;
                  if (!(v21 | v17))
                  {
                    swift_unknownObjectRelease(v2);
                    swift_unknownObjectRelease(v20);
LABEL_53:
                    if (v22 != 1)
                    {
                      v190 = (_QWORD *)(v16 + 32);
                      v191 = (id)(v16 & 0xFFFFFFFFFFFFFF8);
                      v188 = (_QWORD *)(v19 + 32);
                      v189 = (id)(v19 & 0xFFFFFFFFFFFFFF8);
                      v20 = 1;
                      v193 = v22;
                      v194 = (unint64_t)v24;
                      while (1)
                      {
                        if (v24)
                        {
                          v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v16);
                          v30 = v206;
                        }
                        else
                        {
                          v30 = v206;
                          if (v20 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
                            goto LABEL_237;
                          v21 = v190[v20];
                          swift_unknownObjectRetain(v21);
                        }
                        v17 = v20 + 1;
                        if (__OFADD__(v20, 1))
                        {
                          __break(1u);
LABEL_213:
                          v158 = 0;
                          if (v184)
                            v160 = v22 == 0;
                          else
                            v160 = 0;
                          v161 = v160;
                          if (v185)
                            v162 = v21 == 0;
                          else
                            v162 = 0;
                          if (!v162 && (v161 & 1) == 0)
                          {
                            v163 = objc_msgSend(v184, "count");
                            if (v163 == objc_msgSend(v185, "count"))
                            {
                              v212 = 0u;
                              v213 = 0u;
                              v210 = 0u;
                              v211 = 0u;
                              v177 = v184;
                              v181 = objc_msgSend(v177, "countByEnumeratingWithState:objects:count:", &v210, v209, 16);
                              if (v181)
                              {
                                v183 = 0;
                                v179 = *(_QWORD *)v211;
                                while (2)
                                {
                                  for (i = 0; i != v181; i = (char *)i + 1)
                                  {
                                    if (*(_QWORD *)v211 != v179)
                                      objc_enumerationMutation(v177);
                                    v165 = *(GEOTransitIncidentEntity **)(*((_QWORD *)&v210 + 1) + 8 * (_QWORD)i);
                                    v166 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v185, "objectAtIndexedSubscript:", (char *)i + v183));
                                    LODWORD(v165) = sub_100199488(v166, v165, (GEOTransitIncidentEntity *)v166);

                                    if (!(_DWORD)v165)
                                    {
                                      v158 = 0;
                                      goto LABEL_241;
                                    }
                                  }
                                  v181 = objc_msgSend(v177, "countByEnumeratingWithState:objects:count:", &v210, v209, 16);
                                  v183 += (uint64_t)i;
                                  if (v181)
                                    continue;
                                  break;
                                }
                              }
                              v158 = 1;
LABEL_241:

                              goto LABEL_202;
                            }
LABEL_239:
                            v158 = 0;
                          }
LABEL_202:

                          goto LABEL_203;
                        }
                        if (v20 == v30)
                          goto LABEL_147;
                        if (v205)
                        {
                          v2 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v19);
                        }
                        else
                        {
                          if (v20 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
                            goto LABEL_238;
                          v2 = v188[v20];
                          swift_unknownObjectRetain(v2);
                        }
                        v3 = (id)v21;
                        v31 = (id)v2;
                        v32 = v31;
                        if (!(v21 | v2))
                        {
                          swift_unknownObjectRelease(v3);
                          swift_unknownObjectRelease(v32);
                          goto LABEL_56;
                        }
                        if (v3)
                          v33 = v2 == 0;
                        else
                          v33 = 0;
                        v34 = v33;
                        if (v31)
                          v35 = v21 == 0;
                        else
                          v35 = 0;
                        if (v35 || (v34 & 1) != 0 || (v36 = objc_msgSend(v3, "muid"), v36 != objc_msgSend(v32, "muid")))
                        {
                          swift_unknownObjectRelease(v3);
                          v41 = v32;
LABEL_194:
                          swift_unknownObjectRelease(v32);

                          v10 = 0;
                          goto LABEL_149;
                        }
                        v202 = (id)v17;
                        v37 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "title"));
                        v38 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "title"));
                        v39 = v37 | v38;
                        v40 = (id)v37;
                        v41 = (id)v38;
                        if (v39)
                        {
                          v42 = objc_msgSend(v40, "isEqual:", v41);

                          if (!v42)
                          {

                            swift_unknownObjectRelease(v3);
                            v3 = v40;
                            goto LABEL_194;
                          }
                        }
                        v203 = v41;
                        v204 = v40;
                        v43 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "summary"));
                        v44 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "summary"));
                        v45 = v43 | v44;
                        v46 = (id)v43;
                        v47 = (id)v44;
                        if (v45)
                        {
                          v48 = objc_msgSend(v46, "isEqual:", v47);

                          if (!v48)
                          {

LABEL_193:
                            swift_unknownObjectRelease(v3);

                            v41 = v203;
                            v3 = v40;
                            goto LABEL_194;
                          }
                        }
                        v200 = v46;
                        v201 = v47;
                        v49 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fullDescription"));
                        v50 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "fullDescription"));
                        v51 = v49 | v50;
                        v52 = (id)v49;
                        v53 = (id)v50;
                        if (v51)
                        {
                          v54 = objc_msgSend(v52, "isEqual:", v53);

                          if (!v54)
                          {

                            goto LABEL_193;
                          }
                        }
                        v198 = v53;
                        v199 = v52;
                        v55 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "messageForRoutePlanning"));
                        v56 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "messageForRoutePlanning"));
                        v57 = v55 | v56;
                        v58 = (id)v55;
                        v59 = (id)v56;
                        v197 = v59;
                        if (v57)
                        {
                          v60 = v59;
                          v61 = objc_msgSend(v58, "isEqual:", v59);

                          if (!v61)
                          {
                            v85 = v58;
                            v66 = 0;
                            v2 = v194;
                            v93 = v40;
                            v17 = (uint64_t)v202;
                            v92 = v199;
                            goto LABEL_122;
                          }
                        }
                        v62 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "messageForRouteStepping"));
                        v63 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "messageForRouteStepping"));
                        v64 = v62 | v63;
                        v65 = (id)v62;
                        v195 = v65;
                        v196 = (id)v63;
                        if (!v64)
                          break;
                        v66 = objc_msgSend(v65, "isEqual:", v196);

                        if (v66)
                          break;
                        v85 = v58;
                        v2 = v194;
                        v93 = v40;
                        v17 = (uint64_t)v202;
                        v92 = v199;
LABEL_121:

LABEL_122:
                        swift_unknownObjectRelease(v3);

                        swift_unknownObjectRelease(v32);
                        v22 = v193;
                        v24 = (id)v2;
                        if (!v66)
                          goto LABEL_211;
LABEL_56:
                        v10 = 1;
                        v20 = v17;
                        if (v17 == v22)
                          goto LABEL_149;
                      }
                      v67 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "messageForNonRoutable"));
                      v68 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "messageForNonRoutable"));
                      v192 = (id)v67;
                      v69 = (id)v68;
                      v187 = v69;
                      if (v67 | v68)
                      {
                        v70 = v69;
                        v66 = objc_msgSend(v192, "isEqual:", v69);

                        if (!v66)
                        {
                          v85 = v58;
                          v2 = v194;
                          v93 = v40;
                          v17 = (uint64_t)v202;
                          v92 = v199;
LABEL_120:

                          goto LABEL_121;
                        }
                      }
                      v71 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "startDate"));
                      v72 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "startDate"));
                      v186 = (id)v71;
                      v73 = (id)v72;
                      v185 = v73;
                      if (v71 | v72)
                      {
                        v74 = v73;
                        v66 = objc_msgSend(v186, "isEqual:", v73);

                        if (!v66)
                        {
                          v85 = v58;
                          v2 = v194;
                          v93 = v40;
                          v17 = (uint64_t)v202;
                          v92 = v199;
LABEL_119:

                          goto LABEL_120;
                        }
                      }
                      v75 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "endDate"));
                      v76 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "endDate"));
                      v184 = (id)v75;
                      v77 = (id)v76;
                      v182 = v77;
                      if (v75 | v76
                        && (v78 = v77,
                            v66 = objc_msgSend(v184, "isEqual:", v77),
                            v184,
                            v78,
                            !v66))
                      {
                        v85 = v58;
                      }
                      else
                      {
                        v79 = objc_msgSend(v3, "iconType");
                        if (v79 == objc_msgSend(v32, "iconType"))
                        {
                          v80 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "creationDate"));
                          v81 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "creationDate"));
                          v82 = (id)v80;
                          v83 = (id)v81;
                          v178 = v83;
                          v180 = v82;
                          if (v80 | v81)
                          {
                            v84 = v83;
                            v66 = objc_msgSend(v82, "isEqual:", v83);

                            if (!v66)
                            {
                              v85 = v58;
                              v2 = v194;
                              v93 = v40;
                              v17 = (uint64_t)v202;
                              v92 = v199;
LABEL_117:

                              goto LABEL_118;
                            }
                          }
                          v85 = v58;
                          v86 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastUpdated"));
                          v87 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "lastUpdated"));
                          v88 = (id)v86;
                          v89 = (id)v87;
                          v175 = v89;
                          v176 = v88;
                          if (v86 | v87)
                          {
                            v90 = v89;
                            v66 = objc_msgSend(v88, "isEqual:", v89);

                            if (!v66)
                            {
                              v2 = v194;
                              v93 = v40;
                              v92 = v199;
                              goto LABEL_116;
                            }
                          }
                          v91 = objc_msgSend(v3, "isBlockingIncident");
                          v2 = v194;
                          v92 = v199;
                          if (v91 != objc_msgSend(v32, "isBlockingIncident"))
                          {
                            v66 = 0;
                            v93 = v40;
LABEL_116:

                            v17 = (uint64_t)v202;
                            goto LABEL_117;
                          }
                          v94 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "affectedEntities"));
                          v95 = objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "affectedEntities"));
                          v170 = v94;
                          v172 = v94 | v95;
                          v174 = (id)v94;
                          obj = (id)v95;
                          v96 = (id)v95;
                          v97 = &stru_1011A7DA8;
                          v169 = v96;
                          if (v172)
                          {
                            v66 = 0;
                            if (v174)
                              v98 = obj == 0;
                            else
                              v98 = 0;
                            v99 = v98;
                            if (v96)
                              v100 = v170 == 0;
                            else
                              v100 = 0;
                            if (!v100)
                            {
                              v93 = v40;
                              if ((v99 & 1) == 0)
                              {
                                v101 = objc_msgSend(v174, "count");
                                if (v101 == objc_msgSend(v169, "count"))
                                {
                                  v212 = 0u;
                                  v213 = 0u;
                                  v210 = 0u;
                                  v211 = 0u;
                                  obja = v174;
                                  v102 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v210, v209, 16);
                                  if (v102)
                                  {
                                    v103 = v102;
                                    v171 = *(_QWORD *)v211;
                                    v173 = 0;
LABEL_138:
                                    v104 = 0;
                                    while (1)
                                    {
                                      if (*(_QWORD *)v211 != v171)
                                        objc_enumerationMutation(obja);
                                      v105 = *(GEOTransitIncidentEntity **)(*((_QWORD *)&v210 + 1) + 8 * v104);
                                      v106 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v169, "objectAtIndexedSubscript:", v173 + v104));
                                      v66 = sub_100199488(v106, v105, (GEOTransitIncidentEntity *)v106);

                                      if (!v66)
                                        break;
                                      if (v103 == (id)++v104)
                                      {
                                        v173 += v104;
                                        v103 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v210, v209, 16);
                                        if (v103)
                                          goto LABEL_138;
                                        goto LABEL_144;
                                      }
                                    }
                                  }
                                  else
                                  {
LABEL_144:
                                    v66 = 1;
                                  }

                                  v2 = v194;
                                  v93 = v40;
                                  v92 = v199;
                                }
                                else
                                {
                                  v66 = 0;
                                }
                              }
                              goto LABEL_113;
                            }
                          }
                          else
                          {
                            v66 = 1;
                          }
                          v93 = v40;
LABEL_113:

                          goto LABEL_116;
                        }
                        v85 = v58;
                        v66 = 0;
                      }
                      v2 = v194;
                      v93 = v40;
                      v17 = (uint64_t)v202;
                      v92 = v199;
LABEL_118:

                      goto LABEL_119;
                    }
                    goto LABEL_148;
                  }
                  if (v2)
                    v107 = v17 == 0;
                  else
                    v107 = 0;
                  v108 = v107;
                  if (v29)
                    v109 = v21 == 0;
                  else
                    v109 = 0;
                  if (v109
                    || (v108 & 1) != 0
                    || (v110 = objc_msgSend((id)v2, "muid"), v110 != objc_msgSend((id)v20, "muid")))
                  {

                    swift_unknownObjectRelease(v2);
                    swift_unknownObjectRelease(v20);
                    v10 = 0;
                    goto LABEL_149;
                  }
                  v111 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "title"));
                  v112 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "title"));
                  v113 = v111 | v112;
                  v3 = (id)v111;
                  v17 = (uint64_t)(id)v112;
                  if (!v113
                    || (v10 = (uint64_t)objc_msgSend(v3, "isEqual:", v17),
                        v3,
                        (id)v17,
                        (_DWORD)v10))
                  {
                    v193 = v22;
                    v194 = v16 & 0xC000000000000001;
                    v114 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "summary"));
                    v115 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "summary"));
                    v116 = v114 | v115;
                    v24 = (id)v114;
                    v117 = (id)v115;
                    if (!v116
                      || (v10 = (uint64_t)objc_msgSend(v24, "isEqual:", v117),
                          v24,
                          v117,
                          (_DWORD)v10))
                    {
                      v203 = v24;
                      v204 = v117;
                      v118 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "fullDescription"));
                      v119 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "fullDescription"));
                      v120 = v118 | v119;
                      v24 = (id)v118;
                      v117 = (id)v119;
                      if (!v120
                        || (v10 = (uint64_t)objc_msgSend(v24, "isEqual:", v117),
                            v24,
                            v117,
                            (_DWORD)v10))
                      {
                        v201 = v117;
                        v121 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "messageForRoutePlanning"));
                        v122 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "messageForRoutePlanning"));
                        v123 = v121 | v122;
                        v124 = (id)v121;
                        v202 = (id)v122;
                        if (v123
                          && (v125 = objc_msgSend(v124, "isEqual:", v202),
                              v124,
                              v202,
                              !v125))
                        {
                          v158 = 0;
                          v22 = v193;
                        }
                        else
                        {
                          v198 = v124;
                          v126 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "messageForRouteStepping"));
                          v127 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "messageForRouteStepping"));
                          v128 = v126 | v127;
                          v129 = (id)v126;
                          v199 = v129;
                          v200 = (id)v127;
                          if (v128
                            && (v130 = objc_msgSend(v129, "isEqual:", v200),
                                v129,
                                v200,
                                !v130))
                          {
                            v158 = 0;
                            v22 = v193;
                            v124 = v198;
                          }
                          else
                          {
                            v131 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "messageForNonRoutable"));
                            v132 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "messageForNonRoutable"));
                            v197 = (id)v131;
                            v133 = (id)v132;
                            v196 = v133;
                            if (v131 | v132
                              && (v134 = v133,
                                  v135 = objc_msgSend(v197, "isEqual:", v133),
                                  v197,
                                  v134,
                                  !v135))
                            {
                              v158 = 0;
                              v22 = v193;
                              v124 = v198;
                            }
                            else
                            {
                              v136 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "startDate"));
                              v137 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "startDate"));
                              v195 = (id)v136;
                              v138 = (id)v137;
                              v192 = v138;
                              if (v136 | v137
                                && (v139 = v138,
                                    v140 = objc_msgSend(v195, "isEqual:", v138),
                                    v195,
                                    v139,
                                    !v140))
                              {
                                v158 = 0;
                                v22 = v193;
                                v124 = v198;
                              }
                              else
                              {
                                v141 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "endDate"));
                                v142 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "endDate"));
                                v191 = (id)v141;
                                v143 = (id)v142;
                                v190 = v143;
                                if ((!(v141 | v142)
                                   || (v144 = v143,
                                       v145 = objc_msgSend(v191, "isEqual:", v143),
                                       v191,
                                       v144,
                                       v145))
                                  && (v146 = objc_msgSend((id)v2, "iconType"),
                                      v146 == objc_msgSend((id)v20, "iconType")))
                                {
                                  v147 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "creationDate"));
                                  v148 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "creationDate"));
                                  v149 = v147 | v148;
                                  v189 = (id)v147;
                                  v150 = (id)v148;
                                  if (v149
                                    && (v151 = objc_msgSend(v189, "isEqual:", v150),
                                        v189,
                                        v150,
                                        !v151))
                                  {
                                    v158 = 0;
                                  }
                                  else
                                  {
                                    v187 = v150;
                                    v152 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "lastUpdated"));
                                    v153 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "lastUpdated"));
                                    v188 = (id)v152;
                                    v154 = (id)v153;
                                    v186 = v154;
                                    if (!(v152 | v153)
                                      || (v155 = v154,
                                          v156 = objc_msgSend(v188, "isEqual:", v154),
                                          v188,
                                          v155,
                                          v156))
                                    {
                                      v157 = objc_msgSend((id)v2, "isBlockingIncident");
                                      if (v157 == objc_msgSend((id)v20, "isBlockingIncident"))
                                      {
                                        v21 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v2, "affectedEntities"));
                                        v22 = objc_claimAutoreleasedReturnValue(objc_msgSend((id)v20, "affectedEntities"));
                                        v184 = (id)v21;
                                        v185 = (id)v22;
                                        v159 = &stru_1011A7DA8;
                                        if (v21 | v22)
                                          goto LABEL_213;
                                        v158 = 1;
                                        goto LABEL_202;
                                      }
                                    }
                                    v158 = 0;
LABEL_203:

                                    v150 = v187;
                                  }

                                }
                                else
                                {
                                  v158 = 0;
                                }
                                v22 = v193;
                                v124 = v198;

                              }
                            }

                          }
                        }

                        swift_unknownObjectRelease(v2);
                        swift_unknownObjectRelease(v20);

                        v24 = (id)v194;
                        if ((v158 & 1) == 0)
                        {
LABEL_211:
                          v10 = 0;
                          goto LABEL_149;
                        }
                        goto LABEL_53;
                      }

                    }
                  }

                  swift_unknownObjectRelease(v2);
                  swift_unknownObjectRelease(v20);

                  goto LABEL_149;
                }
LABEL_235:
                v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
                goto LABEL_51;
              }
LABEL_147:
              swift_unknownObjectRelease(v21);
LABEL_148:
              v10 = 1;
LABEL_149:
              sub_10008207C(&v208);
              sub_10008207C(&v207);
              return v10;
            }
          }
          else
          {
            if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_235;
            }
            v21 = *(_QWORD *)(v16 + 32);
            swift_unknownObjectRetain(v21);
            if (!v20)
              goto LABEL_31;
          }
          if (v19 < 0)
            v20 = v19;
          else
            v20 = v19 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v19);
          v25 = _CocoaArrayWrapper.endIndex.getter(v20);
          sub_10008207C(&v207);
          goto LABEL_47;
        }
      }
    }
    return 0;
  }
  return v10;
}

