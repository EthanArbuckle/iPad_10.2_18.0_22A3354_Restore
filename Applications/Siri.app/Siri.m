id sub_100007944(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  return v4;
}

void sub_1000082A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000082C8(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_handleFaceAttentionEvent:", v3);

}

void sub_1000083E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008408(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_handleTouchAttentionEvent:", v3);

}

void sub_100008528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008548(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_handleButtonPressAttentionEvent:", v3);

}

void sub_100008780(uint64_t a1)
{
  void *v2;
  id v3;
  id WeakRetained;

  if (*(_QWORD *)(a1 + 40))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v3 = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(v2, "userAttentionController:didLoseAttentionWithEvent:", v3, *(_QWORD *)(a1 + 40));
  }
  else
  {
    if (!*(_QWORD *)(a1 + 48))
      return;
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v3 = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(v2, "userAttentionController:didGainAttentionWithEvent:", v3, *(_QWORD *)(a1 + 48));
  }

}

void sub_100008904(uint64_t a1)
{
  void *v2;
  id v3;
  id WeakRetained;

  if (*(_QWORD *)(a1 + 40))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v3 = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(v2, "userAttentionController:didLoseAttentionWithEvent:", v3, *(_QWORD *)(a1 + 40));
  }
  else
  {
    if (!*(_QWORD *)(a1 + 48))
      return;
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v3 = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(v2, "userAttentionController:didGainAttentionWithEvent:", v3, *(_QWORD *)(a1 + 48));
  }

}

void sub_100008AA0(uint64_t a1)
{
  void *v2;
  id v3;
  id WeakRetained;

  if (*(_QWORD *)(a1 + 48))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v3 = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(v2, "userAttentionController:didGainAttentionWithEvent:", v3, *(_QWORD *)(a1 + 48));
LABEL_3:

    return;
  }
  if (!*(_QWORD *)(a1 + 32))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    v3 = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(v2, "userAttentionController:didLoseAttentionWithEvent:", v3, 0);
    goto LABEL_3;
  }
}

void sub_100008CB8(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  id v3;
  id v4;
  unsigned __int8 v5;
  id v6;
  id *v7;
  id WeakRetained;
  id v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  v1 = *(_QWORD *)(a1 + 40);
  if ((unint64_t)(v1 - 2) >= 2)
  {
    if (v1 == 1)
    {
      v7 = (id *)(a1 + 32);
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      objc_msgSend(WeakRetained, "_setDeviceLowered:", 0);

      v9 = objc_loadWeakRetained(v7);
      v14 = 0;
      v10 = objc_msgSend(v9, "stopIfNeededForTypes:error:", 1, &v14);
      v6 = v14;

      if ((v10 & 1) == 0 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
        sub_10009D62C();
      v11 = objc_loadWeakRetained(v7);
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "delegate"));
      v13 = objc_loadWeakRetained(v7);
      objc_msgSend(v12, "userAttentionController:didGainAttentionWithEvent:", v13, 2);

    }
    else
    {
      v6 = 0;
    }
  }
  else
  {
    v2 = (id *)(a1 + 32);
    v3 = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(v3, "_setDeviceLowered:", 1);

    v4 = objc_loadWeakRetained(v2);
    v15 = 0;
    v5 = objc_msgSend(v4, "_restartFaceAttentionAwarenessClient:", &v15);
    v6 = v15;

    if ((v5 & 1) == 0 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009D5C0();
  }

}

void sub_100009110(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  _QWORD block[4];
  id v9;
  id v10;
  id v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = *(_QWORD *)(a1 + 56);
  v11 = 0;
  objc_msgSend(WeakRetained, "startIfNeededForTypes:error:", v3, &v11);
  v4 = v11;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000091C8;
  block[3] = &unk_100122548;
  v5 = *(NSObject **)(a1 + 32);
  v6 = *(id *)(a1 + 40);
  v9 = v4;
  v10 = v6;
  v7 = v4;
  dispatch_async(v5, block);

}

uint64_t sub_1000091C8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_1000091D8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_10000A018(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  const char *v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  id v11;

  v3 = a2;
  if (v3)
  {
    v4 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = 136315650;
      v7 = "+[SRUIDSurveyNotificationUtility postSiriInternalUIDSurveyNotification:activationHistory:requestSource:dismis"
           "salReason:]_block_invoke";
      v8 = 2112;
      v9 = v5;
      v10 = 2112;
      v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Failed to post notification %@ with error %@", (uint8_t *)&v6, 0x20u);
    }
  }

}

void sub_10000A80C(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 256), "setAdditionalSafeAreaInsets:", 0.0, 0.0, 0.0, 0.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 256), "view"));
  objc_msgSend(v2, "setNeedsLayout");

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 256), "view"));
  objc_msgSend(v3, "layoutIfNeeded");

}

void sub_10000A894(uint64_t a1)
{
  void *v2;
  double v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "window"));

  objc_msgSend(v6, "safeAreaInsets");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 256), "setAdditionalSafeAreaInsets:", *(double *)(a1 + 40) - v3 + 10.0, 0.0, 0.0, 0.0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 256), "view"));
  objc_msgSend(v4, "setNeedsLayout");

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 256), "view"));
  objc_msgSend(v5, "layoutIfNeeded");

}

void sub_10000AC98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000ACBC(uint64_t a1)
{
  id WeakRetained;
  id v3;

  v3 = objc_msgSend(objc_alloc((Class)SASRequestOptions), "initWithRequestSource:uiPresentationIdentifier:", 48, CFSTR("com.apple.siri.SystemAssistantExperience"));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "handleVoiceActivationRequestWithRequestOptions:", v3);

}

void sub_10000B468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000B490(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  objc_msgSend(v1, "didTapCloseButtonOnSnippet");

}

id sub_10000B664()
{
  _QWORD v1[2];

  v1[0] = UIKeyboardWillChangeFrameNotification;
  v1[1] = UIKeyboardDidChangeFrameNotification;
  return (id)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v1, 2));
}

void sub_10000D9B4(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeSmartDialogView"));
  objc_msgSend(v2, "setServerUtterances:", *(_QWORD *)(a1 + 32));

}

void sub_10000DC30(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeSmartDialogView"));
  v5 = objc_msgSend(*(id *)(a1 + 32), "copy");
  objc_msgSend(v4, "setConversationSnippetViews:", v5);

  v7 = objc_loadWeakRetained(v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "activeSmartDialogView"));
  objc_msgSend(v6, "setNeedsLayout");

}

void sub_10000DD84(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeSmartDialogView"));
  objc_msgSend(v2, "setSmartDialogCard:", *(_QWORD *)(a1 + 32));

}

void sub_10000DE94(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activeSmartDialogView"));
  objc_msgSend(v2, "setSmartDialogPlugin:", *(_QWORD *)(a1 + 32));

}

uint64_t sub_10000DF98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_10000E280(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_transitionSmartDialogWithNoLatency:", *(unsigned __int8 *)(a1 + 40));
}

void sub_10000E378(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_performResultAnimation:", *(unsigned __int8 *)(a1 + 40));

}

void sub_10000E90C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "setResultWithResultView:resultSize:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 296), *(double *)(*(_QWORD *)(a1 + 32) + 360), *(double *)(*(_QWORD *)(a1 + 32) + 368));

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 56) = 1;
}

void sub_10000E974(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  id v11;

  if (*(_BYTE *)(a1 + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "blurrableView"));
    objc_msgSend(v3, "setAlpha:", 1.0);

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
    objc_msgSend(v4, "frame");
    v6 = v5;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
    objc_msgSend(v7, "frame");
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
    objc_msgSend(v10, "setFrame:", 0.0, 0.0, v6, v9);

  }
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v11, "transitionToResult");

}

id *sub_10000EA54(id *result, int a2)
{
  id *v2;
  void *v3;
  _QWORD v4[5];

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(result[4], "containerView"));
    objc_msgSend(v3, "cleanupLoadingTransitionIfNeeded");

    result = (id *)objc_msgSend(*((id *)v2[4] + 37), "animateAppearanceIfNeeded");
    *((_BYTE *)v2[4] + 56) = 0;
    if (*((_BYTE *)v2 + 40))
    {
      objc_msgSend(v2[4], "_addFeedbackButton");
      v4[0] = _NSConcreteStackBlock;
      v4[1] = 3221225472;
      v4[2] = sub_10000EB10;
      v4[3] = &unk_1001225C0;
      v4[4] = v2[4];
      return (id *)+[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v4, 1.0);
    }
  }
  return result;
}

void sub_10000EB10(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "firstSnippetMaterialAnimation");

}

void sub_10000EC90(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "setTransitionLoadingToResultWithResultSize:", *(double *)(*(_QWORD *)(a1 + 32) + 360), *(double *)(*(_QWORD *)(a1 + 32) + 368));

}

_QWORD *sub_10000ECE0(_QWORD *result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[5];
  char v5;
  _QWORD v6[5];

  if (a2)
  {
    v2 = result[4];
    v3 = *(_QWORD *)(v2 + 152);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10000ED80;
    v6[3] = &unk_1001225C0;
    v6[4] = v2;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10000EDD0;
    v4[3] = &unk_100122700;
    v4[4] = v2;
    v5 = *((_BYTE *)result + 40);
    return +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v3, 0, v6, v4);
  }
  return result;
}

id sub_10000ED80(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "transitionToResult");

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 296), "setNeedsLayout");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 296), "layoutIfNeeded");
}

void sub_10000EDD0(uint64_t a1, int a2)
{
  NSObject *v3;
  int v4;
  const char *v5;

  if (a2)
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v4 = 136315138;
      v5 = "-[SRSystemAssistantExperienceViewController _performSinglePillExpandAnimation]_block_invoke_4";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #droplet expanding latency pill, no previous smart dialog", (uint8_t *)&v4, 0xCu);
    }
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 56) = 0;
    if (*(_BYTE *)(a1 + 40))
      objc_msgSend(*(id *)(a1 + 32), "_addFeedbackButton");
  }
}

id sub_10000EFFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];
  _QWORD v5[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(v1 + 160);
  v4[4] = v1;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10000F08C;
  v5[3] = &unk_1001225C0;
  v5[4] = v1;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000F0E0;
  v4[3] = &unk_100122728;
  return +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v2, 1, v5, v4);
}

void sub_10000F08C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "transitionMergedResults");

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v3, "postPillMergeBounce");

}

id sub_10000F0E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_executePreTransitionBlocks");
}

void sub_10000F0E8(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];
  _QWORD v4[4];
  uint64_t v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIViewSpringAnimationBehavior behaviorWithDampingRatio:response:](UIViewSpringAnimationBehavior, "behaviorWithDampingRatio:response:", 1.0, 0.0));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000F1A8;
  v4[3] = &unk_1001225C0;
  v5 = *(_QWORD *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000F1D8;
  v3[3] = &unk_100122728;
  v3[4] = v5;
  +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v2, 0, v4, v3);

}

void sub_10000F1A8(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "setMergedResultsForTransition");

}

id sub_10000F1D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];
  _QWORD v5[5];

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 145) = 1;
  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(v1 + 152);
  v4[4] = v1;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10000F27C;
  v5[3] = &unk_1001225C0;
  v5[4] = v1;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000F2CC;
  v4[3] = &unk_100122728;
  return +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v2, 0, v5, v4);
}

id sub_10000F27C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "transitionToResult");

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 296), "setNeedsLayout");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 296), "layoutIfNeeded");
}

id sub_10000F2CC(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  id result;
  int v5;
  const char *v6;

  v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 136315138;
    v6 = "-[SRSystemAssistantExperienceViewController _performPillMergeAndCrossfadeAnimation]_block_invoke_8";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s #droplet merging latency pill with existing smart dialog", (uint8_t *)&v5, 0xCu);
  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v3, "cleanupResultTransitionIfNeeded");

  result = objc_msgSend(*(id *)(a1 + 32), "_trimFinalSmartDialogs");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 56) = 0;
  return result;
}

id sub_10000F5B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(v1 + 152);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000F628;
  v4[3] = &unk_1001225C0;
  v4[4] = v1;
  return +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v2, 0, v4, 0);
}

void sub_10000F628(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "transitionVoiceLoadingToLoading");

}

void sub_10000F760(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "transitionToRemovedResponseElements:", *(_QWORD *)(a1 + 40));

}

void sub_10000F7A0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "cleanupResponseElements:", *(_QWORD *)(a1 + 40));

}

void sub_10000FE20(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "transitionToUpdatedContentInset");

}

void sub_1000101F4(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriDidDeactivate") & 1) != 0)
    -[SiriSharedUIViewControlling siriDidDeactivate](v2, "siriDidDeactivate");

}

void sub_100010820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001084C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "traitCollection"));
  v5 = objc_msgSend(v4, "isAmbientPresented");

  if (v5)
  {
    v6 = objc_loadWeakRetained(v1);
    objc_msgSend(v6, "_updateAmbientAvailability");

  }
}

void sub_100011230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100011254(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  _QWORD v6[4];
  id v7;
  uint64_t v8;
  id v9;
  __int16 v10;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100011304;
  v6[3] = &unk_1001227E0;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v4 = *(_QWORD *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v10 = *(_WORD *)(a1 + 48);
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

  objc_destroyWeak(&v9);
}

void sub_100011304(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  int v9;
  const char *v10;
  __int16 v11;
  void *v12;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(void **)(a1 + 32);
      v5 = v3;
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v4, "count")));
      v9 = 136315394;
      v10 = "-[SRSystemAssistantExperienceViewController _setUpConversationStarterSuggestions:isVoiceTrigger:invocationSo"
            "urce:]_block_invoke_2";
      v11 = 2112;
      v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #suggestions - %@ views fetched", (uint8_t *)&v9, 0x16u);

    }
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_createSmartDialogViewsFromSuggestionViews:", *(_QWORD *)(a1 + 32)));
    v8 = (void *)*((_QWORD *)WeakRetained + 11);
    *((_QWORD *)WeakRetained + 11) = v7;

    if (*((_BYTE *)WeakRetained + 42) || *(_BYTE *)(a1 + 56) || !*(_BYTE *)(a1 + 57))
    {
      objc_msgSend(WeakRetained, "_addSuggestionsToContainer");
      if (!*(_BYTE *)(a1 + 57))
        objc_msgSend(*((id *)WeakRetained + 16), "setBool:forKey:", 1, SRUIFPreferencesConversationStartersShownSinceOSInstalled);
    }
  }

}

id sub_1000115F4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 304), "transitionToSuggestionsExpanded");
}

void sub_1000118E0(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "transitionToSuggestionsCollapsed");

}

void sub_100011910(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[6];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v4 = *(_QWORD *)(a1 + 32);
    v3 = *(_QWORD *)(a1 + 40);
    v5 = *(void **)(v4 + 72);
    v6 = *(_QWORD *)(a1 + 48);
    v7 = *(unsigned __int8 *)(a1 + 64);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100011998;
    v8[3] = &unk_100122830;
    v8[4] = WeakRetained;
    v8[5] = v4;
    objc_msgSend(v5, "fetchConversationContinuerViewsWithRequestId:currentMode:deviceLocked:completion:", v3, v6, v7, v8);
  }

}

void sub_100011998(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[5];
  uint8_t buf[4];
  const char *v14;

  v3 = a2;
  v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v14 = "-[SRSystemAssistantExperienceViewController _setUpConversationContinuerSuggestions:forRequestId:currentMode:]_block_invoke_3";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #suggestions: Adding suggestions continuer views to container", buf, 0xCu);
  }
  v5 = *(_BYTE **)(a1 + 32);
  if (v5[60])
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_createSmartDialogViewsFromSuggestionViews:", v3));
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(void **)(v7 + 88);
    *(_QWORD *)(v7 + 88) = v6;

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
    objc_msgSend(v9, "setSuggestions:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88));

    v5 = *(_BYTE **)(a1 + 32);
  }
  v5[41] = 1;
  objc_msgSend(*(id *)(a1 + 32), "_suggestionsWereShown");
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 88), "count"))
  {
    v10 = *(_QWORD *)(a1 + 40);
    if (*(_BYTE *)(v10 + 200))
    {
      v11 = *(_QWORD *)(v10 + 168);
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 3221225472;
      v12[2] = sub_100011B50;
      v12[3] = &unk_1001225C0;
      v12[4] = *(_QWORD *)(a1 + 32);
      +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v11, 0, v12, 0);
    }
  }

}

void sub_100011B50(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "transitionToSuggestionsExpanded");

}

void sub_100011CC0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100011CDC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];
  uint8_t buf[4];
  const char *v12;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v5 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v12 = "-[SRSystemAssistantExperienceViewController didRecognizeTwoShotSignalForConversationStarterSuggestions]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #suggestions: Adding suggestions starter views for two shot to container", buf, 0xCu);
    }
    if (*((_BYTE *)WeakRetained + 60))
    {
      v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_createSmartDialogViewsFromSuggestionViews:", v3));
      v7 = (void *)*((_QWORD *)WeakRetained + 11);
      *((_QWORD *)WeakRetained + 11) = v6;

      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "containerView"));
      objc_msgSend(v8, "setSuggestions:", *((_QWORD *)WeakRetained + 11));

    }
    *((_BYTE *)WeakRetained + 41) = 1;
    objc_msgSend(WeakRetained, "_suggestionsWereShown");
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 168);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100011E74;
    v10[3] = &unk_1001225C0;
    v10[4] = WeakRetained;
    +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v9, 0, v10, 0);
  }

}

void sub_100011E74(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "transitionToSuggestionsExpanded");

}

void sub_100011F88(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100011FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *WeakRetained;
  id *v6;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v6 = WeakRetained;
    objc_msgSend(WeakRetained[38], "suggestionTapAnimationWithIndex:isTouchUp:", a4, 0);
    WeakRetained = v6;
  }

}

void sub_100012004(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id *WeakRetained;
  id *v10;
  NSObject *v11;
  id v12;
  _QWORD v13[5];
  id v14;
  id v15;
  uint8_t buf[4];
  const char *v17;
  __int16 v18;
  uint64_t v19;

  v7 = a2;
  v8 = a3;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v10 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained[38], "suggestionTapAnimationWithIndex:isTouchUp:", a4, 1);
    if (!*((_BYTE *)v10 + 58))
    {
      *((_BYTE *)v10 + 59) = 1;
      objc_msgSend(v10[38], "suggestionsMitose");
      objc_msgSend(v10[39], "setText:", v7);
      objc_msgSend(v10[39], "makeTextViewVisible:", 0);
      v11 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        v17 = "-[SRSystemAssistantExperienceViewController createSuggestionsViewProvider]_block_invoke_2";
        v18 = 2048;
        v19 = a4;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s #droplet animating suggestion #%ld to middle", buf, 0x16u);
      }
      v12 = v10[38];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_1000121C4;
      v13[3] = &unk_1001228D0;
      v13[4] = v10;
      v14 = v7;
      v15 = v8;
      objc_msgSend(v12, "transitionToSuggestionsCollapsedWithIndex:animated:completionBlock:", a4, 1, v13);

    }
  }

}

id sub_1000121C4(_QWORD *a1)
{
  objc_msgSend(*(id *)(a1[4] + 304), "removeSuggestions");
  objc_msgSend(*(id *)(a1[4] + 312), "makeTextViewVisible:", 1);
  objc_msgSend(*(id *)(a1[4] + 312), "setText:", a1[5]);
  return _objc_msgSend(*(id *)(a1[4] + 312), "promptEntryViewDidSubmitWithoutViewForSuggestionWithInvocationText:", a1[6]);
}

void sub_100012334(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "siriDidStartSpeakingWithIdentifier:") & 1) != 0)
    objc_msgSend(v3, "siriDidStartSpeakingWithIdentifier:", *(_QWORD *)(a1 + 32));

}

void sub_10001243C(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "siriDidStopSpeakingWithIdentifier:speechQueueIsEmpty:") & 1) != 0)
    objc_msgSend(v3, "siriDidStopSpeakingWithIdentifier:speechQueueIsEmpty:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));

}

void sub_100012538(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "siriDidUpdateASRWithRecognition:") & 1) != 0)
    objc_msgSend(v3, "siriDidUpdateASRWithRecognition:", *(_QWORD *)(a1 + 32));

}

void sub_1000125DC(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriDidTapOutsideContent") & 1) != 0)
    -[SiriSharedUIViewControlling siriDidTapOutsideContent](v2, "siriDidTapOutsideContent");

}

void sub_100012670(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriWillStartRequest") & 1) != 0)
    -[SiriSharedUIViewControlling siriWillStartRequest](v2, "siriWillStartRequest");

}

void sub_100012704(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;
  NSObject *v3;
  int v4;
  const char *v5;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriIsIdleAndQuiet") & 1) != 0)
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v4 = 136315138;
      v5 = "-[SRSystemAssistantExperienceViewController siriIsIdleAndQuiet]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #compact: Calling Siri Idle", (uint8_t *)&v4, 0xCu);
    }
    -[SiriSharedUIViewControlling siriIsIdleAndQuiet](v2, "siriIsIdleAndQuiet");
  }

}

void sub_100014E04(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "updateLoadingPillSizeWithCandidateSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));

}

_QWORD *sub_100014E44(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (*((_BYTE *)result + 40))
    {
      v2 = result[4];
      if (*(_BYTE *)(v2 + 202))
      {
        if (*(_BYTE *)(v2 + 58))
          return _objc_msgSend(*(id *)(v2 + 304), "startLatencyLightOnActivePill");
      }
    }
  }
  return result;
}

id sub_100014E88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];
  _QWORD v5[5];
  __int128 v6;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(v1 + 152);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100014F24;
  v5[3] = &unk_1001229A8;
  v5[4] = v1;
  v6 = *(_OWORD *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100014F64;
  v4[3] = &unk_100122728;
  v4[4] = v1;
  return +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v2, 0, v5, v4);
}

void sub_100014F24(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v2, "updateResultSizeWithResultSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));

}

id *sub_100014F64(id *result, int a2)
{
  id *v2;
  void *v3;

  if (a2)
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(result[4], "containerView"));
    objc_msgSend(v3, "cleanupLoadingTransitionIfNeeded");

    return (id *)objc_msgSend(*((id *)v2[4] + 37), "animateAppearanceIfNeeded");
  }
  return result;
}

void sub_1000154F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100015514(uint64_t a1, void *a2)
{
  id v3;
  id *WeakRetained;
  unint64_t v5;
  id *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  id v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  _QWORD v34[4];
  id v35;
  _QWORD v36[4];
  id v37;
  uint8_t buf[4];
  const char *v39;
  __int16 v40;
  id v41;

  v3 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v5 = (unint64_t)objc_msgSend(v3, "count");
    v6 = WeakRetained + 10;
    if ((unint64_t)objc_msgSend(WeakRetained[10], "count") | v5)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", v5));
      v36[0] = _NSConcreteStackBlock;
      v36[1] = 3221225472;
      v36[2] = sub_100015850;
      v36[3] = &unk_1001229D0;
      v16 = v15;
      v37 = v16;
      objc_msgSend(v3, "enumerateObjectsUsingBlock:", v36);
      if ((id)v5 == objc_msgSend(*v6, "count") && objc_msgSend(*v6, "isEqualToArray:", v16))
      {
        v17 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEBUG))
          sub_10009D808(v17, v18, v19, v20, v21, v22, v23, v24);
      }
      else
      {
        objc_storeStrong(WeakRetained + 10, v15);
        v34[0] = _NSConcreteStackBlock;
        v34[1] = 3221225472;
        v34[2] = sub_100015894;
        v34[3] = &unk_1001229D0;
        v25 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", v5));
        v35 = v25;
        objc_msgSend(v3, "enumerateObjectsUsingBlock:", v34);
        v26 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
        {
          v27 = *v6;
          *(_DWORD *)buf = 136315394;
          v39 = "-[SRSystemAssistantExperienceViewController didChangeText:]_block_invoke_2";
          v40 = 2112;
          v41 = v27;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "%s #suggestions: Adding suggestions autocomplete views to container, %@", buf, 0x16u);
        }
        v28 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_createSmartDialogViewsFromSuggestionViews:", v25));
        v29 = WeakRetained[11];
        WeakRetained[11] = (id)v28;

        if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 60))
        {
          v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "containerView"));
          objc_msgSend(v30, "setSuggestions:", WeakRetained[11]);

          *((_BYTE *)WeakRetained + 41) = 1;
        }
        objc_msgSend(WeakRetained, "_suggestionsWereShown");
        v31 = *(_QWORD *)(a1 + 32);
        if (*(_BYTE *)(v31 + 200))
        {
          v32 = *(_QWORD *)(v31 + 168);
          v33[0] = _NSConcreteStackBlock;
          v33[1] = 3221225472;
          v33[2] = sub_1000158D8;
          v33[3] = &unk_1001225C0;
          v33[4] = WeakRetained;
          +[UIView _animateUsingSpringBehavior:tracking:animations:completion:](UIView, "_animateUsingSpringBehavior:tracking:animations:completion:", v32, 0, v33, 0);
        }
        else
        {
          objc_msgSend(WeakRetained[38], "transitionToSuggestionsCollapsedWithIndex:animated:completionBlock:", -1, 0, &stru_100122A10);
        }

      }
    }
    else
    {
      v7 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEBUG))
        sub_10009D798(v7, v8, v9, v10, v11, v12, v13, v14);
    }
  }

}

void sub_100015850(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "suggestionText"));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_100015894(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "view"));
  objc_msgSend(v2, "addObject:", v3);

}

id sub_1000158D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 304), "transitionToSuggestionsExpanded");
}

void sub_1000159DC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v1, "transitionToSuggestionsCollapsed");

}

void sub_100015A0C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "viewController:willChangeKeyboardVisibility:", *(_QWORD *)(a1 + 32), 0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v3, "removeSuggestions");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "keyboardLayoutGuide"));
  objc_msgSend(v5, "removeLightEffectsView");

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v6, "setTextFieldHeight:", 0.0);

  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "containerView"));
  objc_msgSend(v7, "setTextFieldWithTextFieldView:", 0);

}

void sub_100015B4C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  void *v3;
  id v4;

  v1 = *(unsigned __int8 **)(a1 + 32);
  v2 = v1[200];
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "containerView"));
  v4 = v3;
  if (v2)
    objc_msgSend(v3, "transitionToSuggestionsExpanded");
  else
    objc_msgSend(v3, "transitionToSuggestionsCollapsedWithIndex:animated:completionBlock:", -1, 1, &stru_100122A30);

}

void sub_100016194(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t sub_1000162F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_10001644C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;

  v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 136315394;
    v5 = "+[SRSiriDebugManager _notifySiriDebugAppWithMessage:completionHandler:]_block_invoke";
    v6 = 2112;
    v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s SiriDebug: %@ task delivered.", (uint8_t *)&v4, 0x16u);
  }
}

void sub_100016504(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const char *v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  id v15;
  __int16 v16;
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v8 = *(_QWORD *)(a1 + 32);
    v10 = 136315906;
    v11 = "+[SRSiriDebugManager _notifySiriDebugAppWithMessage:completionHandler:]_block_invoke";
    v12 = 2112;
    v13 = v8;
    v14 = 2112;
    v15 = v5;
    v16 = 2112;
    v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s SiriDebug: %@ completed with response %@ and error %@.", (uint8_t *)&v10, 0x2Au);
  }
  v9 = *(_QWORD *)(a1 + 40);
  if (v9)
    (*(void (**)(uint64_t, BOOL))(v9 + 16))(v9, v6 == 0);

}

void sub_100016608(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    if (qword_100150388 != -1)
      dispatch_once(&qword_100150388, &stru_100122A78);
    v6 = qword_100150380;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100016708;
    v7[3] = &unk_100122AC8;
    v8 = v3;
    v9 = v5;
    dispatch_async(v6, v7);

  }
}

void sub_1000166DC(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.siri.SerialUserAttentionSupportQueue", 0);
  v2 = (void *)qword_100150380;
  qword_100150380 = (uint64_t)v1;

}

void sub_100016708(uint64_t a1)
{
  id v2;
  unsigned __int8 v3;
  NSObject *v4;
  _QWORD block[4];
  id v6;
  id v7;
  unsigned __int8 v8;

  v2 = +[AWAttentionAwarenessConfiguration supportedEvents](AWAttentionAwarenessConfiguration, "supportedEvents");
  v3 = +[CMWakeGestureManager isWakeGestureAvailable](CMWakeGestureManager, "isWakeGestureAvailable");
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000167A4;
  block[3] = &unk_100122AA0;
  v4 = *(NSObject **)(a1 + 32);
  v6 = *(id *)(a1 + 40);
  v7 = v2;
  v8 = v3;
  dispatch_async(v4, block);

}

uint64_t sub_1000167A4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

void sub_100016D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100016D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id *v6;
  id WeakRetained;
  id v8;
  id v9;
  id v10;

  qword_100151110 = *(_QWORD *)(a1 + 48);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 16) = *(_BYTE *)(a1 + 56);
  v6 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_cancelUserTouchInteractionTimeout");

  v10 = (id)objc_claimAutoreleasedReturnValue(+[SUICAutoDismissalStrategy strategyWithMode:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:isWiredMicOrBTHeadsetOrWx:](SUICAutoDismissalStrategy, "strategyWithMode:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:isWiredMicOrBTHeadsetOrWx:", *(_QWORD *)(a1 + 48), a2, a3, *(unsigned __int8 *)(a1 + 56)));
  objc_msgSend(v10, "setMinimumIdleTimeInterval:", *(double *)(*(_QWORD *)(a1 + 32) + 32));
  v8 = objc_loadWeakRetained(v6);
  objc_msgSend(v10, "setDelegate:", v8);

  v9 = objc_loadWeakRetained(v6);
  objc_msgSend(v9, "_setAutoDismissalStrategy:", v10);

}

void sub_100017690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000176B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id *v6;
  id WeakRetained;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  NSObject *v13;
  SRUserAttentionController *v14;
  id v15;
  id v16;
  NSObject *v17;
  double v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD v23[4];
  id v24;
  uint8_t buf[4];
  const char *v26;
  __int16 v27;
  double v28;

  v6 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "userAttentionController"));

  if (!v8)
  {
    v9 = objc_loadWeakRetained(v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "_autoDismissalStrategy"));
    objc_msgSend(v10, "idleTimeInterval");
    v12 = v11;

    v13 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v26 = "-[SRCompactAutoDismissController _startUserAttentionControllerIfNeededForTypes:]_block_invoke";
      v27 = 2048;
      v28 = v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s #autodismiss Creating user attention controller with attention loss timeout=%f", buf, 0x16u);
    }
    v14 = -[SRUserAttentionController initWithSamplingInterval:attentionLossTimeout:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:]([SRUserAttentionController alloc], "initWithSamplingInterval:attentionLossTimeout:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:", a2, a3, 2.0, v12);
    v15 = objc_loadWeakRetained(v6);
    -[SRUserAttentionController setDelegate:](v14, "setDelegate:", v15);

    v16 = objc_loadWeakRetained(v6);
    objc_msgSend(v16, "setUserAttentionController:", v14);

  }
  v17 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v18 = *(double *)(a1 + 40);
    *(_DWORD *)buf = 136315394;
    v26 = "-[SRCompactAutoDismissController _startUserAttentionControllerIfNeededForTypes:]_block_invoke";
    v27 = 2048;
    v28 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s #autodismiss Starting user attention controller if needed for types=%zd...", buf, 0x16u);
  }
  v19 = objc_loadWeakRetained(v6);
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "userAttentionController"));
  v21 = *(_QWORD *)(a1 + 40);
  v22 = &_dispatch_main_q;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_100017954;
  v23[3] = &unk_100122B18;
  objc_copyWeak(&v24, v6);
  objc_msgSend(v20, "startIfNeededForTypes:completionQueue:completion:", v21, &_dispatch_main_q, v23);

  objc_destroyWeak(&v24);
}

void sub_100017938(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100017954(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  id WeakRetained;

  v3 = a2;
  if (v3)
  {
    v4 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009DA38(a1, v4, (uint64_t)v3);
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[AFPreferences sharedPreferences](AFPreferences, "sharedPreferences"));
    objc_msgSend(v5, "autoDismissalMaxAttentionSamplingTime");
    v7 = v6;

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "_stopUserAttentionControllerIfNeededAfterDelay:", v7);

  }
}

void sub_100017BCC(id a1)
{
  byte_100150390 = MGGetBoolAnswer(CFSTR("8olRm6C1xqr7AJGpLRnpSw"));
}

void sub_1000183C0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x20u);
}

void sub_1000187B4(id a1, BGTask *a2)
{
  +[SRAssetsUtilities _runAssetCheckWithTask:](SRAssetsUtilities, "_runAssetCheckWithTask:", a2);
}

void sub_100018AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100018AD8(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  void *v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setTaskCompletedWithSuccess:", 0);
  v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
  {
    v4 = 136315394;
    v5 = "+[SRAssetsUtilities _runAssetCheckWithTask:]_block_invoke";
    v6 = 2048;
    v7 = 0x409C200000000000;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Download timer expired. Schedule asset check after %lf seconds", (uint8_t *)&v4, 0x16u);
  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", 1800.0));
  +[SRAssetsUtilities _scheduleAssetCheckWithEarliestBeginDate:](SRAssetsUtilities, "_scheduleAssetCheckWithEarliestBeginDate:", v3);

}

void sub_100018BE4(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  void *v4;
  SRPreferences *v5;
  uint8_t buf[4];
  const char *v7;
  __int16 v8;
  uint64_t v9;

  if (a2 == 4)
  {
    +[SRNotificationUtility postStorageLowNotification](SRNotificationUtility, "postStorageLowNotification");
    v5 = objc_alloc_init(SRPreferences);
    -[SRPreferences setHasPresentedSiriAssetsNotification:](v5, "setHasPresentedSiriAssetsNotification:", 1);
    objc_msgSend(*(id *)(a1 + 32), "setTaskCompletedWithSuccess:", 1);

  }
  else if (a2 == 3)
  {
    objc_msgSend(*(id *)(a1 + 32), "setTaskCompletedWithSuccess:", 1);
  }
  else
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      v7 = "+[SRAssetsUtilities _runAssetCheckWithTask:]_block_invoke";
      v8 = 2048;
      v9 = 0x409C200000000000;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "%s Download not finished. Schedule asset check after %lf seconds", buf, 0x16u);
    }
    objc_msgSend(*(id *)(a1 + 32), "setTaskCompletedWithSuccess:", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", 1800.0));
    +[SRAssetsUtilities _scheduleAssetCheckWithEarliestBeginDate:](SRAssetsUtilities, "_scheduleAssetCheckWithEarliestBeginDate:", v4);

  }
}

void sub_100018E44(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_100019150(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100019174(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(*(id *)(a1 + 32), "operation");
    WeakRetained = v3;
  }

}

void sub_1000191B4(uint64_t a1)
{
  id *WeakRetained;
  id v2;
  void *v3;
  id *v4;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    v2 = objc_loadWeakRetained(WeakRetained + 2);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "transitionController"));
    objc_msgSend(v3, "setOperation:", 0);

    WeakRetained = v4;
  }

}

void sub_10001A314(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v6[5];
  id v7;
  id v8;
  id v9;
  id v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_iconImageForGuideDomainSnippet:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10001A3F8;
  v6[3] = &unk_100122C40;
  v4 = *(void **)(a1 + 40);
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v2;
  v8 = v4;
  v9 = *(id *)(a1 + 48);
  v10 = *(id *)(a1 + 56);
  v5 = v2;
  objc_msgSend(v3, "addOperationWithBlock:", v6);

}

void sub_10001A3F8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "aceId"));
  objc_msgSend(v3, "setObject:forKey:", v2, v4);

  v5 = *(void **)(a1 + 56);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "aceId"));
  LODWORD(v5) = objc_msgSend(v5, "isEqualToString:", v6);

  if ((_DWORD)v5)
    objc_msgSend(*(id *)(a1 + 64), "setIconImage:", *(_QWORD *)(a1 + 40));
  v7 = *(void **)(*(_QWORD *)(a1 + 32) + 56);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "aceId"));
  objc_msgSend(v7, "removeObject:", v8);

}

uint64_t sub_10001B048(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(result + 32) + 8);
  return result;
}

void sub_10001B59C(uint64_t a1)
{
  id WeakRetained;
  _BYTE *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  unint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)WeakRetained + 4), "outputDevices"));
    if (objc_msgSend(v3, "count"))
    {
      v13 = 0u;
      v14 = 0u;
      v11 = 0u;
      v12 = 0u;
      v4 = v3;
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v5)
      {
        v6 = v5;
        v7 = *(_QWORD *)v12;
        do
        {
          for (i = 0; i != v6; i = (char *)i + 1)
          {
            if (*(_QWORD *)v12 != v7)
              objc_enumerationMutation(v4);
            v9 = (unint64_t)objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i), "deviceType", (_QWORD)v11);
            if (v9 <= 4 && ((1 << v9) & 0x13) != 0)
              v2[8] = 1;
          }
          v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
        }
        while (v6);
      }

    }
  }

}

void sub_10001B860(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v2 = (void *)qword_1001503A0;
  qword_1001503A0 = v1;

}

void sub_10001D438(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10001D45C(uint64_t a1, int a2)
{
  id *WeakRetained;
  id *v4;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && a2)
  {
    v4 = WeakRetained;
    objc_msgSend(WeakRetained[6], "becomeFirstResponder");
    WeakRetained = v4;
  }

}

id sub_10001E184(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

void sub_10001EDF4(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "setAdditionalSafeAreaInsets:", 0.0, 0.0, 0.0, 0.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "view"));
  objc_msgSend(v2, "setNeedsLayout");

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "view"));
  objc_msgSend(v3, "layoutIfNeeded");

}

void sub_10001EE7C(uint64_t a1)
{
  void *v2;
  double v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "window"));

  objc_msgSend(v6, "safeAreaInsets");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "setAdditionalSafeAreaInsets:", *(double *)(a1 + 40) - v3 + 10.0, 0.0, 0.0, 0.0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "view"));
  objc_msgSend(v4, "setNeedsLayout");

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "view"));
  objc_msgSend(v5, "layoutIfNeeded");

}

id sub_10001FCEC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layout");
}

id sub_10001FCF4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layout");
}

void sub_10002039C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1000203C8(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  const char *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 136315138;
      v10 = "-[SRCompactViewController compactViewModelDidChange:withDiff:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #compact Applying updates", (uint8_t *)&v9, 0xCu);
    }
    if (*(_BYTE *)(a1 + 88))
      v4 = objc_msgSend(WeakRetained, "_updateActiveTranscriptItems:", *(_QWORD *)(a1 + 32));
    else
      v4 = 0;
    objc_msgSend(WeakRetained, "_setInputType:", *(_QWORD *)(a1 + 80));
    objc_msgSend(WeakRetained, "_setActiveConversationTranscriptItems:", *(_QWORD *)(a1 + 40));
    objc_msgSend(WeakRetained, "_setActiveAdditionalPlatterTranscriptItems:", *(_QWORD *)(a1 + 48));
    objc_msgSend(WeakRetained, "_setSpeechRecognitionHypothesis:", *(_QWORD *)(a1 + 56));
    objc_msgSend(WeakRetained, "_setServerUtterances:", *(_QWORD *)(a1 + 64));
    if (*(_BYTE *)(a1 + 89))
    {
      if (*(_BYTE *)(a1 + 90))
        v5 = v4 == 0;
      else
        v5 = 1;
      v6 = !v5;
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_compactView"));
      objc_msgSend(v7, "contentDidUpdate:", v6);

      if (*(_BYTE *)(a1 + 91))
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_compactView"));
        objc_msgSend(v8, "contentDidUpdateForAdditionalContentView:", v6);

      }
    }
  }

}

void sub_1000217B4(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriDidDeactivate") & 1) != 0)
    -[SiriSharedUIViewControlling siriDidDeactivate](v2, "siriDidDeactivate");

}

void sub_100021C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100021CA0(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "traitCollection"));
  v5 = objc_msgSend(v4, "isAmbientPresented");

  if (v5)
  {
    v6 = objc_loadWeakRetained(v1);
    objc_msgSend(v6, "_updateAmbientAvailability");

  }
}

void sub_100022780(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "siriDidStartSpeakingWithIdentifier:") & 1) != 0)
    objc_msgSend(v3, "siriDidStartSpeakingWithIdentifier:", *(_QWORD *)(a1 + 32));

}

void sub_100022888(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "siriDidStopSpeakingWithIdentifier:speechQueueIsEmpty:") & 1) != 0)
    objc_msgSend(v3, "siriDidStopSpeakingWithIdentifier:speechQueueIsEmpty:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));

}

void sub_100022984(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if ((objc_opt_respondsToSelector(v3, "siriDidUpdateASRWithRecognition:") & 1) != 0)
    objc_msgSend(v3, "siriDidUpdateASRWithRecognition:", *(_QWORD *)(a1 + 32));

}

void sub_100022A28(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriDidTapOutsideContent") & 1) != 0)
    -[SiriSharedUIViewControlling siriDidTapOutsideContent](v2, "siriDidTapOutsideContent");

}

void sub_100022ABC(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriWillStartRequest") & 1) != 0)
    -[SiriSharedUIViewControlling siriWillStartRequest](v2, "siriWillStartRequest");

}

void sub_100022B50(id a1, SiriSharedUIViewControlling *a2)
{
  SiriSharedUIViewControlling *v2;
  NSObject *v3;
  int v4;
  const char *v5;

  v2 = a2;
  if ((objc_opt_respondsToSelector(v2, "siriIsIdleAndQuiet") & 1) != 0)
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v4 = 136315138;
      v5 = "-[SRCompactViewController siriIsIdleAndQuiet]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #compact: Calling Siri Idle", (uint8_t *)&v4, 0xCu);
    }
    -[SiriSharedUIViewControlling siriIsIdleAndQuiet](v2, "siriIsIdleAndQuiet");
  }

}

void sub_100024648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100024664(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  unsigned int v3;
  void *v4;
  void *v5;
  id v6;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = objc_msgSend(WeakRetained, "_shouldMoveViewStackForTapToEdit");

  if (v3)
  {
    v6 = objc_loadWeakRetained(v1);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "_viewStackContainerController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "viewStackContainer"));
    objc_msgSend(v5, "willPresentModalContent");

  }
}

void sub_1000249F8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v4, "layoutIfNeeded");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contentViewController"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
  objc_msgSend(v3, "layoutIfNeeded");

}

void sub_100024D18(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 160);
  *(_QWORD *)(v1 + 160) = 0;

}

void sub_100024EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;
  id *v23;
  uint64_t v24;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v24 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100024EDC(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  unsigned int v4;
  id v5;
  void *v6;
  void *v7;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = objc_msgSend(WeakRetained, "_shouldMoveViewStackForTapToEdit");

  if (v4)
  {
    v5 = objc_loadWeakRetained(v2);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_viewStackContainerController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "viewStackContainer"));
    objc_msgSend(v7, "willDismissModalContent");

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
  }
}

void sub_100024F64(uint64_t a1, void *a2)
{
  id v3;
  unsigned int v4;
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v3 = a2;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    v9 = v3;
    v4 = objc_msgSend(v3, "isCancelled");
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_viewStackContainerController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "viewStackContainer"));
    v8 = v7;
    if (v4)
      objc_msgSend(v7, "willPresentModalContent");
    else
      objc_msgSend(v7, "didDismissModalContent");

    v3 = v9;
  }

}

void sub_100026D18(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(+[BMStreams discoverabilitySignal](BMStreams, "discoverabilitySignal"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "source"));
  objc_msgSend(*(id *)(a1 + 40), "_checkAndEmitHSSignalsWithSource:forRequestOptions:", v2, *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[EAAccessoryManager sharedAccessoryManager](EAAccessoryManager, "sharedAccessoryManager"));
  objc_msgSend(*(id *)(a1 + 40), "_checkAndEmitCarPlayInvocationSourcePerVehicle:forRequestOptions:accessoryManager:", v2, *(_QWORD *)(a1 + 32), v3);
  v6 = a1 + 32;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v6 + 8);
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[BluetoothManager sharedInstance](BluetoothManager, "sharedInstance"));
  objc_msgSend(v5, "_checkAndEmitBluetoothInvocationSourcePerVehicle:forRequestOptions:btManager:", v2, v4, v7);

}

void sub_100027564(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_100027598()
{
  void *v0;

  return objc_msgSend(v0, "requestSource");
}

id sub_10002936C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "cancelAutoDismissalForTouchOutsideOfSiri");
}

void sub_100029AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100029B18(uint64_t a1)
{
  id *v2;
  void *v3;
  id v4;
  id WeakRetained;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  v4 = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "siriPresentation:didPresentViewController:", v4, *(_QWORD *)(a1 + 32));

}

void sub_100029D40(uint64_t a1, int a2, int a3, void *a4, void *a5)
{
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  _UNKNOWN **v16;
  _UNKNOWN **v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  NSObject *v31;
  NSObject *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  _QWORD v39[4];
  id v40;
  uint8_t buf[4];
  const char *v42;
  __int16 v43;
  uint64_t v44;
  __int16 v45;
  id v46;

  v9 = a4;
  v10 = a5;
  v11 = v10;
  if (!a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "recordDismissalMetricWithContext:inputType:previousLongPressBehavior:longPressBehavior:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), -1, -1);
    goto LABEL_26;
  }
  v37 = v10;
  v12 = objc_alloc((Class)SRUIFPreferences);
  v13 = objc_msgSend(v12, "initWithSuiteName:", SRUIFPreferencesDefaultDomain);
  v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", CFSTR("SiriHardwareButtonLongPressBehavior")));
  v15 = (void *)v14;
  v16 = &off_100128BC0;
  if (v14)
    v16 = (_UNKNOWN **)v14;
  v17 = v16;

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", CFSTR("SiriHardwareButtonLongPressBehaviorModificationDate")));
  v19 = objc_msgSend(v17, "integerValue");

  if (v18)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSCalendar currentCalendar](NSCalendar, "currentCalendar"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "components:fromDate:toDate:options:", 16, v18, v21, 0));

    v23 = (uint64_t)objc_msgSend(v22, "day");
  }
  else
  {
    v23 = -1;
  }
  if (v19)
    v24 = 1;
  else
    v24 = a2 == 0;
  if (v24)
  {
    v25 = (uint64_t)v19;
    if (v19 != (id)1)
      goto LABEL_23;
    v25 = 1;
    if ((a2 & 1) != 0)
      goto LABEL_23;
    if (!*(_BYTE *)(a1 + 64))
    {
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 0));
      objc_msgSend(v13, "setObject:forKey:", v26, CFSTR("SiriHardwareButtonLongPressBehavior"));

      v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
      objc_msgSend(v13, "setObject:forKey:", v27, CFSTR("SiriHardwareButtonLongPressBehaviorModificationDate"));

      v28 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        v42 = "-[SRSystemAssistantExperiencePresentation siriDidDeactivateWithCompletion:]_block_invoke";
        v43 = 2048;
        v44 = v23;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation disabling button press mitigation after %ld days", buf, 0x16u);
      }
      objc_msgSend(*(id *)(a1 + 32), "recordMitigationEndMetricWithContext:activationHistory:numberOfDaysSinceLastChange:", *(_QWORD *)(a1 + 40), v9, v23, v37);
      v25 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 1));
    objc_msgSend(v13, "setObject:forKey:", v29, CFSTR("SiriHardwareButtonLongPressBehavior"));

    v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v13, "setObject:forKey:", v30, CFSTR("SiriHardwareButtonLongPressBehaviorModificationDate"));

    v31 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v42 = "-[SRSystemAssistantExperiencePresentation siriDidDeactivateWithCompletion:]_block_invoke";
      v43 = 2048;
      v44 = v23;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation enabling button press mitigation after %ld days", buf, 0x16u);
    }
    objc_msgSend(*(id *)(a1 + 32), "recordMitigationStartMetricWithContext:activationHistory:numberOfDaysSinceLastChange:", *(_QWORD *)(a1 + 40), v9, v23, v37);
  }
  v25 = 1;
LABEL_23:
  v33 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315650;
    v42 = "-[SRSystemAssistantExperiencePresentation siriDidDeactivateWithCompletion:]_block_invoke";
    v43 = 2048;
    v44 = v25;
    v45 = 2048;
    v46 = v19;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation current behavior: %ld, previous behavior: %ld", buf, 0x20u);
  }
  objc_msgSend(*(id *)(a1 + 32), "recordDismissalMetricWithContext:inputType:previousLongPressBehavior:longPressBehavior:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), v19, v25, v37);

  v11 = v38;
LABEL_26:
  if (*(_BYTE *)(a1 + 64)
    && objc_msgSend(*(id *)(a1 + 32), "canPresentSurveyForContext:", *(_QWORD *)(a1 + 40)))
  {
    v34 = *(void **)(a1 + 32);
    v35 = *(_QWORD *)(a1 + 40);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10002A1A8;
    v39[3] = &unk_100122E20;
    v40 = *(id *)(a1 + 48);
    objc_msgSend(v34, "presentSurveyNotificationWithContext:activationHistory:withCompletion:", v35, v9, v39);

  }
  else
  {
    v36 = *(_QWORD *)(a1 + 48);
    if (v36)
      (*(void (**)(void))(v36 + 16))();
  }

}

uint64_t sub_10002A1A8(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_10002AC70(uint64_t a1)
{
  id result;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 96), *(id *)(a1 + 40));
  result = *(id *)(*(_QWORD *)(a1 + 32) + 144);
  if (result)
    return _objc_msgSend(result, "setPreviousConversation:", *(_QWORD *)(a1 + 40));
  return result;
}

void sub_10002B1E8(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 144), *(id *)(a1 + 40));
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 96);
  if (v2)
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastItem"));
    if ((objc_msgSend(v4, "isPersistentAcrossInvocations") & 1) != 0)
    {
      v3 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "isInAmbient");

      if ((v3 & 1) == 0)
        _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 144), "setPreviousConversation:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96));
    }
    else
    {

    }
  }
}

id sub_10002B820(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "cancelAutoDismissalForTouchOutsideOfSiri");
}

void sub_10002BED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_10002BEF8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_10002BF10(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24));
}

id sub_10002D5E8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  if (qword_1001503B0 != -1)
    dispatch_once(&qword_1001503B0, &stru_100122EE0);
  return _objc_msgSend(v1, "scheduleAutoDismissalForTouchOutsideOfSiri:", *(double *)&qword_1001503B8);
}

void sub_10002D94C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "siriPresentation:setStatusBarHidden:animated:", *(_QWORD *)(a1 + 32), 0, 1);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v3, "siriPresentation:setStatusViewHidden:", *(_QWORD *)(a1 + 32), 0);

}

void sub_10002DB00(id a1)
{
  id v1;
  double v2;
  id v3;

  v1 = objc_alloc((Class)SRUIFPreferences);
  v3 = objc_msgSend(v1, "initWithSuiteName:", SRUIFPreferencesDefaultDomain);
  objc_msgSend(v3, "doubleForKey:", CFSTR("TouchDismissalTimeout"));
  if (v2 <= 0.0)
    v2 = 3.0;
  qword_1001503B8 = *(_QWORD *)&v2;

}

void sub_10002E9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002EA0C(uint64_t a1)
{
  id *v2;
  void *v3;
  id v4;
  id WeakRetained;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  v4 = objc_loadWeakRetained(v2);
  objc_msgSend(v3, "siriPresentation:didPresentViewController:", v4, *(_QWORD *)(a1 + 32));

}

void sub_10002EC34(uint64_t a1, int a2, int a3, void *a4, void *a5)
{
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  _UNKNOWN **v16;
  _UNKNOWN **v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  NSObject *v31;
  NSObject *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  _QWORD v39[4];
  id v40;
  uint8_t buf[4];
  const char *v42;
  __int16 v43;
  uint64_t v44;
  __int16 v45;
  id v46;

  v9 = a4;
  v10 = a5;
  v11 = v10;
  if (!a3)
  {
    objc_msgSend(*(id *)(a1 + 32), "recordDismissalMetricWithContext:inputType:previousLongPressBehavior:longPressBehavior:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), -1, -1);
    goto LABEL_26;
  }
  v37 = v10;
  v12 = objc_alloc((Class)SRUIFPreferences);
  v13 = objc_msgSend(v12, "initWithSuiteName:", SRUIFPreferencesDefaultDomain);
  v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", CFSTR("SiriHardwareButtonLongPressBehavior")));
  v15 = (void *)v14;
  v16 = &off_100128BD8;
  if (v14)
    v16 = (_UNKNOWN **)v14;
  v17 = v16;

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKey:", CFSTR("SiriHardwareButtonLongPressBehaviorModificationDate")));
  v19 = objc_msgSend(v17, "integerValue");

  if (v18)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSCalendar currentCalendar](NSCalendar, "currentCalendar"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "components:fromDate:toDate:options:", 16, v18, v21, 0));

    v23 = (uint64_t)objc_msgSend(v22, "day");
  }
  else
  {
    v23 = -1;
  }
  if (v19)
    v24 = 1;
  else
    v24 = a2 == 0;
  if (v24)
  {
    v25 = (uint64_t)v19;
    if (v19 != (id)1)
      goto LABEL_23;
    v25 = 1;
    if ((a2 & 1) != 0)
      goto LABEL_23;
    if (!*(_BYTE *)(a1 + 64))
    {
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 0));
      objc_msgSend(v13, "setObject:forKey:", v26, CFSTR("SiriHardwareButtonLongPressBehavior"));

      v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
      objc_msgSend(v13, "setObject:forKey:", v27, CFSTR("SiriHardwareButtonLongPressBehaviorModificationDate"));

      v28 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        v42 = "-[SRCompactPresentation siriDidDeactivateWithCompletion:]_block_invoke";
        v43 = 2048;
        v44 = v23;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation disabling button press mitigation after %ld days", buf, 0x16u);
      }
      objc_msgSend(*(id *)(a1 + 32), "recordMitigationEndMetricWithContext:activationHistory:numberOfDaysSinceLastChange:", *(_QWORD *)(a1 + 40), v9, v23, v37);
      v25 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 1));
    objc_msgSend(v13, "setObject:forKey:", v29, CFSTR("SiriHardwareButtonLongPressBehavior"));

    v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v13, "setObject:forKey:", v30, CFSTR("SiriHardwareButtonLongPressBehaviorModificationDate"));

    v31 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v42 = "-[SRCompactPresentation siriDidDeactivateWithCompletion:]_block_invoke";
      v43 = 2048;
      v44 = v23;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation enabling button press mitigation after %ld days", buf, 0x16u);
    }
    objc_msgSend(*(id *)(a1 + 32), "recordMitigationStartMetricWithContext:activationHistory:numberOfDaysSinceLastChange:", *(_QWORD *)(a1 + 40), v9, v23, v37);
  }
  v25 = 1;
LABEL_23:
  v33 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315650;
    v42 = "-[SRCompactPresentation siriDidDeactivateWithCompletion:]_block_invoke";
    v43 = 2048;
    v44 = v25;
    v45 = 2048;
    v46 = v19;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation current behavior: %ld, previous behavior: %ld", buf, 0x20u);
  }
  objc_msgSend(*(id *)(a1 + 32), "recordDismissalMetricWithContext:inputType:previousLongPressBehavior:longPressBehavior:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), v19, v25, v37);

  v11 = v38;
LABEL_26:
  if (*(_BYTE *)(a1 + 64)
    && objc_msgSend(*(id *)(a1 + 32), "canPresentSurveyForContext:", *(_QWORD *)(a1 + 40)))
  {
    v34 = *(void **)(a1 + 32);
    v35 = *(_QWORD *)(a1 + 40);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10002F09C;
    v39[3] = &unk_100122E20;
    v40 = *(id *)(a1 + 48);
    objc_msgSend(v34, "presentSurveyNotificationWithContext:activationHistory:withCompletion:", v35, v9, v39);

  }
  else
  {
    v36 = *(_QWORD *)(a1 + 48);
    if (v36)
      (*(void (**)(void))(v36 + 16))();
  }

}

uint64_t sub_10002F09C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_10002FE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_10002FEB8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_10002FED0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24));
}

void sub_100031688(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "siriPresentation:setStatusBarHidden:animated:", *(_QWORD *)(a1 + 32), 0, 1);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v3, "siriPresentation:setStatusViewHidden:", *(_QWORD *)(a1 + 32), 0);

}

void sub_100031AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100031ADC(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;

  v7 = a2;
  objc_opt_class(SREditableTextView, v5);
  if ((objc_opt_isKindOfClass(v7, v6) & 1) != 0 && objc_msgSend(v7, "isFirstResponder"))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }

}

void sub_100031C5C(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
  objc_msgSend(WeakRetained, "setAlpha:", 0.0);

  v3 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 24));
  objc_msgSend(v3, "setAlpha:", 1.0);

}

uint64_t sub_100031CC8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
  objc_msgSend(WeakRetained, "removeFromSuperview");

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_100031E30(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 16));
  objc_msgSend(WeakRetained, "setAlpha:", 1.0);

  v3 = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 24));
  objc_msgSend(v3, "setAlpha:", 0.0);

}

uint64_t sub_100031E9C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 24));
  objc_msgSend(WeakRetained, "removeFromSuperview");

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_1000324C4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "siriViewControllerHeightDidChange:", *(_QWORD *)(a1 + 32));

}

void sub_10003344C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100033464(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v11 = a2;
  if ((objc_msgSend(v11, "isDescendantOfView:", *(_QWORD *)(a1 + 32)) & 1) != 0
    || objc_msgSend(*(id *)(a1 + 32), "isDescendantOfView:", v11))
  {
    objc_opt_class(SREditableTextView, v7);
    if ((objc_opt_isKindOfClass(v11, v8) & 1) != 0
      || (objc_opt_class(SRSpeechAlternativeCellView, v9), (objc_opt_isKindOfClass(v11, v10) & 1) != 0))
    {
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
    }
  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL)
    *a4 = 1;

}

void sub_100033668(uint64_t a1)
{
  id v2;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 184) = 0;
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "siriViewControllerHeightDidChange:", *(_QWORD *)(a1 + 32));

}

void sub_100033764(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "siriViewControllerHeightDidChange:", *(_QWORD *)(a1 + 32));

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_privateDelegate"));
  objc_msgSend(v3, "siriViewControllerRequestToPin:", *(_QWORD *)(a1 + 32));

}

int64_t sub_1000349D0(id a1, id a2, id a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v4 = AFUserUtteranceConfidenceIndexKey;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKey:", v4));
  v7 = objc_msgSend(v6, "integerValue");

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", v4));
  v9 = objc_msgSend(v8, "integerValue");

  if ((uint64_t)v7 < (uint64_t)v9)
    return -1;
  else
    return (uint64_t)v7 > (uint64_t)v9;
}

void sub_100034A5C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  void *v9;
  _BOOL8 v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *i;
  id v27;
  uint64_t v28;
  const __CFString *v29;
  void *v30;
  NSObject *v31;
  const __CFString *v32;
  const __CFString *v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint8_t buf[4];
  const char *v44;
  __int16 v45;
  id v46;
  __int16 v47;
  const __CFString *v48;
  __int16 v49;
  void *v50;
  __int16 v51;
  const __CFString *v52;
  _BYTE v53[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceCharacterSet](NSCharacterSet, "whitespaceCharacterSet"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringByTrimmingCharactersInSet:", v4));
  v6 = objc_msgSend(v5, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if ((v6 & 1) == 0)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKey:", v3));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", AFUserUtteranceConfidenceAverageKey));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", AFUserUtteranceConfidenceIndexKey));
    v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", AFUserUtteranceSourceKey));
    v38 = objc_msgSend(v37, "integerValue");
    v10 = v38 == (id)2;
    *(_BYTE *)(*(_QWORD *)(a1 + 48) + 120) |= v10;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 40), "addObject:", v3);
    v11 = objc_alloc_init((Class)SRUIFAlternativeInfo);
    objc_msgSend(v11, "setOriginalRank:", v9);
    objc_msgSend(v11, "setOriginalScore:", v8);
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v10));
    objc_msgSend(v11, "setIsFromDevice:", v12);

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 112), "setObject:forKey:", v11, v3);
    v13 = objc_alloc((Class)NSMutableAttributedString);
    v14 = v13;
    if (v9)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceCharacterSet](NSCharacterSet, "whitespaceCharacterSet"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringByTrimmingCharactersInSet:", v15));
      v17 = objc_msgSend(v14, "initWithString:attributes:", v16, *(_QWORD *)(a1 + 56));

      v36 = v8;
      if (*(_BYTE *)(a1 + 88))
      {
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_userUtterance"));
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "speechTokensForUtteranceAtIndex:", 0));

        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "speechTokensForUtteranceAtIndex:", objc_msgSend(v9, "integerValue")));
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "rangeListOfDifferingTextFromTargetTokenList:comparedToBaseTokenList:", v20, v19));

      }
      else
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:", objc_msgSend(v9, "integerValue"), 0));
      }
      v41 = 0u;
      v42 = 0u;
      v39 = 0u;
      v40 = 0u;
      v22 = v21;
      v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v39, v53, 16);
      if (v23)
      {
        v24 = v23;
        v25 = *(_QWORD *)v40;
        do
        {
          for (i = 0; i != v24; i = (char *)i + 1)
          {
            if (*(_QWORD *)v40 != v25)
              objc_enumerationMutation(v22);
            v27 = objc_msgSend(*(id *)(*((_QWORD *)&v39 + 1) + 8 * (_QWORD)i), "rangeValue");
            objc_msgSend(v17, "setAttributes:range:", *(_QWORD *)(a1 + 72), v27, v28);
          }
          v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v39, v53, 16);
        }
        while (v24);
      }

      v8 = v36;
    }
    else
    {
      v17 = objc_msgSend(v13, "initWithString:attributes:", v3, *(_QWORD *)(a1 + 72));
    }
    if (*(_BYTE *)(a1 + 89))
    {
      v29 = CFSTR("FIDES ");
      if (v38 != (id)2)
        v29 = &stru_100125588;
      v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR(" (%@%@)"), v29, v8));
    }
    else
    {
      v30 = 0;
    }
    v31 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v32 = CFSTR("Server");
      *(_DWORD *)buf = 136316162;
      v44 = "-[SRUserUtteranceViewController _processUserUtterance:isCombined:displayedText:withScore:]_block_invoke_2";
      if (v38 == (id)2)
        v32 = CFSTR("Client");
      v45 = 2112;
      v46 = v3;
      v47 = 2112;
      v48 = v32;
      if (v17)
        v33 = &stru_100125588;
      else
        v33 = CFSTR("(removing dupe)");
      v49 = 2112;
      v50 = v8;
      v51 = 2112;
      v52 = v33;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "%s Speech alternative utterance: %@ (%@ %@%@)", buf, 0x34u);
    }
    v34 = v17;
    if (v30)
    {
      v35 = objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:attributes:", v30, *(_QWORD *)(a1 + 72));
      objc_msgSend(v34, "appendAttributedString:", v35);

    }
    if (v34)
      objc_msgSend(*(id *)(a1 + 80), "addObject:", v34);

  }
}

void sub_100035BD8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100035C04(uint64_t a1)
{
  id WeakRetained;
  id v3;
  BOOL v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  unsigned int v9;
  void *v10;
  uint64_t v11;
  int v12;
  id v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!WeakRetained)
    goto LABEL_15;
  v13 = WeakRetained;
  v3 = objc_msgSend(WeakRetained, "operation");
  if (v3 != (id)2)
  {
    v4 = v3 == (id)1;
    WeakRetained = v13;
    if (!v4)
      goto LABEL_15;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_navigationController"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "viewControllers"));
    if ((unint64_t)objc_msgSend(v6, "count") >= 3)
    {
      v7 = *(unsigned __int8 *)(a1 + 40);

      WeakRetained = v13;
      if (v7)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_navigationController"));
        v9 = objc_msgSend(v8, "isNavigationBarHidden");

        WeakRetained = v13;
        if (v9)
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_navigationController"));
          v5 = v10;
          v11 = 0;
LABEL_12:
          objc_msgSend(v10, "setNavigationBarHidden:", v11);
LABEL_14:

          WeakRetained = v13;
          goto LABEL_15;
        }
      }
      goto LABEL_15;
    }
LABEL_13:

    goto LABEL_14;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_navigationController"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "viewControllers"));
  if (objc_msgSend(v6, "count") != (id)2)
    goto LABEL_13;
  v12 = *(unsigned __int8 *)(a1 + 40);

  WeakRetained = v13;
  if (v12)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_navigationController"));
    v5 = v10;
    v11 = 1;
    goto LABEL_12;
  }
LABEL_15:

}

void sub_100035D28(uint64_t a1)
{
  id *WeakRetained;
  uint64_t v2;
  id *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  _QWORD block[5];

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    if (SiriUIDeviceIsPad(WeakRetained, v2))
    {
      v4 = objc_loadWeakRetained(v3 + 2);
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "viewControllers"));
      v6 = objc_msgSend(v5, "count");

      if ((unint64_t)v6 >= 3)
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100035E08;
        block[3] = &unk_1001225C0;
        block[4] = v3;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_navigationController"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "transitionController"));
    objc_msgSend(v8, "setOperation:", 0);

  }
}

void sub_100035E08(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_navigationController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_realCloseButton"));
  objc_msgSend(v2, "bringSubviewToFront:", v3);

}

id sub_100036B7C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  CGAffineTransform v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layer"));
  objc_msgSend(v2, "setCornerRadius:", *(double *)(a1 + 72));

  objc_msgSend(*(id *)(a1 + 32), "setFrame:", *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
  v3 = *(void **)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIBlurEffect effectWithStyle:](UIBlurEffect, "effectWithStyle:", 4));
  objc_msgSend(v3, "setEffect:", v4);

  v5 = *(void **)(a1 + 48);
  objc_msgSend(v5, "center");
  v7 = v6;
  objc_msgSend(*(id *)(a1 + 48), "center");
  objc_msgSend(v5, "setCenter:", v7, v8 - *(double *)(a1 + 112));
  objc_msgSend(*(id *)(a1 + 48), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + 56), "setEffect:", 0);
  v9 = *(void **)(a1 + 64);
  CGAffineTransformMakeTranslation(&v11, 0.0, -*(double *)(a1 + 112));
  objc_msgSend(v9, "setTransform:", &v11);
  return objc_msgSend(*(id *)(a1 + 64), "setAlpha:", 1.0);
}

id sub_100036C7C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "layer"));
  objc_msgSend(v2, "setCornerRadius:", 0.0);

  objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 48), "removeFromSuperview");
  objc_msgSend(*(id *)(a1 + 56), "removeFromSuperview");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 64) + 32), "setHidden:", 0);
  objc_msgSend(*(id *)(a1 + 72), "setHidden:", 1);
  return objc_msgSend(*(id *)(a1 + 80), "completeTransition:", objc_msgSend(*(id *)(a1 + 80), "transitionWasCancelled") ^ 1);
}

void sub_100036F88(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

id sub_100036FAC(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIBlurEffect effectWithStyle:](UIBlurEffect, "effectWithStyle:", 4));
  objc_msgSend(v2, "setEffect:", v3);

  objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(a1 + 48), "setAlpha:", 0.0);
}

void sub_100037010(id *a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    objc_msgSend(a1[4], "removeFromSuperview");
    objc_msgSend(a1[5], "removeFromSuperview");
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_navigationController"));
    objc_msgSend(v2, "setAnimatingBackgroundView:", 0);

  }
}

void sub_100037C2C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100037C50(uint64_t a1)
{
  id WeakRetained;
  id v2;
  BOOL v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    v2 = objc_msgSend(WeakRetained, "operation");
    if (v2 == (id)2)
    {
      objc_msgSend(v4, "_performPopAnimations");
    }
    else
    {
      v3 = v2 == (id)1;
      WeakRetained = v4;
      if (!v3)
        goto LABEL_8;
      objc_msgSend(v4, "_performPushAnimations");
    }
    WeakRetained = v4;
  }
LABEL_8:

}

void sub_100037CA8(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  LODWORD(v2) = objc_msgSend(v3, "isCancelled");

  if ((_DWORD)v2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_navigationController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "viewControllers"));
    v6 = objc_msgSend(v5, "count");

    if (v6 == (id)2)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
      objc_msgSend(v7, "blurFromRootNavigationTransitionController:requestBackgroundBlurViewVisible:", WeakRetained, 1);

    }
  }
  objc_msgSend(WeakRetained, "_updateBlurVisibility");

}

id sub_100038230(uint64_t a1)
{
  const __CFString *v1;
  const __CFString *v2;

  v1 = CFSTR("Voice");
  if (a1 == 1)
    v1 = CFSTR("Mixed");
  if (a1 == 2)
    v2 = CFSTR("Silent");
  else
    v2 = v1;
  return objc_msgSend(CFSTR("SRMode"), "stringByAppendingString:", v2);
}

__CFString *sub_100038794(uint64_t a1)
{
  __CFString *v1;

  v1 = CFSTR("Voice");
  if (a1 == 1)
    v1 = CFSTR("Mixed");
  if (a1 == 2)
    return CFSTR("Silent");
  else
    return v1;
}

id sub_100038A5C(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v1 = a1;
  v2 = sub_100038E28();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = sub_100038EE0();
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "setByAddingObjectsFromSet:", v5));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "name"));
  v8 = objc_msgSend(v6, "containsObject:", v7);

  return v8;
}

id sub_100038E28()
{
  void *v0;
  void *v1;
  _QWORD v3[3];

  v3[0] = UIKeyboardWillShowNotification;
  v3[1] = UIKeyboardWillHideNotification;
  v3[2] = UIKeyboardWillChangeFrameNotification;
  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 3));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v0));

  return v1;
}

id sub_100038EE0()
{
  void *v0;
  void *v1;
  _QWORD v3[3];

  v3[0] = UIKeyboardDidShowNotification;
  v3[1] = UIKeyboardDidHideNotification;
  v3[2] = UIKeyboardDidChangeFrameNotification;
  v0 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 3));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v0));

  return v1;
}

void sub_100038F98(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, a5, 0x16u);
}

BOOL sub_10003A02C(id a1, NSURL *a2, NSError *a3)
{
  NSURL *v4;
  NSError *v5;
  NSObject *v6;

  v4 = a2;
  v5 = a3;
  v6 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009E584((uint64_t)v4, (uint64_t)v5, v6);

  return 1;
}

id sub_10003A850(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[SRBundleUtilities getSiriAppBundle](_TtC4Siri17SRBundleUtilities, "getSiriAppBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "siriUILocalizedStringForKey:table:", v1, 0));

  return v3;
}

void sub_10003AF10(id a1, UIViewControllerTransitionCoordinatorContext *a2)
{
  kdebug_trace(722469692, 0, 0, 0, 0);
}

void sub_10003B09C(uint64_t a1)
{
  id *WeakRetained;
  id *v2;
  NSObject *v3;
  int v4;
  const char *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained && WeakRetained[23])
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v4 = 136315138;
      v5 = "-[SRSiriViewController _setupXPCListener]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #xpcSiriApp Resuming XPC Connection", (uint8_t *)&v4, 0xCu);
    }
    objc_msgSend(v2[23], "resume");
  }

}

void sub_10003B454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003B48C(uint64_t a1)
{
  NSObject *v1;
  _QWORD block[4];
  id v3;

  v1 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10003B504;
  block[3] = &unk_100122638;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  dispatch_async(v1, block);
  objc_destroyWeak(&v3);
}

void sub_10003B504(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_connectionWasInvalidated");

}

void sub_10003B530(uint64_t a1)
{
  NSObject *v1;
  _QWORD block[4];
  id v3;

  v1 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10003B5A8;
  block[3] = &unk_100122638;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  dispatch_async(v1, block);
  objc_destroyWeak(&v3);
}

void sub_10003B5A8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_connectionWasInterrupted");

}

void sub_10003BB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003BBAC(uint64_t a1, uint64_t a2, char a3)
{
  id WeakRetained;
  void *v5;
  void *v6;
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v7 = WeakRetained;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_host"));
    v6 = v5;
    if ((a3 & 1) != 0)
      objc_msgSend(v5, "serviceDidEnterUITrackingMode");
    else
      objc_msgSend(v5, "serviceDidExitUITrackingMode");

    WeakRetained = v7;
  }

}

void sub_10003C570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003C588(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10003C598(uint64_t a1)
{

}

void sub_10003C5A0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  unsigned int v8;
  id v9;

  v9 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "identifier"));
  v8 = objc_msgSend(v7, "isEqual:", *(_QWORD *)(a1 + 32));

  if (v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_10003C8E4(id a1, BOOL a2, NSError *a3)
{
  NSError *v4;
  NSObject *v5;
  uint64_t v6;

  v4 = a3;
  if (!a2)
  {
    v5 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009E71C((uint64_t)v4, v5, v6);
  }

}

void sub_10003CBC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003CBF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id WeakRetained;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  void *v12;
  uint64_t v13;
  int v14;
  const char *v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;

  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v7 = AFSiriLogContextConnection;
  if ((_DWORD)a2)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(a1 + 40);
      v14 = 136315650;
      v15 = "-[SRSiriViewController _saveConversationWithCompletion:]_block_invoke";
      v16 = 2112;
      v17 = v8;
      v18 = 2112;
      v19 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s #conversation Conversation successfully saved to store { identifier: %@, conversation: %@ }", (uint8_t *)&v14, 0x20u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
  {
    sub_10009E7AC();
  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
  v11 = objc_opt_respondsToSelector(v10, "attemptedToSaveConversation:withResult:");

  if ((v11 & 1) != 0)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
    objc_msgSend(v12, "attemptedToSaveConversation:withResult:", *(_QWORD *)(a1 + 40), a2);

  }
  v13 = *(_QWORD *)(a1 + 48);
  if (v13)
    (*(void (**)(void))(v13 + 16))();

}

id sub_10003CE6C(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "identifier"));
  v4 = objc_msgSend(v3, "isEqual:", *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_10003D194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003D1B8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10003D28C;
  v9[3] = &unk_100123298;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  v7 = v6;
  v10 = v7;
  v8 = v5;
  v11 = v8;
  SiriUIInvokeOnMainQueue(v9);

  objc_destroyWeak(&v12);
}

void sub_10003D278(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10003D28C(id *a1)
{
  id WeakRetained;
  uint64_t *v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  id v7;
  void *v8;
  NSObject *v9;
  id v10;
  void *v11;
  char v12;
  NSObject *v13;
  void *v14;
  void *v15;
  char v16;
  NSObject *v17;
  void *v18;
  NSObject *v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[4];
  id v24;
  id v25;
  uint8_t buf[4];
  const char *v27;
  __int16 v28;
  id v29;
  __int16 v30;
  id v31;

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    v3 = (uint64_t *)(a1 + 4);
    if (a1[4])
    {
      v4 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
        sub_10009E824(v3, v4, v5);
    }
    else
    {
      objc_msgSend(a1[5], "setDelegate:", WeakRetained);
      v6 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        v7 = a1[5];
        *(_DWORD *)buf = 136315650;
        v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
        v28 = 2112;
        v29 = (id)AFUIPreviousConversationIdentifier;
        v30 = 2112;
        v31 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #conversation Loaded previous conversation { identifier: %@, conversation: %@ }", buf, 0x20u);
      }
      if (objc_msgSend(WeakRetained, "_languageMatchesConversation:", a1[5]))
      {
        if (objc_msgSend(a1[5], "isSynchronizedWithServer"))
          objc_msgSend(WeakRetained, "_cancelLastRootProvisionalSnippetFromLastRequestInConversation:", a1[5]);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_conversations"));
        objc_msgSend(v8, "insertObject:atIndex:", a1[5], 0);

        v9 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
        {
          v10 = a1[5];
          *(_DWORD *)buf = 136315394;
          v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
          v28 = 2112;
          v29 = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s #conversation Inserted previous conversation into conversation list { conversation: %@ }", buf, 0x16u);
        }
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
        v12 = objc_opt_respondsToSelector(v11, "conversationListDidChange");

        if ((v12 & 1) != 0)
        {
          v13 = AFSiriLogContextConnection;
          if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136315138;
            v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s #conversation Notifying presentation that our conversation list changed", buf, 0xCu);
          }
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
          objc_msgSend(v14, "conversationListDidChange");

        }
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
        v16 = objc_opt_respondsToSelector(v15, "previousConversationDidLoad:");

        if ((v16 & 1) != 0)
        {
          v17 = AFSiriLogContextConnection;
          if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136315138;
            v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s #conversation Notifying presentation that the previous conversation was loaded from disk", buf, 0xCu);
          }
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
          objc_msgSend(v18, "previousConversationDidLoad:", a1[5]);

        }
      }
      else
      {
        v19 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
        {
          v20 = a1[5];
          *(_DWORD *)buf = 136315394;
          v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
          v28 = 2112;
          v29 = v20;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "%s #conversation Previous conversation language doesn't match current language; removing from the store { co"
            "nversation: %@ }",
            buf,
            0x16u);
        }
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_conversationStore"));
        v22 = AFUIPreviousConversationIdentifier;
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 3221225472;
        v23[2] = sub_10003D66C;
        v23[3] = &unk_100123270;
        v24 = a1[5];
        v25 = a1[4];
        objc_msgSend(v21, "removeConversationWithIdentifier:completionBlock:", v22, v23);

      }
    }
  }

}

void sub_10003D66C(uint64_t a1, char a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;

  v5 = a3;
  if ((a2 & 1) == 0)
  {
    v6 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009E8B8(a1, v6, v7);
  }

}

void sub_10003E190(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_10003E1BC(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10003E1C4(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10003E1CC(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  const char *v7;
  __int16 v8;
  uint64_t v9;

  v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v6 = 136315394;
    v7 = "-[SRSiriViewController siriDidDeactivateWithCompletion:]_block_invoke";
    v8 = 2112;
    v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s Releasing %@", (uint8_t *)&v6, 0x16u);
  }
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = 0;

}

uint64_t sub_10003E2A0(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_10003E68C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003E6B0(uint64_t a1, int a2, void *a3)
{
  id v5;
  id WeakRetained;
  NSObject *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  __int16 v11;
  int v12;
  __int16 v13;
  id v14;

  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 136315650;
    v10 = "-[SRSiriViewController showAppUnlockForAppId:completion:]_block_invoke";
    v11 = 1026;
    v12 = a2;
    v13 = 2112;
    v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s APGuard complete for App Unlock, success=%{public, BOOL}d, error=%@", (uint8_t *)&v9, 0x1Cu);
  }
  if (v5)
    v8 = 1;
  else
    v8 = a2 ^ 1u;
  objc_msgSend(WeakRetained, "siriWillHidePasscodeUnlockForResult:", v8);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  objc_msgSend(WeakRetained, "siriDidHidePasscodeUnlock");

}

void sub_10003EFF8(id a1, NSError *a2)
{
  NSError *v2;

  v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009EA90();

}

uint64_t sub_100040308(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t result;

  v4 = *(void **)(a1 + 32);
  if (v4)
  {
    objc_msgSend(v4, "willMoveToParentViewController:", 0);
    objc_msgSend(*(id *)(a1 + 32), "removeFromParentViewController");
  }
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

void sub_1000407C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_1000407E4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

void sub_1000407FC(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v5;
  char v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;

  if ((_DWORD)a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
    v6 = objc_opt_respondsToSelector(v5, "siriDidOpenURL:bundleId:inPlace:");

    if ((v6 & 1) != 0)
    {
      v7 = objc_loadWeakRetained((id *)(a1 + 64));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "_presentation"));
      objc_msgSend(v8, "siriDidOpenURL:bundleId:inPlace:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 72));

    }
  }
  v9 = *(_QWORD *)(a1 + 56);
  if (v9)
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v9, a2);
  v10 = objc_loadWeakRetained((id *)(a1 + 64));
  if (v10 && (_DWORD)a2)
  {
    v12 = v10;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[SAUIAppPunchOutEvent sruif_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:](SAUIAppPunchOutEvent, "sruif_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), 0, *(_QWORD *)(a1 + 40)));
    objc_msgSend(v12, "_performGenericAceCommand:turnIdentifier:completion:", v11, 0, 0);
    if (!*(_BYTE *)(a1 + 72))
    {
      objc_msgSend(v12, "_setRequestActive:", 0);
      objc_msgSend(v12, "_checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded");
    }

    v10 = v12;
  }

}

void sub_100040ACC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  void *v6;
  id WeakRetained;
  int v8;
  const char *v9;
  __int16 v10;
  uint64_t v11;
  __int16 v12;
  void *v13;

  v2 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 48);
    v4 = *(void **)(a1 + 32);
    v5 = v2;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "aceId"));
    v8 = 136315650;
    v9 = "-[SRSiriViewController _delayAceCommandSuccess:forDuration:]_block_invoke";
    v10 = 2048;
    v11 = v3;
    v12 = 2112;
    v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #aceCommandRecord completing scheduled delayed action after %f seconds for command %@", (uint8_t *)&v8, 0x20u);

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_didCompleteActionForAceCommand:success:", *(_QWORD *)(a1 + 32), 1);

}

void sub_10004141C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  uint64_t v10;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v10 - 128));
  _Unwind_Resume(a1);
}

uint64_t sub_100041440(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_100041454(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id *WeakRetained;
  id *v7;
  NSObject *v8;
  int v9;
  NSObject *v10;
  _BOOL4 v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD *v22;
  NSObject *v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  int v28;
  NSObject *v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  char v41;
  uint64_t v42;
  id v43;
  _QWORD v44[4];
  id v45;
  id v46;
  id v47;
  char v48;
  id location;
  id v50;
  char v51;
  uint8_t buf[4];
  const char *v53;
  __int16 v54;
  uint64_t v55;
  __int16 v56;
  uint64_t v57;

  v5 = a3;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 136));
  v7 = WeakRetained;
  if (!WeakRetained)
  {
LABEL_5:
    (*(void (**)(void))(*(_QWORD *)(a1 + 112) + 16))();
    goto LABEL_38;
  }
  if (v5)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009ECFC();
    goto LABEL_5;
  }
  objc_msgSend(WeakRetained[28], "setAudioSessionID:", a2);
  if (!*(_QWORD *)(a1 + 32))
  {
    v9 = *(unsigned __int8 *)(a1 + 153);
    v10 = AFSiriLogContextConnection;
    v11 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if (v9)
    {
      if (!v11)
        goto LABEL_17;
      v12 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)buf = 136315394;
      v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      v54 = 2112;
      v55 = v12;
      v13 = "%s #tts 5 text:%@";
    }
    else
    {
      if (!v11)
        goto LABEL_17;
      v14 = *(_QWORD *)(a1 + 56);
      *(_DWORD *)buf = 136315395;
      v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      v54 = 2117;
      v55 = v14;
      v13 = "%s #tts 5 text:%{sensitive}@";
    }
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v13, buf, 0x16u);
LABEL_17:
    v51 = 0;
    v16 = *(_QWORD *)(a1 + 56);
    v15 = *(void **)(a1 + 64);
    v50 = 0;
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "parseStringWithFormat:error:containsPrivacySensitiveContents:", v16, &v50, &v51));
    v43 = v50;
    if (!v17)
    {
      v28 = *(unsigned __int8 *)(a1 + 153);
      v29 = AFSiriLogContextConnection;
      v30 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR);
      if (v28)
      {
        if (v30)
          sub_10009EC8C();
      }
      else if (v30)
      {
        sub_10009EC10(v29, v31, v32, v33, v34, v35, v36, v37);
      }
      (*(void (**)(void))(*(_QWORD *)(a1 + 112) + 16))();
      goto LABEL_37;
    }
    objc_initWeak(&location, v7);
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    v44[2] = sub_100041948;
    v44[3] = &unk_1001234A0;
    objc_copyWeak(&v47, &location);
    v46 = *(id *)(a1 + 128);
    v45 = v17;
    v48 = v51;
    v18 = objc_retainBlock(v44);
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "UUIDString"));

    v21 = v7[6];
    v22 = objc_retainBlock(v18);
    objc_msgSend(v21, "setObject:forKey:", v22, v20);

    LODWORD(v21) = *(unsigned __int8 *)(a1 + 153);
    v23 = AFSiriLogContextConnection;
    v24 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if ((_DWORD)v21)
    {
      if (v24)
      {
        v25 = *(_QWORD *)(a1 + 56);
        v26 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 136315650;
        v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:"
              "gender:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsConte"
              "xt:speakableContextInfo:preparation:completion:]_block_invoke";
        v54 = 2112;
        v55 = v25;
        v56 = 2112;
        v57 = v26;
        v27 = "%s #tts 6 Enqueuing \"%@\" identifier=%@";
LABEL_26:
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, v27, buf, 0x20u);
      }
    }
    else if (v24)
    {
      v38 = *(_QWORD *)(a1 + 56);
      v39 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 136315651;
      v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      v54 = 2117;
      v55 = v38;
      v56 = 2112;
      v57 = v39;
      v27 = "%s #tts 6 Enqueuing \"%{sensitive}@\" identifier=%@";
      goto LABEL_26;
    }
    if (*(_BYTE *)(a1 + 153))
      v40 = v51 == 0;
    else
      v40 = 0;
    v41 = v40;
    BYTE3(v42) = v41;
    BYTE2(v42) = *(_BYTE *)(a1 + 154);
    BYTE1(v42) = *(_BYTE *)(a1 + 152);
    LOBYTE(v42) = 0;
    objc_msgSend(v7[28], "enqueueText:identifier:sessionId:preferredVoice:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:completion:analyticsContext:speakableContextInfo:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(double *)(a1 + 144), v42, v20, *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));

    objc_destroyWeak(&v47);
    objc_destroyWeak(&location);
LABEL_37:

    goto LABEL_38;
  }
  v8 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gend"
          "er:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speak"
          "ableContextInfo:preparation:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts 5 audioData", buf, 0xCu);
  }
  objc_msgSend(v7[28], "enqueueAudioData:identifier:sessionId:provisionally:eligibleAfterDuration:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 152), *(_QWORD *)(a1 + 120), *(double *)(a1 + 144));
LABEL_38:

}

void sub_100041924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100041948(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  NSObject *v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint8_t buf[4];
  const char *v16;

  v3 = a2;
  v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v16 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gend"
          "er:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speak"
          "ableContextInfo:preparation:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts 12", buf, 0xCu);
  }
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100041B54;
  v12[3] = &unk_100123478;
  objc_copyWeak(&v14, (id *)(a1 + 48));
  v5 = v3;
  v13 = v5;
  v6 = objc_retainBlock(v12);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = AFSiriLogContextConnection;
  v9 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    if (v9)
    {
      *(_DWORD *)buf = 136315138;
      v16 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts 13 Only if there is a bulletinIdentifier", buf, 0xCu);
    }
    (*(void (**)(_QWORD, _QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), v6, v10, v11);
  }
  else
  {
    if (v9)
    {
      *(_DWORD *)buf = 136315138;
      v16 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts 13", buf, 0xCu);
    }
    ((void (*)(_QWORD *, _QWORD, _QWORD))v6[2])(v6, *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 56));
  }

  objc_destroyWeak(&v14);
}

void sub_100041B38(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100041B54(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id WeakRetained;
  void *v6;
  NSObject *v7;
  int v8;
  const char *v9;

  v3 = a2;
  v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v8 = 136315138;
    v9 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gende"
         "r:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speakab"
         "leContextInfo:preparation:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts 14", (uint8_t *)&v8, 0xCu);
  }
  if (v3)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_repeatablePhrases"));
    objc_msgSend(v6, "addObject:", v3);

  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v8 = 136315138;
      v9 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gen"
           "der:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:spe"
           "akableContextInfo:preparation:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s #tts 15", (uint8_t *)&v8, 0xCu);
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

void sub_10004394C(id a1, NSError *a2)
{
  NSError *v2;
  NSObject *v3;
  int v4;
  const char *v5;
  __int16 v6;
  NSError *v7;

  v2 = a2;
  v3 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 136315394;
    v5 = "-[SRSiriViewController siriSessionWillStartRequest]_block_invoke";
    v6 = 2112;
    v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s Emitting trigger for AIMLExperimentationManager failed with: %@", (uint8_t *)&v4, 0x16u);
  }

}

uint64_t sub_100043B9C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_100043F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100043F2C(uint64_t a1, int a2)
{
  NSObject *v4;
  int v5;
  id WeakRetained;
  id v7;
  id v8;
  unsigned __int8 v9;
  id v10;
  id v11;
  id v12;
  int v13;
  const char *v14;
  __int16 v15;
  int v16;
  __int16 v17;
  int v18;

  v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(unsigned __int8 *)(a1 + 40);
    v13 = 136315650;
    v14 = "-[SRSiriViewController siriSessionDidFinishRequestWithError:]_block_invoke";
    v15 = 1024;
    v16 = v5;
    v17 = 1024;
    v18 = a2 ^ 1;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Should start listen after speaking %d %d", (uint8_t *)&v13, 0x18u);
  }
  if (*(_BYTE *)(a1 + 40) && (a2 & 1) == 0)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "_startListenAfterSpeaking");

  }
  v7 = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(v7, "_setListenAfterSpeakingForRepeatable:", *(unsigned __int8 *)(a1 + 40));

  v8 = objc_loadWeakRetained((id *)(a1 + 32));
  v9 = objc_msgSend(v8, "_isWaitingForStartRequest");

  if ((v9 & 1) == 0)
  {
    v10 = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(v10, "_setRequestActive:", 0);

  }
  v11 = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(v11, "_setWaitingForStartRequest:", *(unsigned __int8 *)(a1 + 40));

  v12 = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(v12, "_checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded");

}

void sub_1000443C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000443E8(uint64_t a1)
{
  id WeakRetained;
  id v3;
  void *v4;
  BOOL v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v11 = WeakRetained;
    v3 = objc_msgSend(WeakRetained, "_instrumentationPresentationForPresentationOptions:", objc_msgSend(WeakRetained, "_presentationOptions"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[SRUIFInstrumentationManager sharedManager](SRUIFInstrumentationManager, "sharedManager"));
    objc_msgSend(v4, "emitUIStateTransitionEventWithFromState:toState:withPresentationType:machAbsoluteTransitionTime:", objc_msgSend(v11, "_mapSiriTransitionState:", *(_QWORD *)(a1 + 40)), objc_msgSend(v11, "_mapSiriTransitionState:", *(_QWORD *)(a1 + 48)), v3, *(double *)(a1 + 56));

    v5 = objc_msgSend(v11, "_mapSiriTransitionState:", *(_QWORD *)(a1 + 48)) == 5;
    WeakRetained = v11;
    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "_requestOptions"));
      v7 = objc_msgSend(v6, "requestSource");

      WeakRetained = v11;
      if (v7 == (id)13)
      {
        v8 = objc_alloc_init((Class)SISchemaUEILaunchEnded);
        objc_msgSend(v8, "setExists:", 1);
        v9 = objc_alloc_init((Class)SISchemaUEILaunchContext);
        objc_msgSend(v9, "setEnded:", v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue(+[SRUIFInstrumentationManager sharedManager](SRUIFInstrumentationManager, "sharedManager"));
        objc_msgSend(v10, "emitInstrumentation:atTime:", v9, (unint64_t)*(double *)(a1 + 56));

        WeakRetained = v11;
      }
    }
  }

}

uint64_t sub_10004452C(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 0xF)
    return 0;
  else
    return a2;
}

id sub_100044C08(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "siriSessionDidChangeNetworkAvailability");
}

void sub_100044F18(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;

  if (*(_QWORD *)(a1 + 40))
  {
    v3 = *(void **)(a1 + 32);
    if ((a2 & 1) != 0)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "aceId"));
      v5 = objc_claimAutoreleasedReturnValue(+[SACommandSucceeded sruif_commandSucceededWithRefId:](SACommandSucceeded, "sruif_commandSucceededWithRefId:", v4));
    }
    else
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "aceId"));
      v5 = objc_claimAutoreleasedReturnValue(+[SACommandFailed sruif_commandFailedWithRefId:](SACommandFailed, "sruif_commandFailedWithRefId:", v4));
    }
    v6 = (id)v5;

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
}

void sub_1000451B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000451DC(uint64_t a1)
{
  _BYTE *WeakRetained;
  NSObject *v3;
  uint64_t v4;
  int v5;
  const char *v6;
  __int16 v7;
  uint64_t v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(_QWORD *)(a1 + 32);
      v5 = 136315394;
      v6 = "-[SRSiriViewController siriSessionOpenURL:completionHandler:]_block_invoke";
      v7 = 2112;
      v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #punchout 8 Performing InPlace punchout %@", (uint8_t *)&v5, 0x16u);
    }
    WeakRetained[23] = 0;
    if (objc_msgSend(WeakRetained, "_usesEventDrivenIdleAndQuietUpdates"))
      objc_msgSend(WeakRetained, "_checkAndUpdateSiriIdleAndQuietStatusIfNeeded");
  }

}

void sub_100045EA0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100045EC4(uint64_t a1, void *a2)
{
  id WeakRetained;
  _BOOL8 v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (objc_msgSend(v5, "length"))
      v4 = 0;
    else
      v4 = *(_BYTE *)(a1 + 40) != 0;
    objc_msgSend(WeakRetained, "_setShowKeyboardIfTextInputEnabled:minimized:", *(unsigned __int8 *)(a1 + 41), v4);
    objc_msgSend(WeakRetained, "_setKeyboardLoweredAfterResponse:", *(unsigned __int8 *)(a1 + 40));
  }

}

void sub_100046DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  id *v37;

  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100046DD0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requestEndBehavior"));
  objc_msgSend(v4, "handleRequestEndBehavior:isAttending:", v5, a2);

}

uint64_t sub_100047628(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_100047A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100047A6C(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "playables"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "firstObject"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "movieClips"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "firstObject"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "preferredAsset"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "url"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v12));

  objc_msgSend(a1[4], "setHiresTrailerUri:", v13);
  objc_msgSend(a1[4], "setLowresTrailerUri:", v13);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100047BF4;
  v14[3] = &unk_100123640;
  objc_copyWeak(&v17, a1 + 6);
  v15 = a1[4];
  v16 = a1[5];
  SiriUIInvokeOnMainQueue(v14);

  objc_destroyWeak(&v17);
}

void sub_100047BE0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100047BF4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "siriSessionDidReceivePlayContentCommand:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_100048300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,id location)
{
  id *v59;

  objc_destroyWeak(v59);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100048324(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_presentation"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "requestEndBehavior"));
  objc_msgSend(v4, "handleRequestEndBehavior:isAttending:", v5, a2);

}

void sub_100048398(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;

  v5 = a2;
  objc_opt_class(SAUIAddViews, v6);
  if ((objc_opt_isKindOfClass(v5, v7) & 1) != 0)
  {
    v9 = *(void **)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 48);
    v11 = objc_msgSend(v9, "_MDModeToSRModeConverter:", *(_QWORD *)(a1 + 56));
    if (v10 == a3)
    {
      v12 = *(_QWORD *)(a1 + 40);
      v13 = v9;
      v14 = v5;
    }
    else
    {
      v13 = v9;
      v14 = v5;
      v12 = 0;
    }
    objc_msgSend(v13, "_processAddViewsCommand:forMode:completion:", v14, v11, v12);
  }
  else
  {
    objc_opt_class(SAUISayIt, v8);
    if ((objc_opt_isKindOfClass(v5, v15) & 1) != 0)
    {
      if (*(_QWORD *)(a1 + 48) == a3)
      {
        v16 = *(_QWORD *)(a1 + 40);
        v17 = v5;
      }
      else
      {
        v17 = v5;
        v16 = 0;
      }
      objc_msgSend(*(id *)(a1 + 32), "siriSessionDidReceiveSayItCommand:completion:", v17, v16);
    }
    else
    {
      v18 = (void *)AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
        sub_10009F008(v18);
    }
  }

}

void sub_100048B08(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_100048B48(id *a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 8);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100048CF4;
  v15[3] = &unk_1001236B8;
  objc_copyWeak(&v17, a1 + 8);
  v16 = a1[4];
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_hostWithErrorHandler:", v15));
  v6 = a1[4];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100048D54;
  v8[3] = &unk_1001236E0;
  objc_copyWeak(&v14, a1 + 8);
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  v12 = a1[7];
  v7 = v3;
  v13 = v7;
  objc_msgSend(v5, "serviceBulletinWithIdentifier:replyHandler:", v6, v8);

  objc_destroyWeak(&v14);
  objc_destroyWeak(&v17);

}

void sub_100048CD0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100048CF4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;

  v3 = a2;
  v4 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009F124(a1, v4, (uint64_t)v3);

}

void sub_100048D54(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  unsigned __int8 v11;

  v3 = a2;
  v4 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
  {
    sub_10009F250(a1, v4);
    if (!v3)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v3)
LABEL_3:
    objc_msgSend(*(id *)(a1 + 40), "setAssistantBulletin:", v3);
LABEL_4:
  v11 = 0;
  v5 = *(void **)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v10 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "parseStringWithFormat:error:containsPrivacySensitiveContents:", v6, &v10, &v11));
  v8 = v10;
  if (!v7 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009F1E0();
  v9 = *(_QWORD *)(a1 + 64);
  if (v9)
    (*(void (**)(uint64_t, void *, _QWORD))(v9 + 16))(v9, v7, v11);

}

void sub_100048E44(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  int v5;
  void *v6;
  _BOOL4 v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t Name;
  void *v11;
  uint64_t v12;
  const char *v13;
  NSObject *v14;
  int v15;
  void *v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  void *v23;
  __int128 v24;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
    v6 = (void *)AFSiriLogContextConnection;
    v7 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v7)
      {
        v8 = *(_QWORD *)(a1 + 32);
        v9 = v6;
        Name = SRUIFSpeechSynthesisResultGetName(a2);
        v11 = (void *)objc_claimAutoreleasedReturnValue(Name);
        v12 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)v22 = 136315907;
        *(_QWORD *)&v22[4] = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:"
                             "subCompletion:speakPreparation:speakCompletion:]_block_invoke";
        *(_WORD *)&v22[12] = 2117;
        *(_QWORD *)&v22[14] = v8;
        *(_WORD *)&v22[22] = 2112;
        v23 = v11;
        LOWORD(v24) = 2112;
        *(_QWORD *)((char *)&v24 + 2) = v12;
        v13 = "%s #tts 32 SRUIFSpeechSynthesisCompletion text=\"%{sensitive}@\" result=%@ command=%@";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v13, v22, 0x2Au);

      }
    }
    else if (v7)
    {
      v18 = *(_QWORD *)(a1 + 32);
      v9 = v6;
      v19 = SRUIFSpeechSynthesisResultGetName(a2);
      v11 = (void *)objc_claimAutoreleasedReturnValue(v19);
      v20 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)v22 = 136315906;
      *(_QWORD *)&v22[4] = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:su"
                           "bCompletion:speakPreparation:speakCompletion:]_block_invoke";
      *(_WORD *)&v22[12] = 2112;
      *(_QWORD *)&v22[14] = v18;
      *(_WORD *)&v22[22] = 2112;
      v23 = v11;
      LOWORD(v24) = 2112;
      *(_QWORD *)((char *)&v24 + 2) = v20;
      v13 = "%s #tts 32 SRUIFSpeechSynthesisCompletion text=\"%@\" result=%@ command=%@";
      goto LABEL_12;
    }
    if (a2 == 3)
      objc_msgSend(WeakRetained, "_setListenAfterSpeakingForRequestFinished:", 0);
    objc_msgSend(WeakRetained, "_didCompleteActionForAceCommand:success:", *(_QWORD *)(a1 + 40), a2 != 3, *(_OWORD *)v22, *(_QWORD *)&v22[16], v23, v24);
    v21 = *(_QWORD *)(a1 + 48);
    if (v21)
      (*(void (**)(void))(v21 + 16))();
    goto LABEL_19;
  }
  v14 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)v22 = 136315138;
    *(_QWORD *)&v22[4] = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:subC"
                         "ompletion:speakPreparation:speakCompletion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%s #tts 32 FAIL strongSelf", v22, 0xCu);
  }
  v15 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
  v16 = (void *)AFSiriLogContextConnection;
  v17 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR);
  if (v15)
  {
    if (v17)
      sub_10009F3B0(a1, v16, a2);
  }
  else if (v17)
  {
    sub_10009F2FC(a1, v16, a2);
  }
LABEL_19:

}

void sub_100049320(id a1, int64_t a2, NSError *a3)
{
  NSError *v4;
  NSObject *v5;
  int v6;
  const char *v7;
  __int16 v8;
  int64_t v9;

  v4 = a3;
  v5 = AFSiriLogContextConnection;
  if (v4)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009F468((uint64_t)v4, a2, v5);
  }
  else if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v6 = 136315394;
    v7 = "-[SRSiriViewController siriSessionDidReceivePlayNotificationSound:completion:]_block_invoke";
    v8 = 2048;
    v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s Completed notification sound playback with PlaybackCompletionType: %zd", (uint8_t *)&v6, 0x16u);
  }

}

void sub_100049560(uint64_t a1)
{
  _QWORD *WeakRetained;
  _QWORD *v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  const char *v7;
  __int16 v8;
  uint64_t v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_didCompleteActionForAceCommand:success:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96), 1);
    v4 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v5 = v3[12];
      v6 = 136315394;
      v7 = "-[SRSiriViewController alertDidBeginPlaying:]_block_invoke";
      v8 = 2112;
      v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Marking notification sound 'complete' for command %@ ", (uint8_t *)&v6, 0x16u);
    }
  }

}

uint64_t sub_100049A54(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_100049E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id location,char a36)
{
  id *v36;

  objc_destroyWeak(v36);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a36, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100049E8C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_100049EA0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_didCompleteActionForAceCommand:success:", *(_QWORD *)(a1 + 32), 1);

}

void sub_100049EE0(uint64_t a1)
{
  id WeakRetained;

  if (!--*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(WeakRetained, "_didCompleteActionForAceCommand:success:", *(_QWORD *)(a1 + 32), 1);

  }
}

void sub_10004A218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  uint64_t v16;
  id *v17;

  if (v16)
    objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004A238(uint64_t a1, char a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;

  if ((a2 & 1) != 0)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_instrumentationManager"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "punchOutUri"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "appId"));
    objc_msgSend(v4, "emitPunchOutEventWithURL:appID:", v5, v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aceId"));
    v8 = objc_claimAutoreleasedReturnValue(+[SACommandSucceeded sruif_commandSucceededWithRefId:](SACommandSucceeded, "sruif_commandSucceededWithRefId:", v7));
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aceId"));
    v8 = objc_claimAutoreleasedReturnValue(+[SACommandFailed sruif_commandFailedWithRefId:](SACommandFailed, "sruif_commandFailedWithRefId:", v7));
  }
  v9 = (id)v8;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_10004A47C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10004A498(uint64_t a1, int a2)
{
  _QWORD *WeakRetained;
  _QWORD *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void ***v20;
  void **v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  void *v24;
  id v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint8_t buf[4];
  const char *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  void *v34;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (!WeakRetained)
  {
LABEL_6:
    v10 = *(_QWORD *)(a1 + 40);
    if (v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aceId"));
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[SACommandSucceeded sruif_commandSucceededWithRefId:](SACommandSucceeded, "sruif_commandSucceededWithRefId:", v11));
      (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v12);

    }
    goto LABEL_13;
  }
  if (a2)
  {
    v6 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(void **)(a1 + 32);
      v8 = v6;
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "aceId"));
      *(_DWORD *)buf = 136315650;
      v30 = "-[SRSiriViewController siriSessionDidReceiveCloseAssistantCommand:completion:]_block_invoke";
      v31 = 2112;
      v32 = v7;
      v33 = 2112;
      v34 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts speech queue is empty, performing dismissal command %@, aceId: %@", buf, 0x20u);

    }
    objc_msgSend(v5, "_dismissWithReason:", *(_QWORD *)(a1 + 56));
    goto LABEL_6;
  }
  if (!WeakRetained[1])
  {
    v13 = objc_alloc_init((Class)AFQueue);
    v14 = (void *)v5[1];
    v5[1] = v13;

  }
  v15 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v16 = *(void **)(a1 + 32);
    v17 = v15;
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "aceId"));
    *(_DWORD *)buf = 136315650;
    v30 = "-[SRSiriViewController siriSessionDidReceiveCloseAssistantCommand:completion:]_block_invoke";
    v31 = 2112;
    v32 = v16;
    v33 = 2112;
    v34 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s #tts delay enqueue dismissal command %@, aceId: %@", buf, 0x20u);

  }
  v19 = (void *)v5[1];
  v21 = _NSConcreteStackBlock;
  v22 = 3221225472;
  v23 = sub_10004A734;
  v24 = &unk_1001237F0;
  v25 = *(id *)(a1 + 32);
  v26 = v5;
  v28 = *(_QWORD *)(a1 + 56);
  v27 = *(id *)(a1 + 40);
  v20 = objc_retainBlock(&v21);
  objc_msgSend(v19, "enqueueObject:", v20, v21, v22, v23, v24);

LABEL_13:
}

void sub_10004A734(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  int v9;
  const char *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  void *v14;

  v2 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(void **)(a1 + 32);
    v4 = v2;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "aceId"));
    v9 = 136315650;
    v10 = "-[SRSiriViewController siriSessionDidReceiveCloseAssistantCommand:completion:]_block_invoke";
    v11 = 2112;
    v12 = v3;
    v13 = 2112;
    v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts performing delayed dismissal command to %@, aceId: %@", (uint8_t *)&v9, 0x20u);

  }
  objc_msgSend(*(id *)(a1 + 40), "_dismissWithReason:", *(_QWORD *)(a1 + 56));
  v6 = *(_QWORD *)(a1 + 48);
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aceId"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[SACommandSucceeded sruif_commandSucceededWithRefId:](SACommandSucceeded, "sruif_commandSucceededWithRefId:", v7));
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v8);

  }
}

void sub_10004A994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004A9B8(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v13 = WeakRetained;
    objc_msgSend(WeakRetained, "_didReceiveAceCommand:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    objc_msgSend(v13, "_didStartActionForAceCommand:", *(_QWORD *)(a1 + 32));
    objc_msgSend(v13, "_didCompleteActionForAceCommand:success:", *(_QWORD *)(a1 + 32), 1);
    WeakRetained = v13;
    if (a2 != 3)
    {
      v5 = objc_alloc((Class)SASRequestOptions);
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_uiPresentationIdentifier"));
      v7 = objc_msgSend(v5, "initWithRequestSource:uiPresentationIdentifier:", 9, v6);

      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_requestOptions"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "originalRequestOptions"));
      if (v9)
      {
        objc_msgSend(v7, "setOriginalRequestOptions:", v9);
      }
      else
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "_requestOptions"));
        objc_msgSend(v7, "setOriginalRequestOptions:", v10);

      }
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aceId"));
      objc_msgSend(v7, "setServerCommandId:", v11);

      objc_msgSend(v7, "setPronunciationRequest:", 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
      objc_msgSend(v7, "setPronunciationContext:", v12);

      objc_msgSend(v13, "_startRequestWithOptions:", v7);
      WeakRetained = v13;
    }
  }

}

void sub_10004B3C0(id a1, NSError *a2)
{
  NSError *v2;

  v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009F4F4();

}

void sub_10004B6C4(uint64_t a1, int a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v5 = a3;
  if (*(_QWORD *)(a1 + 40))
  {
    v10 = v5;
    if (a2)
    {
      v6 = objc_alloc_init((Class)SACommandSucceeded);
    }
    else
    {
      v6 = objc_alloc_init((Class)SACommandFailed);
      objc_msgSend(v6, "setErrorCode:", objc_msgSend(v10, "code"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedDescription"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Could not update the guide cache. %@"), v7));
      objc_msgSend(v6, "setReason:", v8);

    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aceId"));
    objc_msgSend(v6, "setRefId:", v9);

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    v5 = v10;
  }

}

void sub_10004BCA0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004BCBC(uint64_t a1)
{
  SRPreSynthesisTask *v2;
  id WeakRetained;
  void *v4;
  _QWORD *v5;
  unsigned __int8 v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;

  v2 = objc_alloc_init(SRPreSynthesisTask);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_pendingPreSynthesisTasks"));
  objc_msgSend(v4, "addObject:", v2);

  -[SRPreSynthesisTask setPreSynthesizeTTSCommand:](v2, "setPreSynthesizeTTSCommand:", *(_QWORD *)(a1 + 32));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10004BE24;
  v9[3] = &unk_1001238B0;
  objc_copyWeak(&v11, (id *)(a1 + 48));
  v10 = *(id *)(a1 + 40);
  v5 = objc_retainBlock(v9);
  -[SRPreSynthesisTask setCompletion:](v2, "setCompletion:", v5);
  v8 = 0;
  v6 = -[SRPreSynthesisTask handlePreSynthesisCommandWithError:](v2, "handlePreSynthesisCommandWithError:", &v8);
  v7 = v8;
  if ((v6 & 1) == 0 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009F5D0();

  objc_destroyWeak(&v11);
}

void sub_10004BE0C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10004BE24(uint64_t a1, void *a2)
{
  id WeakRetained;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "replyAceCommand"));
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);

    }
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_pendingPreSynthesisTasks"));
    objc_msgSend(v6, "removeObject:", v7);

  }
}

uint64_t sub_10004C638(uint64_t a1, uint64_t a2)
{
  void *v4;
  NSObject *v5;
  uint64_t Name;
  void *v7;
  int v9;
  const char *v10;
  __int16 v11;
  void *v12;

  v4 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v5 = v4;
    Name = SRUIFSpeechSynthesisResultGetName(a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue(Name);
    v9 = 136315394;
    v10 = "-[SRSiriViewController siriSessionRequestsPlayPhaticWithCompletion:]_block_invoke";
    v11 = 2112;
    v12 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #phatic 8 %@", (uint8_t *)&v9, 0x16u);

  }
  return (*(uint64_t (**)(_QWORD, BOOL))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2 != 2);
}

void sub_10004CA5C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  void *v11;
  _QWORD block[4];
  id v13;
  uint8_t buf[4];
  const char *v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  id v19;

  v5 = a2;
  v6 = a3;
  if (v5)
  {
    v7 = objc_msgSend(objc_alloc((Class)NSString), "initWithData:encoding:", v5, 4);
    v8 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      v9 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 136315650;
      v15 = "-[SRSiriViewController siriSessionDidReceiveLaunchTVRemoteCommand:completion:]_block_invoke";
      v16 = 2112;
      v17 = v9;
      v18 = 2112;
      v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s %@ => %@", buf, 0x20u);
    }
    if (v7)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10004CC80;
      block[3] = &unk_1001225C0;
      v13 = v7;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      v10 = objc_alloc_init((Class)SACommandSucceeded);

    }
    else
    {
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
        sub_10009F6B8();
      v10 = objc_alloc_init((Class)SACommandFailed);
    }

  }
  else
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009F64C();
    v10 = objc_alloc_init((Class)SACommandFailed);
  }
  if (*(_QWORD *)(a1 + 56))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "aceId"));
    objc_msgSend(v10, "setRefId:", v11);

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

void sub_10004CC80(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = objc_msgSend(objc_alloc((Class)TVRViewServiceConfigContext), "initWithDeviceIdentifier:identifierType:deviceType:launchContext:", *(_QWORD *)(a1 + 32), 3, 0, 9);
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[TVRViewServiceManager sharedInstance](TVRViewServiceManager, "sharedInstance"));
  objc_msgSend(v1, "presentWithContext:", v2);

}

void sub_10004EB68(uint64_t a1)
{
  void *v2;
  id v3;

  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 32), "siriDidFinishActionsForConversationItemWithIdentifier:inConversation:") & 1) != 0)
  {
    if (objc_msgSend(*(id *)(a1 + 40), "containsItemWithIdentifier:", *(_QWORD *)(a1 + 48)))
    {
      v2 = *(void **)(a1 + 32);
      v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "identifier"));
      objc_msgSend(v2, "siriDidFinishActionsForConversationItemWithIdentifier:inConversation:", v3, *(_QWORD *)(a1 + 40));

    }
    else if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    {
      sub_10009F724();
    }
  }
}

uint64_t sub_10004F664(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_10004F708(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_1000501DC(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_10005045C(uint64_t a1, uint64_t a2)
{
  id v3;

  if (a2)
    a2 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", a2));
  v3 = (id)a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_1000509A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  void **v5;
  void *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  uint64_t v21;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25[3];
  const __CFString *v26;
  uint64_t v27;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    v26 = CFSTR("metricsContext");
    v27 = v3;
    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v27, &v26, 1));
  }
  else
  {
    v4 = &__NSDictionary0__struct;
  }
  v5 = (void **)(a1 + 56);
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)&v7 = objc_opt_class(SAUIAssistantUtteranceView, a2).n128_u64[0];
  if ((objc_msgSend(v6, "isSubclassOfClass:", v8, v7) & 1) != 0)
  {
    v10 = 7;
LABEL_12:
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_100050BD4;
    v22[3] = &unk_100123928;
    v23 = *(id *)(a1 + 40);
    v25[1] = (id)v10;
    v4 = v4;
    v24 = v4;
    v25[2] = *(id *)(a1 + 64);
    objc_copyWeak(v25, (id *)(a1 + 48));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v22);
    objc_destroyWeak(v25);

    goto LABEL_13;
  }
  v11 = *v5;
  *(_QWORD *)&v12 = objc_opt_class(SACardSnippet, v9).n128_u64[0];
  if (objc_msgSend(v11, "isSubclassOfClass:", v13, v12))
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "aceObject"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "siriui_eventInfo"));

    if (v16)
    {
      v17 = objc_msgSend(v16, "mutableCopy");
      objc_msgSend(v17, "addEntriesFromDictionary:", v4);
      v18 = objc_msgSend(v17, "copy");

      v4 = v18;
    }

    v10 = 2;
    goto LABEL_12;
  }
  v19 = *v5;
  *(_QWORD *)&v20 = objc_opt_class(SAUISnippet, v14).n128_u64[0];
  if ((objc_msgSend(v19, "isSubclassOfClass:", v21, v20) & 1) != 0)
  {
    v10 = 1;
    goto LABEL_12;
  }
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009F790();
LABEL_13:

}

void sub_100050BD4(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id WeakRetained;
  void *v8;
  id v9;

  v2 = objc_alloc((Class)AFMetrics);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "aceCommandIdentifier"));
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a1 + 64)));
  v9 = objc_msgSend(v2, "initWithOriginalCommandId:category:eventInfo:duration:", v3, v4, v5, v6);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_session"));
  objc_msgSend(v8, "recordUIMetrics:", v9);

}

void sub_100050DC8(id a1, NSError *a2)
{
  NSError *v2;

  v2 = a2;
  if (v2 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009F7FC();

}

void sub_100050ED8(id a1, NSError *a2)
{
  NSError *v2;

  v2 = a2;
  if (v2 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009F868();

}

void sub_1000526B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location,char a35)
{
  id *v35;
  uint64_t v36;

  objc_destroyWeak(v35);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v36 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_10005270C(uint64_t a1, uint64_t a2, void *a3)
{
  id *v5;
  id v6;
  id WeakRetained;
  id v8;

  v5 = (id *)(a1 + 48);
  v6 = a3;
  WeakRetained = objc_loadWeakRetained(v5);
  v8 = objc_msgSend(WeakRetained, "_readoutResultFromTTSResult:error:", a2, v6);

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v8;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100052774(uint64_t a1, uint64_t a2, void *a3)
{
  id *v5;
  id v6;
  id WeakRetained;
  id v8;

  v5 = (id *)(a1 + 48);
  v6 = a3;
  WeakRetained = objc_loadWeakRetained(v5);
  v8 = objc_msgSend(WeakRetained, "_readoutResultFromTTSResult:error:", a2, v6);

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v8;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000527DC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  NSObject *v6;
  uint64_t Name;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void (*v13)(void);
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  const char *v23;
  __int16 v24;
  void *v25;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = objc_msgSend(WeakRetained, "_readoutResultFromTitleResult:messageResult:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24));
    v5 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      v6 = v5;
      Name = AFUIBulletinReadoutResultGetName(v4);
      v8 = (void *)objc_claimAutoreleasedReturnValue(Name);
      v22 = 136315394;
      v23 = "-[SRSiriViewController siriSessionRequestsReadoutOfBulletin:completion:]_block_invoke";
      v24 = 2112;
      v25 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%s #cmas #carPlay Synthesis is complete. %@", (uint8_t *)&v22, 0x16u);

    }
    objc_msgSend(v3, "_setReadingBulletinContentInCarPlayOutsideOfSiriSession:", 0);
    v9 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
    if (!v9)
    {
      v10 = objc_alloc_init((Class)AFQueue);
      v11 = *(_QWORD *)(a1 + 32);
      v12 = *(void **)(v11 + 8);
      *(_QWORD *)(v11 + 8) = v10;

      v9 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
    }
    objc_msgSend(v9, "enqueueObject:", &stru_1001239B0);
    v13 = *(void (**)(void))(*(_QWORD *)(a1 + 40) + 16);
  }
  else
  {
    v14 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_10009F944(v14, v15, v16, v17, v18, v19, v20, v21);
    v13 = *(void (**)(void))(*(_QWORD *)(a1 + 40) + 16);
  }
  v13();

}

void sub_10005298C(id a1)
{
  NSObject *v1;
  void *v2;
  uint64_t v3;
  uint8_t buf[4];
  const char *v5;

  v1 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v5 = "-[SRSiriViewController siriSessionRequestsReadoutOfBulletin:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "%s #tts TTS completed after AFUIBulletinReadout. Deactivating AVAudioSession sharedInstance and notifying others on deactivation.", buf, 0xCu);
  }
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AVAudioSession sharedInstance](AVAudioSession, "sharedInstance"));
  v3 = 0;
  objc_msgSend(v2, "setActive:withOptions:error:", 0, 1, &v3);

}

void sub_100052F5C(id a1, NSError *a2)
{
  NSError *v2;

  v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009FACC();

}

void sub_100053D28(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

void sub_100053D5C(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v13 = WeakRetained;
    if ((_DWORD)a2)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_completedCommandAppPunchOutIds"));
      objc_msgSend(v6, "removeAllObjects");

      v7 = *(_QWORD *)(a1 + 32);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "punchOutUri"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "appDisplayName"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "bundleId"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[SAUIAppPunchOutEvent sruif_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:](SAUIAppPunchOutEvent, "sruif_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:", v7, v8, v9, v10));

      objc_msgSend(v13, "_performGenericAceCommand:turnIdentifier:completion:", v11, 0, 0);
      v5 = v13;
    }
    v12 = *(_QWORD *)(a1 + 48);
    if (v12)
    {
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v12, a2);
      v5 = v13;
    }
  }

}

void sub_100053E64(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009FCA4();
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_100053ED4(id *a1, int a2)
{
  unsigned __int8 v3;
  id v4;
  id WeakRetained;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;

  if (a2)
  {
    (*((void (**)(void))a1[5] + 2))();
  }
  else
  {
    v3 = objc_msgSend(a1[4], "appAvailableInStorefront");
    v4 = a1[4];
    if ((v3 & 1) != 0)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_10005401C;
      v7[3] = &unk_100123A98;
      v8 = v4;
      v9 = a1[5];
      objc_copyWeak(&v10, a1 + 6);
      objc_msgSend(v8, "afui_populateStoreServicesData:", v7);
      objc_destroyWeak(&v10);

    }
    else
    {
      v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "afui_punchOutAppNotAvailableViews"));
      WeakRetained = objc_loadWeakRetained(a1 + 6);
      objc_msgSend(WeakRetained, "_performGenericAceCommand:turnIdentifier:completion:", v6, 0, 0);

      (*((void (**)(void))a1[5] + 2))();
    }
  }
}

void sub_100054008(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10005401C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id WeakRetained;
  void *v6;
  _QWORD v7[4];
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "afui_punchOutFailureViews"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "views"));
  v4 = objc_msgSend(v3, "count");

  if (v4)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(WeakRetained, "_performGenericAceCommand:turnIdentifier:completion:", v2, 0, 0);

    v6 = *(void **)(a1 + 32);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100054138;
    v7[3] = &unk_100123A70;
    objc_copyWeak(&v8, (id *)(a1 + 48));
    objc_msgSend(v6, "afui_getInstallAppPunchoutWithCompletion:", v7);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    objc_destroyWeak(&v8);
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_100054120(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100054138(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id WeakRetained;
  id v7;

  if (a2)
  {
    v3 = a2;
    v4 = objc_alloc_init((Class)SAUIAddViews);
    objc_msgSend(v4, "setDialogPhase:", SAUIDialogPhaseCompletionValue);
    v7 = v3;
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v7, 1));

    objc_msgSend(v4, "setViews:", v5);
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "_performGenericAceCommand:turnIdentifier:completion:", v4, 0, 0);

  }
}

void sub_100054A3C(id a1, NSError *a2)
{
  NSError *v2;

  v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    sub_10009FD1C();

}

void sub_100054B18(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100054B34(uint64_t a1, int a2)
{
  id *v3;
  id WeakRetained;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  char v11;
  uint8_t buf[4];
  const char *v13;
  __int16 v14;
  int v15;

  v3 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "presentation"));

  if ((objc_opt_respondsToSelector(v5, "siriIsIdleAndQuietStatusDidChange:isAttending:") & 1) != 0)
  {
    v6 = objc_loadWeakRetained(v3);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100054C98;
    v9[3] = &unk_100123B08;
    v11 = a2;
    v10 = v5;
    objc_msgSend(v6, "_fetchAttendingState:", v9);

  }
  v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    v13 = "-[SRSiriViewController _checkAndUpdateSiriIdleAndQuietStatusIfNeeded]_block_invoke";
    v14 = 1024;
    v15 = a2;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s Notifying presentation that Siri's active request options changed, siriIsIdleAndQuiet=%i", buf, 0x12u);
  }
  v8 = objc_loadWeakRetained(v3);
  objc_msgSend(v8, "_activeRequestOptionsDidChange");

}

id sub_100054C98(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  int v5;
  int v7;
  const char *v8;
  __int16 v9;
  int v10;
  __int16 v11;
  int v12;

  v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v5 = *(unsigned __int8 *)(a1 + 40);
    v7 = 136315650;
    v8 = "-[SRSiriViewController _checkAndUpdateSiriIdleAndQuietStatusIfNeeded]_block_invoke_2";
    v9 = 1024;
    v10 = v5;
    v11 = 1024;
    v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #idleTimer Notifying presentation that Siri's idle and quiet status changed, siriIsIdleAndQuiet=%i isAttending: %i", (uint8_t *)&v7, 0x18u);
  }
  return objc_msgSend(*(id *)(a1 + 32), "siriIsIdleAndQuietStatusDidChange:isAttending:", *(unsigned __int8 *)(a1 + 40), a2);
}

void sub_100054E18(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100054E34(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  id WeakRetained;
  double v6;
  int v7;
  const char *v8;
  __int16 v9;
  int v10;

  v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v7 = 136315394;
    v8 = "-[SRSiriViewController _scheduleInterruptedAudioResumingIfNeeded]_block_invoke";
    v9 = 1024;
    v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Scheduling interrupted audio to be resumed if needed, isAttending: %d", (uint8_t *)&v7, 0x12u);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend(WeakRetained, "_resumesInterruptedAudioPlaybackForAttendingState:", a2))
  {
    v6 = 1.0;
    if ((_DWORD)a2)
      v6 = 0.25;
    objc_msgSend(WeakRetained, "_scheduleAudioResumptionAfterDelayInSec:", v6);
  }

}

void sub_100055074(uint64_t a1)
{
  _BYTE *WeakRetained;
  void *v2;
  NSObject *v3;
  void *v4;
  int v5;
  const char *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained && !WeakRetained[22] && objc_msgSend(WeakRetained, "_isSiriIdleAndQuiet"))
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v5 = 136315138;
      v6 = "-[SRSiriViewController _scheduleAudioResumptionAfterDelayInSec:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s Resuming interrupted audio", (uint8_t *)&v5, 0xCu);
    }
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_session"));
    objc_msgSend(v4, "resumeInterruptedAudioPlaybackIfNeeded");

  }
}

uint64_t sub_100055530(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

uint64_t sub_100055694(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

void sub_1000559B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000559DC(uint64_t a1, void *a2)
{
  id v4;
  id *WeakRetained;
  NSObject *v6;
  _BOOL4 v7;
  int v8;
  const char *v9;

  v4 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v6 = AFSiriLogContextConnection;
    v7 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        v8 = 136315138;
        v9 = "-[SRSiriViewController _enqueueSpokenSuggestionsFromAddViews:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #suggestions SiriSuggestions returned a spoken hint. Enqueuing it to be spoken after TTS.", (uint8_t *)&v8, 0xCu);
      }
      objc_storeStrong(WeakRetained + 34, a2);
    }
    else
    {
      if (v7)
      {
        v8 = 136315138;
        v9 = "-[SRSiriViewController _enqueueSpokenSuggestionsFromAddViews:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #suggestions No spoken hints returned from SiriSuggestions.", (uint8_t *)&v8, 0xCu);
      }
      objc_msgSend(WeakRetained[51], "recordActionCompletedForAceCommand:success:", *(_QWORD *)(a1 + 32), 1);
    }
  }

}

void sub_100055CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100055CD0(uint64_t a1)
{
  _QWORD *WeakRetained;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint8_t buf[4];
  const char *v13;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v13 = "-[SRSiriViewController _speakEnqueuedSpokenSuggestion]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #suggestions Hint TTS finished..", buf, 0xCu);
    }
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addViews"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_searchAddViewsForSpokenHintsView:", v4));

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[AFDialogPhase completionDialogPhase](AFDialogPhase, "completionDialogPhase"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "spokenText"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "suggestionId"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("SiriHintSpoken#%@"), v8));
    objc_msgSend(WeakRetained, "_logAceObjectSpoken:dialogPhase:speakableText:dialogIdentifierOverride:", v5, v6, v7, v9);

    v10 = (void *)WeakRetained[51];
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addViews"));
    objc_msgSend(v10, "recordActionCompletedForAceCommand:success:", v11, 1);

  }
}

void sub_10005654C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100056570(uint64_t a1, int a2)
{
  id WeakRetained;
  NSObject *v4;
  NSObject *v5;
  id v6;
  int v7;
  const char *v8;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(WeakRetained, "_notifyPromptedUserForInput");

    v4 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v7 = 136315138;
      v8 = "-[SRSiriViewController _startListenAfterSpeaking]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #IntuitiveConversation - not starting Listen After Speaking request because we're already attending.", (uint8_t *)&v7, 0xCu);
    }
  }
  else
  {
    v5 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v7 = 136315138;
      v8 = "-[SRSiriViewController _startListenAfterSpeaking]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #IntuitiveConversation - Starting Listen After Speaking request", (uint8_t *)&v7, 0xCu);
    }
    v6 = objc_loadWeakRetained((id *)(a1 + 32));
    objc_msgSend(v6, "_startListenAfterSpeakingRequest");

  }
}

uint64_t sub_100056734(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000569BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000569E0(uint64_t a1, int a2)
{
  NSObject *v4;
  _BOOL4 v5;
  id WeakRetained;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void ***v11;
  void **v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  void *v15;
  id v16;
  id v17;
  uint8_t buf[4];
  const char *v19;

  v4 = AFSiriLogContextConnection;
  v5 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v5)
    {
      *(_DWORD *)buf = 136315138;
      v19 = "-[SRSiriViewController _startListenAfterSpeakingRequest]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts TTS queue is empty. Starting new request.", buf, 0xCu);
    }
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(WeakRetained, "_startRequestWithOptions:", *(_QWORD *)(a1 + 32));

  }
  else
  {
    if (v5)
    {
      *(_DWORD *)buf = 136315138;
      v19 = "-[SRSiriViewController _startListenAfterSpeakingRequest]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts TTS queue is not empty. Scheduling new request after TTS completion.", buf, 0xCu);
    }
    v7 = *(void **)(*(_QWORD *)(a1 + 40) + 8);
    if (!v7)
    {
      v8 = objc_alloc_init((Class)AFQueue);
      v9 = *(_QWORD *)(a1 + 40);
      v10 = *(void **)(v9 + 8);
      *(_QWORD *)(v9 + 8) = v8;

      v7 = *(void **)(*(_QWORD *)(a1 + 40) + 8);
    }
    v12 = _NSConcreteStackBlock;
    v13 = 3221225472;
    v14 = sub_100056BC4;
    v15 = &unk_100122660;
    objc_copyWeak(&v17, (id *)(a1 + 48));
    v16 = *(id *)(a1 + 32);
    v11 = objc_retainBlock(&v12);
    objc_msgSend(v7, "enqueueObject:", v11, v12, v13, v14, v15);

    objc_destroyWeak(&v17);
  }
}

void sub_100056BA8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100056BC4(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  int v4;
  const char *v5;

  v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 136315138;
    v5 = "-[SRSiriViewController _startListenAfterSpeakingRequest]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s #tts TTS completed. Start listening.", (uint8_t *)&v4, 0xCu);
  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_startRequestWithOptions:", *(_QWORD *)(a1 + 32));

}

Class sub_10005825C(uint64_t a1)
{
  char *v2;
  Class result;
  char *v4;
  __int128 v5;
  uint64_t v6;

  v4 = 0;
  if (!qword_1001503D0)
  {
    v5 = off_100123B50;
    v6 = 0;
    qword_1001503D0 = _sl_dlopen(&v5, &v4);
    v2 = v4;
    if (!qword_1001503D0)
    {
      abort_report_np("%s", v4);
      goto LABEL_7;
    }
    if (v4)
      goto LABEL_8;
  }
  while (1)
  {
    result = objc_getClass("VTStateManager");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
      break;
LABEL_7:
    v2 = (char *)sub_10009FED4();
LABEL_8:
    free(v2);
  }
  qword_1001503C8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_100058380(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_100058408(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x2Au);
}

void sub_100058414(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

uint64_t sub_10005843C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_100058448()
{
  uint64_t v0;

  return v0;
}

id sub_100058454@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 40) = a2;
  return a1;
}

void sub_100058474(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

id sub_100058494(id a1)
{
  return a1;
}

void sub_100058750(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_startScrollingWithOptions:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void sub_100059694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000596D8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1000596E8(uint64_t a1)
{

}

void sub_1000596F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  _QWORD v22[5];

  v11 = a2;
  v12 = objc_alloc_init((Class)NSMutableString);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "length") != 0;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
    objc_msgSend(v12, "appendString:");
  v13 = a3 - a5;
  if (a3 != a5)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", a5, a3 - a5));
    objc_msgSend(v12, "appendString:", v14);

  }
  objc_msgSend(v12, "appendString:", v11);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addObject:", v12);
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v16 = *(void **)(v15 + 40);
  *(_QWORD *)(v15 + 40) = 0;

  v17 = a6 - (v13 + a4);
  if (v17)
  {
    v18 = objc_alloc_init((Class)NSMutableString);
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v20 = *(void **)(v19 + 40);
    *(_QWORD *)(v19 + 40) = v18;

    v21 = *(void **)(a1 + 32);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_100059878;
    v22[3] = &unk_100123BB0;
    v22[4] = *(_QWORD *)(a1 + 48);
    objc_msgSend(v21, "enumerateSubstringsInRange:options:usingBlock:", a3 + a4, v17, 1026, v22);
  }

}

id sub_100059878(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "appendString:", a2);
}

id sub_100059B0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setAlpha:", 0.0);
}

void sub_100059B24(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "removeFromSuperview");
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

id sub_100059B60(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "setAlpha:", 1.0);
}

uint64_t sub_100059B78(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 72) = 1;
  return result;
}

void sub_10005A100(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;

  v2 = objc_alloc(*(Class *)(a1 + 32));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_defaultURL"));
  v3 = objc_msgSend(v2, "initWithURL:", v5);
  v4 = (void *)qword_1001503D8;
  qword_1001503D8 = (uint64_t)v3;

}

void sub_10005A294(id a1)
{
  void *v1;

  v1 = (void *)qword_1001503E8;
  qword_1001503E8 = (uint64_t)&off_100128DA8;

}

uint64_t sub_10005A5B8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v9;
  int v10;
  const char *v11;
  __int16 v12;
  id v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  id v17;

  v5 = a2;
  v6 = a3;
  v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = 136315906;
    v11 = "-[SRSiriPresentationPluginHost _rescanBundles]_block_invoke";
    v12 = 2114;
    v13 = v5;
    v14 = 2114;
    v15 = v9;
    v16 = 2114;
    v17 = v6;
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Error encountered enumerating %{public}@ in plugin directory at %{public}@: %{public}@", (uint8_t *)&v10, 0x2Au);
  }

  return 0;
}

void sub_10005AA34(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  id v6;

  v4 = *(void **)(a1 + 32);
  v5 = a2;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "path"));
  objc_msgSend(v4, "setObject:forKey:", v6, v5);

}

void sub_10005AB54(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v5 = a2;
  v6 = a3;
  objc_opt_class(NSString, v7);
  if ((objc_opt_isKindOfClass(v5, v8) & 1) != 0)
  {
    objc_opt_class(NSString, v9);
    if ((objc_opt_isKindOfClass(v6, v10) & 1) != 0)
    {
      v11 = *(void **)(a1 + 32);
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:isDirectory:](NSURL, "fileURLWithPath:isDirectory:", v6, 1));
      objc_msgSend(v11, "setObject:forKey:", v12, v5);

    }
    else
    {
      v14 = (void *)AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
        sub_10009FF78(v14);
    }
  }
  else
  {
    v13 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_1000A0000(v13);
  }

}

void sub_10005B058(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x2Au);
}

id sub_10005B06C(id a1)
{
  return a1;
}

uint64_t sub_10005B080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return objc_opt_class(v2, a2);
}

id sub_10005B08C(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "assistantUILocalizedStringForKey:table:", v1, 0));

  return v3;
}

uint64_t sub_10005B0EC(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  _QWORD v9[4];
  id v10;
  _QWORD *v11;
  uint64_t *v12;
  id v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;
  _QWORD v18[4];

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v4, "count");
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x2020000000;
  v18[3] = 0;
  v14 = 0;
  v15 = &v14;
  v16 = 0x2020000000;
  v17 = 1;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10005B204;
  v9[3] = &unk_100123CE0;
  v6 = v4;
  v10 = v6;
  v11 = v18;
  v12 = &v14;
  v13 = v5;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v9);
  v7 = *((unsigned __int8 *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  _Block_object_dispose(v18, 8);

  return v7;
}

void sub_10005B1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10005B204(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  unint64_t v6;
  unint64_t v7;
  char isKindOfClass;
  id v9;

  v9 = a2;
  if ((objc_opt_isKindOfClass(v9, objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))) & 1) == 0)
  {
    while (1)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v7 = *(_QWORD *)(a1 + 56) - 1;
      isKindOfClass = objc_opt_isKindOfClass(v9, objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v6));
      if ((isKindOfClass & 1) != 0 || v6 >= v7)
        break;
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    }
    if ((isKindOfClass & 1) == 0 && v6 >= v7)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
      *a4 = 1;
    }
  }

}

id sub_10005B3F0(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  __int128 v5;
  id v6;
  char v7;
  uint64_t v8;
  void *i;
  void *v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  id v14;
  void *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint8_t buf[4];
  const char *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  id v27;
  _BYTE v28[128];

  v1 = a1;
  v2 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v1, "count"));
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v18, v28, 16);
  if (!v4)
  {

LABEL_18:
    v14 = v3;
    goto LABEL_19;
  }
  v6 = v4;
  v7 = 0;
  v8 = *(_QWORD *)v19;
  *(_QWORD *)&v5 = 136315650;
  v17 = v5;
  do
  {
    for (i = 0; i != v6; i = (char *)i + 1)
    {
      if (*(_QWORD *)v19 != v8)
        objc_enumerationMutation(v3);
      v10 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i);
      v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "sr_sirilandShim", v17, (_QWORD)v18));
      if (v11)
      {
        v12 = (id)v11;
        if ((void *)v11 == v10)
        {
          v12 = v10;
        }
        else
        {
          v13 = AFSiriLogContextConnection;
          if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = v17;
            v23 = "_SRSirilandShimAceViews";
            v24 = 2112;
            v25 = v10;
            v26 = 2112;
            v27 = v12;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s Successfully shimmed AceView for the Siriland presentation:\n    AceView: %@\n    Shimmed AceView: %@", buf, 0x20u);
          }
          v7 = 1;
        }
      }
      else
      {
        v12 = v10;
      }
      objc_msgSend(v2, "addObject:", v12);

    }
    v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v18, v28, 16);
  }
  while (v6);

  if ((v7 & 1) == 0)
    goto LABEL_18;
  v14 = objc_msgSend(v2, "copy");
LABEL_19:
  v15 = v14;

  return v15;
}

void sub_10005CD18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unsigned int v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  unsigned int v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *i;
  void *v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  unsigned int v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  unsigned int v51;
  __CFString *v52;
  void *v53;
  unsigned int v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  unsigned int v63;
  void *v64;
  unsigned int v65;
  uint64_t v66;
  id v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  void *v98;
  id v99;
  void *v100;
  void *v101;
  void *v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  id v107;
  id v108;
  id v109;
  _BYTE v110[128];
  _QWORD v111[4];

  v5 = a2;
  v6 = a3;
  objc_opt_class(SAPhoneCallHistory, v7);
  if ((objc_opt_isKindOfClass(v5, v8) & 1) == 0)
    goto LABEL_56;
  v97 = a1;
  v99 = v5;
  v9 = v5;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "faceTime"));
  v11 = objc_msgSend(v10, "BOOLValue");

  if (v11)
  {
    v12 = objc_alloc_init((Class)SFLocalImage);
    v13 = v12;
    v14 = 0;
  }
  else
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "outgoing"));
    v16 = objc_msgSend(v15, "BOOLValue");

    if (!v16)
    {
      v13 = objc_alloc_init((Class)SFImage);
      goto LABEL_8;
    }
    v12 = objc_alloc_init((Class)SFLocalImage);
    v13 = v12;
    v14 = 1;
  }
  objc_msgSend(v12, "setLocalImageType:", v14);
  objc_msgSend(v13, "setIsTemplate:", 1);
LABEL_8:
  objc_msgSend(v13, "setSize:", 14.0, 14.0);
  objc_msgSend(v13, "setSource:", 2);
  v101 = v6;
  v98 = v13;
  objc_msgSend(v6, "setImage:", v13);
  v100 = v9;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "contact"));
  v102 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "_applicablePhone"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "_applicableEmail"));
  v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "displayText"));
  v20 = (void *)v19;
  if (!v19)
    v19 = objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v91 = (void *)v19;
  v111[0] = v19;
  v96 = v17;
  v93 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "object"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v93, "fullName"));
  v22 = v21;
  if (!v21)
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v111[1] = v22;
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v102, "number"));
  v24 = UIFormattedPhoneNumberFromString();
  v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  v26 = v25;
  if (!v25)
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v111[2] = v26;
  v95 = v18;
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "emailAddress"));
  v28 = v27;
  if (!v27)
    v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v111[3] = v28;
  v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v111, 4));
  if (!v27)

  if (!v25)
  if (!v21)

  if (!v20)
  v105 = 0u;
  v106 = 0u;
  v103 = 0u;
  v104 = 0u;
  v30 = v29;
  v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v103, v110, 16);
  if (v31)
  {
    v33 = v31;
    v34 = *(_QWORD *)v104;
    while (2)
    {
      for (i = 0; i != v33; i = (char *)i + 1)
      {
        if (*(_QWORD *)v104 != v34)
          objc_enumerationMutation(v30);
        v36 = *(void **)(*((_QWORD *)&v103 + 1) + 8 * (_QWORD)i);
        objc_opt_class(NSNull, v32);
        if ((objc_opt_isKindOfClass(v36, v37) & 1) == 0 && objc_msgSend(v36, "length"))
        {
          v38 = v36;
          goto LABEL_35;
        }
      }
      v33 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v103, v110, 16);
      if (v33)
        continue;
      break;
    }
  }
  v38 = 0;
LABEL_35:

  v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "callCount"));
  v40 = (uint64_t)objc_msgSend(v39, "integerValue");

  if (v40 >= 2)
  {
    v41 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@ (%ld)"), v38, v40));

    v38 = (id)v41;
  }
  v42 = objc_alloc_init((Class)SFRichText);
  v43 = objc_alloc_init((Class)SFFormattedText);
  objc_msgSend(v43, "setText:", v38);
  objc_msgSend(v43, "setIsBold:", 1);
  v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "missed"));
  v45 = objc_msgSend(v44, "BOOLValue");

  if (v45)
    objc_msgSend(v43, "setTextColor:", 1);
  v94 = v38;
  v109 = v43;
  v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v109, 1));
  objc_msgSend(v42, "setFormattedTextPieces:", v46);

  objc_msgSend(v6, "setLeadingText:", v42);
  v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v102, "label"));
  v48 = v47;
  if (v47 && objc_msgSend(v47, "length"))
  {
    v49 = objc_claimAutoreleasedReturnValue(+[CNLabeledValue localizedStringForLabel:](CNLabeledValue, "localizedStringForLabel:", v48));
  }
  else
  {
    v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "faceTime"));
    v51 = objc_msgSend(v50, "BOOLValue");

    if (v51)
    {
      v52 = CFSTR("FACETIME_VIDEO_LABEL");
    }
    else
    {
      v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "faceTimeAudio"));
      v54 = objc_msgSend(v53, "BOOLValue");

      if (v54)
        v52 = CFSTR("FACETIME_AUDIO_LABEL");
      else
        v52 = CFSTR("UNKNOWN_PHONE_LABEL");
    }
    v55 = sub_10005B08C(v52);
    v49 = objc_claimAutoreleasedReturnValue(v55);
  }
  v56 = (void *)v49;
  v90 = v43;
  v92 = v42;

  v57 = objc_alloc_init((Class)SFRichText);
  v58 = objc_alloc_init((Class)SFFormattedText);
  v89 = v56;
  objc_msgSend(v58, "setText:", v56);
  objc_msgSend(v58, "setTextColor:", 0);
  v87 = v58;
  v108 = v58;
  v59 = 1;
  v60 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v108, 1));
  objc_msgSend(v57, "setFormattedTextPieces:", v60);

  v88 = v57;
  objc_msgSend(v6, "setLeadingSubtitle:", v57);
  objc_msgSend(v6, "setSeparatorStyle:", 3);
  v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "outgoing"));
  LOBYTE(v58) = objc_msgSend(v61, "BOOLValue");

  if ((v58 & 1) == 0)
  {
    v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "missed"));
    v63 = objc_msgSend(v62, "BOOLValue");

    if (v63)
      v59 = 2;
    else
      v59 = 3;
  }
  v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "faceTime"));
  v65 = objc_msgSend(v64, "BOOLValue");

  if (v65)
    v66 = 2;
  else
    v66 = 1;
  v67 = objc_alloc((Class)INCallRecord);
  v68 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
  v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v68, "UUIDString"));
  v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "callTime"));
  v71 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "contact"));
  v72 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v71, "sr_inPerson"));
  v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "isNew"));
  v74 = objc_msgSend(v67, "initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:", v69, v70, v72, v59, v66, 0, v73);

  v75 = v74;
  objc_msgSend(*(id *)(v97 + 32), "addObject:", v74);
  v76 = objc_alloc_init((Class)SAPhoneCall);
  v77 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
  v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v77, "UUIDString"));
  objc_msgSend(v76, "setAceId:", v78);

  v79 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "contact"));
  objc_msgSend(v76, "setCallRecipient:", v79);

  v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "faceTime"));
  objc_msgSend(v76, "setFaceTime:", objc_msgSend(v80, "BOOLValue"));

  v81 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v100, "faceTimeAudio"));
  objc_msgSend(v76, "setFaceTimeAudio:", objc_msgSend(v81, "BOOLValue"));

  objc_msgSend(*(id *)(v97 + 40), "addObject:", v76);
  v82 = objc_alloc_init((Class)SFAbstractCommand);
  objc_msgSend(v82, "setType:", 1);
  v83 = objc_alloc_init((Class)SFCommandValue);
  v84 = objc_alloc_init((Class)SFReferentialCommand);
  v85 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v76, "aceId"));
  objc_msgSend(v84, "setReferenceIdentifier:", v85);

  objc_msgSend(v83, "setReferentialCommand:", v84);
  objc_msgSend(v82, "setValue:", v83);
  v107 = v82;
  v86 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v107, 1));
  v6 = v101;
  objc_msgSend(v101, "setCommands:", v86);

  v5 = v99;
LABEL_56:

}

void sub_10005DB68(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *i;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  unsigned int v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  void *v69;
  id v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  void *v79;
  id v80;
  void *v81;
  void *v82;
  void *v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  id v88;
  id v89;
  id v90;
  id v91;
  _BYTE v92[128];
  _QWORD v93[3];

  v5 = a2;
  v6 = a3;
  objc_opt_class(SAPhoneVoiceMail, v7);
  if ((objc_opt_isKindOfClass(v5, v8) & 1) != 0)
  {
    v78 = a1;
    v80 = v5;
    v9 = v5;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "contact"));
    v82 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "_applicablePhone"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "displayText"));
    v12 = v11;
    if (!v11)
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v81 = v9;
    v83 = v6;
    v93[0] = v12;
    v79 = v10;
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "object"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "fullName"));
    v15 = v14;
    if (!v14)
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v93[1] = v15;
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v82, "number"));
    v17 = UIFormattedPhoneNumberFromString();
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    v19 = v18;
    if (!v18)
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v93[2] = v19;
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v93, 3));
    if (!v18)

    if (!v14)
    if (!v11)

    v86 = 0u;
    v87 = 0u;
    v84 = 0u;
    v85 = 0u;
    v21 = v20;
    v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v84, v92, 16);
    if (v23)
    {
      v24 = *(_QWORD *)v85;
      while (2)
      {
        for (i = 0; i != v23; i = (char *)i + 1)
        {
          if (*(_QWORD *)v85 != v24)
            objc_enumerationMutation(v21);
          v26 = *(void **)(*((_QWORD *)&v84 + 1) + 8 * (_QWORD)i);
          objc_opt_class(NSNull, v22);
          if ((objc_opt_isKindOfClass(v26, v27) & 1) == 0 && objc_msgSend(v26, "length"))
          {
            v23 = v26;
            goto LABEL_25;
          }
        }
        v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v84, v92, 16);
        if (v23)
          continue;
        break;
      }
    }
LABEL_25:

    v28 = objc_alloc_init((Class)SFRichText);
    v29 = objc_alloc_init((Class)SFFormattedText);
    v77 = v23;
    objc_msgSend(v29, "setText:", v23);
    objc_msgSend(v29, "setIsBold:", 1);
    v75 = v29;
    v91 = v29;
    v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v91, 1));
    objc_msgSend(v28, "setFormattedTextPieces:", v30);

    v76 = v28;
    objc_msgSend(v83, "setLeadingText:", v28);
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v82, "label"));
    v32 = v31;
    if (v31 && objc_msgSend(v31, "length"))
    {
      v33 = objc_claimAutoreleasedReturnValue(+[CNLabeledValue localizedStringForLabel:](CNLabeledValue, "localizedStringForLabel:", v32));
    }
    else
    {
      v34 = sub_10005B08C(CFSTR("UNKNOWN_PHONE_LABEL"));
      v33 = objc_claimAutoreleasedReturnValue(v34);
    }
    v35 = (void *)v33;

    v36 = objc_alloc_init((Class)SFRichText);
    v37 = objc_alloc_init((Class)SFFormattedText);
    v74 = v35;
    objc_msgSend(v37, "setText:", v35);
    objc_msgSend(v37, "setTextColor:", 0);
    v72 = v37;
    v90 = v37;
    v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v90, 1));
    objc_msgSend(v36, "setFormattedTextPieces:", v38);

    v73 = v36;
    objc_msgSend(v83, "setLeadingSubtitle:", v36);
    v39 = objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "length"));
    v71 = (void *)v39;
    if (v39)
    {
      v40 = (void *)v39;
      v41 = objc_alloc_init((Class)NSDateFormatter);
      objc_msgSend(v41, "setDateFormat:", CFSTR("m:ss"));
      v42 = objc_alloc_init((Class)SFRichText);
      v43 = objc_alloc_init((Class)SFFormattedText);
      v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:", (double)(uint64_t)objc_msgSend(v40, "integerValue")));
      v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "stringFromDate:", v44));
      objc_msgSend(v43, "setText:", v45);

      objc_msgSend(v43, "setTextColor:", 0);
      v89 = v43;
      v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v89, 1));
      objc_msgSend(v42, "setFormattedTextPieces:", v46);

      objc_msgSend(v83, "setTrailingSubtitle:", v42);
    }
    v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "isNew"));
    v48 = objc_msgSend(v47, "BOOLValue");

    if (v48)
    {
      v49 = objc_alloc_init((Class)SFLocalImage);
      objc_msgSend(v49, "setLocalImageType:", 2);
    }
    else
    {
      v49 = objc_alloc_init((Class)SFImage);
    }
    objc_msgSend(v49, "setSize:", 14.0, 14.0);
    objc_msgSend(v49, "setSource:", 2);
    objc_msgSend(v83, "setImage:", v49);
    objc_msgSend(v83, "setSeparatorStyle:", 3);
    v50 = objc_alloc((Class)INCallRecord);
    v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
    v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v51, "UUIDString"));
    v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "callTime"));
    v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "contact"));
    v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54, "sr_inPerson"));
    v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "isNew"));
    v70 = objc_msgSend(v50, "initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:", v52, v53, v55, 5, 1, 0, v56);

    objc_msgSend(*(id *)(v78 + 32), "addObject:", v70);
    v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v81, "identifier"));
    v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "URLByDeletingPathExtension"));

    v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "lastPathComponent"));
    v60 = objc_alloc_init((Class)SAUIAppPunchOut);
    v61 = (void *)objc_claimAutoreleasedReturnValue(+[NSUUID UUID](NSUUID, "UUID"));
    v62 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v61, "UUIDString"));
    objc_msgSend(v60, "setAceId:", v62);

    v63 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("vmshow:%@"), v59));
    v64 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", v63));

    objc_msgSend(v60, "setAppAvailableInStorefront:", 1);
    objc_msgSend(v60, "setPunchOutUri:", v64);
    objc_msgSend(v60, "setBundleId:", CFSTR("com.apple.mobilephone"));
    objc_msgSend(*(id *)(v78 + 40), "addObject:", v60);
    v65 = objc_alloc_init((Class)SFAbstractCommand);
    objc_msgSend(v65, "setType:", 1);
    v66 = objc_alloc_init((Class)SFCommandValue);
    v67 = objc_alloc_init((Class)SFReferentialCommand);
    v68 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v60, "aceId"));
    objc_msgSend(v67, "setReferenceIdentifier:", v68);

    objc_msgSend(v66, "setReferentialCommand:", v67);
    objc_msgSend(v65, "setValue:", v66);
    v88 = v65;
    v69 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v88, 1));
    objc_msgSend(v83, "setCommands:", v69);

    v6 = v83;
    v5 = v80;
  }

}

void sub_10005F6EC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "topObject"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "view"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "view"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "superview"));
  v8 = *(void **)(a1 + 40);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allObjects"));
  LOBYTE(v10) = 0;
  objc_msgSend(v8, "_performPushTransitionFromViewController:andView:toViewController:andView:inContainerView:recentViewControllers:transitionDuration:animated:transitionCompletion:completion:", v11, v5, v4, v6, v7, v9, 0.0, v10, &stru_100123D50, &stru_100123D70);

  objc_msgSend(*(id *)(a1 + 32), "pushObject:", v4);
}

void sub_10005FB94(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_10005FBB0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_transitionWithContext:animated:completion:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 40));

}

uint64_t sub_10005FBF0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_10005FE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10005FE7C(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", a2);
}

void sub_10005FE88(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  void *v5;
  void *v6;
  id *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  if ((_DWORD)a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_panGestureRecognizer"));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
    objc_msgSend(v6, "removeGestureRecognizer:", v5);

    objc_msgSend(*(id *)(a1 + 32), "addGestureRecognizer:", v5);
  }
  objc_msgSend(*(id *)(a1 + 40), "completeTransition:", a2);
  objc_msgSend(*(id *)(a1 + 48), "insertSubview:belowSubview:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
  v7 = (id *)(a1 + 72);
  v8 = objc_loadWeakRetained(v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "_navigationController"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "viewControllers"));
  v11 = objc_msgSend(v10, "mutableCopy");
  objc_msgSend(v8, "_setRecentViewControllers:", v11);

  v12 = objc_loadWeakRetained(v7);
  objc_msgSend(v12, "setOperation:", 0);

}

void sub_100060068(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100060084(uint64_t a1)
{
  unint64_t v1;
  id WeakRetained;

  v1 = *(_QWORD *)(a1 + 48) + 1;
  if (v1 < *(_QWORD *)(a1 + 56))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "_recursivelyAnimateNextMultiPopKeyframe:outOfTotalKeyframes:transitionContext:", v1, *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32));

  }
}

void sub_100060260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10006027C(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;

  if (!*(_BYTE *)(a1 + 48))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_recentViewControllers"));
    objc_msgSend(v3, "removeLastObject");

  }
  v4 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v4, "setOperation:", 0);

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_100060540(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", a2);
}

void sub_100060668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100060684(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id WeakRetained;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t result;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fromPlatteredCardView"));
  v5 = v4;
  if ((_DWORD)a2)
  {
    objc_msgSend(v4, "setDarkenIntensity:", 0.0);

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_panGestureRecognizer"));

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
    objc_msgSend(v7, "removeGestureRecognizer:", v5);

    v8 = objc_loadWeakRetained((id *)(a1 + 56));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "_navigationController"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "viewControllers"));
    v11 = objc_msgSend(v10, "count");

    if ((unint64_t)v11 >= 2)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fromPlatteredCardView"));
      objc_msgSend(v12, "addGestureRecognizer:", v5);

    }
  }
  else
  {
    objc_msgSend(v4, "setDarkenIntensity:", 1.0);
  }

  if (*(_BYTE *)(a1 + 64))
  {
    objc_msgSend(*(id *)(a1 + 32), "completeTransition:", a2);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "viewForKey:", UITransitionContextToViewKey));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "viewForKey:", UITransitionContextFromViewKey));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "containerView"));
    objc_msgSend(v15, "insertSubview:belowSubview:", v13, v14);

    v16 = objc_loadWeakRetained((id *)(a1 + 56));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "_navigationController"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "viewControllers"));
    v19 = objc_msgSend(v18, "mutableCopy");
    objc_msgSend(v16, "_setRecentViewControllers:", v19);

  }
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  return result;
}

void sub_100060B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100060B60(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  _OWORD v6[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)(a1 + 80);
  v6[0] = *(_OWORD *)(a1 + 64);
  v6[1] = v3;
  v6[2] = *(_OWORD *)(a1 + 96);
  objc_msgSend(v2, "setTransform:", v6);
  objc_msgSend(*(id *)(a1 + 40), "setFrame:", *(double *)(a1 + 112), *(double *)(a1 + 120), *(double *)(a1 + 128), *(double *)(a1 + 136));
  v4 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 48), "percentComplete");
  objc_msgSend(v4, "setDarkenIntensity:");
  return objc_msgSend(*(id *)(a1 + 56), "setFrame:", *(double *)(a1 + 144), *(double *)(a1 + 152), *(double *)(a1 + 160), *(double *)(a1 + 168));
}

void sub_100060BD4(uint64_t a1, int a2)
{
  uint64_t v3;
  id WeakRetained;
  id *v6;
  id v7;
  unsigned int v8;
  id v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    (*(void (**)(uint64_t, _QWORD))(v3 + 16))(v3, a2 & ~objc_msgSend(WeakRetained, "_isCancelling"));

  }
  v6 = (id *)(a1 + 40);
  v7 = objc_loadWeakRetained(v6);
  v8 = objc_msgSend(v7, "_isCancelling");

  if (v8)
  {
    v9 = objc_loadWeakRetained(v6);
    objc_msgSend(v9, "_setCancelling:", 0);

  }
}

uint64_t sub_100060C7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_100060C88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1000616E8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

id sub_1000619C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setAlpha:", 0.0);
}

id sub_1000619D8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setHidden:", 1);
}

id sub_1000619F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setAlpha:", 1.0);
}

void sub_100062A0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a23);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100062A44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_100062A54(uint64_t a1)
{

}

void sub_100062A5C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_100062A6C(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 48);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "didFinishSynthesisRequest:withInstrumentMetrics:error:", *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v4);

}

void sub_100062BCC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  double v16;
  void *v17;
  uint64_t v18;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "text"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 48), "objectForKeyedSubscript:", v2));
  v4 = v3;
  if (v3)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v5 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
        sub_1000A0840((uint64_t)v2, (uint64_t *)(a1 + 48), v5);
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 40), "replaceObjectAtIndex:withObject:", objc_msgSend(v4, "unsignedIntegerValue"), &off_100128C08);
    }
    else
    {
      v14 = objc_msgSend(v3, "unsignedIntegerValue");
      v15 = *(void **)(*(_QWORD *)(a1 + 40) + 40);
      objc_msgSend(*(id *)(a1 + 56), "audioDuration");
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v16 * 1000.0));
      objc_msgSend(v15, "replaceObjectAtIndex:withObject:", v14, v17);

    }
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 48), "removeObjectForKey:", v2);
    if (!objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 48), "count"))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 64);
      if (v18)
        (*(void (**)(void))(v18 + 16))();
    }
  }
  else
  {
    v6 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_1000A07D0(v6, v7, v8, v9, v10, v11, v12, v13);
  }

}

void sub_100062DE4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_1000630BC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "textRequestViewRequestsVoiceActivation:", *(_QWORD *)(a1 + 32));

}

void sub_1000631E4(uint64_t a1, int a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  if (a2)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_textField"));
    objc_msgSend(v3, "becomeFirstResponder");

  }
  else
  {
    objc_msgSend(v2, "resignFirstResponder");
  }
}

id sub_1000633BC(uint64_t a1)
{
  void *v2;
  unint64_t v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_cancelButton"));
  LOBYTE(v3) = *(_BYTE *)(*(_QWORD *)(a1 + 32) + 9);
  objc_msgSend(v2, "setAlpha:", (double)v3);

  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_100063CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100063CE4(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    objc_msgSend(v2, "textRequestViewDidEndTextEditMenuInteraction:", v3);

    WeakRetained = v3;
  }

}

void sub_100064440(id a1)
{
  id v1;
  void *v2;

  v1 = -[SASBoardServicesConfiguration _init]([SASBoardServicesConfiguration alloc], "_init");
  v2 = (void *)qword_1001503F8;
  qword_1001503F8 = (uint64_t)v1;

}

void sub_100064A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  _QWORD v15[4];
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v11 = a6;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100064ACC;
  v15[3] = &unk_100123F70;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(void **)(a1 + 40);
  v16 = v11;
  v17 = v12;
  v18 = v13;
  v23 = *(_BYTE *)(a1 + 48);
  v14 = v11;
  SiriUIInvokeOnMainQueue(v15);

}

void sub_100064ACC(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  SRUIDSurveyActivationHistory *v7;
  uint8_t buf[4];
  const char *v9;
  __int16 v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v3 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      v9 = "-[SRDismissalClassificationController requestMitigationStatusBasedOnRequestClassification:withRequestSource:w"
           "ithCompletion:]_block_invoke_2";
      v10 = 2112;
      v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation Error fetching activationHistory: %@", buf, 0x16u);
    }
    v4 = *(_QWORD *)(a1 + 48);
    if (v4)
      (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(v4 + 16))(v4, 0, *(unsigned __int8 *)(a1 + 88), 0, *(_QWORD *)(a1 + 32));
  }
  else
  {
    v7 = -[SRUIDSurveyActivationHistory initWithCountOfIntended:countOfUnintended:countOfUnintendedActivationSinceLastIntended:days:]([SRUIDSurveyActivationHistory alloc], "initWithCountOfIntended:countOfUnintended:countOfUnintendedActivationSinceLastIntended:days:", *(_QWORD *)(a1 + 56) - *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));
    v5 = objc_msgSend(*(id *)(a1 + 40), "shouldMitigateBasedOnActivationHistory:");
    v6 = *(_QWORD *)(a1 + 48);
    if (v6)
      (*(void (**)(uint64_t, id, _QWORD, SRUIDSurveyActivationHistory *, _QWORD))(v6 + 16))(v6, v5, *(unsigned __int8 *)(a1 + 88), v7, 0);

  }
}

void sub_100064EFC(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("Core duet logging queue", 0);
  v2 = (void *)qword_100150408;
  qword_100150408 = (uint64_t)v1;

}

void sub_1000653B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000653D8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  void (*v23)(void);
  id v24;
  id v25;
  NSObject *v26;
  uint64_t v27;
  id v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint8_t buf[4];
  const char *v35;
  __int16 v36;
  id v37;
  __int16 v38;
  id v39;
  _BYTE v40[128];

  v5 = a2;
  v6 = a3;
  objc_opt_class(NSArray, v7);
  if ((objc_opt_isKindOfClass(v5, v8) & 1) != 0)
  {
    v28 = v6;
    v29 = v5;
    v30 = 0u;
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v9 = v5;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v31;
      do
      {
        v13 = 0;
        do
        {
          if (*(_QWORD *)v31 != v12)
            objc_enumerationMutation(v9);
          v14 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)v13);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "metadata", v28, v29));
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKey:", CFSTR("requestSource")));

          if ((objc_msgSend(v16, "isEqualToNumber:", &off_100128C20) & 1) != 0
            || objc_msgSend(v16, "isEqualToNumber:", &off_100128C38))
          {
            objc_msgSend(*(id *)(a1 + 32), "addObject:", v14);
            v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "metadata"));
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKey:", CFSTR("unintended")));

            if (objc_msgSend(v18, "isEqualToNumber:", &off_100128C50))
            {
              objc_msgSend(*(id *)(a1 + 40), "addObject:", v14);
              ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
            }
            else
            {
              *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
            }

          }
          else
          {
            v19 = AFSiriLogContextConnection;
            if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136315394;
              v35 = "-[SRDismissalClassificationController queryStreamForCountOfEventsWithCompletion:]_block_invoke";
              v36 = 2112;
              v37 = v16;
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%s #mitigation skipping activation due to requestSource: %@", buf, 0x16u);
            }
          }

          v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        v20 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v30, v40, 16);
        v11 = v20;
      }
      while (v20);
    }

    v6 = v28;
    v5 = v29;
  }
  if (v6)
  {
    v21 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v35 = "-[SRDismissalClassificationController queryStreamForCountOfEventsWithCompletion:]_block_invoke";
      v36 = 2112;
      v37 = v6;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "%s #survey executeQuery failed with error: %@", buf, 0x16u);
    }
    v22 = *(_QWORD *)(a1 + 48);
    if (v22)
    {
      v23 = *(void (**)(void))(v22 + 16);
LABEL_28:
      v23();
    }
  }
  else
  {
    v24 = objc_msgSend(*(id *)(a1 + 32), "count");
    v25 = objc_msgSend(*(id *)(a1 + 40), "count");
    v26 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315650;
      v35 = "-[SRDismissalClassificationController queryStreamForCountOfEventsWithCompletion:]_block_invoke";
      v36 = 2048;
      v37 = v25;
      v38 = 2048;
      v39 = v24;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation #survey executeQuery returned %ld unintended events (out of %ld total)", buf, 0x20u);
    }
    v27 = *(_QWORD *)(a1 + 48);
    if (v27)
    {
      v23 = *(void (**)(void))(v27 + 16);
      goto LABEL_28;
    }
  }

}

id sub_100065820(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[8];
  _QWORD v13[8];

  v12[0] = CFSTR("cancellationReason");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 32), "cancellationReason")));
  v13[0] = v2;
  v12[1] = CFSTR("dismissalReason");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 32), "dismissalReason")));
  v13[1] = v3;
  v12[2] = CFSTR("inputType");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 40)));
  v13[2] = v4;
  v12[3] = CFSTR("isDeviceUnlocked");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isDeviceUnlocked")));
  v13[3] = v5;
  v12[4] = CFSTR("longPressBehavior");
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 48)));
  v13[4] = v6;
  v12[5] = CFSTR("previousBehavior");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 56)));
  v13[5] = v7;
  v12[6] = CFSTR("requestSource");
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 32), "requestSource")));
  v13[6] = v8;
  v12[7] = CFSTR("unintended");
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "classifiedAsUnintended")));
  v13[7] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v13, v12, 8));

  return v10;
}

id sub_100065AE0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v8[0] = CFSTR("countOfUnintended");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "countOfUnintendedActivations")));
  v9[0] = v2;
  v8[1] = CFSTR("daysInActivationHistory");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "days")));
  v9[1] = v3;
  v8[2] = CFSTR("daysSinceMitigationChange");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 48)));
  v9[2] = v4;
  v8[3] = CFSTR("dismissalReason");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 40), "dismissalReason")));
  v9[3] = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v9, v8, 4));

  return v6;
}

id sub_100065CD8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[3];
  _QWORD v8[3];

  v7[0] = CFSTR("daysInActivationHistory");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "days")));
  v8[0] = v2;
  v7[1] = CFSTR("daysSinceMitigationChange");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 48)));
  v8[1] = v3;
  v7[2] = CFSTR("dismissalReason");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(*(id *)(a1 + 40), "dismissalReason")));
  v8[2] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v8, v7, 3));

  return v5;
}

void sub_100066850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100066878(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained, "_editableUtteranceViewControllerDidDismiss:", WeakRetained[2]);
    v3 = v5;
    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
    {
      (*(void (**)(uint64_t, _QWORD *))(v4 + 16))(v4, v5);
      v3 = v5;
    }
  }

}

void sub_1000681A8(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)VRXVisualResponseProvider);
  v2 = (void *)qword_100150418;
  qword_100150418 = (uint64_t)v1;

}

NSString *sub_10006A898(void *a1, void *a2, void *a3)
{
  id v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  NSComparisonResult v9;
  NSString *v10;
  NSComparisonResult v11;
  NSString *v12;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v5)
  {
    v8 = (NSString *)v5;
    v9 = UIContentSizeCategoryCompareToCategory(v8, v7);
    v10 = v7;
    if (v9 == NSOrderedDescending
      || (v11 = UIContentSizeCategoryCompareToCategory(v8, v6), v10 = v6, v11 == NSOrderedAscending))
    {
      v12 = v10;

      v8 = v12;
    }
  }
  else
  {
    v8 = v6;
  }

  return v8;
}

void sub_10006B234(uint64_t a1)
{
  _QWORD v2[4];
  id v3;
  _QWORD block[4];
  id v5;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10006B304;
  block[3] = &unk_1001225C0;
  v5 = *(id *)(a1 + 32);
  if (qword_100150430 != -1)
    dispatch_once(&qword_100150430, block);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_10006B388;
  v2[3] = &unk_1001225C0;
  v3 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

}

void sub_10006B304(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[UIImageSymbolConfiguration configurationWithWeight:](UIImageSymbolConfiguration, "configurationWithWeight:", 4));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage _systemImageNamed:withConfiguration:](UIImage, "_systemImageNamed:withConfiguration:", CFSTR("xmark.circle.fill"), v5));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageWithTintColor:renderingMode:", *(_QWORD *)(a1 + 32), 1));
  v4 = (void *)qword_100150428;
  qword_100150428 = v3;

}

id sub_10006B388(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setImage:forState:", qword_100150428, 0);
}

id sub_10006B800(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  objc_msgSend(*(id *)(a1 + 32), "setTextAlignment:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

void sub_10006D53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006D578(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_endBackgroundTask");

}

void sub_10006DBC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10006DBE8(uint64_t a1)
{
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    --WeakRetained[2];

}

void sub_10006EA58(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  uint64_t v6;
  const char *v7;
  NSObject *v8;
  uint32_t v9;
  uint64_t v10;
  int v11;
  const char *v12;
  __int16 v13;
  uint64_t v14;
  __int16 v15;
  id v16;

  v3 = a2;
  v4 = AFSiriLogContextConnection;
  v5 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      v6 = *(_QWORD *)(a1 + 32);
      v11 = 136315650;
      v12 = "+[SRNotificationUtility _postNotificationRequest:notificationCenter:destinations:]_block_invoke";
      v13 = 2112;
      v14 = v6;
      v15 = 2112;
      v16 = v3;
      v7 = "%s Failed to post notification %@ with error %@";
      v8 = v4;
      v9 = 32;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v11, v9);
    }
  }
  else if (v5)
  {
    v10 = *(_QWORD *)(a1 + 32);
    v11 = 136315394;
    v12 = "+[SRNotificationUtility _postNotificationRequest:notificationCenter:destinations:]_block_invoke";
    v13 = 2112;
    v14 = v10;
    v7 = "%s Posted notification %@";
    v8 = v4;
    v9 = 22;
    goto LABEL_6;
  }

}

BOOL sub_10006F024(double a1, double a2, double a3, double a4)
{
  return a2 >= a4 && a1 >= a3;
}

double sub_10006F038(double a1, double a2, double a3, double a4)
{
  return a1 * fmax(a1 / a3, a2 / a4);
}

double sub_10006F050(double a1)
{
  return ceil(a1);
}

void sub_10006FE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10006FEBC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  unint64_t v6;
  unint64_t v7;
  char isKindOfClass;
  id v9;

  v9 = a2;
  if ((objc_opt_isKindOfClass(v9, objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))) & 1) == 0)
  {
    while (1)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v7 = *(_QWORD *)(a1 + 56) - 1;
      isKindOfClass = objc_opt_isKindOfClass(v9, objc_msgSend(*(id *)(a1 + 32), "objectAtIndex:", v6));
      if ((isKindOfClass & 1) != 0 || v6 >= v7)
        break;
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
    }
    if ((isKindOfClass & 1) == 0 && v6 >= v7)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
      *a4 = 1;
    }
  }

}

void sub_100070504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_10007054C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char isKindOfClass;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_convertedCardSections"));
  if (objc_msgSend(v4, "count"))
  {
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    v5 = v4;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v18;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v18 != v8)
            objc_enumerationMutation(v5);
          objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v9), "setSeparatorStyle:", 4, (_QWORD)v17);
          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      }
      while (v7);
    }

    objc_opt_class(SAGKSourceLinkPod, v10);
    isKindOfClass = objc_opt_isKindOfClass(v3, v11);
    v13 = *(void **)(a1 + 32);
    if ((isKindOfClass & 1) != 0)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexSet indexSetWithIndex:](NSIndexSet, "indexSetWithIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24)));
      objc_msgSend(v13, "insertObjects:atIndexes:", v5, v14);

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "addObjectsFromArray:", v5);
    }
    objc_opt_class(SAGKSummaryPod, v15);
    if ((objc_opt_isKindOfClass(v3, v16) & 1) != 0)
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "count");
  }

}

void sub_10007089C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1000708B8(uint64_t a1)
{
  unsigned int *WeakRetained;
  unsigned int *v2;
  SRSiriViewController *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  void *v13;
  int v14;
  NSObject *v15;
  NSObject *v16;
  int v17;
  const char *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;

  WeakRetained = (unsigned int *)objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_cleanupAllViews");
    v3 = -[SRSiriViewController initWithNibName:bundle:]([SRSiriViewController alloc], "initWithNibName:bundle:", 0, 0);
    v4 = (void *)*((_QWORD *)v2 + 1);
    *((_QWORD *)v2 + 1) = v3;

    v5 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v6 = (void *)*((_QWORD *)v2 + 1);
      v17 = 136315394;
      v18 = "-[SRViewController setUpViews]_block_invoke";
      v19 = 2048;
      v20 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s Created new SRSiriViewController (%p)", (uint8_t *)&v17, 0x16u);
    }
    objc_msgSend(v2, "addChildViewController:", *((_QWORD *)v2 + 1));
    objc_msgSend(*((id *)v2 + 1), "didMoveToParentViewController:", v2);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "view"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)v2 + 1), "view"));
    objc_msgSend(v7, "addSubview:", v8);

    v9 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v10 = v2[4];
      v11 = v9;
      v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v10));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v2[4] + 1));
      v17 = 136315650;
      v18 = "-[SRViewController setUpViews]_block_invoke";
      v19 = 2112;
      v20 = v12;
      v21 = 2112;
      v22 = v13;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s About to increment _expectedTeardownCounter from %@ to %@", (uint8_t *)&v17, 0x20u);

    }
    v14 = v2[4];
    v2[4] = v14 + 1;
    if (v14 <= -2)
    {
      v15 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
        sub_1000A0A18(v15);
      v2[4] = 1;
    }
    v16 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 136315138;
      v18 = "-[SRViewController setUpViews]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "%s Added SRSiriViewController to the view hierarchy in Siri.app", (uint8_t *)&v17, 0xCu);
    }
  }

}

void sub_100070BDC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100070BF8(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint8_t v19[128];
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  void *v23;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v3 = v2;
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "childViewControllers"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v4, "count")));
      *(_DWORD *)buf = 136315394;
      v21 = "-[SRViewController _cleanupAllViews]_block_invoke";
      v22 = 2112;
      v23 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s About to remove all SRSiriViewControllers from the view hierarchy in Siri.app - number of children: %@", buf, 0x16u);

    }
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "childViewControllers", 0));
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v16;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(_QWORD *)v16 != v9)
            objc_enumerationMutation(v6);
          v11 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
          objc_msgSend(v11, "willMoveToParentViewController:", 0);
          v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "view"));
          objc_msgSend(v12, "removeFromSuperview");

          objc_msgSend(v11, "removeFromParentViewController");
        }
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      }
      while (v8);
    }

    v13 = (void *)WeakRetained[1];
    WeakRetained[1] = 0;

    v14 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v21 = "-[SRViewController _cleanupAllViews]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%s Removed all SRSiriViewControllers from the view hierarchy in Siri.app", buf, 0xCu);
    }
  }

}

void sub_100070EBC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100070ED8(uint64_t a1)
{
  unsigned int *WeakRetained;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  void *v5;
  void *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  int v10;
  const char *v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;

  WeakRetained = (unsigned int *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      v3 = WeakRetained[4];
      v4 = v2;
      v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v3));
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", WeakRetained[4] - 1));
      v10 = 136315650;
      v11 = "-[SRViewController tearDownViews]_block_invoke";
      v12 = 2112;
      v13 = v5;
      v14 = 2112;
      v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s About to decrement _expectedTeardownCounter from %@ to %@", (uint8_t *)&v10, 0x20u);

    }
    v7 = WeakRetained[4];
    WeakRetained[4] = v7 - 1;
    if (v7 == 1)
    {
      v9 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        v10 = 136315138;
        v11 = "-[SRViewController tearDownViews]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s Expected teardown counter hit 0, calling _cleanupAllViews", (uint8_t *)&v10, 0xCu);
      }
      objc_msgSend(WeakRetained, "_cleanupAllViews");
    }
    else if (v7 <= 0)
    {
      v8 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        v10 = 136315138;
        v11 = "-[SRViewController tearDownViews]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s We received more calls to tearDownViews than setupViews - resetting counter to 0.", (uint8_t *)&v10, 0xCu);
      }
      WeakRetained[4] = 0;
    }
  }

}

void sub_100071B10(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  *(_QWORD *)&v2 = objc_opt_class(*(_QWORD *)(a1 + 32), a2).n128_u64[0];
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle bundleForClass:](NSBundle, "bundleForClass:", v3, v2));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pathForResource:ofType:", CFSTR("ModesConfiguration"), CFSTR("plist")));

  v6 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:", v5));
  v7 = (void *)qword_100150440;
  qword_100150440 = v6;

  if (!qword_100150440)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
      sub_1000A0B3C();
    v8 = (void *)qword_100150440;
    qword_100150440 = (uint64_t)&__NSDictionary0__struct;

  }
}

void sub_100071C58(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_configurationDictionary"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("redundantDUCs")));

  v3 = objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithCapacity:](NSMutableSet, "setWithCapacity:", objc_msgSend(v2, "count")));
  v4 = (void *)qword_100150450;
  qword_100150450 = v3;

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v5 = v2;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v13;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v5);
        v10 = (void *)qword_100150450;
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v9), "lowercaseString", (_QWORD)v12));
        objc_msgSend(v10, "addObject:", v11);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v7);
  }

}

uint64_t start(int a1, char **a2)
{
  void *v4;
  uint64_t v5;
  objc_class *v6;
  NSString *v7;
  NSString *v8;
  uint64_t v9;
  objc_class *v10;
  NSString *v11;
  NSString *v12;
  uint64_t v13;

  v4 = objc_autoreleasePoolPush();
  v6 = (objc_class *)objc_opt_class(SRApplication, v5);
  v7 = NSStringFromClass(v6);
  v8 = (NSString *)objc_claimAutoreleasedReturnValue(v7);
  v10 = (objc_class *)objc_opt_class(SRAppDelegate, v9);
  v11 = NSStringFromClass(v10);
  v12 = (NSString *)objc_claimAutoreleasedReturnValue(v11);
  v13 = UIApplicationMain(a1, a2, v8, v12);

  objc_autoreleasePoolPop(v4);
  return v13;
}

void sub_100074258(uint64_t a1, int a2)
{
  void *v4;
  id v5;
  NSObject *v6;
  void *v7;
  int v8;
  const char *v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[AFPreferences sharedPreferences](AFPreferences, "sharedPreferences"));
  v5 = objc_msgSend(v4, "alwaysShowRecognizedSpeech");

  if (a2)
  {
    if ((v5 & 1) == 0)
    {
      v6 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        v8 = 136315138;
        v9 = "-[SRAppDelegate _verifyAndSyncTrialExperiments]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #trial Trial experiment enrolled - will override setAlwaysShowRecognizedSpeech to YES", (uint8_t *)&v8, 0xCu);
      }
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[AFPreferences sharedPreferences](AFPreferences, "sharedPreferences"));
      objc_msgSend(v7, "setAlwaysShowRecognizedSpeech:", 1);

    }
    objc_msgSend(*(id *)(a1 + 32), "setBool:forKey:", 1, SRUIFPreferencesDeviceEnrolledInASRSettingTrialExperiment);
    objc_msgSend(*(id *)(a1 + 32), "setBool:forKey:", v5, SRUIFPreferencesASRSettingBeforeTrialExperiment);
    objc_msgSend(*(id *)(a1 + 32), "synchronize");
  }
}

void sub_100074738(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10007475C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id *WeakRetained;
  void *v9;
  id v10;
  NSObject *v11;
  unsigned int v12;
  id v13;
  id v14;
  NSObject *v15;
  int v16;
  const char *v17;
  __int16 v18;
  unsigned int v19;
  __int16 v20;
  id v21;

  v3 = a2;
  objc_opt_class(AFUIMutableSceneClientSettings, v4);
  if ((objc_opt_isKindOfClass(v3, v5) & 1) != 0)
    v6 = v3;
  else
    v6 = 0;
  v7 = v6;
  if (v7)
  {
    WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained)
    {
      v9 = (void *)AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        v10 = WeakRetained[2];
        v11 = v9;
        v12 = objc_msgSend(v10, "_contextId");
        v13 = WeakRetained[2];
        v16 = 136315650;
        v17 = "-[SRAppDelegate _updateDeferral]_block_invoke";
        v18 = 1024;
        v19 = v12;
        v20 = 2048;
        v21 = v13;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s updating contextID (%u) on window (%p) for HID deferral", (uint8_t *)&v16, 0x1Cu);

      }
      v14 = WeakRetained[2];
      if (v14)
      {
        if (!objc_msgSend(v14, "_contextId"))
        {
          v15 = AFSiriLogContextConnection;
          if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
            sub_1000A0BB0(v15);
        }
      }
      objc_msgSend(v7, "setClientWindowContextID:", objc_msgSend(WeakRetained[2], "_contextId"));
    }

  }
}

void sub_100074D7C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  double *v10;
  uint64_t v11;
  double v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v1 = v0;
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for SRCarPlayCardViewController();
  objc_msgSendSuper2(&v21, "viewDidLoad");
  v2 = *(void **)&v0[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController];
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v0, "view");
    if (v4)
    {
      v5 = v4;
      v6 = type metadata accessor for SRCarPlayScrollView();
      v7 = swift_dynamicCastClass(v5, v6);
      if (v7)
      {
        v8 = (char *)v7;
        objc_msgSend(v3, "willMoveToParentViewController:", v1);
        objc_msgSend(v1, "addChildViewController:", v3);
        v9 = objc_msgSend(v3, "view");
        sub_10008B9E0(v9, 0);

        objc_msgSend(v3, "didMoveToParentViewController:", v1);
        objc_msgSend(v3, "formSheetSize");
        v10 = (double *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
        *(_QWORD *)v10 = v11;
        v10[1] = v12;
        objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint], "setConstant:", v12);
        objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint], "setConstant:", *v10);
        objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint], "setConstant:", v10[1]);
        objc_msgSend(v8, "setNeedsUpdateConstraints");
        v13 = *(void **)&v1[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardSnippet];
        v14 = v5;
        v15 = objc_msgSend(v13, "referencedCommands");
        if (!v15)
        {
          __break(1u);
          return;
        }
        v16 = v15;
        v17 = sub_100076100(&qword_10014FBF0);
        v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

        if ((unint64_t)v18 >> 62)
        {
          if (v18 < 0)
            v20 = v18;
          else
            v20 = v18 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v18);
          v19 = _CocoaArrayWrapper.endIndex.getter(v20);
          swift_bridgeObjectRelease(v18);
        }
        else
        {
          v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease(v18);
        objc_msgSend(v8, "setUserInteractionEnabled:", v19 != 0);

      }
    }

  }
}

void sub_1000750F0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_delegate));
}

id sub_10007514C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayCardViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_100075248(void *a1)
{
  uint64_t v2;
  id result;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char **v12;
  id v13;
  void *v14;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t WitnessTable;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, char *, uint64_t, uint64_t);
  uint64_t v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  unint64_t v68;
  void *v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;

  v2 = type metadata accessor for UUID(0);
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  result = (id)__chkstk_darwin(v2);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  result = objc_msgSend(a1, "cardSection");
  if (result)
  {
    v6 = result;
    v7 = objc_msgSend(result, "commands");
    swift_unknownObjectRelease(v6);
    if (v7)
    {
      v8 = sub_100076140(0, (unint64_t *)&unk_10014F150, SFAbstractCommand_ptr);
      v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

      if ((unint64_t)v9 >> 62)
        goto LABEL_55;
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
      {
LABEL_6:
        v11 = 0;
        v71 = (_QWORD *)(v74 + OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_delegate);
        v65 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardSnippet;
        v66 = v9 & 0xC000000000000001;
        v61 = v9 + 32;
        v62 = v9 & 0xFFFFFFFFFFFFFF8;
        v70 = (unint64_t)"e=dd}24B40";
        v60 = 0x80000001000DE780;
        v59 = 0x80000001000DE810;
        v12 = &selRef__stopFaceAttentionAwarenessClient_;
        v69 = (void *)0x80000001000DE860;
        v63 = v10;
        v64 = v9;
        while (1)
        {
          while (1)
          {
            if (v66)
            {
              v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
            }
            else
            {
              if (v11 >= *(_QWORD *)(v62 + 16))
                goto LABEL_54;
              v13 = *(id *)(v61 + 8 * v11);
            }
            v14 = v13;
            if (__OFADD__(v11++, 1))
            {
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              if (v9 < 0)
                v58 = v9;
              else
                v58 = v9 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v9);
              v10 = _CocoaArrayWrapper.endIndex.getter(v58);
              swift_bridgeObjectRelease(v9);
              if (!v10)
                goto LABEL_59;
              goto LABEL_6;
            }
            v16 = objc_msgSend(v13, "referenceIdentifier");
            if (v16)
              break;
            if (qword_10014ECE0 != -1)
              swift_once(&qword_10014ECE0, sub_100098388);
            v53 = type metadata accessor for Logger(0);
            sub_1000760E8(v53, (uint64_t)qword_100150068);
            v54 = static os_log_type_t.info.getter();
            sub_10009973C(v54, 0x10uLL, 0xD000000000000025, v60, 0xD00000000000004DLL, v59);

            if (v11 == v10)
              goto LABEL_59;
          }
          v17 = v16;
          v75 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
          v76 = v18;

          result = objc_msgSend(*(id *)(v74 + v65), "referencedCommands");
          if (!result)
            break;
          v19 = result;
          v67 = v14;
          v68 = v11;
          v20 = sub_100076100(&qword_10014FBF0);
          v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v20);

          if ((unint64_t)v21 >> 62)
          {
            if (v21 < 0)
              v55 = v21;
            else
              v55 = v21 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v21);
            v22 = _CocoaArrayWrapper.endIndex.getter(v55);
            swift_bridgeObjectRelease(v21);
            v9 = 0x100128000;
            if (!v22)
              goto LABEL_7;
LABEL_17:
            if (v22 >= 1)
            {
              v23 = 0;
              v77 = v21 & 0xC000000000000001;
              while (1)
              {
                if (v77)
                {
                  v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v21);
                }
                else
                {
                  v24 = *(void **)(v21 + 8 * v23 + 32);
                  swift_unknownObjectRetain(v24);
                }
                v25 = objc_msgSend(v24, v12[91], v59, v60);
                if (!v25)
                  goto LABEL_19;
                v26 = v25;
                v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
                v29 = v28;

                if (v27 == v75 && v29 == v76)
                {
                  swift_bridgeObjectRelease(v76);
                }
                else
                {
                  v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29);
                  swift_bridgeObjectRelease(v29);
                  if ((v31 & 1) == 0)
                    goto LABEL_19;
                }
                v81 = *(_QWORD *)(v9 + 2160);
                v32 = swift_dynamicCastObjCProtocolConditional(v24, 1, &v81);
                if (v32)
                {
                  v33 = v32;
                  ObjectType = swift_getObjectType(v24);
                  v35 = sub_100076140(0, &qword_10014F160, AceObject_ptr);
                  v36 = swift_dynamicCastMetatype(ObjectType, v35) ? v33 : 0;
                  if (v36)
                  {
                    v37 = (void *)objc_opt_self(SRUIFInstrumentationManager);
                    swift_unknownObjectRetain(v24);
                    v38 = objc_msgSend(v37, "sharedManager");
                    v39 = objc_msgSend(v38, "currentInstrumentationTurnContext");

                    v40 = objc_msgSend(v39, "turnIdentifier");
                    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v40);

                    v79 = 0;
                    v80 = 0xE000000000000000;
                    _StringGuts.grow(_:)(85);
                    v41._countAndFlagsBits = 0xD000000000000053;
                    v41._object = v69;
                    String.append(_:)(v41);
                    v42 = swift_getObjectType(v36);
                    v78 = v36;
                    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v42);
                    DefaultStringInterpolation.appendInterpolation<A>(_:)(&v78, v42, WitnessTable);
                    v44 = v5;
                    v46 = v79;
                    v45 = v80;
                    if (qword_10014ECE0 != -1)
                      swift_once(&qword_10014ECE0, sub_100098388);
                    v47 = type metadata accessor for Logger(0);
                    sub_1000760E8(v47, (uint64_t)qword_100150068);
                    v48 = static os_log_type_t.info.getter();
                    sub_10009973C(v48, 0x10uLL, 0xD000000000000025, v70 | 0x8000000000000000, v46, v45);
                    swift_bridgeObjectRelease(v45);
                    v49 = *v71;
                    v50 = v71[1];
                    v51 = swift_getObjectType(*v71);
                    v52 = *(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v50 + 40);
                    swift_unknownObjectRetain(v49);
                    v52(v74, v36, v44, v51, v50);
                    swift_unknownObjectRelease_n(v24, 2);
                    swift_unknownObjectRelease(v49);
                    (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v73);
                    v5 = v44;
                    v12 = &selRef__stopFaceAttentionAwarenessClient_;
                    v9 = 0x100128000;
                    goto LABEL_20;
                  }
                }
LABEL_19:
                swift_unknownObjectRelease(v24);
LABEL_20:
                if (v22 == ++v23)
                  goto LABEL_7;
              }
            }
            goto LABEL_53;
          }
          v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          v9 = (uint64_t)&off_100128000;
          if (v22)
            goto LABEL_17;
LABEL_7:

          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v76);
          v10 = v63;
          v9 = v64;
          v11 = v68;
          if (v68 == v63)
            goto LABEL_59;
        }
        __break(1u);
        goto LABEL_62;
      }
LABEL_59:
      swift_bridgeObjectRelease(v9);
    }
    else
    {
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v56 = type metadata accessor for Logger(0);
      sub_1000760E8(v56, (uint64_t)qword_100150068);
      v57 = static os_log_type_t.info.getter();
      sub_10009973C(v57, 0x10uLL, 0xD000000000000025, 0x80000001000DE780, 0xD000000000000053, 0x80000001000DE7B0);
    }
    return 0;
  }
LABEL_63:
  __break(1u);
  return result;
}

uint64_t variable initialization expression of SiriSystemUIController.viewMode()
{
  return 0;
}

uint64_t variable initialization expression of SiriSystemUIController.lockState()
{
  return 2;
}

uint64_t variable initialization expression of SiriSystemUIController.activityId()
{
  return 0;
}

uint64_t variable initialization expression of SiriSystemUIController.currentActivitySupportsLandscape()
{
  return 0;
}

uint64_t variable initialization expression of SiriSystemUIController.domainResponseId()
{
  return 0;
}

double variable initialization expression of SRFeedbackButton.diameter()
{
  return 50.0;
}

uint64_t type metadata accessor for SRCarPlayCardViewController()
{
  return objc_opt_self(_TtC4Siri27SRCarPlayCardViewController);
}

__n128 sub_1000759E0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1000759F0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100075A10(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1000761A0(a1, &qword_10014EFE0, (uint64_t)&unk_100124408);
}

void type metadata accessor for SASLockState(uint64_t a1)
{
  sub_1000761A0(a1, &qword_10014EFE8, (uint64_t)&unk_100124430);
}

void type metadata accessor for SiriUIViewMode(uint64_t a1)
{
  sub_1000761A0(a1, &qword_10014EFF0, (uint64_t)&unk_100124458);
}

void type metadata accessor for SiriUISiriEvent(uint64_t a1)
{
  sub_1000761A0(a1, &qword_10014EFF8, (uint64_t)&unk_100124478);
}

void type metadata accessor for SiriUISiriState(uint64_t a1)
{
  sub_1000761A0(a1, &qword_10014F000, (uint64_t)&unk_100124498);
}

void type metadata accessor for VRXHostMaterial(uint64_t a1)
{
  sub_1000761A0(a1, &qword_10014F008, (uint64_t)&unk_1001244B8);
}

void sub_100075AB0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_100075AB8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_100075ACC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_100075AE0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100075AF4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_100075B24@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100075B50@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_100075B74(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_100075B88(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_100075B9C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_100075BB0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100075BC4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_100075BD8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_100075BEC(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_100075C00()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_100075C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_QWORD *sub_100075C28(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

BOOL sub_100075C3C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_100075C50@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_100075C60(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_100075C6C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1000760B0(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_100075CA8()
{
  return sub_100075CF0(&qword_10014F010, (uint64_t)&unk_1000C1070);
}

uint64_t sub_100075CCC()
{
  return sub_100075CF0(&qword_10014F018, (uint64_t)&unk_1000C103C);
}

uint64_t sub_100075CF0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for SASLockState(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100075D30()
{
  return sub_100075CF0(&qword_10014F020, (uint64_t)&unk_1000C109C);
}

uint64_t sub_100075D54()
{
  return sub_100075CF0(&qword_10014F028, (uint64_t)&unk_1000C10D8);
}

_QWORD *sub_100075D78@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100075D84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  Class isa;
  uint64_t v12;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(SRUIFInstrumentationManager), "sharedManager");
  v7 = objc_msgSend(v6, "currentInstrumentationTurnContext");

  v8 = objc_msgSend(v7, "turnIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v8);

  v9 = objc_msgSend(objc_allocWithZone((Class)VRXSnippetRenderingContext), "initWithRenderingEvent:", a1);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "emitWithTurnIdentifier:", isa);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100075EB0(double a1, double a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  double *v15;
  id v16;
  _QWORD v17[2];
  uint64_t v18;
  unint64_t v19;

  v5 = objc_msgSend(v2, "view");
  if (v5)
  {
    v16 = v5;
    v6 = type metadata accessor for SRCarPlayScrollView();
    v7 = swift_dynamicCastClass(v16, v6);
    if (v7)
    {
      v8 = (char *)v7;
      v18 = 0;
      v19 = 0xE000000000000000;
      _StringGuts.grow(_:)(29);
      v9._object = (void *)0x80000001000DE900;
      v9._countAndFlagsBits = 0xD00000000000001BLL;
      String.append(_:)(v9);
      *(double *)v17 = a1;
      *(double *)&v17[1] = a2;
      type metadata accessor for CGSize(0);
      _print_unlocked<A, B>(_:_:)(v17, &v18, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v11 = v18;
      v12 = v19;
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v13 = type metadata accessor for Logger(0);
      sub_1000760E8(v13, (uint64_t)qword_100150068);
      v14 = static os_log_type_t.info.getter();
      sub_10009973C(v14, 0x10uLL, 0xD00000000000003DLL, 0x80000001000DE8C0, v11, v12);
      swift_bridgeObjectRelease(v12);
      v15 = (double *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
      *v15 = a1;
      v15[1] = a2;
      objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint], "setConstant:", a2);
      objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint], "setConstant:", *v15);
      objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint], "setConstant:", v15[1]);
      objc_msgSend(v8, "setNeedsUpdateConstraints");

    }
    else
    {

    }
  }
}

uint64_t sub_1000760B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1000760E8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100076100(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_100076140(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for AFUISiriSessionAvailabilityState(uint64_t a1)
{
  sub_1000761A0(a1, &qword_10014F168, (uint64_t)&unk_100124538);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_1000761A0(a1, (unint64_t *)&unk_10014F170, (uint64_t)&unk_100124558);
}

void sub_1000761A0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

NSString sub_1000761F4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_10014F4E0 = (uint64_t)result;
  return result;
}

id sub_100076268()
{
  _BYTE *v0;
  uint64_t v1;
  os_log_type_t v2;
  objc_super v4;

  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v1 = type metadata accessor for Logger(0);
  sub_1000760E8(v1, (uint64_t)qword_100150068);
  v2 = static os_log_type_t.info.getter();
  sub_10009973C(v2, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000DEC50);
  objc_msgSend(*(id *)&v0[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter], "removeObserver:", v0);
  v0[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for TypeToSiriKeyboardReadinessObserver();
  return objc_msgSendSuper2(&v4, "dealloc");
}

id sub_1000763A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  os_log_type_t v5;
  uint64_t v6;
  os_log_type_t v7;
  void *v8;

  v1 = v0;
  v2 = OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening;
  if (*(_BYTE *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening) == 1)
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v3 = type metadata accessor for Logger(0);
    sub_1000760E8(v3, (uint64_t)qword_100150068);
    v4 = static os_log_type_t.info.getter();
    sub_10009973C(v4, 0, 0x29287472617473, 0xE700000000000000, 0xD000000000000041, 0x80000001000DECB0);
    v5 = static os_log_type_t.info.getter();
    sub_10009973C(v5, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000DEC50);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter), "removeObserver:", v0);
    *(_BYTE *)(v0 + v2) = 0;
    *(_QWORD *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount) = 0;
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v6 = type metadata accessor for Logger(0);
  sub_1000760E8(v6, (uint64_t)qword_100150068);
  v7 = static os_log_type_t.info.getter();
  sub_10009973C(v7, 0, 0x29287472617473, 0xE700000000000000, 0xD000000000000029, 0x80000001000DEC80);
  *(_BYTE *)(v0 + v2) = 1;
  v8 = *(void **)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter);
  if (qword_10014EC80 != -1)
    swift_once(&qword_10014EC80, sub_1000761F4);
  return objc_msgSend(v8, "addObserver:selector:name:object:", v1, "keyboardCanRespondToUserInputWithNotification:", qword_10014F4E0, 0);
}

id sub_1000765CC()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  id result;

  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v1 = type metadata accessor for Logger(0);
  sub_1000760E8(v1, (uint64_t)qword_100150068);
  v2 = static os_log_type_t.info.getter();
  sub_10009973C(v2, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000DEC50);
  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter), "removeObserver:", v0);
  *(_BYTE *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount) = 0;
  return result;
}

void sub_1000766C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  void *Strong;
  void *v10;
  os_log_type_t v11;

  v2 = OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_10014ECE0, sub_100098388);
    goto LABEL_4;
  }
  v0 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount) = v5;
  if (v5 != 2)
    return;
  if (qword_10014ECE0 != -1)
    goto LABEL_9;
LABEL_4:
  v6 = type metadata accessor for Logger(0);
  sub_1000760E8(v6, (uint64_t)qword_100150068);
  v7 = ((uint64_t (*)(void))static os_log_type_t.info.getter)();
  sub_10009973C(v7, 0, 0xD00000000000002CLL, 0x80000001000DEBE0, 0xD000000000000030, 0x80000001000DEC10);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_delegate, v8);
  if (Strong)
  {
    v10 = Strong;
    objc_msgSend(Strong, "keyboardIsReadyToReceiveInput");
    Strong = (void *)swift_unknownObjectRelease(v10);
  }
  v11 = static os_log_type_t.info.getter(Strong);
  sub_10009973C(v11, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000DEC50);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter), "removeObserver:", v0);
  *(_BYTE *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening) = 0;
  *(_QWORD *)(v0 + v2) = 0;
}

uint64_t type metadata accessor for TypeToSiriKeyboardReadinessObserver()
{
  return objc_opt_self(SRTypeToSiriKeyboardReadinessObserver);
}

id sub_1000768F8(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v3 = OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter;
  v4 = (void *)objc_opt_self(NSNotificationCenter);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "defaultCenter");
  v5[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount] = 0;
  v7 = swift_unknownObjectWeakInit(&v5[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_delegate], 0, v6);
  swift_unknownObjectWeakAssign(v7, a1);

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for TypeToSiriKeyboardReadinessObserver();
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t sub_1000769B8(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void sub_1000769DC()
{
  void *v0;
  id v1;

  sub_100076C7C();
  v0 = (void *)static OS_dispatch_queue.main.getter();
  v1 = objc_msgSend(objc_allocWithZone((Class)PDCPreflightManager), "initWithTargetQueue:", v0);

  qword_10014F530 = (uint64_t)v1;
}

id sub_100076B50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PrivacyDisclosureManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PrivacyDisclosureManager()
{
  return objc_opt_self(_TtC4Siri24PrivacyDisclosureManager);
}

id sub_100076BA4(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  NSString v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v12;

  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = 0;
  v7 = objc_msgSend(v3, "initWithBundleIdentifier:allowPlaceholder:error:", v6, a3 & 1, &v12);

  v8 = v12;
  if (v7)
  {
    v9 = v12;
  }
  else
  {
    v10 = v12;
    _convertNSErrorToError(_:)(v8);

    swift_willThrow();
  }
  return v7;
}

unint64_t sub_100076C7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F560;
  if (!qword_10014F560)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10014F560);
  }
  return result;
}

CALayerCornerCurve sub_100076CB8()
{
  qword_100151120 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

void sub_100076CD0()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v1 = objc_msgSend(v0, "CGColor");

  qword_100151128 = (uint64_t)v1;
}

double sub_100076D30()
{
  double result;

  result = 0.0;
  xmmword_100151130 = xmmword_1000C1360;
  return result;
}

double sub_100076D44()
{
  double result;

  result = kCALayerCornerRadiusAutomaticPill;
  qword_100151140 = kCALayerCornerRadiusAutomaticPill;
  return result;
}

id sub_100076D5C()
{
  NSString v0;
  id v1;
  id v2;
  Class isa;
  id v4;
  Class v5;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v0);

  v2 = v1;
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setFromValue:", isa);

  v4 = v2;
  v5 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setToValue:", v5);

  objc_msgSend(v4, "setStiffness:", 1000.0);
  objc_msgSend(v4, "setMass:", 3.0);
  objc_msgSend(v4, "setDamping:", 500.0);
  objc_msgSend(v4, "setDuration:", 0.5);
  objc_msgSend(v4, "setFillMode:", kCAFillModeBoth);
  return v4;
}

id sub_100076E9C()
{
  NSString v0;
  id v1;
  id v2;
  Class isa;
  id v4;
  Class v5;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v0);

  v2 = v1;
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setFromValue:", isa);

  v4 = v2;
  v5 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setToValue:", v5);

  objc_msgSend(v4, "setStiffness:", 300.0);
  objc_msgSend(v4, "setMass:", 2.0);
  objc_msgSend(v4, "setDamping:", 50.0);
  objc_msgSend(v4, "setDuration:", 0.8);
  objc_msgSend(v4, "setFillMode:", kCAFillModeBoth);
  return v4;
}

id sub_100076FDC()
{
  NSString v0;
  id v1;
  id v2;
  Class isa;
  id v4;
  Class v5;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v0);

  v2 = v1;
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setFromValue:", isa);

  v4 = v2;
  v5 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setToValue:", v5);

  objc_msgSend(v4, "setStiffness:", 1000.0);
  objc_msgSend(v4, "setMass:", 3.0);
  objc_msgSend(v4, "setDamping:", 500.0);
  objc_msgSend(v4, "setDuration:", 0.5);
  objc_msgSend(v4, "setFillMode:", kCAFillModeBoth);
  return v4;
}

id sub_100077128()
{
  NSString v0;
  id v1;
  id v2;
  Class isa;
  id v4;
  Class v5;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(CASpringAnimation), "animationWithKeyPath:", v0);

  v2 = v1;
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v2, "setFromValue:", isa);

  v4 = v2;
  v5 = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v4, "setToValue:", v5);

  objc_msgSend(v4, "setStiffness:", 300.0);
  objc_msgSend(v4, "setMass:", 2.0);
  objc_msgSend(v4, "setDamping:", 50.0);
  objc_msgSend(v4, "setDuration:", 0.8);
  objc_msgSend(v4, "setFillMode:", kCAFillModeBoth);
  return v4;
}

uint64_t sub_100077270()
{
  SEL *v0;
  void *v1;
  SEL *v2;
  id v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  char v23;
  uint64_t v24;
  id v25;
  void *v26;
  char v27;
  id v28;
  id v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v2 = (SEL *)objc_msgSend(v1, "siriui_card");
  if (!v2)
    goto LABEL_57;
  v0 = v2;
  if ((-[SEL respondsToSelector:](v2, "respondsToSelector:", "backingCard") & 1) != 0)
  {
    v3 = -[SEL backingCard](v0, "backingCard");
    swift_unknownObjectRelease(v0);
    if (v3)
    {
      v0 = (SEL *)&selRef__stopFaceAttentionAwarenessClient_;
      v4 = objc_msgSend(v3, "cardSections");

      if (v4)
      {
        v5 = sub_10007762C();
        v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

        if ((unint64_t)v6 >> 62)
          goto LABEL_48;
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v7)
        {
          while (1)
          {
            v8 = v6 & 0xC000000000000001;
            if ((v6 & 0xC000000000000001) != 0)
            {
              v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
            }
            else
            {
              if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
                goto LABEL_58;
              }
              v9 = *(id *)(v6 + 32);
            }
            v10 = v9;
            type metadata accessor for VisualResponseProvider(0);
            v11 = v10;
            v12 = static VisualResponseProvider.isCardSectionSupported(cardSection:)(v10);

            if ((v12 & 1) != 0)
            {
LABEL_11:
              swift_bridgeObjectRelease(v6);

              return 1;
            }
            v37 = v6 + 32;
            v38 = v6 & 0xFFFFFFFFFFFFFF8;
            v14 = 1;
            v39 = v6;
            v35 = v7;
            v36 = v5;
            v34 = v6 & 0xC000000000000001;
            while (1)
            {
              v15 = objc_opt_self(SFCollectionCardSection);
              v16 = swift_dynamicCastObjCClass(v11, v15);
              if (!v16)
                goto LABEL_31;
              v17 = (void *)v16;
              v18 = v11;
              v19 = objc_msgSend(v17, v0[288]);
              if (v19)
                break;

LABEL_31:
              if (v14 == v7)
                goto LABEL_52;
              if (v8)
              {
                v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v6);
              }
              else
              {
                if (v14 >= *(_QWORD *)(v38 + 16))
                  goto LABEL_56;
                v28 = *(id *)(v37 + 8 * v14);
              }
              v29 = v28;
              if (__OFADD__(v14++, 1))
                goto LABEL_47;
              v11 = v28;
              v31 = static VisualResponseProvider.isCardSectionSupported(cardSection:)(v29);

              if ((v31 & 1) != 0)
                goto LABEL_11;
            }
            v20 = v19;
            v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v5);

            v40 = v18;
            if ((unint64_t)v6 >> 62)
            {
              if (v6 < 0)
                v32 = v6;
              else
                v32 = v6 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v6);
              v5 = _CocoaArrayWrapper.endIndex.getter(v32);
              if (!v5)
                goto LABEL_45;
            }
            else
            {
              v5 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v6);
              if (!v5)
                goto LABEL_45;
            }
            v21 = (v6 & 0xC000000000000001) != 0
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6)
                : *(id *)(v6 + 32);
            v22 = v21;
            v23 = static VisualResponseProvider.isCardSectionSupported(cardSection:)(v21);

            if ((v23 & 1) == 0)
              break;
            if (v5 == 1)
            {
LABEL_45:

              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease_n(v6, 2);

              return 1;
            }
            v24 = 5;
            while (1)
            {
              v25 = (v6 & 0xC000000000000001) != 0
                  ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24 - 4, v6)
                  : *(id *)(v6 + 8 * v24);
              v26 = v25;
              v0 = (SEL *)(v24 - 3);
              if (__OFADD__(v24 - 4, 1))
                break;
              v27 = static VisualResponseProvider.isCardSectionSupported(cardSection:)(v25);

              if ((v27 & 1) == 0)
                goto LABEL_29;
              ++v24;
              if (v0 == (SEL *)v5)
                goto LABEL_45;
            }
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            if (v6 < 0)
              v33 = v6;
            else
              v33 = v6 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v6);
            v7 = _CocoaArrayWrapper.endIndex.getter(v33);
            swift_bridgeObjectRelease(v6);
            if (!v7)
              goto LABEL_52;
          }
LABEL_29:

          swift_bridgeObjectRelease_n(v6, 2);
          v0 = (SEL *)&selRef__stopFaceAttentionAwarenessClient_;
          v6 = v39;
          v7 = v35;
          v5 = v36;
          v8 = v34;
          goto LABEL_31;
        }
LABEL_52:
        swift_bridgeObjectRelease(v6);
      }
    }
    return 0;
  }
  else
  {
LABEL_58:
    result = swift_unknownObjectRelease(v0);
    __break(1u);
  }
  return result;
}

unint64_t sub_10007762C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F9E0;
  if (!qword_10014F9E0)
  {
    v1 = objc_opt_self(SFCardSection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10014F9E0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SRCarPlaySiriUnavailableView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t destroy for SRCarPlaySiriUnavailableView(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  swift_bridgeObjectRelease(a1[9]);
  swift_bridgeObjectRelease(a1[11]);
  return swift_unknownObjectWeakDestroy(a1 + 12);
}

uint64_t initializeWithCopy for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v5;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v11 = *(_QWORD *)(a2 + 88);
  v12 = a2 + 96;
  *(_QWORD *)(a1 + 88) = v11;
  ((void (*)(void))swift_bridgeObjectRetain)();
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_unknownObjectWeakCopyInit(a1 + 96, v12);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  swift_unknownObjectWeakCopyAssign(a1 + 96, a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t initializeWithTake for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  swift_unknownObjectWeakTakeInit(a1 + 96, a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v12 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease(v12);
  swift_unknownObjectWeakTakeAssign(a1 + 96, a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for SRCarPlaySiriUnavailableView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SRCarPlaySiriUnavailableView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SRCarPlaySiriUnavailableView()
{
  return &type metadata for SRCarPlaySiriUnavailableView;
}

uint64_t sub_100077A70(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10011A068, 1);
}

uint64_t sub_100077A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];

  v40[1] = a1;
  v5 = sub_100076100(&qword_10014F568);
  __chkstk_darwin(v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100076100(&qword_10014F570);
  __chkstk_darwin(v8);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100076100(&qword_10014F578);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v12);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 1;
  v15 = sub_100076100(&qword_10014F580);
  v16 = sub_100077CE0(a2, (uint64_t)&v7[*(int *)(v15 + 44)]);
  v17 = static Alignment.center.getter(v16);
  sub_100078694(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, INFINITY, 0, v17, v18);
  v19 = sub_10007A104((uint64_t)v7, &qword_10014F568);
  LOBYTE(v7) = static Edge.Set.bottom.getter(v19);
  v20 = EdgeInsets.init(_all:)(24.0);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_10007A188((uint64_t)v10, (uint64_t)v14, &qword_10014F570);
  v27 = &v14[*(int *)(v11 + 36)];
  *v27 = (char)v7;
  *((double *)v27 + 1) = v20;
  *((_QWORD *)v27 + 2) = v22;
  *((_QWORD *)v27 + 3) = v24;
  *((_QWORD *)v27 + 4) = v26;
  v27[40] = 0;
  v28 = sub_10007A104((uint64_t)v10, &qword_10014F570);
  v29 = static Edge.Set.top.getter(v28);
  GeometryProxy.size.getter();
  v31 = EdgeInsets.init(_all:)(v30 * 0.15);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_10007A188((uint64_t)v14, a3, &qword_10014F578);
  v38 = a3 + *(int *)(sub_100076100(&qword_10014F588) + 36);
  *(_BYTE *)v38 = v29;
  *(double *)(v38 + 8) = v31;
  *(_QWORD *)(v38 + 16) = v33;
  *(_QWORD *)(v38 + 24) = v35;
  *(_QWORD *)(v38 + 32) = v37;
  *(_BYTE *)(v38 + 40) = 0;
  return sub_10007A104((uint64_t)v14, &qword_10014F578);
}

uint64_t sub_100077CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t KeyPath;
  int v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char v120[16];
  uint64_t v121;
  char v122[24];
  uint64_t v123;
  unsigned __int8 v124;
  uint64_t v125;
  unsigned __int8 v126;
  uint64_t v127;
  uint64_t v128;

  v107 = type metadata accessor for DismissButtonStyle(0);
  v4 = __chkstk_darwin(v107);
  v106 = (uint64_t *)((char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  v109 = (uint64_t)&v94 - v6;
  v110 = sub_100076100(&qword_10014F590);
  v112 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v103 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_100076100(&qword_10014F598);
  v119 = *(_QWORD *)(v111 - 8);
  v8 = __chkstk_darwin(v111);
  v108 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v118 = (char *)&v94 - v10;
  v113 = a1;
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(unsigned __int8 *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v14);
  v15 = Text.init(_:tableName:bundle:comment:)(v11, v12, v13, v14, 0, 0, 0, 0, 0, 256);
  v17 = v16;
  v19 = v18;
  v21 = v20 & 1;
  v22 = static Font.largeTitle.getter();
  v23 = Text.font(_:)(v22, v15, v17, v21, v19);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_release(v22);
  sub_10007899C(v15, v17, v21);
  v30 = swift_bridgeObjectRelease(v19);
  v31 = static Font.Weight.medium.getter(v30);
  v104 = Text.fontWeight(_:)(*(_QWORD *)&v31, 0, v23, v25, v27 & 1, v29);
  v117 = v32;
  v105 = v33;
  v116 = v34 & 1;
  sub_10007899C(v23, v25, v27 & 1);
  swift_bridgeObjectRelease(v29);
  v35 = *(_QWORD *)(v113 + 32);
  v36 = *(_QWORD *)(v113 + 40);
  v37 = *(unsigned __int8 *)(v113 + 48);
  v38 = *(_QWORD *)(v113 + 56);
  swift_bridgeObjectRetain(v36);
  swift_bridgeObjectRetain(v38);
  LOWORD(v93) = 256;
  v39 = Text.init(_:tableName:bundle:comment:)(v35, v36, v37, v38, 0, 0, 0, 0, 0, v93);
  v41 = v40;
  v43 = v42;
  v45 = v44 & 1;
  v46 = static Font.headline.getter();
  v47 = Text.font(_:)(v46, v39, v41, v45, v43);
  v49 = v48;
  LOBYTE(v19) = v50;
  v52 = v51;
  swift_release(v46);
  sub_10007899C(v39, v41, v45);
  v53 = swift_bridgeObjectRelease(v43);
  v54 = static Font.Weight.regular.getter(v53);
  v102 = Text.fontWeight(_:)(*(_QWORD *)&v54, 0, v47, v49, v19 & 1, v52);
  v101 = v55;
  v114 = v56;
  v100 = v57 & 1;
  sub_10007899C(v47, v49, v19 & 1);
  swift_bridgeObjectRelease(v52);
  KeyPath = swift_getKeyPath(&unk_1000C13F0);
  v58 = static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)(&v123, 0, 1, 0x4051400000000000, 0, v58, v59);
  v99 = v123;
  v98 = v124;
  v97 = v125;
  v96 = v126;
  v95 = v127;
  v94 = v128;
  v60 = v113;
  sub_1000788D0(v113, (uint64_t)v122);
  v61 = swift_allocObject(&unk_100124758, 128, 7);
  sub_100078908((uint64_t)v122, v61 + 16);
  v121 = v60;
  v62 = sub_100076100(&qword_10014F5A0);
  v63 = sub_100079730();
  v64 = v103;
  Button.init(action:label:)(sub_100079720, v61, sub_100079728, v120, v62, v63);
  v65 = swift_getKeyPath(&unk_1000C1420);
  v66 = (uint64_t)v106;
  *v106 = v65;
  v67 = sub_100076100(&qword_10014F5B0);
  swift_storeEnumTagMultiPayload(v66, v67, 0);
  v68 = v107;
  v69 = v66 + *(int *)(v107 + 20);
  *(_QWORD *)v69 = swift_getKeyPath(&unk_1000C1450);
  *(_BYTE *)(v69 + 8) = 0;
  v70 = *(int *)(v68 + 24);
  v71 = objc_msgSend((id)objc_opt_self(UIColor), "_carSystemFocusColor");
  *(_QWORD *)(v66 + v70) = Color.init(uiColor:)(v71);
  v72 = v109;
  sub_100079828(v66, v109);
  v73 = sub_10007A4BC(&qword_10014F5B8, &qword_10014F590, (uint64_t)&protocol conformance descriptor for Button<A>);
  v74 = sub_10007A47C(&qword_10014F5C0, type metadata accessor for DismissButtonStyle, (uint64_t)&unk_1000C14B0);
  v75 = v108;
  v76 = v110;
  View.buttonStyle<A>(_:)(v72, v110, v68, v73, v74);
  sub_10007A0C8(v72, type metadata accessor for DismissButtonStyle);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v64, v76);
  v77 = v119;
  v78 = v118;
  v79 = v111;
  (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v75, v111);
  LOBYTE(v76) = v116;
  v122[0] = v116;
  v80 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  v80(v75, v78, v79);
  v81 = v104;
  v82 = v117;
  *(_QWORD *)a2 = v104;
  *(_QWORD *)(a2 + 8) = v82;
  *(_BYTE *)(a2 + 16) = v76;
  v83 = v105;
  v84 = v102;
  *(_QWORD *)(a2 + 24) = v105;
  *(_QWORD *)(a2 + 32) = v84;
  v85 = v101;
  *(_QWORD *)(a2 + 40) = v101;
  LOBYTE(v68) = v100;
  *(_BYTE *)(a2 + 48) = v100;
  v86 = KeyPath;
  *(_QWORD *)(a2 + 56) = v114;
  *(_QWORD *)(a2 + 64) = v86;
  *(_BYTE *)(a2 + 72) = 1;
  *(_QWORD *)(a2 + 80) = 0;
  *(_BYTE *)(a2 + 88) = 1;
  *(_QWORD *)(a2 + 96) = v99;
  *(_BYTE *)(a2 + 104) = v98;
  *(_QWORD *)(a2 + 112) = v97;
  *(_BYTE *)(a2 + 120) = v96;
  v87 = v94;
  *(_QWORD *)(a2 + 128) = v95;
  *(_QWORD *)(a2 + 136) = v87;
  v88 = sub_100076100(&qword_10014F5C8);
  v80((char *)(a2 + *(int *)(v88 + 80)), v75, v79);
  sub_10007986C(v81, v82, v116);
  swift_bridgeObjectRetain(v83);
  sub_10007986C(v84, v85, v68);
  v89 = *(void (**)(char *, uint64_t))(v119 + 8);
  v90 = v114;
  swift_bridgeObjectRetain(v114);
  v91 = KeyPath;
  swift_retain(KeyPath);
  v89(v118, v79);
  v89(v75, v79);
  sub_10007899C(v84, v85, v68);
  swift_release(v91);
  swift_bridgeObjectRelease(v90);
  sub_10007899C(v81, v117, v122[0]);
  return swift_bridgeObjectRelease(v83);
}

uint64_t sub_100078488(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  id v10;

  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000760E8(v2, (uint64_t)qword_100150068);
  v4 = static os_log_type_t.info.getter(v3);
  sub_10009973C(v4, 0x10uLL, 2036625250, 0xE400000000000000, 0xD000000000000032, 0x80000001000DEDE0);
  result = swift_unknownObjectWeakLoadStrong(a1 + 96, v5);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(a1 + 104);
    ObjectType = swift_getObjectType(result);
    v10 = objc_msgSend(objc_allocWithZone((Class)UIViewController), "init", 0);
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, 7, ObjectType, v8);

    return swift_unknownObjectRelease(v7);
  }
  return result;
}

double sub_1000785A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  double result;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  __int128 v24;

  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *(unsigned __int8 *)(a1 + 80);
  v6 = *(_QWORD *)(a1 + 88);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  v7 = Text.init(_:tableName:bundle:comment:)(v3, v4, v5, v6, 0, 0, 0, 0, 0, 256);
  v9 = v8;
  LOBYTE(v5) = v10;
  v12 = v11;
  v13 = static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)(&v20, 0x406E200000000000, 0, 0x4044000000000000, 0, v13, v14);
  v15 = v20;
  v16 = v21;
  v17 = v22;
  v18 = v23;
  *(_QWORD *)a2 = v7;
  *(_QWORD *)(a2 + 8) = v9;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  *(_QWORD *)(a2 + 24) = v12;
  *(_QWORD *)(a2 + 32) = v15;
  *(_BYTE *)(a2 + 40) = v16;
  *(_QWORD *)(a2 + 48) = v17;
  *(_BYTE *)(a2 + 56) = v18;
  result = *(double *)&v24;
  *(_OWORD *)(a2 + 64) = v24;
  return result;
}

__n128 sub_100078694@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __n128 result;
  unsigned int v39;
  double v40;
  double v41;
  double v42;
  double v43;
  _OWORD v44[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v42 = a5;
    v43 = a7;
    v41 = a3;
    v40 = a1;
    v39 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v39;
    a1 = v40;
    v20 = a10;
    a3 = v41;
    v19 = a12;
    a5 = v42;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  sub_10007A188(v16, a9, &qword_10014F568);
  v35 = a9 + *(int *)(sub_100076100(&qword_10014F570) + 36);
  v36 = v44[5];
  *(_OWORD *)(v35 + 64) = v44[4];
  *(_OWORD *)(v35 + 80) = v36;
  *(_OWORD *)(v35 + 96) = v44[6];
  v37 = v44[1];
  *(_OWORD *)v35 = v44[0];
  *(_OWORD *)(v35 + 16) = v37;
  result = (__n128)v44[3];
  *(_OWORD *)(v35 + 32) = v44[2];
  *(__n128 *)(v35 + 48) = result;
  return result;
}

uint64_t sub_100078858()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100078870@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[112];

  sub_1000788D0(v1, (uint64_t)v5);
  v3 = swift_allocObject(&unk_100124730, 128, 7);
  result = sub_100078908((uint64_t)v5, v3 + 16);
  *a1 = sub_100078958;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v3;
  return result;
}

uint64_t sub_1000788D0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SRCarPlaySiriUnavailableView(a2, a1);
  return a2;
}

uint64_t sub_100078908(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v6;
  swift_unknownObjectWeakTakeInit(a2 + 96, a1 + 96);
  *(_QWORD *)(a2 + 104) = *(_QWORD *)(a1 + 104);
  return a2;
}

uint64_t sub_100078958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_100077A80(a1, v2 + 16, a2);
}

uint64_t type metadata accessor for DismissButtonStyle(uint64_t a1)
{
  uint64_t result;

  result = qword_10014F630;
  if (!qword_10014F630)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DismissButtonStyle);
  return result;
}

uint64_t sub_10007899C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1000789AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  _OWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  _OWORD v119[2];
  uint64_t v120;

  v117 = a1;
  v1 = type metadata accessor for Color.RGBColorSpace(0);
  v112 = *(_QWORD *)(v1 - 8);
  v113 = v1;
  __chkstk_darwin(v1);
  v111 = (char *)&v97 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for ColorScheme(0);
  v106 = *(_QWORD *)(v107 - 8);
  v3 = __chkstk_darwin(v107);
  v105 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v104 = (uint64_t)&v97 - v5;
  v6 = sub_100076100(&qword_10014F688);
  __chkstk_darwin(v6);
  v115 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_100076100(&qword_10014F690);
  __chkstk_darwin(v114);
  v116 = (uint64_t)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for RoundedRectangle(0);
  v9 = __chkstk_darwin(v102);
  v118 = (char *)&v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v101 = (char *)&v97 - v11;
  v12 = type metadata accessor for ButtonStyleConfiguration.Label(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100076100(&qword_10014F698);
  __chkstk_darwin(v16);
  v18 = (char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_100076100(&qword_10014F6A0);
  __chkstk_darwin(v98);
  v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v99 = sub_100076100(&qword_10014F6A8);
  __chkstk_darwin(v99);
  v22 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = (char *)sub_100076100(&qword_10014F6B0);
  __chkstk_darwin(v110);
  v24 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_100076100(&qword_10014F6B8);
  v25 = __chkstk_darwin(v108);
  v109 = (char *)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = ButtonStyleConfiguration.label.getter(v25);
  v28 = static Font.headline.getter(v27);
  KeyPath = swift_getKeyPath(&unk_1000C14E8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
  v30 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  *v30 = KeyPath;
  v30[1] = v28;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v100 = type metadata accessor for DismissButtonStyle(0);
  v31 = v103;
  v32 = *(_QWORD *)(v103 + *(int *)(v100 + 24));
  v33 = swift_getKeyPath(&unk_1000C1518);
  sub_10007A188((uint64_t)v18, (uint64_t)v20, &qword_10014F698);
  v34 = (uint64_t *)&v20[*(int *)(v98 + 36)];
  *v34 = v33;
  v34[1] = v32;
  swift_retain(v32);
  v35 = sub_10007A104((uint64_t)v18, &qword_10014F698);
  LODWORD(v18) = static HierarchicalShapeStyle.quaternary.getter(v35);
  LOBYTE(v32) = ((uint64_t (*)(void))static Edge.Set.all.getter)();
  sub_10007A188((uint64_t)v20, (uint64_t)v22, &qword_10014F6A0);
  v36 = &v22[*(int *)(v99 + 36)];
  *(_DWORD *)v36 = (_DWORD)v18;
  v36[4] = v32;
  v37 = v118;
  sub_10007A104((uint64_t)v20, &qword_10014F6A0);
  v38 = v102;
  v39 = v101;
  v40 = &v101[*(int *)(v102 + 20)];
  v41 = enum case for RoundedCornerStyle.continuous(_:);
  v42 = type metadata accessor for RoundedCornerStyle(0);
  v43 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104);
  v43(v40, v41, v42);
  __asm { FMOV            V0.2D, #8.0 }
  v99 = _Q0;
  *v39 = _Q0;
  v49 = (uint64_t)&v24[*((int *)v110 + 9)];
  sub_10007A084((uint64_t)v39, v49);
  *(_WORD *)(v49 + *(int *)(sub_100076100(&qword_10014F6C0) + 36)) = 256;
  v110 = v24;
  sub_10007A188((uint64_t)v22, (uint64_t)v24, &qword_10014F6A8);
  sub_10007A0C8((uint64_t)v39, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  sub_10007A104((uint64_t)v22, &qword_10014F6A8);
  v43(&v37[*(int *)(v38 + 20)], v41, v42);
  *(_OWORD *)v37 = v99;
  v50 = v104;
  v51 = v31;
  sub_100079208(v104);
  v52 = enum case for ColorScheme.dark(_:);
  v53 = v106;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 104);
  v55 = v105;
  v56 = v107;
  v54(v105, enum case for ColorScheme.dark(_:), v107);
  LODWORD(v102) = static ColorScheme.== infix(_:_:)(v50, v55);
  v57 = *(void (**)(char *, uint64_t))(v53 + 8);
  v58 = v55;
  v57(v55, v56);
  v59 = v50;
  v60 = v50;
  v61 = v56;
  v57((char *)v60, v56);
  v62 = v51 + *(int *)(v100 + 20);
  v63 = *(_QWORD *)v62;
  LOBYTE(v56) = *(_BYTE *)(v62 + 8);
  sub_100079984(*(_QWORD *)v62, v56);
  LOBYTE(v55) = sub_100079448(v63, v56);
  sub_100079A14(v63, v56);
  v64 = 0.0;
  v65 = 0.0;
  if ((v55 & 1) != 0)
  {
    sub_100079208(v59);
    v54(v58, v52, v61);
    v66 = static ColorScheme.== infix(_:_:)(v59, v58);
    v57(v58, v61);
    v57((char *)v59, v61);
    if ((v66 & 1) != 0)
      v65 = 0.7;
    else
      v65 = 0.4;
  }
  if ((v102 & 1) != 0)
    v64 = 1.0;
  v67 = v111;
  (*(void (**)(char *, _QWORD, uint64_t))(v112 + 104))(v111, enum case for Color.RGBColorSpace.sRGB(_:), v113);
  v68 = Color.init(_:white:opacity:)(v67, v64, v65);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v119, 0, 0, _swiftEmptyArrayStorage, 3.0, 10.0, 0.0);
  v69 = (uint64_t)v118;
  v70 = v115;
  sub_10007A084((uint64_t)v118, v115);
  v71 = v70 + *(int *)(sub_100076100(&qword_10014F6C8) + 36);
  v72 = v119[1];
  *(_OWORD *)v71 = v119[0];
  *(_OWORD *)(v71 + 16) = v72;
  *(_QWORD *)(v71 + 32) = v120;
  v73 = sub_100076100(&qword_10014F6D0);
  *(_QWORD *)(v70 + *(int *)(v73 + 52)) = v68;
  *(_WORD *)(v70 + *(int *)(v73 + 56)) = 256;
  v74 = static Alignment.center.getter(v73);
  v76 = v75;
  v77 = (uint64_t *)(v70 + *(int *)(sub_100076100(&qword_10014F6D8) + 36));
  *v77 = v74;
  v77[1] = v76;
  v78 = sub_10007A0C8(v69, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  LOBYTE(v74) = static Edge.Set.all.getter(v78);
  v79 = EdgeInsets.init(_all:)(-1.0);
  v81 = v80;
  v83 = v82;
  v85 = v84;
  v86 = v116;
  sub_10007A188(v70, v116, &qword_10014F688);
  v87 = v86 + *(int *)(v114 + 36);
  *(_BYTE *)v87 = v74;
  *(double *)(v87 + 8) = v79;
  *(_QWORD *)(v87 + 16) = v81;
  *(_QWORD *)(v87 + 24) = v83;
  *(_QWORD *)(v87 + 32) = v85;
  *(_BYTE *)(v87 + 40) = 0;
  v88 = sub_10007A104(v70, &qword_10014F688);
  v89 = static Alignment.center.getter(v88);
  v91 = v90;
  v92 = (uint64_t)v109;
  v93 = (uint64_t)&v109[*(int *)(v108 + 36)];
  sub_10007A188(v86, v93, &qword_10014F690);
  v94 = (uint64_t *)(v93 + *(int *)(sub_100076100(&qword_10014F6E0) + 36));
  *v94 = v89;
  v94[1] = v91;
  v95 = (uint64_t)v110;
  sub_10007A188((uint64_t)v110, v92, &qword_10014F6B0);
  sub_10007A104(v86, &qword_10014F690);
  sub_10007A104(v95, &qword_10014F6B0);
  return sub_10007A140(v92, v117);
}

uint64_t sub_100079208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100076100(&qword_10014F5B0);
  __chkstk_darwin(v8);
  v10 = (_QWORD *)((char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10007A188(v2, (uint64_t)v10, &qword_10014F5B0);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = *v10;
    v14 = static os_log_type_t.fault.getter();
    v15 = static Log.runtimeIssuesLog.getter();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v20[1] = a1;
      v19 = v18;
      v22 = v18;
      *(_DWORD *)v17 = 136315138;
      v21 = sub_100099958(0x686353726F6C6F43, 0xEB00000000656D65, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 4, v17 + 12);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, v13);
    swift_release(v13);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100079448(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_100099958(1819242306, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_100079A14(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_100079600(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for ColorScheme(0);
  __chkstk_darwin();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v4 + 16))(v3, a1);
  return EnvironmentValues.colorScheme.setter(v3);
}

uint64_t sub_10007967C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000796A4(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_1000796CC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[9]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[13]);
  swift_unknownObjectWeakDestroy(v0 + 14);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100079720()
{
  uint64_t v0;

  return sub_100078488(v0 + 16);
}

double sub_100079728@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1000785A8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100079730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F5A8;
  if (!qword_10014F5A8)
  {
    v1 = sub_100079794(&qword_10014F5A0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10014F5A8);
  }
  return result;
}

uint64_t sub_100079794(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1000797D8()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_1000797FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isFocused.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100079828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DismissButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007986C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain(a1);
  else
    return swift_bridgeObjectRetain(a2);
}

uint64_t *sub_10007987C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_100076100(&qword_10014F5B0);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = *(int *)(a3 + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = v16[8];
    sub_100079984(*(_QWORD *)v16, v18);
    *(_QWORD *)v15 = v17;
    v15[8] = v18;
    v19 = *(int *)(a3 + 24);
    v12 = *(uint64_t *)((char *)a2 + v19);
    *(uint64_t *)((char *)a1 + v19) = v12;
  }
  swift_retain(v12);
  return a1;
}

uint64_t sub_100079984(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_100079990(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_100076100(&qword_10014F5B0);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  sub_100079A14(*(_QWORD *)((char *)a1 + *(int *)(a2 + 20)), *((_BYTE *)a1 + *(int *)(a2 + 20) + 8));
  return swift_release(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24)));
}

uint64_t sub_100079A14(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t *sub_100079A20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_100076100(&qword_10014F5B0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_100079984(*(_QWORD *)v14, v16);
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  v17 = *(int *)(a3 + 24);
  v18 = *(uint64_t *)((char *)a2 + v17);
  *(uint64_t *)((char *)a1 + v17) = v18;
  swift_retain(v18);
  return a1;
}

uint64_t *sub_100079B00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_10007A104((uint64_t)a1, &qword_10014F5B0);
    v6 = sub_100076100(&qword_10014F5B0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = *(int *)(a3 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_100079984(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  sub_100079A14(v17, v18);
  v19 = *(int *)(a3 + 24);
  v20 = *(uint64_t *)((char *)a2 + v19);
  v21 = *(uint64_t *)((char *)a1 + v19);
  *(uint64_t *)((char *)a1 + v19) = v20;
  swift_retain(v20);
  swift_release(v21);
  return a1;
}

char *sub_100079C10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = sub_100076100(&qword_10014F5B0);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  return a1;
}

char *sub_100079CD0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_10007A104((uint64_t)a1, &qword_10014F5B0);
    v6 = sub_100076100(&qword_10014F5B0);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = v10[8];
  v12 = *(_QWORD *)v9;
  v13 = v9[8];
  *(_QWORD *)v9 = v11;
  v9[8] = (char)v10;
  sub_100079A14(v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = *(_QWORD *)&a1[v14];
  *(_QWORD *)&a1[v14] = *(_QWORD *)&a2[v14];
  swift_release(v15);
  return a1;
}

uint64_t sub_100079DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100079DCC);
}

uint64_t sub_100079DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_100076100(&qword_10014F5D0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100079E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100079E58);
}

uint64_t sub_100079E58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100076100(&qword_10014F5D0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_100079ED4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_100079F54(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
  }
}

void sub_100079F54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_10014F640)
  {
    v2 = type metadata accessor for ColorScheme(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_10014F640);
  }
}

uint64_t sub_100079FA8()
{
  return sub_10007A4BC(&qword_10014F678, &qword_10014F680, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

uint64_t sub_100079FD4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10011A090, 1);
}

uint64_t sub_100079FE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10007A00C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_10007A034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10007A05C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_10007A084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007A0C8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007A104(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100076100(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10007A140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100076100(&qword_10014F6B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007A188(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100076100(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10007A1D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F6E8;
  if (!qword_10014F6E8)
  {
    v1 = sub_100079794(&qword_10014F6B8);
    sub_10007A254();
    sub_10007A4BC(&qword_10014F750, &qword_10014F6E0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10014F6E8);
  }
  return result;
}

unint64_t sub_10007A254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F6F0;
  if (!qword_10014F6F0)
  {
    v1 = sub_100079794(&qword_10014F6B0);
    sub_10007A2D8();
    sub_10007A4BC(&qword_10014F748, &qword_10014F6C0, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10014F6F0);
  }
  return result;
}

unint64_t sub_10007A2D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F6F8;
  if (!qword_10014F6F8)
  {
    v1 = sub_100079794(&qword_10014F6A8);
    sub_10007A35C();
    sub_10007A4BC(&qword_10014F738, &qword_10014F740, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10014F6F8);
  }
  return result;
}

unint64_t sub_10007A35C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F700;
  if (!qword_10014F700)
  {
    v1 = sub_100079794(&qword_10014F6A0);
    sub_10007A3E0();
    sub_10007A4BC(&qword_10014F728, &qword_10014F730, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10014F700);
  }
  return result;
}

unint64_t sub_10007A3E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014F708;
  if (!qword_10014F708)
  {
    v1 = sub_100079794(&qword_10014F698);
    sub_10007A47C(&qword_10014F710, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    sub_10007A4BC(&qword_10014F718, &qword_10014F720, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10014F708);
  }
  return result;
}

uint64_t sub_10007A47C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007A4BC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100079794(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

id sub_10007A50C()
{
  return sub_10007A6E0(0, type metadata accessor for SRBundleLookupClass);
}

id static SRBundleUtilities.getSiriAppBundle()()
{
  id v0;
  uint64_t ObjectType;
  uint64_t ObjCClassFromMetadata;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SRBundleLookupClass()), "init");
  ObjectType = swift_getObjectType(v0);

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(ObjectType);
  return objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
}

uint64_t type metadata accessor for SRBundleLookupClass()
{
  return objc_opt_self(_TtC4SiriP33_F812DF3859921667B5E7BEFF384E699D19SRBundleLookupClass);
}

id SRBundleUtilities.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

id SRBundleUtilities.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRBundleUtilities();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for SRBundleUtilities()
{
  return objc_opt_self(_TtC4Siri17SRBundleUtilities);
}

id sub_10007A694(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)a4(a3);
  return objc_msgSendSuper2(&v5, "init");
}

id SRBundleUtilities.__deallocating_deinit(uint64_t a1)
{
  return sub_10007A6E0(a1, type metadata accessor for SRBundleUtilities);
}

id sub_10007A6E0(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

char *sub_10007A778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  objc_class *v9;
  _BYTE *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  void *v19;
  objc_super v21;
  objc_super v22;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___SRCarPlayPresentation_delegate], 0, a3);
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___SRCarPlayPresentation_dataSource], 0, v6);
  v7 = &v3[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
  *v7 = 0;
  v7[1] = 0;
  v3[OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet] = 2;
  v3[OBJC_IVAR___SRCarPlayPresentation_shouldResumeMediaOnIdle] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec] = 0;
  v3[OBJC_IVAR___SRCarPlayPresentation_shouldClearFullscreenSnippet] = 0;
  v22.receiver = v3;
  v22.super_class = (Class)type metadata accessor for SRCarPlayPresentation();
  v8 = (char *)objc_msgSendSuper2(&v22, "init");
  swift_unknownObjectWeakAssign(&v8[OBJC_IVAR___SRCarPlayPresentation_delegate], a1);
  swift_unknownObjectWeakAssign(&v8[OBJC_IVAR___SRCarPlayPresentation_dataSource], a2);
  v9 = (objc_class *)type metadata accessor for SRCarPlayViewController();
  v10 = objc_allocWithZone(v9);
  v11 = &v10[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v10[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12, 0, v13);
  v14 = &v10[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
  v14[8] = 1;
  *(_QWORD *)v14 = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands] = 0;
  v10[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking] = 0;
  v21.receiver = v10;
  v21.super_class = v9;
  v15 = v8;
  v16 = (char *)objc_msgSendSuper2(&v21, "initWithNibName:bundle:", 0, 0);
  v17 = &v16[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate];
  *((_QWORD *)v17 + 1) = &off_1001247F0;
  swift_unknownObjectWeakAssign(v17, v15);

  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a2);
  v18 = &v15[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
  v19 = *(void **)&v15[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
  *(_QWORD *)v18 = v16;
  *((_QWORD *)v18 + 1) = &off_100124A68;

  return v15;
}

id sub_10007AA88()
{
  void *v0;
  objc_super v2;

  objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:", v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayPresentation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void *sub_10007AB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  void *result;
  void *v7;

  v1 = v0;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000760E8(v2, (uint64_t)qword_100150068);
  v4 = static os_log_type_t.info.getter(v3);
  sub_10009973C(v4, 2uLL, 0x6D7369646F747561, 0xED00002928737369, 0x697373696D736944, 0xEA0000000000676ELL);
  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___SRCarPlayPresentation_delegate, v5);
  if (result)
  {
    v7 = result;
    objc_msgSend(result, "dismissSiriPresentation:withReason:", v1, 4);
    return (void *)swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t type metadata accessor for SRCarPlayPresentation()
{
  return objc_opt_self(SRCarPlayPresentation);
}

_QWORD *sub_10007ACE0(void *a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *result;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  void *v25;
  _QWORD *v26;

  v22 = a1;
  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100076100(&qword_10014F888);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = 0;
  v26 = _swiftEmptyArrayStorage;
  v24 = 0;
  if (a2)
  {
    v10 = objc_msgSend(a2, "insertedItemIndexPaths");
    if (v10)
    {
      v11 = v10;
      v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v3);

      v13 = *(_QWORD *)(v12 + 16);
      v21 = v12;
      if (v13)
      {
        v14 = v12 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        v15 = *(_QWORD *)(v4 + 72);
        v16 = v12;
        v17 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
        swift_bridgeObjectRetain(v16);
        while (1)
        {
          v17(v9, v14, v3);
          v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
          v18(v9, 0, 1, v3);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
            break;
          (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
          sub_10007AEF4((uint64_t)v6, v22, (unint64_t *)&v26, &v25, v23, &v24);
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          v14 += v15;
          if (!--v13)
            goto LABEL_9;
        }
      }
      else
      {
        v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
        swift_bridgeObjectRetain(v12);
LABEL_9:
        v18(v9, 1, 1, v3);
      }
      swift_bridgeObjectRelease_n(v21, 2);
    }
    return v26;
  }
  else
  {
    __break(1u);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    result = (_QWORD *)swift_bridgeObjectRelease(v21);
    __break(1u);
  }
  return result;
}

void sub_10007AEF4(uint64_t a1, void *a2, unint64_t *a3, void **a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Class isa;
  id v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  unint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  void **v45;
  uint64_t v46;
  unint64_t v47;
  id v48;

  v43 = a6;
  v44 = a5;
  v45 = a4;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100076100(&qword_10014F890);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    __break(1u);
LABEL_16:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
    goto LABEL_17;
  }
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(a2, "itemAtIndexPath:", isa);

  if (!v17)
    return;
  v42 = v6;
  v46 = 0;
  v47 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  v18._countAndFlagsBits = 0xD00000000000001ELL;
  v18._object = (void *)0x80000001000DF8F0;
  String.append(_:)(v18);
  v48 = v17;
  v19 = sub_100076100(&qword_10014F898);
  _print_unlocked<A, B>(_:_:)(&v48, &v46, v19, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v20 = v46;
  v21 = v47;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_1000760E8(v22, (uint64_t)qword_100150068);
  v24 = static os_log_type_t.info.getter(v23);
  v41 = (unint64_t)"overlapping range";
  sub_10009973C(v24, 0x10uLL, 0xD000000000000023, 0x80000001000DF8C0, v20, v21);
  swift_bridgeObjectRelease(v21);
  v25 = objc_msgSend(v17, "identifier");
  if (!v25)
    goto LABEL_16;
  v26 = v25;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v27 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v27(v15, v12, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v28 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
  *a3 = v28;
  v40 = v23;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v28 = sub_100086A78(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
    *a3 = v28;
  }
  v31 = *(_QWORD *)(v28 + 16);
  v30 = *(_QWORD *)(v28 + 24);
  if (v31 >= v30 >> 1)
  {
    v28 = sub_100086A78(v30 > 1, v31 + 1, 1, v28);
    *a3 = v28;
  }
  *(_QWORD *)(v28 + 16) = v31 + 1;
  v27((char *)(v28+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v31), v15, v9);
  v32 = objc_msgSend(v17, "aceObject", v40);
  v33 = sub_10007B2F4(v32);
  v34 = *v45;
  *v45 = v33;

  v46 = (uint64_t)v32;
  v35 = v32;
  v36 = sub_100076100(&qword_10014F8A0);
  v37 = sub_100076100(&qword_10014F8A8);
  if (swift_dynamicCast(&v48, &v46, v36, v37, 6))
  {

    v39 = static os_log_type_t.info.getter(v38);
    sub_10009973C(v39, 0x10uLL, 0xD000000000000023, v41 | 0x8000000000000000, 0xD000000000000044, 0x80000001000DF910);
    swift_unknownObjectRelease(v17);

    *v43 = 1;
  }
  else
  {

    swift_unknownObjectRelease(v17);
  }
}

void *sub_10007B2F4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  Swift::String v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  Swift::String v38;
  id v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  id v61;
  char v62;
  void *Strong;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  void *v68;
  void *v69;
  Swift::String v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  id v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  os_log_type_t v83;
  uint64_t v84;
  const char *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t v92;
  uint64_t v93;
  uint64_t v94;
  os_log_type_t v95;
  Swift::String v96;
  id v97;
  uint64_t v98;
  Swift::String v99;
  void *object;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_type_t v105;
  id v107;
  void *v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  os_log_type_t v117;
  void *v118;
  uint64_t v119;
  unint64_t v120;
  ValueMetadata *v121;
  unint64_t v122;

  if (!a1)
    goto LABEL_46;
  v3 = v1;
  v4 = objc_opt_self(SAAceView);
  v5 = swift_dynamicCastObjCClass(a1, v4);
  if (!v5)
    goto LABEL_13;
  v6 = (void *)v5;
  v7 = a1;
  v8 = objc_msgSend(v6, "itemType");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(SAAceViewUIItemTypeItemTypeHintValue);
    v15 = v14;
    if (v12)
    {
      if (v10 == v13 && v12 == v14)
      {
        swift_bridgeObjectRelease_n(v12, 2);
      }
      else
      {
        v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12);
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v15);
        if ((v17 & 1) == 0)
        {

          goto LABEL_13;
        }
      }
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v52 = type metadata accessor for Logger(0);
      v53 = sub_1000760E8(v52, (uint64_t)qword_100150068);
      v54 = static os_log_type_t.info.getter(v53);
      sub_10009973C(v54, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, 0xD00000000000003ALL, 0x80000001000DFD40);

      return 0;
    }
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(SAAceViewUIItemTypeItemTypeHintValue);
    v15 = v18;
  }

  swift_bridgeObjectRelease(v15);
LABEL_13:
  v19 = objc_opt_self(SAUIVisualResponseSnippet);
  v20 = swift_dynamicCastObjCClass(a1, v19);
  if (v20)
  {
    v21 = (void *)v20;
    v22 = a1;
    _StringGuts.grow(_:)(62);
    v23._countAndFlagsBits = 0xD00000000000003CLL;
    v23._object = (void *)0x80000001000DFD00;
    String.append(_:)(v23);
    v24 = objc_msgSend(v21, "description");
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    v27 = v26;

    v28._countAndFlagsBits = v25;
    v28._object = v27;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v27);
    v29 = 0xE000000000000000;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_1000760E8(v30, (uint64_t)qword_100150068);
    v32 = static os_log_type_t.info.getter(v31);
    v33 = 0;
    v34 = 0xE000000000000000;
LABEL_17:
    sub_10009973C(v32, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, v33, v34);
    swift_bridgeObjectRelease(v29);
    return v21;
  }
  v35 = objc_opt_self(SAUIPluginSnippet);
  v36 = swift_dynamicCastObjCClass(a1, v35);
  if (!v36)
  {
    v55 = objc_opt_self(SAUIDisambiguationList);
    if (swift_dynamicCastObjCClass(a1, v55))
    {
      v56 = qword_10014ECE0;
      v57 = a1;
      if (v56 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v58 = type metadata accessor for Logger(0);
      v59 = sub_1000760E8(v58, (uint64_t)qword_100150068);
      v60 = static os_log_type_t.info.getter(v59);
      sub_10009973C(v60, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, 0xD000000000000061, 0x80000001000DFBE0);
      sub_100087678();
      goto LABEL_33;
    }
    v72 = objc_opt_self(SAUIConfirmationView);
    v73 = swift_dynamicCastObjCClass(a1, v72);
    if (v73)
    {
      v74 = (void *)v73;
      v57 = a1;
      v75 = objc_msgSend(v74, "title");
      if (v75)
      {
        v76 = v75;
        v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
        v79 = v78;

        swift_bridgeObjectRelease(v79);
        v80 = HIBYTE(v79) & 0xF;
        if ((v79 & 0x2000000000000000) == 0)
          v80 = v77 & 0xFFFFFFFFFFFFLL;
        if (v80)
        {
          if (qword_10014ECE0 != -1)
            swift_once(&qword_10014ECE0, sub_100098388);
          v81 = type metadata accessor for Logger(0);
          v82 = sub_1000760E8(v81, (uint64_t)qword_100150068);
          v83 = static os_log_type_t.info.getter(v82);
          v84 = 0xD000000000000072;
          v85 = "SRCarPlayPresentation received SAUIConfirmationView with non-nil title, converting to VisualResponseView in RF 1.0";
LABEL_68:
          sub_10009973C(v83, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, v84, (unint64_t)(v85 - 32) | 0x8000000000000000);
          v61 = sub_100089F74();
LABEL_33:
          v21 = v61;

          return v21;
        }
      }
      v107 = objc_msgSend(v74, "subtitle");
      if (v107)
      {
        v108 = v107;
        v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(v107);
        v111 = v110;

        swift_bridgeObjectRelease(v111);
        v112 = HIBYTE(v111) & 0xF;
        if ((v111 & 0x2000000000000000) == 0)
          v112 = v109 & 0xFFFFFFFFFFFFLL;
        if (v112)
        {
          if (qword_10014ECE0 != -1)
            swift_once(&qword_10014ECE0, sub_100098388);
          v113 = type metadata accessor for Logger(0);
          v114 = sub_1000760E8(v113, (uint64_t)qword_100150068);
          v83 = static os_log_type_t.info.getter(v114);
          v84 = 0xD000000000000075;
          v85 = "SRCarPlayPresentation received SAUIConfirmationView with non-nil subtitle, converting to VisualResponseView in RF 1.0";
          goto LABEL_68;
        }
      }
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v115 = type metadata accessor for Logger(0);
      v116 = sub_1000760E8(v115, (uint64_t)qword_100150068);
      v117 = static os_log_type_t.info.getter(v116);
      sub_10009973C(v117, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, 0xD00000000000004CLL, 0x80000001000DFA90);

      return 0;
    }
LABEL_46:
    v121 = &type metadata for SiriUIFeaturesFlags;
    v122 = sub_10007F448();
    v86 = isFeatureEnabled(_:)(&v119);
    sub_10007F48C(&v119);
    if (a1)
    {
      if ((v86 & 1) != 0)
      {
        v87 = objc_opt_self(SACardSnippet);
        v88 = swift_dynamicCastObjCClass(a1, v87);
        if (v88)
        {
          v21 = (void *)v88;
          v89 = a1;
          if ((sub_100077270() & 1) != 0)
          {
            if (qword_10014ECE0 != -1)
              swift_once(&qword_10014ECE0, sub_100098388);
            v90 = type metadata accessor for Logger(0);
            v91 = sub_1000760E8(v90, (uint64_t)qword_100150068);
            v92 = static os_log_type_t.info.getter(v91);
            sub_10009973C(v92, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, 0xD000000000000041, 0x80000001000DFA40);
            return v21;
          }
          if (qword_10014ECE0 != -1)
            swift_once(&qword_10014ECE0, sub_100098388);
          v93 = type metadata accessor for Logger(0);
          v94 = sub_1000760E8(v93, (uint64_t)qword_100150068);
          v95 = static os_log_type_t.info.getter(v94);
          sub_10009973C(v95, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, 0xD000000000000066, 0x80000001000DF9D0);

        }
      }
    }
    v119 = 0;
    v120 = 0xE000000000000000;
    _StringGuts.grow(_:)(64);
    v96._countAndFlagsBits = 0xD00000000000003ELL;
    v96._object = (void *)0x80000001000DF990;
    String.append(_:)(v96);
    v118 = a1;
    v97 = a1;
    v98 = sub_100076100(&qword_10014F8A0);
    v99._countAndFlagsBits = String.init<A>(describing:)(&v118, v98);
    object = v99._object;
    String.append(_:)(v99);
    swift_bridgeObjectRelease(object);
    v102 = v119;
    v101 = v120;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v103 = type metadata accessor for Logger(0);
    v104 = sub_1000760E8(v103, (uint64_t)qword_100150068);
    v105 = static os_log_type_t.info.getter(v104);
    sub_10009973C(v105, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, v102, v101);
    swift_bridgeObjectRelease(v101);
    return 0;
  }
  v21 = (void *)v36;
  v37 = a1;
  _StringGuts.grow(_:)(62);
  v38._countAndFlagsBits = 0xD00000000000003CLL;
  v38._object = (void *)0x80000001000DFC50;
  String.append(_:)(v38);
  v39 = objc_msgSend(v21, "description");
  v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v42 = v41;

  v43._countAndFlagsBits = v40;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v42);
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v44 = type metadata accessor for Logger(0);
  v45 = sub_1000760E8(v44, (uint64_t)qword_100150068);
  v46 = static os_log_type_t.info.getter(v45);
  sub_10009973C(v46, 0x10uLL, 0xD000000000000021, 0x80000001000DF960, 0, 0xE000000000000000);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (objc_msgSend((id)objc_opt_self(AFFeatureFlags), "isSiriLocationServicesPromptingEnabled"))
  {
    v47 = objc_msgSend(v21, "responseViewId");
    v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v50 = v49;

    if (v48 == 0xD000000000000033 && v50 == 0x80000001000DFC90)
    {
      swift_bridgeObjectRelease(0x80000001000DFC90);
    }
    else
    {
      v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v50);
      swift_bridgeObjectRelease(v50);
      if ((v62 & 1) == 0)
        return v21;
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR___SRCarPlayPresentation_delegate, v51);
    if (Strong)
    {
      v64 = Strong;
      objc_msgSend(Strong, "siriPresentation:setStatusViewHidden:", v3, 1);
      swift_unknownObjectRelease(v64);
    }
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease(0xE000000000000000);
    v65 = v37;
    v66 = objc_msgSend(v21, "description");
    v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v69 = v68;

    v70._countAndFlagsBits = v67;
    v70._object = v69;
    String.append(_:)(v70);
    v71 = swift_bridgeObjectRelease(v69);
    v29 = 0x80000001000DFCD0;
    v32 = static os_log_type_t.info.getter(v71);
    v33 = 0xD000000000000025;
    v34 = 0x80000001000DFCD0;
    goto LABEL_17;
  }
  return v21;
}

id sub_10007BD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  id result;
  uint64_t v6;
  id v7;

  v1 = v0;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000760E8(v2, (uint64_t)qword_100150068);
  v4 = static os_log_type_t.info.getter(v3);
  sub_10009973C(v4, 0x10uLL, 0x696E537261656C63, 0xEE00292874657070, 0xD000000000000034, 0x80000001000DF820);
  result = *(id *)(v0 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (result)
  {
    objc_msgSend(result, "clearSnippet");
    result = objc_msgSend((id)objc_opt_self(AFFeatureFlags), "isSiriLocationServicesPromptingEnabled");
    if ((_DWORD)result)
    {
      result = (id)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___SRCarPlayPresentation_delegate, v6);
      if (result)
      {
        v7 = result;
        objc_msgSend(result, "siriPresentation:setStatusViewHidden:", v1, 0);
        return (id)swift_unknownObjectRelease(v7);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10007BEB0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  _QWORD *v6;
  _QWORD *v7;
  void (*v8)(id);
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  NSString v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  Class isa;
  id v31;

  v3 = v2;
  v6 = sub_10007ACE0(a1, a2);
  v31 = v4;
  if (v4)
  {
    v7 = *(_QWORD **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
    if (!v7)
    {
      __break(1u);
      return;
    }
    v8 = *(void (**)(id))((swift_isaMask & *v7) + 0x120);
    v9 = v4;
    v10 = v7;
    v8(v9);

    sub_10007F074(v9);
    if (!v11)
    {

      goto LABEL_20;
    }
    v12 = v11;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR___SRCarPlayPresentation_delegate, v11);
    if (!Strong)
    {

      swift_bridgeObjectRelease(v12);
      goto LABEL_20;
    }
    v14 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", "siriPresentation:didPresentIntentWithBundleId:") & 1) != 0)
    {
      v15 = String._bridgeToObjectiveC()();
      objc_msgSend(v14, "siriPresentation:didPresentIntentWithBundleId:", v3, v15);
      swift_bridgeObjectRelease(v12);

      swift_unknownObjectRelease(v14);
      goto LABEL_20;
    }

    swift_bridgeObjectRelease(v12);
    v22 = v14;
LABEL_19:
    swift_unknownObjectRelease(v22);
    goto LABEL_20;
  }
  if ((v5 & 1) == 0)
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_1000760E8(v23, (uint64_t)qword_100150068);
    v25 = static os_log_type_t.info.getter(v24);
    sub_10009973C(v25, 0x10uLL, 0xD00000000000001ELL, 0x80000001000DF7B0, 0xD000000000000045, 0x80000001000DF7D0);
    goto LABEL_20;
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_1000760E8(v17, (uint64_t)qword_100150068);
  v19 = static os_log_type_t.info.getter(v18);
  sub_10009973C(v19, 0x10uLL, 0xD00000000000001ELL, 0x80000001000DF7B0, 0xD000000000000034, 0x80000001000DF820);
  sub_10007BD98();
  if (objc_msgSend((id)objc_opt_self(AFFeatureFlags), "isSiriLocationServicesPromptingEnabled"))
  {
    v20 = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, v16);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "siriPresentation:setStatusViewHidden:", v3, 0);
      v22 = v21;
      goto LABEL_19;
    }
  }
LABEL_20:
  v26 = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR___SRCarPlayPresentation_delegate, v16);
  if (v26)
  {
    v27 = (void *)v26;
    v28 = swift_bridgeObjectRetain(v6);
    v29 = sub_10007C320(v28);
    swift_bridgeObjectRelease(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v29);
    objc_msgSend(v27, "siriPresentation:didPresentConversationItemsWithIdentifiers:", v3, isa);

    swift_unknownObjectRelease(v27);
  }
  swift_bridgeObjectRelease(v6);

}

_QWORD *sub_10007C1B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  char *v13;
  _QWORD *v14;
  __int128 v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;

  v2 = type metadata accessor for SimpleItemStandard(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_10007E838(0, v6, 0);
    v7 = v19;
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      v19 = v7;
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
        sub_10007E838(v11 > 1, v12 + 1, 1);
      v17 = v2;
      v18 = &protocol witness table for SimpleItemStandard;
      v13 = (char *)sub_10007F4AC(&v16);
      v10(v13, (uint64_t)v5, v2);
      v14 = v19;
      v19[2] = v12 + 1;
      sub_10007F4E8(&v16, (uint64_t)&v14[5 * v12 + 4]);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v7 = v19;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

_QWORD *sub_10007C320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _OWORD v15[2];
  _QWORD *v16;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_10007E870(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast(v15, v5, v2, (char *)&type metadata for Any + 8, 7);
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_10007E870(0, v7[2] + 1, 1);
        v7 = v16;
      }
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_10007E870(v11 > 1, v12 + 1, 1);
        v7 = v16;
      }
      v7[2] = v12 + 1;
      sub_10007F434(v15, &v7[4 * v12 + 4]);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_10007C508(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, unint64_t, uint64_t, uint64_t);
  id v13;

  v2 = *(void **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  v3 = (void *)result;
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v2;
  result = (uint64_t)objc_msgSend(v3, "stateData");
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v5 = (void *)result;
  v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  v8 = v7;

  v9 = *(void **)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  if (v9)
  {
    v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController]);
    v12 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 80);
    v13 = v9;
    v12(v6, v8, ObjectType, v10);

  }
  sub_10007F3F0(v6, v8);

  return 1;
}

void sub_10007C650()
{
  uint64_t v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, uint64_t);
  char *v6;
  id v7;

  v1 = *(char **)(v0 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v1)
  {
    v2 = *(void **)&v1[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    if (v2)
    {
      v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController]);
      v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v6 = v1;
      v7 = v2;
      v5(ObjectType, v3);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10007C72C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  os_log_type_t v11;

  v3 = v2;
  *(_BYTE *)(v3 + OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet) = a1;
  v6 = (void *)objc_opt_self(SRCarPlayUIUtilities);
  if (objc_msgSend(v6, "isJarvis")
    && objc_msgSend(v6, "flexibleFollowupEnabled")
    && (a2 & 1) != 0)
  {
    if ((a1 & 1) != 0)
    {
      sub_10007DE30();
    }
    else
    {
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v7 = type metadata accessor for Logger(0);
      v8 = sub_1000760E8(v7, (uint64_t)qword_100150068);
      v9 = static os_log_type_t.info.getter(v8);
      sub_10009973C(v9, 2uLL, 0xD00000000000003BLL, 0x80000001000DF5D0, 0xD00000000000004CLL, 0x80000001000DF610);
      v11 = static os_log_type_t.info.getter(v10);
      sub_10009973C(v11, 0x20002uLL, 0xD000000000000027, 0x80000001000DF080, 0xD000000000000031, 0x80000001000DF0B0);
      objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v3, "handleRequestToCeaseAttending", 0);
    }
  }
  else
  {
    sub_10007C89C(a1 & 1);
  }
}

void sub_10007C89C(char a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;
  id v13;
  uint64_t v14;
  os_log_type_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  unint64_t v28;

  v2 = v1;
  if ((a1 & 1) != 0)
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_1000760E8(v3, (uint64_t)qword_100150068);
    v5 = static os_log_type_t.info.getter(v4);
    sub_10009973C(v5, 2uLL, 0xD000000000000032, 0x80000001000DF660, 0xD000000000000034, 0x80000001000DF6F0);
    v6 = OBJC_IVAR___SRCarPlayPresentation_carPlayViewController;
    v7 = *(_QWORD **)&v1[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
    if (v7)
    {
      v8 = *(void **)((char *)v7 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
      if (!v8)
        goto LABEL_7;
      v9 = *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)((char *)v7
                                                 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController));
      v11 = *(void (**)(uint64_t, uint64_t))(v9 + 64);
      v12 = v7;
      v13 = v8;
      v11(ObjectType, v9);

      v7 = *(_QWORD **)&v2[v6];
      if (v7)
      {
LABEL_7:
        v14 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0x128))();
        if ((v14 & 1) != 0)
        {
          v15 = static os_log_type_t.info.getter(v14);
          sub_10009973C(v15, 2uLL, 0xD000000000000032, 0x80000001000DF660, 0xD000000000000024, 0x80000001000DF780);
          objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v2, "autodismiss", 0);
          objc_msgSend(v2, "performSelector:withObject:afterDelay:", "autodismiss", 0, 0.0);
        }
        else
        {
          v27 = 0;
          v28 = 0xE000000000000000;
          _StringGuts.grow(_:)(75);
          v21._countAndFlagsBits = 0xD000000000000040;
          v21._object = (void *)0x80000001000DF730;
          String.append(_:)(v21);
          Double.write<A>(to:)(&v27, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, 6.0);
          v22._countAndFlagsBits = 0x73646E6F63657320;
          v22._object = (void *)0xE90000000000002ELL;
          String.append(_:)(v22);
          v23 = v27;
          v24 = v28;
          v26 = static os_log_type_t.info.getter(v25);
          sub_10009973C(v26, 2uLL, 0xD000000000000032, 0x80000001000DF660, v23, v24);
          swift_bridgeObjectRelease(v24);
          objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v2, "autodismiss", 0);
          objc_msgSend(v2, "performSelector:withObject:afterDelay:", "autodismiss", 0, 6.0);
        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_1000760E8(v17, (uint64_t)qword_100150068);
  v19 = static os_log_type_t.info.getter(v18);
  sub_10009973C(v19, 2uLL, 0xD000000000000032, 0x80000001000DF660, 0xD000000000000047, 0x80000001000DF6A0);
  v20 = (void *)objc_opt_self(NSObject);
  objc_msgSend(v20, "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "autodismiss", v16);
}

id sub_10007CC9C(id result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  double v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  unsigned int v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  unint64_t v25;
  unint64_t v26;

  if ((a2 & 1) != 0)
  {
    v3 = v2;
    v4 = result;
    v5 = objc_msgSend(result, "minimumAutoDismissalTimeInMs");
    if (v5)
    {
      v6 = v5;
      v7 = (double)(uint64_t)objc_msgSend(v5, "integerValue") / 1000.0;
      v25 = 0;
      v26 = 0xE000000000000000;
      _StringGuts.grow(_:)(51);
      v8._countAndFlagsBits = 0xD000000000000029;
      v8._object = (void *)0x80000001000DF5A0;
      String.append(_:)(v8);
      Double.write<A>(to:)(&v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v7);
      v9._countAndFlagsBits = 0x73646E6F63657320;
      v9._object = (void *)0xE800000000000000;
      String.append(_:)(v9);
      v10 = v25;
      v11 = v26;
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v12 = type metadata accessor for Logger(0);
      v13 = sub_1000760E8(v12, (uint64_t)qword_100150068);
      v14 = static os_log_type_t.info.getter(v13);
      sub_10009973C(v14, 2uLL, 0xD000000000000016, 0x80000001000DF580, v10, v11);
      swift_bridgeObjectRelease(v11);

      *(double *)(v3 + OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec) = v7;
    }
    v25 = 0;
    v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease(v26);
    v25 = 0xD000000000000019;
    v26 = 0x80000001000DF560;
    v15 = objc_msgSend(v4, "premptivelyResumeMedia");
    v16 = v15 == 0;
    if (v15)
      v17 = 1702195828;
    else
      v17 = 0x65736C6166;
    if (v16)
      v18 = 0xE500000000000000;
    else
      v18 = 0xE400000000000000;
    v19 = v18;
    String.append(_:)(*(Swift::String *)&v17);
    swift_bridgeObjectRelease(v18);
    v20 = v25;
    v21 = v26;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_1000760E8(v22, (uint64_t)qword_100150068);
    v24 = static os_log_type_t.info.getter(v23);
    sub_10009973C(v24, 2uLL, 0xD000000000000016, 0x80000001000DF580, v20, v21);
    swift_bridgeObjectRelease(v21);
    result = objc_msgSend(v4, "premptivelyResumeMedia");
    *(_BYTE *)(v3 + OBJC_IVAR___SRCarPlayPresentation_shouldResumeMediaOnIdle) = (_BYTE)result;
  }
  return result;
}

void sub_10007CFB8(void (*a1)(void))
{
  uint64_t v1;
  char *v2;
  void *v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t);
  char *v8;
  id v9;

  v2 = *(char **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v2)
  {
    v4 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    if (v4)
    {
      v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController]);
      v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
      v8 = v2;
      v9 = v4;
      v7(ObjectType, v5);

    }
    if (a1)
    {
      a1();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10007D0FC(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  BOOL v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  char *v9;

  v2 = *(char **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v2)
  {
    if (*(_QWORD *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController])
      v3 = a1 == 13;
    else
      v3 = 1;
    if (!v3)
    {
      v4 = qword_10014ECE0;
      v5 = v2;
      v9 = v5;
      if (v4 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v6 = type metadata accessor for Logger(0);
      v7 = sub_1000760E8(v6, (uint64_t)qword_100150068);
      v8 = static os_log_type_t.info.getter(v7);
      sub_10009973C(v8, 0x10uLL, 0xD000000000000030, 0x80000001000DF4E0, 0xD00000000000003ALL, 0x80000001000DF520);
      sub_10008D5B8(0, 0, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10007D240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  void *v4;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v10;
  id v11;

  v3 = *(_BYTE **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v3)
  {
    v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking] = 1;
    v4 = *(void **)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    if (v4)
    {
      v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController]);
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48);
      v10 = v3;
      v11 = v4;
      v9(a1, a2, ObjectType, v7);

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10007D3BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  if (a1)
  {
    v2 = v1;
    objc_msgSend((id)objc_opt_self(SRTipKitSignalEmitter), "checkAndEmitSignalsForRequestOptions:", a1);
    if (objc_msgSend(a1, "requestSource") == (id)14 || objc_msgSend(a1, "requestSource") == (id)13)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, v4);
      if (Strong)
      {
        v6 = Strong;
        if ((objc_msgSend(Strong, "respondsToSelector:", "siriPresentation:didPresentIntentWithBundleId:") & 1) != 0)
        {
          v7 = objc_msgSend(a1, "appBundleIdentifier");
          v8 = v7;
          if (v7)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
            v10 = v9;

            v8 = String._bridgeToObjectiveC()();
          }
          else
          {
            v10 = 0;
          }
          objc_msgSend(v6, "siriPresentation:didPresentIntentWithBundleId:", v2, v8);
          swift_bridgeObjectRelease(v10);
          swift_unknownObjectRelease(v6);

        }
        else
        {
          swift_unknownObjectRelease(v6);
        }
      }
    }
    v11 = *(void **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
    if (v11)
    {
      v12 = v11;
      sub_10008C7E4(a1);

      *(_BYTE *)(v2 + OBJC_IVAR___SRCarPlayPresentation_shouldResumeMediaOnIdle) = 0;
      *(_QWORD *)(v2 + OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec) = 0;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10007D590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  void *v5;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v10;
  id v11;

  v3 = *(char **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (!a2)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v5 = *(void **)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  if (v5)
  {
    v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController]);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v10 = v3;
    v11 = v5;
    v9(a1, a2, ObjectType, v7);

  }
}

uint64_t sub_10007D674(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  if (a3)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease(v8);
}

id sub_10007D7C8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  void *v6;
  id result;
  unint64_t v8;
  unint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  unint64_t v23;
  Swift::String v24;
  uint64_t v25;
  void *Strong;
  void *v27;
  id v28;
  uint64_t v29;
  Swift::String v30;
  void *object;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  os_log_type_t v37;
  void *v38;
  os_log_type_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v3 = v2;
  v6 = (void *)objc_opt_self(SRCarPlayUIUtilities);
  result = objc_msgSend(v6, "isJarvis");
  if ((_DWORD)result)
  {
    result = objc_msgSend(v6, "flexibleFollowupEnabled");
    if ((_DWORD)result)
    {
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease(0xE000000000000000);
      v42 = 0x20746E657665;
      v43 = 0xE600000000000000;
      v8 = 0xD000000000000012;
      v9 = 0x80000001000DF4C0;
      switch(a2)
      {
        case 0:
          break;
        case 1:
          v8 = 0xD000000000000014;
          v10 = "SpeechRecordingBegan";
          goto LABEL_24;
        case 2:
          v8 = 0xD000000000000014;
          v10 = "SpeechRecordingEnded";
          goto LABEL_24;
        case 3:
          v8 = 0xD000000000000018;
          v10 = "SpeechRecordingCancelled";
          goto LABEL_24;
        case 4:
          v8 = 0xD000000000000015;
          v10 = "SpeechRecordingFailed";
          goto LABEL_24;
        case 5:
          v8 = 0xD000000000000010;
          v10 = "RequestCancelled";
          goto LABEL_24;
        case 6:
          v9 = 0xEF64656873696E69;
          goto LABEL_14;
        case 7:
          v9 = 0xED000064656C6961;
LABEL_14:
          v8 = 0x4674736575716552;
          break;
        case 8:
          v9 = 0xEE00646574726174;
          v8 = 0x53646E616D6D6F43;
          break;
        case 9:
          v14 = 0x6E6167654267;
          goto LABEL_18;
        case 10:
          v14 = 0x6465646E4567;
LABEL_18:
          v9 = v14 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          v8 = 0x6E69646E65747441;
          break;
        case 11:
          v9 = 0xEE00646574636574;
          v8 = 0x6544686365657053;
          break;
        case 12:
          v8 = 0xD00000000000001ALL;
          v10 = "SiriDirectedSpeechDetected";
          goto LABEL_24;
        case 13:
          v9 = 0xEF64657461676974;
          v8 = 0x694D686365657053;
          break;
        case 14:
          v8 = 0xD000000000000011;
          v10 = "ZeroLatencyLaunch";
          goto LABEL_24;
        case 15:
          v8 = 0xD00000000000001ALL;
          v10 = "SpeechEndDelayTimeoutFired";
LABEL_24:
          v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
          break;
        default:
          if (qword_10014ECE0 != -1)
            swift_once(&qword_10014ECE0, sub_100098388);
          v11 = type metadata accessor for Logger(0);
          v12 = sub_1000760E8(v11, (uint64_t)qword_100150068);
          v13 = static os_log_type_t.info.getter(v12);
          sub_10009973C(v13, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000DF320);
          v9 = 0x80000001000DF340;
          v8 = 0xD00000000000001ELL;
          break;
      }
      v15 = v9;
      String.append(_:)(*(Swift::String *)&v8);
      swift_bridgeObjectRelease(v9);
      v16 = 0xE800000000000000;
      v17._countAndFlagsBits = 0x206574617473203BLL;
      v17._object = (void *)0xE800000000000000;
      String.append(_:)(v17);
      v18 = 0x676E696B6E696854;
      switch(a1)
      {
        case 0:
          v16 = 0xE400000000000000;
          v18 = 1701602377;
          break;
        case 1:
          v22 = 0x6E657473694CLL;
          goto LABEL_33;
        case 2:
          break;
        case 3:
          v16 = 0xE700000000000000;
          v18 = 0x73736563637553;
          break;
        case 4:
          v22 = 0x646E65747441;
LABEL_33:
          v18 = v22 & 0xFFFFFFFFFFFFLL | 0x6E69000000000000;
          v16 = 0xE900000000000067;
          break;
        case 5:
          v18 = 0xD000000000000010;
          v16 = 0x80000001000DF2A0;
          break;
        default:
          if (qword_10014ECE0 != -1)
            swift_once(&qword_10014ECE0, sub_100098388);
          v19 = type metadata accessor for Logger(0);
          v20 = sub_1000760E8(v19, (uint64_t)qword_100150068);
          v21 = static os_log_type_t.info.getter(v20);
          sub_10009973C(v21, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000DF230);
          v16 = 0x80000001000DF250;
          v18 = 0xD00000000000001ELL;
          break;
      }
      v23 = v16;
      String.append(_:)(*(Swift::String *)&v18);
      swift_bridgeObjectRelease(v16);
      v24._countAndFlagsBits = 540945696;
      v24._object = (void *)0xE400000000000000;
      String.append(_:)(v24);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR___SRCarPlayPresentation_dataSource], v25);
      v27 = Strong;
      if (Strong)
      {
        v28 = objc_msgSend(Strong, "siriStateForSiriPresentation:", v3);
        swift_unknownObjectRelease(v27);
      }
      else
      {
        v28 = 0;
      }
      v40 = v28;
      LOBYTE(v41) = v27 == 0;
      v29 = sub_100076100(&qword_10014F870);
      v30._countAndFlagsBits = String.init<A>(describing:)(&v40, v29);
      object = v30._object;
      String.append(_:)(v30);
      swift_bridgeObjectRelease(object);
      v33 = v42;
      v32 = v43;
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v34 = type metadata accessor for Logger(0);
      v35 = sub_1000760E8(v34, (uint64_t)qword_100150068);
      v36 = static os_log_type_t.info.getter(v35);
      sub_10009973C(v36, 0x20000uLL, 0xD00000000000001ELL, 0x80000001000DF360, v33, v32);
      result = (id)swift_bridgeObjectRelease(v32);
      if (a2 == 13)
      {
        v39 = static os_log_type_t.info.getter(result);
        sub_10009973C(v39, 0x20000uLL, 0xD00000000000001ELL, 0x80000001000DF360, 0xD000000000000031, 0x80000001000DF380);
        return objc_msgSend(v3, "handleRequestToCeaseAttending", v40, v41);
      }
      else if (a2 == 12 || a2 == 11)
      {
        v37 = static os_log_type_t.info.getter(result);
        sub_10009973C(v37, 0x20002uLL, 0xD000000000000027, 0x80000001000DF080, 0xD000000000000031, 0x80000001000DF0B0);
        v38 = (void *)objc_opt_self(NSObject);
        return objc_msgSend(v38, "cancelPreviousPerformRequestsWithTarget:selector:object:", v3, "handleRequestToCeaseAttending", 0, v40, v41);
      }
    }
  }
  return result;
}

void sub_10007DE30()
{
  char *v0;
  void *v1;
  double v2;
  _QWORD *v3;
  char v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = v0;
  v2 = *(double *)&v0[OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec];
  if (v2 <= 0.0)
  {
    v3 = *(_QWORD **)&v0[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
    if (!v3)
    {
      __break(1u);
      return;
    }
    v4 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x128))();
    v5 = (double *)&qword_1000C0E28;
    if ((v4 & 1) != 0)
      v5 = (double *)&unk_1000C0E30;
    v2 = *v5;
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_1000760E8(v6, (uint64_t)qword_100150068);
  v8 = static os_log_type_t.info.getter(v7);
  sub_10009973C(v8, 0x20002uLL, 0xD000000000000027, 0x80000001000DF080, 0xD000000000000031, 0x80000001000DF0B0);
  objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "handleRequestToCeaseAttending", 0);
  v15 = 0;
  v16 = 0xE000000000000000;
  _StringGuts.grow(_:)(52);
  v9._countAndFlagsBits = 0xD000000000000029;
  v9._object = (void *)0x80000001000DF120;
  String.append(_:)(v9);
  Double.write<A>(to:)(&v15, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v2);
  v10._countAndFlagsBits = 0x73646E6F63657320;
  v10._object = (void *)0xE90000000000002ELL;
  String.append(_:)(v10);
  v11 = v15;
  v12 = v16;
  v14 = static os_log_type_t.info.getter(v13);
  sub_10009973C(v14, 2uLL, 0xD000000000000028, 0x80000001000DF0F0, v11, v12);
  swift_bridgeObjectRelease(v12);
  objc_msgSend(v1, "performSelector:withObject:afterDelay:", "handleRequestToCeaseAttending", 0, v2);
}

void sub_10007E044(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  void *Strong;
  void *v5;
  unint64_t v6;
  Swift::String v7;
  unint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  unint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;

  v3 = v2;
  if ((v2[OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet] & 1) != 0)
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_1000760E8(v10, (uint64_t)qword_100150068);
    v12 = static os_log_type_t.info.getter(v11);
    sub_10009973C(v12, 2uLL, 0xD00000000000001FLL, 0x80000001000DF1A0, 0xD000000000000054, 0x80000001000DF2C0);
    goto LABEL_21;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR___SRCarPlayPresentation_dataSource], a2);
  if (Strong)
  {
    v5 = Strong;
    v6 = (unint64_t)objc_msgSend(Strong, "siriStateForSiriPresentation:", v3);
    swift_unknownObjectRelease(v5);
    if ((v6 & 0xFFFFFFFFFFFFFFFELL) == 4)
    {
      _StringGuts.grow(_:)(74);
      v7._countAndFlagsBits = 0xD000000000000022;
      v7._object = (void *)0x80000001000DF200;
      String.append(_:)(v7);
      if (v6 == 4)
      {
        v16 = 0xE900000000000067;
        v8 = 0x6E69646E65747441;
      }
      else
      {
        if (v6 == 5)
        {
          v8 = 0xD000000000000010;
          v9 = "IdleAndAttending";
        }
        else
        {
          if (qword_10014ECE0 != -1)
            swift_once(&qword_10014ECE0, sub_100098388);
          v17 = type metadata accessor for Logger(0);
          v18 = sub_1000760E8(v17, (uint64_t)qword_100150068);
          v19 = static os_log_type_t.info.getter(v18);
          sub_10009973C(v19, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000DF230);
          v8 = 0xD00000000000001ELL;
          v9 = "<Unrecognized SiriUISiriState>";
        }
        v16 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      }
      v20 = v16;
      String.append(_:)(*(Swift::String *)&v8);
      swift_bridgeObjectRelease(v16);
      v21._countAndFlagsBits = 0xD000000000000026;
      v21._object = (void *)0x80000001000DF270;
      String.append(_:)(v21);
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v22 = type metadata accessor for Logger(0);
      v23 = sub_1000760E8(v22, (uint64_t)qword_100150068);
      v24 = static os_log_type_t.info.getter(v23);
      sub_10009973C(v24, 2uLL, 0xD00000000000001FLL, 0x80000001000DF1A0, 0, 0xE000000000000000);
      swift_bridgeObjectRelease(0xE000000000000000);
LABEL_21:
      objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v3, "autodismiss", 0);
      objc_msgSend(v3, "performSelector:withObject:afterDelay:", "autodismiss", 0, 0.0);
      return;
    }
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_1000760E8(v13, (uint64_t)qword_100150068);
  v15 = static os_log_type_t.info.getter(v14);
  sub_10009973C(v15, 0x20002uLL, 0xD00000000000001FLL, 0x80000001000DF1A0, 0xD000000000000031, 0x80000001000DF1C0);
}

id sub_10007E400(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  id result;
  id v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  _QWORD *v19;
  void (*v20)(void);
  _QWORD *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;

  v2 = v1;
  v3 = objc_msgSend(a1, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_1000760E8(v7, (uint64_t)qword_100150068);
  v9 = static os_log_type_t.info.getter(v8);
  sub_10009973C(v9, 0x10uLL, 0x72756769666E6F63, 0xEF293A726F662865, v4, v6);
  swift_bridgeObjectRelease(v6);
  result = objc_msgSend((id)objc_opt_self(AFUISiriSession), "availabilityState");
  if (result)
  {
    v11 = result;
    v25 = 0;
    v26 = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v12._object = (void *)0x80000001000DF150;
    v12._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v12);
    v24 = v11;
    type metadata accessor for AFUISiriSessionAvailabilityState(0);
    _print_unlocked<A, B>(_:_:)(&v24, &v25, v13, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v14._countAndFlagsBits = 0xD000000000000024;
    v14._object = (void *)0x80000001000DF170;
    String.append(_:)(v14);
    v15 = v25;
    v16 = v26;
    v18 = static os_log_type_t.info.getter(v17);
    sub_10009973C(v18, 0x10uLL, 0x72756769666E6F63, 0xEF293A726F662865, v15, v16);
    result = (id)swift_bridgeObjectRelease(v16);
    v19 = *(_QWORD **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
    if (v19)
    {
      v20 = *(void (**)(void))((swift_isaMask & *v19) + 0x118);
      v21 = v19;
      v20();

      result = (id)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, v22);
      if (result)
      {
        v23 = result;
        objc_msgSend(result, "siriPresentation:setStatusViewHidden:", v2, 1);
        return (id)swift_unknownObjectRelease(v23);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void *sub_10007E690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *result;
  void *v4;

  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, a2);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "siriPresentationDidPresentUserInterface:", v2);
    return (void *)swift_unknownObjectRelease(v4);
  }
  return result;
}

void *sub_10007E6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007E76C(a1, a2, a3, (SEL *)&selRef_siriPresentationDidRequestCancelSpeechSynthesis_);
}

void *sub_10007E6F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *result;
  void *v5;

  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, a2);
  if (result)
  {
    v5 = result;
    objc_msgSend(result, "dismissSiriPresentation:withReason:", v2, a2);
    return (void *)swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10007E754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007EFEC(a2, a3);
}

void *sub_10007E760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007E76C(a1, a2, a3, (SEL *)&selRef_siriPresentationDidRequestRestartSpeechSynthesis_);
}

void *sub_10007E76C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *result;
  void *v7;

  result = (void *)swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR___SRCarPlayPresentation_delegate, a2);
  if (result)
  {
    v7 = result;
    if ((objc_msgSend(result, "respondsToSelector:", *a4) & 1) != 0)
      objc_msgSend(v7, *a4, v4);
    return (void *)swift_unknownObjectRelease(v7);
  }
  return result;
}

void *sub_10007E7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *result;
  void *v4;

  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, a2);
  if (result)
  {
    v4 = result;
    objc_msgSend(result, "siriPresentation:setStatusViewHidden:", v2, 0);
    return (void *)swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_10007E838(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10007E9F4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10007E854(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10007EB94(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_10007E870(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_10007ED74(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_10007E88C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100076100((uint64_t *)&unk_10014F8D0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007E9F4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100076100((uint64_t *)&unk_10014FBE0);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_100076100(&qword_10014F8C0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007EB94(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100076100(&qword_10014F8C8);
  v11 = *(_QWORD *)(type metadata accessor for SimpleItemStandard(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for SimpleItemStandard(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10007ED74(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100076100(&qword_10014F880);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void sub_10007EEE0()
{
  char *v0;
  char *v1;
  void *v2;
  _QWORD *v3;

  if ((v0[OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet] & 1) != 0)
  {
    v1 = v0;
    v2 = (void *)objc_opt_self(SRCarPlayUIUtilities);
    if (objc_msgSend(v2, "isJarvis") && objc_msgSend(v2, "flexibleFollowupEnabled"))
    {
      sub_10007DE30();
    }
    else
    {
      v3 = *(_QWORD **)&v1[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
      if (v3)
      {
        if (((*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x128))() & 1) == 0)
        {
          objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v1, "autodismiss", 0);
          objc_msgSend(v1, "performSelector:withObject:afterDelay:", "autodismiss", 0, 6.0);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_10007EFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  void *v6;
  Class isa;

  v3 = v2;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, a2);
  if (result)
  {
    v6 = (void *)result;
    isa = UUID._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v6, "siriPresentation:performAceCommand:conversationItemIdentifier:turnIdentifier:completion:", v3, a1, 0, isa, 0);

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

void *sub_10007F074(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;

  v2 = objc_opt_self(SAUIVisualResponseSnippet);
  v3 = swift_dynamicCastObjCClass(a1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = a1;
    v6 = objc_msgSend(v4, "sash");
    v7 = v6;
    if (v6)
      goto LABEL_6;
LABEL_8:

    return v7;
  }
  v8 = objc_opt_self(SAUIPluginSnippet);
  v7 = (void *)swift_dynamicCastObjCClass(a1, v8);
  if (!v7)
    return v7;
  v5 = a1;
  v6 = objc_msgSend(v7, "sash");
  v7 = v6;
  if (!v6)
    goto LABEL_8;
LABEL_6:
  v9 = objc_msgSend(v6, "applicationBundleIdentifier");

  if (v9)
  {
    v7 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v9);

  }
  else
  {

    return 0;
  }
  return v7;
}

uint64_t sub_10007F19C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;

  v2 = v1;
  v4 = sub_100076100(&qword_10014F878);
  result = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (!v8)
  {
    __break(1u);
    goto LABEL_16;
  }
  v9 = v8;
  sub_10008F4D0(a1);

  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR___SRCarPlayPresentation_delegate, v10);
  if (!result)
    return result;
  v11 = (void *)result;
  sub_10007F368(a1, (uint64_t)v7);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12);
  if ((_DWORD)result == 1)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v14 = URL.scheme.getter();
  if (v15)
  {
    v16 = v15;
    if (v14 == 0x6D65746970616DLL && v15 == 0xE700000000000000)
      v18 = 1;
    else
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15);
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v18 = 0;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
  objc_msgSend(v11, "siriPresentation:requestsTouchPassThroughEnabled:", v2, v18 & 1);
  return swift_unknownObjectRelease(v11);
}

uint64_t sub_10007F328(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100076100(&qword_10014F878);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007F368(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100076100(&qword_10014F878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007F3B0(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_10007F3C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007F3E4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_10007F3F0(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

_OWORD *sub_10007F434(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_10007F448()
{
  unint64_t result;

  result = qword_10014F8B0;
  if (!qword_10014F8B0)
  {
    result = swift_getWitnessTable(&unk_1000C1DDC, &type metadata for SiriUIFeaturesFlags);
    atomic_store(result, (unint64_t *)&qword_10014F8B0);
  }
  return result;
}

uint64_t sub_10007F48C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *sub_10007F4AC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_10007F4E8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t SiriUISiriState.description.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;

  result = 1701602377;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      v3 = 0x6E657473694CLL;
      goto LABEL_9;
    case 2:
      result = 0x676E696B6E696854;
      break;
    case 3:
      result = 0x73736563637553;
      break;
    case 4:
      v3 = 0x646E65747441;
LABEL_9:
      result = v3 & 0xFFFFFFFFFFFFLL | 0x6E69000000000000;
      break;
    case 5:
      result = 0xD000000000000010;
      break;
    default:
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v4 = type metadata accessor for Logger(0);
      v5 = sub_1000760E8(v4, (uint64_t)qword_100150068);
      v6 = static os_log_type_t.info.getter(v5);
      sub_10009973C(v6, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000DF230);
      result = 0xD00000000000001ELL;
      break;
  }
  return result;
}

uint64_t sub_10007F658()
{
  uint64_t *v0;

  return SiriUISiriState.description.getter(*v0);
}

unint64_t SiriUISiriEvent.description.getter(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;

  result = 0xD000000000000012;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
    case 2:
      result = 0xD000000000000014;
      break;
    case 3:
      result = 0xD000000000000018;
      break;
    case 4:
      result = 0xD000000000000015;
      break;
    case 5:
      result = 0xD000000000000010;
      break;
    case 6:
    case 7:
      result = 0x4674736575716552;
      break;
    case 8:
      result = 0x53646E616D6D6F43;
      break;
    case 9:
    case 10:
      result = 0x6E69646E65747441;
      break;
    case 11:
      result = 0x6544686365657053;
      break;
    case 12:
      result = 0xD00000000000001ALL;
      break;
    case 13:
      result = 0x694D686365657053;
      break;
    case 14:
      result = 0xD000000000000011;
      break;
    case 15:
      result = 0xD00000000000001ALL;
      break;
    default:
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v3 = type metadata accessor for Logger(0);
      v4 = sub_1000760E8(v3, (uint64_t)qword_100150068);
      v5 = static os_log_type_t.info.getter(v4);
      sub_10009973C(v5, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000DF320);
      result = 0xD00000000000001ELL;
      break;
  }
  return result;
}

unint64_t sub_10007F8A8()
{
  uint64_t *v0;

  return SiriUISiriEvent.description.getter(*v0);
}

void sub_10007F8B0()
{
  qword_100151148 = (uint64_t)&off_100124148;
}

void sub_10007F8C4()
{
  qword_100151150 = (uint64_t)&off_1001241B8;
}

void sub_10007F8D8()
{
  qword_100151158 = (uint64_t)&off_1001241E8;
}

uint64_t sub_10007F8EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (qword_10014ECB0 != -1)
    swift_once(&qword_10014ECB0, sub_10007F8B0);
  v0 = qword_100151148;
  if (qword_10014ECB8 != -1)
    swift_once(&qword_10014ECB8, sub_10007F8C4);
  v1 = qword_100151150;
  swift_bridgeObjectRetain(v0);
  v2 = swift_bridgeObjectRetain(v1);
  sub_100082420(v2);
  if (qword_10014ECC0 != -1)
    swift_once(&qword_10014ECC0, sub_10007F8D8);
  v3 = qword_100151158;
  swift_bridgeObjectRetain(v0);
  v4 = swift_bridgeObjectRetain(v3);
  sub_100082420(v4);
  result = swift_bridgeObjectRelease(v0);
  qword_100151160 = v0;
  return result;
}

uint64_t sub_10007F9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if (qword_10014ECB8 != -1)
    swift_once(&qword_10014ECB8, sub_10007F8C4);
  v0 = qword_100151150;
  if (qword_10014ECB0 != -1)
    swift_once(&qword_10014ECB0, sub_10007F8B0);
  v1 = qword_100151148;
  swift_bridgeObjectRetain(v0);
  v2 = swift_bridgeObjectRetain(v1);
  result = sub_100082420(v2);
  qword_100151168 = v0;
  return result;
}

void sub_10007FAA4()
{
  qword_100151170 = (uint64_t)&off_100124218;
}

void sub_10007FB14(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char **v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  id v27;
  char v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  id v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  void *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  char v83;
  char v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;

  v5 = v4;
  LOBYTE(v6) = a4;
  v8 = OBJC_IVAR___SRSiriSystemUIController_lockState;
  *(_QWORD *)(v4 + OBJC_IVAR___SRSiriSystemUIController_lockState) = a3;
  v9 = OBJC_IVAR___SRSiriSystemUIController_viewMode;
  *(_QWORD *)(v5 + OBJC_IVAR___SRSiriSystemUIController_viewMode) = a2;
  *(_BYTE *)(v5 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) = 0;
  v10 = (uint64_t *)(v5 + OBJC_IVAR___SRSiriSystemUIController_domainResponseId);
  v11 = *(_QWORD *)(v5 + OBJC_IVAR___SRSiriSystemUIController_domainResponseId + 8);
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(v5 + OBJC_IVAR___SRSiriSystemUIController_isInAmbient) = (_BYTE)v6;
  if (*(_BYTE *)(v5 + OBJC_IVAR___SRSiriSystemUIController_systemUIDevice) == 1 && *(_QWORD *)(v5 + v9) == 7)
  {
    v87 = v8;
    v88 = v9;
    v12 = &selRef_speakableContextInfo;
    v89 = a1;
    v13 = objc_msgSend(a1, "views");
    if (v13)
    {
      v14 = sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

      if ((unint64_t)v15 >> 62)
        goto LABEL_19;
      v13 = *(id *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v15);
      for (; v13; v13 = (id)_CocoaArrayWrapper.endIndex.getter(v24))
      {
        v83 = (char)v6;
        v16 = 4;
        while (1)
        {
          v12 = (char **)(v16 - 4);
          v17 = (v15 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, v15)
              : *(id *)(v15 + 8 * v16);
          v6 = v17;
          v18 = (id)(v16 - 3);
          if (__OFADD__(v12, 1))
            break;
          v19 = objc_msgSend(v17, "correspondingSessionID");
          if (v19)
          {
            v20 = v19;
            swift_bridgeObjectRelease_n(v15, 2);

            v21 = objc_msgSend(v6, "correspondingSessionID");
            if (v21)
            {
              v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
              v13 = v23;

            }
            else
            {
LABEL_16:
              v22 = 0;
              v13 = 0;
            }
            LOBYTE(v6) = v83;
            v12 = &selRef_speakableContextInfo;
            goto LABEL_25;
          }

          ++v16;
          if (v18 == v13)
          {
            swift_bridgeObjectRelease_n(v15, 2);
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_19:
        if (v15 < 0)
          v24 = v15;
        else
          v24 = v15 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v15);
      }
      swift_bridgeObjectRelease_n(v15, 2);
    }
    v22 = 0;
LABEL_25:
    v25 = (uint64_t *)(v5 + OBJC_IVAR___SRSiriSystemUIController_activityId);
    v26 = *(_QWORD *)(v5 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8);
    *v25 = v22;
    v25[1] = (uint64_t)v13;
    v85 = v25;
    swift_bridgeObjectRelease(v26);
    v27 = objc_msgSend(v89, "patternId");
    if (v27)
    {
      v28 = (char)v6;

      v29 = objc_msgSend(v89, "patternId");
      if (v29)
      {
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v6 = v32;

        v33 = v10[1];
        *v10 = v31;
        v10[1] = (uint64_t)v6;
        LOBYTE(v6) = v28;
        goto LABEL_28;
      }
      __break(1u);
      goto LABEL_87;
    }
    v55 = objc_msgSend(v89, v12[275]);
    if (v55)
    {
      v56 = v55;
      v57 = sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
      v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v56, v57);

      if (!((unint64_t)v33 >> 62))
      {
        v58 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v58)
          goto LABEL_28;
        goto LABEL_55;
      }
      if (v33 < 0)
        v81 = v33;
      else
        v81 = v33 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v33);
      v58 = _CocoaArrayWrapper.endIndex.getter(v81);
      swift_bridgeObjectRelease(v33);
      if (v58)
      {
LABEL_55:
        v82 = v10;
        v84 = (char)v6;
        if (v58 >= 1)
        {
          v59 = v58;
          v60 = 0;
          v86 = v58;
          while (1)
          {
            if ((v33 & 0xC000000000000001) != 0)
              v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v60, v33);
            else
              v61 = *(id *)(v33 + 8 * v60 + 32);
            v62 = v61;
            v63 = objc_opt_self(SAUIPluginSnippet);
            v64 = swift_dynamicCastObjCClass(v62, v63);
            if (v64)
            {
              v65 = (void *)v64;
              v62 = v62;
              v66 = objc_msgSend(v65, "responseViewId");
              v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
              v69 = v68;

              swift_bridgeObjectRelease(v69);
              v70 = HIBYTE(v69) & 0xF;
              if ((v69 & 0x2000000000000000) == 0)
                v70 = v67 & 0xFFFFFFFFFFFFLL;
              if (v70)
              {
                v71 = objc_msgSend(v65, "responseViewId");
                v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
                v74 = v73;

                if (v72 == 0xD000000000000015 && v74 == 0x80000001000E04A0)
                {

                  swift_bridgeObjectRelease(0x80000001000E04A0);
                }
                else
                {
                  v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74);
                  swift_bridgeObjectRelease(v74);
                  if ((v75 & 1) != 0)
                  {

                  }
                  else
                  {
                    v76 = objc_msgSend(v65, "responseViewId");
                    v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v76);
                    v79 = v78;

                    v80 = v82[1];
                    *v82 = v77;
                    v82[1] = v79;

                    swift_bridgeObjectRelease(v80);
                  }
                }
                v59 = v86;
                goto LABEL_59;
              }

            }
LABEL_59:
            if (v59 == ++v60)
            {
              LOBYTE(v6) = v84;
              v10 = v82;
              goto LABEL_28;
            }
          }
        }
        __break(1u);
        goto LABEL_85;
      }
LABEL_28:
      swift_bridgeObjectRelease(v33);
    }
    v34 = v88;
    v35 = v89;
    if (!*(_QWORD *)(v5 + v87))
      goto LABEL_33;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v36 = type metadata accessor for Logger(0);
    v37 = sub_1000760E8(v36, (uint64_t)qword_100150068);
    v38 = static os_log_type_t.info.getter(v37);
    sub_10009973C(v38, 0x40000000uLL, 0xD000000000000033, 0x80000001000E03A0, 0xD00000000000005CLL, 0x80000001000E03E0);
    sub_10008204C();
    if ((v6 & 1) != 0)
    {
LABEL_33:
      v39 = objc_msgSend(v89, "dialogPhase", v82);
      v40 = v39;
      if (v39)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        v42 = v41;

        v40 = String._bridgeToObjectiveC()();
        v43 = v42;
        v34 = v88;
        v35 = v89;
        swift_bridgeObjectRelease(v43);
      }
      v90 = objc_msgSend((id)objc_opt_self(AFDialogPhase), "dialogPhaseForAceDialogPhase:", v40);

      if (v90 && (objc_msgSend(v90, "isTemporary") & 1) != 0
        || (v44 = sub_100082684(v35), v85[1])
        || (v44 & 1) != 0
        || *(_QWORD *)(v5 + v34) != 7)
      {
        if (qword_10014ECB0 != -1)
          swift_once(&qword_10014ECB0, sub_10007F8B0);
        v49 = sub_100080328(*v10, v10[1], (_QWORD *)qword_100151148);
        v50 = OBJC_IVAR___SRSiriSystemUIController_currentActivitySupportsLandscape;
        *(_BYTE *)(v5 + OBJC_IVAR___SRSiriSystemUIController_currentActivitySupportsLandscape) = v49 & 1;
        if (*(_BYTE *)(v5 + OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice) != 1)
          goto LABEL_50;
        if (!UIApp)
        {
LABEL_87:
          __break(1u);
          return;
        }
        if (sub_1000830E4((uint64_t)objc_msgSend(UIApp, "activeInterfaceOrientation"))
          || (*(_BYTE *)(v5 + v50) & 1) != 0
          || (v6 & 1) != 0)
        {
          sub_100081874();
          v48 = v90;
        }
        else
        {
LABEL_50:
          v51 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
          v52 = *(void **)(v5 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
          if (v52)
          {
            v53 = v52;
            dispatch thunk of ProminentPresentationAssertion.invalidate()();

            v54 = *(void **)(v5 + v51);
          }
          else
          {
            v54 = 0;
          }
          *(_QWORD *)(v5 + v51) = 0;

          v48 = v54;
        }
LABEL_78:

        return;
      }
      if (qword_10014ECE0 == -1)
      {
LABEL_41:
        v45 = type metadata accessor for Logger(0);
        v46 = sub_1000760E8(v45, (uint64_t)qword_100150068);
        v47 = static os_log_type_t.info.getter(v46);
        sub_10009973C(v47, 0x40000000uLL, 0xD000000000000033, 0x80000001000E03A0, 0xD000000000000052, 0x80000001000E0440);
        sub_1000816F8();
        v48 = v90;
        goto LABEL_78;
      }
LABEL_85:
      swift_once(&qword_10014ECE0, sub_100098388);
      goto LABEL_41;
    }
  }
}

uint64_t sub_100080328(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

_BYTE *sub_100080460(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  unint64_t *v4;
  char *v5;
  uint64_t *v8;
  id v9;
  _BOOL4 v10;
  _BYTE *result;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  _QWORD *v50;
  Class v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_log_type_t v63;
  uint64_t v64;
  Class isa;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  id v69;
  id v70;
  void *v71;
  __int16 v72;
  uint64_t v73;

  if (v3[OBJC_IVAR___SRSiriSystemUIController_systemUIDevice] != 1)
    return a1;
  if (*(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_viewMode] != 7)
    return a1;
  v5 = &v3[OBJC_IVAR___SRSiriSystemUIController_activityId];
  if (!*(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_activityId + 8])
    return a1;
  v70 = a1;
  if (qword_10014ECC8 != -1)
    swift_once(&qword_10014ECC8, sub_10007F8EC);
  v8 = (uint64_t *)&v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId];
  if ((sub_100080328(*(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId], *(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId + 8], (_QWORD *)qword_100151160) & 1) == 0)
  {
    v12 = objc_msgSend(v70, "views");
    if (v12)
    {
      v13 = v12;
      v14 = sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
      v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v14);

    }
    else
    {
      v15 = 0;
    }
    v73 = (uint64_t)_swiftEmptyArrayStorage;
    v72 = 0;
    v3[OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText] = 0;
    v16 = OBJC_IVAR___SRSiriSystemUIController_lockState;
    v4 = &qword_10014F000;
    v45 = v70;
    if (!*(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_lockState] || !*((_QWORD *)v5 + 1))
      goto LABEL_68;
    if (!v15)
    {
LABEL_66:
      if ((v3[v4[304]] & 1) == 0 && (v72 & 1) == 0)
      {
        swift_bridgeObjectRelease(v15);
LABEL_94:
        v64 = v73;
        goto LABEL_95;
      }
LABEL_68:
      if (!v15)
      {
LABEL_83:
        if ((v3[OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice] & 1) == 0 && !*(_QWORD *)&v3[v16])
          goto LABEL_91;
        if (v3[v4[304]] != 1 || !*(_QWORD *)&v3[v16] || (v3[OBJC_IVAR___SRSiriSystemUIController_isInAmbient] & 1) != 0)
        {
          if (HIBYTE(v72) == 1)
          {
            if (qword_10014ECE0 == -1)
            {
LABEL_90:
              v61 = type metadata accessor for Logger(0);
              v62 = sub_1000760E8(v61, (uint64_t)qword_100150068);
              v63 = static os_log_type_t.info.getter(v62);
              sub_10009973C(v63, 0, 0xD00000000000001FLL, 0x80000001000E01E0, 0xD000000000000015, 0x80000001000E0200);
              v64 = v73;
              sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
              swift_bridgeObjectRetain(v64);
              isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v64);
              objc_msgSend(v70, "setViews:", isa);

LABEL_95:
              v45 = v70;
              goto LABEL_96;
            }
LABEL_98:
            swift_once(&qword_10014ECE0, sub_100098388);
            goto LABEL_90;
          }
LABEL_91:
          v64 = v73;
LABEL_96:
          v69 = v45;
          swift_bridgeObjectRelease(v64);
          return v69;
        }
        if (qword_10014ECE0 == -1)
          goto LABEL_93;
        goto LABEL_100;
      }
      if ((unint64_t)v15 >> 62)
      {
        if (v15 >= 0)
          v60 = v15 & 0xFFFFFFFFFFFFFF8;
        else
          v60 = v15;
        swift_bridgeObjectRetain(v15);
        v56 = _CocoaArrayWrapper.endIndex.getter(v60);
        if (v56)
          goto LABEL_71;
      }
      else
      {
        v56 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v15);
        if (v56)
        {
LABEL_71:
          if (v56 < 1)
          {
            __break(1u);
            goto LABEL_98;
          }
          v57 = 0;
          do
          {
            if ((v15 & 0xC000000000000001) != 0)
              v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v15);
            else
              v58 = *(id *)(v15 + 8 * v57 + 32);
            v59 = v58;
            ++v57;
            v71 = v58;
            sub_1000811F0(&v71, &v73, (uint64_t)v3, (_BYTE *)&v72 + 1);

          }
          while (v56 != v57);
        }
      }
      swift_bridgeObjectRelease_n(v15, 2);
      v45 = v70;
      goto LABEL_83;
    }
    v21 = v15 & 0xFFFFFFFFFFFFFF8;
    if (!((unint64_t)v15 >> 62))
    {
      v46 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v15, 2);
      if (!v46)
      {
LABEL_65:
        swift_bridgeObjectRelease_n(v15, 2);
        v45 = v70;
        goto LABEL_66;
      }
LABEL_42:
      if (v46 < 1)
      {
        __break(1u);
LABEL_100:
        swift_once(&qword_10014ECE0, sub_100098388);
LABEL_93:
        v66 = type metadata accessor for Logger(0);
        v67 = sub_1000760E8(v66, (uint64_t)qword_100150068);
        v68 = static os_log_type_t.info.getter(v67);
        sub_10009973C(v68, 0, 0xD00000000000001FLL, 0x80000001000E01E0, 0xD000000000000033, 0x80000001000E0220);
        goto LABEL_94;
      }
      v47 = 0;
      do
      {
        if ((v15 & 0xC000000000000001) != 0)
          v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v15);
        else
          v48 = *(id *)(v15 + 8 * v47 + 32);
        v49 = v48;
        ++v47;
        v71 = v48;
        sub_100080E24(&v71, (uint64_t)v3, &v72, &v73, v70);

      }
      while (v46 != v47);
      goto LABEL_65;
    }
LABEL_61:
    if (v15 >= 0)
      v55 = v21;
    else
      v55 = v15;
    swift_bridgeObjectRetain_n(v15, 2);
    v46 = _CocoaArrayWrapper.endIndex.getter(v55);
    if (!v46)
      goto LABEL_65;
    goto LABEL_42;
  }
  v9 = objc_msgSend((id)objc_opt_self(SRVisualResponseTransformer), "transformVisualResponse:forMode:idiom:shouldHideSnippet:", v70, a2, a3, 1);
  if (qword_10014ECD0 != -1)
    swift_once(&qword_10014ECD0, sub_10007F9F4);
  v10 = (sub_100080328(*v8, v8[1], (_QWORD *)qword_100151168) & 1) != 0
     && *(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_lockState] != 0;
  if (qword_10014ECB8 != -1)
    swift_once(&qword_10014ECB8, sub_10007F8C4);
  v16 = 0xD00000000000001FLL;
  if (((sub_100080328(*v8, v8[1], (_QWORD *)qword_100151150) | v10) & 1) == 0)
    goto LABEL_57;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_1000760E8(v17, (uint64_t)qword_100150068);
  v19 = static os_log_type_t.info.getter(v18);
  sub_10009973C(v19, 0x40000000uLL, 0xD00000000000001FLL, 0x80000001000E01E0, 0xD000000000000032, 0x80000001000E0290);
  v73 = (uint64_t)_swiftEmptyArrayStorage;
  result = objc_msgSend(v9, "views");
  if (!result)
  {
    __break(1u);
    return result;
  }
  v3 = result;
  v15 = sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v15);

  if ((unint64_t)v20 >> 62)
  {
    if (v20 < 0)
      v3 = (_BYTE *)v20;
    else
      v3 = (_BYTE *)(v20 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v20);
    v22 = _CocoaArrayWrapper.endIndex.getter(v3);
    swift_bridgeObjectRelease(v20);
    if (v22)
      goto LABEL_23;
  }
  else
  {
    v21 = v20 & 0xFFFFFFFFFFFFF8;
    v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
    {
LABEL_23:
      v70 = v9;
      if (v22 >= 1)
      {
        for (i = 0; i != v22; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0)
            v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v20);
          else
            v37 = *(id *)(v20 + 8 * i + 32);
          v38 = v37;
          v39 = objc_opt_self(SAUIAssistantUtteranceView);
          v40 = swift_dynamicCastObjCClass(v38, v39);
          if (v40)
          {
            v24 = (void *)v40;
            v25 = objc_allocWithZone((Class)SAUIAssistantUtteranceView);
            v26 = v38;
            v27 = objc_msgSend(v25, "init");
            v28 = objc_msgSend(v24, "dialogIdentifier");
            objc_msgSend(v27, "setDialogIdentifier:", v28);

            v29 = v27;
            v30 = objc_msgSend(v24, "aceId");
            objc_msgSend(v29, "setAceId:", v30);

            v31 = v29;
            v32 = objc_msgSend(v24, "speakableText");
            objc_msgSend(v31, "setSpeakableText:", v32);

            v33 = v31;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v35 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v34 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v35 >= v34 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
            v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
            specialized Array._endMutation()(v36);

          }
          else
          {
            v41 = v38;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v43 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v42 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v43 >= v42 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
            v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
            specialized Array._endMutation()(v44);
          }

        }
        swift_bridgeObjectRelease(v20);
        v50 = (_QWORD *)v73;
        v9 = v70;
        goto LABEL_56;
      }
      __break(1u);
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRelease(v20);
  v50 = _swiftEmptyArrayStorage;
LABEL_56:
  v51 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v50);
  objc_msgSend(v9, "setViews:", v51);

LABEL_57:
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v52 = type metadata accessor for Logger(0);
  v53 = sub_1000760E8(v52, (uint64_t)qword_100150068);
  v54 = static os_log_type_t.info.getter(v53);
  sub_10009973C(v54, 0x40000000uLL, 0xD00000000000001FLL, 0x80000001000E01E0, 0xD000000000000025, 0x80000001000E0260);
  return v9;
}

void sub_100080E24(void **a1, uint64_t a2, _BYTE *a3, uint64_t *a4, void *a5)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  char v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  Class v38;
  Class v39;
  void *v40;

  v9 = *a1;
  v10 = objc_opt_self(SACardSnippet);
  v11 = swift_dynamicCastObjCClass(v9, v10);
  if (v11)
  {
    v12 = (void *)v11;
    v13 = v9;
    if ((sub_10008285C(v12) & 1) != 0)
    {
      if ((*(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0)
      {
        sub_10008292C(v12);
        v15 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v17 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v16 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v17 >= v16 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
        v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v18);
        v19 = *a4;
        sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
        swift_bridgeObjectRetain(v19);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v19);
        objc_msgSend(a5, "setViews:", isa);

      }
    }
    else if ((*(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0)
    {
      sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
      v30 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(a5, "setViews:", v30);

    }
    return;
  }
  v21 = objc_opt_self(SAUIButton);
  v22 = swift_dynamicCastObjCClass(v9, v21);
  if (!v22)
    goto LABEL_21;
  v23 = (void *)v22;
  v24 = v9;
  v25 = objc_msgSend(v23, "viewId");
  if (v25)
  {
    v26 = v25;
    v40 = a5;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v29 = v28;

    if (v27 == 0xD000000000000015 && v29 == 0x80000001000E02D0)
    {
      swift_bridgeObjectRelease(0x80000001000E02D0);
      a5 = v40;
      goto LABEL_17;
    }
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29);
    swift_bridgeObjectRelease(v29);
    a5 = v40;
    if ((v31 & 1) != 0)
    {
LABEL_17:
      if (*(_QWORD *)(a2 + OBJC_IVAR___SRSiriSystemUIController_lockState))
      {
        v32 = OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity;
        *(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) = 1;
        sub_10008204C();

        if (*(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_isInAmbient) == 1)
        {
          *a3 = 1;
          *(_BYTE *)(a2 + v32) = 0;
        }
        return;
      }
    }
  }

LABEL_21:
  if ((sub_10008285C(v9) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0)
    {
      v33 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v35 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v34 = *(_QWORD *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v35 >= v34 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
      v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v33);
      specialized Array._endMutation()(v36);
      v37 = *a4;
      sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
      swift_bridgeObjectRetain(v37);
      v38 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v37);
      objc_msgSend(a5, "setViews:", v38);

      *(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText) = 1;
    }
  }
  else if ((*(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0
         && (*(_BYTE *)(a2 + OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText) & 1) == 0)
  {
    sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
    v39 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(a5, "setViews:", v39);

  }
}

void sub_1000811F0(void **a1, uint64_t *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7 = *a1;
  v8 = objc_opt_self(SACardSnippet);
  v9 = (void *)swift_dynamicCastObjCClass(v7, v8);
  v10 = v7;
  if (v9)
  {
    v11 = objc_msgSend(v9, "viewId");
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

      if (v13 == 0xD000000000000010 && v15 == 0x80000001000E02F0)
      {
        swift_bridgeObjectRelease(0x80000001000E02F0);
LABEL_11:
        v20 = v10;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v22 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v21 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v22 >= v21 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
        v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
        specialized Array._endMutation()(v23);

        return;
      }
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15);
      swift_bridgeObjectRelease(v15);
      if ((v19 & 1) != 0)
        goto LABEL_11;
    }
    if (*(_BYTE *)(a3 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) == 1)
      goto LABEL_11;
    v24 = sub_10008285C(v9);
    v25 = sub_100082B54(v9);
    if (v25)
      goto LABEL_15;
    if ((v24 & 1) != 0)
    {
      v30 = *a2;
      if ((unint64_t)*a2 >> 62)
      {
        if (v30 < 0)
          v31 = *a2;
        else
          v31 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*a2);
        v32 = _CocoaArrayWrapper.endIndex.getter(v31);
        swift_bridgeObjectRelease(v30);
        if (v32)
          goto LABEL_21;
      }
      else if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_21;
      }
      sub_10008292C(v9);
LABEL_15:
      v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      v28 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v27 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v28 >= v27 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
      v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
      specialized Array._endMutation()(v29);

      v10 = v26;
    }
LABEL_21:

    *a4 = 1;
    return;
  }
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  v17 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v10);
  specialized Array._endMutation()(v18);
}

uint64_t sub_1000814F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;

  v1 = v0;
  v2 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
  v3 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
  if (v3)
  {
    v4 = v3;
    dispatch thunk of ProminentPresentationAssertion.invalidate()();

    v3 = *(void **)(v1 + v2);
  }
  *(_QWORD *)(v1 + v2) = 0;

  v5 = OBJC_IVAR___SRSiriSystemUIController_sessionListener;
  v6 = *(void **)(v1 + OBJC_IVAR___SRSiriSystemUIController_sessionListener);
  if (v6)
  {
    objc_msgSend(v6, "invalidate");
    v6 = *(void **)(v1 + v5);
  }
  *(_QWORD *)(v1 + v5) = 0;
  swift_unknownObjectRelease(v6);
  return swift_unknownObjectWeakAssign(v1 + OBJC_IVAR___SRSiriSystemUIController_delegate, 0);
}

BOOL sub_100081680()
{
  uint64_t v0;

  return ((*(_BYTE *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice) & 1) != 0
       || *(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_lockState))
      && (*(_BYTE *)(v0 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0
      && *(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8) != 0;
}

void sub_1000816F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  void *Strong;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;

  if (*(_BYTE *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemUIDevice) == 1)
  {
    v1 = v0;
    if (*(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_viewMode) == 7)
    {
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v2 = type metadata accessor for Logger(0);
      v3 = sub_1000760E8(v2, (uint64_t)qword_100150068);
      v4 = static os_log_type_t.info.getter(v3);
      sub_10009973C(v4, 0x40000000uLL, 0xD000000000000012, 0x80000001000E01A0, 0xD00000000000001ALL, 0x80000001000E01C0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___SRSiriSystemUIController_delegate, v5);
      if (Strong)
      {
        v7 = Strong;
        objc_msgSend(Strong, "controllerRequestSystemApertureCollapse");
        swift_unknownObjectRelease(v7);
      }
      v8 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
      v9 = *(void **)(v1 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
      if (v9)
      {
        v10 = v9;
        dispatch thunk of ProminentPresentationAssertion.invalidate()();

        v9 = *(void **)(v1 + v8);
      }
      *(_QWORD *)(v1 + v8) = 0;

      v11 = (_QWORD *)(v1 + OBJC_IVAR___SRSiriSystemUIController_activityId);
      v12 = *(_QWORD *)(v1 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8);
      *v11 = 0;
      v11[1] = 0;
      swift_bridgeObjectRelease(v12);
    }
  }
}

void sub_100081874()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *v22;

  v1 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8);
  if (v1)
  {
    v2 = v0;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId);
    v4 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
    v5 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
    if (v5)
    {
      swift_bridgeObjectRetain(v1);
      v6 = v5;
      v7 = dispatch thunk of ProminentPresentationAssertion.snaSessionIdentifier.getter();
      v9 = v8;

      if (v3 == v7 && v1 == v9)
      {
        swift_bridgeObjectRelease(v1);
        swift_bridgeObjectRelease(v9);
        return;
      }
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v1);
      swift_bridgeObjectRelease(v9);
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease(v1);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v1);
    }
    _StringGuts.grow(_:)(47);
    swift_bridgeObjectRelease(0xE000000000000000);
    v12._countAndFlagsBits = v3;
    v12._object = v1;
    String.append(_:)(v12);
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_1000760E8(v13, (uint64_t)qword_100150068);
    v15 = static os_log_type_t.info.getter(v14);
    sub_10009973C(v15, 0x40000000uLL, 0xD000000000000019, 0x80000001000E0110, 0xD00000000000002DLL, 0x80000001000E0130);
    swift_bridgeObjectRelease(0x80000001000E0130);
    v16 = *(void **)(v2 + v4);
    if (v16)
    {
      v17 = v16;
      dispatch thunk of ProminentPresentationAssertion.invalidate()();

      v16 = *(void **)(v2 + v4);
    }
    *(_QWORD *)(v2 + v4) = 0;

    v18 = swift_allocObject(&unk_100124898, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16, v2, v19);
    v20 = objc_allocWithZone((Class)type metadata accessor for ProminentPresentationAssertion(0));
    v21 = ProminentPresentationAssertion.init(explanation:activityIdentifier:duration:invalidationHandler:)(0xD000000000000018, 0x80000001000E0160, v3, v1, sub_100082418, v18, 0.0);
    v22 = *(void **)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v21;

    sub_100081BFC();
  }
}

void sub_100081AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  char *Strong;
  void *v9;
  os_log_type_t v10;
  _BYTE v11[24];

  v3 = a3 + 16;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_1000760E8(v4, (uint64_t)qword_100150068);
  v6 = static os_log_type_t.info.getter(v5);
  sub_10009973C(v6, 0x40000000uLL, 0xD000000000000019, 0x80000001000E0110, 0xD00000000000001FLL, 0x80000001000E0180);
  swift_beginAccess(v3, v11, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3, v7);
  if (Strong)
  {
    v9 = *(void **)&Strong[OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion];
    *(_QWORD *)&Strong[OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion] = 0;

  }
  else
  {
    v10 = static os_log_type_t.info.getter(0);
    sub_10009973C(v10, 0x40000000uLL, 0xD000000000000019, 0x80000001000E0110, 0xD00000000000001BLL, 0x80000001000E00D0);
  }
}

void sub_100081BFC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  id v11;
  NSString v12;
  NSString v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;

  v1 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8);
  if (v1)
  {
    v2 = v0;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId);
    v4 = OBJC_IVAR___SRSiriSystemUIController_sessionListener;
    v5 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_sessionListener);
    swift_bridgeObjectRetain(v1);
    if (v5)
    {
      objc_msgSend(v5, "invalidate");
      v6 = *(_QWORD *)(v2 + v4);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v2 + v4) = 0;
    swift_unknownObjectRelease(v6);
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease(0xE000000000000000);
    v7._countAndFlagsBits = v3;
    v7._object = v1;
    String.append(_:)(v7);
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_1000760E8(v8, (uint64_t)qword_100150068);
    v10 = static os_log_type_t.info.getter(v9);
    sub_10009973C(v10, 0x40000000uLL, 0xD000000000000016, 0x80000001000E0060, 0xD00000000000002ALL, 0x80000001000E0080);
    swift_bridgeObjectRelease(0x80000001000E0080);
    v11 = objc_msgSend(objc_allocWithZone((Class)ACActivityPresentationListener), "init");
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
    v13 = String._bridgeToObjectiveC()();
    v14 = swift_allocObject(&unk_100124898, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16, v2, v15);
    v19[4] = sub_1000823F8;
    v20 = v14;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_100082010;
    v19[3] = &unk_1001248B0;
    v16 = _Block_copy(v19);
    swift_release(v20);
    v17 = objc_msgSend(v11, "listenForActivityPresentation:presenterBundleIdentifier:withHandler:", v12, v13, v16);
    _Block_release(v16);

    v18 = *(_QWORD *)(v2 + v4);
    *(_QWORD *)(v2 + v4) = v17;

    swift_unknownObjectRelease(v18);
  }
}

void sub_100081E68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  void *v14;
  void *v15;
  _BYTE v16[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 4:
      case 5:
      case 6:
        goto LABEL_3;
      case 3:
        v14 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR___SRSiriSystemUIController_delegate, v6);
        if (!v14)
          goto LABEL_3;
        v15 = v14;
        objc_msgSend(v14, "controllerRequestSiriDismissal");

        swift_unknownObjectRelease(v15);
        break;
      default:
        if (qword_10014ECE0 != -1)
          swift_once(&qword_10014ECE0, sub_100098388);
        v11 = type metadata accessor for Logger(0);
        v12 = sub_1000760E8(v11, (uint64_t)qword_100150068);
        v13 = static os_log_type_t.info.getter(v12);
        sub_10009973C(v13, 0x40000000uLL, 0xD000000000000016, 0x80000001000E0060, 0xD000000000000016, 0x80000001000E00F0);
LABEL_3:

        break;
    }
  }
  else
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_1000760E8(v8, (uint64_t)qword_100150068);
    v10 = static os_log_type_t.info.getter(v9);
    sub_10009973C(v10, 0x40000000uLL, 0xD000000000000016, 0x80000001000E0060, 0xD00000000000001BLL, 0x80000001000E00D0);
  }
}

uint64_t sub_100082010(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

void sub_10008204C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  void *Strong;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;

  if (*(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_lockState))
  {
    v1 = v0;
    if (*(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8)
      && *(_BYTE *)(v0 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) != 1)
    {
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v13 = type metadata accessor for Logger(0);
      v14 = sub_1000760E8(v13, (uint64_t)qword_100150068);
      v15 = static os_log_type_t.info.getter(v14);
      sub_10009973C(v15, 0x40000000uLL, 0xD000000000000020, 0x80000001000DFFB0, 0xD000000000000033, 0x80000001000DFFE0);
      v16 = v0 + OBJC_IVAR___SRSiriSystemUIController_delegate;
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___SRSiriSystemUIController_delegate, v17);
      if (Strong)
      {
        v20 = Strong;
        objc_msgSend(Strong, "controllerRequestTapsShared:", 1);
        swift_unknownObjectRelease(v20);
      }
      v21 = (void *)swift_unknownObjectWeakLoadStrong(v16, v19);
      if (v21)
      {
        v23 = v21;
        objc_msgSend(v21, "controllerRequestSiriBlurHidden:", 1);
        swift_unknownObjectRelease(v23);
      }
      v24 = (void *)swift_unknownObjectWeakLoadStrong(v16, v22);
      if (v24)
      {
        v25 = v24;
        objc_msgSend(v24, "controllerRequestScreenClearedWithClearASR:", 1);
        swift_unknownObjectRelease(v25);
      }
      *(_BYTE *)(v1 + OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen) = 1;
    }
    else
    {
      v2 = OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen;
      if (*(_BYTE *)(v0 + OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen) == 1)
      {
        if (qword_10014ECE0 != -1)
          swift_once(&qword_10014ECE0, sub_100098388);
        v3 = type metadata accessor for Logger(0);
        v4 = sub_1000760E8(v3, (uint64_t)qword_100150068);
        v5 = static os_log_type_t.info.getter(v4);
        sub_10009973C(v5, 0x40000000uLL, 0xD000000000000020, 0x80000001000DFFB0, 0xD00000000000003BLL, 0x80000001000E0020);
        v6 = v0 + OBJC_IVAR___SRSiriSystemUIController_delegate;
        v8 = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___SRSiriSystemUIController_delegate, v7);
        if (v8)
        {
          v10 = v8;
          objc_msgSend(v8, "controllerRequestSiriBlurHidden:", 0);
          swift_unknownObjectRelease(v10);
        }
        v11 = (void *)swift_unknownObjectWeakLoadStrong(v6, v9);
        if (v11)
        {
          v12 = v11;
          objc_msgSend(v11, "controllerRequestTapsShared:", 0);
          swift_unknownObjectRelease(v12);
        }
        *(_BYTE *)(v1 + v2) = 0;
      }
    }
  }
}

void SiriSystemUIController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Siri.SiriSystemUIController", 27, "init()", 6, 0);
  __break(1u);
}

id SiriSystemUIController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriSystemUIController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SiriSystemUIController()
{
  return objc_opt_self(SRSiriSystemUIController);
}

uint64_t sub_1000823D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1000823F8(uint64_t a1)
{
  uint64_t v1;

  sub_100081E68(a1, v1);
}

uint64_t sub_100082400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100082410(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_100082418(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100081AE4(a1, a2, v2);
}

uint64_t sub_100082420(uint64_t a1)
{
  char **v1;
  uint64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_10008675C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

id sub_100082570(uint64_t a1, char a2, uint64_t a3)
{
  _BYTE *v3;
  char v4;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  objc_super v11;

  v4 = a3;
  v7 = swift_unknownObjectWeakInit(&v3[OBJC_IVAR___SRSiriSystemUIController_delegate], 0, a3);
  *(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_viewMode] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_lockState] = 2;
  v8 = &v3[OBJC_IVAR___SRSiriSystemUIController_activityId];
  *v8 = 0;
  v8[1] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_currentActivitySupportsLandscape] = 0;
  v9 = &v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId];
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  v3[OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_isInAmbient] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___SRSiriSystemUIController_sessionListener] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText] = 0;
  swift_unknownObjectWeakAssign(v7, a1);
  v3[OBJC_IVAR___SRSiriSystemUIController_systemUIDevice] = a2;
  v3[OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice] = v4;
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for SiriSystemUIController();
  return objc_msgSendSuper2(&v11, "init");
}

uint64_t sub_100082684(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;

  v1 = objc_msgSend(a1, "views");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if ((unint64_t)v4 >> 62)
  {
LABEL_17:
    if (v4 < 0)
      v21 = v4;
    else
      v21 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v4);
    if (v5)
      goto LABEL_4;
    goto LABEL_21;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
  {
LABEL_21:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
LABEL_4:
  v6 = 4;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v4);
    else
      v7 = *(id *)(v4 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    v10 = objc_opt_self(SAUIAssistantUtteranceView);
    v11 = swift_dynamicCastObjCClass(v8, v10);
    if (v11)
      break;
LABEL_5:

    ++v6;
    if (v9 == v5)
      goto LABEL_21;
  }
  v12 = (void *)v11;
  v13 = v8;
  v14 = objc_msgSend(v12, "dialogIdentifier");
  if (!v14)
  {

    goto LABEL_5;
  }
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v18 = v17;
  swift_bridgeObjectRelease(v4);

  if (qword_10014ECD8 != -1)
    swift_once(&qword_10014ECD8, sub_10007FAA4);
  v19 = sub_100080328(v16, v18, (_QWORD *)qword_100151170);
  swift_bridgeObjectRelease(v18);

  return v19 & 1;
}

uint64_t sub_10008285C(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v2 = objc_msgSend(a1, "speakableText");
  v3 = v2;
  if (v2)

  v4 = objc_msgSend(a1, "dialog");
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "content");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "speakableTextOverride");
      if (v8)
      {

        return 1;
      }

      if (v3)
        return 1;
    }
    else
    {

      if (v3)
        return 1;
    }
  }
  else if (v3)
  {
    return 1;
  }
  return 0;
}

void sub_10008292C(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;

  v2 = objc_msgSend(objc_allocWithZone((Class)SAUIAssistantUtteranceView), "init");
  v3 = objc_msgSend(a1, "speakableText");
  if (v3)
  {

    v4 = v2;
    v5 = objc_msgSend(a1, "speakableText");
LABEL_9:
    objc_msgSend(v2, "setSpeakableText:", v5);

    goto LABEL_10;
  }
  v6 = objc_msgSend(a1, "dialog");
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "content");

  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = objc_msgSend(v8, "speakableTextOverride");

  if (!v9)
  {
LABEL_10:
    v14 = v2;
    v15 = objc_msgSend(a1, "aceId");
    objc_msgSend(v14, "setAceId:", v15);

    v16 = objc_msgSend(a1, "dialog");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "dialogIdentifier");

      objc_msgSend(v14, "setDialogIdentifier:", v18);
      objc_msgSend(v14, "setCanUseServerTTS:", 1);
      return;
    }
    __break(1u);
    goto LABEL_13;
  }

  v10 = v2;
  v11 = objc_msgSend(a1, "dialog");
  if (!v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "content");

  if (v13)
  {
    v5 = objc_msgSend(v13, "speakableTextOverride");

    goto LABEL_9;
  }
LABEL_16:
  __break(1u);
}

id sub_100082B54(void *a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  char **v5;
  char **v6;
  id result;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  uint64_t v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Class isa;
  id v22;
  objc_class *v23;
  Class v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  char v42;
  char **v43;
  void *v44;
  unint64_t v45;

  v1 = a1;
  v2 = objc_msgSend(a1, "siriui_card");
  if (!v2)
    goto LABEL_32;
  v3 = (unint64_t)v2;
  v4 = objc_opt_self(SFCard);
  v5 = (char **)swift_dynamicCastObjCClass(v3, v4);
  if (!v5)
  {
LABEL_31:
    swift_unknownObjectRelease(v3);
LABEL_32:
    v29 = v1;
    return v1;
  }
  v6 = v5;
  result = objc_msgSend(v5, "backingCard");
  if (result)
  {
    v8 = result;
    v9 = objc_msgSend(result, "cardSections");

    if (v9)
    {
      v10 = sub_100076140(0, (unint64_t *)&qword_10014F9E0, SFCardSection_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

      if ((unint64_t)v11 >> 62)
      {
        if (v11 < 0)
          v41 = v11;
        else
          v41 = v11 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v11);
        v12 = _CocoaArrayWrapper.endIndex.getter(v41);
      }
      else
      {
        v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v11);
      }
      v43 = v6;
      v44 = v1;
      v45 = v3;
      if (v12)
      {
        v13 = sub_100076140(0, &qword_10014F9E8, SFMediaRemoteControlCardSection_ptr);
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v13);
        v15 = 0;
        LOBYTE(v16) = 0;
        v3 = v11 & 0xC000000000000001;
        v6 = &selRef_hideBackgroundBehindSiri;
        while (2)
        {
          v42 = (char)v16;
          while (1)
          {
            if (v3)
              v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v11);
            else
              v17 = *(id *)(v11 + 8 * v15 + 32);
            v16 = v17;
            v1 = (void *)(v15 + 1);
            if (__OFADD__(v15, 1))
            {
              __break(1u);
              goto LABEL_39;
            }
            if (objc_msgSend(v17, "isKindOfClass:", ObjCClassFromMetadata))
              break;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            v19 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v18 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v19 >= v18 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
            v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v16);
            specialized Array._endMutation()(v20);
            ++v15;
            if (v1 == (void *)v12)
            {
              LOBYTE(v16) = v42;
              goto LABEL_23;
            }
          }

          LOBYTE(v16) = 1;
          ++v15;
          if (v1 != (void *)v12)
            continue;
          break;
        }
      }
      else
      {
        LOBYTE(v16) = 0;
      }
LABEL_23:
      swift_bridgeObjectRelease_n(v11, 2);
      v1 = v44;
      v3 = v45;
      v6 = v43;
    }
    else
    {
      LOBYTE(v16) = 0;
    }
    v11 = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_39:
      if (v11 < 0)
        v36 = v11;
      else
        v36 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v11);
      v37 = _CocoaArrayWrapper.endIndex.getter(v36);
      swift_bridgeObjectRelease(v11);
      if (v37)
        goto LABEL_26;
    }
    else if (*(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_26:
      if ((v16 & 1) != 0)
      {
        sub_100076140(0, (unint64_t *)&qword_10014F9E0, SFCardSection_ptr);
        swift_bridgeObjectRetain(v11);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v11);
        objc_msgSend(v6, "setCardSections:", isa);

        v22 = objc_msgSend(objc_allocWithZone((Class)SACardSnippet), "init");
        objc_msgSend(v22, "setSash:", 0);
        objc_msgSend(v22, "setItemType:", SAAceViewUIItemTypeItemTypeResultValue);
        v23 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)_SFPBCard), "initWithFacade:", v6);
        v24 = v23;
        if (v23)
        {
          v25 = -[objc_class data](v23, "data");

          if (v25)
          {
            v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v25);
            v28 = v27;

            v24 = Data._bridgeToObjectiveC()().super.isa;
            sub_10007F3F0(v26, v28);
          }
          else
          {
            v24 = 0;
          }
        }
        objc_msgSend(v22, "setCardData:", v24);

        v31 = objc_msgSend(v1, "referencedCommands");
        objc_msgSend(v22, "setReferencedCommands:", v31);

        v30 = v22;
        v32 = objc_msgSend(v1, "speakableText");
        objc_msgSend(v30, "setSpeakableText:", v32);

        if (qword_10014ECE0 != -1)
          swift_once(&qword_10014ECE0, sub_100098388);
        v33 = type metadata accessor for Logger(0);
        v34 = sub_1000760E8(v33, (uint64_t)qword_100150068);
        v35 = static os_log_type_t.info.getter(v34);
        sub_10009973C(v35, 0x40000000uLL, 0xD000000000000014, 0x80000001000E0310, 0xD00000000000002ALL, 0x80000001000E0330);
        swift_bridgeObjectRelease(v11);
        swift_unknownObjectRelease(v3);
        return v30;
      }
      swift_bridgeObjectRelease(v11);
      goto LABEL_31;
    }
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_1000760E8(v38, (uint64_t)qword_100150068);
    v40 = static os_log_type_t.info.getter(v39);
    sub_10009973C(v40, 0x40000000uLL, 0xD000000000000014, 0x80000001000E0310, 0xD00000000000003CLL, 0x80000001000E0360);
    swift_bridgeObjectRelease(v11);
    swift_unknownObjectRelease(v3);
    return 0;
  }
  __break(1u);
  return result;
}

BOOL sub_1000830E4(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

BOOL sub_1000830F4(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

BOOL sub_100083104()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemUIDevice) != 1
    || !*(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8))
  {
    return 0;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice) & 1) != 0)
    return 1;
  return *(_QWORD *)(v0 + OBJC_IVAR___SRSiriSystemUIController_lockState) != 0;
}

uint64_t sub_100083164()
{
  return 1;
}

void sub_10008316C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v17, "viewDidLoad");
  v1 = *(void **)&v0[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      v5 = type metadata accessor for SRCarPlayScrollView();
      if (swift_dynamicCastClass(v4, v5))
      {
        v2 = v2;
        v6 = objc_msgSend(v2, "responseViewId");
        v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
        v9 = v8;

        if (v7 == 0xD000000000000033 && v9 == 0x80000001000DFC90)
        {
          swift_bridgeObjectRelease(0x80000001000DFC90);
          v10 = 1;
        }
        else
        {
          v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9);
          swift_bridgeObjectRelease(v9);
        }
        sub_10008B9E0(v1, v10 & 1);

LABEL_16:
        return;
      }

    }
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_1000760E8(v14, (uint64_t)qword_100150068);
    v16 = static os_log_type_t.info.getter(v15);
    sub_10009973C(v16, 0x10uLL, 0x4C64694477656976, 0xED0000292864616FLL, 0xD000000000000027, 0x80000001000E0BA0);
    goto LABEL_16;
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_1000760E8(v11, (uint64_t)qword_100150068);
  v13 = static os_log_type_t.info.getter(v12);
  sub_10009973C(v13, 0x10uLL, 0x4C64694477656976, 0xED0000292864616FLL, 0xD000000000000025, 0x80000001000E0B70);
}

void sub_10008340C()
{
  uint64_t v0;

  sub_1000769B8(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate);
}

id sub_100083458()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1000834E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  NSString v4;
  id v5;

  *(_BYTE *)(v2 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd) = 1;
  if (a2)
  {
    v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
    if (v3)
    {
      v5 = v3;
      v4 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setPlayerState:aceId:", 0, v4);

    }
  }
}

uint64_t sub_100083584(void *a1)
{
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  BOOL v18;
  void *v19;
  id v20;
  _BOOL8 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  void *v41;
  char *v42;
  id v43;
  void *v44;
  void (*v45)(char *, id, uint64_t);
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t result;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  char *v91;

  ObjectType = swift_getObjectType(v1);
  v4 = sub_100076100(&qword_10014FAC0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v83 - v8;
  v10 = type metadata accessor for Response(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v91 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v83 - v14;
  v16 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet;
  v17 = *(void **)(v1 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet);
  if (v17)
    v18 = a1 == 0;
  else
    v18 = 1;
  if (v18 || (v27 = swift_dynamicCastClass(a1, ObjectType), !v27 || (v28 = *(void **)(v27 + v16)) == 0))
  {
    v19 = *(void **)(v1 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet);
    if (!v19)
      return 0;
    v20 = objc_msgSend(v19, "modelData");
    v21 = (_BOOL8)v20;
    if (!v20)
      return v21;
    v89 = v7;
    v90 = v15;
    v22 = v11;
    v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v25 = v24;

    sub_100086E3C(v23, v25);
    v26 = sub_10007A47C((unint64_t *)&qword_10014FAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Response, (uint64_t)&protocol conformance descriptor for Response);
    ProtobufBuilder.init(serializedData:)(v23, v25, v10, v26);
    v86 = v26;
    v87 = v23;
    v88 = v25;
    v37 = v22;
    v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
    v38(v9, 0, 1, v10);
    v39 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v39(v90, v9, v10);
    if (a1)
    {
      v40 = swift_dynamicCastClass(a1, ObjectType);
      if (v40)
      {
        v41 = *(void **)(v40 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet);
        if (v41)
        {
          v42 = a1;
          v43 = objc_msgSend(v41, "modelData");
          if (v43)
          {
            v44 = v43;
            v45 = (void (*)(char *, id, uint64_t))v39;
            v46 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v43);
            v48 = v47;

            sub_100086E3C(v46, v48);
            v49 = v89;
            ProtobufBuilder.init(serializedData:)(v46, v48, v10, v86);
            v86 = v48;
            v38(v49, 0, 1, v10);
            v45(v91, v49, v10);
            v66 = v90;
            v67 = Response.getComponentTypes()();
            v68 = Response.getComponentTypes()();
            v69 = (_QWORD *)v68;
            v70 = *(_QWORD *)(v67 + 16);
            if (!v70)
            {
LABEL_56:
              sub_10007F3F0(v87, v88);
              sub_10007F3F0(v46, v86);
              swift_bridgeObjectRelease(v67);

              v81 = v69[2];
              swift_bridgeObjectRelease(v69);
              v21 = v81 == 0;
              v82 = *(void (**)(char *, uint64_t))(v37 + 8);
              v82(v91, v10);
              v82(v66, v10);
              return v21;
            }
            v89 = (char *)v42;
            v71 = *(_QWORD *)(v68 + 16);
            if (!v71)
              goto LABEL_54;
            v72 = v67 + 32;
            v73 = 1;
            v74 = (uint64_t *)(v67 + 32);
            while (2)
            {
              v75 = 0;
              v76 = 0;
              v77 = *v74;
              while (v69[v75 + 4] != v77)
              {
                v78 = v76 + 1;
                if (__OFADD__(v76, 1))
                {
                  __break(1u);
                  goto LABEL_58;
                }
                ++v76;
                v75 += 2;
                if (v78 == v71)
                  goto LABEL_54;
              }
              v84 = v72;
              v85 = v70;
              if ((swift_isUniquelyReferenced_nonNull_native(v69) & 1) == 0)
                v69 = sub_100086E80(v69);
              v79 = v69[2];
              if (v79 <= v76)
              {
LABEL_58:
                __break(1u);
              }
              else
              {
                if ((uint64_t)(~v76 + v79) < 0)
                {
LABEL_60:
                  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
                  __break(1u);
                  return result;
                }
                v71 = v79 - 1;
                memmove(&v69[v75 + 4], &v69[v75 + 6], 16 * (~v76 + v79));
                v69[2] = v71;
                v70 = v85;
                if (v73 == v85)
                {
                  v42 = v89;
                  v66 = v90;
                  goto LABEL_56;
                }
                v72 = v84;
                if (v73 < *(_QWORD *)(v67 + 16))
                {
                  v74 = (uint64_t *)(v84 + 16 * v73++);
                  if (v71)
                    continue;
LABEL_54:

                  sub_10007F3F0(v46, v86);
                  sub_10007F3F0(v87, v88);
                  swift_bridgeObjectRelease(v69);
                  swift_bridgeObjectRelease(v67);
                  v80 = *(void (**)(char *, uint64_t))(v37 + 8);
                  v80(v91, v10);
                  v80(v90, v10);
                  return 0;
                }
              }
              break;
            }
            __break(1u);
            goto LABEL_60;
          }

        }
      }
    }
    sub_10007F3F0(v87, v88);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v90, v10);
    return 0;
  }
  v29 = v17;
  v30 = a1;
  v31 = v28;
  v32 = objc_msgSend(v29, "bundleName");
  if (v32)
  {
    v33 = v32;
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v36 = v35;

  }
  else
  {
    v34 = 0;
    v36 = 0;
  }
  v50 = objc_msgSend(v31, "bundleName");
  if (!v50)
  {
    if (!v36)
      goto LABEL_30;
    goto LABEL_26;
  }
  v51 = v50;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v54 = v53;

  if (!v36)
  {
    if (!v54)
      goto LABEL_30;

    swift_bridgeObjectRelease(v54);
    return 0;
  }
  if (!v54)
  {
LABEL_26:

    swift_bridgeObjectRelease(v36);
    return 0;
  }
  if (v34 == v52 && v36 == v54)
  {
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v54);
    goto LABEL_30;
  }
  v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v54);
  if ((v55 & 1) == 0)
  {

    return 0;
  }
LABEL_30:
  v56 = objc_msgSend(v29, "responseViewId");
  v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
  v59 = v58;

  v60 = objc_msgSend(v31, "responseViewId");
  v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
  v63 = v62;

  if (v57 != v61 || v59 != v63)
  {
    v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v63);

    return v64 & 1;
  }
  swift_bridgeObjectRelease_n(v59, 2);

  return 1;
}

uint64_t Response.getComponentTypes()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  BOOL v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  uint64_t DynamicType;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v1 = type metadata accessor for _ProtoResponse.Component(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for _ProtoResponse.Section(0);
  v66 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for Section(0);
  v68 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v73 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ComponentGroup(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v74 = (char *)&v63 - v13;
  v63 = v0;
  result = Response.group.getter(v12);
  v15 = 0;
  v16 = *(_QWORD *)(result + 64);
  v69 = result + 64;
  v76 = result;
  v17 = 1 << *(_BYTE *)(result + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v72 = (unint64_t)(v17 + 63) >> 6;
  v20 = _swiftEmptyArrayStorage;
  v80 = v2;
  v81 = v1;
  v79 = v4;
  v71 = v7;
  v70 = v8;
  v75 = v11;
  while (1)
  {
    if (v19)
    {
      v77 = (v19 - 1) & v19;
      v78 = v15;
      v21 = __clz(__rbit64(v19)) | (v15 << 6);
      goto LABEL_21;
    }
    v22 = __OFADD__(v15, 1);
    v23 = v15 + 1;
    if (v22)
      goto LABEL_51;
    if (v23 >= v72)
    {
LABEL_34:
      v41 = swift_release(v76);
      v42 = v64;
      result = Response.sections.getter(v41);
      v43 = (char *)result;
      v76 = *(_QWORD *)(result + 16);
      if (!v76)
      {
LABEL_49:
        swift_bridgeObjectRelease(v43);
        return (uint64_t)v20;
      }
      v44 = 0;
      v45 = v68;
      v75 = (char *)(result
                   + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)));
      v74 = (char *)result;
      while (v44 < *((_QWORD *)v43 + 2))
      {
        v46 = *(_QWORD *)(v45 + 72);
        v78 = v44;
        v47 = (*(uint64_t (**)(char *, char *, uint64_t))(v45 + 16))(v73, &v75[v46 * v44], v42);
        v48 = v65;
        v49 = Section.proto.getter(v47);
        v50 = _ProtoResponse.Section.componentList.getter(v49);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v67);
        v51 = *(_QWORD *)(v50 + 16);
        if (v51)
        {
          v52 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
          v77 = v50;
          v53 = v50 + v52;
          v54 = *(_QWORD *)(v2 + 72);
          v55 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
          v55(v4, v50 + v52, v1);
          while (1)
          {
            Component.redactedComponent()(&v83, v1, &protocol witness table for _ProtoResponse.Component);
            sub_10007F4E8(&v83, (uint64_t)&v86);
            v56 = v87;
            v57 = sub_1000844C4(&v86, v87);
            DynamicType = swift_getDynamicType(v57, v56, 1);
            v59 = v88;
            if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
              v20 = sub_100086C80(0, v20[2] + 1, 1, v20);
            v61 = v20[2];
            v60 = v20[3];
            if (v61 >= v60 >> 1)
              v20 = sub_100086C80((_QWORD *)(v60 > 1), v61 + 1, 1, v20);
            v20[2] = v61 + 1;
            v62 = &v20[2 * v61];
            v62[4] = DynamicType;
            v62[5] = v59;
            sub_10007F48C(&v86);
            v4 = v79;
            v2 = v80;
            v1 = v81;
            (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
            v53 += v54;
            if (!--v51)
              break;
            v55(v4, v53, v1);
          }
          swift_bridgeObjectRelease(v77);
          v42 = v64;
          v45 = v68;
          v43 = v74;
        }
        else
        {
          swift_bridgeObjectRelease(v50);
          v45 = v68;
        }
        v44 = v78 + 1;
        result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v73, v42);
        if (v44 == v76)
          goto LABEL_49;
      }
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v24 = *(_QWORD *)(v69 + 8 * v23);
    if (!v24)
      break;
LABEL_20:
    v77 = (v24 - 1) & v24;
    v78 = v23;
    v21 = __clz(__rbit64(v24)) + (v23 << 6);
LABEL_21:
    v26 = v74;
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v74, *(_QWORD *)(v76 + 56) + *(_QWORD *)(v8 + 72) * v21, v7);
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 32))(v11, v26, v7);
    v28 = ComponentGroup.components.getter(v27);
    v29 = v28;
    v30 = *(_QWORD *)(v28 + 16);
    if (v30)
    {
      v31 = v28 + 32;
      do
      {
        sub_100084480(v31, (uint64_t)&v86);
        v32 = v87;
        v33 = v88;
        sub_1000844C4(&v86, v87);
        Component.redactedComponent()(&v82, v32, v33);
        sub_10007F4E8(&v82, (uint64_t)&v83);
        v34 = v84;
        v35 = sub_1000844C4(&v83, v84);
        v36 = swift_getDynamicType(v35, v34, 1);
        v37 = v85;
        if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
          v20 = sub_100086C80(0, v20[2] + 1, 1, v20);
        v39 = v20[2];
        v38 = v20[3];
        if (v39 >= v38 >> 1)
          v20 = sub_100086C80((_QWORD *)(v38 > 1), v39 + 1, 1, v20);
        v20[2] = v39 + 1;
        v40 = &v20[2 * v39];
        v40[4] = v36;
        v40[5] = v37;
        sub_10007F48C(&v83);
        sub_10007F48C(&v86);
        v31 += 40;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease(v29);
      v7 = v71;
      v8 = v70;
    }
    else
    {
      swift_bridgeObjectRelease(v28);
    }
    v11 = v75;
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v75, v7);
    v2 = v80;
    v1 = v81;
    v4 = v79;
    v15 = v78;
    v19 = v77;
  }
  v25 = v23 + 1;
  if (v23 + 1 >= v72)
    goto LABEL_34;
  v24 = *(_QWORD *)(v69 + 8 * v25);
  if (v24)
    goto LABEL_19;
  v25 = v23 + 2;
  if (v23 + 2 >= v72)
    goto LABEL_34;
  v24 = *(_QWORD *)(v69 + 8 * v25);
  if (v24)
    goto LABEL_19;
  v25 = v23 + 3;
  if (v23 + 3 >= v72)
    goto LABEL_34;
  v24 = *(_QWORD *)(v69 + 8 * v25);
  if (v24)
    goto LABEL_19;
  v25 = v23 + 4;
  if (v23 + 4 >= v72)
    goto LABEL_34;
  v24 = *(_QWORD *)(v69 + 8 * v25);
  if (v24)
  {
LABEL_19:
    v23 = v25;
    goto LABEL_20;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v72)
      goto LABEL_34;
    v24 = *(_QWORD *)(v69 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_20;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_100084480(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_1000844C4(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1000844E8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd);
}

id sub_1000844F8()
{
  return sub_1000845B0();
}

void sub_100084500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  NSString v4;
  id v5;

  if (a2)
  {
    v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
    if (v3)
    {
      v5 = v3;
      v4 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setPlayerState:aceId:", 1, v4);

    }
  }
}

void sub_100084594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100084608(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&String._bridgeToObjectiveC(), (SEL *)&selRef_setAsrText_);
}

id sub_1000845A8()
{
  return sub_1000845B0();
}

id sub_1000845B0()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
  if (result)
    return objc_msgSend(result, "postSiriEvent:");
  return result;
}

id sub_1000845D0()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
  if (result)
    return objc_msgSend(result, "postSiriEvent:", 1);
  return result;
}

void sub_1000845F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100084608(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))&Data._bridgeToObjectiveC(), (SEL *)&selRef_updateSharedStateData_);
}

void sub_100084608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), SEL *a6)
{
  uint64_t v6;
  void *v7;
  void *v12;
  id v13;

  v7 = *(void **)(v6 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
  if (v7)
  {
    v13 = v7;
    v12 = (void *)a5(a1, a2);
    objc_msgSend(v13, *a6, v12);

  }
}

void sub_10008470C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  NSString v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Class v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)SAUIVisualResponseSnippet), "init");
  v7 = UUID.init()();
  UUID.uuidString.getter(v7);
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v6, "setAceId:", v11);

  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setModelData:", isa);

  v13 = objc_msgSend(objc_allocWithZone((Class)SAUIAddViews), "init");
  v14 = UUID.init()();
  UUID.uuidString.getter(v14);
  v16 = v15;
  v10(v5, v2);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v13, "setAceId:", v17);

  v18 = sub_100076100((uint64_t *)&unk_10014FB20);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1000C1710;
  *(_QWORD *)(v19 + 32) = v6;
  v25 = v19;
  specialized Array._endMutation()(v19);
  v20 = v25;
  sub_10008763C();
  v21 = v6;
  v22 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v13, "setViews:", v22);

  v23 = v13;
  sub_100086E94((uint64_t)v23, 1, v1);

}

void sub_100084B80(double a1, double a2)
{
  char *v2;
  char *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  double *v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t Strong;
  id v33;
  _QWORD v34[2];
  uint64_t v35;
  unint64_t v36;

  v3 = v2;
  v6 = objc_msgSend(v2, "view");
  if (v6)
  {
    v33 = v6;
    v7 = type metadata accessor for SRCarPlayScrollView();
    v8 = swift_dynamicCastClass(v33, v7);
    if (!v8)
    {

      return;
    }
    v9 = (char *)v8;
    v35 = 0;
    v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(29);
    v10._countAndFlagsBits = 0xD00000000000001BLL;
    v10._object = (void *)0x80000001000DE900;
    String.append(_:)(v10);
    *(double *)v34 = a1;
    *(double *)&v34[1] = a2;
    type metadata accessor for CGSize(0);
    _print_unlocked<A, B>(_:_:)(v34, &v35, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v12 = v35;
    v13 = v36;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_1000760E8(v14, (uint64_t)qword_100150068);
    v16 = static os_log_type_t.info.getter(v15);
    sub_10009973C(v16, 0x10uLL, 0xD00000000000001ALL, 0x80000001000E09A0, v12, v13);
    swift_bridgeObjectRelease(v13);
    v17 = (double *)&v9[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
    *v17 = a1;
    v17[1] = a2;
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint], "setConstant:", a2);
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint], "setConstant:", *v17);
    objc_msgSend(*(id *)&v9[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint], "setConstant:", v17[1]);
    v18 = objc_msgSend(v9, "setNeedsUpdateConstraints");
    if (a2 <= 0.0 || a2 > 48.0)
    {
      v30 = static os_log_type_t.info.getter(v18);
      sub_10009973C(v30, 0x2000010uLL, 0xD00000000000001ALL, 0x80000001000E09A0, 0xD000000000000029, 0x80000001000E09C0);
      Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate], v31);
      if (Strong)
      {
        v28 = Strong;
        v29 = 20.0;
LABEL_14:
        sub_10008F850(v29);

        swift_unknownObjectRelease(v28);
        return;
      }
    }
    else
    {
      v35 = 0;
      v36 = 0xE000000000000000;
      _StringGuts.grow(_:)(67);
      v19._countAndFlagsBits = 0xD000000000000041;
      v19._object = (void *)0x80000001000E09F0;
      String.append(_:)(v19);
      v20._countAndFlagsBits = Double.description.getter(a2);
      object = v20._object;
      String.append(_:)(v20);
      v22 = swift_bridgeObjectRelease(object);
      v23 = v35;
      v24 = v36;
      v25 = static os_log_type_t.info.getter(v22);
      sub_10009973C(v25, 0x2000010uLL, 0xD00000000000001ALL, 0x80000001000E09A0, v23, v24);
      swift_bridgeObjectRelease(v24);
      v27 = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate], v26);
      if (v27)
      {
        v28 = v27;
        if (qword_10014ECA8 != -1)
          swift_once(&qword_10014ECA8, sub_100076D44);
        v29 = *(double *)&qword_100151140;
        goto LABEL_14;
      }
    }

  }
}

void sub_100084F30(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  BOOL v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  id v19;

  v2 = v1;
  v4 = objc_msgSend(v2, "view");
  if (v4)
  {
    v19 = v4;
    v5 = type metadata accessor for SRCarPlayScrollView();
    if (swift_dynamicCastClass(v19, v5))
      v6 = a1 == 0;
    else
      v6 = 1;
    if (!v6)
    {
      v7 = a1;
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease(0xE000000000000000);
      v8 = objc_msgSend(v7, "description");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v11 = v10;

      v12._countAndFlagsBits = v9;
      v12._object = v11;
      String.append(_:)(v12);
      swift_bridgeObjectRelease(v11);
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v13 = type metadata accessor for Logger(0);
      v14 = sub_1000760E8(v13, (uint64_t)qword_100150068);
      v15 = static os_log_type_t.info.getter(v14);
      sub_10009973C(v15, 0x2000010uLL, 0xD00000000000001FLL, 0x80000001000E0950, 0xD000000000000020, 0x80000001000E0970);
      swift_bridgeObjectRelease(0x80000001000E0970);
      Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate], v16);
      if (Strong)
      {
        v18 = Strong;
        sub_10008F990((uint64_t)v7);

        swift_unknownObjectRelease(v18);
      }
      else
      {

      }
    }

  }
}

void sub_100085158(uint64_t a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  void *Strong;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  os_log_type_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v22 = v3;
    v4 = type metadata accessor for SRCarPlayScrollView();
    if (!swift_dynamicCastClass(v22, v4))
    {

      return;
    }
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v5._countAndFlagsBits = 0xD000000000000023;
    v5._object = (void *)0x80000001000E0880;
    String.append(_:)(v5);
    v23 = a1;
    type metadata accessor for VRXHostMaterial(0);
    _print_unlocked<A, B>(_:_:)(&v23, &v24, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v8 = v24;
    v7 = v25;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_1000760E8(v9, (uint64_t)qword_100150068);
    v11 = static os_log_type_t.info.getter(v10);
    sub_10009973C(v11, 0x2000010uLL, 0xD000000000000022, 0x80000001000E0850, v8, v7);
    swift_bridgeObjectRelease(v7);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate], v12);
    if (!Strong)
    {

      return;
    }
    v14 = Strong;
    v15 = objc_msgSend(Strong, "view");
    if (v15)
    {
      v16 = v15;
      v17 = type metadata accessor for SRCarPlayView();
      v18 = swift_dynamicCastClass(v16, v17);
      if (v18)
      {
        v19 = *(void **)(v18 + OBJC_IVAR____TtC4Siri13SRCarPlayView_platterView);
        if (v19)
        {
          v20 = v19;
          sub_100093D40(a1);

          swift_unknownObjectRelease(v14);
        }
        else
        {

          swift_unknownObjectRelease(v14);
        }
        return;
      }

    }
    v21 = static os_log_type_t.info.getter(v15);
    sub_10009973C(v21, 0x10uLL, 0xD00000000000004CLL, 0x80000001000E08B0, 0xD000000000000041, 0x80000001000E0900);

    swift_unknownObjectRelease(v14);
  }
}

uint64_t sub_10008552C(uint64_t a1)
{
  uint64_t v1;
  Swift::String v3;
  void *object;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease(0xE000000000000000);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_1000760E8(v6, (uint64_t)qword_100150068);
  v8 = static os_log_type_t.info.getter(v7);
  sub_10009973C(v8, 0x2000010uLL, 0xD000000000000019, 0x80000001000E0800, 0xD000000000000020, 0x80000001000E0820);
  swift_bridgeObjectRelease(0x80000001000E0820);
  v9 = v1 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate, v10);
  if (result)
  {
    v12 = result;
    v13 = *(_QWORD *)(v9 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 + 8) + 72))(a1, ObjectType);
    return swift_unknownObjectRelease(v12);
  }
  return result;
}

void sub_1000856E0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  unsigned int v25;
  void *v26;
  id v27;
  Class isa;
  id v29;
  id v30;
  uint64_t v31;
  Swift::String v32;
  void *object;
  uint64_t (*v34)(char *, uint64_t);
  Swift::String v35;
  id v36;
  Swift::String v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_type_t v42;
  id v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  id v50;
  Class v51;
  void (*v52)(char *, uint64_t);
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = 0;
  v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease(v58);
  v57 = 0xD000000000000022;
  v58 = 0x80000001000E06D0;
  v6 = a1;
  v7 = objc_msgSend(v6, "description");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12 = v57;
  v13 = v58;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_1000760E8(v14, (uint64_t)qword_100150068);
  v16 = static os_log_type_t.info.getter(v15);
  sub_10009973C(v16, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000E06B0, v12, v13);
  swift_bridgeObjectRelease(v13);
  v17 = objc_opt_self(VRXTurnBasedInstrumentationEvent);
  v18 = swift_dynamicCastObjCClass(v6, v17);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = (void *)objc_opt_self(SRUIFInstrumentationManager);
    v21 = v6;
    v54 = v20;
    v55 = v21;
    v22 = objc_msgSend(v20, "sharedManager");
    v23 = objc_msgSend(v22, "currentInstrumentationTurnContext");

    v24 = v23;
    v25 = objc_msgSend(v19, "requiresNewTurn");
    v56 = v3;
    if (v25)
    {
      v26 = (void *)objc_opt_self(AFAnalyticsTurnBasedInstrumentationContext);
      v27 = objc_msgSend(v24, "turnIdentifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v27);

      isa = UUID._bridgeToObjectiveC()().super.isa;
      v52 = *(void (**)(char *, uint64_t))(v3 + 8);
      v52(v5, v2);
      v29 = objc_msgSend(v26, "newTurnBasedContextWithPreviousTurnID:", isa);
      v53 = v29;

      v57 = 0;
      v58 = 0xE000000000000000;
      _StringGuts.grow(_:)(47);
      swift_bridgeObjectRelease(v58);
      v57 = 0xD00000000000001DLL;
      v58 = 0x80000001000E0750;
      v30 = objc_msgSend(v29, "turnIdentifier");
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v30);

      v31 = sub_10007A47C((unint64_t *)&qword_10014FAE0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v31);
      object = v32._object;
      String.append(_:)(v32);
      swift_bridgeObjectRelease(object);
      v34 = (uint64_t (*)(char *, uint64_t))v52;
      v52(v5, v2);
      v35._countAndFlagsBits = 0x646C4F203E2D3C20;
      v35._object = (void *)0xEE00206E72755420;
      String.append(_:)(v35);
      v36 = objc_msgSend(v24, "turnIdentifier");

      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v37._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v31);
      v38 = v37._object;
      String.append(_:)(v37);
      swift_bridgeObjectRelease(v38);
      v39 = v34(v5, v2);
      v40 = v57;
      v41 = v58;
      v42 = static os_log_type_t.info.getter(v39);
      sub_10009973C(v42, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000E06B0, v40, v41);
      swift_bridgeObjectRelease(v41);

      v24 = v53;
      v43 = objc_msgSend(v54, "sharedManager");
      objc_msgSend(v43, "storeCurrentInstrumentationTurnContext:", v24);

    }
    else
    {

    }
    v45 = type metadata accessor for RFInteractionPerformed(0);
    v46 = swift_dynamicCastClass(v19, v45);
    v47 = v55;
    if (v46)
    {
      v48 = v55;
      v49 = sub_100085C0C();
      dispatch thunk of RFInteractionPerformed.invocation.setter(v49);

    }
    v50 = objc_msgSend(v24, "turnIdentifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v50);

    v51 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v2);
    objc_msgSend(v19, "emitWithTurnIdentifier:", v51);

  }
  else
  {
    v44 = static os_log_type_t.info.getter(0);
    sub_10009973C(v44, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000E06B0, 0xD000000000000045, 0x80000001000E0700);
  }
}

id sub_100085C0C()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;
  id v15;
  id v16;
  objc_class *v17;
  id v18;
  NSString *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  NSString v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;

  v1 = objc_msgSend(objc_allocWithZone((Class)SISchemaInvocation), "init");
  v2 = objc_msgSend(objc_allocWithZone((Class)SISchemaViewContainer), "init");
  v3 = v2;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet);
  v5 = v4;
  if (v4)
  {
    if (v2)
      goto LABEL_3;
  }
  else
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet);
    if (!v5)
    {
      v15 = 0;
      if (!v3)
        goto LABEL_29;
      v16 = v3;
      v5 = 0;
      v9 = 0;
LABEL_11:
      objc_msgSend(v3, "setViewID:", v9);

      if (v5)
      {
        v17 = (objc_class *)objc_msgSend(v5, "classForCoder");
        v18 = v3;
        v19 = NSStringFromClass(v17);
        if (!v19)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0);
          v21 = v20;
          v19 = (NSString *)String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v21);
        }
        objc_msgSend(v18, "setSnippetClass:", v19);

        v14 = 0;
        if (v1)
          goto LABEL_15;
        goto LABEL_16;
      }
LABEL_29:
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v39 = type metadata accessor for Logger(0);
      v40 = sub_1000760E8(v39, (uint64_t)qword_100150068);
      v41 = static os_log_type_t.info.getter(v40);
      sub_10009973C(v41, 0x10uLL, 0xD000000000000015, 0x80000001000E0770, 0xD000000000000034, 0x80000001000E0790);
      v5 = 0;
      v14 = 1;
      if (v1)
        goto LABEL_15;
      goto LABEL_16;
    }
    v12 = v5;
    if (v3)
    {
LABEL_3:
      v6 = v4;
      v7 = v3;
      v8 = objc_msgSend(v5, "aceId");
      v9 = v8;
      if (v8)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        v11 = v10;

        v9 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v11);
      }
      goto LABEL_11;
    }
  }
  v13 = v4;
  objc_msgSend(v5, "classForCoder");
  v14 = 0;
  if (v1)
LABEL_15:
    objc_msgSend(v1, "setInvocationSource:", 11);
LABEL_16:
  objc_msgSend(v1, "setViewContainer:", v3);
  v22 = objc_msgSend(objc_allocWithZone((Class)SISchemaCarPlayInvocationContext), "init");
  v23 = v22;
  if (!v22)
    goto LABEL_24;
  if ((v14 & 1) != 0)
  {
    v24 = v22;
  }
  else
  {
    v26 = v22;
    v27 = objc_msgSend(v5, "sash");
    v25 = v27;
    if (!v27)
      goto LABEL_23;
    v28 = objc_msgSend(v27, "applicationBundleIdentifier");

    if (v28)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
      v30 = v29;

      v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v30);
      goto LABEL_23;
    }
  }
  v25 = 0;
LABEL_23:
  objc_msgSend(v23, "setBundleID:", v25);

LABEL_24:
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v31 = type metadata accessor for Logger(0);
  v32 = sub_1000760E8(v31, (uint64_t)qword_100150068);
  v33 = static os_log_type_t.info.getter(v32);
  sub_10009973C(v33, 0x10uLL, 0xD000000000000015, 0x80000001000E0770, 0xD000000000000024, 0x80000001000E07D0);
  v34 = objc_msgSend((id)objc_opt_self(SASSystemState), "sharedSystemState");
  if (v23)
  {
    v35 = v23;
    objc_msgSend(v35, "setEnhancedVoiceTriggerMode:", SASCarPlayEnhancedVoiceTriggerModeToSISchemaEnhancedVoiceTriggerMode(objc_msgSend(v34, "carPlayEnhancedVoiceTriggerMode")));

    v36 = v35;
    objc_msgSend(v36, "setCarPlayConnection:", SASCarPlayTransportTypeToSISchemaCarPlayConnection(objc_msgSend(v34, "carPlayTransportType")));

  }
  v37 = v1;
  objc_msgSend(v37, "setCarPlayInvocationContext:", v23);

  return v1;
}

uint64_t sub_10008610C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v1 = v0;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000760E8(v2, (uint64_t)qword_100150068);
  v4 = static os_log_type_t.info.getter(v3);
  sub_10009973C(v4, 0x10uLL, 0xD00000000000001ALL, 0x80000001000E0660, 0xD000000000000022, 0x80000001000E0680);
  v5 = v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate, v6);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 56))(v1, ObjectType);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

Swift::Int __swiftcall Response.getNumberOfSimpleItems()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::Int result;
  Swift::Int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, unint64_t, uint64_t);
  uint64_t v50;
  _BYTE v51[24];
  uint64_t v52;
  _BYTE v53[24];
  uint64_t v54;
  __int128 v55;

  v0 = sub_100076100(&qword_10014F9F8);
  __chkstk_darwin(v0);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100076100(&qword_10014FA00);
  __chkstk_darwin(v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for _ProtoResponse.Component(0);
  v50 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for _ProtoResponse.Section(0);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v42 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Section(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v47 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = Response.sections.getter(v12);
  v41 = *(_QWORD *)(result + 16);
  if (!v41)
  {
    swift_bridgeObjectRelease(result);
    return 0;
  }
  v15 = 0;
  v16 = 0;
  v40 = result + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v37 = v10;
  v39 = v11;
  v38 = result;
  while (1)
  {
    if (v16 >= *(_QWORD *)(result + 16))
      goto LABEL_26;
    v18 = *(_QWORD *)(v11 + 72);
    v46 = v16;
    v19 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v11 + 16))(v47, v40 + v18 * v16, v10);
    v20 = v42;
    v21 = Section.redactedProto.getter(v19);
    v22 = _ProtoResponse.Section.componentList.getter(v21);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v44);
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
      break;
    swift_bridgeObjectRelease(v22);
LABEL_4:
    v17 = v46 + 1;
    v11 = v39;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v47, v10);
    v16 = v17;
    result = v38;
    if (v17 == v41)
    {
      swift_bridgeObjectRelease(v38);
      return v15;
    }
  }
  v24 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v45 = v22;
  v25 = v22 + v24;
  v26 = *(void (**)(char *, unint64_t, uint64_t))(v50 + 16);
  v48 = *(_QWORD *)(v50 + 72);
  v49 = v26;
  v26(v8, v25, v6);
  while (1)
  {
    Component.redactedComponent()(&v55, v6, &protocol witness table for _ProtoResponse.Component);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
    sub_100086D8C((uint64_t)&v55, (uint64_t)v53);
    if (v54)
    {
      v28 = sub_100076100(&qword_10014FA08);
      v29 = type metadata accessor for SimpleItemRich(0);
      v30 = swift_dynamicCast(v5, v53, v28, v29, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, v30 ^ 1u, 1, v29);
    }
    else
    {
      sub_10007A104((uint64_t)v53, &qword_10014F9F0);
      v29 = type metadata accessor for SimpleItemRich(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 1, 1, v29);
    }
    type metadata accessor for SimpleItemRich(0);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v5, 1, v29);
    sub_100086DD4((uint64_t)&v55, (uint64_t)v53);
    if (!v31)
      break;
    sub_100086DD4((uint64_t)v53, (uint64_t)v51);
    if (v52)
    {
      v32 = sub_100076100(&qword_10014FA08);
      v33 = type metadata accessor for SimpleItemStandard(0);
      v34 = swift_dynamicCast(v2, v51, v32, v33, 6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v2, v34 ^ 1u, 1, v33);
    }
    else
    {
      sub_10007A104((uint64_t)v51, &qword_10014F9F0);
      v33 = type metadata accessor for SimpleItemStandard(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v2, 1, 1, v33);
    }
    type metadata accessor for SimpleItemStandard(0);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v2, 1, v33);
    sub_10007A104((uint64_t)v2, &qword_10014F9F8);
    result = sub_10007A104((uint64_t)v5, &qword_10014FA00);
    if (!v35)
      goto LABEL_9;
LABEL_10:
    v25 += v48;
    if (!--v23)
    {
      swift_bridgeObjectRelease(v45);
      v10 = v37;
      goto LABEL_4;
    }
    v49(v8, v25, v6);
  }
  sub_10007A104((uint64_t)v53, &qword_10014F9F0);
  result = sub_10007A104((uint64_t)v5, &qword_10014FA00);
LABEL_9:
  if (!__OFADD__(v15++, 1))
    goto LABEL_10;
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

char *sub_10008675C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100076100((uint64_t *)&unk_10014F8D0);
      v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      *((_QWORD *)v11 + 2) = v8;
      *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
      v14 = v11 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (char *)&_swiftEmptyArrayStorage;
      v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32])
          memmove(v14, a4 + 32, 16 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100087140(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100086868(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100076100(&qword_10014FAD0);
  v11 = *(_QWORD *)(sub_100076100(&qword_10014FAD8) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = sub_100076100(&qword_10014FAD8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100087230(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

uint64_t sub_100086A78(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v15 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_100076100(&qword_10014FB00);
  v11 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
    goto LABEL_29;
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(_QWORD *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }
    else if (v15 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_10008734C(0, v8, v21, a4);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

_QWORD *sub_100086C80(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100076100(&qword_10014FB08);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100087464(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100086D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100076100(&qword_10014F9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100086DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100076100(&qword_10014F9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SRCarPlayVisualResponseViewController()
{
  return objc_opt_self(_TtC4Siri37SRCarPlayVisualResponseViewController);
}

uint64_t sub_100086E3C(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

_QWORD *sub_100086E80(_QWORD *a1)
{
  return sub_100086C80(0, a1[2], 0, a1);
}

uint64_t sub_100086E94(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t ObjectType;
  uint64_t WitnessTable;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = 0;
  v38 = 0xE000000000000000;
  _StringGuts.grow(_:)(77);
  v10._countAndFlagsBits = 0xD000000000000032;
  v10._object = (void *)0x80000001000E0AB0;
  String.append(_:)(v10);
  ObjectType = swift_getObjectType(a1);
  v36 = a1;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, ObjectType);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v36, ObjectType, WitnessTable);
  v13._object = (void *)0x80000001000E0AF0;
  v13._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v13);
  if ((a2 & 1) != 0)
    v14 = 1702195828;
  else
    v14 = 0x65736C6166;
  if ((a2 & 1) != 0)
    v15 = 0xE400000000000000;
  else
    v15 = 0xE500000000000000;
  v16 = v15;
  String.append(_:)(*(Swift::String *)&v14);
  swift_bridgeObjectRelease(v15);
  v17 = v37;
  v18 = v38;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_1000760E8(v19, (uint64_t)qword_100150068);
  v21 = static os_log_type_t.info.getter(v20);
  sub_10009973C(v21, 0x10uLL, 0xD000000000000031, 0x80000001000E0B10, v17, v18);
  swift_bridgeObjectRelease(v18);
  v22 = objc_msgSend((id)objc_opt_self(SRUIFInstrumentationManager), "sharedManager");
  v23 = objc_msgSend(v22, "currentInstrumentationTurnContext");

  v24 = objc_msgSend(v23, "turnIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v24);

  v25 = a3 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate, v26);
  if (Strong)
  {
    v29 = Strong;
    v30 = *(_QWORD *)(v25 + 8);
    v31 = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, char *, uint64_t))(*(_QWORD *)(v30 + 8) + 40))(a3, a1, v9, v31);
    swift_unknownObjectRelease(v29);
  }
  if ((a2 & 1) != 0)
  {
    v32 = (void *)swift_unknownObjectWeakLoadStrong(v25, v28);
    if (v32)
    {
      v33 = v32;
      objc_msgSend(v32, "clearSnippet");
      swift_unknownObjectRelease(v33);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100087140(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100087230(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(sub_100076100(&qword_10014FAD8) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10008734C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 72);
  v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  v12 = v10 * v4;
  v13 = a3 + v12;
  v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_100087464(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10008754C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v1 = v0;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_1000760E8(v2, (uint64_t)qword_100150068);
  v4 = static os_log_type_t.info.getter(v3);
  sub_10009973C(v4, 0x10uLL, 0xD000000000000017, 0x80000001000DE920, 0xD000000000000036, 0x80000001000DE940);
  v5 = v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate, v6);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 24))(v1, ObjectType);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

unint64_t sub_10008763C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FAF0;
  if (!qword_10014FAF0)
  {
    v1 = objc_opt_self(SAAceView);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10014FAF0);
  }
  return result;
}

void sub_100087678()
{
  _UNKNOWN **v0;
  unint64_t v1;
  _UNKNOWN **v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  Class isa;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  id v47;
  id v48;
  id v49;
  NSString v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  Class v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;
  void *object;
  Swift::String v65;
  id v66;
  void *v67;
  uint64_t v68;
  Swift::String v69;
  void *v70;
  Swift::String v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  _UNKNOWN **v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;

  v2 = v0;
  v3 = type metadata accessor for UUID(0);
  v84 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Response(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v85 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v2, "items");
  if (!v9)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v10 = (uint64_t)v9;
  v83 = v3;
  v86 = sub_100076140(0, (unint64_t *)&unk_10014FB10, SAUIListItem_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v86);

  v82 = v5;
  if ((unint64_t)v11 >> 62)
  {
LABEL_14:
    if (v11 < 0)
      v10 = v11;
    else
      v10 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v12 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v11);
    if (v12)
      goto LABEL_4;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
    {
LABEL_4:
      v88 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v12);
      if ((v12 & 0x8000000000000000) == 0)
      {
        v79 = v2;
        v80 = v7;
        v81 = v6;
        v7 = 0;
        v6 = v11 & 0xC000000000000001;
        v2 = NSArray_ptr;
        while (1)
        {
          if (v12 == v7)
          {
            __break(1u);
            goto LABEL_14;
          }
          v13 = v6
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v11)
              : *(id *)(v11 + 8 * v7 + 32);
          v14 = v13;
          v15 = objc_msgSend(objc_allocWithZone((Class)SiriUISnippetManager), "init");
          v16 = objc_msgSend(v15, "disambiguationItemForListItem:disambiguationKey:", v14, 0);

          if (!v16)
            break;
          ++v7;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v1 = v88[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v1);
          v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v16);
          specialized ContiguousArray._endMutation()(v17);
          if (v12 == v7)
          {
            v18 = (uint64_t)v88;
            swift_bridgeObjectRelease(v11);
            v7 = v80;
            v6 = v81;
            v2 = v79;
            goto LABEL_19;
          }
        }
        __break(1u);
        goto LABEL_49;
      }
      __break(1u);
      goto LABEL_44;
    }
  }
  swift_bridgeObjectRelease(v11);
  v18 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_19:
  v19 = objc_msgSend(v2, "items");
  if (!v19)
    goto LABEL_50;
  v20 = v19;
  v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v86);

  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0)
      v60 = v21;
    else
      v60 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v21);
    v22 = _CocoaArrayWrapper.endIndex.getter(v60);
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v21);
  if ((unint64_t)v18 >> 62)
  {
    if (v18 < 0)
      v61 = v18;
    else
      v61 = v18 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v18);
    v23 = _CocoaArrayWrapper.endIndex.getter(v61);
    swift_bridgeObjectRelease(v18);
    if (v22 == v23)
      goto LABEL_24;
LABEL_37:
    v1 = 0xD000000000000019;
    v88 = 0;
    v89 = 0xE000000000000000;
    _StringGuts.grow(_:)(138);
    v62._countAndFlagsBits = 0xD000000000000037;
    v62._object = (void *)0x80000001000E0BD0;
    String.append(_:)(v62);
    swift_bridgeObjectRelease(v18);
    v87 = v23;
    v63._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v63._object;
    String.append(_:)(v63);
    swift_bridgeObjectRelease(object);
    v65._countAndFlagsBits = 0xD000000000000021;
    v65._object = (void *)0x80000001000E0C10;
    String.append(_:)(v65);
    v66 = objc_msgSend(v2, "items");
    if (!v66)
    {
LABEL_52:
      __break(1u);
      return;
    }
    v67 = v66;
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v86);

    if (!((unint64_t)v10 >> 62))
    {
      v68 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_40:
      swift_bridgeObjectRelease(v10);
      v87 = v68;
      v69._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v70 = v69._object;
      String.append(_:)(v69);
      swift_bridgeObjectRelease(v70);
      v71._countAndFlagsBits = v1 + 21;
      v71._object = (void *)0x80000001000E0C60;
      String.append(_:)(v71);
      v73 = (uint64_t)v88;
      v72 = v89;
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v74 = type metadata accessor for Logger(0);
      v75 = sub_1000760E8(v74, (uint64_t)qword_100150068);
      v76 = static os_log_type_t.info.getter(v75);
      sub_10009973C(v76, 0x10uLL, 0xD000000000000019, 0x80000001000E0C40, v73, v72);
      swift_bridgeObjectRelease(v72);
      objc_msgSend(objc_allocWithZone((Class)SAUIVisualResponseSnippet), "init");
      return;
    }
LABEL_44:
    if (v10 < 0)
      v77 = v10;
    else
      v77 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v68 = _CocoaArrayWrapper.endIndex.getter(v77);
    swift_bridgeObjectRelease(v10);
    goto LABEL_40;
  }
  v23 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v22 != v23)
    goto LABEL_37;
LABEL_24:
  v24 = objc_msgSend(v2, "items");
  if (!v24)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v25 = v24;
  v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v24, v86);

  sub_10008823C(v18, v26);
  v28 = v27;
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v18);
  v29 = sub_10007C1B8(v28);
  swift_bridgeObjectRelease(v28);
  Response.init(_:backgrounds:ornaments:hideRedactedElements:)(v29, _swiftEmptyArrayStorage, _swiftEmptyArrayStorage, 0);
  v30 = objc_msgSend(objc_allocWithZone((Class)SAUIVisualResponseSnippet), "init");
  v31 = sub_1000887A0();
  v32 = ProtobufBuilder.serializedData()(v6, v31);
  v34 = v33;
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_10007F3F0(v32, v34);
  v36 = v84;
  objc_msgSend(v30, "setModelData:", isa);

  v37 = v30;
  v38 = objc_msgSend(v2, "aceId");
  if (v38)
  {
    v39 = v38;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
    v41 = v40;

    v42 = v82;
    v43 = v83;
  }
  else
  {
    v42 = v82;
    v44 = UUID.init()();
    UUID.uuidString.getter(v44);
    v41 = v45;
    v43 = v83;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v83);
  }
  v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v41);
  objc_msgSend(v37, "setAceId:", v46);

  v47 = v37;
  v48 = objc_msgSend(v2, "refId");
  objc_msgSend(v47, "setRefId:", v48);

  v49 = v47;
  v50 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setViewId:", v50);

  v51 = objc_msgSend(objc_allocWithZone((Class)SAUIAddViews), "init");
  v52 = UUID.init()();
  UUID.uuidString.getter(v52);
  v54 = v53;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v43);
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v54);
  objc_msgSend(v51, "setAceId:", v55);

  v56 = sub_100076100((uint64_t *)&unk_10014FB20);
  v57 = swift_allocObject(v56, 40, 7);
  *(_OWORD *)(v57 + 16) = xmmword_1000C1710;
  *(_QWORD *)(v57 + 32) = v49;
  v88 = (_QWORD *)v57;
  specialized Array._endMutation()();
  v58 = v88;
  sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
  v49;
  v59 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v58);
  objc_msgSend(v51, "setViews:", v59);

  (*(void (**)(char *, unint64_t))(v7 + 8))(v85, v6);
}

id sub_100087ECC(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id result;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;

  v4 = sub_100076100(&qword_10014FB30);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v39 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v39 - v11;
  v13 = objc_msgSend(a2, "commands");
  if (v13)
  {
    v14 = v13;
    v15 = sub_100076100(&qword_10014FBF0);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  }
  else
  {
    v16 = 0;
  }
  sub_100093E68(v16, (uint64_t)v12);
  swift_bridgeObjectRelease(v16);
  v17 = objc_msgSend(a1, "headingText");
  if (v17)
  {
    v18 = v17;
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v21 = v20;

    v59 = &type metadata for String;
    v60 = &protocol witness table for String;
    v57 = v19;
    v58 = v21;
    v56 = 0;
    v54 = 0u;
    v55 = 0u;
    v22 = objc_msgSend(a1, "title");
    if (v22)
    {
      v23 = v22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v26 = v25;

      *((_QWORD *)&v52 + 1) = &type metadata for String;
      v53 = &protocol witness table for String;
      *(_QWORD *)&v51 = v24;
      *((_QWORD *)&v51 + 1) = v26;
    }
    else
    {
      v53 = 0;
      v51 = 0u;
      v52 = 0u;
    }
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    v44 = 0;
    v42 = 0u;
    v43 = 0u;
    sub_1000887E8((uint64_t)v12, (uint64_t)v10);
    v35 = type metadata accessor for Command(0);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v10, 1, v35) != 1)
    {
      *((_QWORD *)&v40 + 1) = v35;
      v41 = &protocol witness table for Command;
      v37 = sub_10007F4AC(&v39);
      (*(void (**)(_QWORD *, char *, uint64_t))(v36 + 32))(v37, v10, v35);
      goto LABEL_16;
    }
    v34 = (uint64_t)v10;
LABEL_13:
    sub_100088830(v34);
    v39 = 0u;
    v40 = 0u;
    v41 = 0;
LABEL_16:
    SimpleItemStandard.init(text1:text2:text3:text4:text5:text6:action:componentName:linkIdentifier:)(&v57, &v54, &v51, &v48, &v45, &v42, &v39, 0, 0xE000000000000000, 0, 0);
    return (id)sub_100088830((uint64_t)v12);
  }
  result = objc_msgSend(a1, "title");
  if (result)
  {
    v28 = result;
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v31 = v30;

    v59 = &type metadata for String;
    v60 = &protocol witness table for String;
    v57 = v29;
    v58 = v31;
    v56 = 0;
    v54 = 0u;
    v55 = 0u;
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
    v50 = 0;
    v48 = 0u;
    v49 = 0u;
    v47 = 0;
    v45 = 0u;
    v46 = 0u;
    v44 = 0;
    v42 = 0u;
    v43 = 0u;
    sub_1000887E8((uint64_t)v12, (uint64_t)v7);
    v32 = type metadata accessor for Command(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v7, 1, v32) != 1)
    {
      *((_QWORD *)&v40 + 1) = v32;
      v41 = &protocol witness table for Command;
      v38 = sub_10007F4AC(&v39);
      (*(void (**)(_QWORD *, char *, uint64_t))(v33 + 32))(v38, v7, v32);
      goto LABEL_16;
    }
    v34 = (uint64_t)v7;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_10008823C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _QWORD *v49;

  v3 = v2;
  v45 = type metadata accessor for SimpleItemStandard(0);
  v6 = *(_QWORD *)(v45 - 8);
  v7 = __chkstk_darwin(v45);
  v9 = (uint64_t)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (uint64_t)v36 - v10;
  v39 = a1;
  v40 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_3;
  }
  while (1)
  {
    v34 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(a1);
LABEL_3:
    v47 = (unint64_t)a2 >> 62;
    if ((unint64_t)a2 >> 62)
    {
      v35 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v13 = _CocoaArrayWrapper.endIndex.getter(v35);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v14 = v13 >= v12 ? v12 : v13;
    v49 = _swiftEmptyArrayStorage;
    v43 = v14 & ~(v14 >> 63);
    sub_10007E854(0, v43, 0);
    if (v14 < 0)
      break;
    a1 = (uint64_t)v49;
    v36[1] = v3;
    v38 = v11;
    if (!v14)
    {
      v11 = v39;
      v15 = v39 & 0xFFFFFFFFFFFFFF8;
      v48 = v39 & 0xC000000000000001;
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
      v46 = a2 & 0xC000000000000001;
      swift_bridgeObjectRetain(v39);
      swift_bridgeObjectRetain(a2);
      goto LABEL_39;
    }
    if (v40)
    {
      v11 = v39;
      v44 = v39 & 0xFFFFFFFFFFFFFF8;
      if (v39 < 0)
        v17 = v39;
      else
        v17 = v39 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v39, 2);
      swift_bridgeObjectRetain(a2);
      v42 = _CocoaArrayWrapper.endIndex.getter(v17);
      swift_bridgeObjectRelease(v11);
    }
    else
    {
      v11 = v39;
      v44 = v39 & 0xFFFFFFFFFFFFFF8;
      v42 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v39);
      swift_bridgeObjectRetain(a2);
    }
    v18 = 0;
    v48 = v11 & 0xC000000000000001;
    v16 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v19 = a2;
    else
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    v37 = v19;
    v46 = a2 & 0xC000000000000001;
    v41 = v14;
    while (v43 != v18)
    {
      if (v42 == v18)
        goto LABEL_71;
      if (v48)
      {
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v11);
      }
      else
      {
        if (v18 >= *(_QWORD *)(v44 + 16))
          goto LABEL_78;
        v20 = *(id *)(v11 + 8 * v18 + 32);
      }
      v14 = (uint64_t)v20;
      if (v47)
      {
        swift_bridgeObjectRetain(a2);
        v3 = _CocoaArrayWrapper.endIndex.getter(v37);
        swift_bridgeObjectRelease(a2);
      }
      else
      {
        v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v18 == v3)
        goto LABEL_88;
      if (v46)
      {
        v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a2);
      }
      else
      {
        if (v18 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_72;
        v21 = *(id *)(a2 + 8 * v18 + 32);
      }
      v22 = v21;
      sub_100087ECC((void *)v14, v21);

      v49 = (_QWORD *)a1;
      v3 = *(_QWORD *)(a1 + 16);
      v23 = *(_QWORD *)(a1 + 24);
      if (v3 >= v23 >> 1)
      {
        sub_10007E854(v23 > 1, v3 + 1, 1);
        a1 = (uint64_t)v49;
      }
      ++v18;
      *(_QWORD *)(a1 + 16) = v3 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v3, v9, v45);
      v14 = v41;
      if (v41 == v18)
      {
        v15 = v44;
LABEL_39:
        if (v11 < 0)
          v24 = v11;
        else
          v24 = v15;
        v43 = v24;
        v44 = v15;
        if (a2 < 0)
          v25 = a2;
        else
          v25 = v16;
        v42 = v25;
        v9 = v14 + 4;
        if (!v40)
        {
LABEL_46:
          v26 = *(_QWORD *)(v44 + 16);
          goto LABEL_48;
        }
        while (1)
        {
          swift_bridgeObjectRetain(v11);
          v26 = _CocoaArrayWrapper.endIndex.getter(v43);
          swift_bridgeObjectRelease(v11);
LABEL_48:
          v27 = v9 - 4;
          if (v9 - 4 == v26)
          {
            swift_bridgeObjectRelease(a2);
            swift_bridgeObjectRelease(v11);
            return;
          }
          if (v48)
          {
            v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v11);
          }
          else
          {
            if ((v27 & 0x8000000000000000) != 0)
              goto LABEL_73;
            if (v27 >= *(_QWORD *)(v44 + 16))
              goto LABEL_74;
            v28 = *(id *)(v11 + 8 * v9);
          }
          v29 = v28;
          if (__OFADD__(v27, 1))
            goto LABEL_75;
          if (v47)
          {
            swift_bridgeObjectRetain(a2);
            v3 = _CocoaArrayWrapper.endIndex.getter(v42);
            swift_bridgeObjectRelease(a2);
            if (v27 == v3)
            {
LABEL_69:
              swift_bridgeObjectRelease(a2);
              swift_bridgeObjectRelease(v11);

              return;
            }
          }
          else
          {
            v3 = *(_QWORD *)(v16 + 16);
            if (v27 == v3)
              goto LABEL_69;
          }
          if (v46)
          {
            v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, a2);
          }
          else
          {
            if ((v27 & 0x8000000000000000) != 0)
              goto LABEL_76;
            if (v27 >= *(_QWORD *)(v16 + 16))
              goto LABEL_77;
            v30 = *(id *)(a2 + 8 * v9);
          }
          v31 = v30;
          v32 = v38;
          sub_100087ECC(v29, v30);

          v49 = (_QWORD *)a1;
          v3 = *(_QWORD *)(a1 + 16);
          v33 = *(_QWORD *)(a1 + 24);
          if (v3 >= v33 >> 1)
          {
            sub_10007E854(v33 > 1, v3 + 1, 1);
            a1 = (uint64_t)v49;
          }
          *(_QWORD *)(a1 + 16) = v3 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 32))(a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v3, v32, v45);
          ++v9;
          v11 = v39;
          if (!v40)
            goto LABEL_46;
        }
      }
    }
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
  }
  __break(1u);
LABEL_88:

  __break(1u);
}

unint64_t sub_1000887A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FAC8;
  if (!qword_10014FAC8)
  {
    v1 = type metadata accessor for Response(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Response, v1);
    atomic_store(result, (unint64_t *)&qword_10014FAC8);
  }
  return result;
}

uint64_t sub_1000887E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100076100(&qword_10014FB30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100088830(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100076100(&qword_10014FB30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void SiriUISuggestion.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Siri.SiriUISuggestion", 21, "init()", 6, 0);
  __break(1u);
}

id SiriUISuggestion.__deallocating_deinit()
{
  return sub_10007A6E0(0, (uint64_t (*)(void))type metadata accessor for SiriUISuggestion);
}

uint64_t type metadata accessor for SiriUISuggestion(uint64_t a1)
{
  uint64_t result;

  result = qword_10014FB70;
  if (!qword_10014FB70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SiriUISuggestion);
  return result;
}

uint64_t sub_100088C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v8 = type metadata accessor for UUID(0);
  v7[9] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[10] = v9;
  v7[11] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SiriSuggestions.Suggestion(0);
  v7[12] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[13] = v11;
  v7[14] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DeliveryVehicle(0);
  v7[15] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v7[16] = v13;
  v7[17] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100076100(&qword_10014FBD0);
  v7[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PreGeneratedSiriHint(0);
  v7[19] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v7[20] = v16;
  v17 = (*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[21] = swift_task_alloc(v17);
  v7[22] = swift_task_alloc(v17);
  return swift_task_switch(sub_100088D2C, 0, 0);
}

uint64_t sub_100088D2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  type metadata accessor for SiriSuggestionsFacade(0);
  v0[23] = SiriSuggestionsFacade.__allocating_init()();
  v2 = v0[16];
  v1 = v0[17];
  v3 = v0[15];
  v4 = enum case for SiriHintsMode.spoken(_:);
  v5 = type metadata accessor for SiriHintsMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v1, v4, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, enum case for DeliveryVehicle.siriHints(_:), v3);
  v6 = (_QWORD *)swift_task_alloc(async function pointer to SiriSuggestionsFacade.fetchTopPreGeneratedSiriHint(requestUUID:forDeliveryVehicle:timeoutSeconds:)[1]);
  v0[24] = v6;
  *v6 = v0;
  v6[1] = sub_100088F78;
  return SiriSuggestionsFacade.fetchTopPreGeneratedSiriHint(requestUUID:forDeliveryVehicle:timeoutSeconds:)(v0[18], v0[5], v0[17], 0.5);
}

uint64_t sub_100088F78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 136);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 192));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_100088FF4, 0, 0);
}

uint64_t sub_100088FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  Swift::String v16;
  void *object;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(id);

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10007A104(v3, &qword_10014FBD0);
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v4 = *(void (**)(_QWORD))(v0 + 56);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_1000760E8(v5, (uint64_t)qword_100150068);
    v7 = static os_log_type_t.info.getter(v6);
    sub_10009973C(v7, 0, 0xD00000000000002ALL, 0x80000001000E0DD0, 0xD00000000000001FLL, 0x80000001000E0EC0);
    v4(0);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 104);
    v8 = *(_QWORD *)(v0 + 112);
    v10 = *(_QWORD *)(v0 + 88);
    v11 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 72);
    v35 = *(_QWORD *)(v0 + 80);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 176), v3, v1);
    _StringGuts.grow(_:)(27);
    v13 = swift_bridgeObjectRelease(0xE000000000000000);
    v14 = PreGeneratedSiriHint.topHint.getter(v13);
    SiriSuggestions.Suggestion.identifier.getter(v14);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
    v15 = sub_100089CE4();
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v12, v15);
    object = v16._object;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(object);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v10, v12);
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v19 = *(_QWORD *)(v0 + 168);
    v18 = *(_QWORD *)(v0 + 176);
    v20 = *(_QWORD *)(v0 + 152);
    v21 = *(_QWORD *)(v0 + 160);
    v36 = *(void (**)(id))(v0 + 56);
    v22 = *(void **)(v0 + 48);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_1000760E8(v23, (uint64_t)qword_100150068);
    v25 = static os_log_type_t.info.getter(v24);
    sub_10009973C(v25, 0, 0xD00000000000002ALL, 0x80000001000E0DD0, 0xD000000000000019, 0x80000001000E0EE0);
    swift_bridgeObjectRelease(0x80000001000E0EE0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v18, v20);
    v26 = objc_allocWithZone((Class)type metadata accessor for SiriUISuggestion(0));
    v27 = v22;
    v28 = sub_100089684(v19, v27);

    v36(v28);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
  }
  v29 = *(_QWORD *)(v0 + 168);
  v31 = *(_QWORD *)(v0 + 136);
  v30 = *(_QWORD *)(v0 + 144);
  v32 = *(_QWORD *)(v0 + 112);
  v33 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000892FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10007A104(a1, &qword_10014FBA8);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1001249B8, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_10014FBC8, v16);
}

id SiriUISpokenSuggestionsProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriUISpokenSuggestionsProvider();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for SiriUISpokenSuggestionsProvider()
{
  return objc_opt_self(_TtC4Siri31SiriUISpokenSuggestionsProvider);
}

id SiriUISpokenSuggestionsProvider.__deallocating_deinit(uint64_t a1)
{
  return sub_10007A6E0(a1, type metadata accessor for SiriUISpokenSuggestionsProvider);
}

uint64_t sub_100089538()
{
  return type metadata accessor for SiriUISuggestion(0);
}

uint64_t sub_100089540(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_1000C17C8;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for () + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000895D4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_100089638;
  return v6(a1);
}

uint64_t sub_100089638()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

id sub_100089684(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;

  v5 = type metadata accessor for UUID(0);
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  __chkstk_darwin(v5);
  v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SiriSuggestions.SuggestionPresentation(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SiriSuggestions.Suggestion(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri16SiriUISuggestion_addViews] = a2;
  v15 = v2;
  v16 = PreGeneratedSiriHint.topHint.getter(a2);
  SiriSuggestions.Suggestion.presentation.getter(v16);
  v17 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  v18 = v17(v14, v11);
  v19 = SiriSuggestions.SuggestionPresentation.spokenText.getter(v18);
  v21 = v20;
  v22 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v23 = (uint64_t *)&v15[OBJC_IVAR____TtC4Siri16SiriUISuggestion_spokenText];
  *v23 = v19;
  v23[1] = v21;
  v24 = PreGeneratedSiriHint.topHint.getter(v22);
  v25 = v35;
  SiriSuggestions.Suggestion.identifier.getter(v24);
  v17(v14, v11);
  v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v36 + 32))(&v15[OBJC_IVAR____TtC4Siri16SiriUISuggestion_suggestionId], v25, v37);
  v27 = PreGeneratedSiriHint.exposureCallback.getter(v26);
  v28 = (uint64_t *)&v15[OBJC_IVAR____TtC4Siri16SiriUISuggestion_exposureCallback];
  *v28 = v27;
  v28[1] = v29;

  v30 = (objc_class *)type metadata accessor for SiriUISuggestion(0);
  v38.receiver = v15;
  v38.super_class = v30;
  v31 = objc_msgSendSuper2(&v38, "init");
  v32 = type metadata accessor for PreGeneratedSiriHint(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(a1, v32);
  return v31;
}

void sub_100089888(void *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  Swift::String v24;
  unint64_t v25;
  Swift::String v26;
  void *object;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t (**v42)();
  id v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;

  v4 = sub_100076100(&qword_10014FBA8);
  __chkstk_darwin(v4);
  v47 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100076100(&qword_10014F890);
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v9);
  v46 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - v13;
  v15 = swift_allocObject(&unk_100124968, 24, 7);
  *(_QWORD *)(v15 + 16) = a2;
  _Block_copy(a2);
  v48 = a1;
  v16 = objc_msgSend(a1, "refId");
  if (v16)
  {
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v20 = v19;

    UUID.init(uuidString:)(v18, v20);
    swift_bridgeObjectRelease(v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_10007A104((uint64_t)v8, &qword_10014F890);
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v21 = type metadata accessor for Logger(0);
      v22 = sub_1000760E8(v21, (uint64_t)qword_100150068);
      v23 = static os_log_type_t.info.getter(v22);
      sub_10009973C(v23, 0, 0xD00000000000002ALL, 0x80000001000E0DD0, 0xD000000000000027, 0x80000001000E0E00);
      a2[2](a2, 0);
    }
    else
    {
      v45 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v45(v14, v8, v9);
      v49 = 0;
      v50 = 0xE000000000000000;
      _StringGuts.grow(_:)(69);
      v24._countAndFlagsBits = 0xD000000000000043;
      v24._object = (void *)0x80000001000E0E30;
      String.append(_:)(v24);
      v25 = sub_100089CE4();
      v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v9, v25);
      object = v26._object;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(object);
      v28 = v49;
      v29 = v50;
      if (qword_10014ECE0 != -1)
        swift_once(&qword_10014ECE0, sub_100098388);
      v30 = type metadata accessor for Logger(0);
      v31 = sub_1000760E8(v30, (uint64_t)qword_100150068);
      v32 = static os_log_type_t.info.getter(v31);
      sub_10009973C(v32, 0, 0xD00000000000002ALL, 0x80000001000E0DD0, v28, v29);
      swift_bridgeObjectRelease(v29);
      v33 = type metadata accessor for TaskPriority(0);
      v34 = (uint64_t)v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v47, 1, 1, v33);
      v35 = v46;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v46, v14, v9);
      v36 = *(unsigned __int8 *)(v10 + 80);
      v37 = (v36 + 32) & ~v36;
      v38 = (v11 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
      v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
      v40 = swift_allocObject(&unk_100124990, v39 + 16, v36 | 7);
      *(_QWORD *)(v40 + 16) = 0;
      *(_QWORD *)(v40 + 24) = 0;
      v45((char *)(v40 + v37), v35, v9);
      v41 = v48;
      *(_QWORD *)(v40 + v38) = v48;
      v42 = (uint64_t (**)())(v40 + v39);
      *v42 = sub_100089CD4;
      v42[1] = (uint64_t (*)())v15;
      v43 = v41;
      swift_retain(v15);
      v44 = sub_1000892FC(v34, (uint64_t)&unk_10014FBB8, v40);
      swift_release(v44);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    }
    swift_release(v15);
  }
  else
  {
    _Block_release(a2);
    __break(1u);
  }
}

uint64_t sub_100089CB0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100089CD4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

unint64_t sub_100089CE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FAE0;
  if (!qword_10014FAE0)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_10014FAE0);
  }
  return result;
}

uint64_t sub_100089D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 16, v5);
}

uint64_t sub_100089DD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = *(_QWORD *)(v1 + v6);
  v10 = v1 + v5;
  v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  v12 = *v11;
  v13 = v11[1];
  v14 = (_QWORD *)swift_task_alloc(dword_10014FBB4);
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_100089E94;
  return sub_100088C1C(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_100089E94()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100089EDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100089F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_10014FBC4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100089E94;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_10014FBC0 + dword_10014FBC0))(a1, v4);
}

id sub_100089F74()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t);
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  char *v51;
  id v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  Class isa;
  id v82;
  NSString v83;
  void (*v84)(char *, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  char *v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  void *v116;
  void *v117;
  char v118[8];
  _QWORD v119[5];
  _QWORD v120[5];

  v1 = v0;
  v2 = type metadata accessor for Response(0);
  v90 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v89 = (char *)&v86 - v6;
  v7 = type metadata accessor for BinaryButton(0);
  v109 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for Button.LabelStyle(0);
  v88 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v107 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for _ProtoButton.FormAction(0);
  v91 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v105 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for ButtonRole(0);
  v12 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v14 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for Button(0);
  v95 = *(_QWORD *)(v96 - 8);
  v15 = __chkstk_darwin(v96);
  v94 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v93 = (char *)&v86 - v18;
  v19 = __chkstk_darwin(v17);
  v108 = (char *)&v86 - v20;
  __chkstk_darwin(v19);
  v110 = (char *)&v86 - v21;
  v102 = type metadata accessor for SystemTextClarificationTitle(0);
  v101 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v87 = v5;
  v97 = v2;
  v24 = type metadata accessor for Logger(0);
  v25 = sub_1000760E8(v24, (uint64_t)qword_100150068);
  v26 = static os_log_type_t.info.getter(v25);
  sub_10009973C(v26, 0x10uLL, 0xD000000000000019, 0x80000001000E0C40, 0xD00000000000003ELL, 0x80000001000E0F00);
  v27 = objc_msgSend(v1, "subtitle");
  if (v27 || (v27 = objc_msgSend(v1, "title")) != 0)
  {
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v30 = v29;

  }
  else
  {
    v28 = 0;
    v30 = 0xE000000000000000;
  }
  v120[3] = &type metadata for String;
  v120[4] = &protocol witness table for String;
  v92 = v28;
  v120[0] = v28;
  v120[1] = v30;
  memset(v119, 0, sizeof(v119));
  swift_bridgeObjectRetain(v30);
  SystemTextClarificationTitle.init(text1:action:)(v120, v119);
  v31 = objc_msgSend(v1, "confirmCommands");
  if (v31)
  {
    v32 = v31;
    v33 = sub_100076100(&qword_10014FBF0);
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v33);

  }
  else
  {
    v34 = 0;
  }
  sub_10008AA0C(v34, v120);
  swift_bridgeObjectRelease(v34);
  v35 = objc_msgSend(v1, "denyCommands");
  v100 = v23;
  if (v35)
  {
    v36 = v35;
    v37 = sub_100076100(&qword_10014FBF0);
    v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

  }
  else
  {
    v38 = 0;
  }
  sub_10008AA0C(v38, v119);
  swift_bridgeObjectRelease(v38);
  sub_100084480((uint64_t)v120, (uint64_t)v118);
  v39 = objc_msgSend(v1, "confirmText");
  v99 = v7;
  v98 = v9;
  if (v39)
  {
    v40 = v39;
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v43 = v42;

    v116 = &type metadata for String;
    v117 = &protocol witness table for String;
    if (v43)
      goto LABEL_17;
    v41 = 0;
  }
  else
  {
    v41 = 0;
    v116 = &type metadata for String;
    v117 = &protocol witness table for String;
  }
  v43 = 0xE000000000000000;
LABEL_17:
  v44 = v88;
  v114 = v41;
  v115 = v43;
  v113 = 0;
  v112 = 0u;
  v111 = 0u;
  v45 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v45(v14, enum case for ButtonRole.preferred(_:), v103);
  v46 = enum case for _ProtoButton.FormAction.none(_:);
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 104);
  v48 = v105;
  v47(v105, enum case for _ProtoButton.FormAction.none(_:), v104);
  v49 = enum case for Button.LabelStyle.automatic(_:);
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 104);
  v51 = v107;
  v50(v107, enum case for Button.LabelStyle.automatic(_:), v106);
  Button.init(action:label:thumbnail:formAction:labelStyle:buttonRole:componentName:linkIdentifier:)(v118, &v114, &v111, v48, v51, v14, 0, 0xE000000000000000, 0, 0);
  sub_100084480((uint64_t)v119, (uint64_t)v118);
  v52 = objc_msgSend(v1, "denyText");
  if (v52)
  {
    v53 = v52;
    v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
    v56 = v55;

    v116 = &type metadata for String;
    v117 = &protocol witness table for String;
    if (v56)
      goto LABEL_22;
    v54 = 0;
  }
  else
  {
    v54 = 0;
    v116 = &type metadata for String;
    v117 = &protocol witness table for String;
  }
  v56 = 0xE000000000000000;
LABEL_22:
  v57 = v89;
  v114 = v54;
  v115 = v56;
  v113 = 0;
  v112 = 0u;
  v111 = 0u;
  v58 = v105;
  v47(v105, v46, v104);
  v59 = v107;
  v50(v107, v49, v106);
  v45(v14, enum case for ButtonRole.standard(_:), v103);
  v60 = v108;
  Button.init(action:label:thumbnail:formAction:labelStyle:buttonRole:componentName:linkIdentifier:)(v118, &v114, &v111, v58, v59, v14, 0, 0xE000000000000000, 0, 0);
  v61 = v95;
  v62 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v63 = v93;
  v64 = v96;
  v62(v93, v110, v96);
  v65 = v94;
  v62(v94, v60, v64);
  v66 = v98;
  BinaryButton.init(primaryButton:secondaryButton:componentName:linkIdentifier:)(v63, v65, 0xD000000000000020, 0x80000001000E0F40, 0, 0);
  v67 = objc_msgSend(objc_allocWithZone((Class)SAUIVisualResponseSnippet), "init");
  swift_bridgeObjectRelease(v30);
  if ((v30 & 0x2000000000000000) != 0)
    v68 = HIBYTE(v30) & 0xF;
  else
    v68 = v92 & 0xFFFFFFFFFFFFLL;
  v69 = sub_100076100((uint64_t *)&unk_10014FBE0);
  if (v68)
  {
    v70 = swift_allocObject(v69, 112, 7);
    *(_OWORD *)(v70 + 16) = xmmword_1000C1800;
    v71 = v102;
    *(_QWORD *)(v70 + 56) = v102;
    *(_QWORD *)(v70 + 64) = &protocol witness table for SystemTextClarificationTitle;
    v72 = sub_10007F4AC((_QWORD *)(v70 + 32));
    (*(void (**)(_QWORD *, char *, uint64_t))(v101 + 16))(v72, v100, v71);
    v73 = v99;
    *(_QWORD *)(v70 + 96) = v99;
    *(_QWORD *)(v70 + 104) = &protocol witness table for BinaryButton;
    v74 = sub_10007F4AC((_QWORD *)(v70 + 72));
    (*(void (**)(_QWORD *, char *, uint64_t))(v109 + 16))(v74, v66, v73);
    v57 = v87;
  }
  else
  {
    v70 = swift_allocObject(v69, 72, 7);
    *(_OWORD *)(v70 + 16) = xmmword_1000C1810;
    v73 = v99;
    *(_QWORD *)(v70 + 56) = v99;
    *(_QWORD *)(v70 + 64) = &protocol witness table for BinaryButton;
    v75 = sub_10007F4AC((_QWORD *)(v70 + 32));
    (*(void (**)(_QWORD *, char *, uint64_t))(v109 + 16))(v75, v66, v73);
  }
  Response.init(_:backgrounds:ornaments:hideRedactedElements:)(v70, _swiftEmptyArrayStorage, _swiftEmptyArrayStorage, 0);
  v76 = sub_10007A47C((unint64_t *)&qword_10014FAC8, (uint64_t (*)(uint64_t))&type metadata accessor for Response, (uint64_t)&protocol conformance descriptor for Response);
  v77 = v97;
  v78 = ProtobufBuilder.serializedData()(v97, v76);
  v80 = v79;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v77);
  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_10007F3F0(v78, v80);
  objc_msgSend(v67, "setModelData:", isa);

  v82 = v67;
  v83 = String._bridgeToObjectiveC()();
  objc_msgSend(v82, "setViewId:", v83);

  (*(void (**)(char *, uint64_t))(v109 + 8))(v66, v73);
  v84 = *(void (**)(char *, uint64_t))(v61 + 8);
  v84(v108, v64);
  v84(v110, v64);
  sub_10007F48C(v119);
  sub_10007F48C(v120);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
  return v82;
}

uint64_t sub_10008AA0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, _QWORD, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  uint64_t v34;

  v4 = type metadata accessor for Command(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v33 - v9;
  v11 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v11((char *)&v33 - v9, enum case for Command.noOp(_:), v4);
  if (!a1)
    goto LABEL_15;
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v12)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease(a1);
LABEL_15:
    v19 = sub_100076100(&qword_10014FBF8);
    v20 = swift_allocObject(v19, 72, 7);
    v33 = xmmword_1000C1810;
    *(_OWORD *)(v20 + 16) = xmmword_1000C1810;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    v21 = sub_100076100(&qword_10014FC00);
    v22 = type metadata accessor for _ProtoIdiom(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(_QWORD *)(v23 + 72);
    v25 = *(unsigned __int8 *)(v23 + 80);
    v34 = v4;
    v26 = v5;
    v27 = v8;
    v28 = a2;
    v29 = (v25 + 32) & ~v25;
    v30 = swift_allocObject(v21, v29 + v24, v25 | 7);
    *(_OWORD *)(v30 + 16) = v33;
    v31 = v30 + v29;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 104))(v31, enum case for _ProtoIdiom.default(_:), v22);
    v32 = sub_10008AD0C(v30);
    swift_setDeallocating(v30);
    swift_arrayDestroy(v31, 1, v22);
    swift_deallocClassInstance(v30, 32, 7);
    *(_QWORD *)(v20 + 56) = type metadata accessor for ActionElement(0);
    *(_QWORD *)(v20 + 64) = &protocol witness table for ActionElement;
    sub_10007F4AC((_QWORD *)(v20 + 32));
    ActionElement.init(_:text:idioms:)(v27, _swiftEmptyArrayStorage, v32);
    v28[3] = type metadata accessor for ActionProperty(0);
    v28[4] = &protocol witness table for ActionProperty;
    sub_10007F4AC(v28);
    ActionProperty.init(_:)(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v34);
  }
  if (a1 >= 0)
    v18 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v18 = a1;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!result)
    goto LABEL_14;
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_7:
    swift_bridgeObjectRelease(a1);
    v15 = objc_opt_self(SABaseCommand);
    v16 = swift_dynamicCastObjCClass(v14, v15);
    if (v16)
    {
      v17 = v16;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      *(_QWORD *)v10 = v17;
      v10[8] = 1;
      v11(v10, enum case for Command.aceCommand(_:), v4);
    }
    else
    {
      swift_unknownObjectRelease(v14);
    }
    goto LABEL_15;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(a1 + 32);
    swift_unknownObjectRetain(v14);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *sub_10008AD0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void *result;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;

  v2 = type metadata accessor for _ProtoIdiom(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v31 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_100076100(&qword_10014FC08);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v32 = v9;
    v33 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v36 = v10 + 56;
    v35(v8, v33, v2);
    while (1)
    {
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_10007A47C(&qword_10014FC10, (uint64_t (*)(uint64_t))&type metadata accessor for _ProtoIdiom, (uint64_t)&protocol conformance descriptor for _ProtoIdiom);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = -1 << *(_BYTE *)(v10 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      v20 = *(_QWORD *)(v36 + 8 * (v18 >> 6));
      v21 = 1 << v18;
      if (((1 << v18) & v20) != 0)
      {
        v34 = v11;
        v22 = ~v17;
        do
        {
          v35(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v23 = sub_10007A47C(&qword_10014FC18, (uint64_t (*)(uint64_t))&type metadata accessor for _ProtoIdiom, (uint64_t)&protocol conformance descriptor for _ProtoIdiom);
          v24 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v23);
          v25 = v3;
          v26 = *(void (**)(char *, uint64_t))(v3 + 8);
          v26(v6, v2);
          if ((v24 & 1) != 0)
          {
            v26(v8, v2);
            v3 = v25;
            v9 = v32;
            v11 = v34;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v22;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v36 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v25;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v32;
        v11 = v34;
      }
      *(_QWORD *)(v36 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v28 = *(_QWORD *)(v10 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
        break;
      *(_QWORD *)(v10 + 16) = v30;
LABEL_4:
      if (++v11 == v9)
        return (void *)v10;
      v35(v8, v33 + v13 * v11, v2);
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

void sub_10008B048()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  id v21;
  id v22;
  void *v23;
  char **v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  char **v29;
  id v30;
  objc_super v31;

  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  objc_msgSendSuper2(&v31, "viewWillLayoutSubviews");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = type metadata accessor for SRCarPlayScrollView();
    v4 = (char *)swift_dynamicCastClass(v2, v3);
    if (v4)
    {
      v6 = v4;
      v7 = objc_msgSend(v4, "accessoryViewAtEdge:", (*((_BYTE *)v0 + OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive) ^ ~SiriLanguageIsRTL(v4, v5)) & 1);
      if (v7)
      {
        v8 = v7;
        v9 = objc_opt_self(_UIStaticScrollBar);
        v10 = swift_dynamicCastObjCClass(v8, v9);
        if (v10)
        {
          v11 = (void *)v10;
          objc_msgSend(v6, "setDelegate:", v0);
          v12 = objc_msgSend(v11, "upButton");
          v13 = objc_msgSend(v11, "downButton");
          v14 = v13;
          if (v12)
          {
            if (v13)
            {
              v15 = qword_10014ECE0;
              v16 = v12;
              v17 = v14;
              if (v15 != -1)
                swift_once(&qword_10014ECE0, sub_100098388);
              v18 = type metadata accessor for Logger(0);
              v19 = sub_1000760E8(v18, (uint64_t)qword_100150068);
              v20 = static os_log_type_t.info.getter(v19);
              sub_10009973C(v20, 0x10uLL, 0xD000000000000018, 0x80000001000E11F0, 0xD000000000000030, 0x80000001000E1210);
              v21 = objc_msgSend(v6, "traitCollection");
              v22 = objc_msgSend(v21, "userInterfaceStyle");

              v23 = (void *)objc_opt_self(UIColor);
              v24 = &selRef_blackColor;
              if (v22 != (id)1)
                v24 = &selRef_whiteColor;
              v25 = objc_msgSend(v23, *v24);
              objc_msgSend(v16, "setTintColor:", v25);

              objc_msgSend(v16, "setAlpha:", 0.5);
              v26 = objc_msgSend(v6, "traitCollection");
              v27 = objc_msgSend(v26, "userInterfaceStyle");

              v28 = (void *)objc_opt_self(UIColor);
              v29 = &selRef_blackColor;
              if (v27 != (id)1)
                v29 = &selRef_whiteColor;
              v30 = objc_msgSend(v28, *v29);
              objc_msgSend(v17, "setTintColor:", v30);

              objc_msgSend(v17, "setAlpha:", 0.5);
              *(_QWORD *)&v6[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0x4041000000000000;
              sub_10008B41C();

              goto LABEL_19;
            }
          }
          else
          {
            v12 = v8;
            v8 = v13;
          }

        }
      }
      *(_QWORD *)&v6[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0;
      sub_10008B41C();
    }
    v16 = v2;
LABEL_19:

  }
}

id sub_10008B3F0()
{
  return sub_10008C0F0(type metadata accessor for SRCarPlayScrollViewController);
}

uint64_t type metadata accessor for SRCarPlayScrollViewController()
{
  return objc_opt_self(_TtC4Siri29SRCarPlayScrollViewController);
}

id sub_10008B41C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  int v5;
  id v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  int v11;
  id v12;
  uint64_t v13;
  void *v14;
  double v15;

  v1 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset;
  v2 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isRightHandDrive;
  v3 = -0.5;
  if (v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isRightHandDrive])
    v3 = 0.5;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint], "setConstant:", *(double *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] * v3);
  v4 = *(double *)&v0[v1];
  v5 = v0[v2];
  v6 = *(id *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint];
  v8 = v6;
  if (v5 != 1 || (v9 = 1.0, SiriLanguageIsRTL(v6, v7)))
    v9 = 0.0;
  objc_msgSend(v8, "setConstant:", v4 * v9);

  v10 = *(double *)&v0[v1];
  v11 = v0[v2];
  v12 = *(id *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint];
  v14 = v12;
  if (v11 != 1 || (v15 = -1.0, (SiriLanguageIsRTL(v12, v13) & 1) == 0))
    v15 = 0.0;
  objc_msgSend(v14, "setConstant:", v10 * v15);

  return objc_msgSend(v0, "setNeedsUpdateConstraints");
}

char *sub_10008B52C(char a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  double v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  double v22;
  id v23;
  id v24;
  double v25;
  id v26;
  id v27;
  double v28;
  id v29;
  id v30;
  double v31;
  id v32;
  id v33;
  double v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  Class isa;
  uint64_t v48;
  objc_super v49;

  *(_QWORD *)&v1[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet] = 0;
  v1[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen] = 0;
  v3 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint;
  v4 = objc_allocWithZone((Class)NSLayoutConstraint);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v7 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v8 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v9 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v10 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0;
  v11 = &v5[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
  *v11 = 0;
  v11[1] = 0;
  v5[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isRightHandDrive] = a1;

  v49.receiver = v5;
  v49.super_class = (Class)type metadata accessor for SRCarPlayScrollView();
  v12 = (char *)objc_msgSendSuper2(&v49, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setBouncesHorizontally:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = objc_msgSend(v12, "widthAnchor");
  v14 = objc_msgSend(v13, "constraintEqualToConstant:", 0.0);

  v15 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint;
  v16 = *(void **)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint];
  *(_QWORD *)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint] = v14;

  LODWORD(v17) = 1132068864;
  objc_msgSend(*(id *)&v12[v15], "setPriority:", v17);
  v18 = objc_msgSend(v12, "heightAnchor");
  v19 = objc_msgSend(v18, "constraintEqualToConstant:", 0.0);

  v20 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint;
  v21 = *(void **)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint];
  *(_QWORD *)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint] = v19;

  LODWORD(v22) = 1132068864;
  objc_msgSend(*(id *)&v12[v20], "setPriority:", v22);
  v23 = objc_msgSend(v12, "widthAnchor");
  v24 = objc_msgSend(v23, "constraintLessThanOrEqualToConstant:", 331.0);

  LODWORD(v25) = 1144750080;
  objc_msgSend(v24, "setPriority:", v25);
  v26 = objc_msgSend(v12, "widthAnchor");
  v27 = objc_msgSend(v26, "constraintGreaterThanOrEqualToConstant:", 331.0);

  LODWORD(v28) = 1144750080;
  objc_msgSend(v27, "setPriority:", v28);
  v29 = objc_msgSend(v12, "heightAnchor");
  v30 = objc_msgSend(v29, "constraintLessThanOrEqualToConstant:", 274.0);

  LODWORD(v31) = 1144750080;
  objc_msgSend(v30, "setPriority:", v31);
  v32 = objc_msgSend(v12, "heightAnchor");
  v33 = objc_msgSend(v32, "constraintGreaterThanOrEqualToConstant:", 0.0);

  LODWORD(v34) = 1144750080;
  objc_msgSend(v30, "setPriority:", v34);
  v35 = (void *)objc_opt_self(NSLayoutConstraint);
  v36 = sub_100076100((uint64_t *)&unk_10014FB20);
  v37 = swift_allocObject(v36, 80, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1000C1820;
  v38 = *(void **)&v12[v15];
  *(_QWORD *)(v37 + 32) = v38;
  v39 = *(void **)&v12[v20];
  *(_QWORD *)(v37 + 40) = v39;
  *(_QWORD *)(v37 + 48) = v24;
  *(_QWORD *)(v37 + 56) = v27;
  *(_QWORD *)(v37 + 64) = v30;
  *(_QWORD *)(v37 + 72) = v33;
  v48 = v37;
  specialized Array._endMutation()(v37);
  sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
  v40 = v38;
  v41 = v39;
  v42 = v24;
  v43 = v27;
  v44 = v30;
  v45 = v33;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v48);
  objc_msgSend(v35, "activateConstraints:", isa);

  return v12;
}

void sub_10008B9E0(void *a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  id v8;
  Class isa;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  Class v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  char v54;

  v3 = v2;
  v6 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet;
  v7 = *(void **)&v2[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet];
  if (v7)
  {
    v8 = v7;
    isa = (Class)objc_msgSend(v8, "constraints");
    if (!isa)
    {
      v10 = sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
      v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v10);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v11);
    }
    objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "deactivateConstraints:", isa);

    objc_msgSend(v8, "removeFromSuperview");
  }
  if (a1)
  {
    v12 = a1;
    objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v3, "addSubview:", v12);
    v13 = objc_msgSend(v12, "heightAnchor");
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint], "constant");
    v14 = objc_msgSend(v13, "constraintEqualToConstant:");

    v53 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint;
    v15 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint];
    *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint] = v14;

    v16 = objc_msgSend(v12, "centerXAnchor");
    v17 = objc_msgSend(v3, "centerXAnchor");
    v54 = a2;
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    v19 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint;
    v20 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint];
    *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint] = v18;

    v21 = objc_msgSend(v12, "leadingAnchor");
    v22 = objc_msgSend(v3, "leadingAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    v24 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint;
    v25 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint];
    *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint] = v23;

    v26 = objc_msgSend(v12, "trailingAnchor");
    v27 = objc_msgSend(v3, "trailingAnchor");
    v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

    v29 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint;
    v30 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint];
    *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint] = v28;

    v52 = (id)objc_opt_self(NSLayoutConstraint);
    v31 = sub_100076100((uint64_t *)&unk_10014FB20);
    v32 = swift_allocObject(v31, 80, 7);
    v33 = *(void **)&v3[v19];
    v34 = *(void **)&v3[v24];
    *(_OWORD *)(v32 + 16) = xmmword_1000C1820;
    *(_QWORD *)(v32 + 32) = v33;
    *(_QWORD *)(v32 + 40) = v34;
    v35 = *(void **)&v3[v29];
    *(_QWORD *)(v32 + 48) = v35;
    v36 = v33;
    v37 = v34;
    v38 = v35;
    v39 = objc_msgSend(v12, "topAnchor");
    v40 = objc_msgSend(v3, "contentLayoutGuide");
    v41 = objc_msgSend(v40, "topAnchor");

    v42 = objc_msgSend(v39, "constraintEqualToAnchor:", v41);
    *(_QWORD *)(v32 + 56) = v42;
    v43 = objc_msgSend(v12, "bottomAnchor");
    v44 = objc_msgSend(v3, "contentLayoutGuide");
    v45 = objc_msgSend(v44, "bottomAnchor");

    v46 = objc_msgSend(v43, "constraintEqualToAnchor:", v45);
    v47 = *(void **)&v3[v53];
    *(_QWORD *)(v32 + 64) = v46;
    *(_QWORD *)(v32 + 72) = v47;
    specialized Array._endMutation()();
    sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
    v48 = v47;
    v49 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    objc_msgSend(v52, "activateConstraints:", v49);

    a2 = v54;
  }
  v50 = *(void **)&v3[v6];
  *(_QWORD *)&v3[v6] = a1;
  v51 = a1;

  v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen] = a2 & 1;
}

void sub_10008BEF0()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet];
  if (!v1)
  {
    v10 = sub_100076100((uint64_t *)&unk_10014FB20);
    v11 = swift_allocObject(v10, 40, 7);
    *(_OWORD *)(v11 + 16) = xmmword_1000C1710;
    *(_QWORD *)(v11 + 32) = v0;
    specialized Array._endMutation()(v11);
    v12 = v0;
    return;
  }
  v2 = v1;
  v3 = objc_msgSend(v2, "subviews");
  v4 = sub_100076140(0, &qword_10014FD48, UIView_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v5);
    if (v14)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease(v5);
    v15 = sub_100076100((uint64_t *)&unk_10014FB20);
    v16 = swift_allocObject(v15, 40, 7);
    *(_OWORD *)(v16 + 16) = xmmword_1000C1710;
    *(_QWORD *)(v16 + 32) = v2;
    specialized Array._endMutation()(v16);
    return;
  }
  if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
LABEL_7:
    v7 = v6;
    swift_bridgeObjectRelease(v5);
    v8 = sub_100076100((uint64_t *)&unk_10014FB20);
    v9 = swift_allocObject(v8, 40, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1000C1710;
    *(_QWORD *)(v9 + 32) = v7;
    specialized Array._endMutation()(v9);

    return;
  }
  __break(1u);
}

id sub_10008C0E4()
{
  return sub_10008C0F0(type metadata accessor for SRCarPlayScrollView);
}

id sub_10008C0F0(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for SRCarPlayScrollView()
{
  return objc_opt_self(_TtC4Siri19SRCarPlayScrollView);
}

void sub_10008C1C8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet] = 0;
  v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen] = 0;
  v1 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v2 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v3 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v4 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v5 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v6 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0;
  v7 = &v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
  *v7 = 0;
  v7[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000E1170, "Siri/SRCarPlayScrollViewController.swift", 40, 2, 123, 0);
  __break(1u);
}

void sub_10008C310(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  void (*v17)(uint64_t, unint64_t, _QWORD, uint64_t, uint64_t);
  id v18;
  char **v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t WitnessTable;
  Swift::String v42;
  void *object;
  Swift::String v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t Strong;
  char *v51;
  uint64_t v52;
  char **v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  unint64_t v65;
  unint64_t v66;
  char v67[24];

  v62 = a2;
  v6 = type metadata accessor for UUID(0);
  v55 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v54 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100076100((uint64_t *)&unk_10014FDB0);
  v9 = __chkstk_darwin(v8);
  v63 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (void **)((char *)&v52 - v11);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking) = 0;
  v57 = v3;
  v13 = (_QWORD *)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v14)
  {
    v15 = v13[1];
    ObjectType = swift_getObjectType(*v13);
    v17 = *(void (**)(uint64_t, unint64_t, _QWORD, uint64_t, uint64_t))(v15 + 32);
    v18 = v14;
    v17(a1, v62, a3 & 1, ObjectType, v15);

  }
  if ((a3 & 1) != 0)
  {
    v19 = (char **)(v57 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
    swift_beginAccess(v57 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands, v67, 1, 0);
    v20 = *v19;
    if (*v19)
    {
      v53 = v19;
      v21 = 0xD000000000000039;
      v65 = 0;
      v66 = 0xE000000000000000;
      swift_bridgeObjectRetain(v20);
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease(v66);
      v65 = 0xD000000000000019;
      v66 = 0x80000001000E13B0;
      swift_bridgeObjectRetain(v20);
      v22 = sub_100076100(&qword_10014FAD8);
      v23 = Array.description.getter(v20, v22);
      v25 = v24;
      swift_bridgeObjectRelease(v20);
      v26._countAndFlagsBits = v23;
      v26._object = v25;
      String.append(_:)(v26);
      swift_bridgeObjectRelease(v25);
      v27._countAndFlagsBits = 46;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      v29 = v65;
      v28 = (void *)v66;
      if (qword_10014ECE0 != -1)
LABEL_18:
        swift_once(&qword_10014ECE0, sub_100098388);
      v30 = type metadata accessor for Logger(0);
      v31 = sub_1000760E8(v30, (uint64_t)qword_100150068);
      v32 = static os_log_type_t.info.getter(v31);
      v60 = (unint64_t)"elayed Ace commands ";
      v61 = v31;
      sub_10009973C(v32, 0x10uLL, 0xD000000000000039, 0x80000001000E1370, v29, (unint64_t)v28);
      swift_bridgeObjectRelease(v28);
      v33 = 0;
      v56 = v20;
      v62 = *((_QWORD *)v20 + 2);
      v34 = v57 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
      v58 = 0x80000001000E13D0;
      v59 = v21 - 26;
      v20 = v54;
      v35 = v55;
      while (1)
      {
        v21 = v62;
        v29 = v63;
        if (v33 == v62)
        {
          v39 = *(_QWORD *)(v22 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v63, 1, 1, v22);
          v33 = v21;
        }
        else
        {
          if (v33 >= *((_QWORD *)v56 + 2))
          {
            __break(1u);
            goto LABEL_18;
          }
          v39 = *(_QWORD *)(v22 - 8);
          sub_10007A188((uint64_t)&v56[((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v33++], v63, &qword_10014FAD8);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v29, 0, 1, v22);
        }
        sub_10008F41C(v29, (uint64_t)v12, (uint64_t *)&unk_10014FDB0);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v39 + 48))(v12, 1, v22) == 1)
          break;
        v28 = *v12;
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v20, (char *)v12 + *(int *)(v22 + 48), v6);
        v65 = 0;
        v66 = 0xE000000000000000;
        _StringGuts.grow(_:)(34);
        swift_bridgeObjectRelease(v66);
        v65 = v59;
        v66 = v58;
        v40 = swift_getObjectType(v28);
        v64 = v28;
        WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v40);
        v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v40, WitnessTable);
        object = v42._object;
        String.append(_:)(v42);
        swift_bridgeObjectRelease(object);
        v44._countAndFlagsBits = 46;
        v44._object = (void *)0xE100000000000000;
        String.append(_:)(v44);
        v45 = v65;
        v46 = v66;
        v48 = static os_log_type_t.info.getter(v47);
        sub_10009973C(v48, 0x10uLL, 0xD000000000000039, v60 | 0x8000000000000000, v45, v46);
        swift_bridgeObjectRelease(v46);
        Strong = swift_unknownObjectWeakLoadStrong(v34, v49);
        if (Strong)
        {
          v36 = Strong;
          v37 = *(_QWORD *)(v34 + 8);
          v38 = swift_getObjectType(Strong);
          (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v37 + 40))(v57, v28, v20, v38, v37);

          swift_unknownObjectRelease(v36);
          (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v6);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v6);

        }
      }
      swift_bridgeObjectRelease(v56);
      v51 = *v53;
      *v53 = 0;
      swift_bridgeObjectRelease(v51);
    }
  }
}

void sub_10008C7E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::String v4;
  uint64_t *v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(void *, uint64_t, uint64_t);
  id v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  unint64_t v26;

  v2 = v1;
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(71);
  v25 = 0;
  v26 = 0xE000000000000000;
  v4._countAndFlagsBits = 0xD000000000000044;
  v4._object = (void *)0x80000001000E1320;
  String.append(_:)(v4);
  v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
  swift_beginAccess(v1 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands, v24, 1, 0);
  v23 = *v5;
  swift_bridgeObjectRetain(v23);
  v6 = sub_100076100(&qword_10014FDA8);
  v7._countAndFlagsBits = String.init<A>(describing:)(&v23, v6);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 46;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10 = v25;
  v11 = v26;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_1000760E8(v12, (uint64_t)qword_100150068);
  v14 = static os_log_type_t.info.getter(v13);
  sub_10009973C(v14, 0x10uLL, 0xD00000000000001BLL, 0x80000001000E1300, v10, v11);
  swift_bridgeObjectRelease(v11);
  v15 = *v5;
  *v5 = 0;
  swift_bridgeObjectRelease(v15);
  v16 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions) = a1;
  v17 = a1;

  v18 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v18)
  {
    v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    ObjectType = swift_getObjectType(v18);
    v21 = *(void (**)(void *, uint64_t, uint64_t))(v19 + 72);
    v22 = v18;
    v21(a1, ObjectType, v19);

  }
}

uint64_t (*sub_10008C9A8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_10008CD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  _BYTE v52[112];
  _QWORD v53[2];
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  _QWORD v64[3];

  v3 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v3, a2);
  v5 = *(_QWORD *)(v3 + 8);
  objc_allocWithZone((Class)type metadata accessor for SRCarPlaySiriUnavailableViewController(0));
  v53[0] = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012, 0x80000001000E1850);
  v53[1] = v6;
  v54 = v7 & 1;
  v55 = v8;
  v56 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000023, 0x80000001000E1870);
  v57 = v9;
  v58 = v10 & 1;
  v59 = v11;
  v60 = LocalizedStringKey.init(stringLiteral:)(0x7373696D736944, 0xE700000000000000);
  v61 = v12;
  v62 = v13 & 1;
  v63 = v14;
  v64[1] = v5;
  swift_unknownObjectWeakInit(v64, Strong, v13);
  sub_1000788D0((uint64_t)v53, (uint64_t)v52);
  v15 = (id)UIHostingController.init(rootView:)(v52);
  v16 = objc_msgSend(v15, "view");
  if (!v16)
  {
    __break(1u);
    goto LABEL_12;
  }
  v17 = v16;
  v18 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  v19 = objc_msgSend(v15, "view");
  if (!v19)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(v19, "setAutoresizingMask:", 18);
  swift_unknownObjectRelease(Strong);

  sub_10008F49C(v53);
  v20 = objc_msgSend((id)objc_opt_self(MTMaterialView), "materialViewWithRecipe:", 52);
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v21 = v20;
  objc_msgSend(v20, "setAutoresizingMask:", 18);
  v22 = objc_msgSend(v51, "view");
  if (!v22)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v23 = v22;
  objc_msgSend(v22, "addSubview:", v21);

  v24 = v21;
  v25 = objc_msgSend(v51, "view");
  if (!v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v26 = v25;
  objc_msgSend(v25, "bounds");
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;

  objc_msgSend(v24, "setFrame:", v28, v30, v32, v34);
  objc_msgSend(v51, "addChildViewController:", v15);
  v35 = objc_msgSend(v51, "view");
  if (!v35)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v36 = v35;
  v37 = objc_msgSend(v15, "view");
  if (!v37)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v38 = v37;
  objc_msgSend(v36, "addSubview:", v37);

  objc_msgSend(v15, "didMoveToParentViewController:", v51);
  v39 = objc_msgSend(v15, "view");
  if (!v39)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v40 = v39;
  v41 = objc_msgSend(v51, "view");
  if (v41)
  {
    v42 = v41;
    objc_msgSend(v41, "bounds");
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v50 = v49;

    objc_msgSend(v40, "setFrame:", v44, v46, v48, v50);
    return;
  }
LABEL_19:
  __break(1u);
}

void sub_10008D0F8(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  char v18;
  uint64_t v19;
  char v20;
  _BYTE *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  char v28;
  _BYTE *v29;
  void *v30;
  _UNKNOWN **v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  char v39;
  char *v40;
  Swift::String v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  os_log_type_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v2 = v1;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(0xE000000000000000);
  v57 = 0xD00000000000001DLL;
  v58 = 0x80000001000E15D0;
  v4 = objc_msgSend(a1, "description");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_1000760E8(v9, (uint64_t)qword_100150068);
  v11 = static os_log_type_t.info.getter(v10);
  sub_10009973C(v11, 0x10uLL, 0xD00000000000001ALL, 0x80000001000E15B0, 0xD00000000000001DLL, 0x80000001000E15D0);
  swift_bridgeObjectRelease(0x80000001000E15D0);
  v12 = objc_opt_self(SAUIVisualResponseSnippet);
  v13 = swift_dynamicCastObjCClass(a1, v12);
  if (v13)
  {
    v14 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions];
    if (v14)
    {
      v15 = (void *)v13;
      v16 = a1;
      v17 = v14;
      v18 = objc_msgSend(v17, "isRightHandDrive");
      v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
      v20 = v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex + 8];
      v21 = objc_allocWithZone((Class)type metadata accessor for SRCarPlayVisualResponseViewController());
      v22 = sub_10008E2AC(v15, v18, v2, v19, v20, v21);
LABEL_9:
      v30 = v22;
      v31 = &off_1001248D8;
      goto LABEL_10;
    }
  }
  v23 = objc_opt_self(SAUIPluginSnippet);
  v24 = swift_dynamicCastObjCClass(a1, v23);
  if (v24)
  {
    v25 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions];
    if (v25)
    {
      v26 = (void *)v24;
      v27 = a1;
      v17 = v25;
      v28 = objc_msgSend(v17, "isRightHandDrive");
      v29 = objc_allocWithZone((Class)type metadata accessor for SRCarPlayVisualResponseViewController());
      v22 = sub_10008E638(v26, v28, v2, v29);
      goto LABEL_9;
    }
  }
  v34 = objc_opt_self(SACardSnippet);
  v35 = swift_dynamicCastObjCClass(a1, v34);
  if (!v35 || (v36 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions]) == 0)
  {
    v57 = 0;
    v58 = 0xE000000000000000;
    _StringGuts.grow(_:)(66);
    v41._countAndFlagsBits = 0xD000000000000027;
    v41._object = (void *)0x80000001000E15F0;
    String.append(_:)(v41);
    v42 = objc_msgSend(a1, "description");
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v46._countAndFlagsBits = v43;
    v46._object = v45;
    String.append(_:)(v46);
    swift_bridgeObjectRelease(v45);
    v47._countAndFlagsBits = 0xD000000000000016;
    v47._object = (void *)0x80000001000E1620;
    String.append(_:)(v47);
    v56 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions];
    v48 = sub_100076100(&qword_10014FDC8);
    _print_unlocked<A, B>(_:_:)(&v56, &v57, v48, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v49._countAndFlagsBits = 46;
    v49._object = (void *)0xE100000000000000;
    String.append(_:)(v49);
    v50 = v57;
    v51 = v58;
    v53 = static os_log_type_t.info.getter(v52);
    sub_10009973C(v53, 0x10uLL, 0xD00000000000001ALL, 0x80000001000E15B0, v50, v51);
    v33 = swift_bridgeObjectRelease(v51);
    goto LABEL_15;
  }
  v37 = (void *)v35;
  v38 = a1;
  v17 = v36;
  v39 = objc_msgSend(v17, "isRightHandDrive");
  v40 = (char *)objc_allocWithZone((Class)type metadata accessor for SRCarPlayCardViewController());
  v30 = (void *)sub_10008EAE8(v37, v39, v2, v40);
  v31 = &off_1001244C8;
LABEL_10:

  v32 = v30;
  sub_10008D5B8(v30, (uint64_t)v31, 1);

LABEL_15:
  v54 = static os_log_type_t.info.getter(v33);
  sub_10009973C(v54, 0x2000010uLL, 0xD00000000000001CLL, 0x80000001000E1640, 0xD0000000000000A4, 0x80000001000E1660);
  v55 = &v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
  *(_QWORD *)v55 = 0;
  v55[8] = 1;
}

BOOL sub_10008D554()
{
  uint64_t v0;
  _QWORD *v2;
  _BYTE v3[24];

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController))
    return 0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
  swift_beginAccess(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands, v3, 0, 0);
  return *v2 == 0;
}

void sub_10008D5B8(void *a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  id v6;
  Swift::String v7;
  uint64_t ObjectType;
  uint64_t WitnessTable;
  Swift::String v10;
  uint64_t v11;
  Swift::String v12;
  void *object;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  id v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  id v24;
  uint64_t v25;
  id v26;
  char v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t v38;
  char *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;

  v4 = v3;
  if (!a1)
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v36 = type metadata accessor for Logger(0);
    v37 = sub_1000760E8(v36, (uint64_t)qword_100150068);
    v38 = static os_log_type_t.info.getter(v37);
    sub_10009973C(v38, 0x10uLL, 0xD000000000000031, 0x80000001000E1520, 0xD00000000000002ALL, 0x80000001000E1560);
    v39 = &v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    v40 = *(void **)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    v41 = v40;
    v42 = objc_msgSend(v3, "view");
    if (!v42)
    {
      v43 = v41;
      goto LABEL_21;
    }
    v43 = v42;
    v44 = type metadata accessor for SRCarPlayView();
    if (swift_dynamicCastClass(v43, v44))
    {
      sub_100095DC8(0, a3 & 1);
      if (!v40)
      {
LABEL_21:

        v48 = *(void **)v39;
        *(_QWORD *)v39 = 0;
        *((_QWORD *)v39 + 1) = 0;

        return;
      }
      objc_msgSend(v41, "willMoveToParentViewController:", 0);
      objc_msgSend(v41, "removeFromParentViewController");
    }

    goto LABEL_21;
  }
  v52 = 0;
  v53 = 0xE000000000000000;
  v6 = a1;
  _StringGuts.grow(_:)(43);
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  v7._object = (void *)0x80000001000E1590;
  String.append(_:)(v7);
  ObjectType = swift_getObjectType(v6);
  v51 = v6;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, ObjectType);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v51, ObjectType, WitnessTable);
  v10._countAndFlagsBits = 0x203A77656976202CLL;
  v10._object = (void *)0xE800000000000000;
  String.append(_:)(v10);
  v51 = objc_msgSend(v6, "view");
  v11 = sub_100076100(&qword_10014FDC0);
  v12._countAndFlagsBits = String.init<A>(describing:)(&v51, v11);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14 = v52;
  v15 = v53;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_1000760E8(v16, (uint64_t)qword_100150068);
  v18 = static os_log_type_t.info.getter(v17);
  sub_10009973C(v18, 0x10uLL, 0xD000000000000031, 0x80000001000E1520, v14, v15);
  swift_bridgeObjectRelease(v15);
  v19 = objc_msgSend(v6, "view");
  v20 = &v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  v21 = *(void **)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a2 + 88);
  v24 = v21;
  v25 = a2;
  v26 = v24;
  v50 = v25;
  v27 = v23(v21, v22, ObjectType);

  v28 = *(id *)v20;
  v29 = *(id *)v20;
  v30 = v6;
  v31 = objc_msgSend(v4, "view");
  if (v31)
  {
    v32 = v31;
    v33 = type metadata accessor for SRCarPlayView();
    if (swift_dynamicCastClass(v32, v33))
    {
      v34 = v19;
      sub_100095DC8(v19, (v27 ^ 1) & 1);
      if (v28)
      {
        objc_msgSend(v29, "willMoveToParentViewController:", 0);
        objc_msgSend(v29, "removeFromParentViewController");
      }
      v30 = v30;
      objc_msgSend(v4, "addChildViewController:", v30);
      objc_msgSend(v30, "didMoveToParentViewController:", v4);

      v29 = v32;
      v32 = v30;
    }
    else
    {
      v34 = v19;
    }
    v46 = a1;

    v29 = v30;
    v30 = v32;
    v45 = v50;
  }
  else
  {
    v34 = v19;
    v46 = a1;
    v45 = v50;
  }

  v47 = *(id *)v20;
  *(_QWORD *)v20 = v46;
  *((_QWORD *)v20 + 1) = v45;

}

id sub_10008DA38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SRCarPlayViewController()
{
  return objc_opt_self(_TtC4Siri23SRCarPlayViewController);
}

uint64_t sub_10008DAE0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);
  id v5;
  char v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (!v1)
    return 1;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController));
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  v5 = v1;
  v6 = v4(ObjectType, v2);

  return v6 & 1;
}

void sub_10008DB58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController));
    v4 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
    v5 = v1;
    v4(ObjectType, v2);

  }
}

void sub_10008DBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v9;

  *(_BYTE *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking) = 1;
  v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v3)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2
                                               + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController));
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48);
    v9 = v3;
    v8(a1, a2, ObjectType, v6);

  }
}

void sub_10008DCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v3)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2
                                               + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController));
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v9 = v3;
    v8(a1, a2, ObjectType, v6);

  }
}

void sub_10008DD50()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t);
  id v5;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController));
    v4 = *(void (**)(uint64_t, uint64_t))(v2 + 64);
    v5 = v1;
    v4(ObjectType, v2);

  }
}

void sub_10008DDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v9;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v3)
  {
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2
                                               + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController));
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 80);
    v9 = v3;
    v8(a1, a2, ObjectType, v6);

  }
}

uint64_t sub_10008DE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, a2);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10008DEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, a2);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10008DF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, a2);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v2, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

uint64_t sub_10008DFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v4 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, a2);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, a2, ObjectType, v7);
    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_10008E054(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_10008EFA0(a2, a3);
}

uint64_t sub_10008E060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, a2);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

void sub_10008E0D0()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v3 = v1;
    v2 = type metadata accessor for SRCarPlayView();
    if (swift_dynamicCastClass(v3, v2))
    {
      sub_1000964D4(1);
      sub_100096234(0);
    }

  }
}

uint64_t sub_10008E150(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = NSNotFound.getter();
  if (result == a1)
    v4 = 0;
  else
    v4 = a1;
  v5 = v1 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex;
  *(_QWORD *)v5 = v4;
  *(_BYTE *)(v5 + 8) = result == a1;
  return result;
}

uint64_t sub_10008E190(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, a2);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t))(v6 + 80))(ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

char *sub_10008E2AC(void *a1, char a2, void *a3, uint64_t a4, char a5, _BYTE *a6)
{
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  char *result;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  char *v34;
  char *v35;
  Swift::String v36;
  void *object;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  void *v41;
  id v42;
  objc_super v43;

  v12 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet;
  *(_QWORD *)&a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet] = 0;
  *(_QWORD *)&a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet] = 0;
  v13 = &a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate];
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakInit(v13, 0, a3);
  a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd] = 1;
  v14 = objc_allocWithZone((Class)type metadata accessor for VisualResponseProvider(0));
  v15 = a6;
  v16 = objc_msgSend(v14, "init");
  *((_QWORD *)v13 + 1) = &off_1001249D0;
  swift_unknownObjectWeakAssign(v13, a3);
  v17 = *(void **)&a6[v12];
  *(_QWORD *)&a6[v12] = a1;
  v18 = a1;

  sub_100075D84(0);
  result = (char *)objc_msgSend(v18, "modelData");
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  v20 = result;
  v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)(result);
  v23 = v22;

  v24 = VisualResponseProvider.view(for:mode:overload:)(v21, v23, 0, 0);
  sub_10007F3F0(v21, v23);
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet] = v24;

  if (!v24)
    sub_100075D84(1);
  v15[OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive] = a2 & 1;
  v43.receiver = v15;
  v43.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  v25 = (char *)objc_msgSendSuper2(&v43, "initWithNibName:bundle:", 0, 0);
  v26 = v25;
  v27 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet;
  v28 = *(void **)&v25[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet];
  if (!v28)
  {
    v35 = v25;
    goto LABEL_11;
  }
  v29 = v25;
  objc_msgSend(v28, "setBackgroundMaterial:", 1);
  v30 = *(void **)&v26[v27];
  if (!v30)
    goto LABEL_11;
  objc_msgSend(v30, "setInteractionDelegate:", v29);
  v31 = *(void **)&v26[v27];
  if (!v31)
    goto LABEL_11;
  objc_msgSend(v31, "setCurrentIdiom:", 4);
  v32 = *(void **)&v26[v27];
  if (!v32)
    goto LABEL_11;
  v33 = v32;
  result = (char *)objc_msgSend(v18, "viewId");
  if (!result)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v34 = result;
  objc_msgSend(v33, "setViewId:", result);

LABEL_11:
  if ((a5 & 1) == 0)
  {
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease(0xE000000000000000);
    v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v36._object;
    String.append(_:)(v36);
    swift_bridgeObjectRelease(object);
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_1000760E8(v38, (uint64_t)qword_100150068);
    v40 = static os_log_type_t.info.getter(v39);
    sub_10009973C(v40, 0x2000010uLL, 0xD00000000000003DLL, 0x80000001000E1710, 0xD00000000000002BLL, 0x80000001000E1750);
    swift_bridgeObjectRelease(0x80000001000E1750);
    v41 = *(void **)&v26[v27];
    if (v41)
    {
      v42 = v41;
      objc_msgSend(v42, "setInitialFocusIndex:", a4);

      v16 = v42;
    }
  }

  return v26;
}

char *sub_10008E638(void *a1, char a2, void *a3, _BYTE *a4)
{
  uint64_t v7;
  char *v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  char *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  NSString v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  id v50;
  objc_super v52;

  *(_QWORD *)&a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet] = 0;
  v7 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet;
  *(_QWORD *)&a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet] = 0;
  v8 = &a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8, 0, a3);
  a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd] = 1;
  v9 = objc_allocWithZone((Class)type metadata accessor for VisualResponseProvider(0));
  v10 = a4;
  v11 = objc_msgSend(v9, "init");
  *((_QWORD *)v8 + 1) = &off_1001249D0;
  swift_unknownObjectWeakAssign(v8, a3);
  v12 = *(void **)&a4[v7];
  *(_QWORD *)&a4[v7] = a1;
  v13 = a1;

  sub_100075D84(0);
  v14 = objc_msgSend(v13, "modelData");
  if (v14)
  {
    v15 = v14;
    static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v17 = v16;

    __asm { BR              X10 }
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_1000760E8(v18, (uint64_t)qword_100150068);
  v20 = static os_log_type_t.info.getter(v19);
  sub_10009973C(v20, 0, 0xD00000000000002ELL, 0x80000001000E1780, 0xD00000000000001BLL, 0x80000001000E17D0);
  v21 = objc_msgSend(v13, "bundleName");
  if (v21)
  {
    v22 = v21;
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0xE000000000000000;
  }
  v26 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v26 = v23 & 0xFFFFFFFFFFFFLL;
  if (!v26)
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_1000760E8(v27, (uint64_t)qword_100150068);
    v29 = static os_log_type_t.info.getter(v28);
    sub_10009973C(v29, 0, 0xD00000000000002ELL, 0x80000001000E1780, 0xD000000000000014, 0x80000001000E17B0);
  }
  v30 = v11;
  v31 = VisualResponseProvider.view(for:bundleName:mode:)(0, 0xC000000000000000, v23, v25, 0);
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)&v10[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet] = v31;

  if (!v31)
    sub_100075D84(1);
  v10[OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive] = a2 & 1;
  v52.receiver = v10;
  v52.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  v32 = (char *)objc_msgSendSuper2(&v52, "initWithNibName:bundle:", 0, 0);
  v33 = v32;
  v34 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet;
  v35 = *(void **)&v32[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet];
  if (!v35)
  {
    v48 = v32;
LABEL_26:

    sub_10007F3F0(0, 0xC000000000000000);
    goto LABEL_27;
  }
  v36 = v32;
  objc_msgSend(v35, "setBackgroundMaterial:", 1);
  v37 = *(void **)&v33[v34];
  if (!v37)
    goto LABEL_26;
  objc_msgSend(v37, "setInteractionDelegate:", v36);
  v38 = *(void **)&v33[v34];
  if (!v38)
    goto LABEL_26;
  objc_msgSend(v38, "setCurrentIdiom:", 4);
  v39 = *(void **)&v33[v34];
  if (!v39)
    goto LABEL_26;
  v40 = v39;
  v41 = objc_msgSend(v13, "viewId");
  if (!v41)
  {
    __break(1u);
    JUMPOUT(0x10008EAD8);
  }
  v42 = v41;
  objc_msgSend(v40, "setViewId:", v41);

  v43 = *(void **)&v33[v34];
  if (!v43)
    goto LABEL_26;
  v44 = v43;
  v45 = objc_msgSend(v13, "responseViewId");
  if (!v45)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v47 = v46;
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v47);
  }
  objc_msgSend(v44, "setResponseViewId:", v45, a3);

  sub_10007F3F0(0, 0xC000000000000000);
LABEL_27:

  return v33;
}

uint64_t sub_10008EAE8(void *a1, char a2, void *a3, char *a4)
{
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  char *v15;
  char *v16;
  unint64_t v17;
  void *ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  void *v25;
  char *v26;
  id v27;
  uint64_t result;
  objc_super v29;

  *(_QWORD *)&a4[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController] = 0;
  v8 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_widthConstraint;
  v9 = objc_allocWithZone((Class)NSLayoutConstraint);
  v10 = a4;
  *(_QWORD *)&a4[v8] = objc_msgSend(v9, "init");
  v11 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_heightConstraint;
  *(_QWORD *)&v10[v11] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardSnippet] = a1;
  v12 = &v10[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_delegate];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = &off_100124A10;
  v13 = a1;
  v14 = a3;

  sub_100075D84(0);
  v10[OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive] = a2;
  v29.receiver = v10;
  v29.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  v15 = (char *)objc_msgSendSuper2(&v29, "initWithNibName:bundle:", 0, 0);
  v16 = (char *)objc_msgSend(v13, "siriui_card");
  if (!v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = v16;
  if ((objc_msgSend(v16, "respondsToSelector:", "backingCard") & 1) == 0)
  {
LABEL_9:
    swift_unknownObjectRelease(v10);
    __break(1u);
    goto LABEL_10;
  }
  v17 = sub_10008F460();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v17);
  v19 = objc_msgSend(v10, "backingCard");
  swift_unknownObjectRelease(v10);
  v10 = (char *)objc_msgSend(ObjCClassFromMetadata, "cardViewControllerForCard:feedbackDelegate:", v19, v15);

  if (!v10)
  {
LABEL_11:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000028, 0x80000001000E1820, "Siri/SRCarPlayCardViewController.swift", 38, 2, 35, 0);
    __break(1u);
    return result;
  }
  v20 = objc_opt_self(SearchUICardViewController);
  v21 = swift_dynamicCastObjCClass(v10, v20);
  if (!v21)
  {
LABEL_10:

    goto LABEL_11;
  }
  v22 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController;
  v23 = *(void **)&v15[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController];
  *(_QWORD *)&v15[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController] = v21;
  v24 = v10;

  v25 = *(void **)&v15[v22];
  if (v25)
  {
    v26 = v15;
    v27 = v25;
    objc_msgSend(v27, "setDelegate:", v26);

    v24 = v26;
  }

  return (uint64_t)v15;
}

char *sub_10008ED94(void *a1, _BYTE *a2, uint64_t a3)
{
  char *v5;
  char *v6;
  char *v7;
  id v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  unsigned __int8 v17;
  objc_super v19;

  v5 = &a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0, a3);
  *(_QWORD *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView] = 0;
  *(_QWORD *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_platterView] = 0;
  a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground] = 0;
  a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough] = 0;
  v19.receiver = a2;
  v19.super_class = (Class)type metadata accessor for SRCarPlayView();
  v6 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = &v6[OBJC_IVAR____TtC4Siri13SRCarPlayView_delegate];
  *((_QWORD *)v7 + 1) = &off_100124A00;
  swift_unknownObjectWeakAssign(v7, a1);
  v8 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v9 = v6;
  v10 = objc_msgSend(v8, "initWithTarget:action:", v9, "didTapToDismissWithSender:");
  v11 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v12 = OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView;
  v13 = *(void **)&v9[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView];
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView] = v11;

  v14 = *(void **)&v9[v12];
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v15, "setAutoresizingMask:", 18);
    objc_msgSend(v9, "bounds");
    objc_msgSend(v15, "setFrame:");
    objc_msgSend(v15, "addGestureRecognizer:", v10);
    objc_msgSend(v9, "addSubview:", v15);

  }
  v16 = objc_msgSend((id)objc_opt_self(AFPreferences), "sharedPreferences");
  v17 = objc_msgSend(v16, "getShowAppsBehindSiriInCarPlayEnabled");

  sub_1000964D4(v17 ^ 1);
  return v9;
}

uint64_t sub_10008EFA0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::String v10;
  uint64_t ObjectType;
  uint64_t WitnessTable;
  Swift::String v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  _QWORD *v19;
  unint64_t *v20;
  uint64_t (*v21)(_QWORD);
  unint64_t *v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t Strong;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD v56[3];

  v3 = v2;
  v6 = sub_100076100(&qword_10014FAD8);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking) == 1)
  {
    v54 = 0;
    v55 = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v10._countAndFlagsBits = 0xD000000000000015;
    v10._object = (void *)0x80000001000E1480;
    String.append(_:)(v10);
    ObjectType = swift_getObjectType(a1);
    v56[0] = a1;
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for NSObject, ObjectType);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v56, ObjectType, WitnessTable);
    v13._countAndFlagsBits = 0xD000000000000026;
    v13._object = (void *)0x80000001000E14A0;
    String.append(_:)(v13);
    v14 = v54;
    v15 = v55;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_1000760E8(v16, (uint64_t)qword_100150068);
    v18 = static os_log_type_t.info.getter(v17);
    sub_10009973C(v18, 0x8000010uLL, 0xD00000000000004CLL, 0x80000001000E13F0, v14, v15);
    swift_bridgeObjectRelease(v15);
    v19 = (_QWORD *)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
    swift_beginAccess(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands, v56, 1, 0);
    if (!*v19)
    {
      *v19 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(0);
    }
    v21 = sub_10008C9A8((uint64_t)&v54);
    if (*v20)
    {
      v22 = v20;
      v23 = (char *)v9 + *(int *)(v6 + 48);
      *v9 = a1;
      v24 = type metadata accessor for UUID(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v23, a2, v24);
      v25 = *v22;
      v26 = a1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v25);
      *v22 = v25;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v25 = sub_100086868(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
        *v22 = v25;
      }
      v29 = *(_QWORD *)(v25 + 16);
      v28 = *(_QWORD *)(v25 + 24);
      if (v29 >= v28 >> 1)
      {
        v25 = sub_100086868(v28 > 1, v29 + 1, 1, v25);
        *v22 = v25;
      }
      *(_QWORD *)(v25 + 16) = v29 + 1;
      sub_10008F41C((uint64_t)v9, v25+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v29, &qword_10014FAD8);
    }
    ((void (*)(uint64_t *, _QWORD))v21)(&v54, 0);
    v30 = v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
    result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, v31);
    if (result)
    {
      v33 = result;
      v34 = *(_QWORD *)(v30 + 8);
      v35 = swift_getObjectType(result);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v3, v35, v34);
      return swift_unknownObjectRelease(v33);
    }
  }
  else
  {
    v54 = 0;
    v55 = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v36._countAndFlagsBits = 0xD000000000000034;
    v36._object = (void *)0x80000001000E1440;
    String.append(_:)(v36);
    v37 = swift_getObjectType(a1);
    v56[0] = a1;
    v38 = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v37);
    DefaultStringInterpolation.appendInterpolation<A>(_:)(v56, v37, v38);
    v39._countAndFlagsBits = 46;
    v39._object = (void *)0xE100000000000000;
    String.append(_:)(v39);
    v40 = v54;
    v41 = v55;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v42 = type metadata accessor for Logger(0);
    v43 = sub_1000760E8(v42, (uint64_t)qword_100150068);
    v44 = static os_log_type_t.info.getter(v43);
    sub_10009973C(v44, 0x8000010uLL, 0xD00000000000004CLL, 0x80000001000E13F0, v40, v41);
    swift_bridgeObjectRelease(v41);
    v45 = v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate, v46);
    if (Strong)
    {
      v48 = Strong;
      v49 = *(_QWORD *)(v45 + 8);
      v50 = swift_getObjectType(Strong);
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(v49 + 40))(v3, a1, a2, v50, v49);
      swift_unknownObjectRelease(v48);
    }
    v51 = (uint64_t *)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
    swift_beginAccess(v51, &v54, 1, 0);
    v52 = *v51;
    *v51 = 0;
    return swift_bridgeObjectRelease(v52);
  }
  return result;
}

uint64_t sub_10008F41C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100076100(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10008F460()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FDD0;
  if (!qword_10014FDD0)
  {
    v1 = objc_opt_self(_SearchUI);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10014FDD0);
  }
  return result;
}

_QWORD *sub_10008F49C(_QWORD *a1)
{
  destroy for SRCarPlaySiriUnavailableView(a1);
  return a1;
}

void sub_10008F4D0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  char *v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  id v34;

  v2 = v1;
  v4 = sub_100076100(&qword_10014F878);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v1, "view");
  if (v7)
  {
    v34 = v7;
    v8 = type metadata accessor for SRCarPlayView();
    v9 = swift_dynamicCastClass(v34, v8);
    if (v9)
    {
      v10 = v9;
      sub_10008D5B8(0, 0, 1);
      sub_10007A188(a1, (uint64_t)v6, &qword_10014F878);
      v11 = type metadata accessor for URL(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
      {
        __break(1u);
      }
      else
      {
        v13 = URL.scheme.getter();
        if (v14)
        {
          v15 = v14;
          if (v13 == 0x6D65746970616DLL && v14 == 0xE700000000000000)
            v17 = 1;
          else
            v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14);
          swift_bridgeObjectRelease(v15);
        }
        else
        {
          v17 = 0;
        }
        (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v11);
        v18 = OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough;
        *(_BYTE *)(v10 + OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough) = v17 & 1;
        if ((v17 & 1) != 0)
        {
          if (qword_10014ECE0 != -1)
            swift_once(&qword_10014ECE0, sub_100098388);
          v19 = type metadata accessor for Logger(0);
          v20 = sub_1000760E8(v19, (uint64_t)qword_100150068);
          v21 = static os_log_type_t.info.getter(v20);
          sub_10009973C(v21, 0x10uLL, 0xD000000000000010, 0x80000001000E19A0, 0xD00000000000002CLL, 0x80000001000E19C0);
        }
        v22 = *(void **)(v10 + OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView);
        if (v22)
        {
          v23 = objc_msgSend(v22, "layer");
          objc_msgSend(v23, "setAllowsHitTesting:", (*(_BYTE *)(v10 + v18) & 1) == 0);

        }
        if (!objc_msgSend((id)objc_opt_self(AFFeatureFlags), "isSiriLocationServicesPromptingEnabled"))goto LABEL_25;
        if (qword_10014ECE0 != -1)
          swift_once(&qword_10014ECE0, sub_100098388);
        v24 = type metadata accessor for Logger(0);
        v25 = sub_1000760E8(v24, (uint64_t)qword_100150068);
        v26 = static os_log_type_t.info.getter(v25);
        sub_10009973C(v26, 0x10uLL, 0xD000000000000020, 0x80000001000E1940, 0xD000000000000024, 0x80000001000E1970);
        sub_10008D5B8(0, 0, 1);
        v27 = &v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate];
        Strong = swift_unknownObjectWeakLoadStrong(v27, v28);
        if (Strong)
        {
          v30 = Strong;
          v31 = *((_QWORD *)v27 + 1);
          ObjectType = swift_getObjectType(Strong);
          (*(void (**)(uint64_t, uint64_t))(v31 + 80))(ObjectType, v31);

          swift_unknownObjectRelease(v30);
        }
        else
        {
LABEL_25:

        }
      }
    }
    else
    {

    }
  }
}

void sub_10008F850(double a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  char *v11;
  void *v12;
  id v13;

  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v13 = v3;
    v4 = type metadata accessor for SRCarPlayView();
    v5 = swift_dynamicCastClass(v13, v4);
    if (v5 && (v6 = *(char **)(v5 + OBJC_IVAR____TtC4Siri13SRCarPlayView_platterView)) != 0)
    {
      v7 = *(void **)&v6[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView];
      v8 = v6;
      if (v7)
      {
        v9 = objc_msgSend(v7, "layer");
        objc_msgSend(v9, "setCornerRadius:", a1);

      }
      v10 = *(void **)&v6[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialPlatterView];
      if (v10)
      {
        v11 = (char *)objc_msgSend(v10, "layer");
        objc_msgSend(v11, "setCornerRadius:", a1);

        v12 = v6;
        v6 = v11;
      }
      else
      {
        v12 = v13;
      }

    }
    else
    {

    }
  }
}

void sub_10008F990(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;

  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v19 = v3;
    v4 = type metadata accessor for SRCarPlayView();
    v5 = swift_dynamicCastClass(v19, v4);
    if (v5)
    {
      v6 = *(char **)(v5 + OBJC_IVAR____TtC4Siri13SRCarPlayView_platterView);
      if (!v6)
      {
        v15 = v19;
LABEL_17:

        return;
      }
      v7 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView;
      v8 = *(void **)&v6[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView];
      v18 = v6;
      if (v8)
      {
        v9 = v6;
        objc_msgSend(v8, "setBackgroundColor:", a1);
        v10 = v18;
        v11 = *(void **)&v18[v7];
        if (!v11)
        {
LABEL_14:
          v17 = *(void **)&v10[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialPlatterView];
          if (v17)
            objc_msgSend(v17, "setHidden:", 1);

          v15 = v18;
          goto LABEL_17;
        }
        objc_msgSend(v11, "setHidden:", 0);
      }
      else
      {
        v16 = v6;
      }
      v10 = v18;
      goto LABEL_14;
    }

  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_1000760E8(v12, (uint64_t)qword_100150068);
  v14 = static os_log_type_t.info.getter(v13);
  sub_10009973C(v14, 0x10uLL, 0xD000000000000049, 0x80000001000E18F0, 0xD000000000000041, 0x80000001000E0900);
}

void sub_10008FB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v4;
  char *v5;
  char *v6;

  v4 = &v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  *v4 = 0;
  v4[1] = 0;
  v5 = &v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0, a3);
  v6 = &v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands] = 0;
  v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000E1170, "Siri/SRCarPlayViewController.swift", 34, 2, 40, 0);
  __break(1u);
}

id sub_10008FD3C(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType(a1);
  return objc_msgSendSuper2(&v5, *a3);
}

char *sub_10008FE94(void *a1, void *a2)
{
  char *v2;
  objc_class *ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  objc_class *v17;
  char *v18;
  id v19;
  char *v20;
  id v21;
  char *result;
  char *v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  objc_super v31;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_snippetCommandExecutor;
  v8 = type metadata accessor for SnippetCommandExecutor(0, v7);
  swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  v9 = v2;
  *(_QWORD *)&v2[v6] = SnippetCommandExecutor.init()(v9);
  v10 = &v9[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_appBundleId];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView;
  *(_QWORD *)&v9[v11] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", 0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_visualResponseView] = a1;
  v12 = a1;

  v32.receiver = v9;
  v32.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v32, "initWithNibName:bundle:", 0, 0);
  v14 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_visualResponseView;
  v15 = *(void **)&v13[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_visualResponseView];
  v16 = v13;
  objc_msgSend(v15, "setInteractionDelegate:", v16);
  objc_msgSend(*(id *)&v13[v14], "setBackgroundMaterial:", 1);
  v17 = (objc_class *)type metadata accessor for SiriUIHostingView();
  v18 = (char *)objc_allocWithZone(v17);
  *(_QWORD *)&v18[OBJC_IVAR____TtC4SiriP33_7351ACF3FB3EECEB6B17B4CD84C9F4C317SiriUIHostingView_rootView] = v12;
  v31.receiver = v18;
  v31.super_class = v17;
  v19 = v12;
  v20 = v16;
  v21 = objc_msgSendSuper2(&v31, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v21, "setCardView:", v19, v31.receiver, v31.super_class);
  objc_msgSend(v20, "setView:", v21);

  result = (char *)objc_msgSend(v20, "view");
  if (result)
  {
    v23 = result;
    objc_msgSend(result, "setBackingViewController:", v20);

    if (a2)
    {
      v24 = objc_msgSend(a2, "sash");
      v25 = v24;
      if (!v24)
      {

LABEL_10:
        v28 = 0;
        goto LABEL_11;
      }
      v26 = objc_msgSend(v24, "applicationBundleIdentifier");

      if (v26)
      {
        v25 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
        v28 = v27;

LABEL_11:
        v29 = &v20[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_appBundleId];
        v30 = *(_QWORD *)&v20[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_appBundleId + 8];
        *(_QWORD *)v29 = v25;
        *((_QWORD *)v29 + 1) = v28;
        swift_bridgeObjectRelease(v30);
        return v20;
      }

    }
    else
    {

    }
    v25 = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1000902EC()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v1 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView], "backgroundColor");

  if (!v2)
  {
    v3 = objc_msgSend(*(id *)&v0[v1], "effect");
    if (!v3)
    {
      v4 = objc_msgSend(v0, "traitCollection");
      v5 = objc_msgSend(v4, "userInterfaceStyle");

      v6 = (void *)objc_opt_self(UIColor);
      if (v5 == (id)1)
        v7 = objc_msgSend(v6, "whiteColor");
      else
        v7 = objc_msgSend(v6, "blackColor");
      v8 = v7;
      objc_msgSend(v0, "informHostOfBackgroundColor:", v8);
      v3 = v8;
    }

  }
}

uint64_t sub_1000907B0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  id v21;
  Swift::String v22;
  uint64_t v23;
  Swift::String v24;
  void *object;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;

  v2 = v1;
  v4 = type metadata accessor for SnippetCommandError(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ExecutionResult(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (void **)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v14 = (char *)&v39 - v13;
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_snippetCommandExecutor];
  swift_retain(v15);
  dispatch thunk of SnippetCommandExecutor.execute(sfCommand:)(a1);
  swift_release(v15);
  (*(void (**)(void **, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v16 = (*(uint64_t (**)(void **, uint64_t))(v9 + 88))(v12, v8);
  if (v16 == enum case for ExecutionResult.convertedToAce(_:))
  {
    (*(void (**)(void **, uint64_t))(v9 + 96))(v12, v8);
    v17 = *v12;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_1000760E8(v18, (uint64_t)qword_100150068);
    v20 = static os_log_type_t.info.getter(v19);
    sub_10009973C(v20, 0x2000000uLL, 0xD000000000000014, 0x80000001000E1CB0, 0xD000000000000031, 0x80000001000E1D60);
    v21 = v17;
    sub_1000935E4(v21, v2);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  if (v16 == enum case for ExecutionResult.failure(_:))
  {
    (*(void (**)(void **, uint64_t))(v9 + 96))(v12, v8);
    (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v12, v4);
    v39 = 0;
    v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(73);
    v22._countAndFlagsBits = 0xD000000000000047;
    v22._object = (void *)0x80000001000E1D10;
    String.append(_:)(v22);
    v23 = sub_10007A47C((unint64_t *)&unk_10014FEB0, (uint64_t (*)(uint64_t))&type metadata accessor for SnippetCommandError, (uint64_t)&protocol conformance descriptor for SnippetCommandError);
    v24._countAndFlagsBits = Error.localizedDescription.getter(v4, v23);
    object = v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v26 = v39;
    v27 = v40;
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_1000760E8(v28, (uint64_t)qword_100150068);
    v30 = static os_log_type_t.info.getter(v29);
    sub_10009973C(v30, 0x2000000uLL, 0xD000000000000014, 0x80000001000E1CB0, v26, v27);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  if (v16 == enum case for ExecutionResult.commandExecuted(_:))
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_1000760E8(v31, (uint64_t)qword_100150068);
    v33 = static os_log_type_t.info.getter(v32);
    sub_10009973C(v33, 0x2000000uLL, 0xD000000000000014, 0x80000001000E1CB0, 0xD00000000000002FLL, 0x80000001000E1DA0);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v35 = type metadata accessor for Logger(0);
  v36 = sub_1000760E8(v35, (uint64_t)qword_100150068);
  v37 = static os_log_type_t.info.getter(v36);
  sub_10009973C(v37, 0x2000000uLL, 0xD000000000000014, 0x80000001000E1CB0, 0xD00000000000003BLL, 0x80000001000E1CD0);
  v38 = *(void (**)(char *, uint64_t))(v9 + 8);
  v38(v14, v8);
  return ((uint64_t (*)(void **, uint64_t))v38)(v12, v8);
}

void sub_100090C6C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  NSString v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  Class v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)SAUIVisualResponseSnippet), "init");
  v7 = UUID.init()();
  UUID.uuidString.getter(v7);
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v6, "setAceId:", v11);

  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setModelData:", isa);

  v13 = objc_msgSend(objc_allocWithZone((Class)SAUIAddViews), "init");
  v14 = UUID.init()();
  UUID.uuidString.getter(v14);
  v16 = v15;
  v10(v5, v2);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  objc_msgSend(v13, "setAceId:", v17);

  v18 = sub_100076100((uint64_t *)&unk_10014FB20);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_1000C1710;
  *(_QWORD *)(v19 + 32) = v6;
  v30 = v19;
  specialized Array._endMutation()(v19);
  v20 = v30;
  sub_100076140(0, (unint64_t *)&qword_10014FAF0, SAAceView_ptr);
  v21 = v6;
  v22 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v20);
  objc_msgSend(v13, "setViews:", v22);

  v23 = objc_msgSend(v1, "delegate");
  if (v23)
  {
    v24 = v23;
    v25 = sub_100076100(&qword_10014F880);
    v26 = swift_allocObject(v25, 64, 7);
    *(_OWORD *)(v26 + 16) = xmmword_1000C1810;
    *(_QWORD *)(v26 + 56) = sub_100076140(0, &qword_10014FEA8, SAUIAddViews_ptr);
    *(_QWORD *)(v26 + 32) = v13;
    v27 = v13;
    v28 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
    objc_msgSend(v24, "siriViewController:performAceCommands:", v1, v28);

    swift_unknownObjectRelease(v24);
  }

}

void sub_100090F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  Class v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  Class v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  Class v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  Class v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)SAIntentGroupSubmitIFMessagePayload), "init");
  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "setData:", isa);

  v6 = objc_msgSend(objc_allocWithZone((Class)SAStartLocalRequest), "init");
  v7 = UUID.init()();
  UUID.uuidString.getter(v7);
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v3, v0);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v6, "setAceId:", v11);

  v65 = sub_100076100((uint64_t *)&unk_10014FB20);
  v12 = swift_allocObject(v65, 40, 7);
  v66 = xmmword_1000C1710;
  *(_OWORD *)(v12 + 16) = xmmword_1000C1710;
  *(_QWORD *)(v12 + 32) = v4;
  v67 = v12;
  specialized Array._endMutation()(v12);
  v13 = v67;
  v62 = v4;
  v64 = sub_100076100(&qword_10014FBF0);
  v14 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v6, "setClientBoundCommands:", v14);

  v15 = objc_msgSend(objc_allocWithZone((Class)SARequestCompleted), "init");
  v16 = UUID.init()();
  UUID.uuidString.getter(v16);
  v18 = v17;
  v10(v3, v0);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  objc_msgSend(v15, "setAceId:", v19);

  v20 = v15;
  v21 = objc_msgSend(v6, "aceId");
  objc_msgSend(v20, "setRefId:", v21);

  v22 = objc_msgSend(objc_allocWithZone((Class)SAResultCallback), "init");
  v23 = UUID.init()();
  UUID.uuidString.getter(v23);
  v25 = v24;
  v10(v3, v0);
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v25);
  objc_msgSend(v22, "setAceId:", v26);

  v27 = v22;
  v28 = objc_msgSend(v6, "refId");
  objc_msgSend(v27, "setRefId:", v28);

  objc_msgSend(v27, "setCode:", 0);
  v29 = swift_allocObject(v65, 40, 7);
  *(_OWORD *)(v29 + 16) = v66;
  *(_QWORD *)(v29 + 32) = v20;
  v67 = v29;
  specialized Array._endMutation()(v29);
  v30 = v67;
  v61 = v20;
  v31 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v30);
  objc_msgSend(v27, "setCommands:", v31);

  v32 = objc_msgSend(objc_allocWithZone((Class)SACommandFailed), "init");
  v33 = UUID.init()();
  UUID.uuidString.getter(v33);
  v35 = v34;
  v10(v3, v0);
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  objc_msgSend(v32, "setAceId:", v36);

  v37 = v32;
  v38 = objc_msgSend(v6, "aceId");
  objc_msgSend(v37, "setRefId:", v38);

  v39 = objc_msgSend(objc_allocWithZone((Class)SAResultCallback), "init");
  v40 = UUID.init()();
  UUID.uuidString.getter(v40);
  v42 = v41;
  v10(v3, v0);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  objc_msgSend(v39, "setAceId:", v43);

  v44 = v39;
  v45 = objc_msgSend(v6, "refId");
  objc_msgSend(v44, "setRefId:", v45);

  objc_msgSend(v44, "setCode:", -1);
  v46 = v65;
  v47 = swift_allocObject(v65, 40, 7);
  *(_OWORD *)(v47 + 16) = v66;
  *(_QWORD *)(v47 + 32) = v37;
  v67 = v47;
  specialized Array._endMutation()(v47);
  v48 = v67;
  v49 = v37;
  v50 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v48);
  objc_msgSend(v27, "setCommands:", v50);

  v51 = swift_allocObject(v46, 48, 7);
  *(_OWORD *)(v51 + 16) = xmmword_1000C18F0;
  *(_QWORD *)(v51 + 32) = v27;
  *(_QWORD *)(v51 + 40) = v44;
  v67 = v51;
  specialized Array._endMutation()(v51);
  v52 = v67;
  sub_100076140(0, (unint64_t *)&unk_10014FE98, SAResultCallback_ptr);
  v53 = v62;
  v54 = v27;
  v55 = v44;
  v56 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v52);
  objc_msgSend(v53, "setCallbacks:", v56);

  v57 = v53;
  v58 = objc_msgSend(v6, "aceId");
  objc_msgSend(v57, "setRefId:", v58);

  v59 = v6;
  sub_1000935E4(v59, v63);

}

void sub_1000915FC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  Class isa;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Class v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone((Class)SAUIVisualResponseSnippet), "init");
  v7 = UUID.init()();
  UUID.uuidString.getter(v7);
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v6, "setAceId:", v10);

  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "setModelData:", isa);

  v12 = objc_msgSend(v1, "delegate");
  if (v12)
  {
    v13 = v12;
    v14 = sub_100076100(&qword_10014F880);
    v15 = swift_allocObject(v14, 64, 7);
    *(_OWORD *)(v15 + 16) = xmmword_1000C1810;
    *(_QWORD *)(v15 + 56) = sub_100076140(0, &qword_10014FE90, SAUIVisualResponseSnippet_ptr);
    *(_QWORD *)(v15 + 32) = v6;
    v16 = v6;
    v17 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v15);
    objc_msgSend(v13, "siriSnippetViewController:pushSirilandSnippets:", v1, v17);

    swift_unknownObjectRelease(v13);
  }

}

void sub_1000917DC(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, unint64_t))
{
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;

  v7 = a3;
  v11 = a1;
  v8 = static Data._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v10 = v9;

  a4(v8, v10);
  sub_10007F3F0(v8, v10);

}

void sub_10009185C()
{
  void *v0;
  NSString v1;
  Class isa;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  Class v8;
  id v9;

  v9 = objc_msgSend(objc_allocWithZone((Class)SAUIPluginSnippet), "init");
  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setBundleName:", v1);

  isa = Data._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "setModelData:", isa);

  v3 = objc_msgSend(v0, "delegate");
  if (v3)
  {
    v4 = v3;
    v5 = sub_100076100(&qword_10014F880);
    v6 = swift_allocObject(v5, 64, 7);
    *(_OWORD *)(v6 + 16) = xmmword_1000C1810;
    *(_QWORD *)(v6 + 56) = sub_100076140(0, &qword_10014FE88, SAUIPluginSnippet_ptr);
    *(_QWORD *)(v6 + 32) = v9;
    v7 = v9;
    v8 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v6);
    objc_msgSend(v4, "siriSnippetViewController:pushSirilandSnippets:", v0, v8);

    swift_unknownObjectRelease(v4);
  }

}

id sub_100091A6C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  _QWORD v12[5];
  uint64_t v13;

  v3 = swift_allocObject(&unk_100124AF8, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16, v1, v4);
  v12[4] = sub_100093510;
  v13 = v3;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100092390;
  v12[3] = &unk_100124B10;
  v5 = _Block_copy(v12);
  swift_release(v13);
  objc_msgSend(v1, "_beginMonitoringForNextCardWithBlock:", v5);
  _Block_release(v5);
  result = objc_msgSend(v1, "delegate");
  if (result)
  {
    v7 = result;
    v8 = sub_100076100(&qword_10014F880);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_1000C1810;
    *(_QWORD *)(v9 + 56) = swift_getObjectType(a1);
    *(_QWORD *)(v9 + 32) = a1;
    v10 = a1;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v9);
    objc_msgSend(v7, "siriViewController:performAceCommands:", v1, isa);

    return (id)swift_unknownObjectRelease(v7);
  }
  return result;
}

void sub_100091BC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  objc_class *v7;
  Class isa;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void *Strong;
  void *v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  _QWORD aBlock[5];
  uint64_t v31;
  _BYTE v32[24];

  if (a1)
  {
    v3 = a3 + 16;
    v4 = a1;
    v5 = objc_msgSend(v4, "cardSections");
    if (v5)
    {

      v6 = objc_msgSend(objc_allocWithZone((Class)SACardSnippet), "init");
      v7 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)_SFPBCard), "initWithFacade:", v4);
      isa = v7;
      if (v7)
      {
        v9 = -[objc_class data](v7, "data");

        if (v9)
        {
          v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);
          v12 = v11;

          isa = Data._bridgeToObjectiveC()().super.isa;
          sub_10007F3F0(v10, v12);
        }
        else
        {
          isa = 0;
        }
      }
      objc_msgSend(v6, "setCardData:", isa);

      swift_beginAccess(v3, aBlock, 0, 0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v21);
      if (Strong)
      {
        v23 = Strong;
        v24 = objc_msgSend(Strong, "delegate");

        if (v24)
        {
          swift_beginAccess(v3, v32, 0, 0);
          v26 = (void *)swift_unknownObjectWeakLoadStrong(v3, v25);
          v27 = sub_100076100(&qword_10014F880);
          v28 = swift_allocObject(v27, 64, 7);
          *(_OWORD *)(v28 + 16) = xmmword_1000C1810;
          *(_QWORD *)(v28 + 56) = sub_100076140(0, &qword_10014FE68, SACardSnippet_ptr);
          *(_QWORD *)(v28 + 32) = v6;
          v6 = v6;
          v29 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v28);
          objc_msgSend(v24, "siriSnippetViewController:pushSirilandSnippets:", v26, v29);

          swift_unknownObjectRelease(v24);
        }
      }

    }
    else
    {
      v13 = swift_allocObject(&unk_100124AF8, 24, 7);
      swift_beginAccess(v3, v32, 0, 0);
      v15 = (void *)swift_unknownObjectWeakLoadStrong(v3, v14);
      swift_unknownObjectWeakInit(v13 + 16, v15, v16);

      v17 = swift_allocObject(&unk_100124B48, 32, 7);
      *(_QWORD *)(v17 + 16) = v4;
      *(_QWORD *)(v17 + 24) = v13;
      aBlock[4] = sub_10009355C;
      v31 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100092320;
      aBlock[3] = &unk_100124B60;
      v18 = _Block_copy(aBlock);
      v19 = v31;
      v20 = v4;
      swift_release(v19);
      objc_msgSend(v20, "loadCardSectionsWithCompletionHandler:", v18);

      _Block_release(v18);
    }
  }
}

uint64_t sub_100091EC0(Class isa, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  objc_class *v15;
  Class v16;
  id v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v37;
  uint64_t v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v13;
  if (isa)
  {
    sub_100076140(0, (unint64_t *)&qword_10014F9E0, SFCardSection_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
  }
  objc_msgSend(a2, "setCardSections:", isa);

  v14 = objc_msgSend(objc_allocWithZone((Class)SACardSnippet), "init");
  v15 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)_SFPBCard), "initWithFacade:", a2);
  v16 = v15;
  if (v15)
  {
    v17 = -[objc_class data](v15, "data");

    if (v17)
    {
      v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v37 = v12;
      v19 = v9;
      v20 = v6;
      v21 = a3;
      v22 = v10;
      v23 = v7;
      v25 = v24;

      v16 = Data._bridgeToObjectiveC()().super.isa;
      v26 = v25;
      v7 = v23;
      v10 = v22;
      a3 = v21;
      v6 = v20;
      v9 = v19;
      v12 = v37;
      sub_10007F3F0(v18, v26);
    }
    else
    {
      v16 = 0;
    }
  }
  objc_msgSend(v14, "setCardData:", v16);

  sub_100076140(0, (unint64_t *)&qword_10014F560, OS_dispatch_queue_ptr);
  v27 = (void *)static OS_dispatch_queue.main.getter();
  v28 = swift_allocObject(&unk_100124B98, 32, 7);
  *(_QWORD *)(v28 + 16) = a3;
  *(_QWORD *)(v28 + 24) = v14;
  aBlock[4] = sub_100093590;
  v40 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100094264;
  aBlock[3] = &unk_100124BB0;
  v29 = _Block_copy(aBlock);
  v30 = v40;
  swift_retain(a3);
  v31 = v14;
  v32 = swift_release(v30);
  static DispatchQoS.unspecified.getter(v32);
  aBlock[0] = _swiftEmptyArrayStorage;
  v33 = sub_10007A47C((unint64_t *)&qword_10014FE70, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_100076100(&qword_10014FE78);
  v35 = sub_100093598();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v6, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v12, v10);
}

void sub_1000921F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Class isa;
  uint64_t v14;
  _BYTE v15[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v15, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = objc_msgSend(Strong, "delegate");

    if (v7)
    {
      swift_beginAccess(v3, &v14, 0, 0);
      v9 = (void *)swift_unknownObjectWeakLoadStrong(v3, v8);
      v10 = sub_100076100(&qword_10014F880);
      v11 = swift_allocObject(v10, 64, 7);
      *(_OWORD *)(v11 + 16) = xmmword_1000C1810;
      *(_QWORD *)(v11 + 56) = sub_100076140(0, &qword_10014FE68, SACardSnippet_ptr);
      *(_QWORD *)(v11 + 32) = a2;
      v12 = a2;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v11);
      objc_msgSend(v7, "siriSnippetViewController:pushSirilandSnippets:", v9, isa);

      swift_unknownObjectRelease(v7);
    }
  }
}

uint64_t sub_100092320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v2 = a2;
  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v5 = sub_100076140(0, (unint64_t *)&qword_10014F9E0, SFCardSection_ptr);
    v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v5);
  }
  swift_retain(v3);
  v4(v2);
  swift_release(v3);
  return swift_bridgeObjectRelease(v2);
}

void sub_100092390(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

id sub_100092458(double a1, double a2)
{
  void *v2;
  void *v3;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  id result;
  id v14;
  double v15;
  double v16;
  uint64_t v17;
  unint64_t v18;

  v3 = v2;
  v17 = 0;
  v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  v6._object = (void *)0x80000001000E1C50;
  v6._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v6);
  v15 = a1;
  v16 = a2;
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)(&v15, &v17, v7, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v8 = v17;
  v9 = v18;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000760E8(v10, (uint64_t)qword_100150068);
  v12 = static os_log_type_t.info.getter(v11);
  sub_10009973C(v12, 0x2000000uLL, 0xD00000000000001ALL, 0x80000001000E09A0, v8, v9);
  swift_bridgeObjectRelease(v9);
  result = objc_msgSend(v3, "delegate", *(_QWORD *)&v15, *(_QWORD *)&v16);
  if (result)
  {
    v14 = result;
    objc_msgSend(result, "siriViewControllerHeightDidChange:", v3);
    return (id)swift_unknownObjectRelease(v14);
  }
  return result;
}

id sub_100092608()
{
  void *v0;
  id result;
  id v2;
  id v3;

  result = objc_msgSend(v0, "delegate");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "siriSnippetViewController:setStatusViewHidden:", v0, 1);
    swift_unknownObjectRelease(v2);
    result = objc_msgSend(v0, "_privateDelegate");
    if (result)
    {
      v3 = result;
      objc_msgSend(result, "siriViewControllerWillBeginEditing:", v0);
      return (id)swift_unknownObjectRelease(v3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1000926CC()
{
  void *v0;
  id result;
  id v2;
  id v3;

  result = objc_msgSend(v0, "_privateDelegate");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "siriViewControllerDidEndEditing:", v0);
    swift_unknownObjectRelease(v2);
    result = objc_msgSend(v0, "delegate");
    if (result)
    {
      v3 = result;
      objc_msgSend(result, "siriSnippetViewController:setStatusViewHidden:", v0, 0);
      return (id)swift_unknownObjectRelease(v3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void SiriUICardSnippetViewController.emitInstrumentationEvent(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  Swift::String v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  id v30;
  Class isa;
  id v32;
  void (*v33)(char *, uint64_t);
  Class v34;
  id v35;
  objc_class *v36;
  Class v37;
  os_log_type_t v38;
  Class v39;
  char *v40;
  id v41;
  id v42;
  uint64_t v43;
  Swift::String v44;
  void *object;
  Swift::String v46;
  id v47;
  Swift::String v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  os_log_type_t v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  Class v58;
  _QWORD v59[2];
  id v60;
  char *v61;
  id v62;
  id v63;
  unint64_t v64;
  unint64_t v65;

  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100076100(&qword_10014F890);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v59 - v10;
  v64 = 0;
  v65 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease(v65);
  v64 = 0xD000000000000022;
  v65 = 0x80000001000E06D0;
  v12 = a1;
  v13 = objc_msgSend(v12, "description");
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v16);
  v19 = v64;
  v18 = v65;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_1000760E8(v20, (uint64_t)qword_100150068);
  v22 = static os_log_type_t.info.getter(v21);
  v61 = "o hide background.";
  sub_10009973C(v22, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000E06B0, v19, v18);
  swift_bridgeObjectRelease(v18);
  v23 = objc_opt_self(VRXTurnBasedInstrumentationEvent);
  v62 = (id)swift_dynamicCastObjCClass(v12, v23);
  if (!v62)
  {
    v38 = static os_log_type_t.info.getter(0);
    sub_10009973C(v38, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000E06B0, 0xD000000000000045, 0x80000001000E0700);
    return;
  }
  v59[1] = v21;
  v24 = v12;
  v25 = objc_msgSend(v63, "instrumentationTurnIdentifier");
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
    goto LABEL_17;
  }
  v26 = v25;
  v60 = v24;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v25);

  v27 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v27(v11, v5, v2);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v28(v11, 0, 1, v2);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v29(v11, 1, v2) == 1)
  {
LABEL_17:
    __break(1u);
    return;
  }
  v30 = objc_allocWithZone((Class)AFAnalyticsTurnBasedInstrumentationContext);
  isa = UUID._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v30, "initWithTurnIdentifier:", isa);

  v33 = *(void (**)(char *, uint64_t))(v3 + 8);
  v33(v11, v2);
  v34 = (Class)v32;
  v35 = v62;
  if (objc_msgSend(v62, "requiresNewTurn"))
  {
    v36 = (objc_class *)objc_msgSend(v63, "instrumentationTurnIdentifier");
    v37 = v36;
    if (v36)
    {
      static UUID._unconditionallyBridgeFromObjectiveC(_:)(v36);

      v27(v9, v5, v2);
      v28(v9, 0, 1, v2);
      if (v29(v9, 1, v2) == 1)
      {
        v37 = 0;
      }
      else
      {
        v37 = UUID._bridgeToObjectiveC()().super.isa;
        v33(v9, v2);
      }
    }
    else
    {
      v28(v9, 1, 1, v2);
    }
    v40 = v61;
    v41 = objc_msgSend((id)objc_opt_self(AFAnalyticsTurnBasedInstrumentationContext), "newTurnBasedContextWithPreviousTurnID:", v37);

    v64 = 0;
    v65 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease(v65);
    v64 = 0xD00000000000001ALL;
    v65 = 0x80000001000E19F0;
    v42 = objc_msgSend(v41, "turnIdentifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v42);

    v43 = sub_10007A47C((unint64_t *)&qword_10014FAE0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v43);
    object = v44._object;
    String.append(_:)(v44);
    swift_bridgeObjectRelease(object);
    v33(v5, v2);
    v46._countAndFlagsBits = 0x646C4F203E2D3C20;
    v46._object = (void *)0xEE00206E72755420;
    String.append(_:)(v46);
    v47 = -[objc_class turnIdentifier](v34, "turnIdentifier");

    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v47);
    v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v43);
    v49 = v48._object;
    String.append(_:)(v48);
    swift_bridgeObjectRelease(v49);
    v50 = ((uint64_t (*)(char *, uint64_t))v33)(v5, v2);
    v51 = v64;
    v52 = v65;
    v53 = static os_log_type_t.info.getter(v50);
    sub_10009973C(v53, 0x2000000uLL, 0xD00000000000001CLL, (unint64_t)v40 | 0x8000000000000000, v51, v52);
    swift_bridgeObjectRelease(v52);

    v54 = (void *)objc_opt_self(SRUIFInstrumentationManager);
    v39 = (Class)v41;
    v55 = objc_msgSend(v54, "sharedManager");
    objc_msgSend(v55, "storeCurrentInstrumentationTurnContext:", v39);

    v56 = -[objc_class turnIdentifier](v39, "turnIdentifier");
    static UUID._unconditionallyBridgeFromObjectiveC(_:)(v56);

    v34 = UUID._bridgeToObjectiveC()().super.isa;
    v33(v5, v2);
    objc_msgSend(v63, "setInstrumentationTurnIdentifier:", v34);

    v35 = v62;
  }
  else
  {
    v39 = v34;
  }

  v57 = -[objc_class turnIdentifier](v39, "turnIdentifier");
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v57);

  v58 = UUID._bridgeToObjectiveC()().super.isa;
  v33(v5, v2);
  objc_msgSend(v35, "emitWithTurnIdentifier:", v58);

}

Swift::Void __swiftcall SiriUICardSnippetViewController.informHostOfBackgroundColor(_:)(UIColor_optional a1)
{
  void *v1;
  void *v2;
  Class isa;
  objc_class *v4;
  uint64_t v5;
  Swift::String v6;
  void *object;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  Class v23;
  unint64_t v24;
  unint64_t v25;

  v2 = v1;
  isa = a1.value.super.isa;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease(0xE000000000000000);
  v24 = 0xD000000000000010;
  v25 = 0x80000001000E1A10;
  v23 = isa;
  v4 = isa;
  v5 = sub_100076100(&qword_10014FDE0);
  v6._countAndFlagsBits = String.init<A>(describing:)(&v23, v5);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8 = v24;
  v9 = v25;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000760E8(v10, (uint64_t)qword_100150068);
  v12 = static os_log_type_t.info.getter(v11);
  sub_10009973C(v12, 0x2000000uLL, 0xD00000000000001FLL, 0x80000001000E0950, v8, v9);
  swift_bridgeObjectRelease(v9);
  v13 = type metadata accessor for SiriUIVisualResponseViewController();
  v14 = swift_dynamicCastClass(v2, v13);
  if (v14 && isa)
  {
    v15 = v14;
    v16 = *(void **)(v14 + OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView);
    v17 = v4;
    v18 = v2;
    v19 = v16;
    objc_msgSend(v19, "setEffect:", 0);
    objc_msgSend(v19, "setBackgroundColor:", v17);
    v20 = objc_msgSend(v18, "delegate");
    if (v20)
    {
      v21 = v20;
      if ((objc_msgSend(v20, "respondsToSelector:", "siriSnippetViewController:informHostOfBackgroundView:isSnippetAsyncColored:") & 1) != 0)
      {
        v22 = v18;
        objc_msgSend(v21, "siriSnippetViewController:informHostOfBackgroundView:isSnippetAsyncColored:", v15, v19, 0);

        swift_unknownObjectRelease(v21);
      }
      else
      {

        swift_unknownObjectRelease(v21);
      }
    }
    else
    {

    }
  }
}

void SiriUICardSnippetViewController.informHostOfBackgroundMaterial(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v2 = v1;
  v24 = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v4._object = (void *)0x80000001000E1A30;
  v4._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v4);
  v23 = a1;
  type metadata accessor for VRXHostMaterial(0);
  _print_unlocked<A, B>(_:_:)(&v23, &v24, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6 = v24;
  v7 = v25;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_1000760E8(v8, (uint64_t)qword_100150068);
  v10 = static os_log_type_t.info.getter(v9);
  sub_10009973C(v10, 0x2000000uLL, 0xD000000000000022, 0x80000001000E0850, v6, v7);
  swift_bridgeObjectRelease(v7);
  v11 = type metadata accessor for SiriUIVisualResponseViewController();
  v12 = swift_dynamicCastClass(v2, v11);
  if (v12 && (unint64_t)(a1 - 1) <= 4)
  {
    v13 = v12;
    v14 = qword_1000C1958[a1 - 1];
    v15 = *(void **)(v12 + OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView);
    v16 = (void *)objc_opt_self(UIBlurEffect);
    v17 = v2;
    v18 = v15;
    v19 = objc_msgSend(v16, "effectWithStyle:", v14);
    objc_msgSend(v18, "setEffect:", v19);

    objc_msgSend(v18, "setBackgroundColor:", 0);
    v20 = objc_msgSend(v17, "delegate");
    if (v20)
    {
      v21 = v20;
      if ((objc_msgSend(v20, "respondsToSelector:", "siriSnippetViewController:informHostOfBackgroundView:isSnippetAsyncColored:") & 1) != 0)
      {
        v22 = v17;
        objc_msgSend(v21, "siriSnippetViewController:informHostOfBackgroundView:isSnippetAsyncColored:", v13, v18, 0);

      }
      else
      {

      }
      swift_unknownObjectRelease(v21);
    }
    else
    {

    }
  }
}

uint64_t type metadata accessor for SiriUIVisualResponseViewController()
{
  return objc_opt_self(_TtC4Siri34SiriUIVisualResponseViewController);
}

uint64_t type metadata accessor for SiriUIHostingView()
{
  return objc_opt_self(_TtC4SiriP33_7351ACF3FB3EECEB6B17B4CD84C9F4C317SiriUIHostingView);
}

uint64_t sub_1000934EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100093510(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100091BC4(a1, a2, v2);
}

uint64_t sub_100093518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100093528(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100093530()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009355C(objc_class *a1)
{
  uint64_t v1;

  return sub_100091EC0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100093564()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100093590()
{
  uint64_t v0;

  sub_1000921F8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_100093598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FE80;
  if (!qword_10014FE80)
  {
    v1 = sub_100079794(&qword_10014FE78);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_10014FE80);
  }
  return result;
}

id sub_1000935E4(void *a1, id a2)
{
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  Class isa;

  result = objc_msgSend(a2, "delegate");
  if (result)
  {
    v5 = result;
    v6 = sub_100076100(&qword_10014F880);
    v7 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1000C1810;
    *(_QWORD *)(v7 + 56) = swift_getObjectType(a1);
    *(_QWORD *)(v7 + 32) = a1;
    v8 = a1;
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v5, "siriViewController:performAceCommands:", a2, isa);

    return (id)swift_unknownObjectRelease(v5);
  }
  return result;
}

double SRFeedbackButton.sizeThatFits(_:)()
{
  return 50.0;
}

void sub_1000937F0()
{
  void *v0;
  NSString v1;
  id v2;
  id v3;
  id v4;
  id v5;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v1);

  objc_msgSend(v0, "setImage:forState:", v2, 0);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemDarkGrayColor");
  objc_msgSend(v0, "setTintColor:", v3);

  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "setCornerRadius:", 25.0);

  v5 = objc_msgSend(v0, "layer");
  objc_msgSend(v5, "setMasksToBounds:", 1);

}

id SRFeedbackButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRFeedbackButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SRFeedbackButton()
{
  return objc_opt_self(_TtC4Siri16SRFeedbackButton);
}

char *sub_1000939E8(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  objc_super v22;

  *(_QWORD *)&v4[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialPlatterView] = 0;
  v22.receiver = v4;
  v22.super_class = (Class)type metadata accessor for SRCarPlaySnippetPlatterView();
  v9 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  v10 = objc_msgSend(v9, "layer");
  objc_msgSend(v10, "setCornerRadius:", 20.0);

  v11 = objc_msgSend(v9, "layer");
  if (qword_10014EC90 != -1)
    swift_once(&qword_10014EC90, sub_100076CB8);
  objc_msgSend(v11, "setCornerCurve:", qword_100151120);

  objc_msgSend(v9, "setAutoresizingMask:", 18);
  objc_msgSend(v9, "setFrame:", a1, a2, a3, a4);

  v12 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = objc_msgSend(v12, "layer");
  objc_msgSend(v13, "setCornerRadius:", 20.0);

  v14 = objc_msgSend(v12, "layer");
  objc_msgSend(v14, "setCornerCurve:", qword_100151120);

  objc_msgSend(v12, "setAutoresizingMask:", 18);
  objc_msgSend(v12, "setFrame:", a1, a2, a3, a4);
  objc_msgSend(v12, "setHidden:", 1);
  objc_msgSend(v9, "addSubview:", v12);
  v15 = *(void **)&v9[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView];
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView] = v12;
  v16 = v12;

  v17 = objc_msgSend(objc_allocWithZone((Class)MTMaterialView), "init");
  v18 = objc_msgSend(v17, "layer");
  objc_msgSend(v18, "setCornerRadius:", 20.0);

  v19 = objc_msgSend(v17, "layer");
  objc_msgSend(v19, "setCornerCurve:", qword_100151120);

  objc_msgSend(v17, "setAutoresizingMask:", 18);
  objc_msgSend(v17, "setFrame:", a1, a2, a3, a4);
  objc_msgSend(v17, "setOpaque:", 0);
  objc_msgSend(v17, "setHidden:", 1);
  objc_msgSend(v9, "addSubview:", v17);

  v20 = *(void **)&v9[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialPlatterView];
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialPlatterView] = v17;

  return v9;
}

id sub_100093D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id result;

  if (a1 == 3)
    v2 = 52;
  else
    v2 = 54;
  v3 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialPlatterView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialPlatterView), "setRecipe:", v2);
  v4 = *(void **)(v1 + v3);
  if (v4)
  {
    objc_msgSend(v4, "setOpaque:", 0);
    v5 = *(void **)(v1 + v3);
    if (v5)
      objc_msgSend(v5, "setHidden:", 0);
  }
  result = *(id *)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView);
  if (result)
    return objc_msgSend(result, "setHidden:", 1);
  return result;
}

id sub_100093DE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlaySnippetPlatterView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SRCarPlaySnippetPlatterView()
{
  return objc_opt_self(_TtC4Siri27SRCarPlaySnippetPlatterView);
}

uint64_t sub_100093E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  Swift::String v19;
  uint64_t v20;
  Swift::String v21;
  void *object;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v4 = a1;
  v6 = (unint64_t)a1 >> 62;
  if (!a1)
    goto LABEL_18;
  if (!v6)
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      swift_bridgeObjectRetain(a1);
      goto LABEL_5;
    }
LABEL_18:
    v30 = 0;
    v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(95);
    v19._countAndFlagsBits = 0xD000000000000054;
    v19._object = (void *)0x80000001000E1F10;
    String.append(_:)(v19);
    if (v4)
    {
      if (v6)
      {
        if (v4 >= 0)
          v28 = v4 & 0xFFFFFFFFFFFFFF8;
        else
          v28 = v4;
        swift_bridgeObjectRetain(v4);
        v20 = _CocoaArrayWrapper.endIndex.getter(v28);
        swift_bridgeObjectRelease(v4);
      }
      else
      {
        v20 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      v20 = 0;
    }
    v29 = v20;
    v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object);
    v23._countAndFlagsBits = 0x746E656D656C6520;
    v23._object = (void *)0xE900000000000073;
    String.append(_:)(v23);
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v24 = type metadata accessor for Logger(0);
    v25 = sub_1000760E8(v24, (uint64_t)qword_100150068);
    v26 = static os_log_type_t.info.getter(v25);
    sub_10009973C(v26, 0x10uLL, 0x6D6D6F43656B616DLL, 0xEF293A5F28646E61, v30, v31);
    swift_bridgeObjectRelease(v31);
    goto LABEL_25;
  }
  if (a1 >= 0)
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v2 = a1;
  swift_bridgeObjectRetain(a1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v2);
  swift_bridgeObjectRelease(v4);
  if (v3 != 1)
    goto LABEL_18;
  swift_bridgeObjectRetain(v4);
  if (!_CocoaArrayWrapper.endIndex.getter(v2))
  {
    swift_bridgeObjectRelease(v4);
    goto LABEL_18;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
LABEL_8:
    swift_bridgeObjectRelease(v4);
    v7 = objc_opt_self(SABaseCommand);
    v8 = swift_dynamicCastObjCClass(v3, v7);
    if (v8)
    {
      *(_QWORD *)a2 = v8;
      *(_BYTE *)(a2 + 8) = 1;
      v9 = enum case for Command.aceCommand(_:);
      v10 = type metadata accessor for Command(0);
      v11 = *(_QWORD *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(a2, v9, v10);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
    }
    v30 = 0;
    v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(38);
    v13._object = (void *)0x80000001000E1F70;
    v13._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v13);
    v29 = v3;
    v14 = sub_100076100(&qword_10014FBF0);
    _print_unlocked<A, B>(_:_:)(&v29, &v30, v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v15._object = (void *)0x80000001000E1F90;
    v15._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v15);
    v2 = v30;
    v4 = v31;
    if (qword_10014ECE0 == -1)
      goto LABEL_11;
    goto LABEL_32;
  }
  if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v3 = *(_QWORD *)(v4 + 32);
    swift_unknownObjectRetain(v3);
    goto LABEL_8;
  }
  __break(1u);
LABEL_32:
  swift_once(&qword_10014ECE0, sub_100098388);
LABEL_11:
  v16 = type metadata accessor for Logger(0);
  v17 = sub_1000760E8(v16, (uint64_t)qword_100150068);
  v18 = static os_log_type_t.info.getter(v17);
  sub_10009973C(v18, 0x10uLL, 0x6D6D6F43656B616DLL, 0xEF293A5F28646E61, v2, v4);
  swift_bridgeObjectRelease(v4);
  swift_unknownObjectRelease(v3);
LABEL_25:
  v27 = type metadata accessor for Command(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a2, 1, 1, v27);
}

uint64_t sub_100094264(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

id sub_100094620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v15;

  v0 = type metadata accessor for IntelligenceUI.PromptEntryView.BackgroundConfiguration(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = ((uint64_t (*)(void))__chkstk_darwin)();
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v15 - v6;
  v8 = dispatch thunk of IntelligenceUI.PromptEntryView.backgroundConfiguration.getter(v5);
  static IntelligenceUI.PromptEntryView.BackgroundConfiguration.intelligentLatency.getter(v8);
  v9 = static IntelligenceUI.PromptEntryView.BackgroundConfiguration.== infix(_:_:)(v7, v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v11 = ((uint64_t (*)(char *, uint64_t))v10)(v7, v0);
  if ((v9 & 1) != 0)
  {
    static IntelligenceUI.PromptEntryView.BackgroundConfiguration.intelligent.getter(v11);
    v11 = dispatch thunk of IntelligenceUI.PromptEntryView.backgroundConfiguration.setter(v7);
  }
  v12 = (void *)IntelligenceUI.PromptEntryView.textView.getter(v11);
  v13 = objc_msgSend(v12, "resignFirstResponder");

  return v13;
}

void sub_10009488C(uint64_t a1)
{
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSString v12;
  void *v13;
  double v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD v19[5];
  uint64_t v20;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView];
  v4 = (void *)IntelligenceUI.PromptEntryView.textView.getter(a1);
  v5 = objc_msgSend(v4, "text");

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

    v9 = swift_bridgeObjectRelease(v8);
    v10 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v10 = v6 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      v11 = (void *)IntelligenceUI.PromptEntryView.textView.getter(v9);
      v12 = String._bridgeToObjectiveC()();
      objc_msgSend(v11, "setText:", v12);

      sub_100095774((uint64_t)objc_msgSend(v3, "invalidateIntrinsicContentSize"));
      v13 = (void *)objc_opt_self(UIView);
      v14 = SiriSharedUIPromptEntryLatencyDisappearDuration;
      v15 = swift_allocObject(&unk_100124CB0, 24, 7);
      *(_QWORD *)(v15 + 16) = v2;
      v19[4] = sub_100095CE0;
      v20 = v15;
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 1107296256;
      v19[2] = sub_100094264;
      v19[3] = &unk_100124CC8;
      v16 = _Block_copy(v19);
      v17 = v20;
      v18 = v2;
      swift_release(v17);
      objc_msgSend(v13, "animateWithDuration:animations:", v16, v14);
      _Block_release(v16);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100094A24(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = type metadata accessor for IntelligenceUI.PromptEntryView.BackgroundConfiguration(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v4);
  return dispatch thunk of IntelligenceUI.PromptEntryView.backgroundConfiguration.setter(v6);
}

uint64_t sub_100094AEC(char *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t result;
  void *v8;
  id v9;
  char *v10;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_delegate], a2);
  if (result)
  {
    v8 = (void *)result;
    v9 = a3;
    v10 = a1;
    objc_msgSend(v8, *a4, v10);

    return swift_unknownObjectRelease(v8);
  }
  return result;
}

id sub_100094B98(uint64_t a1)
{
  return sub_10007A6E0(a1, type metadata accessor for SystemAssistantPromptEntryView);
}

uint64_t type metadata accessor for SystemAssistantPromptEntryView()
{
  return objc_opt_self(_TtC4Siri30SystemAssistantPromptEntryView);
}

uint64_t type metadata accessor for EditMenuAwarePromptEntryView(uint64_t a1)
{
  uint64_t result;

  result = qword_10014FF88;
  if (!qword_10014FF88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EditMenuAwarePromptEntryView);
  return result;
}

uint64_t sub_100094C4C(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_10014FF78);
}

UIMenu sub_100094C9C()
{
  Swift::String v0;
  Swift::OpaquePointer v2;
  UIImage_optional v3;

  sub_100076140(0, &qword_10014FFD8, UIMenu_ptr);
  v0._countAndFlagsBits = 0;
  v0._object = (void *)0xE000000000000000;
  v3.value.super.isa = 0;
  v3.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v0, (Swift::String_optional)0, v3, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v2);
}

uint64_t sub_100094D08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void *sub_100094D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  void *result;
  void *v5;

  v3 = a2;
  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_delegate, a2);
  if (result)
  {
    v5 = result;
    objc_msgSend(result, "entryViewShouldShowSuggestions:showSuggestions:", v2, v3 & 1);
    return (void *)swift_unknownObjectRelease(v5);
  }
  return result;
}

id sub_100094DB0(uint64_t a1, uint64_t a2)
{
  return (id)swift_unknownObjectWeakLoadStrong(a1 + qword_10014FF70, a2);
}

uint64_t sub_100094DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_unknownObjectWeakAssign(a1 + qword_10014FF70, a3);
}

uint64_t sub_100094DE4(char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t result;
  void *v8;
  id v9;
  char *v10;

  result = swift_unknownObjectWeakLoadStrong(&a1[qword_10014FF70], a2);
  if (result)
  {
    v8 = (void *)result;
    v9 = a3;
    swift_unknownObjectRetain(a4);
    v10 = a1;
    objc_msgSend(v8, "textViewWillPresentEditMenu:", v9);

    swift_unknownObjectRelease(a4);
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

void sub_100094E78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  void *v7;
  void *v8;
  _BYTE v9[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = (void *)swift_unknownObjectWeakLoadStrong(Strong + qword_10014FF70, v6);

    if (v8)
    {
      objc_msgSend(v8, "textViewDidDismissEditMenu:", a2);
      swift_unknownObjectRelease(v8);
    }
  }
}

void sub_100094F04(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[5];
  uint64_t v15;

  v7 = swift_allocObject(&unk_100124C38, 24, 7);
  swift_unknownObjectWeakInit(v7 + 16, a1, v8);
  v9 = swift_allocObject(&unk_100124C60, 32, 7);
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = a3;
  v14[4] = sub_100095CD8;
  v15 = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100094264;
  v14[3] = &unk_100124C78;
  v10 = _Block_copy(v14);
  v11 = v15;
  v12 = a3;
  swift_unknownObjectRetain(a4);
  v13 = a1;
  swift_release(v11);
  objc_msgSend(a4, "addCompletion:", v10);
  _Block_release(v10);

  swift_unknownObjectRelease(a4);
}

id sub_100095014(char *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7)
{
  objc_super v13;

  swift_unknownObjectWeakInit(&a1[qword_10014FF70], 0, a7);
  v13.receiver = a1;
  v13.super_class = (Class)type metadata accessor for EditMenuAwarePromptEntryView(0);
  return objc_msgSendSuper2(&v13, "initWithFrame:", a2, a3, a4, a5);
}

id sub_100095098(char *a1, uint64_t a2, uint64_t a3)
{
  objc_super v6;

  swift_unknownObjectWeakInit(&a1[qword_10014FF70], 0, a3);
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for EditMenuAwarePromptEntryView(0);
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

uint64_t sub_1000950F4()
{
  uint64_t v0;

  return sub_1000769B8(v0 + qword_10014FF70);
}

id sub_100095104()
{
  return sub_10007A6E0(0, (uint64_t (*)(void))type metadata accessor for EditMenuAwarePromptEntryView);
}

uint64_t sub_100095114(uint64_t a1)
{
  return sub_1000769B8(a1 + qword_10014FF70);
}

uint64_t sub_100095124()
{
  return type metadata accessor for EditMenuAwarePromptEntryView(0);
}

char *sub_10009512C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  _BYTE *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _BYTE *v28;
  objc_class *v29;
  char *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  unint64_t v38;
  char *v39;
  id v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  Class isa;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[5];
  objc_super v75;

  v11 = type metadata accessor for IntelligenceUI.PromptEntryView.BackgroundConfiguration(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for UIButton.Configuration(0);
  v72 = *(_QWORD *)(v20 - 8);
  v73 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion] = 0;
  v23 = &v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion];
  *v23 = 0;
  v23[1] = 0;
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_delegate], 0, v24);
  v25 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView;
  v26 = type metadata accessor for EditMenuAwarePromptEntryView(0);
  v27 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v26));
  v28 = v5;
  *(_QWORD *)&v5[v25] = objc_msgSend(v27, "init");

  v29 = (objc_class *)type metadata accessor for SystemAssistantPromptEntryView();
  v75.receiver = v28;
  v75.super_class = v29;
  v30 = (char *)objc_msgSendSuper2(&v75, "initWithFrame:", a2, a3, a4, a5);
  static UIButton.Configuration.borderless()();
  UIButton.Configuration.image.setter(0);
  v31 = (void *)objc_opt_self(UIColor);
  UIButton.Configuration.baseForegroundColor.setter(objc_msgSend(v31, "tertiaryLabelColor"));
  v32 = objc_msgSend(v31, "tertiaryLabelColor");
  v33 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithHierarchicalColor:", v32);

  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v33);
  v34 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView;
  v74[3] = sub_100076100(&qword_10014FFE0);
  v74[4] = sub_100095D00();
  v74[0] = 3;
  v35 = dispatch thunk of IntelligenceUI.PromptEntryView.visibleLineLimit.setter(v74);
  v36 = (void *)IntelligenceUI.PromptEntryView.textView.getter(v35);
  objc_msgSend(v36, "setKeyboardAppearance:", 13);

  v37 = *(void **)&v30[v34];
  v38 = sub_100095D4C();
  v39 = v30;
  v40 = v37;
  dispatch thunk of IntelligenceUI.PromptEntryView.delegate.setter(v30, v38);

  v41 = *(char **)&v30[v34];
  swift_unknownObjectWeakAssign(&v41[qword_10014FF70], v39);
  v42 = v41;
  v43 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000021, 0x80000001000E2300);
  static Locale.current.getter(v43);
  v44 = String.init(localized:table:bundle:locale:comment:)(v19, 0x617A696C61636F4CLL, 0xEB00000000656C62, 0, v16, 0, 0, 256);
  dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter(v44);

  v45 = *(id *)&v30[v34];
  dispatch thunk of IntelligenceUI.PromptEntryView.trailingButtonActivatesDictationWhenEmpty.setter(0);

  v46 = *(id *)&v30[v34];
  dispatch thunk of IntelligenceUI.PromptEntryView.isTrailingButtonVisible.setter(0);

  v47 = *(id *)&v30[v34];
  dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonConfiguredAsToggle.setter(1);

  v48 = *(_QWORD *)&v30[v34];
  static IntelligenceUI.PromptEntryView.BackgroundConfiguration.intelligent.getter(v49);
  dispatch thunk of IntelligenceUI.PromptEntryView.backgroundConfiguration.setter(v13);
  v50 = (void *)IntelligenceUI.PromptEntryView.textView.getter(objc_msgSend(v39, "addSubview:", v48));
  v51 = objc_msgSend(v50, "inputAssistantItem");

  objc_msgSend(v51, "_setDictationReplacementAction:", a1);
  v52 = *(void **)&v30[v34];
  objc_msgSend(v52, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v53 = (void *)objc_opt_self(NSLayoutConstraint);
  v54 = sub_100076100((uint64_t *)&unk_10014FB20);
  v55 = swift_allocObject(v54, 64, 7);
  *(_OWORD *)(v55 + 16) = xmmword_1000C19C0;
  v56 = objc_msgSend(v39, "topAnchor");
  v57 = objc_msgSend(v52, "topAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v55 + 32) = v58;
  v59 = objc_msgSend(v39, "bottomAnchor");
  v60 = objc_msgSend(*(id *)&v30[v34], "bottomAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v55 + 40) = v61;
  v62 = objc_msgSend(v39, "leftAnchor");
  v63 = objc_msgSend(*(id *)&v30[v34], "leftAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v55 + 48) = v64;
  v65 = objc_msgSend(v39, "rightAnchor");
  v66 = objc_msgSend(*(id *)&v30[v34], "rightAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v55 + 56) = v67;
  v74[0] = v55;
  specialized Array._endMutation()(v68);
  v69 = v74[0];
  sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v69);
  objc_msgSend(v53, "activateConstraints:", isa);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v22, v73);
  return v39;
}

void sub_100095774(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t Strong;
  void *v16;
  NSString v17;

  v2 = v1;
  v3 = (void *)IntelligenceUI.PromptEntryView.textView.getter(a1);
  v4 = objc_msgSend(v3, "text");

  if (v4)
  {
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v7 = v6;

    swift_bridgeObjectRelease(v7);
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    v9 = dispatch thunk of IntelligenceUI.PromptEntryView.isTrailingButtonVisible.setter(v8 != 0);
    v10 = (void *)IntelligenceUI.PromptEntryView.textView.getter(v9);
    v11 = objc_msgSend(v10, "text");

    if (v11)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

    }
    else
    {
      v14 = 0xE000000000000000;
    }
    Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_delegate, v12);
    if (Strong)
    {
      v16 = (void *)Strong;
      v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v14);
      objc_msgSend(v16, "didChangeText:", v17);

      swift_unknownObjectRelease(v16);
    }
    else
    {
      swift_bridgeObjectRelease(v14);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1000958B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion] = 0;
  v4 = &v3[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion];
  *v4 = 0;
  v4[1] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_delegate], 0, a3);
  v5 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView;
  v6 = type metadata accessor for EditMenuAwarePromptEntryView(0);
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000E1170, "Siri/SystemAssistantPromptEntryView.swift", 41, 2, 143, 0);
  __break(1u);
}

void sub_100095970(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  double v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _BYTE *v26;
  _QWORD v27[5];
  uint64_t v28;

  v2 = v1;
  v3 = (void *)IntelligenceUI.PromptEntryView.textView.getter(a1);
  v4 = objc_msgSend(v3, "text");

  if (v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v6 = v5;
    v7 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion;
    if (v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion] == 1)
    {

      Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_delegate], v8);
      if (Strong)
      {
        v10 = (void *)Strong;
        v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion + 8];
        if (v11)
        {
          swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion
                                                + 8]);
          swift_bridgeObjectRelease(v6);
          v6 = v11;
        }
        v12 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v6);
        objc_msgSend(v10, "entryViewDidSubmit:suggestionText:", v2, v12);

        swift_unknownObjectRelease(v10);
      }
      else
      {
        swift_bridgeObjectRelease(v6);
      }
      v2[v7] = 0;
      v19 = &v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion];
      v20 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion + 8];
      *v19 = 0;
      v19[1] = 0;
      swift_bridgeObjectRelease(v20);
    }
    else
    {
      swift_bridgeObjectRelease(v5);
      v17 = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_delegate], v16);
      if (v17)
      {
        v18 = v17;
        objc_msgSend(v17, "entryViewDidSubmit:text:", v2, v4);

        swift_unknownObjectRelease(v18);
      }
      else
      {

      }
    }
    v21 = (void *)objc_opt_self(UIView);
    v22 = SiriSharedUIPromptEntryLatencyAppearDuration;
    v23 = swift_allocObject(&unk_100124BE8, 24, 7);
    *(_QWORD *)(v23 + 16) = v2;
    v27[4] = sub_100095C50;
    v28 = v23;
    v27[0] = _NSConcreteStackBlock;
    v27[1] = 1107296256;
    v27[2] = sub_100094264;
    v27[3] = &unk_100124C00;
    v24 = _Block_copy(v27);
    v25 = v28;
    v26 = v2;
    swift_release(v25);
    objc_msgSend(v21, "animateWithDuration:animations:", v24, v22);
    _Block_release(v24);
  }
  else
  {
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_1000760E8(v13, (uint64_t)qword_100150068);
    v15 = static os_log_type_t.info.getter(v14);
    sub_10009973C(v15, 0, 0xD00000000000001CLL, 0x80000001000E2240, 0xD000000000000021, 0x80000001000E2260);
  }
}

uint64_t sub_100095C2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100095C50()
{
  uint64_t v0;

  return sub_100094A24(*(_QWORD *)(v0 + 16), (void (*)(uint64_t))&static IntelligenceUI.PromptEntryView.BackgroundConfiguration.intelligentLatency.getter);
}

uint64_t sub_100095C70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100095C80(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_100095C88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100095CAC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100095CD8()
{
  uint64_t v0;

  sub_100094E78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100095CE0()
{
  uint64_t v0;

  return sub_100094A24(*(_QWORD *)(v0 + 16), (void (*)(uint64_t))&static IntelligenceUI.PromptEntryView.BackgroundConfiguration.intelligent.getter);
}

unint64_t sub_100095D00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FFE8;
  if (!qword_10014FFE8)
  {
    v1 = sub_100079794(&qword_10014FFE0);
    result = swift_getWitnessTable(&protocol conformance descriptor for PartialRangeUpTo<A>, v1);
    atomic_store(result, (unint64_t *)&qword_10014FFE8);
  }
  return result;
}

unint64_t sub_100095D4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FFF0;
  if (!qword_10014FFF0)
  {
    v1 = type metadata accessor for SystemAssistantPromptEntryView();
    result = swift_getWitnessTable(&unk_1000C1A40, v1);
    atomic_store(result, (unint64_t *)&qword_10014FFF0);
  }
  return result;
}

void sub_100095DC8(void *a1, char a2)
{
  char *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  id v28;
  double v29;
  id v30;
  double v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  double v36;
  void *v37;
  id v38;
  id v39;
  double v40;
  id v41;
  id v42;
  double v43;
  id v44;
  double v45;
  _QWORD v46[5];
  uint64_t v47;

  v4 = OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView;
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView];
  if (a1)
  {
    v7 = type metadata accessor for SRCarPlayScrollView();
    v8 = swift_dynamicCastClass(a1, v7);
    if (v8 && (v9 = (void *)v8, *(_BYTE *)(v8 + OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen) == 1))
    {
      v10 = (id)v5;
      v11 = a1;
      v12 = sub_100096A70(v9);
    }
    else
    {
      v13 = (id)v5;
      v11 = a1;
      v12 = sub_100097484(v11);
    }
    v14 = (unint64_t)v12;

  }
  else
  {
    v15 = (id)v5;
    v14 = 0;
  }
  v16 = *(void **)&v2[v4];
  *(_QWORD *)&v2[v4] = v14;
  v17 = (id)v14;

  if (v5 | v14)
  {
    v18 = (void *)objc_opt_self(CATransaction);
    objc_msgSend(v18, "begin");
    if (v5)
    {
      v19 = swift_allocObject(&unk_100124D40, 24, 7);
      *(_QWORD *)(v19 + 16) = v5;
      v46[4] = sub_1000982AC;
      v47 = v19;
      v46[0] = _NSConcreteStackBlock;
      v46[1] = 1107296256;
      v46[2] = sub_100094264;
      v46[3] = &unk_100124D58;
      v20 = _Block_copy(v46);
      v21 = v47;
      v22 = (id)v5;
      swift_release(v21);
      objc_msgSend(v18, "setCompletionBlock:", v20);
      _Block_release(v20);

      if (v14)
      {
        v23 = v22;
        v24 = v17;
        objc_msgSend(v2, "insertSubview:belowSubview:", v24, v23);
        if ((a2 & 1) != 0)
        {
          sub_1000980AC(v23, 2u);
          sub_1000980AC(v24, 1u);
        }
        else
        {
          v28 = objc_msgSend(v24, "layer");
          LODWORD(v29) = 1.0;
          objc_msgSend(v28, "setOpacity:", v29);

          v30 = objc_msgSend(v23, "layer");
          LODWORD(v31) = 0;
          objc_msgSend(v30, "setOpacity:", v31);

        }
        goto LABEL_30;
      }
      if ((a2 & 1) == 0)
      {
        v37 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView];
        v38 = v22;
        if (v37)
        {
          v39 = objc_msgSend(v37, "layer");
          LODWORD(v40) = 0;
          objc_msgSend(v39, "setOpacity:", v40);

        }
        v44 = objc_msgSend(v22, "layer");
        LODWORD(v45) = 0;
        objc_msgSend(v44, "setOpacity:", v45);

        goto LABEL_30;
      }
      v25 = v22;
      sub_100096234(1);
      v26 = v25;
      v27 = 3;
    }
    else
    {
      if (!v14)
      {
LABEL_30:
        objc_msgSend(v18, "commit");

        return;
      }
      if ((a2 & 1) == 0)
      {
        v32 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView];
        if (v32)
        {
          v33 = v17;
          v34 = objc_msgSend(v32, "layer");
          v35 = v34;
          LODWORD(v36) = 0.5;
          if (v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground])
            *(float *)&v36 = 1.0;
          objc_msgSend(v34, "setOpacity:", v36);

        }
        else
        {
          v41 = v17;
        }
        v42 = objc_msgSend(v17, "layer");
        LODWORD(v43) = 1.0;
        objc_msgSend(v42, "setOpacity:", v43);

        goto LABEL_30;
      }
      v25 = v17;
      sub_100096234(0);
      v26 = v25;
      v27 = 0;
    }
    sub_1000980AC(v26, v27);

    goto LABEL_30;
  }
}

id sub_10009618C(void *a1)
{
  Class isa;
  uint64_t v3;
  uint64_t v4;

  isa = (Class)objc_msgSend(a1, "constraints");
  if (!isa)
  {
    v3 = sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v3);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }
  objc_msgSend((id)objc_opt_self(NSLayoutConstraint), "deactivateConstraints:", isa);

  return objc_msgSend(a1, "removeFromSuperview");
}

void sub_100096234(char a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  double v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  double v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  double v22;
  id v23;
  double v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  double v30;
  _QWORD v31[3];
  void *v32;

  if ((a1 & 1) != 0)
  {
    v18 = OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView;
    v19 = *(void **)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView);
    if (v19)
    {
      v20 = objc_msgSend(v19, "layer");
      v21 = v20;
      LODWORD(v22) = 0.5;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground))
        *(float *)&v22 = 1.0;
      objc_msgSend(v20, "setOpacity:", v22);

    }
    v23 = sub_100076E9C();
    v24 = 0.5;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground))
      v24 = 1.0;
    v32 = &type metadata for Double;
    *(double *)v31 = v24;
    v25 = sub_1000844C4(v31, (uint64_t)&type metadata for Double);
    v6 = v23;
    v26 = _bridgeAnythingToObjectiveC<A>(_:)(v25, &type metadata for Double);
    sub_10007F48C(v31);
    objc_msgSend(v6, "setFromValue:", v26);

    swift_unknownObjectRelease(v26);
    v27 = *(void **)(v1 + v18);
    if (v27)
    {
      v28 = objc_msgSend(v27, "layer");
      objc_msgSend(v28, "addAnimation:forKey:", v6, 0);

      v29 = *(void **)(v1 + v18);
      if (v29)
      {
        v16 = objc_msgSend(v29, "layer");
        LODWORD(v30) = 0;
        objc_msgSend(v16, "setOpacity:", v30);
LABEL_19:

      }
    }
  }
  else
  {
    v2 = sub_100076D5C();
    v3 = OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground;
    v4 = 0.5;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground))
      v4 = 1.0;
    v32 = &type metadata for Double;
    *(double *)v31 = v4;
    v5 = sub_1000844C4(v31, (uint64_t)&type metadata for Double);
    v6 = v2;
    v7 = _bridgeAnythingToObjectiveC<A>(_:)(v5, &type metadata for Double);
    sub_10007F48C(v31);
    objc_msgSend(v6, "setToValue:", v7);

    swift_unknownObjectRelease(v7);
    v8 = OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView;
    v9 = *(void **)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView);
    if (v9)
    {
      v10 = objc_msgSend(v9, "layer");
      LODWORD(v11) = 0;
      objc_msgSend(v10, "setOpacity:", v11);

      v12 = *(void **)(v1 + v8);
      if (v12)
      {
        v13 = objc_msgSend(v12, "layer");
        objc_msgSend(v13, "addAnimation:forKey:", v6, 0);

        v14 = *(void **)(v1 + v8);
        if (v14)
        {
          v15 = objc_msgSend(v14, "layer");
          v16 = v15;
          LODWORD(v17) = 0.5;
          if (*(_BYTE *)(v1 + v3))
            *(float *)&v17 = 1.0;
          objc_msgSend(v15, "setOpacity:", v17);
          goto LABEL_19;
        }
      }
    }
  }

}

void sub_1000964D4(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  void *v3;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  char **v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  double v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  id v46;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView];
  if (v3)
  {
    v5 = OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView;
    v6 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView];
    v46 = v3;
    v7 = objc_msgSend(v6, "removeFromSuperview");
    v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground] = a1 & 1;
    if ((a1 & 1) != 0)
    {
      v9 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 7);
      v10 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v9);

    }
    else
    {
      if ((AFDeviceSupportsSystemAssistantExperience(v7, v8) & 1) != 0)
        goto LABEL_10;
      v10 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v11 = objc_msgSend(v10, "traitCollection");
      v12 = objc_msgSend(v11, "userInterfaceStyle");

      v13 = (void *)objc_opt_self(UIColor);
      v14 = &selRef_systemGrayColor;
      if (v12 != (id)1)
        v14 = &selRef_systemGray4Color;
      v15 = objc_msgSend(v13, *v14);
      objc_msgSend(v10, "setBackgroundColor:", v15);

      sub_100076140(0, &qword_100150060, UITraitCollection_ptr);
      v16 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
      v17 = sub_100076140(0, &qword_10014FD48, UIView_ptr);
      v18 = UIView.registerForTraitChanges<A>(_:handler:)(v16, sub_1000969C8, 0, v17);
      swift_unknownObjectRelease(v18);
      swift_bridgeObjectRelease(v16);
    }
    v19 = *(void **)&v2[v5];
    *(_QWORD *)&v2[v5] = v10;

LABEL_10:
    v20 = *(void **)&v2[v5];
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v22 = objc_msgSend(v21, "layer");
      LODWORD(v23) = 0;
      objc_msgSend(v22, "setOpacity:", v23);

      objc_msgSend(v2, "insertSubview:belowSubview:", v21, v46);
      v24 = (void *)objc_opt_self(NSLayoutConstraint);
      v25 = sub_100076100((uint64_t *)&unk_10014FB20);
      v26 = swift_allocObject(v25, 64, 7);
      *(_OWORD *)(v26 + 16) = xmmword_1000C19C0;
      v27 = objc_msgSend(v21, "topAnchor");
      v28 = objc_msgSend(v2, "safeAreaLayoutGuide");
      v29 = objc_msgSend(v28, "topAnchor");

      v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);
      *(_QWORD *)(v26 + 32) = v30;
      v31 = objc_msgSend(v21, "bottomAnchor");
      v32 = objc_msgSend(v2, "safeAreaLayoutGuide");
      v33 = objc_msgSend(v32, "bottomAnchor");

      v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);
      *(_QWORD *)(v26 + 40) = v34;
      v35 = objc_msgSend(v21, "leadingAnchor");
      v36 = objc_msgSend(v2, "safeAreaLayoutGuide");
      v37 = objc_msgSend(v36, "leadingAnchor");

      v38 = objc_msgSend(v35, "constraintEqualToAnchor:", v37);
      *(_QWORD *)(v26 + 48) = v38;
      v39 = objc_msgSend(v21, "trailingAnchor");
      v40 = objc_msgSend(v2, "safeAreaLayoutGuide");
      v41 = objc_msgSend(v40, "trailingAnchor");

      v42 = objc_msgSend(v39, "constraintEqualToAnchor:", v41);
      *(_QWORD *)(v26 + 56) = v42;
      specialized Array._endMutation()(v43);
      v44 = v26;
      sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v44);
      objc_msgSend(v24, "activateConstraints:", isa);

    }
    else
    {

    }
  }
}

void sub_1000969C8(void *a1)
{
  id v2;
  id v3;
  void *v4;
  char **v5;
  id v6;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_systemGrayColor;
  if (v3 != (id)1)
    v5 = &selRef_systemGray4Color;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(a1, "setBackgroundColor:", v6);

}

id sub_100096A70(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  Class isa;
  void *v27;
  objc_class *v28;
  Class v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  id v67;
  id v68;
  id v69;
  double v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  Class v82;
  id v84;
  uint64_t v85;

  v2 = v1;
  v3 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v3);
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v85 = sub_100076100((uint64_t *)&unk_10014FB20);
  v5 = swift_allocObject(v85, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1000C1AA0;
  v6 = objc_msgSend(v3, "centerXAnchor");
  v7 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v8 = objc_msgSend(v7, "centerXAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);
  *(_QWORD *)(v5 + 32) = v9;
  v10 = objc_msgSend(v3, "topAnchor");
  v11 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v12 = objc_msgSend(v11, "topAnchor");

  v13 = objc_msgSend(v10, "constraintGreaterThanOrEqualToAnchor:constant:", v12, 0.0);
  *(_QWORD *)(v5 + 40) = v13;
  v14 = objc_msgSend(v3, "bottomAnchor");
  v15 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v16 = objc_msgSend(v15, "bottomAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, 0.0);
  *(_QWORD *)(v5 + 48) = v17;
  v18 = objc_msgSend(v3, "leadingAnchor");
  v19 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v20 = objc_msgSend(v19, "leadingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v5 + 56) = v21;
  v22 = objc_msgSend(v3, "trailingAnchor");
  v23 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v24 = objc_msgSend(v23, "trailingAnchor");

  v25 = objc_msgSend(v22, "constraintEqualToAnchor:", v24);
  *(_QWORD *)(v5 + 64) = v25;
  specialized Array._endMutation()();
  sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  objc_msgSend(v4, "activateConstraints:", isa);

  objc_msgSend(v3, "_setOverrideVibrancyTrait:", 1);
  v27 = (void *)objc_opt_self(MTMaterialView);
  v28 = (objc_class *)objc_msgSend(v27, "materialViewWithRecipe:", 52);
  if (v28)
  {
    v29 = v28;
    v84 = v4;
    objc_msgSend(v3, "bounds");
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;
    -[objc_class setAutoresizingMask:](v29, "setAutoresizingMask:", 18);
    -[objc_class setFrame:](v29, "setFrame:", v31, v33, v35, v37);
    -[objc_class setOpaque:](v29, "setOpaque:", 0);
    v38 = objc_msgSend(v2, "traitCollection");
    v39 = objc_msgSend(v38, "userInterfaceStyle");

    -[objc_class setHidden:](v29, "setHidden:", v39 != (id)1);
    v40 = sub_100076100(&qword_100150058);
    v41 = swift_allocObject(v40, 48, 7);
    *(_OWORD *)(v41 + 16) = xmmword_1000C1810;
    v42 = type metadata accessor for UITraitUserInterfaceStyle(0);
    *(_QWORD *)(v41 + 32) = v42;
    *(_QWORD *)(v41 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    v43 = sub_100076140(0, &qword_10014FD48, UIView_ptr);
    v44 = UIView.registerForTraitChanges<A>(_:handler:)(v41, sub_1000973B8, 0, v43);
    swift_unknownObjectRelease(v44);
    swift_bridgeObjectRelease(v41);
    objc_msgSend(v3, "addSubview:", v29);
    v45 = objc_msgSend(v27, "materialViewWithRecipe:", 53);
    if (v45)
    {
      v46 = v45;
      objc_msgSend(v3, "bounds");
      v48 = v47;
      v50 = v49;
      v52 = v51;
      v54 = v53;
      objc_msgSend(v46, "setAutoresizingMask:", 18);
      objc_msgSend(v46, "setFrame:", v48, v50, v52, v54);
      v55 = objc_msgSend(v2, "traitCollection");
      v56 = objc_msgSend(v55, "userInterfaceStyle");

      objc_msgSend(v46, "setHidden:", v56 == (id)1);
      objc_msgSend(v46, "setOpaque:", 0);
      v57 = swift_allocObject(v40, 48, 7);
      *(_OWORD *)(v57 + 16) = xmmword_1000C1810;
      *(_QWORD *)(v57 + 32) = v42;
      *(_QWORD *)(v57 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
      v58 = UIView.registerForTraitChanges<A>(_:handler:)(v57, sub_10009741C, 0, v43);
      swift_unknownObjectRelease(v58);
      swift_bridgeObjectRelease(v57);
      objc_msgSend(v3, "addSubview:", v46);
      objc_msgSend(v3, "bounds");
      v60 = v59;
      v62 = v61;
      v64 = v63;
      v66 = v65;
      v67 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
      v68 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
      objc_msgSend(v67, "setBackgroundColor:", v68);

      objc_msgSend(v67, "setAutoresizingMask:", 18);
      objc_msgSend(v67, "setFrame:", v60, v62, v64, v66);
      v69 = objc_msgSend(v67, "layer");
      LODWORD(v70) = 1034147594;
      objc_msgSend(v69, "setOpacity:", v70);

      v71 = objc_msgSend(v2, "traitCollection");
      v72 = objc_msgSend(v71, "userInterfaceStyle");

      objc_msgSend(v67, "setHidden:", v72 == (id)1);
      v73 = swift_allocObject(v40, 48, 7);
      *(_OWORD *)(v73 + 16) = xmmword_1000C1810;
      *(_QWORD *)(v73 + 32) = v42;
      *(_QWORD *)(v73 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
      v74 = UIView.registerForTraitChanges<A>(_:handler:)(v73, sub_10009741C, 0, v43);
      swift_unknownObjectRelease(v74);
      swift_bridgeObjectRelease(v73);
      objc_msgSend(v3, "addSubview:", v67);
      objc_msgSend(a1, "setClipsToBounds:", 1);
      objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v3, "addSubview:", a1);
      v75 = swift_allocObject(v85, 48, 7);
      *(_OWORD *)(v75 + 16) = xmmword_1000C18F0;
      v76 = objc_msgSend(v3, "centerXAnchor");
      v77 = objc_msgSend(a1, "centerXAnchor");
      v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

      *(_QWORD *)(v75 + 32) = v78;
      v79 = objc_msgSend(v3, "centerYAnchor");
      v80 = objc_msgSend(a1, "centerYAnchor");
      v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

      *(_QWORD *)(v75 + 40) = v81;
      specialized Array._endMutation()();
      v82 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v75);
      objc_msgSend(v84, "activateConstraints:", v82);

      v29 = v82;
    }

  }
  return v3;
}

id sub_1000973B8(void *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  return objc_msgSend(a1, "setHidden:", v3 != (id)1);
}

id sub_100097420(void *a1)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  return objc_msgSend(a1, "setHidden:", v3 == (id)1);
}

id sub_100097484(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  id v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  Class isa;
  double v36;
  double v37;
  double v38;
  double v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  Class v64;
  id v66;
  uint64_t v67;

  v2 = v1;
  v4 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = objc_msgSend(v4, "layer");
  if (qword_10014EC90 != -1)
    swift_once(&qword_10014EC90, sub_100076CB8);
  objc_msgSend(v5, "setCornerCurve:", qword_100151120);

  v6 = objc_msgSend(v4, "layer");
  LODWORD(v7) = 0.5;
  objc_msgSend(v6, "setShadowOpacity:", v7);

  v8 = objc_msgSend(v4, "layer");
  if (qword_10014EC98 != -1)
    swift_once(&qword_10014EC98, sub_100076CD0);
  objc_msgSend(v8, "setShadowColor:", qword_100151128);

  v9 = objc_msgSend(v4, "layer");
  objc_msgSend(v9, "setShadowRadius:", 20.0);

  v10 = objc_msgSend(v4, "layer");
  if (qword_10014ECA0 != -1)
    swift_once(&qword_10014ECA0, sub_100076D30);
  objc_msgSend(v10, "setShadowOffset:", xmmword_100151130);

  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v11 = objc_msgSend(v2, "addSubview:", v4);
  if (AFDeviceSupportsSystemAssistantExperience(v11, v12))
    v13 = 8.0;
  else
    v13 = 68.0;
  v66 = (id)objc_opt_self(NSLayoutConstraint);
  v67 = sub_100076100((uint64_t *)&unk_10014FB20);
  v14 = swift_allocObject(v67, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1000C1AA0;
  v15 = objc_msgSend(v4, "centerXAnchor");
  v16 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v17 = objc_msgSend(v16, "centerXAnchor");

  v18 = objc_msgSend(v15, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v14 + 32) = v18;
  v19 = objc_msgSend(v4, "topAnchor");
  v20 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v21 = objc_msgSend(v20, "topAnchor");

  v22 = objc_msgSend(v19, "constraintGreaterThanOrEqualToAnchor:constant:", v21, 12.0);
  *(_QWORD *)(v14 + 40) = v22;
  v23 = objc_msgSend(v4, "bottomAnchor");
  v24 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v25 = objc_msgSend(v24, "bottomAnchor");

  v26 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v25, -v13);
  *(_QWORD *)(v14 + 48) = v26;
  v27 = objc_msgSend(v4, "leadingAnchor");
  v28 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v29 = objc_msgSend(v28, "leadingAnchor");

  v30 = objc_msgSend(v27, "constraintGreaterThanOrEqualToAnchor:constant:", v29, 12.0);
  *(_QWORD *)(v14 + 56) = v30;
  v31 = objc_msgSend(v4, "trailingAnchor");
  v32 = objc_msgSend(v2, "safeAreaLayoutGuide");
  v33 = objc_msgSend(v32, "trailingAnchor");

  v34 = objc_msgSend(v31, "constraintLessThanOrEqualToAnchor:constant:", v33, -12.0);
  *(_QWORD *)(v14 + 64) = v34;
  specialized Array._endMutation()();
  sub_100076140(0, &qword_10014FD38, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v14);
  objc_msgSend(v66, "activateConstraints:", isa);

  objc_msgSend(v4, "_setOverrideVibrancyTrait:", 1);
  objc_msgSend(v4, "bounds");
  v40 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for SRCarPlaySnippetPlatterView()), "initWithFrame:", v36, v37, v38, v39);
  sub_100093D40(2);
  objc_msgSend(v4, "addSubview:", v40);
  v41 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_platterView];
  *(_QWORD *)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_platterView] = v40;
  v42 = v40;

  objc_msgSend(a1, "setClipsToBounds:", 1);
  objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v43 = objc_msgSend(a1, "layer");
  objc_msgSend(v43, "setCornerRadius:", 20.0);

  v44 = objc_msgSend(a1, "layer");
  objc_msgSend(v44, "setCornerCurve:", qword_100151120);

  objc_msgSend(v4, "addSubview:", a1);
  v45 = swift_allocObject(v67, 80, 7);
  *(_OWORD *)(v45 + 16) = xmmword_1000C1820;
  v46 = objc_msgSend(v4, "leadingAnchor");
  v47 = objc_msgSend(a1, "leadingAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v45 + 32) = v48;
  v49 = objc_msgSend(v4, "trailingAnchor");
  v50 = objc_msgSend(a1, "trailingAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v45 + 40) = v51;
  v52 = objc_msgSend(v4, "topAnchor");
  v53 = objc_msgSend(a1, "topAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v45 + 48) = v54;
  v55 = objc_msgSend(v4, "bottomAnchor");
  v56 = objc_msgSend(a1, "bottomAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v45 + 56) = v57;
  v58 = objc_msgSend(v4, "centerXAnchor");
  v59 = objc_msgSend(a1, "centerXAnchor");
  v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

  *(_QWORD *)(v45 + 64) = v60;
  v61 = objc_msgSend(v4, "centerYAnchor");
  v62 = objc_msgSend(a1, "centerYAnchor");
  v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

  *(_QWORD *)(v45 + 72) = v63;
  specialized Array._endMutation()();
  v64 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v45);
  objc_msgSend(v66, "activateConstraints:", v64);

  return v4;
}

char *sub_100097D84(void *a1)
{
  uint64_t v1;
  Swift::String v3;
  uint64_t v4;
  Swift::String v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  char *result;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  id v21;
  uint64_t v22;
  unint64_t v23;

  v22 = 0;
  v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(40);
  v3._countAndFlagsBits = 0xD000000000000025;
  v3._object = (void *)0x80000001000E23E0;
  String.append(_:)(v3);
  v21 = objc_msgSend(a1, "state");
  type metadata accessor for State(0);
  _print_unlocked<A, B>(_:_:)(&v21, &v22, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 46;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v7 = v22;
  v6 = v23;
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_1000760E8(v8, (uint64_t)qword_100150068);
  v10 = static os_log_type_t.info.getter(v9);
  sub_10009973C(v10, 0x10uLL, 0xD000000000000018, 0x80000001000E23C0, v7, v6);
  swift_bridgeObjectRelease(v6);
  result = (char *)objc_msgSend(a1, "state");
  if (result == (char *)3)
  {
    v12 = static os_log_type_t.info.getter(3);
    sub_10009973C(v12, 0x10uLL, 0xD000000000000018, 0x80000001000E23C0, 0xD000000000000038, 0x80000001000E2410);
    result = (char *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_delegate, v13);
    if (result)
    {
      v15 = result;
      v16 = &result[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate];
      Strong = swift_unknownObjectWeakLoadStrong(&result[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate], v14);
      if (Strong)
      {
        v18 = Strong;
        v19 = *((_QWORD *)v16 + 1);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 32))(v15, 7, ObjectType, v19);
        swift_unknownObjectRelease(v15);
        v15 = (char *)v18;
      }
      return (char *)swift_unknownObjectRelease(v15);
    }
  }
  return result;
}

id sub_100097FF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SRCarPlayView()
{
  return objc_opt_self(_TtC4Siri13SRCarPlayView);
}

void sub_1000980AC(void *a1, unsigned __int8 a2)
{
  int v4;
  id v5;
  double v6;
  void *v7;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  double v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  id v19;

  v4 = a2 & 0xFE;
  v5 = objc_msgSend(a1, "layer");
  v7 = v5;
  if (v4 == 2)
  {
    v8 = a2;
    LODWORD(v6) = 1.0;
    objc_msgSend(v5, "setOpacity:", v6);

    v9 = objc_msgSend(a1, "layer");
    v10 = sub_100076E9C();
    objc_msgSend(v9, "addAnimation:forKey:", v10, 0);

    if (v8 == 2)
    {
      v11 = objc_msgSend(a1, "layer");
      v12 = sub_100077128();
      objc_msgSend(v11, "addAnimation:forKey:", v12, 0);

    }
    v19 = objc_msgSend(a1, "layer");
    LODWORD(v13) = 0;
    objc_msgSend(v19, "setOpacity:", v13);
  }
  else
  {
    LODWORD(v6) = 0;
    objc_msgSend(v5, "setOpacity:", v6);

    v14 = objc_msgSend(a1, "layer");
    v15 = sub_100076D5C();
    objc_msgSend(v14, "addAnimation:forKey:", v15, 0);

    v16 = objc_msgSend(a1, "layer");
    v17 = sub_100076FDC();
    objc_msgSend(v16, "addAnimation:forKey:", v17, 0);

    v19 = objc_msgSend(a1, "layer");
    LODWORD(v18) = 1.0;
    objc_msgSend(v19, "setOpacity:", v18);
  }

}

uint64_t sub_100098288()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1000982AC()
{
  uint64_t v0;

  return sub_10009618C(*(void **)(v0 + 16));
}

uint64_t sub_1000982B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1000982C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1000982CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  char *v4;

  v4 = &v3[OBJC_IVAR____TtC4Siri13SRCarPlayView_delegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0, a3);
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC4Siri13SRCarPlayView_platterView] = 0;
  v3[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground] = 0;
  v3[OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000E1170, "Siri/SRCarPlayView.swift", 24, 2, 61, 0);
  __break(1u);
}

uint64_t sub_100098388()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for Logger(0);
  sub_10009B35C(v0, qword_100150068);
  result = sub_1000760E8(v0, (uint64_t)qword_100150068);
  if (AFSiriLogContextConnection)
    return Logger.init(_:)(AFSiriLogContextConnection);
  __break(1u);
  return result;
}

void sub_1000983EC()
{
  off_100150080 = &_swiftEmptyDictionarySingleton;
}

uint64_t sub_100098400(Swift::UInt a1)
{
  _QWORD *v2;
  unint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  unint64_t v93;
  unint64_t v94;
  char *v95;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  unint64_t v99;
  unint64_t v100;
  char *v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char isUniquelyReferenced_nonNull_native;
  void *v111;
  void *v113;
  uint64_t v114[3];

  if (qword_10014ECE8 != -1)
    swift_once(&qword_10014ECE8, sub_1000983EC);
  swift_beginAccess(&off_100150080, v114, 32, 0);
  v2 = off_100150080;
  if (!*((_QWORD *)off_100150080 + 2) || (v3 = sub_100099FD4(a1), (v4 & 1) == 0))
  {
    swift_endAccess(v114);
    if ((a1 & 1) != 0)
    {
      v8 = sub_10008675C(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      v10 = *((_QWORD *)v8 + 2);
      v9 = *((_QWORD *)v8 + 3);
      if (v10 >= v9 >> 1)
        v8 = sub_10008675C((char *)(v9 > 1), v10 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v10 + 1;
      v11 = &v8[16 * v10];
      *((_QWORD *)v11 + 4) = 0x7461766974636123;
      *((_QWORD *)v11 + 5) = 0xEB000000006E6F69;
      if ((a1 & 2) == 0)
      {
LABEL_17:
        if ((a1 & 4) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v16 = *((_QWORD *)v8 + 2);
          v15 = *((_QWORD *)v8 + 3);
          if (v16 >= v15 >> 1)
            v8 = sub_10008675C((char *)(v15 > 1), v16 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v16 + 1;
          v17 = &v8[16 * v16];
          *((_QWORD *)v17 + 4) = 0x736472616323;
          *((_QWORD *)v17 + 5) = 0xE600000000000000;
          if ((a1 & 8) == 0)
          {
LABEL_19:
            if ((a1 & 0x10) == 0)
              goto LABEL_20;
            goto LABEL_37;
          }
        }
        else if ((a1 & 8) == 0)
        {
          goto LABEL_19;
        }
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v19 = *((_QWORD *)v8 + 2);
        v18 = *((_QWORD *)v8 + 3);
        if (v19 >= v18 >> 1)
          v8 = sub_10008675C((char *)(v18 > 1), v19 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v19 + 1;
        v20 = &v8[16 * v19];
        *((_QWORD *)v20 + 4) = 0x646E4472616323;
        *((_QWORD *)v20 + 5) = 0xE700000000000000;
        if ((a1 & 0x10) == 0)
        {
LABEL_20:
          if ((a1 & 0x20) == 0)
            goto LABEL_21;
          goto LABEL_42;
        }
LABEL_37:
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v22 = *((_QWORD *)v8 + 2);
        v21 = *((_QWORD *)v8 + 3);
        if (v22 >= v21 >> 1)
          v8 = sub_10008675C((char *)(v21 > 1), v22 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v22 + 1;
        v23 = &v8[16 * v22];
        *((_QWORD *)v23 + 4) = 0x79616C5072616323;
        *((_QWORD *)v23 + 5) = 0xE800000000000000;
        if ((a1 & 0x20) == 0)
        {
LABEL_21:
          if ((a1 & 0x40) == 0)
            goto LABEL_22;
          goto LABEL_47;
        }
LABEL_42:
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v25 = *((_QWORD *)v8 + 2);
        v24 = *((_QWORD *)v8 + 3);
        if (v25 >= v24 >> 1)
          v8 = sub_10008675C((char *)(v24 > 1), v25 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v25 + 1;
        v26 = &v8[16 * v25];
        *((_QWORD *)v26 + 4) = 0x73616D6323;
        *((_QWORD *)v26 + 5) = 0xE500000000000000;
        if ((a1 & 0x40) == 0)
        {
LABEL_22:
          if ((a1 & 0x80) == 0)
            goto LABEL_23;
          goto LABEL_52;
        }
LABEL_47:
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v28 = *((_QWORD *)v8 + 2);
        v27 = *((_QWORD *)v8 + 3);
        if (v28 >= v27 >> 1)
          v8 = sub_10008675C((char *)(v27 > 1), v28 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v28 + 1;
        v29 = &v8[16 * v28];
        *((_QWORD *)v29 + 4) = 0x746361706D6F6323;
        *((_QWORD *)v29 + 5) = 0xE800000000000000;
        if ((a1 & 0x80) == 0)
        {
LABEL_23:
          if ((a1 & 0x100) == 0)
            goto LABEL_24;
          goto LABEL_57;
        }
LABEL_52:
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v31 = *((_QWORD *)v8 + 2);
        v30 = *((_QWORD *)v8 + 3);
        if (v31 >= v30 >> 1)
          v8 = sub_10008675C((char *)(v30 > 1), v31 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v31 + 1;
        v32 = &v8[16 * v31];
        *((_QWORD *)v32 + 4) = 0x6572467365796523;
        *((_QWORD *)v32 + 5) = 0xE900000000000065;
        if ((a1 & 0x100) == 0)
        {
LABEL_24:
          if ((a1 & 0x200) == 0)
            goto LABEL_25;
          goto LABEL_62;
        }
LABEL_57:
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v34 = *((_QWORD *)v8 + 2);
        v33 = *((_QWORD *)v8 + 3);
        if (v34 >= v33 >> 1)
          v8 = sub_10008675C((char *)(v33 > 1), v34 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v34 + 1;
        v35 = &v8[16 * v34];
        *((_QWORD *)v35 + 4) = 0x7375636F6623;
        *((_QWORD *)v35 + 5) = 0xE600000000000000;
        if ((a1 & 0x200) == 0)
        {
LABEL_25:
          if ((a1 & 0x400) == 0)
            goto LABEL_72;
          goto LABEL_67;
        }
LABEL_62:
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v37 = *((_QWORD *)v8 + 2);
        v36 = *((_QWORD *)v8 + 3);
        if (v37 >= v36 >> 1)
          v8 = sub_10008675C((char *)(v36 > 1), v37 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v37 + 1;
        v38 = &v8[16 * v37];
        *((_QWORD *)v38 + 4) = 0x656C646923;
        *((_QWORD *)v38 + 5) = 0xE500000000000000;
        if ((a1 & 0x400) == 0)
        {
LABEL_72:
          if ((a1 & 0x800) != 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
              v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
            v43 = *((_QWORD *)v8 + 2);
            v42 = *((_QWORD *)v8 + 3);
            if (v43 >= v42 >> 1)
              v8 = sub_10008675C((char *)(v42 > 1), v43 + 1, 1, v8);
            *((_QWORD *)v8 + 2) = v43 + 1;
            v44 = &v8[16 * v43];
            *((_QWORD *)v44 + 4) = 0xD000000000000015;
            *((_QWORD *)v44 + 5) = 0x80000001000E2710;
            if ((a1 & 0x1000) == 0)
            {
LABEL_74:
              if ((a1 & 0x2000) == 0)
                goto LABEL_75;
              goto LABEL_105;
            }
          }
          else if ((a1 & 0x1000) == 0)
          {
            goto LABEL_74;
          }
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v46 = *((_QWORD *)v8 + 2);
          v45 = *((_QWORD *)v8 + 3);
          if (v46 >= v45 >> 1)
            v8 = sub_10008675C((char *)(v45 > 1), v46 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v46 + 1;
          v47 = &v8[16 * v46];
          *((_QWORD *)v47 + 4) = 0x736B636F6C23;
          *((_QWORD *)v47 + 5) = 0xE600000000000000;
          if ((a1 & 0x2000) == 0)
          {
LABEL_75:
            if ((a1 & 0x4000) == 0)
              goto LABEL_76;
            goto LABEL_110;
          }
LABEL_105:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v49 = *((_QWORD *)v8 + 2);
          v48 = *((_QWORD *)v8 + 3);
          if (v49 >= v48 >> 1)
            v8 = sub_10008675C((char *)(v48 > 1), v49 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v49 + 1;
          v50 = &v8[16 * v49];
          *((_QWORD *)v50 + 4) = 0x7365646F6D23;
          *((_QWORD *)v50 + 5) = 0xE600000000000000;
          if ((a1 & 0x4000) == 0)
          {
LABEL_76:
            if ((a1 & 0x8000) == 0)
              goto LABEL_77;
            goto LABEL_115;
          }
LABEL_110:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v52 = *((_QWORD *)v8 + 2);
          v51 = *((_QWORD *)v8 + 3);
          if (v52 >= v51 >> 1)
            v8 = sub_10008675C((char *)(v51 > 1), v52 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v52 + 1;
          v53 = &v8[16 * v52];
          *((_QWORD *)v53 + 4) = 0x64616972796D23;
          *((_QWORD *)v53 + 5) = 0xE700000000000000;
          if ((a1 & 0x8000) == 0)
          {
LABEL_77:
            if ((a1 & 0x10000) == 0)
              goto LABEL_78;
            goto LABEL_120;
          }
LABEL_115:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v55 = *((_QWORD *)v8 + 2);
          v54 = *((_QWORD *)v8 + 3);
          if (v55 >= v54 >> 1)
            v8 = sub_10008675C((char *)(v54 > 1), v55 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v55 + 1;
          v56 = &v8[16 * v55];
          *((_QWORD *)v56 + 4) = 0x5564616972796D23;
          *((_QWORD *)v56 + 5) = 0xE900000000000049;
          if ((a1 & 0x10000) == 0)
          {
LABEL_78:
            if ((a1 & 0x20000) == 0)
              goto LABEL_79;
            goto LABEL_125;
          }
LABEL_120:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v58 = *((_QWORD *)v8 + 2);
          v57 = *((_QWORD *)v8 + 3);
          if (v58 >= v57 >> 1)
            v8 = sub_10008675C((char *)(v57 > 1), v58 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v58 + 1;
          v59 = &v8[16 * v58];
          *((_QWORD *)v59 + 4) = 0xD000000000000014;
          *((_QWORD *)v59 + 5) = 0x80000001000E26F0;
          if ((a1 & 0x20000) == 0)
          {
LABEL_79:
            if ((a1 & 0x40000) == 0)
              goto LABEL_80;
            goto LABEL_130;
          }
LABEL_125:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v61 = *((_QWORD *)v8 + 2);
          v60 = *((_QWORD *)v8 + 3);
          if (v61 >= v60 >> 1)
            v8 = sub_10008675C((char *)(v60 > 1), v61 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v61 + 1;
          v62 = &v8[16 * v61];
          *((_QWORD *)v62 + 4) = 0x7973696F6E23;
          *((_QWORD *)v62 + 5) = 0xE600000000000000;
          if ((a1 & 0x40000) == 0)
          {
LABEL_80:
            if ((a1 & 0x80000) == 0)
              goto LABEL_81;
            goto LABEL_135;
          }
LABEL_130:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v64 = *((_QWORD *)v8 + 2);
          v63 = *((_QWORD *)v8 + 3);
          if (v64 >= v63 >> 1)
            v8 = sub_10008675C((char *)(v63 > 1), v64 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v64 + 1;
          v65 = &v8[16 * v64];
          *((_QWORD *)v65 + 4) = 0xD000000000000011;
          *((_QWORD *)v65 + 5) = 0x80000001000E26D0;
          if ((a1 & 0x80000) == 0)
          {
LABEL_81:
            if ((a1 & 0x100000) == 0)
              goto LABEL_82;
            goto LABEL_140;
          }
LABEL_135:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v67 = *((_QWORD *)v8 + 2);
          v66 = *((_QWORD *)v8 + 3);
          if (v67 >= v66 >> 1)
            v8 = sub_10008675C((char *)(v66 > 1), v67 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v67 + 1;
          v68 = &v8[16 * v67];
          *((_QWORD *)v68 + 4) = 0x7765695662724F23;
          *((_QWORD *)v68 + 5) = 0xE800000000000000;
          if ((a1 & 0x100000) == 0)
          {
LABEL_82:
            if ((a1 & 0x200000) == 0)
              goto LABEL_83;
            goto LABEL_145;
          }
LABEL_140:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v70 = *((_QWORD *)v8 + 2);
          v69 = *((_QWORD *)v8 + 3);
          if (v70 >= v69 >> 1)
            v8 = sub_10008675C((char *)(v69 > 1), v70 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v70 + 1;
          v71 = &v8[16 * v70];
          strcpy(v71 + 32, "#presynthesize");
          v71[47] = -18;
          if ((a1 & 0x200000) == 0)
          {
LABEL_83:
            if ((a1 & 0x400000) == 0)
              goto LABEL_84;
            goto LABEL_150;
          }
LABEL_145:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v73 = *((_QWORD *)v8 + 2);
          v72 = *((_QWORD *)v8 + 3);
          if (v73 >= v72 >> 1)
            v8 = sub_10008675C((char *)(v72 > 1), v73 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v73 + 1;
          v74 = &v8[16 * v73];
          strcpy(v74 + 32, "#sceneHosting");
          *((_WORD *)v74 + 23) = -4864;
          if ((a1 & 0x400000) == 0)
          {
LABEL_84:
            if ((a1 & 0x800000) == 0)
              goto LABEL_85;
            goto LABEL_155;
          }
LABEL_150:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v76 = *((_QWORD *)v8 + 2);
          v75 = *((_QWORD *)v8 + 3);
          if (v76 >= v75 >> 1)
            v8 = sub_10008675C((char *)(v75 > 1), v76 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v76 + 1;
          v77 = &v8[16 * v76];
          *((_QWORD *)v77 + 4) = 0xD000000000000015;
          *((_QWORD *)v77 + 5) = 0x80000001000E26B0;
          if ((a1 & 0x800000) == 0)
          {
LABEL_85:
            if ((a1 & 0x1000000) == 0)
              goto LABEL_86;
            goto LABEL_160;
          }
LABEL_155:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v79 = *((_QWORD *)v8 + 2);
          v78 = *((_QWORD *)v8 + 3);
          if (v79 >= v78 >> 1)
            v8 = sub_10008675C((char *)(v78 > 1), v79 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v79 + 1;
          v80 = &v8[16 * v79];
          *((_QWORD *)v80 + 4) = 0xD000000000000017;
          *((_QWORD *)v80 + 5) = 0x80000001000E2690;
          if ((a1 & 0x1000000) == 0)
          {
LABEL_86:
            if ((a1 & 0x2000000) == 0)
              goto LABEL_87;
            goto LABEL_165;
          }
LABEL_160:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v82 = *((_QWORD *)v8 + 2);
          v81 = *((_QWORD *)v8 + 3);
          if (v82 >= v81 >> 1)
            v8 = sub_10008675C((char *)(v81 > 1), v82 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v82 + 1;
          v83 = &v8[16 * v82];
          *((_QWORD *)v83 + 4) = 0x4449486972697323;
          *((_QWORD *)v83 + 5) = 0xE800000000000000;
          if ((a1 & 0x2000000) == 0)
          {
LABEL_87:
            if ((a1 & 0x4000000) == 0)
              goto LABEL_88;
            goto LABEL_170;
          }
LABEL_165:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v85 = *((_QWORD *)v8 + 2);
          v84 = *((_QWORD *)v8 + 3);
          if (v85 >= v84 >> 1)
            v8 = sub_10008675C((char *)(v84 > 1), v85 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v85 + 1;
          v86 = &v8[16 * v85];
          *((_QWORD *)v86 + 4) = 0x74657070696E7323;
          *((_QWORD *)v86 + 5) = 0xEA00000000006975;
          if ((a1 & 0x4000000) == 0)
          {
LABEL_88:
            if ((a1 & 0x8000000) == 0)
              goto LABEL_89;
            goto LABEL_175;
          }
LABEL_170:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v88 = *((_QWORD *)v8 + 2);
          v87 = *((_QWORD *)v8 + 3);
          if (v88 >= v87 >> 1)
            v8 = sub_10008675C((char *)(v87 > 1), v88 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v88 + 1;
          v89 = &v8[16 * v88];
          *((_QWORD *)v89 + 4) = 0x7263736E61727423;
          *((_QWORD *)v89 + 5) = 0xEB00000000747069;
          if ((a1 & 0x8000000) == 0)
          {
LABEL_89:
            if ((a1 & 0x10000000) == 0)
              goto LABEL_90;
            goto LABEL_180;
          }
LABEL_175:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v91 = *((_QWORD *)v8 + 2);
          v90 = *((_QWORD *)v8 + 3);
          if (v91 >= v90 >> 1)
            v8 = sub_10008675C((char *)(v90 > 1), v91 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v91 + 1;
          v92 = &v8[16 * v91];
          *((_QWORD *)v92 + 4) = 1937011747;
          *((_QWORD *)v92 + 5) = 0xE400000000000000;
          if ((a1 & 0x10000000) == 0)
          {
LABEL_90:
            if ((a1 & 0x20000000) == 0)
              goto LABEL_91;
            goto LABEL_185;
          }
LABEL_180:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v94 = *((_QWORD *)v8 + 2);
          v93 = *((_QWORD *)v8 + 3);
          if (v94 >= v93 >> 1)
            v8 = sub_10008675C((char *)(v93 > 1), v94 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v94 + 1;
          v95 = &v8[16 * v94];
          *((_QWORD *)v95 + 4) = 0x6972695343505823;
          *((_QWORD *)v95 + 5) = 0xEB00000000707041;
          if ((a1 & 0x20000000) == 0)
          {
LABEL_91:
            if ((a1 & 0x40000000) == 0)
              goto LABEL_92;
            goto LABEL_190;
          }
LABEL_185:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v97 = *((_QWORD *)v8 + 2);
          v96 = *((_QWORD *)v8 + 3);
          if (v97 >= v96 >> 1)
            v8 = sub_10008675C((char *)(v96 > 1), v97 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v97 + 1;
          v98 = &v8[16 * v97];
          *((_QWORD *)v98 + 4) = 1819048483;
          *((_QWORD *)v98 + 5) = 0xE400000000000000;
          if ((a1 & 0x40000000) == 0)
          {
LABEL_92:
            if ((a1 & 0x80000000) == 0)
              goto LABEL_93;
            goto LABEL_195;
          }
LABEL_190:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v100 = *((_QWORD *)v8 + 2);
          v99 = *((_QWORD *)v8 + 3);
          if (v100 >= v99 >> 1)
            v8 = sub_10008675C((char *)(v99 > 1), v100 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v100 + 1;
          v101 = &v8[16 * v100];
          *((_QWORD *)v101 + 4) = 0x416D657473797323;
          *((_QWORD *)v101 + 5) = 0xEF65727574726570;
          if ((a1 & 0x80000000) == 0)
          {
LABEL_93:
            if (!*((_QWORD *)v8 + 2))
            {
              swift_bridgeObjectRelease(v8);
              return 0;
            }
LABEL_200:
            v114[0] = (uint64_t)v8;
            swift_bridgeObjectRetain(v8);
            sub_10009A694(v114);
            swift_bridgeObjectRelease(v8);
            v105 = v114[0];
            v106 = sub_100076100(&qword_100150090);
            v107 = sub_10009A6FC();
            v6 = BidirectionalCollection<>.joined(separator:)(32, 0xE100000000000000, v106, v107);
            v109 = v108;
            swift_release(v105);
            swift_beginAccess(&off_100150080, v114, 33, 0);
            swift_bridgeObjectRetain(v109);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_100150080);
            v113 = off_100150080;
            off_100150080 = (_UNKNOWN *)0x8000000000000000;
            sub_10009A310(v6, v109, a1, isUniquelyReferenced_nonNull_native);
            v111 = off_100150080;
            off_100150080 = v113;
            swift_bridgeObjectRelease(v111);
            swift_endAccess(v114);
            return v6;
          }
LABEL_195:
          if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
            v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
          v103 = *((_QWORD *)v8 + 2);
          v102 = *((_QWORD *)v8 + 3);
          if (v103 >= v102 >> 1)
            v8 = sub_10008675C((char *)(v102 > 1), v103 + 1, 1, v8);
          *((_QWORD *)v8 + 2) = v103 + 1;
          v104 = &v8[16 * v103];
          *((_QWORD *)v104 + 4) = 0xD000000000000015;
          *((_QWORD *)v104 + 5) = 0x80000001000E2670;
          goto LABEL_200;
        }
LABEL_67:
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v40 = *((_QWORD *)v8 + 2);
        v39 = *((_QWORD *)v8 + 3);
        if (v40 >= v39 >> 1)
          v8 = sub_10008675C((char *)(v39 > 1), v40 + 1, 1, v8);
        *((_QWORD *)v8 + 2) = v40 + 1;
        v41 = &v8[16 * v40];
        *((_QWORD *)v41 + 4) = 0x6D6954656C646923;
        *((_QWORD *)v41 + 5) = 0xEA00000000007265;
        goto LABEL_72;
      }
    }
    else
    {
      v8 = (char *)_swiftEmptyArrayStorage;
      if ((a1 & 2) == 0)
        goto LABEL_17;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
      v8 = sub_10008675C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
    v13 = *((_QWORD *)v8 + 2);
    v12 = *((_QWORD *)v8 + 3);
    if (v13 >= v12 >> 1)
      v8 = sub_10008675C((char *)(v12 > 1), v13 + 1, 1, v8);
    *((_QWORD *)v8 + 2) = v13 + 1;
    v14 = &v8[16 * v13];
    strcpy(v14 + 32, "#autodismiss");
    v14[45] = 0;
    *((_WORD *)v14 + 23) = -5120;
    goto LABEL_17;
  }
  v5 = (uint64_t *)(v2[7] + 16 * v3);
  v6 = *v5;
  v7 = v5[1];
  swift_endAccess(v114);
  swift_bridgeObjectRetain(v7);
  return v6;
}

Swift::Int sub_100099654()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100099698()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000996C0(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_100099700@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1000760AC();
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

void sub_10009973C(os_log_type_t a1, Swift::UInt a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *log;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v27 = a3;
  v28 = a4;
  swift_bridgeObjectRetain(a4);
  v10 = sub_100098400(a2);
  if (v11)
  {
    v12 = v11;
    v25 = 0xE100000000000000;
    String.append(_:)(*(Swift::String *)&v10);
    swift_bridgeObjectRelease(v12);
    v13._countAndFlagsBits = 32;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(0xE100000000000000);
  }
  if (a6)
  {
    v14 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) == 0)
      v14 = a5 & 0xFFFFFFFFFFFFLL;
    if (v14)
    {
      v25 = 0xE100000000000000;
      v15._countAndFlagsBits = a5;
      v15._object = (void *)a6;
      String.append(_:)(v15);
      v16._countAndFlagsBits = 32;
      v16._object = (void *)0xE100000000000000;
      String.append(_:)(v16);
      swift_bridgeObjectRelease(0xE100000000000000);
    }
  }
  v18 = v27;
  v17 = v28;
  v19 = swift_bridgeObjectRetain(v28);
  v20 = a1;
  log = Logger.logObject.getter(v19);
  if (os_log_type_enabled(log, a1))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v24 = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain(v17);
    v26 = sub_100099958(v18, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease_n(v17, 3);
    _os_log_impl((void *)&_mh_execute_header, log, v20, "%s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(v28, 2);

  }
}

uint64_t sub_100099958(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100099A28(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_100099F98((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_100099F98((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_10007F48C(v12);
  return v7;
}

uint64_t sub_100099A28(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100099BE0(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_100099BE0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_100099C74(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100099E4C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100099E4C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_100099C74(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100099DE8(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100099DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100076100(&qword_100150088);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_100099E4C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100076100(&qword_100150088);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100099F98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_100099FD4(Swift::UInt a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_10009A44C(a1, v3);
}

Swift::Int sub_10009A02C(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  Swift::UInt v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  Swift::Int *v33;
  int64_t v34;
  _QWORD *v35;
  char v36;
  uint64_t v37[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100076100(&qword_1001500A0);
  v36 = a2;
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v3;
    v9 = 0;
    v35 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v21 >= v34)
          goto LABEL_36;
        v22 = v35[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_36;
          v22 = v35[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_36:
              if ((v36 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v33;
                goto LABEL_43;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v35[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v9 >= v34)
                  goto LABEL_36;
                v22 = v35[v9];
                ++v23;
                if (v22)
                  goto LABEL_33;
              }
            }
            v9 = v23;
          }
        }
LABEL_33:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      v30 = *v29;
      v31 = v29[1];
      if ((v36 & 1) == 0)
        swift_bridgeObjectRetain(v31);
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v28);
      result = Hasher._finalize()();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v17) = v28;
      v18 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_43:
  *v3 = v8;
  return result;
}

uint64_t sub_10009A310(uint64_t a1, uint64_t a2, Swift::UInt a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_100099FD4(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_10009A4E8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_bridgeObjectRelease(v19[1]);
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_10009A02C(result, a4 & 1);
  result = sub_100099FD4(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Log.LogType);
  __break(1u);
  return result;
}

unint64_t sub_10009A44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void *sub_10009A4E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_100076100(&qword_1001500A0);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain(v20);
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Int sub_10009A694(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  Swift::Int result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_10009B348(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_10009A748(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_10009A6FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_100150098;
  if (!qword_100150098)
  {
    v1 = sub_100079794(&qword_100150090);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100150098);
  }
  return result;
}

Swift::Int sub_10009A748(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  Swift::Int v20;
  _QWORD *v21;
  Swift::Int v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  Swift::Int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Int v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  void *v104;
  Swift::Int v105;
  Swift::Int v106;
  Swift::Int v107;
  char *__dst;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        return sub_10009AE30(0, v3, 1, a1);
      return result;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = &_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage + 32;
    if (v3 != 1)
    {
      v12 = *((_QWORD *)&_swiftEmptyArrayStorage + 2);
      v11 = (char *)&_swiftEmptyArrayStorage;
LABEL_120:
      v95 = v11;
      v104 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v96 = *v102;
      while (1)
      {
        v97 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v96)
          goto LABEL_161;
        v94 = v95;
        v98 = *(_QWORD *)&v95[16 * v97 + 32];
        v99 = *(_QWORD *)&v95[16 * v12 + 24];
        sub_10009AEFC((char *)(v96 + 16 * v98), (char *)(v96 + 16 * *(_QWORD *)&v95[16 * v12 + 16]), v96 + 16 * v99, __dst);
        if (v1)
          goto LABEL_116;
        if (v99 < v98)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v94) & 1) == 0)
          v94 = sub_10009B334((uint64_t)v94);
        if (v97 >= *((_QWORD *)v94 + 2))
          goto LABEL_151;
        v100 = &v94[16 * v97 + 32];
        *(_QWORD *)v100 = v98;
        *((_QWORD *)v100 + 1) = v99;
        v101 = *((_QWORD *)v94 + 2);
        if (v12 > v101)
          goto LABEL_152;
        memmove(&v94[16 * v12 + 16], &v94[16 * v12 + 32], 16 * (v101 - v12));
        v95 = v94;
        *((_QWORD *)v94 + 2) = v101 - 1;
        v12 = v101 - 1;
        if (v101 <= 2)
          goto LABEL_117;
      }
    }
    v104 = &_swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)&_swiftEmptyArrayStorage;
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_157;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_160;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v105)
      {
        if (__OFADD__(v13, v105))
          goto LABEL_155;
        if (v13 + v105 >= v3)
          v32 = v3;
        else
          v32 = v13 + v105;
        if (v32 < v13)
          goto LABEL_156;
        if (v9 != v32)
        {
          v33 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v34 = (uint64_t *)(v10 + 16 * v9);
            v35 = *v34;
            v36 = v34[1];
            v37 = v13;
            v38 = v33;
            do
            {
              v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
              if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v35 = *v38;
              v36 = v38[1];
              *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
              *(v38 - 1) = v36;
              *(v38 - 2) = v35;
              v38 -= 2;
              ++v37;
            }
            while (v9 != v37);
            ++v9;
            v33 += 2;
          }
          while (v9 != v32);
          v9 = v32;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10009B194(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_10009B194((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
      break;
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_120;
    }
  }
  v107 = v9;
  while (1)
  {
    v44 = v12 - 1;
    if (v12 >= 4)
    {
      v49 = &v42[16 * v12];
      v50 = *((_QWORD *)v49 - 8);
      v51 = *((_QWORD *)v49 - 7);
      v55 = __OFSUB__(v51, v50);
      v52 = v51 - v50;
      if (v55)
        goto LABEL_137;
      v54 = *((_QWORD *)v49 - 6);
      v53 = *((_QWORD *)v49 - 5);
      v55 = __OFSUB__(v53, v54);
      v47 = v53 - v54;
      v48 = v55;
      if (v55)
        goto LABEL_138;
      v56 = v12 - 2;
      v57 = &v42[16 * v12 - 32];
      v59 = *(_QWORD *)v57;
      v58 = *((_QWORD *)v57 + 1);
      v55 = __OFSUB__(v58, v59);
      v60 = v58 - v59;
      if (v55)
        goto LABEL_140;
      v55 = __OFADD__(v47, v60);
      v61 = v47 + v60;
      if (v55)
        goto LABEL_143;
      if (v61 >= v52)
      {
        v79 = &v42[16 * v44];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v55 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v55)
          goto LABEL_147;
        v72 = v47 < v82;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v73 = *((_QWORD *)v11 + 4);
        v74 = *((_QWORD *)v11 + 5);
        v55 = __OFSUB__(v74, v73);
        v66 = v74 - v73;
        v67 = v55;
        goto LABEL_99;
      }
      v46 = *((_QWORD *)v11 + 4);
      v45 = *((_QWORD *)v11 + 5);
      v55 = __OFSUB__(v45, v46);
      v47 = v45 - v46;
      v48 = v55;
    }
    if ((v48 & 1) != 0)
      goto LABEL_139;
    v56 = v12 - 2;
    v62 = &v42[16 * v12 - 32];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v65 = __OFSUB__(v63, v64);
    v66 = v63 - v64;
    v67 = v65;
    if (v65)
      goto LABEL_142;
    v68 = &v42[16 * v44];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v55 = __OFSUB__(v69, v70);
    v71 = v69 - v70;
    if (v55)
      goto LABEL_145;
    if (__OFADD__(v66, v71))
      goto LABEL_146;
    if (v66 + v71 >= v47)
    {
      v72 = v47 < v71;
LABEL_105:
      if (v72)
        v44 = v56;
      goto LABEL_107;
    }
LABEL_99:
    if ((v67 & 1) != 0)
      goto LABEL_141;
    v75 = &v42[16 * v44];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    v55 = __OFSUB__(v76, v77);
    v78 = v76 - v77;
    if (v55)
      goto LABEL_144;
    if (v78 < v66)
      goto LABEL_15;
LABEL_107:
    v83 = v44 - 1;
    if (v44 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v84 = v10;
    if (!v10)
      goto LABEL_159;
    v85 = v11;
    v86 = &v42[16 * v83];
    v87 = *(_QWORD *)v86;
    v88 = v42;
    v89 = v44;
    v90 = &v42[16 * v44];
    v91 = *((_QWORD *)v90 + 1);
    v92 = v84;
    sub_10009AEFC((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
    if (v1)
      break;
    if (v91 < v87)
      goto LABEL_134;
    if (v89 > *((_QWORD *)v85 + 2))
      goto LABEL_135;
    *(_QWORD *)v86 = v87;
    *(_QWORD *)&v88[16 * v83 + 8] = v91;
    v93 = *((_QWORD *)v85 + 2);
    if (v89 >= v93)
      goto LABEL_136;
    v11 = v85;
    v12 = v93 - 1;
    memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
    v42 = v88;
    *((_QWORD *)v85 + 2) = v93 - 1;
    v10 = v92;
    v9 = v107;
    if (v93 <= 2)
      goto LABEL_15;
  }
  v94 = v85;
LABEL_116:
  v95 = v94;
LABEL_117:
  swift_bridgeObjectRelease(v95);
  *((_QWORD *)v104 + 2) = 0;
  return swift_bridgeObjectRelease(v104);
}

uint64_t sub_10009AE30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10009AEFC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_10009B28C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_10009B194(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100076100(&qword_1001500A8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_10009B28C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_10009B334(uint64_t a1)
{
  return sub_10009B194(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10009B348(uint64_t a1)
{
  return sub_10007E88C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t *sub_10009B35C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

ValueMetadata *type metadata accessor for Log.LogType()
{
  return &type metadata for Log.LogType;
}

unint64_t sub_10009B3C0()
{
  unint64_t result;

  result = qword_1001500B0;
  if (!qword_1001500B0)
  {
    result = swift_getWitnessTable(&unk_1000C1B14, &type metadata for Log.LogType);
    atomic_store(result, (unint64_t *)&qword_1001500B0);
  }
  return result;
}

unint64_t sub_10009B408()
{
  unint64_t result;

  result = qword_1001500B8;
  if (!qword_1001500B8)
  {
    result = swift_getWitnessTable(&unk_1000C1AE4, &type metadata for Log.LogType);
    atomic_store(result, (unint64_t *)&qword_1001500B8);
  }
  return result;
}

unint64_t sub_10009B450()
{
  unint64_t result;

  result = qword_1001500C0;
  if (!qword_1001500C0)
  {
    result = swift_getWitnessTable(&unk_1000C1B3C, &type metadata for Log.LogType);
    atomic_store(result, (unint64_t *)&qword_1001500C0);
  }
  return result;
}

unint64_t sub_10009B498()
{
  unint64_t result;

  result = qword_1001500C8;
  if (!qword_1001500C8)
  {
    result = swift_getWitnessTable(&unk_1000C1B74, &type metadata for Log.LogType);
    atomic_store(result, (unint64_t *)&qword_1001500C8);
  }
  return result;
}

void sub_10009B4DC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  Swift::String *v6;
  void *v7;
  char *v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  NSString v23;
  void *v24;
  id v25;
  Swift::String *v26;
  void *v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  id v32;
  void *object;
  id v34;
  NSString v35;
  id v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSString v42;
  char *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  Class isa;
  uint64_t v55;
  NSString v56;
  id v57;
  objc_class *v58;
  uint64_t v59;
  Swift::String *v60;
  Swift::String *v61;
  char *v62;
  objc_super v63;
  uint64_t countAndFlagsBits;
  void *v65;
  Swift::String v66;
  Swift::String v67;

  v59 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID];
  v62 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID];
  strcpy(&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID], "com.apple.siri");
  v4[15] = -18;
  v5 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_siriSettingsPath];
  *(_QWORD *)v5 = 0xD000000000000011;
  *((_QWORD *)v5 + 1) = 0x80000001000E2A70;
  v6 = (Swift::String *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerTitle];
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = v0;
  v9 = objc_msgSend(v7, "mainBundle");
  v10._countAndFlagsBits = 0xD00000000000001CLL;
  v66._object = (void *)0xEC000000656C7469;
  v10._object = (void *)0x80000001000E2A90;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v66._countAndFlagsBits = 0x542072656E6E6142;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v66);

  v61 = v6;
  *v6 = v12;
  v13 = (Swift::String *)&v8[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSubtitle];
  v14 = objc_msgSend(v7, "mainBundle");
  v15._countAndFlagsBits = 0xD00000000000001FLL;
  v67._object = (void *)0xEF656C7469746275;
  v15._object = (void *)0x80000001000E2AB0;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v67._countAndFlagsBits = 0x532072656E6E6142;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v67);

  v60 = v13;
  *v13 = v17;
  v8[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent] = 0;
  v18 = UUID.init()();
  v19 = UUID.uuidString.getter(v18);
  v21 = v20;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v59);
  v22 = (uint64_t *)&v8[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requestID];
  *v22 = v19;
  v22[1] = v21;
  v23 = String._bridgeToObjectiveC()();
  v24 = (void *)objc_opt_self(UIImage);
  v25 = objc_msgSend(v24, "_systemImageNamed:", v23);

  v26 = (Swift::String *)objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v25);
  v27 = (void *)objc_opt_self(UIColor);
  v28 = objc_msgSend(v27, "systemGrayColor");
  -[Swift::String setTintColor:](v26, "setTintColor:", v28);

  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v24, "_systemImageNamed:", v29);

  v31 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v30);
  v32 = objc_msgSend(v27, "systemGrayColor");
  objc_msgSend(v31, "setTintColor:", v32);

  object = v61->_object;
  v34 = objc_allocWithZone((Class)PLPillContentItem);
  swift_bridgeObjectRetain(object);
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v36 = objc_msgSend(v34, "initWithText:style:", v35, 1);

  v37 = v60->_object;
  countAndFlagsBits = v60->_countAndFlagsBits;
  v65 = v37;
  v38 = sub_10009D0D0();
  StringProtocol.localizedCapitalized.getter(&type metadata for String, v38);
  v40 = v39;
  v41 = objc_allocWithZone((Class)PLPillContentItem);
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  v43 = v8;
  v44 = objc_msgSend(v41, "initWithText:style:", v42, 2);

  v45 = objc_allocWithZone((Class)PLPillView);
  v61 = v26;
  v46 = objc_msgSend(v45, "initWithLeadingAccessoryView:trailingAccessoryView:", v26, v31);
  v47 = OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_pillView;
  *(_QWORD *)&v8[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_pillView] = v46;
  v48 = sub_100076100((uint64_t *)&unk_10014FB20);
  v49 = swift_allocObject(v48, 48, 7);
  *(_OWORD *)(v49 + 16) = xmmword_1000C18F0;
  *(_QWORD *)(v49 + 32) = v36;
  *(_QWORD *)(v49 + 40) = v44;
  countAndFlagsBits = v49;
  specialized Array._endMutation()(v49);
  v50 = countAndFlagsBits;
  sub_100076140(0, (unint64_t *)&unk_1001501B0, PLPillContentItem_ptr);
  v51 = v46;
  v52 = v36;
  v53 = v44;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v50);
  objc_msgSend(v51, "setCenterContentItems:", isa);

  objc_msgSend(*(id *)&v43[v47], "setAutoresizingMask:", 18);
  v55 = *((_QWORD *)v62 + 1);
  swift_bridgeObjectRetain(v55);
  v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  v57 = objc_msgSend((id)objc_opt_self(BNBannerSource), "bannerSourceForDestination:forRequesterIdentifier:", 0, v56);

  if (v57)
  {
    *(_QWORD *)&v43[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSource] = v57;

    v58 = (objc_class *)type metadata accessor for SRAssetsDownloadBannerViewController();
    v63.receiver = v43;
    v63.super_class = v58;
    objc_msgSendSuper2(&v63, "initWithNibName:bundle:", 0, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_10009BAFC()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "openSettings:");
  v2 = objc_msgSend(v0, "view");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "addGestureRecognizer:", v1);

    v4 = objc_msgSend(v0, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_pillView]);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10009BCB4(double a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent) & 1) == 0)
  {
    sub_100076140(0, (unint64_t *)&qword_10014F560, OS_dispatch_queue_ptr);
    v13 = (void *)static OS_dispatch_queue.main.getter();
    v14 = swift_allocObject(&unk_100125008, 32, 7);
    *(_QWORD *)(v14 + 16) = v1;
    *(double *)(v14 + 24) = a1;
    aBlock[4] = sub_10009CD00;
    v23 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100094264;
    aBlock[3] = &unk_100125020;
    v15 = _Block_copy(aBlock);
    v16 = v23;
    v17 = v2;
    v18 = swift_release(v16);
    static DispatchQoS.unspecified.getter(v18);
    aBlock[0] = _swiftEmptyArrayStorage;
    v19 = sub_10009CC8C();
    v20 = sub_100076100(&qword_10014FE78);
    v21 = sub_100093598();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v4, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v7, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

void sub_10009BEAC(char *a1, double a2)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  unsigned int v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  id v27;

  v4 = *(void **)&a1[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSource];
  v27 = 0;
  v5 = objc_msgSend(v4, "layoutDescriptionWithError:", &v27);
  v6 = v27;
  if (v5)
  {
    v7 = v5;
    v8 = v27;
    objc_msgSend(v7, "presentationSize");
    v10 = v9;
    v12 = v11;
    objc_msgSend(v7, "containerSize");
    objc_msgSend(a1, "preferredContentSizeWithPresentationSize:containerSize:", v10, v12, v13, v14);
    objc_msgSend(a1, "setPreferredContentSize:");
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_1000760E8(v15, (uint64_t)qword_100150068);
    v17 = static os_log_type_t.info.getter(v16);
    sub_10009973C(v17, 0x80000000uLL, 0xD000000000000010, 0x80000001000E2990, 0xD00000000000001ELL, 0x80000001000E29E0);
    v27 = 0;
    v18 = objc_msgSend(v4, "postPresentable:options:userInfo:error:", a1, 1, 0, &v27);
    v19 = v27;
    if (v18)
    {
      v20 = v27;
      sub_10009C1F0(a2);

      return;
    }
    v23 = v27;
    v22 = _convertNSErrorToError(_:)(v19);

    swift_willThrow();
  }
  else
  {
    v21 = v27;
    v22 = _convertNSErrorToError(_:)(v6);

    swift_willThrow();
  }
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_1000760E8(v24, (uint64_t)qword_100150068);
  v26 = static os_log_type_t.info.getter(v25);
  sub_10009973C(v26, 0x80000000uLL, 0xD000000000000010, 0x80000001000E2990, 0xD000000000000025, 0x80000001000E29B0);
  swift_errorRelease(v22);
}

uint64_t sub_10009C1F0(double a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v5 - 8);
  v36 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTimeInterval(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v34 - 8);
  v13 = __chkstk_darwin(v34);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v32 - v16;
  sub_100076140(0, (unint64_t *)&qword_10014F560, OS_dispatch_queue_ptr);
  v18 = static OS_dispatch_queue.main.getter();
  result = static DispatchTime.now()();
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a1 < 9.22337204e18)
  {
    *v11 = (uint64_t)a1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchTimeInterval.seconds(_:), v8);
    + infix(_:_:)(v15, v11);
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    v20 = *(void (**)(char *, uint64_t))(v12 + 8);
    v21 = v34;
    v20(v15, v34);
    v22 = swift_allocObject(&unk_100124F68, 24, 7);
    v23 = v33;
    *(_QWORD *)(v22 + 16) = v33;
    aBlock[4] = sub_10009CCD4;
    v39 = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100094264;
    aBlock[3] = &unk_100124F80;
    v24 = _Block_copy(aBlock);
    v25 = (void *)v18;
    v26 = v39;
    v27 = v23;
    v28 = swift_release(v26);
    static DispatchQoS.unspecified.getter(v28);
    aBlock[0] = _swiftEmptyArrayStorage;
    v29 = sub_10009CC8C();
    v30 = sub_100076100(&qword_10014FE78);
    v31 = sub_100093598();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v2, v29);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v7, v4, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v36);
    return ((uint64_t (*)(char *, uint64_t))v20)(v17, v21);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10009C51C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)a1 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent) == 1)
  {
    sub_100076140(0, (unint64_t *)&qword_10014F560, OS_dispatch_queue_ptr);
    v11 = (void *)static OS_dispatch_queue.main.getter();
    v12 = swift_allocObject(&unk_100124FB8, 24, 7);
    *(_QWORD *)(v12 + 16) = a1;
    aBlock[4] = sub_10009D12C;
    v21 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100094264;
    aBlock[3] = &unk_100124FD0;
    v13 = _Block_copy(aBlock);
    v14 = v21;
    v15 = a1;
    v16 = swift_release(v14);
    static DispatchQoS.unspecified.getter(v16);
    aBlock[0] = _swiftEmptyArrayStorage;
    v17 = sub_10009CC8C();
    v18 = sub_100076100(&qword_10014FE78);
    v19 = sub_100093598();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_10009C708()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent) == 1)
  {
    sub_100076140(0, (unint64_t *)&qword_10014F560, OS_dispatch_queue_ptr);
    v11 = (void *)static OS_dispatch_queue.main.getter();
    v12 = swift_allocObject(&unk_100124F18, 24, 7);
    *(_QWORD *)(v12 + 16) = v0;
    aBlock[4] = sub_10009CC6C;
    v21 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100094264;
    aBlock[3] = &unk_100124F30;
    v13 = _Block_copy(aBlock);
    v14 = v21;
    v15 = v1;
    v16 = swift_release(v14);
    static DispatchQoS.unspecified.getter(v16);
    aBlock[0] = _swiftEmptyArrayStorage;
    v17 = sub_10009CC8C();
    v18 = sub_100076100(&qword_10014FE78);
    v19 = sub_100093598();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

void sub_10009C8F4(uint64_t a1)
{
  void *v1;
  NSString v2;
  NSString v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  id v12;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSource);
  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  v12 = 0;
  v4 = objc_msgSend(v1, "revokePresentableWithRequestIdentifier:reason:animated:userInfo:error:", v2, v3, 1, 0, &v12);

  v5 = v12;
  if (v4)
  {
    v6 = v12;

  }
  else
  {
    v7 = v12;
    v8 = _convertNSErrorToError(_:)(v5);

    swift_willThrow();
    if (qword_10014ECE0 != -1)
      swift_once(&qword_10014ECE0, sub_100098388);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_1000760E8(v9, (uint64_t)qword_100150068);
    v11 = static os_log_type_t.info.getter(v10);
    sub_10009973C(v11, 0x80000000uLL, 0x427373696D736964, 0xEF292872656E6E61, 0xD00000000000002CLL, 0x80000001000E2960);
    swift_errorRelease(v8);
  }
}

id sub_10009CAC8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRAssetsDownloadBannerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SRAssetsDownloadBannerViewController()
{
  return objc_opt_self(_TtC4Siri36SRAssetsDownloadBannerViewController);
}

id sub_10009CBD0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSString v4;

  v3 = *(_QWORD *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_10009CC48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10009CC6C()
{
  uint64_t v0;

  sub_10009C8F4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10009CC74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10009CC84(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_10009CC8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_10014FE70;
  if (!qword_10014FE70)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_10014FE70);
  }
  return result;
}

uint64_t sub_10009CCD4()
{
  uint64_t v0;

  return sub_10009C51C(*(void **)(v0 + 16));
}

uint64_t sub_10009CCDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_10009CD00()
{
  uint64_t v0;

  sub_10009BEAC(*(char **)(v0 + 16), *(double *)(v0 + 24));
}

void sub_10009CD0C()
{
  char *v0;
  char *v1;
  char *v2;
  Swift::String *v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;

  v1 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID];
  strcpy(&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID], "com.apple.siri");
  v1[15] = -18;
  v2 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_siriSettingsPath];
  *(_QWORD *)v2 = 0xD000000000000011;
  *((_QWORD *)v2 + 1) = 0x80000001000E2A70;
  v3 = (Swift::String *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerTitle];
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6._countAndFlagsBits = 0xD00000000000001CLL;
  v14._object = (void *)0xEC000000656C7469;
  v6._object = (void *)0x80000001000E2A90;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0x542072656E6E6142;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v14);

  *v3 = v8;
  v9 = (Swift::String *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSubtitle];
  v10 = objc_msgSend(v4, "mainBundle");
  v11._countAndFlagsBits = 0xD00000000000001FLL;
  v15._object = (void *)0xEF656C7469746275;
  v11._object = (void *)0x80000001000E2AB0;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0x532072656E6E6142;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v15);

  *v9 = v13;
  v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000E1170, "Siri/SRAssetsDownloadBannerViewController.swift", 47, 2, 51, 0);
  __break(1u);
}

id sub_10009CEEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  NSURL *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_100076100(&qword_10014F878);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_siriSettingsPath), *(_QWORD *)(v1 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_siriSettingsPath + 8));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return (id)sub_10007F328((uint64_t)v4);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (qword_10014ECE0 != -1)
    swift_once(&qword_10014ECE0, sub_100098388);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_1000760E8(v10, (uint64_t)qword_100150068);
  v12 = static os_log_type_t.info.getter(v11);
  sub_10009973C(v12, 0x80000000uLL, 0xD000000000000010, 0x80000001000E2A30, 0xD00000000000001CLL, 0x80000001000E2A50);
  result = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (result)
  {
    v14 = result;
    URL._bridgeToObjectiveC()(v13);
    v16 = v15;
    objc_msgSend(v14, "openSensitiveURL:withOptions:", v15, 0);

    sub_10009C708();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10009D0D0()
{
  unint64_t result;

  result = qword_1001501A0;
  if (!qword_1001501A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1001501A0);
  }
  return result;
}

uint64_t type metadata accessor for SRCarPlaySiriUnavailableViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_100150280;
  if (!qword_100150280)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SRCarPlaySiriUnavailableViewController);
  return result;
}

uint64_t sub_10009D174(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_100151188);
}

void sub_10009D1B0()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001000E1170, "Siri/SRCarPlaySiriUnavailableViewController.swift", 49, 2, 16, 0);
  __break(1u);
}

void sub_10009D208()
{
  _swift_stdlib_reportUnimplementedInitializer("Siri.SRCarPlaySiriUnavailableViewController", 43, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_10009D234()
{
  _swift_stdlib_reportUnimplementedInitializer("Siri.SRCarPlaySiriUnavailableViewController", 43, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

id sub_10009D260()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlaySiriUnavailableViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10009D294()
{
  return type metadata accessor for SRCarPlaySiriUnavailableViewController(0);
}

uint64_t getEnumTagSinglePayload for SiriUIFeaturesFlags(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for SiriUIFeaturesFlags(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10009D330 + 4 * byte_1000C1D50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10009D350 + 4 * byte_1000C1D55[v4]))();
}

_BYTE *sub_10009D330(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10009D350(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10009D358(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10009D360(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10009D368(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10009D370(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SiriUIFeaturesFlags()
{
  return &type metadata for SiriUIFeaturesFlags;
}

unint64_t sub_10009D390()
{
  unint64_t result;

  result = qword_1001502D0;
  if (!qword_1001502D0)
  {
    result = swift_getWitnessTable(&unk_1000C1DB4, &type metadata for SiriUIFeaturesFlags);
    atomic_store(result, (unint64_t *)&qword_1001502D0);
  }
  return result;
}

Swift::Int sub_10009D3D4()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_10009D414()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_10009D438(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

const char *sub_10009D474()
{
  return "ResponseFramework";
}

const char *sub_10009D488()
{
  return "SMART";
}

uint64_t sub_10009D49C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC4SiriP33_315436D0A63DAE5398BB62B9697643F819ResourceBundleClass);
}

void sub_10009D4CC(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "+[SRErrorUtility userStringForError:reflectionDialogWasPlayed:]";
  v4 = 2114;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #errorHandling received unhandled error: %{public}@", (uint8_t *)&v2, 0x16u);
}

void sub_10009D554()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Failed to stop user attention controller: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009D5C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Failed to restart attention awareness client: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009D62C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Failed to stop attention awareness client: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009D698(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRSystemAssistantExperienceViewController compactViewModelDidChange:withDiff:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s We have been sent both plugin AND a smart dialog card. This should never happen", (uint8_t *)&v1, 0xCu);
  sub_1000091FC();
}

void sub_10009D714(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[SRSystemAssistantExperienceViewController siriViewControllerEffectiveBundleForCoreLocation:]";
  v4 = 2114;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #compact Returning nil for controller %{public}@", (uint8_t *)&v2, 0x16u);
  sub_1000091FC();
}

void sub_10009D798(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s #suggestions: Old and new suggestions are both empty - skipping view update", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009D808(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s #suggestions: New suggestions are same as old ones - skipping view update", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009D878(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s #autodismiss Auto-dismissal already scheduled for touch outside of Siri", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009D8E8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s #autodismiss WARNING: scheduleAutoDismissalForTouchOutsideOfSiri called but SAE not enabled - this is unexpected and has no effect", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009D958(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s #autodismiss Can't cancel auto-dismissal for touch outside of Siri since no timer has been scheduled", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009D9C8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s #autodismiss WARNING: cancelAutoDismissalForTouchOutsideOfSiri called but SAE not enabled - this is unexpected and has no effect", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009DA38(uint64_t a1, void *a2, uint64_t a3)
{
  id *v4;
  NSObject *v5;
  id WeakRetained;
  void *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  __int16 v11;
  void *v12;
  __int16 v13;
  uint64_t v14;

  v4 = (id *)(a1 + 32);
  v5 = a2;
  WeakRetained = objc_loadWeakRetained(v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "userAttentionController"));
  v9 = 136315650;
  v10 = "-[SRCompactAutoDismissController _startUserAttentionControllerIfNeededForTypes:]_block_invoke";
  v11 = 2114;
  v12 = v7;
  v13 = 2114;
  v14 = a3;
  sub_1000183C0((void *)&_mh_execute_header, v5, v8, "%s #autodismiss Failed to start user attention controller: %{public}@, error: %{public}@", (uint8_t *)&v9);

}

void sub_10009DB08(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;

  v3 = *a1;
  v4 = 136315650;
  v5 = "-[SRCompactAutoDismissController _stopUserAttentionControllerIfNeeded]";
  v6 = 2114;
  v7 = v3;
  v8 = 2114;
  v9 = a2;
  sub_1000183C0((void *)&_mh_execute_header, a3, (uint64_t)a3, "%s #autodismiss Failed to stop user attention controller: %{public}@, error: %{public}@", (uint8_t *)&v4);
}

void sub_10009DB98(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRCompactAutoDismissController _handleUserTouchInteractionTimeout]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #autodismiss Reseting UserInteractedWithTouchScreen", (uint8_t *)&v1, 0xCu);
  sub_1000091FC();
}

void sub_10009DC14(NSObject *a1, uint64_t a2, uint64_t a3)
{
  int v3;
  const char *v4;
  __int16 v5;
  const __CFString *v6;

  v3 = 136315394;
  v4 = "+[SRAssetsUtilities setupBackgroundAssetCheck]";
  v5 = 2112;
  v6 = CFSTR("com.apple.siri.CheckAssetStatus");
  sub_100018E44((void *)&_mh_execute_header, a1, a3, "%s Failed to register background task with identifier %@", (uint8_t *)&v3);
}

void sub_10009DCA0(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  int v6;
  const char *v7;
  __int16 v8;
  void *v9;

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "localizedDescription"));
  v6 = 136315394;
  v7 = "+[SRAssetsUtilities _scheduleAssetCheckWithEarliestBeginDate:]";
  v8 = 2112;
  v9 = v4;
  sub_100018E44((void *)&_mh_execute_header, v3, v5, "%s Failed to submit background task request: %@", (uint8_t *)&v6);

}

void sub_10009DD50(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRBarSlideNavigationTransitionController configureWithNavigationController:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Navigation controller should be SiriUINavigationController", (uint8_t *)&v1, 0xCu);
}

void sub_10009DDD0(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[SRGuideViewController collectionView:numberOfItemsInSection:]";
  v4 = 2050;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s More than three sections in Guide is invalid: %{public}ld", (uint8_t *)&v2, 0x16u);
}

void sub_10009DE58(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[SRCompactViewController siriViewControllerEffectiveBundleForCoreLocation:]";
  v4 = 2114;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #compact Returning nil for controller %{public}@", (uint8_t *)&v2, 0x16u);
}

void sub_10009DEE0(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1;
  sub_100027598();
  sub_100027584();
  sub_100027564((void *)&_mh_execute_header, v3, v4, "%s #tipKitSignalEmitter Unsupported requestSource: %ld", v5, v6, v7, v8, 2u);

  sub_100027578();
}

void sub_10009DF60(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1;
  sub_100027598();
  sub_100027584();
  sub_100027564((void *)&_mh_execute_header, v3, v4, "%s #tipKitSignalEmitter Unsupported bluetooth car requestSource: %ld", v5, v6, v7, v8, 2u);

  sub_100027578();
}

void sub_10009DFE0(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[SRSystemAssistantExperiencePresentation siriWillProcessAppLaunchWithBundleIdentifier:]";
  v4 = 2112;
  v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s Siri will process app launch for %@", (uint8_t *)&v2, 0x16u);
}

void sub_10009E068(void *a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  const char *v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;

  v5 = a1;
  v6 = SiriSharedUIGestureEventDescription(a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = SiriSharedUIGestureEventRegionDescription(a3);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v10 = 136315650;
  v11 = "-[SRSystemAssistantExperiencePresentation didDetectGestureEvent:inRegion:]";
  v12 = 2112;
  v13 = v7;
  v14 = 2112;
  v15 = v9;
  _os_log_debug_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s #dismissal Detected gesture event %@ in region %@", (uint8_t *)&v10, 0x20u);

}

void sub_10009E148(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRUserUtteranceViewController speechAlternativeHighlightListWithScore:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s No utterance text existed for base utterance!!", (uint8_t *)&v1, 0xCu);
}

void sub_10009E1C8(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRSystemAssistantExperienceNavigationTransitionController configureWithNavigationController:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Navigation controller should be SiriUINavigationController", (uint8_t *)&v1, 0xCu);
}

void sub_10009E248(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[SRSystemAssistantExperienceNavigationTransitionController animateTransition:]";
  v4 = 2112;
  v5 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "%s Navigation transition %@ is animating without an associated operation!", (uint8_t *)&v2, 0x16u);
}

void sub_10009E2D0(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[SRModeProvider internalModeOverride]";
  v4 = 2112;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #modes Invalid mode override value: %@", (uint8_t *)&v2, 0x16u);
}

void sub_10009E358()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];

  v2[0] = 136315394;
  sub_1000091E8();
  sub_100038F98((void *)&_mh_execute_header, v0, v1, "%s Unexpectedly passed a notification that is not a known keyboard notification. Returning _SRKeyboardNotificationOrderBefore. { notification: %@ }", (uint8_t *)v2);
}

void sub_10009E3CC(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  int v6[6];

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "name"));
  v6[0] = 136315394;
  sub_1000091E8();
  sub_100038F98((void *)&_mh_execute_header, v3, v5, "%s Notification not supported; returning nil { notificationName: %@ }",
    (uint8_t *)v6);

  sub_100027578();
}

void sub_10009E468(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRCompactKeyboardAnimation initWithKeyboardNotification:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s Returning nil because the duration in the notification is 0, so there is no animation occurring", (uint8_t *)&v1, 0xCu);
}

void sub_10009E4E8(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  int v6[6];

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "name"));
  v6[0] = 136315394;
  sub_1000091E8();
  sub_100038F98((void *)&_mh_execute_header, v3, v5, "%s Notification not supported; returning nil { notificationName: %@ }",
    (uint8_t *)v6);

  sub_100027578();
}

void sub_10009E584(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  const char *v4;
  __int16 v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  v3 = 136315650;
  v4 = "-[SRFullScreenEffects _fullscreenEffectMap]_block_invoke";
  v5 = 2112;
  v6 = a1;
  v7 = 2112;
  v8 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Couldn't enumerate %@: %@", (uint8_t *)&v3, 0x20u);
}

void sub_10009E618(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s Unable to set forced user interface layout direction on UIApplication", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009E688()
{
  int v0;
  uint64_t v1;
  os_log_t v2;
  int v3;
  const char *v4;
  __int16 v5;
  int v6;
  __int16 v7;
  uint64_t v8;

  sub_100058474(__stack_chk_guard);
  v3 = 136315650;
  v4 = "-[SRSiriViewController _connectionWasInterrupted]";
  v5 = 1024;
  v6 = v0;
  v7 = 2112;
  v8 = v1;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s #xpcSiriApp Connection from SpringBoard/CarPlay was interrupted pid=%d _connection=%@", (uint8_t *)&v3, 0x1Cu);
  sub_100058390();
}

void sub_10009E71C(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  const char *v4;
  __int16 v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  v3 = 136315650;
  v4 = "-[SRSiriViewController _removePreviousConversationFromStore]_block_invoke";
  v5 = 2114;
  v6 = AFUIPreviousConversationIdentifier;
  v7 = 2114;
  v8 = a1;
  sub_1000183C0((void *)&_mh_execute_header, a2, a3, "%s Unable to remove conversation (identifier=%{public}@) from store: %{public}@", (uint8_t *)&v3);
  sub_100058390();
}

void sub_10009E7AC()
{
  NSObject *v0;
  int v1[10];

  v1[0] = 136315650;
  sub_1000583E8();
  sub_1000183C0((void *)&_mh_execute_header, v0, (uint64_t)v0, "%s #conversation Unable to save conversation to store { conversation: %@, error: %{public}@ }", (uint8_t *)v1);
  sub_100058390();
}

void sub_10009E824(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;

  v3 = *a1;
  v4 = 136315650;
  v5 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke_2";
  v6 = 2114;
  v7 = AFUIPreviousConversationIdentifier;
  v8 = 2114;
  v9 = v3;
  sub_1000183C0((void *)&_mh_execute_header, a2, a3, "%s #conversation Unable to load previous conversation from store { identifier: %{public}@, error: %{public}@ }", (uint8_t *)&v4);
  sub_100058390();
}

void sub_10009E8B8(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  const char *v6;
  __int16 v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = 136315650;
  v6 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
  v7 = 2112;
  v8 = v3;
  v9 = 2114;
  v10 = v4;
  sub_1000183C0((void *)&_mh_execute_header, a2, a3, "%s #conversation Unable to remove conversation with mismatched language from store { conversation: %@, error: %{public}@", (uint8_t *)&v5);
  sub_100058390();
}

void sub_10009E944(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  double v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(double *)(a1 + 144);
  v6 = a2;
  v7 = objc_msgSend((id)sub_100058448(), "numberWithDouble:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", *(double *)(a3 + 40)));
  sub_100058364();
  sub_100058414((void *)&_mh_execute_header, v10, v11, "%s Type2Siri: keyboard height %@=>%@", v12, v13, v14, v15, 2u);

}

void sub_10009EA20(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s Current SiriUIPresentation does not support selector didReceiveReportBugAction", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009EA90()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Unable to request deactivation from host: %{public}@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009EAFC(void *a1, void *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_100058494(a1);
  v4 = sub_100058448();
  v5 = SiriSharedUIGestureEventDescription(v4);
  objc_claimAutoreleasedReturnValue(v5);
  v6 = sub_10005843C();
  v7 = SiriSharedUIGestureEventRegionDescription(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  sub_100058364();
  sub_100058414((void *)&_mh_execute_header, v9, v10, "%s #dismissal SpringBoard has notified us of gesture event %@, in region %@", v11, v12, v13, v14, 2u);

  sub_100058398();
}

void sub_10009EBA0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s Animated disappearance has begun. Notifying the presentation if it subscribes.", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009EC10(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1000091D8((void *)&_mh_execute_header, a1, a3, "%s #tts 5 FAIL Unable to parse speakable text: %{sensitive}@", a5, a6, a7, a8, 3u);
  sub_1000091FC();
}

void sub_10009EC8C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058460();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #tts 5 FAIL Unable to parse speakable text: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009ECFC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #tts 5 FAIL Unable to activate audio session: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009ED68()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #tts 11 B No preparation block for preparation identifier %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009EDD4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s ERROR: Failed to get URL for a non-audio message", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009EE44(void *a1)
{
  NSObject *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  int v6[6];

  v2 = a1;
  v3 = objc_msgSend((id)sub_10005843C(), "turnIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v6[0] = 136315394;
  sub_1000091E8();
  sub_100018E44((void *)&_mh_execute_header, v1, v5, "%s #instrumentation unable to link previous turn with new turn: %@ as previousTurnIdentifier is nil.", (uint8_t *)v6);

  sub_100058390();
}

void sub_10009EEE0(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  int v7[10];

  v3 = sub_100058494(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "aceId"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "refId"));
  v7[0] = 136315650;
  sub_100058364();
  sub_1000183C0((void *)&_mh_execute_header, v3, v6, "%s Received an empty SAUIAddViews aceID:%@ refID:%@. Marking command as SACommandSucceeded", (uint8_t *)v7);

  sub_100058398();
}

void sub_10009EF94()
{
  NSObject *v0;
  int v1[10];

  v1[0] = 136315650;
  sub_1000583A8();
  sub_1000183C0((void *)&_mh_execute_header, v0, (uint64_t)v0, "%s BioLockout failed for:\"%@\" error:%@", (uint8_t *)v1);
  sub_100058390();
}

void sub_10009F008(void *a1)
{
  NSObject *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  Class v5;
  NSString *v6;
  void *v7;
  uint64_t v8;
  int v9[6];

  v2 = a1;
  v3 = sub_10005843C();
  objc_opt_class(v3, v4);
  v6 = NSStringFromClass(v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v9[0] = 136315394;
  sub_1000091E8();
  sub_100018E44((void *)&_mh_execute_header, v1, v8, "%s #modes Unhandled command: %@", (uint8_t *)v9);

  sub_100058390();
}

void sub_10009F0A8(void *a1, uint64_t a2, NSObject *a3)
{
  id v5;

  *(_DWORD *)a2 = 136315394;
  *(_QWORD *)(a2 + 4) = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:subCo"
                        "mpletion:speakPreparation:speakCompletion:]";
  *(_WORD *)(a2 + 12) = 2112;
  *(_QWORD *)(a2 + 14) = a1;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "%s context is not of expected type AceObject, but is %@", (uint8_t *)a2, 0x16u);

}

void sub_10009F124(uint64_t a1, void *a2, uint64_t a3)
{
  id *v4;
  NSObject *v5;
  id WeakRetained;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  int v10[5];
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;

  v4 = (id *)(a1 + 40);
  v5 = a2;
  WeakRetained = objc_loadWeakRetained(v4);
  v10[0] = 136315906;
  sub_100058428();
  v11 = 2112;
  v12 = v7;
  v13 = v8;
  v14 = a3;
  sub_100058408((void *)&_mh_execute_header, v5, v9, "%s %{public}@ unable to obtain bulletin with identifier %@ from the host: %{public}@", (uint8_t *)v10);

  sub_1000583D8();
}

void sub_10009F1E0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058460();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #tts Unable to parse speakable text: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F250(uint64_t a1, void *a2)
{
  NSObject *v2;
  id v3;
  id *v4;
  id WeakRetained;
  uint64_t v6;
  uint64_t v7;
  int v8[5];
  __int16 v9;
  uint64_t v10;

  v3 = a2;
  v4 = (id *)sub_100058448();
  WeakRetained = objc_loadWeakRetained(v4);
  v8[0] = 136315650;
  sub_100058428();
  v9 = 2112;
  v10 = v6;
  sub_1000183C0((void *)&_mh_execute_header, v2, v7, "%s %{public}@ found bulletin with identifier %@ in preparationCompletion block", (uint8_t *)v8);

  sub_100058398();
}

void sub_10009F2FC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  NSObject *v5;
  uint64_t Name;
  void *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  __int16 v11;
  uint64_t v12;

  v5 = sub_100058454(a2, __stack_chk_guard);
  Name = SRUIFSpeechSynthesisResultGetName(a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(Name);
  v9 = 136315906;
  v10 = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:subCompletion:speakPr"
        "eparation:speakCompletion:]_block_invoke";
  v11 = 2112;
  v12 = v3;
  sub_100058480();
  sub_100058408((void *)&_mh_execute_header, v5, v8, "%s #tts SRUIFSpeechSynthesisCompletion error strongSelf=nil text=\"%@\" result=%@ command=%@", (uint8_t *)&v9);

  sub_1000583D8();
}

void sub_10009F3B0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  NSObject *v5;
  uint64_t Name;
  void *v7;
  uint64_t v8;
  int v9;
  const char *v10;
  __int16 v11;
  uint64_t v12;

  v5 = sub_100058454(a2, __stack_chk_guard);
  Name = SRUIFSpeechSynthesisResultGetName(a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue(Name);
  v9 = 136315907;
  v10 = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:subCompletion:speakPr"
        "eparation:speakCompletion:]_block_invoke";
  v11 = 2117;
  v12 = v3;
  sub_100058480();
  sub_100058408((void *)&_mh_execute_header, v5, v8, "%s #tts SRUIFSpeechSynthesisCompletion error strongSelf=nil text=\"%{sensitive}@\" result=%@ command=%@", (uint8_t *)&v9);

  sub_1000583D8();
}

void sub_10009F468(uint64_t a1, uint64_t a2, NSObject *a3)
{
  int v3;
  const char *v4;
  __int16 v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  v3 = 136315650;
  v4 = "-[SRSiriViewController siriSessionDidReceivePlayNotificationSound:completion:]_block_invoke";
  v5 = 2048;
  v6 = a2;
  v7 = 2112;
  v8 = a1;
  sub_1000183C0((void *)&_mh_execute_header, a3, (uint64_t)a3, "%s Failed notification sound playback with PlaybackCompletionType: %zd, error: %@", (uint8_t *)&v3);
  sub_100058390();
}

void sub_10009F4F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Unable to request deactivation from host: %{public}@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F560(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s #presynthesize siriSessionDidReceivePreSynthesizeTTSCommand:completion", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009F5D0()
{
  __int16 v0;
  uint64_t v1;
  NSObject *v2;
  int v3[5];
  __int16 v4;
  uint64_t v5;

  sub_100058474(__stack_chk_guard);
  v3[0] = 136315650;
  sub_1000583C4();
  v4 = v0;
  v5 = v1;
  sub_1000183C0((void *)&_mh_execute_header, v2, (uint64_t)v2, "%s Unable to handle PreSynthesisTTS command: %@, error: %@", (uint8_t *)v3);
  sub_100058390();
}

void sub_10009F64C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Error decoding route UID: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F6B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Error creating routeUID string from data: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F724()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058474(__stack_chk_guard);
  sub_1000583C4();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Item corresponding to identifier=%@ removed from active conversation already. Do not call siriDidFinishActionsForConversationItemWithIdentifier:inConversation: to avoid a rare crash!", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F790()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058474(__stack_chk_guard);
  sub_1000583C4();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Unable to record metrics for class: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F7FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Unable to record tip view activity: %{public}@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F868()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Unable to record guide view activity: %{public}@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009F8D4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s #cmas #carPlay Emergency bulletin speech requested without title or message payload", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009F944(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s #cmas #carPlay self is nil. Completing with AFUIBulletinReadoutResultUnknown.", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009F9B4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #cmas #carPlay unexpected error received: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009FA20(void *a1, void *a2)
{
  NSObject *v2;
  uint64_t v4;
  uint64_t Name;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int v10[10];

  sub_100058494(a1);
  v4 = sub_100058448();
  Name = AFUIBulletinReadoutResultGetName(v4);
  objc_claimAutoreleasedReturnValue(Name);
  v6 = sub_10005843C();
  v7 = AFUIBulletinReadoutResultGetName(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  v10[0] = 136315650;
  sub_100058364();
  sub_1000183C0((void *)&_mh_execute_header, v2, v9, "%s unhandled combination of titleResult: %@ and messageResult: %@", (uint8_t *)v10);

  sub_100058398();
}

void sub_10009FACC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Unable to ask host for request options: %{public}@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009FB38()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Punchout received with no bundleId or punchOurUri: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009FBA4()
{
  os_log_t v0;
  int v1[6];

  v1[0] = 136315394;
  sub_1000583C4();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s Presentation indicates that we %@ punch out in place", (uint8_t *)v1, 0x16u);
  sub_1000091FC();
}

void sub_10009FC34(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100016194((void *)&_mh_execute_header, a1, a3, "%s Not punching out in place because presentation does not implement shouldPunchOutInPlace", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_10009FCA4()
{
  NSObject *v0;
  int v1[10];

  v1[0] = 136315650;
  sub_1000583E8();
  sub_1000183C0((void *)&_mh_execute_header, v0, (uint64_t)v0, "%s Unable to perform punch out %@: %{public}@", (uint8_t *)v1);
  sub_100058390();
}

void sub_10009FD1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #idleTimer Unable to update siriIdleAndQuiet status: %{public}@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009FD88()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #errorHandling siri ui didn't present %{public}@ to the user", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009FDF4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_100058350();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s #errorHandling received error: %{public}@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_10009FE60()
{
  NSObject *v0;
  int v1[10];

  v1[0] = 136315650;
  sub_1000583A8();
  sub_1000183C0((void *)&_mh_execute_header, v0, (uint64_t)v0, "%s Error building PunchOut MetricsContext for ace id = %@, error = %@", (uint8_t *)v1);
  sub_100058390();
}

uint64_t sub_10009FED4()
{
  NSObject *v0;

  v0 = abort_report_np("Unable to find class %s", "VTStateManager");
  return sub_10009FEF8(v0);
}

void sub_10009FEF8(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRWindowSceneDelegate scene:willConnectToSession:options:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Scene connecting without window", (uint8_t *)&v1, 0xCu);
}

void sub_10009FF78(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1;
  v4 = (void *)sub_10005B080((uint64_t)v2, v3);
  v5 = sub_10005B06C(v4);
  sub_100027564((void *)&_mh_execute_header, v6, v7, "%s expected stored bundle path to be a string, but it was a %{public}@", v8, v9, v10, v11, 2u);

  sub_100027578();
}

void sub_1000A0000(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1;
  v4 = (void *)sub_10005B080((uint64_t)v2, v3);
  v5 = sub_10005B06C(v4);
  sub_100027564((void *)&_mh_execute_header, v6, v7, "%s expected stored bundle identifier to be a string, but it was a %{public}@", v8, v9, v10, v11, 2u);

  sub_100027578();
}

void sub_1000A0088(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "_URL"));
  sub_10005B034();
  sub_10005B058((void *)&_mh_execute_header, v5, v6, "%s %{public}@ unable to read on-disk cache at %{public}@: %{public}@", v7, v8, v9, v10, 2u);

  sub_1000583D8();
}

void sub_1000A0124(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "_URL"));
  sub_10005B034();
  sub_10005B058((void *)&_mh_execute_header, v5, v6, "%s %{public}@ unable to read property list from data at %{public}@: %{public}@", v7, v8, v9, v10, 2u);

  sub_1000583D8();
}

void sub_1000A01C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Typed data not found on SAPersonAttribute when attempting to convert to INPerson - attempting to fall back to raw data\n    SAPersonAttribute: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_1000A022C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Typed data not found on SAPersonAttribute when attempting to find phone data - attempting to fall back to raw data\n    SAPersonAttribute: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_1000A0298()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000091D8((void *)&_mh_execute_header, v0, v1, "%s Typed data not found on SAPersonAttribute when attempting to find email data - attempting to fall back to raw data\n    SAPersonAttribute: %@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_1000A0304(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRCardStackNavigationTransitionContext completeTransition:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s Transition is already completed; returning",
    (uint8_t *)&v1,
    0xCu);
  sub_1000091FC();
}

void sub_1000A0380()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000616E8((void *)&_mh_execute_header, v0, v1, "%s Navigation transition %@ is animating without an associated operation!", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_1000A03EC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_1000616E8((void *)&_mh_execute_header, v0, v1, "%s Navigation transition %@ is animating without an associated operation!", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_1000A0458()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_100062DE4((void *)&_mh_execute_header, v0, v1, "%s #presynthesize setPreSynthesizeTTSCommand:%@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_1000A04C4(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  const char *v4;
  __int16 v5;
  uint64_t v6;

  v2 = *a1;
  v3 = 136315394;
  v4 = "-[SRPreSynthesisTask replyAceCommand]";
  v5 = 2112;
  v6 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #presynthesize PreSynthesizeTTS command (%@) failed", (uint8_t *)&v3, 0x16u);
  sub_1000091FC();
}

void sub_1000A054C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s #presynthesize Unable to handle PreSynthesisTTS command because it is set to nil.", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_1000A05BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s #presynthesize Unable to handle PreSynthesis command because there are no valid dialogStrings to operate on", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_1000A062C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s #presynthesize Unable to handle PreSynthesis command because there are zero dialogStrings", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_1000A069C(uint8_t *buf, _QWORD *a2, os_log_t log)
{
  *(_DWORD *)buf = 136315138;
  *a2 = "-[SRPreSynthesisTask handlePreSynthesisCommandWithError:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #presynthesize Presynthesizing failed: No speakable text", buf, 0xCu);
}

void sub_1000A06E8(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRPreSynthesisTask handlePreSynthesisCommandWithError:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s #presynthesize handlePreSynthesisCommandWithError", (uint8_t *)&v1, 0xCu);
  sub_1000091FC();
}

void sub_1000A0764()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1000091E8();
  sub_100062DE4((void *)&_mh_execute_header, v0, v1, "%s #presynthesize didFinishSynthesisRequest:withInstrumentMetrics:error:%@", v2, v3, v4, v5, 2u);
  sub_1000091FC();
}

void sub_1000A07D0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100058380((void *)&_mh_execute_header, a1, a3, "%s #presynthesize Unable to determine index of dialogString that was synthesized.", a5, a6, a7, a8, 2u);
  sub_1000091FC();
}

void sub_1000A0840(uint64_t a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  const char *v5;
  __int16 v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;

  v3 = *a2;
  v4 = 136315650;
  v5 = "-[SRPreSynthesisTask didFinishSynthesisRequest:withInstrumentMetrics:error:]_block_invoke";
  v6 = 2112;
  v7 = a1;
  v8 = 2112;
  v9 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #presynthesize Unable to determine dialog string duration for %@, error: %@", (uint8_t *)&v4, 0x20u);
}

void sub_1000A08D8(void **a1, void *a2)
{
  void *v2;
  NSObject *v3;
  void *v4;
  int v5;
  const char *v6;
  __int16 v7;
  void *v8;

  v2 = *a1;
  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "dictionary"));
  v5 = 136315394;
  v6 = "-[SRPlayContentViewController initWithPlayContent:]";
  v7 = 2112;
  v8 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s No player from SAVCSPlayContent\n    Play content command: %@", (uint8_t *)&v5, 0x16u);

}

void sub_1000A0990(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;

  v2 = 136315394;
  v3 = "-[AceObject(MapsSession) _afui_updateMapsAnalytics]";
  v4 = 2112;
  v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s Missing values for extSessionGuid or extSessionGuidCreatedTimestamp from %@", (uint8_t *)&v2, 0x16u);
}

void sub_1000A0A18(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRViewController setUpViews]_block_invoke";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Too many uncleaned up SRSiriViewControllers. Resetting counter.", (uint8_t *)&v1, 0xCu);
}

void sub_1000A0A98(void *a1, void *a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  int v6[6];

  v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "aceId"));
  v6[0] = 136315394;
  sub_1000091E8();
  sub_100018E44((void *)&_mh_execute_header, v3, v5, "%s #modes Invalid AddViews (aceId = %@). Both AssistantUtteranceView and Dialog on the same AddViews is unsupported.", (uint8_t *)v6);

}

void sub_1000A0B3C()
{
  NSObject *v0;
  uint64_t v1;
  int v2[6];

  v2[0] = 136315394;
  sub_1000091E8();
  sub_100018E44((void *)&_mh_execute_header, v0, v1, "%s #modes Failed to load configuration file: %@", (uint8_t *)v2);
}

void sub_1000A0BB0(os_log_t log)
{
  int v1;
  const char *v2;

  v1 = 136315138;
  v2 = "-[SRAppDelegate _updateDeferral]_block_invoke";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s window lacked contextID, sending back 0", (uint8_t *)&v1, 0xCu);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImage");
}

id objc_msgSend_CGPointValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPointValue");
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGRectValue");
}

id objc_msgSend_URLByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByDeletingPathExtension");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend__FBSScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_FBSScene");
}

id objc_msgSend__MDModeToSRModeConverter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_MDModeToSRModeConverter:");
}

id objc_msgSend__URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_URL");
}

id objc_msgSend__aceCommandRecords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_aceCommandRecords");
}

id objc_msgSend__aceCommandWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_aceCommandWithIdentifier:");
}

id objc_msgSend__activateConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateConversation:");
}

id objc_msgSend__activeConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeConversation");
}

id objc_msgSend__activeConversationDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeConversationDidChange");
}

id objc_msgSend__activeConversationItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeConversationItemAtIndexPath:");
}

id objc_msgSend__activeConversationTranscriptItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeConversationTranscriptItems");
}

id objc_msgSend__activeRequestOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeRequestOptions");
}

id objc_msgSend__activeRequestOptionsDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeRequestOptionsDidChange");
}

id objc_msgSend__activeTranscriptItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activeTranscriptItems");
}

id objc_msgSend__addErrorUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addErrorUtterance:");
}

id objc_msgSend__addFeedbackButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addFeedbackButton");
}

id objc_msgSend__addSuggestionsToContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSuggestionsToContainer");
}

id objc_msgSend__addViewsForAddDialogs_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addViewsForAddDialogs:views:");
}

id objc_msgSend__adjustLineSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustLineSpacing");
}

id objc_msgSend__afui_mapsRelatedChild(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_afui_mapsRelatedChild");
}

id objc_msgSend__afui_mapsRelatedChildren(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_afui_mapsRelatedChildren");
}

id objc_msgSend__afui_updateMapsAnalytics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_afui_updateMapsAnalytics");
}

id objc_msgSend__allTranscriptItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allTranscriptItems");
}

id objc_msgSend__allowsTextToWrap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowsTextToWrap");
}

id objc_msgSend__alternativesTableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alternativesTableView");
}

id objc_msgSend__alwaysObscureBackgroundContentWhenActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alwaysObscureBackgroundContentWhenActive");
}

id objc_msgSend__alwaysPrintSiriResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alwaysPrintSiriResponse");
}

id objc_msgSend__analytics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_analytics");
}

id objc_msgSend__animateMultiPopKeyframe_outOfTotalKeyframes_transitionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateMultiPopKeyframe:outOfTotalKeyframes:transitionContext:completion:");
}

id objc_msgSend__animateOnePopTransition_originalContext_andComplete_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateOnePopTransition:originalContext:andComplete:completion:");
}

id objc_msgSend__animatePushTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePushTransition:");
}

id objc_msgSend__animateTransitionForOperation_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateTransitionForOperation:context:");
}

id objc_msgSend__animateUsingDefaultTimingWithOptions_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingDefaultTimingWithOptions:animations:completion:");
}

id objc_msgSend__animateUsingSpringBehavior_tracking_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingSpringBehavior:tracking:animations:completion:");
}

id objc_msgSend__animateWithDuration_delay_options_animations_start_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateWithDuration:delay:options:animations:start:completion:");
}

id objc_msgSend__applicableEmail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicableEmail");
}

id objc_msgSend__applicablePhone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicablePhone");
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__applicationKeyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationKeyWindow");
}

id objc_msgSend__attentionAwarenessConfigurationWithIdentifier_eventMask_samplingInterval_attentionLossTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attentionAwarenessConfigurationWithIdentifier:eventMask:samplingInterval:attentionLossTimeout:");
}

id objc_msgSend__attributedStringForTip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedStringForTip");
}

id objc_msgSend__audioMessagePlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audioMessagePlayer");
}

id objc_msgSend__autoDismissalStrategy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autoDismissalStrategy");
}

id objc_msgSend__backgroundEmptyPlatterViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundEmptyPlatterViewOriginalFrame");
}

id objc_msgSend__backgroundPlatteredCardViewForOperation_recentViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundPlatteredCardViewForOperation:recentViewControllers:");
}

id objc_msgSend__backgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundView");
}

id objc_msgSend__beginEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginEditing");
}

id objc_msgSend__beginEditingGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginEditingGestureRecognizer");
}

id objc_msgSend__bigButtonViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bigButtonViewController");
}

id objc_msgSend__blurAnimationWithDuration_blurIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_blurAnimationWithDuration:blurIn:");
}

id objc_msgSend__borderColorForUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_borderColorForUserInterfaceStyle:");
}

id objc_msgSend__bottomContentInsetComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bottomContentInsetComponents");
}

id objc_msgSend__builtInPresentationWithIdentifier_delegate_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_builtInPresentationWithIdentifier:delegate:dataSource:");
}

id objc_msgSend__bundleURLsByBundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bundleURLsByBundleIdentifier");
}

id objc_msgSend__buttonPressAwarenessClientEventMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonPressAwarenessClientEventMask");
}

id objc_msgSend__cachedURLForBundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedURLForBundleWithIdentifier:");
}

id objc_msgSend__calculateMoveFromPlatteredCardViewToBackgroundAffineTransformForPercentComplete_withSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateMoveFromPlatteredCardViewToBackgroundAffineTransformForPercentComplete:withSemanticContentAttribute:");
}

id objc_msgSend__callHistoryRowsForCalls_callOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callHistoryRowsForCalls:callOperation:");
}

id objc_msgSend__cancelButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelButton");
}

id objc_msgSend__cancelCurrentAudioMessagePlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelCurrentAudioMessagePlayback:");
}

id objc_msgSend__cancelCurrentTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelCurrentTTS:");
}

id objc_msgSend__cancelDelayedUserAttentionControllerStop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelDelayedUserAttentionControllerStop");
}

id objc_msgSend__cancelIdleTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelIdleTimer");
}

id objc_msgSend__cancelLastRootProvisionalSnippetFromLastRequestInConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelLastRootProvisionalSnippetFromLastRequestInConversation:");
}

id objc_msgSend__cancelScheduledAutoDismissalForLongIdlingIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelScheduledAutoDismissalForLongIdlingIfNeeded");
}

id objc_msgSend__cancelSpeechSynthesis(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelSpeechSynthesis");
}

id objc_msgSend__cancelUserTouchInteractionTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelUserTouchInteractionTimeout");
}

id objc_msgSend__cellTypeForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellTypeForIndexPath:");
}

id objc_msgSend__checkAndEmitBluetoothInvocationSourcePerVehicle_forRequestOptions_btManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndEmitBluetoothInvocationSourcePerVehicle:forRequestOptions:btManager:");
}

id objc_msgSend__checkAndEmitCarPlayInvocationSourcePerVehicle_forRequestOptions_accessoryManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndEmitCarPlayInvocationSourcePerVehicle:forRequestOptions:accessoryManager:");
}

id objc_msgSend__checkAndEmitHSSignalsWithSource_forRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndEmitHSSignalsWithSource:forRequestOptions:");
}

id objc_msgSend__checkAndUpdateSiriIdleAndQuietStatusIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndUpdateSiriIdleAndQuietStatusIfNeeded");
}

id objc_msgSend__checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded");
}

id objc_msgSend__checkAndUpdateSiriIsIdleAndQuietStatusWithChangeHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndUpdateSiriIsIdleAndQuietStatusWithChangeHandler:");
}

id objc_msgSend__checkUpdatedSizingForEditableTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkUpdatedSizingForEditableTextView:");
}

id objc_msgSend__circleToLabelHeightDifference(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_circleToLabelHeightDifference");
}

id objc_msgSend__classNameForBuiltInPresentationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_classNameForBuiltInPresentationWithIdentifier:");
}

id objc_msgSend__cleanupAllViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupAllViews");
}

id objc_msgSend__clearButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearButton");
}

id objc_msgSend__closeButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_closeButton");
}

id objc_msgSend__compactResultView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_compactResultView");
}

id objc_msgSend__compactView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_compactView");
}

id objc_msgSend__completedCommandAppPunchOutIds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completedCommandAppPunchOutIds");
}

id objc_msgSend__completion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completion");
}

id objc_msgSend__configurationDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationDictionary");
}

id objc_msgSend__configuredSpeakableUtteranceParserForCommand_context_speakableText_subCompletion_speakPreparation_speakCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configuredSpeakableUtteranceParserForCommand:context:speakableText:subCompletion:speakPreparation:speakCompletion:");
}

id objc_msgSend__connectionWasInterrupted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionWasInterrupted");
}

id objc_msgSend__connectionWasInvalidated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionWasInvalidated");
}

id objc_msgSend__contentDiffersBetweenPlatterItems_andItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentDiffersBetweenPlatterItems:andItems:");
}

id objc_msgSend__contextId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextId");
}

id objc_msgSend__conversationIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conversationIdentifiers");
}

id objc_msgSend__conversationStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conversationStore");
}

id objc_msgSend__conversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conversationWithIdentifier:");
}

id objc_msgSend__conversations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conversations");
}

id objc_msgSend__convertRectFromKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertRectFromKeyboard:");
}

id objc_msgSend__convertToPointInSAEViewCoordinates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertToPointInSAEViewCoordinates:");
}

id objc_msgSend__convertedCardSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertedCardSection");
}

id objc_msgSend__convertedCardSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertedCardSections");
}

id objc_msgSend__convertedImageOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertedImageOfSize:");
}

id objc_msgSend__convertedLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertedLocation");
}

id objc_msgSend__convertedPunchout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertedPunchout");
}

id objc_msgSend__coordinateTransitionWithTransitionCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_coordinateTransitionWithTransitionCoordination:");
}

id objc_msgSend__correctionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_correctionIdentifier");
}

id objc_msgSend__createBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBackgroundView:");
}

id objc_msgSend__createNewSmartDialog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createNewSmartDialog");
}

id objc_msgSend__createNotificationRequest_body_footer_identifier_categoryIdentifier_suppressDefaultAction_expirationDate_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createNotificationRequest:body:footer:identifier:categoryIdentifier:suppressDefaultAction:expirationDate:userInfo:");
}

id objc_msgSend__createReusableViewWithClass_snippetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createReusableViewWithClass:snippetViewController:");
}

id objc_msgSend__createSmartDialogViewsFromSuggestionViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSmartDialogViewsFromSuggestionViews:");
}

id objc_msgSend__createSpeechAlternativeViewsIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSpeechAlternativeViewsIfNecessary");
}

id objc_msgSend__createVisualEffectBackgroundViewForTextView_topOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createVisualEffectBackgroundViewForTextView:topOffset:");
}

id objc_msgSend__currentAVRecordRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentAVRecordRoute");
}

id objc_msgSend__dateOfLastReport(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dateOfLastReport");
}

id objc_msgSend__debugDescriptionForProperty_BOOLValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDescriptionForProperty:BOOLValue:");
}

id objc_msgSend__debugDescriptionForProperty_formattedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDescriptionForProperty:formattedValue:");
}

id objc_msgSend__debugDescriptionForProperty_integerValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDescriptionForProperty:integerValue:");
}

id objc_msgSend__defaultURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultURL");
}

id objc_msgSend__delayAceCommandSuccess_forDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delayAceCommandSuccess:forDuration:");
}

id objc_msgSend__delayedConversationItemRevisionIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delayedConversationItemRevisionIdentifiers");
}

id objc_msgSend__delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delegate");
}

id objc_msgSend__deleteConversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteConversationWithIdentifier:");
}

id objc_msgSend__deletePreviousConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deletePreviousConversation");
}

id objc_msgSend__detectionStartedForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detectionStartedForType:");
}

id objc_msgSend__deviceSpecificImageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceSpecificImageNamed:inBundle:");
}

id objc_msgSend__deviceSpecificStringForDefaultString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceSpecificStringForDefaultString:");
}

id objc_msgSend__deviceSupportsFaceDetection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceSupportsFaceDetection");
}

id objc_msgSend__deviceSupportsFaceID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceSupportsFaceID");
}

id objc_msgSend__dialogModeToVisualModeConverter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dialogModeToVisualModeConverter:");
}

id objc_msgSend__didCompleteActionForAceCommand_success_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCompleteActionForAceCommand:success:");
}

id objc_msgSend__didDetectGestureEventWithinSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didDetectGestureEventWithinSiri:");
}

id objc_msgSend__didDetectTouchOutsideOfSiri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didDetectTouchOutsideOfSiri");
}

id objc_msgSend__didPresentItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didPresentItemsAtIndexPaths:");
}

id objc_msgSend__didReceiveAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveAceCommand:");
}

id objc_msgSend__didReceiveAceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveAceCommand:completion:");
}

id objc_msgSend__didShowTip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didShowTip");
}

id objc_msgSend__didStartActionForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didStartActionForAceCommand:");
}

id objc_msgSend__didStartActionForItemAtIndexPath_inConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didStartActionForItemAtIndexPath:inConversation:");
}

id objc_msgSend__didUpdateShowTipCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didUpdateShowTipCount");
}

id objc_msgSend__dismissFromTimeoutAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissFromTimeoutAfterDelay:");
}

id objc_msgSend__dismissWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissWithReason:");
}

id objc_msgSend__dismissalContextWithDismissalReason_dismissalOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissalContextWithDismissalReason:dismissalOptions:");
}

id objc_msgSend__dismissalPanGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissalPanGestureRecognizer");
}

id objc_msgSend__displayNotReadyError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNotReadyError:");
}

id objc_msgSend__domainObjectStorageConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_domainObjectStorageConnection");
}

id objc_msgSend__domainSnippetForEnabledIntentSupportedAppAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_domainSnippetForEnabledIntentSupportedAppAtIndex:");
}

id objc_msgSend__domainSnippetForHelpDomainAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_domainSnippetForHelpDomainAtIndex:");
}

id objc_msgSend__domainSnippetForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_domainSnippetForIndexPath:");
}

id objc_msgSend__downloadAssetsNotificationRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_downloadAssetsNotificationRequest");
}

id objc_msgSend__downloadSiriAdvancedFeaturesAssetsNotificationRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_downloadSiriAdvancedFeaturesAssetsNotificationRequest");
}

id objc_msgSend__edgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_edgeInsets");
}

id objc_msgSend__editableUtteranceViewControllerDidDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editableUtteranceViewControllerDidDismiss:");
}

id objc_msgSend__editableUtteranceViewControllerWillBePresentedWithSheetPresentationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editableUtteranceViewControllerWillBePresentedWithSheetPresentationController:");
}

id objc_msgSend__effectForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectForIdentifier:");
}

id objc_msgSend__emitRenderingEnded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitRenderingEnded");
}

id objc_msgSend__endBackgroundTask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endBackgroundTask");
}

id objc_msgSend__endTrackingGuideShowTimeIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endTrackingGuideShowTimeIfNecessary");
}

id objc_msgSend__enqueueSpokenSuggestionsFromAddViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueSpokenSuggestionsFromAddViews:");
}

id objc_msgSend__enumerateDescendentViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateDescendentViews:");
}

id objc_msgSend__executePreTransitionBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executePreTransitionBlocks");
}

id objc_msgSend__expectedPopCountForTransitionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expectedPopCountForTransitionContext:");
}

id objc_msgSend__exportedInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exportedInterface");
}

id objc_msgSend__faceAttentionAwarenessEventMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_faceAttentionAwarenessEventMask");
}

id objc_msgSend__fallbackImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fallbackImage");
}

id objc_msgSend__fetchAttendingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAttendingState:");
}

id objc_msgSend__fetchConnectedAudioAccessoryState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchConnectedAudioAccessoryState");
}

id objc_msgSend__filterTranscriptItemsForSAEDialogBoxContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filterTranscriptItemsForSAEDialogBoxContent:");
}

id objc_msgSend__firstSnippetInViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstSnippetInViews:");
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flatImageWithColor:");
}

id objc_msgSend__font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_font");
}

id objc_msgSend__frameForPlaceholderRectForBounds_alignment_layingOutContentRightToLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForPlaceholderRectForBounds:alignment:layingOutContentRightToLeft:");
}

id objc_msgSend__fromPlatterViewOfViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fromPlatterViewOfViewController:");
}

id objc_msgSend__fromPlatteredCardViewGivenFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fromPlatteredCardViewGivenFromViewController:");
}

id objc_msgSend__fromPlatteredCardViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fromPlatteredCardViewOriginalFrame");
}

id objc_msgSend__fromSnippetContainerViewOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fromSnippetContainerViewOfView:");
}

id objc_msgSend__fullscreenEffectMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fullscreenEffectMap");
}

id objc_msgSend__getUpdatedErrorCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getUpdatedErrorCount");
}

id objc_msgSend__guideSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_guideSnippet");
}

id objc_msgSend__handleButtonPressAttentionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleButtonPressAttentionEvent:");
}

id objc_msgSend__handleFaceAttentionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFaceAttentionEvent:");
}

id objc_msgSend__handleNonSnippetResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNonSnippetResponse:");
}

id objc_msgSend__handleRequestError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestError:completion:");
}

id objc_msgSend__handleTouchAttentionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleTouchAttentionEvent:");
}

id objc_msgSend__hasInexpensiveNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasInexpensiveNetwork");
}

id objc_msgSend__hasSufficientDiskSpaceForDownload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasSufficientDiskSpaceForDownload");
}

id objc_msgSend__hasText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasText");
}

id objc_msgSend__hasTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasTitle");
}

id objc_msgSend__headerViewEdgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headerViewEdgeInsets");
}

id objc_msgSend__heightOfRowForDomainSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightOfRowForDomainSnippet:");
}

id objc_msgSend__hideEditableUtteranceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideEditableUtteranceView");
}

id objc_msgSend__hidesStatusViewForInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hidesStatusViewForInputType:");
}

id objc_msgSend__hidesTextRequestViewForInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hidesTextRequestViewForInputType:");
}

id objc_msgSend__host(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_host");
}

id objc_msgSend__hostWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hostWithErrorHandler:");
}

id objc_msgSend__iconImageForGuideDomainSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconImageForGuideDomainSnippet:");
}

id objc_msgSend__identifierOfPreviousConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierOfPreviousConversation");
}

id objc_msgSend__idleTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_idleTimer");
}

id objc_msgSend__ignoreUnintentionalTouches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ignoreUnintentionalTouches");
}

id objc_msgSend__imageFromRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageFromRect:");
}

id objc_msgSend__indentWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indentWidth");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_init");
}

id objc_msgSend__initialHeaderText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initialHeaderText");
}

id objc_msgSend__inputType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inputType");
}

id objc_msgSend__insertUserUtteranceViewForSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertUserUtteranceViewForSuggestion:");
}

id objc_msgSend__insertUserUtteranceViewForText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertUserUtteranceViewForText:");
}

id objc_msgSend__instrumentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentation");
}

id objc_msgSend__instrumentationManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentationManager");
}

id objc_msgSend__instrumentationPresentationForPresentationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentationPresentationForPresentationOptions:");
}

id objc_msgSend__instrumentationResponseModeForMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentationResponseModeForMode:");
}

id objc_msgSend__interruptSuggestionsForSpeechRecognized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_interruptSuggestionsForSpeechRecognized:");
}

id objc_msgSend__invalidateConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateConnection");
}

id objc_msgSend__invalidateTrialManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateTrialManager");
}

id objc_msgSend__isAcousticIdAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAcousticIdAllowed");
}

id objc_msgSend__isAudioPlayerPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAudioPlayerPlaying");
}

id objc_msgSend__isCancelling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCancelling");
}

id objc_msgSend__isCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCompleted");
}

id objc_msgSend__isDeviceLowered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDeviceLowered");
}

id objc_msgSend__isDrillIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDrillIn");
}

id objc_msgSend__isGesturing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isGesturing");
}

id objc_msgSend__isIdleTimerEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isIdleTimerEnabled");
}

id objc_msgSend__isInAnimationBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isInAnimationBlock");
}

id objc_msgSend__isKeyboardLoweredAfterResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isKeyboardLoweredAfterResponse");
}

id objc_msgSend__isLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isLoaded");
}

id objc_msgSend__isReadingBulletinContentInCarPlayOutsideOfSiriSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isReadingBulletinContentInCarPlayOutsideOfSiriSession");
}

id objc_msgSend__isRequestActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRequestActive");
}

id objc_msgSend__isShowingCancelButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isShowingCancelButton");
}

id objc_msgSend__isSiriIdleAndQuiet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSiriIdleAndQuiet");
}

id objc_msgSend__isSpeechSynthesisSpeaking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSpeechSynthesisSpeaking");
}

id objc_msgSend__isStartRequestAceCommandSent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isStartRequestAceCommandSent");
}

id objc_msgSend__isToday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isToday");
}

id objc_msgSend__isUserUtteranceTapToEditInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isUserUtteranceTapToEditInProgress");
}

id objc_msgSend__isWaitingForStartRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWaitingForStartRequest");
}

id objc_msgSend__isWikiSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWikiSnippet");
}

id objc_msgSend__isWithinTheLastTimePeriodInDays_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWithinTheLastTimePeriodInDays:");
}

id objc_msgSend__isYesterday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isYesterday");
}

id objc_msgSend__keyboardFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyboardFrame");
}

id objc_msgSend__keyboardHasContentAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyboardHasContentAtPoint:");
}

id objc_msgSend__keyboardState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyboardState");
}

id objc_msgSend__language(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_language");
}

id objc_msgSend__languageMatchesConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_languageMatchesConversation:");
}

id objc_msgSend__laysOutContentRightToLeft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_laysOutContentRightToLeft");
}

id objc_msgSend__leadingHorizontalOffsetWithLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_leadingHorizontalOffsetWithLayoutMargins:");
}

id objc_msgSend__load(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_load");
}

id objc_msgSend__loadFromObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadFromObject:");
}

id objc_msgSend__loadFromPropertyListRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadFromPropertyListRepresentation:");
}

id objc_msgSend__localizedErrorString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedErrorString:");
}

id objc_msgSend__logAceObjectPresented_dialogPhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAceObjectPresented:dialogPhase:");
}

id objc_msgSend__logAceObjectSpoken_dialogPhase_speakableText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAceObjectSpoken:dialogPhase:speakableText:");
}

id objc_msgSend__logAceObjectSpoken_dialogPhase_speakableText_dialogIdentifierOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAceObjectSpoken:dialogPhase:speakableText:dialogIdentifierOverride:");
}

id objc_msgSend__logDummyAssistantUtteranceViewWithDialogIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logDummyAssistantUtteranceViewWithDialogIdentifier:");
}

id objc_msgSend__logModeComputationForAceCommand_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logModeComputationForAceCommand:mode:");
}

id objc_msgSend__logPatternExecutedEventForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logPatternExecutedEventForAddViewsCommand:");
}

id objc_msgSend__logRFSnippetRenderingContextWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logRFSnippetRenderingContextWithEvent:");
}

id objc_msgSend__logRevealSpeechCommandReceived_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logRevealSpeechCommandReceived:");
}

id objc_msgSend__mapSASRequestSourceToSuggestionsInputOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapSASRequestSourceToSuggestionsInputOrigin:");
}

id objc_msgSend__mapSiriTransitionState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapSiriTransitionState:");
}

id objc_msgSend__metricsContextForItemWithAceCommandId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metricsContextForItemWithAceCommandId:");
}

id objc_msgSend__mockSiriAssetState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mockSiriAssetState");
}

id objc_msgSend__modeForSiriSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modeForSiriSettings");
}

id objc_msgSend__nameLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nameLabelFont");
}

id objc_msgSend__navigationBarHasContentAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationBarHasContentAtPoint:");
}

id objc_msgSend__navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationController");
}

id objc_msgSend__navigationStackLayoutController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationStackLayoutController");
}

id objc_msgSend__notifyPromptedUserForInput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyPromptedUserForInput");
}

id objc_msgSend__notifySiriDebugAppWithMessage_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifySiriDebugAppWithMessage:completionHandler:");
}

id objc_msgSend__nudgeHeaderText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nudgeHeaderText");
}

id objc_msgSend__numberOfHelpDomains(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberOfHelpDomains");
}

id objc_msgSend__numberOfIntentEnabledApps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberOfIntentEnabledApps");
}

id objc_msgSend__numberOfSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberOfSections");
}

id objc_msgSend__openURL_bundleId_inPlace_conversationId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openURL:bundleId:inPlace:conversationId:completion:");
}

id objc_msgSend__padding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_padding");
}

id objc_msgSend__panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_panGestureRecognizer");
}

id objc_msgSend__pendingPreSynthesisTasks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pendingPreSynthesisTasks");
}

id objc_msgSend__performAppPunchOutCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAppPunchOutCommand:completion:");
}

id objc_msgSend__performAppPunchOutCommand_conversationItemIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAppPunchOutCommand:conversationItemIdentifier:completion:");
}

id objc_msgSend__performGenericAceCommand_turnIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performGenericAceCommand:turnIdentifier:completion:");
}

id objc_msgSend__performPopAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPopAnimations");
}

id objc_msgSend__performPushAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPushAnimations");
}

id objc_msgSend__performPushTransitionFromViewController_andView_toViewController_andView_inContainerView_recentViewControllers_transitionDuration_animated_transitionCompletion_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPushTransitionFromViewController:andView:toViewController:andView:inContainerView:recentViewControllers:transitionDuration:animated:transitionCompletion:completion:");
}

id objc_msgSend__performResultAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performResultAnimation:");
}

id objc_msgSend__performSayItCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performSayItCommand:");
}

id objc_msgSend__performScrollTest_iterations_delta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:");
}

id objc_msgSend__performWithoutRetargetingAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWithoutRetargetingAnimations:");
}

id objc_msgSend__phraseForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_phraseForIndexPath:");
}

id objc_msgSend__placeholderLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderLabel");
}

id objc_msgSend__placeholderRectForBounds_alignment_layingOutContentRightToLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderRectForBounds:alignment:layingOutContentRightToLeft:");
}

id objc_msgSend__placeholderView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderView");
}

id objc_msgSend__popToRootViewControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popToRootViewControllerIfNeeded");
}

id objc_msgSend__popTransitionContextGivenOriginalContext_revealedViewController_poppedViewController_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popTransitionContextGivenOriginalContext:revealedViewController:poppedViewController:duration:");
}

id objc_msgSend__postNotificationRequest_notificationCenter_destinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postNotificationRequest:notificationCenter:destinations:");
}

id objc_msgSend__preferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferences");
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:variant:");
}

id objc_msgSend__preferredHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredHeight");
}

id objc_msgSend__preferredTextAlignment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredTextAlignment");
}

id objc_msgSend__preferredTextAlignmentForEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredTextAlignmentForEditing:");
}

id objc_msgSend__prepContainerForFirstSnippetPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepContainerForFirstSnippetPresentation");
}

id objc_msgSend__prepareBackgroundEmptyPlatteredViewForTransitionInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareBackgroundEmptyPlatteredViewForTransitionInContext:");
}

id objc_msgSend__prepareFromPlatteredCardViewForTransitionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareFromPlatteredCardViewForTransitionWithContext:");
}

id objc_msgSend__prepareSiriEnabledAppList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareSiriEnabledAppList");
}

id objc_msgSend__prepareToPlatteredCardViewForTransitionInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareToPlatteredCardViewForTransitionInContext:");
}

id objc_msgSend__presentAuthenticationDialogWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAuthenticationDialogWithText:");
}

id objc_msgSend__presentLatencyPill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentLatencyPill");
}

id objc_msgSend__presentOrTransitionActiveSmartDialogView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentOrTransitionActiveSmartDialogView");
}

id objc_msgSend__presentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentation");
}

id objc_msgSend__presentationAllowsRecordingActionCompletedForSpeechSynthesisCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentationAllowsRecordingActionCompletedForSpeechSynthesisCommand:");
}

id objc_msgSend__presentationOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentationOptions");
}

id objc_msgSend__presentationSupportsConversationDidChangeWithTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentationSupportsConversationDidChangeWithTransaction:");
}

id objc_msgSend__presentationViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentationViewController");
}

id objc_msgSend__presentedConversationItemRevisionIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentedConversationItemRevisionIdentifiers");
}

id objc_msgSend__previousConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_previousConversation");
}

id objc_msgSend__previousSmartDialogExists(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_previousSmartDialogExists");
}

id objc_msgSend__privateDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_privateDelegate");
}

id objc_msgSend__processAddViewsCommand_forMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processAddViewsCommand:forMode:completion:");
}

id objc_msgSend__processUserUtterance_isCombined_displayedText_withScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processUserUtterance:isCombined:displayedText:withScore:");
}

id objc_msgSend__propertyListRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_propertyListRepresentation");
}

id objc_msgSend__punchoutMetricsAceCommandIdForItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_punchoutMetricsAceCommandIdForItemWithIdentifier:");
}

id objc_msgSend__pushQueuedNavigationContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushQueuedNavigationContentViewController");
}

id objc_msgSend__queuedNavigationContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_queuedNavigationContentViewController");
}

id objc_msgSend__readoutResultFromTTSResult_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readoutResultFromTTSResult:error:");
}

id objc_msgSend__readoutResultFromTitleResult_messageResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readoutResultFromTitleResult:messageResult:");
}

id objc_msgSend__realCloseButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_realCloseButton");
}

id objc_msgSend__recentViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recentViewControllers");
}

id objc_msgSend__recursivelyAnimateNextMultiPopKeyframe_outOfTotalKeyframes_transitionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recursivelyAnimateNextMultiPopKeyframe:outOfTotalKeyframes:transitionContext:");
}

id objc_msgSend__recursivelyNotifyVisibleViewControllers_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recursivelyNotifyVisibleViewControllers:withBlock:");
}

id objc_msgSend__redundantDUCIds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_redundantDUCIds");
}

id objc_msgSend__reflectionDialogHasBeenPlayed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reflectionDialogHasBeenPlayed");
}

id objc_msgSend__reflectionDialogHasBeenPlayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reflectionDialogHasBeenPlayed:");
}

id objc_msgSend__registerForAmbientPresentationTraitChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_registerForAmbientPresentationTraitChange");
}

id objc_msgSend__remoteViewControllerInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_remoteViewControllerInterface");
}

id objc_msgSend__removePreviousConversationFromStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removePreviousConversationFromStore");
}

id objc_msgSend__removeRedundantUtteranceViewsFromAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeRedundantUtteranceViewsFromAddViews:forMode:");
}

id objc_msgSend__removeSpeakableTextFromAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeSpeakableTextFromAddViews:forMode:");
}

id objc_msgSend__removeUtteranceViewsFromAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeUtteranceViewsFromAddViews:forMode:");
}

id objc_msgSend__renderResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renderResult");
}

id objc_msgSend__repeatablePhrases(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_repeatablePhrases");
}

id objc_msgSend__requestOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestOptions");
}

id objc_msgSend__requestPresentationBackgroundBlurVisible_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_requestPresentationBackgroundBlurVisible:forReason:");
}

id objc_msgSend__rescanBundles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rescanBundles");
}

id objc_msgSend__rescheduleIdleTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rescheduleIdleTimerIfNeeded");
}

id objc_msgSend__resetContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetContext");
}

id objc_msgSend__responseModeToMDModeConverter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_responseModeToMDModeConverter:");
}

id objc_msgSend__restartFaceAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restartFaceAttentionAwarenessClient:");
}

id objc_msgSend__restorePreviousConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restorePreviousConversation");
}

id objc_msgSend__resultViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resultViewController");
}

id objc_msgSend__resumesInterruptedAudioPlaybackForAttendingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resumesInterruptedAudioPlaybackForAttendingState:");
}

id objc_msgSend__rootSheetPresentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rootSheetPresentationController");
}

id objc_msgSend__runScrollRosterTestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runScrollRosterTestWithOptions:");
}

id objc_msgSend__safelyExtractSnippetPlatterViewControllerFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_safelyExtractSnippetPlatterViewControllerFromViewController:");
}

id objc_msgSend__sampleRate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sampleRate");
}

id objc_msgSend__save(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_save");
}

id objc_msgSend__saveConversationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveConversationWithCompletion:");
}

id objc_msgSend__sayItForDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sayItForDialog:");
}

id objc_msgSend__scaledSiriTapToEditViewLeading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaledSiriTapToEditViewLeading");
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaledValueForValue:");
}

id objc_msgSend__scheduleAssetCheckWithEarliestBeginDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleAssetCheckWithEarliestBeginDate:");
}

id objc_msgSend__scheduleAudioResumptionAfterDelayInSec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleAudioResumptionAfterDelayInSec:");
}

id objc_msgSend__scheduleAutoDismissalForTouchOutsideOfSiri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleAutoDismissalForTouchOutsideOfSiri");
}

id objc_msgSend__scheduleIdleTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleIdleTimer");
}

id objc_msgSend__scheduleInterruptedAudioResumingIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleInterruptedAudioResumingIfNeeded");
}

id objc_msgSend__scheduleUserTouchInteractionTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleUserTouchInteractionTimeout");
}

id objc_msgSend__searchAddViewsForSpokenHintsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchAddViewsForSpokenHintsView:");
}

id objc_msgSend__searchCallHistoryIntentForVoicemail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchCallHistoryIntentForVoicemail:");
}

id objc_msgSend__searchCallHistoryIntentResponseForCallRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchCallHistoryIntentResponseForCallRecords:");
}

id objc_msgSend__secondaryTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_secondaryTintColor");
}

id objc_msgSend__session(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_session");
}

id objc_msgSend__setAcousticIdAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAcousticIdAllowed:");
}

id objc_msgSend__setActiveAdditionalPlatterTranscriptItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActiveAdditionalPlatterTranscriptItems:");
}

id objc_msgSend__setActiveConversationTranscriptItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActiveConversationTranscriptItems:");
}

id objc_msgSend__setAlternativesTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAlternativesTableView:");
}

id objc_msgSend__setAudioPlayerIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAudioPlayerIsPlaying:");
}

id objc_msgSend__setAutoDismissalStrategy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAutoDismissalStrategy:");
}

id objc_msgSend__setBackgroundEmptyPlatterViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBackgroundEmptyPlatterViewOriginalFrame:");
}

id objc_msgSend__setBottomContentInsetComponents_animatedWithDuration_animationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBottomContentInsetComponents:animatedWithDuration:animationOptions:");
}

id objc_msgSend__setCancelling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCancelling:");
}

id objc_msgSend__setCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCompleted:");
}

id objc_msgSend__setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCompletion:");
}

id objc_msgSend__setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContinuousCornerRadius:");
}

id objc_msgSend__setCurrentAVRecordRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentAVRecordRoute:");
}

id objc_msgSend__setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDelegate:");
}

id objc_msgSend__setDetectionStarted_forType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDetectionStarted:forType:");
}

id objc_msgSend__setDeviceLowered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDeviceLowered:");
}

id objc_msgSend__setDictationReplacementAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDictationReplacementAction:");
}

id objc_msgSend__setDictationResult_withCorrectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDictationResult:withCorrectionIdentifier:");
}

id objc_msgSend__setDidUpdateShowTipCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDidUpdateShowTipCount:");
}

id objc_msgSend__setForcedUserInterfaceLayoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setForcedUserInterfaceLayoutDirection:");
}

id objc_msgSend__setFromPlatteredCardViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFromPlatteredCardViewOriginalFrame:");
}

id objc_msgSend__setGesturing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGesturing:");
}

id objc_msgSend__setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHyphenationFactor:");
}

id objc_msgSend__setIdleTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIdleTimer:");
}

id objc_msgSend__setIdleTimerEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIdleTimerEnabled:");
}

id objc_msgSend__setInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInputType:");
}

id objc_msgSend__setKeyboardLoweredAfterResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setKeyboardLoweredAfterResponse:");
}

id objc_msgSend__setKeyboardState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setKeyboardState:");
}

id objc_msgSend__setLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLanguageCode:");
}

id objc_msgSend__setListenAfterSpeakingForRepeatable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setListenAfterSpeakingForRepeatable:");
}

id objc_msgSend__setListenAfterSpeakingForRequestFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setListenAfterSpeakingForRequestFinished:");
}

id objc_msgSend__setLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLoaded:");
}

id objc_msgSend__setNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setNavigationController:");
}

id objc_msgSend__setNavigationStackLayoutController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setNavigationStackLayoutController:");
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setQueuedNavigationContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueuedNavigationContentViewController:");
}

id objc_msgSend__setReadingBulletinContentInCarPlayOutsideOfSiriSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setReadingBulletinContentInCarPlayOutsideOfSiriSession:");
}

id objc_msgSend__setRealCloseButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRealCloseButton:");
}

id objc_msgSend__setRecentViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRecentViewControllers:");
}

id objc_msgSend__setRequestActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequestActive:");
}

id objc_msgSend__setRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequestOptions:");
}

id objc_msgSend__setServerUtterances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setServerUtterances:");
}

id objc_msgSend__setShouldScaleDownBehindDescendantSheets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldScaleDownBehindDescendantSheets:");
}

id objc_msgSend__setShowKeyboardIfTextInputEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowKeyboardIfTextInputEnabled:");
}

id objc_msgSend__setShowKeyboardIfTextInputEnabled_minimized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowKeyboardIfTextInputEnabled:minimized:");
}

id objc_msgSend__setShowingCancelButton_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowingCancelButton:animated:");
}

id objc_msgSend__setSmartDialogCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSmartDialogCard:");
}

id objc_msgSend__setSmartDialogConversationSnippetViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSmartDialogConversationSnippetViews:");
}

id objc_msgSend__setSmartDialogLatencyViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSmartDialogLatencyViewModel:");
}

id objc_msgSend__setSmartDialogPlugin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSmartDialogPlugin:");
}

id objc_msgSend__setSmartDialogServerUtterances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSmartDialogServerUtterances:");
}

id objc_msgSend__setSmartDialogSpeechRecognitionHypothesis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSmartDialogSpeechRecognitionHypothesis:");
}

id objc_msgSend__setSpeechRecognitionHypothesis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSpeechRecognitionHypothesis:");
}

id objc_msgSend__setStartRequestAceCommandSent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setStartRequestAceCommandSent:");
}

id objc_msgSend__setTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTextView:");
}

id objc_msgSend__setUpConversationContinuerSuggestions_forRequestId_currentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpConversationContinuerSuggestions:forRequestId:currentMode:");
}

id objc_msgSend__setUpIcons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpIcons");
}

id objc_msgSend__setUserUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUserUtterance:");
}

id objc_msgSend__setUserUtteranceTapToEditInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUserUtteranceTapToEditInProgress:");
}

id objc_msgSend__setUtteranceToSpeakAfterClearScreenCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUtteranceToSpeakAfterClearScreenCommand:");
}

id objc_msgSend__setWaitingForStartRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWaitingForStartRequest:");
}

id objc_msgSend__setWasSiriIdleAndQuiet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWasSiriIdleAndQuiet:");
}

id objc_msgSend__setWindowInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWindowInterfaceOrientation:");
}

id objc_msgSend__setupAlternativesTableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupAlternativesTableView");
}

id objc_msgSend__setupBugReportingPresenterIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupBugReportingPresenterIfNecessary");
}

id objc_msgSend__setupConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupConstraints");
}

id objc_msgSend__setupTextView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupTextView");
}

id objc_msgSend__setupXPCListener(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupXPCListener");
}

id objc_msgSend__sharePatternIdFromAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sharePatternIdFromAddViewsCommand:");
}

id objc_msgSend__shouldInterruptSuggestionsForSpeechRecognized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldInterruptSuggestionsForSpeechRecognized:");
}

id objc_msgSend__shouldLowerKeyboardForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldLowerKeyboardForAddViewsCommand:");
}

id objc_msgSend__shouldMoveViewStackForTapToEdit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldMoveViewStackForTapToEdit");
}

id objc_msgSend__shouldRenderResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldRenderResult");
}

id objc_msgSend__shouldScaleDownBehindDescendantSheets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldScaleDownBehindDescendantSheets");
}

id objc_msgSend__shouldShowAlternativesTableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowAlternativesTableView");
}

id objc_msgSend__shouldShowCancelButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowCancelButton");
}

id objc_msgSend__shouldShowDownloadAssetsNotificationPrompt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowDownloadAssetsNotificationPrompt");
}

id objc_msgSend__shouldShowTip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowTip");
}

id objc_msgSend__shouldTransformLegacyAddViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldTransformLegacyAddViews");
}

id objc_msgSend__showFullScreenDimmingLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showFullScreenDimmingLayer");
}

id objc_msgSend__showHeaderText_subheaderText_largeSubheaderText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showHeaderText:subheaderText:largeSubheaderText:");
}

id objc_msgSend__showStarterSuggestionsIfTwoShot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showStarterSuggestionsIfTwoShot");
}

id objc_msgSend__showsCategoriesForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showsCategoriesForSection:");
}

id objc_msgSend__siriIsShowingPasscodeUnlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriIsShowingPasscodeUnlock");
}

id objc_msgSend__siriLocalizedTriggerPhrases(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriLocalizedTriggerPhrases");
}

id objc_msgSend__siriPresentation_speakTextForConversationItemIdentifier_delayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriPresentation:speakTextForConversationItemIdentifier:delayed:");
}

id objc_msgSend__siriPresentation_speakTextForConversationItemIdentifierDidBecomeReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriPresentation:speakTextForConversationItemIdentifierDidBecomeReady:");
}

id objc_msgSend__siriPresentationPluginBundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriPresentationPluginBundleWithIdentifier:");
}

id objc_msgSend__siriState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriState");
}

id objc_msgSend__siriUnavailableViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriUnavailableViewController");
}

id objc_msgSend__siriUnvailableNotificationRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriUnvailableNotificationRequest");
}

id objc_msgSend__smartDialogSnippetLayoutDidUpdateForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_smartDialogSnippetLayoutDidUpdateForView:");
}

id objc_msgSend__smartDialogSpeechRecognitionHypothesis(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_smartDialogSpeechRecognitionHypothesis");
}

id objc_msgSend__snippetFromTranscriptItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_snippetFromTranscriptItems");
}

id objc_msgSend__snippetViewControllerRequestsStatusViewHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_snippetViewControllerRequestsStatusViewHidden");
}

id objc_msgSend__speakEnqueuedSpokenSuggestion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speakEnqueuedSpokenSuggestion");
}

id objc_msgSend__speakText_audioData_ignoreMuteSwitch_identifier_sessionId_preferredVoice_language_gender_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_speakableUtteranceParser_analyticsContext_speakableContextInfo_preparation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gender:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speakableContextInfo:preparation:completion:");
}

id objc_msgSend__speakText_identifier_sessionId_preferredVoice_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_speakableUtteranceParser_analyticsContext_speakableContextInfo_preparation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speakText:identifier:sessionId:preferredVoice:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speakableContextInfo:preparation:completion:");
}

id objc_msgSend__speakableTextForDialog_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speakableTextForDialog:mode:");
}

id objc_msgSend__speechIdentifierForConversationItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speechIdentifierForConversationItem:");
}

id objc_msgSend__speechRecognitionHypothesis(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speechRecognitionHypothesis");
}

id objc_msgSend__splitVisualResponse_forVisualResponseSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_splitVisualResponse:forVisualResponseSnippet:");
}

id objc_msgSend__sr_playerForHighResolutionPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sr_playerForHighResolutionPlayback:");
}

id objc_msgSend__startButtonPressAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startButtonPressAwarenessClient:");
}

id objc_msgSend__startFaceAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startFaceAttentionAwarenessClient:");
}

id objc_msgSend__startListenAfterSpeaking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startListenAfterSpeaking");
}

id objc_msgSend__startListenAfterSpeakingRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startListenAfterSpeakingRequest");
}

id objc_msgSend__startNewConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startNewConversation");
}

id objc_msgSend__startRequestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRequestWithOptions:");
}

id objc_msgSend__startScrollingWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startScrollingWithOptions:");
}

id objc_msgSend__startTouchAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTouchAttentionAwarenessClient:");
}

id objc_msgSend__startUserAttentionControllerIfNeededForTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startUserAttentionControllerIfNeededForTypes:");
}

id objc_msgSend__startWakeGestureManagerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startWakeGestureManagerIfNeeded");
}

id objc_msgSend__stopButtonPressAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopButtonPressAttentionAwarenessClient:");
}

id objc_msgSend__stopFaceAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopFaceAttentionAwarenessClient:");
}

id objc_msgSend__stopTouchAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopTouchAttentionAwarenessClient:");
}

id objc_msgSend__stopUserAttentionControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopUserAttentionControllerIfNeeded");
}

id objc_msgSend__stopUserAttentionControllerIfNeededAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopUserAttentionControllerIfNeededAfterDelay:");
}

id objc_msgSend__stopWakeGestureManagerIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopWakeGestureManagerIfNeeded");
}

id objc_msgSend__streamingTextMaxYToTapToEditOriginDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_streamingTextMaxYToTapToEditOriginDistance");
}

id objc_msgSend__styledViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_styledViews");
}

id objc_msgSend__suggestionsButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_suggestionsButton");
}

id objc_msgSend__suggestionsWereShown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_suggestionsWereShown");
}

id objc_msgSend__supportsMitigationOnSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supportsMitigationOnSource:");
}

id objc_msgSend__suppressTTSForErrorsAndInterstitials(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_suppressTTSForErrorsAndInterstitials");
}

id objc_msgSend__synchronizedDrawingFence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synchronizedDrawingFence");
}

id objc_msgSend__synthesizePhoneticText_identifier_sessionId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synthesizePhoneticText:identifier:sessionId:completion:");
}

id objc_msgSend__synthesizeSpeechWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synthesizeSpeechWithText:");
}

id objc_msgSend__synthesizeText_identifier_sessionId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synthesizeText:identifier:sessionId:completion:");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:withConfiguration:");
}

id objc_msgSend__tagPhraseLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tagPhraseLabelFont");
}

id objc_msgSend__testDidReceiveAceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testDidReceiveAceCommand:completion:");
}

id objc_msgSend__textField(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textField");
}

id objc_msgSend__textRectForBounds_alignment_layingOutContentRightToLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textRectForBounds:alignment:layingOutContentRightToLeft:");
}

id objc_msgSend__textRequestView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textRequestView");
}

id objc_msgSend__textRequestViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textRequestViewController");
}

id objc_msgSend__textView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textView");
}

id objc_msgSend__titleForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleForSection:");
}

id objc_msgSend__toPlatteredCardViewGivenToViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_toPlatteredCardViewGivenToViewController:");
}

id objc_msgSend__touchAttentionAwarenessEventMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchAttentionAwarenessEventMask");
}

id objc_msgSend__trailingHorizontalOffsetWithLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trailingHorizontalOffsetWithLayoutMargins:");
}

id objc_msgSend__transformDialogAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformDialogAddViews:forMode:");
}

id objc_msgSend__transformLegacyAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformLegacyAddViews:forMode:");
}

id objc_msgSend__transitionDurationForOperation_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionDurationForOperation:context:");
}

id objc_msgSend__transitionWithContext_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionWithContext:animated:completion:");
}

id objc_msgSend__trimFinalSmartDialogs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trimFinalSmartDialogs");
}

id objc_msgSend__typeOfAddViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_typeOfAddViews:");
}

id objc_msgSend__uiPresentationIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uiPresentationIdentifier");
}

id objc_msgSend__updateActiveTranscriptItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateActiveTranscriptItems:");
}

id objc_msgSend__updateAdditionalSafeAreaInsetsForNavigationContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAdditionalSafeAreaInsetsForNavigationContentViewController:");
}

id objc_msgSend__updateAmbientAvailability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAmbientAvailability");
}

id objc_msgSend__updateBlurVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBlurVisibility");
}

id objc_msgSend__updateBorderVisualStyling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBorderVisualStyling");
}

id objc_msgSend__updateCancelButtonFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCancelButtonFont");
}

id objc_msgSend__updateCompactViewSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCompactViewSize");
}

id objc_msgSend__updateDeferral(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDeferral");
}

id objc_msgSend__updateKeyboardState_minimized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateKeyboardState:minimized:");
}

id objc_msgSend__updateKeyboardStateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateKeyboardStateWithError:");
}

id objc_msgSend__updateKeyboardStatusForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateKeyboardStatusForAddViewsCommand:");
}

id objc_msgSend__updateLanguageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLanguageCode");
}

id objc_msgSend__updateSAEViewSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSAEViewSize");
}

id objc_msgSend__updateStyleForAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStyleForAccessoryView:");
}

id objc_msgSend__updateStyleForClearButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStyleForClearButton");
}

id objc_msgSend__updateStyleForLeftView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStyleForLeftView");
}

id objc_msgSend__updateStyleForPlaceholderView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStyleForPlaceholderView");
}

id objc_msgSend__updateStyleForRightView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStyleForRightView");
}

id objc_msgSend__updateTextAlignmentForEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTextAlignmentForEditing:animated:");
}

id objc_msgSend__updateTextRequestViewVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTextRequestViewVisibility");
}

id objc_msgSend__updateViewWithChangeUtteranceIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewWithChangeUtteranceIfNeeded:");
}

id objc_msgSend__updateViewWithUserUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewWithUserUtterance:");
}

id objc_msgSend__updateVisualStyling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVisualStyling");
}

id objc_msgSend__userNotificationCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userNotificationCenter");
}

id objc_msgSend__userUtterance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userUtterance");
}

id objc_msgSend__usesDefaultNavigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_usesDefaultNavigationBar");
}

id objc_msgSend__usesEventDrivenIdleAndQuietUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_usesEventDrivenIdleAndQuietUpdates");
}

id objc_msgSend__utteranceToSpeakAfterClearScreenCommand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_utteranceToSpeakAfterClearScreenCommand");
}

id objc_msgSend__utteranceViewForDialog_mode_printedOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_utteranceViewForDialog:mode:printedOnly:");
}

id objc_msgSend__utterancesForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_utterancesForSection:");
}

id objc_msgSend__verifyAndSyncTrialExperiments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_verifyAndSyncTrialExperiments");
}

id objc_msgSend__viewModeFromPresentationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewModeFromPresentationOptions:");
}

id objc_msgSend__viewStackContainerController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewStackContainerController");
}

id objc_msgSend__voicemailPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_voicemailPlayer");
}

id objc_msgSend__wasSiriIdleAndQuiet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_wasSiriIdleAndQuiet");
}

id objc_msgSend__windowInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_windowInterfaceOrientation");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_ac_isBluetoothVehicle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ac_isBluetoothVehicle");
}

id objc_msgSend_ac_isEyesFree(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ac_isEyesFree");
}

id objc_msgSend_accessibilityContrast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityContrast");
}

id objc_msgSend_aceAudioData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceAudioData");
}

id objc_msgSend_aceCommandIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceCommandIdentifier");
}

id objc_msgSend_aceCommandWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceCommandWithIdentifier:");
}

id objc_msgSend_aceDialogPhaseValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceDialogPhaseValue");
}

id objc_msgSend_aceDisplayColorGamut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceDisplayColorGamut");
}

id objc_msgSend_aceDisplayColorScheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceDisplayColorScheme");
}

id objc_msgSend_aceDisplayContrast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceDisplayContrast");
}

id objc_msgSend_aceDynamicTypeSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceDynamicTypeSize");
}

id objc_msgSend_aceId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceId");
}

id objc_msgSend_aceObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceObject");
}

id objc_msgSend_aceObjectWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceObjectWithDictionary:");
}

id objc_msgSend_aceTextLegibilityWeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aceTextLegibilityWeight");
}

id objc_msgSend_acousticIDRequestDidFinishWithSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acousticIDRequestDidFinishWithSuccess:");
}

id objc_msgSend_acousticIDRequestDidStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acousticIDRequestDidStart");
}

id objc_msgSend_acousticIdEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acousticIdEnabled");
}

id objc_msgSend_actionWithIdentifier_title_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithIdentifier:title:options:");
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activationEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activationEvent");
}

id objc_msgSend_activeInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeInterfaceOrientation");
}

id objc_msgSend_activeKeyboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeKeyboard");
}

id objc_msgSend_activeRequestOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeRequestOptions");
}

id objc_msgSend_activeRequestOptionsDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeRequestOptionsDidChange");
}

id objc_msgSend_activeRequestOptionsForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeRequestOptionsForSiriPresentation:");
}

id objc_msgSend_activeSmartDialogView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeSmartDialogView");
}

id objc_msgSend_activeViewModelController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeViewModelController");
}

id objc_msgSend_addAdditionalCoordinationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAdditionalCoordinationController:");
}

id objc_msgSend_addAdditionalSpeechInterpretation_refId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAdditionalSpeechInterpretation:refId:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttribute:value:range:");
}

id objc_msgSend_addCacheableObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCacheableObject:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletion:");
}

id objc_msgSend_addConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraint:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addItemForMusicStartSessionCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItemForMusicStartSessionCommand:");
}

id objc_msgSend_addItemForPartialResultCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItemForPartialResultCommand:");
}

id objc_msgSend_addItemForSpeechRecognizedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItemForSpeechRecognizedCommand:");
}

id objc_msgSend_addItemsForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItemsForAddViewsCommand:");
}

id objc_msgSend_addItemsForShowHelpCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addItemsForShowHelpCommand:");
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNotificationRequest:withCompletionHandler:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addRecognitionUpdateWithPhrases_utterances_refId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecognitionUpdateWithPhrases:utterances:refId:");
}

id objc_msgSend_addSelectionResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSelectionResponse:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addViews");
}

id objc_msgSend_additionalContentViewPlatterCategories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalContentViewPlatterCategories");
}

id objc_msgSend_additionalContentViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalContentViews");
}

id objc_msgSend_additionalPlatterTranscriptItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalPlatterTranscriptItems");
}

id objc_msgSend_additionalSpeechInterpretationsForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalSpeechInterpretationsForRefId:");
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "address");
}

id objc_msgSend_af_bestTextInterpretation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_bestTextInterpretation");
}

id objc_msgSend_af_dialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_dialogPhase");
}

id objc_msgSend_af_userUtteranceValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_userUtteranceValue");
}

id objc_msgSend_af_userUtteranceValueWithRefId_sessionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "af_userUtteranceValueWithRefId:sessionId:");
}

id objc_msgSend_afui_assistantUIFrameworkBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_assistantUIFrameworkBundle");
}

id objc_msgSend_afui_getInstallAppPunchoutWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_getInstallAppPunchoutWithCompletion:");
}

id objc_msgSend_afui_hasContentEqualTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_hasContentEqualTo:");
}

id objc_msgSend_afui_isRemoteHeadsetActivation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_isRemoteHeadsetActivation");
}

id objc_msgSend_afui_isTVFollowUpHearstActivation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_isTVFollowUpHearstActivation");
}

id objc_msgSend_afui_populateStoreServicesData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_populateStoreServicesData:");
}

id objc_msgSend_afui_punchOutAppNotAvailableViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_punchOutAppNotAvailableViews");
}

id objc_msgSend_afui_punchOutFailureViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_punchOutFailureViews");
}

id objc_msgSend_alertWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertWithConfiguration:");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allPhrases(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allPhrases");
}

id objc_msgSend_allRecognitionStringsAndScores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allRecognitionStringsAndScores");
}

id objc_msgSend_allWindowsIncludingInternalWindows_onlyVisibleWindows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allWindowsIncludingInternalWindows:onlyVisibleWindows:");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowsCancellation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsCancellation");
}

id objc_msgSend_alternativePunchOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alternativePunchOut");
}

id objc_msgSend_alwaysObscureBackgroundContentWhenActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alwaysObscureBackgroundContentWhenActive");
}

id objc_msgSend_alwaysShowRecognizedSpeech(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alwaysShowRecognizedSpeech");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateAppearanceIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAppearanceIfNeeded");
}

id objc_msgSend_animateDrillInTransitionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateDrillInTransitionWithContext:");
}

id objc_msgSend_animateOutWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateOutWithCompletion:");
}

id objc_msgSend_animatePopToRootViewControllerWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatePopToRootViewControllerWithContext:");
}

id objc_msgSend_animateToDisplayWithDuration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateToDisplayWithDuration:completion:");
}

id objc_msgSend_animateToEditWithDuration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateToEditWithDuration:completion:");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend_animatedDisappearanceDidBeginWithDuration_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatedDisappearanceDidBeginWithDuration:reason:");
}

id objc_msgSend_animatingBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatingBackgroundView");
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animation");
}

id objc_msgSend_animationDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationDuration");
}

id objc_msgSend_animationOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationOptions");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_appAvailableInStorefront(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appAvailableInStorefront");
}

id objc_msgSend_appBundleId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appBundleId");
}

id objc_msgSend_appDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appDisplayName");
}

id objc_msgSend_appIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIcon");
}

id objc_msgSend_appId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appId");
}

id objc_msgSend_appPunchOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appPunchOut");
}

id objc_msgSend_appPunchOutButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appPunchOutButton");
}

id objc_msgSend_appRequiresPreflightWithAppBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appRequiresPreflightWithAppBundleId:");
}

id objc_msgSend_appWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appWindow");
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAttributedString:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendSeparatorToViewControllers_forNextViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendSeparatorToViewControllers:forNextViewController:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_applicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationBundleIdentifier");
}

id objc_msgSend_applicationWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationWithBundleIdentifier:");
}

id objc_msgSend_applyInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyInfo:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ascender");
}

id objc_msgSend_assetsDownloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetsDownloading");
}

id objc_msgSend_assetsNeedSpace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetsNeedSpace");
}

id objc_msgSend_assistantIsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantIsEnabled");
}

id objc_msgSend_assistantUILocalizedStringForKey_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assistantUILocalizedStringForKey:table:");
}

id objc_msgSend_attachmentURLForExpression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachmentURLForExpression:");
}

id objc_msgSend_attemptedToSaveConversation_withResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptedToSaveConversation:withResult:");
}

id objc_msgSend_attribute_atIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attribute:atIndex:effectiveRange:");
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeForKey:");
}

id objc_msgSend_attributedStringAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedStringAtIndex:");
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedText");
}

id objc_msgSend_audioBuffer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioBuffer");
}

id objc_msgSend_audioData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioData");
}

id objc_msgSend_audioDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioDuration");
}

id objc_msgSend_audioMessagePlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioMessagePlayer");
}

id objc_msgSend_audioPlayer_didFinishPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioPlayer:didFinishPlayback:");
}

id objc_msgSend_authenticateForSubject_relayingAuditToken_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateForSubject:relayingAuditToken:completion:");
}

id objc_msgSend_autoDismissControllerRequestsDismissal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoDismissControllerRequestsDismissal:");
}

id objc_msgSend_autoDismissalExtendedIdleTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoDismissalExtendedIdleTimeout");
}

id objc_msgSend_autoDismissalIdleTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoDismissalIdleTimeout");
}

id objc_msgSend_autoDismissalMaxAttentionSamplingTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoDismissalMaxAttentionSamplingTime");
}

id objc_msgSend_autoDismissalReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoDismissalReason");
}

id objc_msgSend_automaticallyUpdateView_withStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "automaticallyUpdateView:withStyle:");
}

id objc_msgSend_availabilityState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availabilityState");
}

id objc_msgSend_availableDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableDevices");
}

id objc_msgSend_backgroundBlurViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundBlurViewController");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_backgroundPlatteredCardView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundPlatteredCardView");
}

id objc_msgSend_backgroundPlatteredCardViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundPlatteredCardViewOriginalFrame");
}

id objc_msgSend_backingAceObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backingAceObject");
}

id objc_msgSend_backingCard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backingCard");
}

id objc_msgSend_backingStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backingStore");
}

id objc_msgSend_baselineOffsetFromBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baselineOffsetFromBottom");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_beginBackgroundTaskWithExpirationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginBackgroundTaskWithExpirationHandler:");
}

id objc_msgSend_beginEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEditing");
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginningOfDocument");
}

id objc_msgSend_behaviorWithDampingRatio_response_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "behaviorWithDampingRatio:response:");
}

id objc_msgSend_bestSupportedLanguageCodeForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestSupportedLanguageCodeForLanguageCode:");
}

id objc_msgSend_bestTextInterpretation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bestTextInterpretation");
}

id objc_msgSend_bluetoothPreferredCarAudioRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bluetoothPreferredCarAudioRoute");
}

id objc_msgSend_blurFromRootNavigationTransitionController_requestBackgroundBlurViewVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blurFromRootNavigationTransitionController:requestBackgroundBlurViewVisible:");
}

id objc_msgSend_blurFromRootNavigationTransitionController_requestHostBlurVisible_requestPresentationBlurVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blurFromRootNavigationTransitionController:requestHostBlurVisible:requestPresentationBlurVisible:");
}

id objc_msgSend_blurrableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blurrableView");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_BOOLValueForFactor_defaultValueIfNoFactorsFilePresent_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValueForFactor:defaultValueIfNoFactorsFilePresent:withCompletionHandler:");
}

id objc_msgSend_boostQueuedMessagesAndPerformOnQueueCompletion_timeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boostQueuedMessagesAndPerformOnQueueCompletion:timeout:");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_broadcastCardSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastCardSnippet:");
}

id objc_msgSend_broadcastVisualResponseSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcastVisualResponseSnippet:");
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildVersion");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleId");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bundleName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleName");
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithIdentifier:");
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithURL:");
}

id objc_msgSend_button(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "button");
}

id objc_msgSend_buttonDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonDelegate");
}

id objc_msgSend_buttonPressAwarenessClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonPressAwarenessClient");
}

id objc_msgSend_buttonWithImageTemplate_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithImageTemplate:style:");
}

id objc_msgSend_buttonWithMediumWeightFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithMediumWeightFont");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_cachedGuideSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedGuideSnippet");
}

id objc_msgSend_callCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callCount");
}

id objc_msgSend_callTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callTime");
}

id objc_msgSend_calls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calls");
}

id objc_msgSend_canBeRefreshed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBeRefreshed");
}

id objc_msgSend_canBecomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBecomeFirstResponder");
}

id objc_msgSend_canPresentSurveyForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPresentSurveyForContext:");
}

id objc_msgSend_canResignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canResignFirstResponder");
}

id objc_msgSend_canSaveConversations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSaveConversations");
}

id objc_msgSend_canUseServerTTS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canUseServerTTS");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelInteractiveTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelInteractiveTransition");
}

id objc_msgSend_cancelItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelItemWithIdentifier:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_cancelRequestForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRequestForSiriPresentation:");
}

id objc_msgSend_cancelRequestForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRequestForViewController:");
}

id objc_msgSend_cancelSpeechRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSpeechRequest");
}

id objc_msgSend_cancellationReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancellationReason");
}

id objc_msgSend_caption(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caption");
}

id objc_msgSend_cardData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardData");
}

id objc_msgSend_cardSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSections");
}

id objc_msgSend_cardSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSnippet");
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_categoryWithIdentifier_actions_intentIdentifiers_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "categoryWithIdentifier:actions:intentIdentifiers:options:");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "center");
}

id objc_msgSend_certSerial(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "certSerial");
}

id objc_msgSend_changeUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeUtterance:");
}

id objc_msgSend_checkAssetsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkAssetsWithCompletion:");
}

id objc_msgSend_chevronHasBeenShown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chevronHasBeenShown");
}

id objc_msgSend_chevronTrailingMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chevronTrailingMargin");
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllers");
}

id objc_msgSend_classifiedAsUnintended(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classifiedAsUnintended");
}

id objc_msgSend_classifyRequestAsUnintendedWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classifyRequestAsUnintendedWithContext:");
}

id objc_msgSend_cleanupLoadingTransitionIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupLoadingTransitionIfNeeded");
}

id objc_msgSend_cleanupResponseElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupResponseElements:");
}

id objc_msgSend_cleanupResultTransitionIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupResultTransitionIfNeeded");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearContext");
}

id objc_msgSend_clearCurrentSuggestions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCurrentSuggestions");
}

id objc_msgSend_closestPositionToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closestPositionToPoint:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_collapseSystemUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collapseSystemUI");
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionView");
}

id objc_msgSend_collectionViewContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionViewContentSize");
}

id objc_msgSend_collectionViewLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collectionViewLayout");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_combinedRank(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "combinedRank");
}

id objc_msgSend_combinedScore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "combinedScore");
}

id objc_msgSend_commands(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commands");
}

id objc_msgSend_compactResultView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactResultView");
}

id objc_msgSend_compactResultViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactResultViewController");
}

id objc_msgSend_compactViewController_handleStartLocalRequest_turnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:handleStartLocalRequest:turnIdentifier:");
}

id objc_msgSend_compactViewController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:requestsKeyboardWithCompletion:");
}

id objc_msgSend_compactViewController_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:setStatusViewHidden:");
}

id objc_msgSend_compactViewController_speakText_isPhonetic_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:speakText:isPhonetic:completion:");
}

id objc_msgSend_compactViewController_viewDidAppearForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:viewDidAppearForAceObject:");
}

id objc_msgSend_compactViewController_viewDidDisappearForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:viewDidDisappearForAceObject:");
}

id objc_msgSend_compactViewController_willBeginEditingOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:willBeginEditingOfType:");
}

id objc_msgSend_compactViewControllerCancelHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewControllerCancelHIDEventDefferal:");
}

id objc_msgSend_compactViewControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewControllerDidEndEditing:");
}

id objc_msgSend_compactViewControllerDidEndTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewControllerDidEndTextEditMenuInteraction:");
}

id objc_msgSend_compactViewControllerRequestsHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewControllerRequestsHIDEventDefferal:");
}

id objc_msgSend_compactViewControllerWillBeginTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewControllerWillBeginTextEditMenuInteraction:");
}

id objc_msgSend_compactViewHasContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewHasContent");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_completeTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeTransition:");
}

id objc_msgSend_completionDialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionDialogPhase");
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:toDate:options:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_computedModeForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computedModeForAceCommand:");
}

id objc_msgSend_computedModeForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computedModeForRefId:");
}

id objc_msgSend_confidenceScore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confidenceScore");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:scale:");
}

id objc_msgSend_configurationWithWeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithWeight:");
}

id objc_msgSend_configureAmbientAppIconForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureAmbientAppIconForBundleIdentifier:");
}

id objc_msgSend_configureForRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForRequestOptions:");
}

id objc_msgSend_configureOptionsForImminentRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureOptionsForImminentRequest:");
}

id objc_msgSend_configureReusableFooterView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureReusableFooterView:");
}

id objc_msgSend_configureSiriViewControllerWithCurrentTurn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureSiriViewControllerWithCurrentTurn:");
}

id objc_msgSend_configureSmartDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureSmartDialog:");
}

id objc_msgSend_confirmationOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confirmationOptions");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_connectedAccessories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectedAccessories");
}

id objc_msgSend_connectedDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectedDevices");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraints");
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintsWithVisualFormat:options:metrics:views:");
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contact");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerView");
}

id objc_msgSend_containsItemForAceViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsItemForAceViewWithIdentifier:");
}

id objc_msgSend_containsItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsItemWithIdentifier:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "content");
}

id objc_msgSend_contentContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentContainerView");
}

id objc_msgSend_contentDidUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentDidUpdate");
}

id objc_msgSend_contentDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentDidUpdate:");
}

id objc_msgSend_contentDidUpdateForAdditionalContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentDidUpdateForAdditionalContentView:");
}

id objc_msgSend_contentDiffersBetweenItems_andItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentDiffersBetweenItems:andItems:");
}

id objc_msgSend_contentPlatterScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentPlatterScrollView");
}

id objc_msgSend_contentPlatterView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentPlatterView");
}

id objc_msgSend_contentPlatterViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentPlatterViewController");
}

id objc_msgSend_contentPresentationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentPresentationState");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView");
}

id objc_msgSend_contentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController");
}

id objc_msgSend_contentViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllers");
}

id objc_msgSend_contentViewDidUpdateSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewDidUpdateSize");
}

id objc_msgSend_contentWidthForForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentWidthForForSiriPresentation:");
}

id objc_msgSend_contentWidthForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentWidthForSuggestionsViewController:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context");
}

id objc_msgSend_contextMenuIsPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextMenuIsPresented");
}

id objc_msgSend_contingency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contingency");
}

id objc_msgSend_conversation_didChangePresentationStateForItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didChangePresentationStateForItemsAtIndexPaths:");
}

id objc_msgSend_conversation_didChangeWithTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didChangeWithTransaction:");
}

id objc_msgSend_conversation_didInsertItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didInsertItemsAtIndexPaths:");
}

id objc_msgSend_conversation_didRemoveItemsWithIdentifiers_atIndexPaths_parentItemIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didRemoveItemsWithIdentifiers:atIndexPaths:parentItemIdentifiers:");
}

id objc_msgSend_conversation_didUpdateItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didUpdateItemsAtIndexPaths:");
}

id objc_msgSend_conversationDidChangeWithTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationDidChangeWithTransaction:");
}

id objc_msgSend_conversationIdentifiersForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationIdentifiersForSiriPresentation:");
}

id objc_msgSend_conversationItemIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationItemIdentifier");
}

id objc_msgSend_conversationListDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationListDidChange");
}

id objc_msgSend_conversationSnippetViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationSnippetViews");
}

id objc_msgSend_conversationTranscriptItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationTranscriptItems");
}

id objc_msgSend_conversationView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversationView");
}

id objc_msgSend_convertPoint_fromCoordinateSpace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:fromCoordinateSpace:");
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:fromView:");
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toView:");
}

id objc_msgSend_convertRect_fromCoordinateSpace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromCoordinateSpace:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromView:");
}

id objc_msgSend_coordinateSpace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateSpace");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_correctionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "correctionIdentifier");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countOfIntendedActivations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOfIntendedActivations");
}

id objc_msgSend_countOfTotalActivations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOfTotalActivations");
}

id objc_msgSend_countOfUnintendedActivations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOfUnintendedActivations");
}

id objc_msgSend_countOfUnintendedActivationsSinceLastIntendedActivation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countOfUnintendedActivationsSinceLastIntendedActivation");
}

id objc_msgSend_createDefaultMaterialBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDefaultMaterialBackgroundView");
}

id objc_msgSend_createEditableUtteranceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEditableUtteranceView");
}

id objc_msgSend_createSuggestionsViewProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSuggestionsViewProvider");
}

id objc_msgSend_createViewArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createViewArray");
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCalendar");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentIdiom");
}

id objc_msgSend_currentInstrumentationTurnContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentInstrumentationTurnContext");
}

id objc_msgSend_currentSnippetContainsFooterButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSnippetContainsFooterButtons");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "data");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource");
}

id objc_msgSend_dataType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataType");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateByAddingUnit_value_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingUnit:value:toDate:options:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "day");
}

id objc_msgSend_days(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "days");
}

id objc_msgSend_debugButtonIsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugButtonIsEnabled");
}

id objc_msgSend_defaultBrowserBundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBrowserBundleIdentifier");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultHeight");
}

id objc_msgSend_defaultInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultInsets");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultSynchedKnowledgeStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultSynchedKnowledgeStore");
}

id objc_msgSend_deferredRendering(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deferredRendering");
}

id objc_msgSend_delayDismissalAfterIdleFires_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delayDismissalAfterIdleFires:");
}

id objc_msgSend_delayDismissalMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delayDismissalMs");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:");
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithReuseIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:");
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descender");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_descriptionForAceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionForAceView:");
}

id objc_msgSend_descriptionForDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionForDialog:");
}

id objc_msgSend_descriptionForSayIt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionForSayIt:");
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectItemAtIndexPath:animated:");
}

id objc_msgSend_deviceIsPad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceIsPad");
}

id objc_msgSend_deviceSpecificKeyForDefaultKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSpecificKeyForDefaultKey:");
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceType");
}

id objc_msgSend_deviceWithDescriptor_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceWithDescriptor:error:");
}

id objc_msgSend_dialog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialog");
}

id objc_msgSend_dialogIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialogIdentifier");
}

id objc_msgSend_dialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialogPhase");
}

id objc_msgSend_dialogPhaseForAceDialogPhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialogPhaseForAceDialogPhase:");
}

id objc_msgSend_dialogPhaseForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialogPhaseForAceObject:");
}

id objc_msgSend_dialogStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialogStrings");
}

id objc_msgSend_dialogs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dialogs");
}

id objc_msgSend_dictationResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictationResult");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didBecomeActiveHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didBecomeActiveHandler");
}

id objc_msgSend_didBeginProcessingConversationItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didBeginProcessingConversationItems");
}

id objc_msgSend_didComputeMode_forAceCommand_generatedAceCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didComputeMode:forAceCommand:generatedAceCommands:");
}

id objc_msgSend_didDetectGestureEvent_inRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDetectGestureEvent:inRegion:");
}

id objc_msgSend_didDismissModalContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didDismissModalContent");
}

id objc_msgSend_didFinishSynthesisRequest_withInstrumentMetrics_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishSynthesisRequest:withInstrumentMetrics:error:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didOmitDialogFromPresenting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didOmitDialogFromPresenting");
}

id objc_msgSend_didPresentContentForCompactViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPresentContentForCompactViewController:");
}

id objc_msgSend_didPresentContentForSAEViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPresentContentForSAEViewController:");
}

id objc_msgSend_didPresentResponseFullyInApp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPresentResponseFullyInApp");
}

id objc_msgSend_didPresentSystemUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didPresentSystemUI");
}

id objc_msgSend_didReceiveAddViewsSignalForSuggestions_currentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveAddViewsSignalForSuggestions:currentMode:");
}

id objc_msgSend_didReceiveBugButtonLongPress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveBugButtonLongPress");
}

id objc_msgSend_didReceiveHelpAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveHelpAction");
}

id objc_msgSend_didReceiveOrbViewTapToCancelRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveOrbViewTapToCancelRequest");
}

id objc_msgSend_didReceivePaginateListCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceivePaginateListCommand:completion:");
}

id objc_msgSend_didReceiveReportBugAction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveReportBugAction");
}

id objc_msgSend_didReceiveRevealRecognizedSpeechCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveRevealRecognizedSpeechCommand:");
}

id objc_msgSend_didReceiveUpdateVisualResponseCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveUpdateVisualResponseCommand:");
}

id objc_msgSend_didRecognizeTwoShotSignalForConversationStarterSuggestions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didRecognizeTwoShotSignalForConversationStarterSuggestions");
}

id objc_msgSend_didRecognizeUserInputForConversationStarterSuggestions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didRecognizeUserInputForConversationStarterSuggestions");
}

id objc_msgSend_didRecognizeUserInputForConversationStarterSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didRecognizeUserInputForConversationStarterSuggestions:");
}

id objc_msgSend_didResignFirstResponderFromUtterancePresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didResignFirstResponderFromUtterancePresenter:");
}

id objc_msgSend_didResignFirstResponderFromUtteranceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didResignFirstResponderFromUtteranceView:");
}

id objc_msgSend_didResignFirstResponderFromUtteranceViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didResignFirstResponderFromUtteranceViewController:");
}

id objc_msgSend_didTapCloseButtonOnSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didTapCloseButtonOnSnippet");
}

id objc_msgSend_disableIdleTimerForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableIdleTimerForSiriPresentation:");
}

id objc_msgSend_disableTouchIDFaceIDIfNecessaryForDucID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableTouchIDFaceIDIfNecessaryForDucID:");
}

id objc_msgSend_disambiguationItemForListItem_disambiguationKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disambiguationItemForListItem:disambiguationKey:");
}

id objc_msgSend_discoverabilitySignal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discoverabilitySignal");
}

id objc_msgSend_dismissEditableUtteranceViewControllerAndShouldStartNewRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissEditableUtteranceViewControllerAndShouldStartNewRequest:completion:");
}

id objc_msgSend_dismissRecordingOverlayAndHideSnippets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissRecordingOverlayAndHideSnippets:");
}

id objc_msgSend_dismissSiriPresentation_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissSiriPresentation:withReason:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissalReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalReason");
}

id objc_msgSend_dismissalUserInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissalUserInfo");
}

id objc_msgSend_displayCornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayCornerRadius");
}

id objc_msgSend_displayGamut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayGamut");
}

id objc_msgSend_displayText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayText");
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distantPast");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_domainDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domainDisplayName");
}

id objc_msgSend_domainObjectForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domainObjectForIdentifier:");
}

id objc_msgSend_domainObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domainObjectForKey:");
}

id objc_msgSend_domainObjectStoreForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domainObjectStoreForSiriPresentation:");
}

id objc_msgSend_domainSnippets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domainSnippets");
}

id objc_msgSend_doubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleForKey:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_downloadSiriAssetsIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadSiriAssetsIfNeeded");
}

id objc_msgSend_dryRun(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dryRun");
}

id objc_msgSend_duckTTSVolumeTo_rampTime_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duckTTSVolumeTo:rampTime:completion:");
}

id objc_msgSend_duetSharedQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duetSharedQueue");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duration");
}

id objc_msgSend_edgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "edgeInsets");
}

id objc_msgSend_editableTextViewRequestKeyboardForTapToEditWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewRequestKeyboardForTapToEditWithCompletion:");
}

id objc_msgSend_editableTextViewTextDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewTextDidChange:");
}

id objc_msgSend_editableTextViewTextDidFinishCorrecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewTextDidFinishCorrecting:");
}

id objc_msgSend_editableTextViewTextDidReceiveReturnKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewTextDidReceiveReturnKey:");
}

id objc_msgSend_editableTextViewTextDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewTextDidResignFirstResponder:");
}

id objc_msgSend_editableTextViewTextShouldPreventCorrection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewTextShouldPreventCorrection:");
}

id objc_msgSend_editableTextViewTextWillBeginCorrecting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewTextWillBeginCorrecting:");
}

id objc_msgSend_editableUtterancePresenter_didFinishEditingWithText_selectionResults_shouldStartNewRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtterancePresenter:didFinishEditingWithText:selectionResults:shouldStartNewRequest:");
}

id objc_msgSend_editableUtterancePresenter_openURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtterancePresenter:openURL:");
}

id objc_msgSend_editableUtterancePresenter_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtterancePresenter:requestsKeyboardWithCompletion:");
}

id objc_msgSend_editableUtteranceView_didFinishEditingWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceView:didFinishEditingWithText:");
}

id objc_msgSend_editableUtteranceView_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceView:requestsKeyboardWithCompletion:");
}

id objc_msgSend_editableUtteranceViewController_alternativeSelectedAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceViewController:alternativeSelectedAtIndex:");
}

id objc_msgSend_editableUtteranceViewController_didFinishEditingWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceViewController:didFinishEditingWithText:");
}

id objc_msgSend_editableUtteranceViewController_openURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceViewController:openURL:");
}

id objc_msgSend_editableUtteranceViewController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceViewController:requestsKeyboardWithCompletion:");
}

id objc_msgSend_editableUtteranceViewHasContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceViewHasContent");
}

id objc_msgSend_effect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effect");
}

id objc_msgSend_effectForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectForAceObject:");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_effectiveBottomContentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBottomContentInset");
}

id objc_msgSend_effectiveContentFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveContentFrame");
}

id objc_msgSend_effectiveCoreLocationBundleForCompactViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveCoreLocationBundleForCompactViewController:");
}

id objc_msgSend_effectiveCoreLocationBundleForSAEViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveCoreLocationBundleForSAEViewController:");
}

id objc_msgSend_effectiveCoreLocationBundleForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveCoreLocationBundleForSiriPresentation:");
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emailAddress");
}

id objc_msgSend_emails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emails");
}

id objc_msgSend_emitFinalSpeechTranscriptionEventForAceObjectWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitFinalSpeechTranscriptionEventForAceObjectWithIdentifier:");
}

id objc_msgSend_emitInstrumentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitInstrumentation:");
}

id objc_msgSend_emitInstrumentation_atTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitInstrumentation:atTime:");
}

id objc_msgSend_emitPartialSpeechTranscriptionEventForAceObjectWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitPartialSpeechTranscriptionEventForAceObjectWithIdentifier:");
}

id objc_msgSend_emitPunchOutEventWithURL_appID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitPunchOutEventWithURL:appID:");
}

id objc_msgSend_emitRequestFailedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitRequestFailedWithError:");
}

id objc_msgSend_emitRevealSpeechTranscriptionEventForAceObjectWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitRevealSpeechTranscriptionEventForAceObjectWithIdentifier:");
}

id objc_msgSend_emitTriggerForCodePathID_requestID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitTriggerForCodePathID:requestID:completionHandler:");
}

id objc_msgSend_emitUIStateTransitionEventWithFromState_toState_withPresentationType_machAbsoluteTransitionTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUIStateTransitionEventWithFromState:toState:withPresentationType:machAbsoluteTransitionTime:");
}

id objc_msgSend_emitUIStateTransitionForSiriDismissalWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUIStateTransitionForSiriDismissalWithReason:");
}

id objc_msgSend_emitUUFRShownForAceObject_presentationType_dialogPhase_mode_viewRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUUFRShownForAceObject:presentationType:dialogPhase:mode:viewRegion:");
}

id objc_msgSend_emitUUFRSpokenForAceObject_presentationType_dialogPhase_mode_speakableText_dialogIdentifierOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUUFRSpokenForAceObject:presentationType:dialogPhase:mode:speakableText:dialogIdentifierOverride:");
}

id objc_msgSend_emitUserBargeInEventForBargedInTurn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUserBargeInEventForBargedInTurn");
}

id objc_msgSend_emitWithTurnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitWithTurnIdentifier:");
}

id objc_msgSend_enableCoreAnalyticEventKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableCoreAnalyticEventKey");
}

id objc_msgSend_enableIdleTimerForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableIdleTimerForSiriPresentation:");
}

id objc_msgSend_encodedClassName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedClassName");
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endBackgroundTask:");
}

id objc_msgSend_endEditingAndCorrect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditingAndCorrect:");
}

id objc_msgSend_endSiriSessionForViewController_withDismissalReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSiriSessionForViewController:withDismissalReason:");
}

id objc_msgSend_endTypeToSiriLatencyStateIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTypeToSiriLatencyStateIfNeeded");
}

id objc_msgSend_endingFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endingFrame");
}

id objc_msgSend_enqueueAudioData_identifier_sessionId_provisionally_eligibleAfterDuration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueAudioData:identifier:sessionId:provisionally:eligibleAfterDuration:completion:");
}

id objc_msgSend_enqueueObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueObject:");
}

id objc_msgSend_enqueuePhaticWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueuePhaticWithCompletion:");
}

id objc_msgSend_enqueueText_identifier_sessionId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueText:identifier:sessionId:completion:");
}

id objc_msgSend_enqueueText_identifier_sessionId_language_gender_isPhonetic_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_preparationIdentifier_completion_analyticsContext_speakableContextInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueText:identifier:sessionId:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:completion:analyticsContext:speakableContextInfo:");
}

id objc_msgSend_enqueueText_identifier_sessionId_preferredVoice_language_gender_isPhonetic_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_preparationIdentifier_completion_analyticsContext_speakableContextInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueText:identifier:sessionId:preferredVoice:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:completion:analyticsContext:speakableContextInfo:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_eventMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventMask");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_executeQuery_responseQueue_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeQuery:responseQueue:withCompletion:");
}

id objc_msgSend_expectedContentWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedContentWidth");
}

id objc_msgSend_extSessionGuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extSessionGuid");
}

id objc_msgSend_extSessionGuidCreatedTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extSessionGuidCreatedTimestamp");
}

id objc_msgSend_extraDisambiguationSubText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extraDisambiguationSubText");
}

id objc_msgSend_extraDisambiguationText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extraDisambiguationText");
}

id objc_msgSend_faceAttentionAwarenessClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceAttentionAwarenessClient");
}

id objc_msgSend_faceTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTime");
}

id objc_msgSend_faceTimeAudio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "faceTimeAudio");
}

id objc_msgSend_feedbackForm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedbackForm");
}

id objc_msgSend_feedbackFormForCurrentRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "feedbackFormForCurrentRequest");
}

id objc_msgSend_fetchAttendingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAttendingState:");
}

id objc_msgSend_fetchAutoCompletionSuggestionsViewsWithQuery_deviceLocked_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAutoCompletionSuggestionsViewsWithQuery:deviceLocked:completion:");
}

id objc_msgSend_fetchConversationContinuerViewsWithRequestId_currentMode_deviceLocked_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConversationContinuerViewsWithRequestId:currentMode:deviceLocked:completion:");
}

id objc_msgSend_fetchConversationStarterViewsWithDeviceLocked_isVoiceTrigger_invocationSource_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConversationStarterViewsWithDeviceLocked:isVoiceTrigger:invocationSource:completion:");
}

id objc_msgSend_fetchConversationStarterViewsWithDeviceLocked_isVoiceTrigger_invocationSource_isFirstInvocationSinceOSInstalled_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConversationStarterViewsWithDeviceLocked:isVoiceTrigger:invocationSource:isFirstInvocationSinceOSInstalled:completion:");
}

id objc_msgSend_fetchConversationWithIdentifier_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConversationWithIdentifier:completionBlock:");
}

id objc_msgSend_fetchTopSpokenSuggestionFrom_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchTopSpokenSuggestionFrom:completion:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_filterTranscriptItemsForRFPluginContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterTranscriptItemsForRFPluginContent:");
}

id objc_msgSend_filterWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterWithType:");
}

id objc_msgSend_filteredDisambiguationListItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredDisambiguationListItems:");
}

id objc_msgSend_finishInteractiveTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishInteractiveTransition");
}

id objc_msgSend_finishedIPTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedIPTest:");
}

id objc_msgSend_firstLineBaselineOffsetFromTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstLineBaselineOffsetFromTop");
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstName");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstSnippetMaterialAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstSnippetMaterialAnimation");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "font");
}

id objc_msgSend_fontDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptor");
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithSymbolicTraits:");
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_footerViewClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerViewClass");
}

id objc_msgSend_forceAudioSessionActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceAudioSessionActive");
}

id objc_msgSend_forceAudioSessionActiveWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceAudioSessionActiveWithCompletion:");
}

id objc_msgSend_forceAudioSessionInactive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceAudioSessionInactive");
}

id objc_msgSend_forceBioLockoutIfLockedForUser_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceBioLockoutIfLockedForUser:error:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_frameForAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForAnimation");
}

id objc_msgSend_frameForApplication_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForApplication:");
}

id objc_msgSend_fromPlatteredCardView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromPlatteredCardView");
}

id objc_msgSend_fromPlatteredCardViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromPlatteredCardViewOriginalFrame");
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullName");
}

id objc_msgSend_fullScreenEffectType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullScreenEffectType");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_gender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gender");
}

id objc_msgSend_getInitialSuggestionViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInitialSuggestionViews");
}

id objc_msgSend_getScreenshotImageForSiriPresentation_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getScreenshotImageForSiriPresentation:withCompletion:");
}

id objc_msgSend_getScreenshotWithReplyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getScreenshotWithReplyHandler:");
}

id objc_msgSend_getSiriAppBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSiriAppBundle");
}

id objc_msgSend_guideSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "guideSections");
}

id objc_msgSend_guideUtterances(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "guideUtterances");
}

id objc_msgSend_handleChangeUtteranceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleChangeUtteranceCommand:");
}

id objc_msgSend_handleFeedbackForm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFeedbackForm:");
}

id objc_msgSend_handleGetResponseAlternativesPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleGetResponseAlternativesPlayback:");
}

id objc_msgSend_handlePasscodeUnlockForSiriPresentation_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePasscodeUnlockForSiriPresentation:withCompletion:");
}

id objc_msgSend_handlePasscodeUnlockWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePasscodeUnlockWithCompletion:");
}

id objc_msgSend_handlePlayContentCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlayContentCommand:completion:");
}

id objc_msgSend_handlePlayTrailer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePlayTrailer:completion:");
}

id objc_msgSend_handlePreSynthesisCommandWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handlePreSynthesisCommandWithError:");
}

id objc_msgSend_handleRequestEndBehavior_isAttending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleRequestEndBehavior:isAttending:");
}

id objc_msgSend_handleSelectRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSelectRow:");
}

id objc_msgSend_handleShowSpeechAlternativesCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleShowSpeechAlternativesCommand:");
}

id objc_msgSend_handleSiriRequest_deliveryHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSiriRequest:deliveryHandler:completionHandler:");
}

id objc_msgSend_handleVoiceActivationRequestWithRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleVoiceActivationRequestWithRequestOptions:");
}

id objc_msgSend_hasContentAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasContentAtPoint:");
}

id objc_msgSend_hasContentForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasContentForState:");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasPresentedSiriAdvancedFeaturesAssetsDownloadNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPresentedSiriAdvancedFeaturesAssetsDownloadNotification");
}

id objc_msgSend_hasPresentedSiriAssetsNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPresentedSiriAssetsNotification");
}

id objc_msgSend_hasResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasResult");
}

id objc_msgSend_hasStarColumn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasStarColumn");
}

id objc_msgSend_hasSufficientDiskSpaceForDownload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSufficientDiskSpaceForDownload");
}

id objc_msgSend_hashedRouteId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashedRouteId");
}

id objc_msgSend_headerText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerText");
}

id objc_msgSend_headingText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headingText");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_heightOfCellWithName_tagPhrase_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightOfCellWithName:tagPhrase:width:");
}

id objc_msgSend_hideAcousticIDSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideAcousticIDSpinner");
}

id objc_msgSend_hideSnippets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideSnippets");
}

id objc_msgSend_hiresTrailerUri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hiresTrailerUri");
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hitTest:withEvent:");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "host");
}

id objc_msgSend_hostApplicationDidBecomeActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostApplicationDidBecomeActive");
}

id objc_msgSend_hostApplicationWillEnterForeground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostApplicationWillEnterForeground");
}

id objc_msgSend_hostApplicationWillResignActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostApplicationWillResignActive");
}

id objc_msgSend_hostDidBecomeActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostDidBecomeActive");
}

id objc_msgSend_hostWillResignActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostWillResignActive");
}

id objc_msgSend_hostingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hostingView");
}

id objc_msgSend_iconDisplayIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconDisplayIdentifier");
}

id objc_msgSend_iconNeedsProcessing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconNeedsProcessing");
}

id objc_msgSend_iconResourceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconResourceName");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_identifierOfItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierOfItemAtIndexPath:");
}

id objc_msgSend_idleTimeInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idleTimeInterval");
}

id objc_msgSend_idleTimerInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idleTimerInterval");
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:inBundle:");
}

id objc_msgSend_imageResource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageResource");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_imageWithHorizontallyFlippedOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithHorizontallyFlippedOrientation");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithTintColor_renderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:renderingMode:");
}

id objc_msgSend_inTextInputModeForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inTextInputModeForSuggestionsViewController:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectPassingTest:");
}

id objc_msgSend_indexPathForItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForItemWithIdentifier:");
}

id objc_msgSend_indexPathWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathWithIndex:");
}

id objc_msgSend_indexPathsForSelectedItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathsForSelectedItems");
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init");
}

id objc_msgSend_initWithActivationEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivationEvent:");
}

id objc_msgSend_initWithAppBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAppBundleIdentifier:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBase64EncodedString:options:");
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBundleIdentifier:");
}

id objc_msgSend_initWithCallRecordFilter_callRecordToCallBack_audioRoute_destinationType_contacts_callCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallRecordFilter:callRecordToCallBack:audioRoute:destinationType:contacts:callCapability:");
}

id objc_msgSend_initWithCancellationReason_contentPresentationState_dismissalReason_isDeviceUnlocked_siriState_requestSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCancellationReason:contentPresentationState:dismissalReason:isDeviceUnlocked:siriState:requestSource:");
}

id objc_msgSend_initWithCanonicalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCanonicalID:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCardData_responseViewId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCardData:responseViewId:");
}

id objc_msgSend_initWithCode_localizedFailureReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCode:localizedFailureReason:");
}

id objc_msgSend_initWithCode_userActivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCode:userActivity:");
}

id objc_msgSend_initWithCode_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCode:userInfo:");
}

id objc_msgSend_initWithCompactResultViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCompactResultViewController:");
}

id objc_msgSend_initWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCompletion:");
}

id objc_msgSend_initWithContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContainerView:");
}

id objc_msgSend_initWithContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentViewController:");
}

id objc_msgSend_initWithConversation_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConversation:delegate:");
}

id objc_msgSend_initWithCountOfIntended_countOfUnintended_countOfUnintendedActivationSinceLastIntended_days_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCountOfIntended:countOfUnintended:countOfUnintendedActivationSinceLastIntended:days:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDateCreated_recipient_callCapabilities_callTypes_unseen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDateCreated:recipient:callCapabilities:callTypes:unseen:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_andLockState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:andLockState:");
}

id objc_msgSend_initWithDelegate_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:dataSource:");
}

id objc_msgSend_initWithDelegate_systemUIDevice_systemApertureSupportedDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:systemUIDevice:systemApertureSupportedDevice:");
}

id objc_msgSend_initWithDeviceIdentifier_identifierType_deviceType_launchContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceIdentifier:identifierType:deviceType:launchContext:");
}

id objc_msgSend_initWithDeviceIsPad_navigationStackIsPopping_navigationStackSize_navigationBarHasContent_multiLevelViewHasContent_editableUtteranceViewHasContent_compactViewHasContent_siriViewControllerIsEditing_keyboardHasContent_contextMenuIsPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceIsPad:navigationStackIsPopping:navigationStackSize:navigationBarHasContent:multiLevelViewHasContent:editableUtteranceViewHasContent:compactViewHasContent:siriViewControllerIsEditing:keyboardHasContent:contextMenuIsPresented:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDismissalBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDismissalBlock:");
}

id objc_msgSend_initWithDismissalDelegate_dismissalStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDismissalDelegate:dismissalStyle:");
}

id objc_msgSend_initWithDuration_curve_beginningFrame_endingFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDuration:curve:beginningFrame:endingFrame:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithFacade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFacade:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_animation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:animation:");
}

id objc_msgSend_initWithFrame_backgroundBlurView_navigationView_resultView_conversationView_additionalContentViews_textRequestView_viewStackContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:backgroundBlurView:navigationView:resultView:conversationView:additionalContentViews:textRequestView:viewStackContainer:");
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:collectionViewLayout:");
}

id objc_msgSend_initWithFrame_dictationReplacementAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:dictationReplacementAction:");
}

id objc_msgSend_initWithFrame_platterCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:platterCategory:");
}

id objc_msgSend_initWithFrame_presentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:presentationStyle:");
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:style:");
}

id objc_msgSend_initWithFrame_userUtterance_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:userUtterance:delegate:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_bundleID_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:bundleID:context:");
}

id objc_msgSend_initWithIdentifier_bundleID_context_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:bundleID:context:userInfo:");
}

id objc_msgSend_initWithIdentifier_dateCreated_caller_callRecordType_callCapability_callDuration_unseen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:");
}

id objc_msgSend_initWithIdentifier_startDate_endDate_metadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:startDate:endDate:metadata:");
}

id objc_msgSend_initWithIdleTimeout_extendedIdleTimeout_deviceSupportsFaceDetection_deviceSupportsRaiseGestureDetection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdleTimeout:extendedIdleTimeout:deviceSupportsFaceDetection:deviceSupportsRaiseGestureDetection:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithInstrumentationManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInstrumentationManager:");
}

id objc_msgSend_initWithKeyboardNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyboardNotification:");
}

id objc_msgSend_initWithKnowledgeStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKnowledgeStore:");
}

id objc_msgSend_initWithLanguage_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguage:name:");
}

id objc_msgSend_initWithLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguageCode:");
}

id objc_msgSend_initWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocale:");
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:");
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMachServiceName:");
}

id objc_msgSend_initWithMessage_makeAppFrontmost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMessage:makeAppFrontmost:");
}

id objc_msgSend_initWithName_options_queue_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:options:queue:delegate:");
}

id objc_msgSend_initWithNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNamespace:");
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNibName:bundle:");
}

id objc_msgSend_initWithOriginalCommandId_category_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOriginalCommandId:category:duration:");
}

id objc_msgSend_initWithOriginalCommandId_category_eventInfo_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOriginalCommandId:category:eventInfo:duration:");
}

id objc_msgSend_initWithPackageName_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPackageName:inBundle:");
}

id objc_msgSend_initWithPatternId_patternType_responseViewId_responseMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPatternId:patternType:responseViewId:responseMode:");
}

id objc_msgSend_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:");
}

id objc_msgSend_initWithPlayContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayContent:");
}

id objc_msgSend_initWithPressDownHandler_pressUpHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPressDownHandler:pressUpHandler:");
}

id objc_msgSend_initWithPrimaryTransitionController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrimaryTransitionController:");
}

id objc_msgSend_initWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReason:");
}

id objc_msgSend_initWithRegularString_compactString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRegularString:compactString:");
}

id objc_msgSend_initWithRenderingEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRenderingEvent:");
}

id objc_msgSend_initWithRequestSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestSource:");
}

id objc_msgSend_initWithRequestSource_uiPresentationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestSource:uiPresentationIdentifier:");
}

id objc_msgSend_initWithResultView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResultView:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithSamplingInterval_attentionLossTimeout_supportedAttentionAwarenessEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSamplingInterval:attentionLossTimeout:supportedAttentionAwarenessEvents:");
}

id objc_msgSend_initWithSamplingInterval_attentionLossTimeout_supportedAttentionAwarenessEvents_deviceSupportsRaiseGestureDetection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSamplingInterval:attentionLossTimeout:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:");
}

id objc_msgSend_initWithSignalProviderFactory_supportedAttentionAwarenessEvents_deviceSupportsRaiseGestureDetection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSignalProviderFactory:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithString_correctionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:correctionIdentifier:");
}

id objc_msgSend_initWithSuggestionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuggestionView:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTaskDeliverer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTaskDeliverer:");
}

id objc_msgSend_initWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:");
}

id objc_msgSend_initWithText_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:identifier:");
}

id objc_msgSend_initWithText_visualEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:visualEffect:");
}

id objc_msgSend_initWithText_voice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithText:voice:");
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:");
}

id objc_msgSend_initWithTitle_font_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:font:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUserEditingDataManager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserEditingDataManager:delegate:");
}

id objc_msgSend_initWithUserUtterance_backingAceObject_isFinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserUtterance:backingAceObject:isFinal:");
}

id objc_msgSend_initWithUserUtterance_backingAceObjectRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserUtterance:backingAceObjectRefId:");
}

id objc_msgSend_initWithUserUtterance_delegate_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserUtterance:delegate:dataSource:");
}

id objc_msgSend_initWithUserUtterance_delegate_dataSource_preferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserUtterance:delegate:dataSource:preferences:");
}

id objc_msgSend_initWithValue_type_label_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValue:type:label:");
}

id objc_msgSend_initWithView_aceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithView:aceObject:");
}

id objc_msgSend_initialView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialView");
}

id objc_msgSend_input(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "input");
}

id objc_msgSend_inputAssistantItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputAssistantItem");
}

id objc_msgSend_inputType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputType");
}

id objc_msgSend_inputTypeDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputTypeDidChange");
}

id objc_msgSend_inputTypeDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputTypeDidChange:");
}

id objc_msgSend_insertItemsForAceViews_withDialogPhase_atIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertItemsForAceViews:withDialogPhase:atIndexPaths:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertObjects_atIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObjects:atIndexes:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_insertSubview_below_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:below:");
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:belowSubview:");
}

id objc_msgSend_insertedItemIndexPaths(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertedItemIndexPaths");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_intentDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intentDescription");
}

id objc_msgSend_intentEnabledAppSnippets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intentEnabledAppSnippets");
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceOrientation");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_internalGUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalGUID");
}

id objc_msgSend_internalModeOverride(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalModeOverride");
}

id objc_msgSend_internalSurveyEnabledKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalSurveyEnabledKey");
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intrinsicContentSize");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

id objc_msgSend_invalidateKeyboardWindowIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateKeyboardWindowIfNeeded");
}

id objc_msgSend_invalidateLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateLayout");
}

id objc_msgSend_invalidateWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateWithError:");
}

id objc_msgSend_invokeSiriDebugFeedbackBannerFor_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeSiriDebugFeedbackBannerFor:completionHandler:");
}

id objc_msgSend_isAMOSIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAMOSIdentifier");
}

id objc_msgSend_isAmbientPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAmbientPresented");
}

id objc_msgSend_isAppIcon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAppIcon");
}

id objc_msgSend_isAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAvailable");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isCancelledDialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCancelledDialogPhase");
}

id objc_msgSend_isConfirmationDialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConfirmationDialogPhase");
}

id objc_msgSend_isConfirmedDialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConfirmedDialogPhase");
}

id objc_msgSend_isConnectedToAudioAccessory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConnectedToAudioAccessory");
}

id objc_msgSend_isConnectedToCarPlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConnectedToCarPlay");
}

id objc_msgSend_isDateInToday_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDateInToday:");
}

id objc_msgSend_isDateInYesterday_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDateInYesterday:");
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDescendantOfView:");
}

id objc_msgSend_isDeviceSilentMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeviceSilentMode");
}

id objc_msgSend_isDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeviceUnlocked");
}

id objc_msgSend_isDismissalReasonEligibleForSurvey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDismissalReasonEligibleForSurvey:");
}

id objc_msgSend_isDisplayingResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDisplayingResponse");
}

id objc_msgSend_isEditable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditable");
}

id objc_msgSend_isEditedTextSameAsUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditedTextSameAsUtterance:");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabled");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isEqualToViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToViewModel:");
}

id objc_msgSend_isErrorDialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isErrorDialogPhase");
}

id objc_msgSend_isExpensive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExpensive");
}

id objc_msgSend_isExpository(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExpository");
}

id objc_msgSend_isEyesFree(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEyesFree");
}

id objc_msgSend_isFinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFinal");
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFirstResponder");
}

id objc_msgSend_isForAppleTV(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isForAppleTV");
}

id objc_msgSend_isForBluetoothCar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isForBluetoothCar");
}

id objc_msgSend_isForCarDND(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isForCarDND");
}

id objc_msgSend_isForEyesFree(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isForEyesFree");
}

id objc_msgSend_isForStark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isForStark");
}

id objc_msgSend_isFromDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFromDevice");
}

id objc_msgSend_isGuideHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGuideHidden");
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHidden");
}

id objc_msgSend_isHintItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHintItem");
}

id objc_msgSend_isInActiveCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInActiveCall");
}

id objc_msgSend_isInAmbient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInAmbient");
}

id objc_msgSend_isInHardwareKeyboardMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInHardwareKeyboardMode");
}

id objc_msgSend_isInitialBringUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInitialBringUp");
}

id objc_msgSend_isLastRow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLastRow");
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLoaded");
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLoading");
}

id objc_msgSend_isNLServerFallbackDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNLServerFallbackDisabled");
}

id objc_msgSend_isNavigationBarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNavigationBarHidden");
}

id objc_msgSend_isNetworkAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNetworkAvailable");
}

id objc_msgSend_isNew(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNew");
}

id objc_msgSend_isPersistentAcrossInvocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPersistentAcrossInvocations");
}

id objc_msgSend_isPresentingUIFromRemoteDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentingUIFromRemoteDevice");
}

id objc_msgSend_isProvidingFeedback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProvidingFeedback");
}

id objc_msgSend_isReflectionDialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReflectionDialogPhase");
}

id objc_msgSend_isRequestEmergencyCall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRequestEmergencyCall");
}

id objc_msgSend_isRequestMadeWithPhysicalDeviceInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRequestMadeWithPhysicalDeviceInteraction");
}

id objc_msgSend_isScreenOffBeforeRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScreenOffBeforeRequest");
}

id objc_msgSend_isSiriSafeForLockScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSiriSafeForLockScreen");
}

id objc_msgSend_isSpeechSynthesisErrorUserCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSpeechSynthesisErrorUserCancelled:");
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubclassOfClass:");
}

id objc_msgSend_isSuggestionSourceWithTextInput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSuggestionSourceWithTextInput");
}

id objc_msgSend_isSurveyEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSurveyEnabled");
}

id objc_msgSend_isSynchronizedWithServer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSynchronizedWithServer");
}

id objc_msgSend_isSynthesisQueueEmpty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSynthesisQueueEmpty:");
}

id objc_msgSend_isTemporary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTemporary");
}

id objc_msgSend_isTypeToSiriRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTypeToSiriRequest");
}

id objc_msgSend_isVideoPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVideoPlaying");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_isVirgin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVirgin");
}

id objc_msgSend_isVoiceOverTouchEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVoiceOverTouchEnabled");
}

id objc_msgSend_isVoiceTriggerRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVoiceTriggerRequest");
}

id objc_msgSend_isWakeGestureAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWakeGestureAvailable");
}

id objc_msgSend_isWiredMicOrBTHeadsetOrWx(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWiredMicOrBTHeadsetOrWx");
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "item");
}

id objc_msgSend_itemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemAtIndexPath:");
}

id objc_msgSend_itemType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemType");
}

id objc_msgSend_itemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemWithIdentifier:");
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "items");
}

id objc_msgSend_keyboardHasContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardHasContent");
}

id objc_msgSend_keyboardLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardLayoutGuide");
}

id objc_msgSend_keyline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyline");
}

id objc_msgSend_keysSortedByValueUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keysSortedByValueUsingComparator:");
}

id objc_msgSend_knowledgeStoreWithDirectReadOnlyAccess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "knowledgeStoreWithDirectReadOnlyAccess");
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "label");
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelColor");
}

id objc_msgSend_labelWithLightWeightRegularFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelWithLightWeightRegularFont");
}

id objc_msgSend_labelWithMediumWeightSubtextFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelWithMediumWeightSubtextFont");
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "language");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCode");
}

id objc_msgSend_lastItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastItem");
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastName");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastSurveyReportKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSurveyReportKey");
}

id objc_msgSend_latencyViewModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latencyViewModel");
}

id objc_msgSend_latitude(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "latitude");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layout");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutSubviews");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftView");
}

id objc_msgSend_leftViewRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftViewRectForBounds:");
}

id objc_msgSend_legibilityWeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "legibilityWeight");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lightTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightTextColor");
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineHeight");
}

id objc_msgSend_listItemToPickInAutodisambiguationForListItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listItemToPickInAutodisambiguationForListItems:");
}

id objc_msgSend_listenAfterSpeaking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenAfterSpeaking");
}

id objc_msgSend_listenAfterSpeakingBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenAfterSpeakingBehavior");
}

id objc_msgSend_listenAfterSpeakingDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenAfterSpeakingDisabled");
}

id objc_msgSend_load(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "load");
}

id objc_msgSend_localeForCompactViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeForCompactViewController:");
}

id objc_msgSend_localeForSAEViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeForSAEViewController:");
}

id objc_msgSend_localeForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeForSiriPresentation:");
}

id objc_msgSend_localizedCompactTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedCompactTriggerPhraseForLanguageCode:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedStringForLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForLabel:");
}

id objc_msgSend_localizedTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedTriggerPhraseForLanguageCode:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "location");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_lockStateForCompactViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockStateForCompactViewController:");
}

id objc_msgSend_lockStateForSAEViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockStateForSAEViewController:");
}

id objc_msgSend_logClientFeedbackPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logClientFeedbackPresented:");
}

id objc_msgSend_logClientFeedbackPresented_dialogIdentifierProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logClientFeedbackPresented:dialogIdentifierProvider:");
}

id objc_msgSend_logDisambiguationItemSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logDisambiguationItemSelected:");
}

id objc_msgSend_logDrillInInteractionForSnippetViewControllerIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logDrillInInteractionForSnippetViewControllerIfNecessary:");
}

id objc_msgSend_logEventWithType_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logEventWithType:context:");
}

id objc_msgSend_logPunchOutEventForSiriViewController_aceCommand_URL_appID_sashItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logPunchOutEventForSiriViewController:aceCommand:URL:appID:sashItem:");
}

id objc_msgSend_logPunchOutEventForSiriViewController_aceCommands_sashItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logPunchOutEventForSiriViewController:aceCommands:sashItem:");
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longValue");
}

id objc_msgSend_longitude(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longitude");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_lowresTrailerUri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowresTrailerUri");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainQueue");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeKeyAndVisible");
}

id objc_msgSend_makeKeyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeKeyWindow");
}

id objc_msgSend_makeRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeRequestWithCompletion:");
}

id objc_msgSend_makeTextViewVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeTextViewVisible:");
}

id objc_msgSend_materialViewWithRecipe_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "materialViewWithRecipe:configuration:");
}

id objc_msgSend_maxSizeForSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxSizeForSnippet");
}

id objc_msgSend_maximumHeightForResultView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumHeightForResultView:");
}

id objc_msgSend_meetsThresholdForPresenting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "meetsThresholdForPresenting");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "message");
}

id objc_msgSend_messageType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageType");
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadata");
}

id objc_msgSend_metricsContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsContext");
}

id objc_msgSend_middleName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "middleName");
}

id objc_msgSend_minimumAutoDismissalTimeInMs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumAutoDismissalTimeInMs");
}

id objc_msgSend_minimumDisplayDurationForAddViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumDisplayDurationForAddViews:");
}

id objc_msgSend_minimumTextFieldHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumTextFieldHeight");
}

id objc_msgSend_missed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "missed");
}

id objc_msgSend_mitoseWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mitoseWithDuration:");
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "model");
}

id objc_msgSend_modelData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modelData");
}

id objc_msgSend_movieClips(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "movieClips");
}

id objc_msgSend_multiLevelViewHasContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "multiLevelViewHasContent");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationBarHasContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBarHasContent");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationItem");
}

id objc_msgSend_navigationStackIsPopping(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationStackIsPopping");
}

id objc_msgSend_navigationStackSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationStackSize");
}

id objc_msgSend_nickName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nickName");
}

id objc_msgSend_notificationCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationCenter");
}

id objc_msgSend_notificationRequestWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notificationRequestWithUserInfo:");
}

id objc_msgSend_notifyClientStateManagerSpeakingEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyClientStateManagerSpeakingEnded:");
}

id objc_msgSend_notifyStateManagerSpeakingEnded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyStateManagerSpeakingEnded");
}

id objc_msgSend_notifyVoiceTriggeredSiriSessionCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyVoiceTriggeredSiriSessionCancelled");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "now");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_number(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "number");
}

id objc_msgSend_numberOfAlternativeUtterances(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfAlternativeUtterances");
}

id objc_msgSend_numberOfChildrenForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfChildrenForItemAtIndexPath:");
}

id objc_msgSend_numberOfChildrenForItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfChildrenForItemWithIdentifier:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_offsetFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "offsetFromPosition:toPosition:");
}

id objc_msgSend_ongoingASR(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ongoingASR");
}

id objc_msgSend_onlyContainsSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onlyContainsSnippet");
}

id objc_msgSend_openURL_bundleId_inPlace_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:bundleId:inPlace:completion:");
}

id objc_msgSend_operation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operation");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "options");
}

id objc_msgSend_originalRank(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalRank");
}

id objc_msgSend_originalRequestOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalRequestOptions");
}

id objc_msgSend_originalScore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalScore");
}

id objc_msgSend_outgoing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outgoing");
}

id objc_msgSend_output(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "output");
}

id objc_msgSend_outputDevices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputDevices");
}

id objc_msgSend_outputVoice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputVoice");
}

id objc_msgSend_paragraphStyleForCurrentScaleWithTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paragraphStyleForCurrentScaleWithTextAlignment:");
}

id objc_msgSend_parentOfItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentOfItemWithIdentifier:");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewController");
}

id objc_msgSend_parseStringWithFormat_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseStringWithFormat:error:");
}

id objc_msgSend_parseStringWithFormat_error_containsPrivacySensitiveContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseStringWithFormat:error:containsPrivacySensitiveContents:");
}

id objc_msgSend_parsedUtteranceFromText_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parsedUtteranceFromText:context:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExtension");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_patternId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patternId");
}

id objc_msgSend_patternType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "patternType");
}

id objc_msgSend_pendingAddViewsWithReflectionDialogPhaseWithRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingAddViewsWithReflectionDialogPhaseWithRefId:");
}

id objc_msgSend_percentComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "percentComplete");
}

id objc_msgSend_performAceCommand_turnIdentifier_machAbsoluteTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAceCommand:turnIdentifier:machAbsoluteTime:");
}

id objc_msgSend_performIntentEnabledAppAuthorizationCheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performIntentEnabledAppAuthorizationCheck");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_phones(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phones");
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placeholder");
}

id objc_msgSend_placesImageAboveText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placesImageAboveText");
}

id objc_msgSend_platterViewWithBlurEffectStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "platterViewWithBlurEffectStyle:");
}

id objc_msgSend_playTrailer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playTrailer");
}

id objc_msgSend_playWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playWithCompletionHandler:");
}

id objc_msgSend_playables(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playables");
}

id objc_msgSend_playbackCommand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackCommand");
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "player");
}

id objc_msgSend_pods(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pods");
}

id objc_msgSend_popObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popObjectsUsingBlock:");
}

id objc_msgSend_popToRootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewController");
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popTopObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popTopObject");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_portraitContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "portraitContentSize");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postPillMergeBounce(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPillMergeBounce");
}

id objc_msgSend_postSiriInternalUIDSurveyNotification_activationHistory_requestSource_dismissalReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSiriInternalUIDSurveyNotification:activationHistory:requestSource:dismissalReason:");
}

id objc_msgSend_postSiriUnavailableNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSiriUnavailableNotification:");
}

id objc_msgSend_postStorageLowNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postStorageLowNotification");
}

id objc_msgSend_preFollowupPulseWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preFollowupPulseWithDuration:");
}

id objc_msgSend_predicateForEventsWithStringValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForEventsWithStringValue:");
}

id objc_msgSend_preferredAsset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredAsset");
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSizeCategory");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredFontForTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:compatibleWithTraitCollection:");
}

id objc_msgSend_preferredSpeakableTextVoice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredSpeakableTextVoice");
}

id objc_msgSend_preferredStatusBarStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredStatusBarStyle");
}

id objc_msgSend_prefillWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefillWithText:");
}

id objc_msgSend_prefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefix");
}

id objc_msgSend_preloadPresentationBundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadPresentationBundleWithIdentifier:");
}

id objc_msgSend_preloadProviders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadProviders");
}

id objc_msgSend_premptivelyResumeMedia(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "premptivelyResumeMedia");
}

id objc_msgSend_prepareAddViewsCommandForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareAddViewsCommandForConversation:");
}

id objc_msgSend_prepareForDrillInAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDrillInAnimation");
}

id objc_msgSend_prepareForDrillinAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDrillinAnimation");
}

id objc_msgSend_prepareForUpdatesToServerUtterance_conversationSnippetViews_speechRecognitionHypothesis_latencyViewModel_updateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForUpdatesToServerUtterance:conversationSnippetViews:speechRecognitionHypothesis:latencyViewModel:updateBlock:");
}

id objc_msgSend_prepareForUpdatesWithDiff_updateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForUpdatesWithDiff:updateBlock:");
}

id objc_msgSend_prepareUpdateViewsCommandForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareUpdateViewsCommandForConversation:");
}

id objc_msgSend_presentPhotoPicker_withSearchString_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPhotoPicker:withSearchString:completion:");
}

id objc_msgSend_presentSurveyNotificationWithContext_activationHistory_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentSurveyNotificationWithContext:activationHistory:withCompletion:");
}

id objc_msgSend_presentUtteranceViewControllerFromViewController_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentUtteranceViewControllerFromViewController:animateAlongsideTransition:completion:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentViewController_fromViewController_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:fromViewController:animateAlongsideTransition:completion:");
}

id objc_msgSend_presentWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentWithContext:");
}

id objc_msgSend_presentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentation");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationController");
}

id objc_msgSend_presentationDidPresentKeyboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationDidPresentKeyboard");
}

id objc_msgSend_presentationDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationDomain");
}

id objc_msgSend_presentationIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationIdentifier");
}

id objc_msgSend_presentationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationState");
}

id objc_msgSend_presentationStateChangedItemIndexPaths(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationStateChangedItemIndexPaths");
}

id objc_msgSend_presentationStateUpdatedFromPresentationState_toPresentationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationStateUpdatedFromPresentationState:toPresentationState:");
}

id objc_msgSend_presentationWithIdentifier_delegate_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationWithIdentifier:delegate:dataSource:");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presentingSystemUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingSystemUI");
}

id objc_msgSend_previousConversationDidLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousConversationDidLoad:");
}

id objc_msgSend_previousSiriRequestErrorTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousSiriRequestErrorTimestamp");
}

id objc_msgSend_prewarmIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmIfNeeded");
}

id objc_msgSend_principalClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "principalClass");
}

id objc_msgSend_printedOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "printedOnly");
}

id objc_msgSend_processData_usingProcedure_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processData:usingProcedure:completion:");
}

id objc_msgSend_processDelayedItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processDelayedItem:");
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processIdentifier");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processInfo");
}

id objc_msgSend_processSessionEvent_isSpeechSynthesisSpeaking_machAbsoluteTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processSessionEvent:isSpeechSynthesisSpeaking:machAbsoluteTime:");
}

id objc_msgSend_promptEntryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promptEntryView");
}

id objc_msgSend_promptedUserForInput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promptedUserForInput");
}

id objc_msgSend_propertyList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyList");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_pulseHelpButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pulseHelpButton");
}

id objc_msgSend_punchOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punchOut");
}

id objc_msgSend_punchOutName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punchOutName");
}

id objc_msgSend_punchOutUri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punchOutUri");
}

id objc_msgSend_pushObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushObject:");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_queryStreamForCountOfEventsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryStreamForCountOfEventsWithCompletion:");
}

id objc_msgSend_rangeEnclosingPosition_withGranularity_inDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeEnclosingPosition:withGranularity:inDirection:");
}

id objc_msgSend_rangeListOfDifferingTextFromTargetTokenList_comparedToBaseTokenList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeListOfDifferingTextFromTargetTokenList:comparedToBaseTokenList:");
}

id objc_msgSend_rangeListOfDifferingTextFromUtteranceAtIndex_comparedToBaseUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeValue");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reason");
}

id objc_msgSend_recognition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recognition");
}

id objc_msgSend_recordActionCompletedForAceCommand_success_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordActionCompletedForAceCommand:success:");
}

id objc_msgSend_recordActionStartedForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordActionStartedForAceCommand:");
}

id objc_msgSend_recordActionStoppedForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordActionStoppedForAceCommand:");
}

id objc_msgSend_recordDismissalEventWithContext_markAsUnintended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordDismissalEventWithContext:markAsUnintended:");
}

id objc_msgSend_recordDismissalMetricWithContext_inputType_previousLongPressBehavior_longPressBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordDismissalMetricWithContext:inputType:previousLongPressBehavior:longPressBehavior:");
}

id objc_msgSend_recordEvent_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordEvent:completionHandler:");
}

id objc_msgSend_recordMitigationEndMetricWithContext_activationHistory_numberOfDaysSinceLastChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordMitigationEndMetricWithContext:activationHistory:numberOfDaysSinceLastChange:");
}

id objc_msgSend_recordMitigationStartMetricWithContext_activationHistory_numberOfDaysSinceLastChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordMitigationStartMetricWithContext:activationHistory:numberOfDaysSinceLastChange:");
}

id objc_msgSend_recordUIMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordUIMetrics:");
}

id objc_msgSend_recursive_setSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recursive_setSemanticContentAttribute:");
}

id objc_msgSend_reduceOrbOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reduceOrbOpacity:");
}

id objc_msgSend_ref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ref");
}

id objc_msgSend_refId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refId");
}

id objc_msgSend_refreshUnderstandingOnDeviceAssetsAvailableAsync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshUnderstandingOnDeviceAssetsAvailableAsync");
}

id objc_msgSend_registerAceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerAceCommand:completion:");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellWithReuseIdentifier:");
}

id objc_msgSend_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forSupplementaryViewOfKind:withReuseIdentifier:");
}

id objc_msgSend_registerForTaskWithIdentifier_usingQueue_launchHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTaskWithIdentifier:usingQueue:launchHandler:");
}

id objc_msgSend_registerForTraitChanges_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTraitChanges:withHandler:");
}

id objc_msgSend_registerProvider_forNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerProvider:forNamespace:");
}

id objc_msgSend_regularString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularString");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadData");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeAlternativeFeatureViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAlternativeFeatureViews:");
}

id objc_msgSend_removeConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraints:");
}

id objc_msgSend_removeConversationWithIdentifier_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConversationWithIdentifier:completionBlock:");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromParentViewController");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGestureRecognizer:");
}

id objc_msgSend_removeItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemsAtIndexPaths:");
}

id objc_msgSend_removeItemsFollowingItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemsFollowingItemAtIndexPath:");
}

id objc_msgSend_removeItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemsWithIdentifiers:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLastObject");
}

id objc_msgSend_removeLightEffectsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLightEffectsView");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeResponseElementsIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeResponseElementsIfNeeded:");
}

id objc_msgSend_removeSpeechAlternativeViewAndUpdateUtteranceTextIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpeechAlternativeViewAndUpdateUtteranceTextIfNecessary");
}

id objc_msgSend_removeSpeechAlternatives(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSpeechAlternatives");
}

id objc_msgSend_removeSuggestions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSuggestions");
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:action:forControlEvents:");
}

id objc_msgSend_removeTrait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTrait:");
}

id objc_msgSend_removeTransientItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTransientItems");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replyAceCommand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replyAceCommand");
}

id objc_msgSend_requestBackgroundBlurVisible_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestBackgroundBlurVisible:forReason:");
}

id objc_msgSend_requestContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestContext");
}

id objc_msgSend_requestDidPresentViewForErrorCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDidPresentViewForErrorCommand:");
}

id objc_msgSend_requestDidPresentViewForUICommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestDidPresentViewForUICommand:");
}

id objc_msgSend_requestEndBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestEndBehavior");
}

id objc_msgSend_requestHandlingStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestHandlingStatus");
}

id objc_msgSend_requestHostBlurVisible_reason_fence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestHostBlurVisible:reason:fence:");
}

id objc_msgSend_requestInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestInfo");
}

id objc_msgSend_requestMitigationStatusBasedOnRequestClassification_withRequestSource_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestMitigationStatusBasedOnRequestClassification:withRequestSource:withCompletion:");
}

id objc_msgSend_requestOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestOptions");
}

id objc_msgSend_requestSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSource");
}

id objc_msgSend_requestSystemApertureCollapse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestSystemApertureCollapse");
}

id objc_msgSend_requestWithIdentifier_content_trigger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithIdentifier:content:trigger:");
}

id objc_msgSend_requireFinalSpeechHypothesisBeforeAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requireFinalSpeechHypothesisBeforeAppearance");
}

id objc_msgSend_resetContextTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetContextTypes:");
}

id objc_msgSend_resetErrorState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetErrorState");
}

id objc_msgSend_resetViewsAndClearASR_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetViewsAndClearASR:");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignFirstResponder");
}

id objc_msgSend_resignKeyboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignKeyboard");
}

id objc_msgSend_resourceUrl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceUrl");
}

id objc_msgSend_responseMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseMode");
}

id objc_msgSend_responseName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseName");
}

id objc_msgSend_responseType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseType");
}

id objc_msgSend_responseViewId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseViewId");
}

id objc_msgSend_restoreOriginalEditTextContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreOriginalEditTextContents:");
}

id objc_msgSend_resultContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultContentView");
}

id objc_msgSend_resultDidChangeForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultDidChangeForAceCommand:");
}

id objc_msgSend_resultDidChangeForAceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultDidChangeForAceCommand:completion:");
}

id objc_msgSend_resultForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultForAceCommand:");
}

id objc_msgSend_resultTranscriptItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultTranscriptItems");
}

id objc_msgSend_resultView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultView");
}

id objc_msgSend_resultViewContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultViewContentSize");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resume");
}

id objc_msgSend_resumeInterruptedAudioPlaybackIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeInterruptedAudioPlaybackIfNeeded");
}

id objc_msgSend_resumeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeWithError:");
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseIdentifier");
}

id objc_msgSend_revealUserUtterance_backingAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealUserUtterance:backingAceObject:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseObjectEnumerator");
}

id objc_msgSend_revisionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revisionIdentifier");
}

id objc_msgSend_rightView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightView");
}

id objc_msgSend_rightViewRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightViewRectForBounds:");
}

id objc_msgSend_rollbackClearContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollbackClearContext");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_runPPTWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runPPTWithOptions:");
}

id objc_msgSend_runSiriKitExecutorCommandWithContext_payload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runSiriKitExecutorCommandWithContext:payload:");
}

id objc_msgSend_saeViewController_handleStartLocalRequest_turnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:handleStartLocalRequest:turnIdentifier:");
}

id objc_msgSend_saeViewController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:requestsKeyboardWithCompletion:");
}

id objc_msgSend_saeViewController_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:setStatusViewHidden:");
}

id objc_msgSend_saeViewController_speakText_isPhonetic_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:speakText:isPhonetic:completion:");
}

id objc_msgSend_saeViewController_viewDidAppearForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:viewDidAppearForAceObject:");
}

id objc_msgSend_saeViewController_viewDidDisappearForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:viewDidDisappearForAceObject:");
}

id objc_msgSend_saeViewController_willBeginEditingOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:willBeginEditingOfType:");
}

id objc_msgSend_saeViewControllerCancelHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewControllerCancelHIDEventDefferal:");
}

id objc_msgSend_saeViewControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewControllerDidEndEditing:");
}

id objc_msgSend_saeViewControllerRequestsHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewControllerRequestsHIDEventDefferal:");
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaInsets");
}

id objc_msgSend_sash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sash");
}

id objc_msgSend_sashItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sashItem");
}

id objc_msgSend_saveConversation_withIdentifier_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveConversation:withIdentifier:completionBlock:");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_scaleFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleFactor");
}

id objc_msgSend_scheduleAutoDismissalForLongIdling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduleAutoDismissalForLongIdling:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheme");
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screen");
}

id objc_msgSend_searchUIBackgroundColorUpdateSuccessful_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchUIBackgroundColorUpdateSuccessful:");
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryLabelColor");
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "section");
}

id objc_msgSend_sectionName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionName");
}

id objc_msgSend_selectedBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedBackgroundView");
}

id objc_msgSend_selectionResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionResponse");
}

id objc_msgSend_selectionResultsForAlternateTextAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionResultsForAlternateTextAtIndex:");
}

id objc_msgSend_selectionResultsForEditedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionResultsForEditedText:");
}

id objc_msgSend_selectionText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionText");
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semanticContentAttribute");
}

id objc_msgSend_sendBTCarInvocationContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendBTCarInvocationContext");
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendEvent:");
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSubviewToBack:");
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorColor");
}

id objc_msgSend_serverUtterances(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverUtterances");
}

id objc_msgSend_serviceBulletinWithIdentifier_replyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceBulletinWithIdentifier:replyHandler:");
}

id objc_msgSend_serviceCancelHIDEventDefferal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceCancelHIDEventDefferal");
}

id objc_msgSend_serviceDidDetectMicButtonLongPressBegan(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidDetectMicButtonLongPressBegan");
}

id objc_msgSend_serviceDidDetectMicButtonLongPressEnded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidDetectMicButtonLongPressEnded");
}

id objc_msgSend_serviceDidDetectMicButtonTap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidDetectMicButtonTap");
}

id objc_msgSend_serviceDidDismissBugReporter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidDismissBugReporter");
}

id objc_msgSend_serviceDidDismissViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidDismissViewControllerWithStatusBarStyle:");
}

id objc_msgSend_serviceDidEndEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidEndEditing");
}

id objc_msgSend_serviceDidEnterUITrackingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidEnterUITrackingMode");
}

id objc_msgSend_serviceDidExitUITrackingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidExitUITrackingMode");
}

id objc_msgSend_serviceDidPresentBugReporter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidPresentBugReporter");
}

id objc_msgSend_serviceDidPresentConversationFromBreadcrumb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidPresentConversationFromBreadcrumb");
}

id objc_msgSend_serviceDidPresentUserInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidPresentUserInterface");
}

id objc_msgSend_serviceDidPresentViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidPresentViewControllerWithStatusBarStyle:");
}

id objc_msgSend_serviceDidRequestCurrentTextInput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidRequestCurrentTextInput:");
}

id objc_msgSend_serviceDidRequestKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidRequestKeyboard:");
}

id objc_msgSend_serviceDidRequestKeyboard_minimized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidRequestKeyboard:minimized:");
}

id objc_msgSend_serviceDidResetTextInput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceDidResetTextInput");
}

id objc_msgSend_servicePresentationDidChangePeekMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "servicePresentationDidChangePeekMode:");
}

id objc_msgSend_servicePresentationDidChangeVisualState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "servicePresentationDidChangeVisualState:");
}

id objc_msgSend_servicePresentedIntentWithBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "servicePresentedIntentWithBundleId:");
}

id objc_msgSend_serviceRequestsDismissalWithUserInfo_withReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceRequestsDismissalWithUserInfo:withReason:");
}

id objc_msgSend_serviceRequestsHIDEventDefferal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceRequestsHIDEventDefferal");
}

id objc_msgSend_serviceStartGuidedAccess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceStartGuidedAccess");
}

id objc_msgSend_serviceStartRequestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceStartRequestWithOptions:");
}

id objc_msgSend_serviceViewControllerRequestsDismissalWithDismissalReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceViewControllerRequestsDismissalWithDismissalReason:completion:");
}

id objc_msgSend_serviceViewControllerRequestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceViewControllerRequestsKeyboardWithCompletion:");
}

id objc_msgSend_serviceViewControllerRequestsPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceViewControllerRequestsPresentation:");
}

id objc_msgSend_serviceViewControllerWillChangeKeyboardVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceViewControllerWillChangeKeyboardVisibility:");
}

id objc_msgSend_serviceWillBeginEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceWillBeginEditing");
}

id objc_msgSend_serviceWillDismissViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceWillDismissViewControllerWithStatusBarStyle:");
}

id objc_msgSend_serviceWillPresentViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serviceWillPresentViewControllerWithStatusBarStyle:");
}

id objc_msgSend_sessionId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionId");
}

id objc_msgSend_sessionInfoForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionInfoForSiriPresentation:");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAccessibilityDifferentiateWithoutColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityDifferentiateWithoutColor:");
}

id objc_msgSend_setAccessibilityIgnoresInvertColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIgnoresInvertColors:");
}

id objc_msgSend_setAccessibilityInvertColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityInvertColors:");
}

id objc_msgSend_setAccessibilityReduceMotion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityReduceMotion:");
}

id objc_msgSend_setAccessibilityReduceTransparency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityReduceTransparency:");
}

id objc_msgSend_setAceId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceId:");
}

id objc_msgSend_setAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAceObject:");
}

id objc_msgSend_setAcousticIdEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcousticIdEnabled:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActive_withOptions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:withOptions:error:");
}

id objc_msgSend_setActiveRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveRequestOptions:");
}

id objc_msgSend_setActiveViewModelController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveViewModelController:");
}

id objc_msgSend_setAdditionalContentSnippetViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalContentSnippetViews:");
}

id objc_msgSend_setAdditionalSafeAreaInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalSafeAreaInsets:");
}

id objc_msgSend_setAdditive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditive:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAlertContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertContext");
}

id objc_msgSend_setAllowAutomaticContentViewsScaling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowAutomaticContentViewsScaling:");
}

id objc_msgSend_setAllowsCancellation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsCancellation:");
}

id objc_msgSend_setAllowsGroupBlending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupBlending:");
}

id objc_msgSend_setAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupOpacity:");
}

id objc_msgSend_setAllowsHitTesting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsHitTesting:");
}

id objc_msgSend_setAllowsPictureInPicturePlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsPictureInPicturePlayback:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlphaComponent:");
}

id objc_msgSend_setAlwaysShowRecognizedSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysShowRecognizedSpeech:");
}

id objc_msgSend_setAlwaysShowSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysShowSpeech:");
}

id objc_msgSend_setAnimatingBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimatingBackgroundView:");
}

id objc_msgSend_setAnimationDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationDuration:");
}

id objc_msgSend_setAnimationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationOptions:");
}

id objc_msgSend_setAppAvailableInStorefront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppAvailableInStorefront:");
}

id objc_msgSend_setAppWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppWindow:");
}

id objc_msgSend_setApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationBundleIdentifier:");
}

id objc_msgSend_setApproximateSpeechDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApproximateSpeechDuration:");
}

id objc_msgSend_setAssistantBulletin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssistantBulletin:");
}

id objc_msgSend_setAttentionLostTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttentionLostTimeout:");
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAttributes_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:range:");
}

id objc_msgSend_setAudioSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioSessionID:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAuxiliaryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuxiliaryView:");
}

id objc_msgSend_setBackgroundBlurViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundBlurViewController:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundPlatteredCardView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundPlatteredCardView:");
}

id objc_msgSend_setBackgroundPlatteredCardViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundPlatteredCardViewOriginalFrame:");
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundView:");
}

id objc_msgSend_setBackingStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackingStore:");
}

id objc_msgSend_setBlendEffectEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlendEffectEnabled:");
}

id objc_msgSend_setBlueValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlueValue:");
}

id objc_msgSend_setBluetoothCarInvocationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBluetoothCarInvocationContext:");
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBody:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderColor:");
}

id objc_msgSend_setBorderStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderStyle:");
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderWidth:");
}

id objc_msgSend_setBottomContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomContentInset:");
}

id objc_msgSend_setBottomContentInset_animatedWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomContentInset:animatedWithContext:");
}

id objc_msgSend_setBottomFloatingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomFloatingButton:");
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounces:");
}

id objc_msgSend_setBoundingMapRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoundingMapRegion:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBugReportingAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBugReportingAvailable:");
}

id objc_msgSend_setBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleId:");
}

id objc_msgSend_setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleIdentifier:");
}

id objc_msgSend_setButtonDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonDelegate:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setCallRecipient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallRecipient:");
}

id objc_msgSend_setCallRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallRecords:");
}

id objc_msgSend_setCanBeRefreshed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanBeRefreshed:");
}

id objc_msgSend_setCanUseServerTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanUseServerTTS:");
}

id objc_msgSend_setCardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardData:");
}

id objc_msgSend_setCardId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardId:");
}

id objc_msgSend_setCardSectionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardSectionId:");
}

id objc_msgSend_setCardSections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardSections:");
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategoryIdentifier:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setChevronHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChevronHidden:");
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClasses:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setClassifiedAsUnintended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClassifiedAsUnintended:");
}

id objc_msgSend_setClientStateManagerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientStateManagerDelegate:");
}

id objc_msgSend_setClientWindowContextID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientWindowContextID:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setCombinedRank_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCombinedRank:");
}

id objc_msgSend_setCombinedScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCombinedScore:");
}

id objc_msgSend_setCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommands:");
}

id objc_msgSend_setCompactViewHasContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompactViewHasContent:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompositingFilter:");
}

id objc_msgSend_setConfiguration_shouldReset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:shouldReset:");
}

id objc_msgSend_setConfirmationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfirmationOptions:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerView:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHuggingPriority:forAxis:");
}

id objc_msgSend_setContentLayoutEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentLayoutEnabled:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentPlatterViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentPlatterViewController:");
}

id objc_msgSend_setContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentType:");
}

id objc_msgSend_setContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentViewController:");
}

id objc_msgSend_setContentViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentViewControllers:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setContextInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextInfo:");
}

id objc_msgSend_setContextMenuIsPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextMenuIsPresented:");
}

id objc_msgSend_setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinuousCornerRadius:");
}

id objc_msgSend_setConversationItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConversationItemIdentifier:");
}

id objc_msgSend_setConversationSnippetViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConversationSnippetViews:");
}

id objc_msgSend_setConversationViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConversationViewHidden:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCornerRoundingStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRoundingStyle:");
}

id objc_msgSend_setCurrentScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentScene:");
}

id objc_msgSend_setCustomBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomBackgroundColor:");
}

id objc_msgSend_setCustomLeftPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomLeftPadding:");
}

id objc_msgSend_setCustomRightPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomRightPadding:");
}

id objc_msgSend_setDarkenIntensity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDarkenIntensity:");
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setData:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDefaultActionURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultActionURL:");
}

id objc_msgSend_setDefaultColorForTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultColorForTemplate:");
}

id objc_msgSend_setDefaultViewInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultViewInsets:");
}

id objc_msgSend_setDeferredRendering_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeferredRendering:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDelegateClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegateClass:");
}

id objc_msgSend_setDescriptionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescriptionText:");
}

id objc_msgSend_setDestinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinations:");
}

id objc_msgSend_setDeviceIsPad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeviceIsPad:");
}

id objc_msgSend_setDialogIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialogIdentifier:");
}

id objc_msgSend_setDialogIdentifiers_forAceViewSpeakableTextWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialogIdentifiers:forAceViewSpeakableTextWithIdentifier:");
}

id objc_msgSend_setDialogPhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDialogPhase:");
}

id objc_msgSend_setDictationResult_withCorrectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictationResult:withCorrectionIdentifier:");
}

id objc_msgSend_setDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDictionary:");
}

id objc_msgSend_setDidReportInstrument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidReportInstrument:");
}

id objc_msgSend_setDismissalGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissalGestureRecognizer:");
}

id objc_msgSend_setDisplayColorScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayColorScheme:");
}

id objc_msgSend_setDisplayContrast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayContrast:");
}

id objc_msgSend_setDisplayGamut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayGamut:");
}

id objc_msgSend_setDisplayScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayScale:");
}

id objc_msgSend_setDisplayView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayView:");
}

id objc_msgSend_setDomainObject_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainObject:forIdentifier:");
}

id objc_msgSend_setDomainObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDomainObject:forKey:");
}

id objc_msgSend_setDropletContainerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDropletContainerDelegate:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setDynamicTypeSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDynamicTypeSize:");
}

id objc_msgSend_setEarliestBeginDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEarliestBeginDate:");
}

id objc_msgSend_setEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdgeInsets:");
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditable:");
}

id objc_msgSend_setEditableUtteranceViewHasContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditableUtteranceViewHasContent:");
}

id objc_msgSend_setEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffect:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEnablesReturnKeyAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnablesReturnKeyAutomatically:");
}

id objc_msgSend_setEnablesReturnKeyOnNonWhiteSpaceContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnablesReturnKeyOnNonWhiteSpaceContent:");
}

id objc_msgSend_setEndTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndTextColor:");
}

id objc_msgSend_setEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnded:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setErrorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorCode:");
}

id objc_msgSend_setErrorDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setErrorDomain:");
}

id objc_msgSend_setEstimatedVisibleSnippetDisplaySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedVisibleSnippetDisplaySize:");
}

id objc_msgSend_setEventHandlerWithQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventHandlerWithQueue:block:");
}

id objc_msgSend_setEventMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventMask:");
}

id objc_msgSend_setEventStreams_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEventStreams:");
}

id objc_msgSend_setExclusiveTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExclusiveTouch:");
}

id objc_msgSend_setExists_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExists:");
}

id objc_msgSend_setExpandText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpandText:");
}

id objc_msgSend_setExpirationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationDate:");
}

id objc_msgSend_setExpirationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpirationHandler:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setFaceTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFaceTime:");
}

id objc_msgSend_setFaceTimeAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFaceTimeAudio:");
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFamilyName:");
}

id objc_msgSend_setFeedbackDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFeedbackDomain:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFooter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooter:");
}

id objc_msgSend_setFormattedTextPieces_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormattedTextPieces:");
}

id objc_msgSend_setFormattingContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormattingContext:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFromPlatteredCardView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromPlatteredCardView:");
}

id objc_msgSend_setFromPlatteredCardViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromPlatteredCardViewOriginalFrame:");
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromValue:");
}

id objc_msgSend_setFrontMostAppOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrontMostAppOrientation:");
}

id objc_msgSend_setFullScreenDimmingLayerVisible_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullScreenDimmingLayerVisible:animated:");
}

id objc_msgSend_setGender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGender:");
}

id objc_msgSend_setGivenName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGivenName:");
}

id objc_msgSend_setGreenValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGreenValue:");
}

id objc_msgSend_setGuideHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGuideHidden:");
}

id objc_msgSend_setGuideHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGuideHidden:animated:");
}

id objc_msgSend_setHandleTTSCodes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandleTTSCodes:");
}

id objc_msgSend_setHandledIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandledIntent:");
}

id objc_msgSend_setHasChevron_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasChevron:");
}

id objc_msgSend_setHasDefaultAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasDefaultAction:");
}

id objc_msgSend_setHasPresentedSiriAdvancedFeaturesAssetsDownloadNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPresentedSiriAdvancedFeaturesAssetsDownloadNotification:");
}

id objc_msgSend_setHasPresentedSiriAssetsNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPresentedSiriAssetsNotification:");
}

id objc_msgSend_setHeaderText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderText:");
}

id objc_msgSend_setHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeight:");
}

id objc_msgSend_setHelpButtonEmphasized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHelpButtonEmphasized:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesBackButton:");
}

id objc_msgSend_setHidesTextRequestView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesTextRequestView:");
}

id objc_msgSend_setHighlightColorForTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightColorForTemplate:");
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlighted:");
}

id objc_msgSend_setHiresTrailerUri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHiresTrailerUri:");
}

id objc_msgSend_setHitTestsAsOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHitTestsAsOpaque:");
}

id objc_msgSend_setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHyphenationFactor:");
}

id objc_msgSend_setIconImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconImage:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forState:");
}

id objc_msgSend_setImageIsRightAligned_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageIsRightAligned:");
}

id objc_msgSend_setImageRepresentationOfSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageRepresentationOfSnippet:");
}

id objc_msgSend_setImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageView:");
}

id objc_msgSend_setInlinePredictionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInlinePredictionType:");
}

id objc_msgSend_setInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInputType:");
}

id objc_msgSend_setInsertionPointColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInsertionPointColor:");
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteger:forKey:");
}

id objc_msgSend_setIntentMessageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntentMessageData:");
}

id objc_msgSend_setIntentMessageName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntentMessageName:");
}

id objc_msgSend_setIntentMetadata_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntentMetadata:");
}

id objc_msgSend_setIntentResponseMessageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntentResponseMessageData:");
}

id objc_msgSend_setIntentResponseMessageName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntentResponseMessageName:");
}

id objc_msgSend_setInteractionDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionDelegate:");
}

id objc_msgSend_setInteractionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionId:");
}

id objc_msgSend_setInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractive:");
}

id objc_msgSend_setInterface_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterface:forSelector:argumentIndex:ofReply:");
}

id objc_msgSend_setInterpretations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterpretations:");
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptionHandler:");
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInvalidationHandler:");
}

id objc_msgSend_setIsBold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsBold:");
}

id objc_msgSend_setIsCentered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCentered:");
}

id objc_msgSend_setIsDeviceLocked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDeviceLocked:");
}

id objc_msgSend_setIsFirstSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFirstSnippet:");
}

id objc_msgSend_setIsForBluetoothCar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsForBluetoothCar:");
}

id objc_msgSend_setIsFromDevice_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFromDevice:");
}

id objc_msgSend_setIsHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsHint:");
}

id objc_msgSend_setIsInAmbient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInAmbient:");
}

id objc_msgSend_setIsInAmbientInteractivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInAmbientInteractivity:");
}

id objc_msgSend_setIsNextLevelCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsNextLevelCard:");
}

id objc_msgSend_setIsPresentedWithSmartDialogText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPresentedWithSmartDialogText:");
}

id objc_msgSend_setIsTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsTemplate:");
}

id objc_msgSend_setItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItem:");
}

id objc_msgSend_setItemType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItemType:");
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:");
}

id objc_msgSend_setKeyboardAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardAppearance:");
}

id objc_msgSend_setKeyboardHasContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardHasContent:");
}

id objc_msgSend_setKeylineCustomBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeylineCustomBackgroundColor:");
}

id objc_msgSend_setKeylineType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeylineType:");
}

id objc_msgSend_setLanguageCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageCode:");
}

id objc_msgSend_setLanguageString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageString:");
}

id objc_msgSend_setLargeSubheaderText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLargeSubheaderText:");
}

id objc_msgSend_setLastKnownInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownInterfaceOrientation:");
}

id objc_msgSend_setLat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLat:");
}

id objc_msgSend_setLatencyViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatencyViewModel:");
}

id objc_msgSend_setLatestDeviceMotionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatestDeviceMotionEvent:");
}

id objc_msgSend_setLatestFaceAwarenessEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLatestFaceAwarenessEvent:");
}

id objc_msgSend_setLaunchId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunchId:");
}

id objc_msgSend_setLeadingSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeadingSubtitle:");
}

id objc_msgSend_setLeadingText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeadingText:");
}

id objc_msgSend_setLeftView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftView:");
}

id objc_msgSend_setLeftViewMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftViewMode:");
}

id objc_msgSend_setLineFragmentPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineFragmentPadding:");
}

id objc_msgSend_setLineSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineSpacing:");
}

id objc_msgSend_setListenAfterSpeaking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListenAfterSpeaking:");
}

id objc_msgSend_setListenAfterSpeakingBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListenAfterSpeakingBehavior:");
}

id objc_msgSend_setLng_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLng:");
}

id objc_msgSend_setLoadKeyboardsForSiriLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadKeyboardsForSiriLanguage:");
}

id objc_msgSend_setLocalImageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalImageType:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLowresTrailerUri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLowresTrailerUri:");
}

id objc_msgSend_setMachServiceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMachServiceIdentifier:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMaxLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxLines:");
}

id objc_msgSend_setMergedResultsForTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMergedResultsForTransition");
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessage:");
}

id objc_msgSend_setMetricsContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetricsContext:");
}

id objc_msgSend_setMiddleName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMiddleName:");
}

id objc_msgSend_setMinimumFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumFontSize:");
}

id objc_msgSend_setMinimumIdleTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumIdleTimeInterval:");
}

id objc_msgSend_setMinimumInteritemSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumInteritemSpacing:");
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumLineSpacing:");
}

id objc_msgSend_setModalPresentationCapturesStatusBarAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationCapturesStatusBarAppearance:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setModelData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModelData:");
}

id objc_msgSend_setMultiLevelViewHasContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiLevelViewHasContent:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNamePrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNamePrefix:");
}

id objc_msgSend_setNameSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameSuffix:");
}

id objc_msgSend_setNavigating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigating:");
}

id objc_msgSend_setNavigationBarHasContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHasContent:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:animated:");
}

id objc_msgSend_setNavigationStackIsPopping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationStackIsPopping:");
}

id objc_msgSend_setNavigationStackSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationStackSize:");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsStatusBarAppearanceUpdate");
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdateConstraints");
}

id objc_msgSend_setNickname_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNickname:");
}

id objc_msgSend_setNotificationCategories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotificationCategories:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOnDeviceUtterancesPresent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnDeviceUtterancesPresent:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperation:");
}

id objc_msgSend_setOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientation:");
}

id objc_msgSend_setOriginalRank_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalRank:");
}

id objc_msgSend_setOriginalRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalRequestOptions:");
}

id objc_msgSend_setOriginalScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalScore:");
}

id objc_msgSend_setPatternId_forViewId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPatternId:forViewId:");
}

id objc_msgSend_setPercentComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPercentComplete:");
}

id objc_msgSend_setPhrases_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhrases:");
}

id objc_msgSend_setPinBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPinBehavior:");
}

id objc_msgSend_setPinColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPinColor:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPlayTrailer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayTrailer:");
}

id objc_msgSend_setPlaybackCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackCommand:");
}

id objc_msgSend_setPlaybackObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackObserver:");
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayer:");
}

id objc_msgSend_setPopToRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopToRootViewController:");
}

id objc_msgSend_setPopoverViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopoverViewController:");
}

id objc_msgSend_setPreSynthesizeTTSCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreSynthesizeTTSCommand:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPresentation_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentation:animated:completion:");
}

id objc_msgSend_setPresentationDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationDomain:");
}

id objc_msgSend_setPresentationIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationIdentifier:");
}

id objc_msgSend_setPresentationMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationMode:");
}

id objc_msgSend_setPreviousInteractionInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousInteractionInputType:");
}

id objc_msgSend_setPreviousSiriRequestErrorTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousSiriRequestErrorTimestamp:");
}

id objc_msgSend_setPreviousTurnID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousTurnID:");
}

id objc_msgSend_setPreviousTurnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousTurnIdentifier:");
}

id objc_msgSend_setPreviousUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviousUtterance:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setPromptEntryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPromptEntryView:");
}

id objc_msgSend_setPronunciationContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPronunciationContext:");
}

id objc_msgSend_setPronunciationRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPronunciationRequest:");
}

id objc_msgSend_setPunchOutUri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPunchOutUri:");
}

id objc_msgSend_setPunchoutOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPunchoutOptions:");
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQualityOfService:");
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReason:");
}

id objc_msgSend_setRecognition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecognition:");
}

id objc_msgSend_setRedComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRedComponent:");
}

id objc_msgSend_setRedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRedValue:");
}

id objc_msgSend_setRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRefId:");
}

id objc_msgSend_setReferenceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReferenceIdentifier:");
}

id objc_msgSend_setReferencedCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReferencedCommands:");
}

id objc_msgSend_setReferentialCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReferentialCommand:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRequestHandlingStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestHandlingStatus:");
}

id objc_msgSend_setRequestInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestInfo:");
}

id objc_msgSend_setRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestOptions:");
}

id objc_msgSend_setRequestSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestSource:");
}

id objc_msgSend_setRequiresExternalPower_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresExternalPower:");
}

id objc_msgSend_setRequiresNetworkConnectivity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequiresNetworkConnectivity:");
}

id objc_msgSend_setResponseViewId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResponseViewId:");
}

id objc_msgSend_setResultWithResultView_resultSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultWithResultView:resultSize:");
}

id objc_msgSend_setReturnKeyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnKeyType:");
}

id objc_msgSend_setRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRole:");
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootViewController:");
}

id objc_msgSend_setRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoute:");
}

id objc_msgSend_setSamplingInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSamplingInterval:");
}

id objc_msgSend_setSash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSash:");
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScale:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setSelectable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectable:");
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelected:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSelectionText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionText:");
}

id objc_msgSend_setSeparatorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorColor:");
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorStyle:");
}

id objc_msgSend_setSeparatorType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorType:");
}

id objc_msgSend_setServerCommandId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerCommandId:");
}

id objc_msgSend_setServerUtterances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setServerUtterances:");
}

id objc_msgSend_setSessionCreationTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionCreationTime:");
}

id objc_msgSend_setSessionId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionId:");
}

id objc_msgSend_setSharedMapsUserSessionEntity_shareSessionIDWithMaps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedMapsUserSessionEntity:shareSessionIDWithMaps:");
}

id objc_msgSend_setShouldIgnoreDoNotDisturb_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreDoNotDisturb:");
}

id objc_msgSend_setShouldIgnoreRingerSwitch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldIgnoreRingerSwitch:");
}

id objc_msgSend_setShouldPassTouchesThroughToSpringBoard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldPassTouchesThroughToSpringBoard:");
}

id objc_msgSend_setShouldSuppressDefaultAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSuppressDefaultAction:");
}

id objc_msgSend_setShouldSuppressErrorTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldSuppressErrorTTS:");
}

id objc_msgSend_setShowSnippetView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowSnippetView:animated:");
}

id objc_msgSend_setShowsSensitiveUI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsSensitiveUI:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setSignalDomain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignalDomain:");
}

id objc_msgSend_setSignalIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSignalIdentifier:");
}

id objc_msgSend_setSiriContentViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriContentViewControllers:");
}

id objc_msgSend_setSiriDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriDialog:");
}

id objc_msgSend_setSiriIsActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriIsActive:");
}

id objc_msgSend_setSiriRequestErrorCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriRequestErrorCount:");
}

id objc_msgSend_setSiriViewControllerIsEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSiriViewControllerIsEditing:");
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSize:");
}

id objc_msgSend_setSizeFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSizeFormat:");
}

id objc_msgSend_setSmartDialogCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartDialogCard:");
}

id objc_msgSend_setSmartDialogPlugin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSmartDialogPlugin:");
}

id objc_msgSend_setSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnippet:");
}

id objc_msgSend_setSnippetBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnippetBackgroundView:");
}

id objc_msgSend_setSnippetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnippetViewController:");
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortDescriptors:");
}

id objc_msgSend_setSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSource:");
}

id objc_msgSend_setSpeakableContextInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakableContextInfo:");
}

id objc_msgSend_setSpeakableDelimiter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakableDelimiter:");
}

id objc_msgSend_setSpeakableFinalDelimiter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakableFinalDelimiter:");
}

id objc_msgSend_setSpeakableSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakableSuffix:");
}

id objc_msgSend_setSpeakableText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakableText:");
}

id objc_msgSend_setSpeechRecognitionHypothesis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRecognitionHypothesis:");
}

id objc_msgSend_setSpeechRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeechRequestOptions:");
}

id objc_msgSend_setStartRecordingSoundId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartRecordingSoundId:");
}

id objc_msgSend_setStartedOrChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartedOrChanged:");
}

id objc_msgSend_setState_animated_transitionSpeed_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:animated:transitionSpeed:completion:");
}

id objc_msgSend_setStatusBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarHidden:animated:");
}

id objc_msgSend_setStatusBarHidden_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarHidden:animated:completion:");
}

id objc_msgSend_setStatusViewDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusViewDisabled:");
}

id objc_msgSend_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusViewHidden:");
}

id objc_msgSend_setStatusViewUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusViewUserInteractionEnabled:");
}

id objc_msgSend_setSubheaderText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubheaderText:");
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubtitle:");
}

id objc_msgSend_setSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestions:");
}

id objc_msgSend_setSummaryTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSummaryTitle:");
}

id objc_msgSend_setSynchronizedWithServer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSynchronizedWithServer:");
}

id objc_msgSend_setSystemExtensionBundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemExtensionBundleId:");
}

id objc_msgSend_setTagPhrase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTagPhrase:");
}

id objc_msgSend_setTaskCompletedWithSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTaskCompletedWithSuccess:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextContainerInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextContainerInset:");
}

id objc_msgSend_setTextContainerStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextContainerStyle:");
}

id objc_msgSend_setTextDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextDirection:");
}

id objc_msgSend_setTextDragOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextDragOptions:");
}

id objc_msgSend_setTextFieldHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextFieldHeight:");
}

id objc_msgSend_setTextFieldWithTextFieldView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextFieldWithTextFieldView:");
}

id objc_msgSend_setTextLegibilityWeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextLegibilityWeight:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setToPlatteredCardView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToPlatteredCardView:");
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToValue:");
}

id objc_msgSend_setTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTokens:");
}

id objc_msgSend_setTopContentInset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopContentInset:animated:");
}

id objc_msgSend_setTopPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopPadding:");
}

id objc_msgSend_setTrailingSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrailingSubtitle:");
}

id objc_msgSend_setTrailingText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrailingText:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setTransitionController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionController:");
}

id objc_msgSend_setTransitionDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionDuration:");
}

id objc_msgSend_setTransitionLoadingToResultWithResultSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionLoadingToResultWithResultSize:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setTypeName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTypeName:");
}

id objc_msgSend_setTypeToSiriViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTypeToSiriViewHidden:");
}

id objc_msgSend_setUpConversationStarterSuggestionsWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpConversationStarterSuggestionsWith:");
}

id objc_msgSend_setUpViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpViews");
}

id objc_msgSend_setUrlValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrlValue:");
}

id objc_msgSend_setUrls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrls:");
}

id objc_msgSend_setUserAttentionController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserAttentionController:");
}

id objc_msgSend_setUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserData:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInput:");
}

id objc_msgSend_setUserInteractedWithTouchIDSensor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractedWithTouchIDSensor:");
}

id objc_msgSend_setUserInteractedWithTouchScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractedWithTouchScreen:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInterfaceStyle:");
}

id objc_msgSend_setUtsId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtsId:");
}

id objc_msgSend_setUtteranceSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtteranceSource:");
}

id objc_msgSend_setUtteranceUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUtteranceUserInteractionEnabled:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setVideoPlayerControllerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoPlayerControllerDelegate:");
}

id objc_msgSend_setVideoPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoPlaying:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewController:");
}

id objc_msgSend_setViewId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewId:");
}

id objc_msgSend_setViewModelChangeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewModelChangeObserver:");
}

id objc_msgSend_setViewRequiringExtendedTimeoutVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewRequiringExtendedTimeoutVisible:");
}

id objc_msgSend_setViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViews:");
}

id objc_msgSend_setVisualMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisualMode:");
}

id objc_msgSend_setVisualResponseLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisualResponseLocation:");
}

id objc_msgSend_setVoiceLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVoiceLoading:");
}

id objc_msgSend_setWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidth:");
}

id objc_msgSend_setWindowScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindowScene:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWords:");
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settings");
}

id objc_msgSend_setupBackgroundAssetCheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupBackgroundAssetCheck");
}

id objc_msgSend_setupUserNotificationCenterDelegateIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupUserNotificationCenterDelegateIfNeeded:");
}

id objc_msgSend_sf_isChinaRegionCellularDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sf_isChinaRegionCellularDevice");
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAVSystemController");
}

id objc_msgSend_sharedAccessoryManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAccessoryManager");
}

id objc_msgSend_sharedAnalytics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAnalytics");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sharedCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedCache");
}

id objc_msgSend_sharedDefaultEvaluator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedDefaultEvaluator");
}

id objc_msgSend_sharedGuard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedGuard");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_sharedObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedObserver");
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPreferences");
}

id objc_msgSend_sharedScheduler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedScheduler");
}

id objc_msgSend_sharedSiriPresentationPluginHost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedSiriPresentationPluginHost");
}

id objc_msgSend_sharedSystemAudioContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedSystemAudioContext");
}

id objc_msgSend_sharedSystemState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedSystemState");
}

id objc_msgSend_shortTapActionWithRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortTapActionWithRequestOptions:");
}

id objc_msgSend_shouldAllowSurveyByDefault(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowSurveyByDefault");
}

id objc_msgSend_shouldAllowTouchPassThrough(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowTouchPassThrough");
}

id objc_msgSend_shouldAutomaticallyScaleContentInAmbient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutomaticallyScaleContentInAmbient");
}

id objc_msgSend_shouldDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDismiss");
}

id objc_msgSend_shouldDismissForIdling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDismissForIdling");
}

id objc_msgSend_shouldDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisplay");
}

id objc_msgSend_shouldEnableInteractionForSiriViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldEnableInteractionForSiriViewController:");
}

id objc_msgSend_shouldMitigateBasedOnActivationHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldMitigateBasedOnActivationHistory:");
}

id objc_msgSend_shouldPlayHighResolutionContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPlayHighResolutionContent");
}

id objc_msgSend_shouldPunchOutInPlace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPunchOutInPlace");
}

id objc_msgSend_shouldRedactSnippetForAddViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRedactSnippetForAddViews:");
}

id objc_msgSend_shouldRedactSpeakableTextForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRedactSpeakableTextForAceObject:");
}

id objc_msgSend_shouldResumeInterruptedAudioPlaybackForAttendingState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldResumeInterruptedAudioPlaybackForAttendingState:");
}

id objc_msgSend_shouldShowAssetDownloadBanner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowAssetDownloadBanner");
}

id objc_msgSend_shouldShowInSmartDialog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowInSmartDialog");
}

id objc_msgSend_shouldUseEventDrivenIdleAndQuietUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseEventDrivenIdleAndQuietUpdates");
}

id objc_msgSend_showAcousticIDSpinner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showAcousticIDSpinner");
}

id objc_msgSend_showBannerFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBannerFor:");
}

id objc_msgSend_showEmptyView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showEmptyView");
}

id objc_msgSend_showFullScreenEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFullScreenEffect:");
}

id objc_msgSend_showRequestHandlingStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRequestHandlingStatus:");
}

id objc_msgSend_showScreenshotUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showScreenshotUI");
}

id objc_msgSend_showSpeechAlternatives_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSpeechAlternatives:");
}

id objc_msgSend_showTapToEditTipCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTapToEditTipCount");
}

id objc_msgSend_showsFavoriteStar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsFavoriteStar");
}

id objc_msgSend_showtimeSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showtimeSnippet");
}

id objc_msgSend_signalDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalDomain");
}

id objc_msgSend_signalIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalIdentifier");
}

id objc_msgSend_signalWithInlineStreaming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalWithInlineStreaming:");
}

id objc_msgSend_siriAudioRecordingDidChangePowerLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriAudioRecordingDidChangePowerLevel:");
}

id objc_msgSend_siriAudioRecordingDidChangePowerLevel_peakLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriAudioRecordingDidChangePowerLevel:peakLevel:");
}

id objc_msgSend_siriCompactViewController_willDismissViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCompactViewController:willDismissViewController:");
}

id objc_msgSend_siriCompactViewController_willPresentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriCompactViewController:willPresentViewController:");
}

id objc_msgSend_siriDeviceLockStateForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDeviceLockStateForSiriPresentation:");
}

id objc_msgSend_siriDialog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDialog");
}

id objc_msgSend_siriDidActivate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidActivate");
}

id objc_msgSend_siriDidActivateFromSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidActivateFromSource:");
}

id objc_msgSend_siriDidDeactivate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidDeactivate");
}

id objc_msgSend_siriDidDeactivateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidDeactivateWithCompletion:");
}

id objc_msgSend_siriDidDetectMusic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidDetectMusic");
}

id objc_msgSend_siriDidEnterLatencyState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidEnterLatencyState");
}

id objc_msgSend_siriDidFinishActionsForConversationItemWithIdentifier_inConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidFinishActionsForConversationItemWithIdentifier:inConversation:");
}

id objc_msgSend_siriDidHidePasscodeUnlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidHidePasscodeUnlock");
}

id objc_msgSend_siriDidOpenURL_bundleId_inPlace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidOpenURL:bundleId:inPlace:");
}

id objc_msgSend_siriDidReceiveAdditionalContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidReceiveAdditionalContent:");
}

id objc_msgSend_siriDidReceiveLatencyProgressUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidReceiveLatencyProgressUpdate:");
}

id objc_msgSend_siriDidSpeakHint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidSpeakHint");
}

id objc_msgSend_siriDidStartNewConversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidStartNewConversationWithIdentifier:");
}

id objc_msgSend_siriDidStartSpeakingWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidStartSpeakingWithIdentifier:");
}

id objc_msgSend_siriDidStopSpeakingWithIdentifier_speechQueueIsEmpty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidStopSpeakingWithIdentifier:speechQueueIsEmpty:");
}

id objc_msgSend_siriDidTapOutsideContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidTapOutsideContent");
}

id objc_msgSend_siriDidTransitionFromState_event_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidTransitionFromState:event:");
}

id objc_msgSend_siriDidUpdateASRWithRecognition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidUpdateASRWithRecognition:");
}

id objc_msgSend_siriEnabledAppListForSiriViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriEnabledAppListForSiriViewController:");
}

id objc_msgSend_siriIdleAndQuietStatusDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriIdleAndQuietStatusDidChange:");
}

id objc_msgSend_siriIsActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriIsActive");
}

id objc_msgSend_siriIsIdleAndQuiet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriIsIdleAndQuiet");
}

id objc_msgSend_siriIsIdleAndQuietStatusDidChange_isAttending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriIsIdleAndQuietStatusDidChange:isAttending:");
}

id objc_msgSend_siriIsShowingPasscodeUnlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriIsShowingPasscodeUnlock");
}

id objc_msgSend_siriNetworkAvailabilityDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriNetworkAvailabilityDidChange");
}

id objc_msgSend_siriPresentation_activateConversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:activateConversationWithIdentifier:");
}

id objc_msgSend_siriPresentation_conversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:conversationWithIdentifier:");
}

id objc_msgSend_siriPresentation_didCorrectRecognition_correctionIdentifier_forConversationItemWithIdentifier_userSelectionResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:didCorrectRecognition:correctionIdentifier:forConversationItemWithIdentifier:userSelectionResults:");
}

id objc_msgSend_siriPresentation_didDismissViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:didDismissViewController:");
}

id objc_msgSend_siriPresentation_didPresentConversationItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:didPresentConversationItemsWithIdentifiers:");
}

id objc_msgSend_siriPresentation_didPresentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:didPresentViewController:");
}

id objc_msgSend_siriPresentation_handleStartLocalRequest_turnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:handleStartLocalRequest:turnIdentifier:");
}

id objc_msgSend_siriPresentation_inputTypeDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:inputTypeDidChange:");
}

id objc_msgSend_siriPresentation_openURL_conversationId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:openURL:conversationId:completion:");
}

id objc_msgSend_siriPresentation_performAceCommand_conversationItemIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:performAceCommand:conversationItemIdentifier:completion:");
}

id objc_msgSend_siriPresentation_performAceCommand_conversationItemIdentifier_turnIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:performAceCommand:conversationItemIdentifier:turnIdentifier:completion:");
}

id objc_msgSend_siriPresentation_reduceOrbOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:reduceOrbOpacity:");
}

id objc_msgSend_siriPresentation_requestHostBlurVisible_reason_fence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:requestHostBlurVisible:reason:fence:");
}

id objc_msgSend_siriPresentation_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:requestsKeyboardWithCompletion:");
}

id objc_msgSend_siriPresentation_setBugReportingAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:setBugReportingAvailable:");
}

id objc_msgSend_siriPresentation_setFullScreenDimmingLayerVisible_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:setFullScreenDimmingLayerVisible:animated:");
}

id objc_msgSend_siriPresentation_setStatusBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:setStatusBarHidden:animated:");
}

id objc_msgSend_siriPresentation_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:setStatusViewHidden:");
}

id objc_msgSend_siriPresentation_startEditedRequestWithText_correctionIdentifier_userSelectionResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:startEditedRequestWithText:correctionIdentifier:userSelectionResults:");
}

id objc_msgSend_siriPresentation_startRequestForSuggestion_inputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:startRequestForSuggestion:inputType:");
}

id objc_msgSend_siriPresentation_startRequestForText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:startRequestForText:");
}

id objc_msgSend_siriPresentation_startRequestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:startRequestWithOptions:");
}

id objc_msgSend_siriPresentation_synthesizeSpeechWithPhoneticText_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:synthesizeSpeechWithPhoneticText:completion:");
}

id objc_msgSend_siriPresentation_synthesizeSpeechWithText_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:synthesizeSpeechWithText:completion:");
}

id objc_msgSend_siriPresentation_viewDidAppearWithAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:viewDidAppearWithAceObject:");
}

id objc_msgSend_siriPresentation_viewDidAppearWithClassDescriptor_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:viewDidAppearWithClassDescriptor:identifier:");
}

id objc_msgSend_siriPresentation_viewDidDisappearWithClassDescriptor_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:viewDidDisappearWithClassDescriptor:identifier:");
}

id objc_msgSend_siriPresentation_willBeginEditingOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:willBeginEditingOfType:");
}

id objc_msgSend_siriPresentation_willChangeKeyboardVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:willChangeKeyboardVisibility:");
}

id objc_msgSend_siriPresentation_willChangeTextInteractionEditMenuVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:willChangeTextInteractionEditMenuVisibility:");
}

id objc_msgSend_siriPresentation_willDismissViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:willDismissViewController:");
}

id objc_msgSend_siriPresentation_willPresentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:willPresentViewController:");
}

id objc_msgSend_siriPresentationCancelHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentationCancelHIDEventDefferal:");
}

id objc_msgSend_siriPresentationDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentationDidEndEditing:");
}

id objc_msgSend_siriPresentationDidPresentConversationFromBreadcrumb_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentationDidPresentConversationFromBreadcrumb:");
}

id objc_msgSend_siriPresentationDidPresentUserInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentationDidPresentUserInterface:");
}

id objc_msgSend_siriPresentationDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentationDidResignFirstResponder:");
}

id objc_msgSend_siriPresentationRequestsHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentationRequestsHIDEventDefferal:");
}

id objc_msgSend_siriRequestErrorCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriRequestErrorCount");
}

id objc_msgSend_siriRequestWillStartWithRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriRequestWillStartWithRequestOptions:");
}

id objc_msgSend_siriResponseModeDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriResponseModeDidChange:");
}

id objc_msgSend_siriResponseModeDidChange_isWiredMicOrBTHeadsetOrWx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriResponseModeDidChange:isWiredMicOrBTHeadsetOrWx:");
}

id objc_msgSend_siriResponseShouldAlwaysPrint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriResponseShouldAlwaysPrint");
}

id objc_msgSend_siriSAEViewCOntrollerRequestStopAttending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewCOntrollerRequestStopAttending:");
}

id objc_msgSend_siriSAEViewController_willDismissViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewController:willDismissViewController:");
}

id objc_msgSend_siriSAEViewController_willPresentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewController:willPresentViewController:");
}

id objc_msgSend_siriSAEViewControllerDidEndTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewControllerDidEndTextEditMenuInteraction:");
}

id objc_msgSend_siriSAEViewControllerRequestsTextActivation_withRequestSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewControllerRequestsTextActivation:withRequestSource:");
}

id objc_msgSend_siriSAEViewControllerRequestsVoiceActivation_withRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewControllerRequestsVoiceActivation:withRequestOptions:");
}

id objc_msgSend_siriSAEViewControllerWillBeginTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewControllerWillBeginTextEditMenuInteraction:");
}

id objc_msgSend_siriServiceStream(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriServiceStream");
}

id objc_msgSend_siriSessionAudioRecordingDidChangePowerLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionAudioRecordingDidChangePowerLevel:");
}

id objc_msgSend_siriSessionDidInitializeSessionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidInitializeSessionInfo:");
}

id objc_msgSend_siriSessionDidReceiveAddViewsCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidReceiveAddViewsCommand:completion:");
}

id objc_msgSend_siriSessionDidReceivePlayContentCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidReceivePlayContentCommand:completion:");
}

id objc_msgSend_siriSessionDidReceiveSayItCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidReceiveSayItCommand:completion:");
}

id objc_msgSend_siriSessionDidReceiveSpeechPartialResultCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidReceiveSpeechPartialResultCommand:");
}

id objc_msgSend_siriSessionDidReceiveSpeechRecognizedCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidReceiveSpeechRecognizedCommand:");
}

id objc_msgSend_siriSessionDidStartNewTurn_associatedLaunchStartContext_machAbsoluteTime_linkPreviousTurn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidStartNewTurn:associatedLaunchStartContext:machAbsoluteTime:linkPreviousTurn:");
}

id objc_msgSend_siriSessionDidUpdateSessionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidUpdateSessionInfo:");
}

id objc_msgSend_siriSessionWillCancelRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionWillCancelRequest");
}

id objc_msgSend_siriSnippetViewController_didShowGuideStartDate_endDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSnippetViewController:didShowGuideStartDate:endDate:");
}

id objc_msgSend_siriSnippetViewController_pushSirilandSnippets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSnippetViewController:pushSirilandSnippets:");
}

id objc_msgSend_siriSnippetViewControllerIsVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSnippetViewControllerIsVisible:");
}

id objc_msgSend_siriState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriState");
}

id objc_msgSend_siriStateForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriStateForSiriPresentation:");
}

id objc_msgSend_siriUIDidPresentDynamicSnippetWithInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriUIDidPresentDynamicSnippetWithInfo:");
}

id objc_msgSend_siriUILocalizedStringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriUILocalizedStringForKey:");
}

id objc_msgSend_siriUILocalizedStringForKey_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriUILocalizedStringForKey:table:");
}

id objc_msgSend_siriUILocalizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriUILocalizedStringForKey:value:table:");
}

id objc_msgSend_siriViewController_addSelectionResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewController:addSelectionResponse:");
}

id objc_msgSend_siriViewController_performAceCommands_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewController:performAceCommands:");
}

id objc_msgSend_siriViewController_startCorrectedSpeechRequestWithText_correctionIdentifier_userSelectionResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewController:startCorrectedSpeechRequestWithText:correctionIdentifier:userSelectionResults:");
}

id objc_msgSend_siriViewControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerDidEndEditing:");
}

id objc_msgSend_siriViewControllerDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerDidResignFirstResponder:");
}

id objc_msgSend_siriViewControllerExpectedWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerExpectedWidth:");
}

id objc_msgSend_siriViewControllerHeightDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerHeightDidChange:");
}

id objc_msgSend_siriViewControllerHeightDidChange_pinTopOfSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerHeightDidChange:pinTopOfSnippet:");
}

id objc_msgSend_siriViewControllerIsEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerIsEditing");
}

id objc_msgSend_siriViewControllerRequestKeyboardForTapToEditWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerRequestKeyboardForTapToEditWithCompletion:");
}

id objc_msgSend_siriViewControllerRequestTearDownEditingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerRequestTearDownEditingViewController:");
}

id objc_msgSend_siriViewControllerRequestToPin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerRequestToPin:");
}

id objc_msgSend_siriViewControllerShouldPreventUserInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerShouldPreventUserInteraction:");
}

id objc_msgSend_siriViewControllerWillBeginEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriViewControllerWillBeginEditing:");
}

id objc_msgSend_siriWillActivateFromSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillActivateFromSource:");
}

id objc_msgSend_siriWillBePresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillBePresented:");
}

id objc_msgSend_siriWillBeginTearDownForDismissalReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillBeginTearDownForDismissalReason:");
}

id objc_msgSend_siriWillBeginTearDownForDismissalReason_withOriginalDismissalOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillBeginTearDownForDismissalReason:withOriginalDismissalOptions:");
}

id objc_msgSend_siriWillDismissWithReason_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillDismissWithReason:completion:");
}

id objc_msgSend_siriWillHidePasscodeUnlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillHidePasscodeUnlock");
}

id objc_msgSend_siriWillHidePasscodeUnlockForResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillHidePasscodeUnlockForResult:");
}

id objc_msgSend_siriWillProcessAppLaunchWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillProcessAppLaunchWithBundleIdentifier:");
}

id objc_msgSend_siriWillShowPasscodeUnlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillShowPasscodeUnlock");
}

id objc_msgSend_siriWillShowPasscodeUnlockAndCancelRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillShowPasscodeUnlockAndCancelRequest:");
}

id objc_msgSend_siriWillStartRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillStartRequest");
}

id objc_msgSend_siriWillStartTextInputRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillStartTextInputRequest");
}

id objc_msgSend_siriWillStopAttending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriWillStopAttending:");
}

id objc_msgSend_siriui_blendEffectColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_blendEffectColor");
}

id objc_msgSend_siriui_card(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_card");
}

id objc_msgSend_siriui_card_compact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_card_compact");
}

id objc_msgSend_siriui_eventInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_eventInfo");
}

id objc_msgSend_siriui_lightHighlightColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_lightHighlightColor");
}

id objc_msgSend_siriui_lightInsertionPointColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_lightInsertionPointColor");
}

id objc_msgSend_siriui_lightKeylineColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_lightKeylineColor");
}

id objc_msgSend_siriui_lightTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_lightTextColor");
}

id objc_msgSend_siriui_lightWeightBodySubtextSizeFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_lightWeightBodySubtextSizeFont");
}

id objc_msgSend_siriui_lightWeightFontWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_lightWeightFontWithSize:");
}

id objc_msgSend_siriui_maskingColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_maskingColor");
}

id objc_msgSend_siriui_mediumWeightBodySizeFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_mediumWeightBodySizeFont");
}

id objc_msgSend_siriui_mediumWeightFontWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_mediumWeightFontWithSize:");
}

id objc_msgSend_siriui_serverTipFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_serverTipFont");
}

id objc_msgSend_siriui_serverTipPrefixFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_serverTipPrefixFont");
}

id objc_msgSend_siriui_serverUtteranceCorrectionPromptFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_serverUtteranceCorrectionPromptFont");
}

id objc_msgSend_siriui_serverUtteranceFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_serverUtteranceFont");
}

id objc_msgSend_siriui_setBlendEffectEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_setBlendEffectEnabled:");
}

id objc_msgSend_siriui_tapToEditColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_tapToEditColor");
}

id objc_msgSend_siriui_tapToEditMaskingColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_tapToEditMaskingColor");
}

id objc_msgSend_siriui_userUtteranceEditModeVibrancyEffect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_userUtteranceEditModeVibrancyEffect");
}

id objc_msgSend_siriui_userUtteranceFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriui_userUtteranceFont");
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeThatFits_text_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:text:");
}

id objc_msgSend_sizeThatFits_text_edgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:text:edgeInsets:");
}

id objc_msgSend_sizeThatFits_text_font_textContainerStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:text:font:textContainerStyle:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeToFit");
}

id objc_msgSend_smallSystemFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smallSystemFontSize");
}

id objc_msgSend_snippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snippet");
}

id objc_msgSend_snippetBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snippetBackgroundView");
}

id objc_msgSend_snippetLayoutDidUpdateForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snippetLayoutDidUpdateForView:");
}

id objc_msgSend_snippetView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snippetView");
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "source");
}

id objc_msgSend_speakableContextInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakableContextInfo");
}

id objc_msgSend_speakableDelimiter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakableDelimiter");
}

id objc_msgSend_speakableFinalDelimiter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakableFinalDelimiter");
}

id objc_msgSend_speakableProviderForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakableProviderForObject:");
}

id objc_msgSend_speakableSuffix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakableSuffix");
}

id objc_msgSend_speakableText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakableText");
}

id objc_msgSend_speakableTextOverride(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speakableTextOverride");
}

id objc_msgSend_speechAlternativeHighlightListWithScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechAlternativeHighlightListWithScore:");
}

id objc_msgSend_speechRecognitionHypothesis(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecognitionHypothesis");
}

id objc_msgSend_speechRecordingDidBeginOnRecordRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidBeginOnRecordRoute:");
}

id objc_msgSend_speechRecordingDidCancelForRequest_onAVRecordRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidCancelForRequest:onAVRecordRoute:");
}

id objc_msgSend_speechRecordingDidDetectSpeechStartpoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidDetectSpeechStartpoint");
}

id objc_msgSend_speechRecordingDidEndForRequest_onAVRecordRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidEndForRequest:onAVRecordRoute:");
}

id objc_msgSend_speechRecordingDidFailForRequest_onAVRecordRoute_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRecordingDidFailForRequest:onAVRecordRoute:withError:");
}

id objc_msgSend_speechRequestOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechRequestOptions");
}

id objc_msgSend_speechTokensForUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speechTokensForUtteranceAtIndex:");
}

id objc_msgSend_spokenLanguageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spokenLanguageCode");
}

id objc_msgSend_spokenOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spokenOnly");
}

id objc_msgSend_spokenText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spokenText");
}

id objc_msgSend_sr_applySnippetProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sr_applySnippetProperties:");
}

id objc_msgSend_sr_inPerson(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sr_inPerson");
}

id objc_msgSend_sr_sirilandShim(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sr_sirilandShim");
}

id objc_msgSend_sruif_aceCommandType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_aceCommandType");
}

id objc_msgSend_sruif_appPunchOutEventWithRefId_URL_appDisplayName_bundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:");
}

id objc_msgSend_sruif_combinedSpeakableText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_combinedSpeakableText");
}

id objc_msgSend_sruif_commandFailedWithRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_commandFailedWithRefId:");
}

id objc_msgSend_sruif_commandSucceededWithRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_commandSucceededWithRefId:");
}

id objc_msgSend_sruif_dialogPhase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_dialogPhase");
}

id objc_msgSend_sruif_hasExternalDomainsForStringWithFormat_shouldRedactLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_hasExternalDomainsForStringWithFormat:shouldRedactLog:");
}

id objc_msgSend_sruif_ignoresMuteSwitch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_ignoresMuteSwitch");
}

id objc_msgSend_sruif_setRecognitionWithCorrectedSpeech_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_setRecognitionWithCorrectedSpeech:");
}

id objc_msgSend_sruif_speakableUtteranceParserForCurrentLanguage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_speakableUtteranceParserForCurrentLanguage");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "start");
}

id objc_msgSend_startAlertSoundID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAlertSoundID");
}

id objc_msgSend_startAutoDismissalAttentionController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAutoDismissalAttentionController");
}

id objc_msgSend_startCorrectedRequestWithText_correctionIdentifier_userSelectionResults_turnIdentifier_machAbsoluteTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCorrectedRequestWithText:correctionIdentifier:userSelectionResults:turnIdentifier:machAbsoluteTime:");
}

id objc_msgSend_startDateSortDescriptorAscending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startDateSortDescriptorAscending:");
}

id objc_msgSend_startIfNeededForTypes_completionQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startIfNeededForTypes:completionQueue:completion:");
}

id objc_msgSend_startIfNeededForTypes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startIfNeededForTypes:error:");
}

id objc_msgSend_startNewConversation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startNewConversation");
}

id objc_msgSend_startPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPlaying");
}

id objc_msgSend_startRequestForSuggestion_inputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRequestForSuggestion:inputType:");
}

id objc_msgSend_startRequestForText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startRequestForText:");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_stateData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateData");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "status");
}

id objc_msgSend_statusBarFrameDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarFrameDidChange");
}

id objc_msgSend_statusBarFrameForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarFrameForSiriPresentation:");
}

id objc_msgSend_statusBarFrameForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarFrameForSuggestionsViewController:");
}

id objc_msgSend_statusBarOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarOrientation");
}

id objc_msgSend_statusViewHeightDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusViewHeightDidChange");
}

id objc_msgSend_statusViewHeightForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusViewHeightForSiriPresentation:");
}

id objc_msgSend_statusViewHeightForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusViewHeightForSuggestionsViewController:");
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stop");
}

id objc_msgSend_stopAttending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAttending");
}

id objc_msgSend_stopAutoDismissalAttentionController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAutoDismissalAttentionController");
}

id objc_msgSend_stopIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopIfNeeded:");
}

id objc_msgSend_stopIfNeededForTypes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopIfNeededForTypes:error:");
}

id objc_msgSend_stopLatencyAnimationIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopLatencyAnimationIfNeeded");
}

id objc_msgSend_stopPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPlaying");
}

id objc_msgSend_stopRecordingSpeech(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopRecordingSpeech");
}

id objc_msgSend_stopRecordingSpeechForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopRecordingSpeechForSiriPresentation:");
}

id objc_msgSend_stopSpeakingForCompactViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeakingForCompactViewController:");
}

id objc_msgSend_stopSpeakingForSAEViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeakingForSAEViewController:");
}

id objc_msgSend_stopSpeakingForSiriPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSpeakingForSiriPresentation:");
}

id objc_msgSend_stopWakeGestureUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopWakeGestureUpdates");
}

id objc_msgSend_storeClientGeneratedDUC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeClientGeneratedDUC:");
}

id objc_msgSend_storeCurrentInstrumentationTurnContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeCurrentInstrumentationTurnContext:");
}

id objc_msgSend_storeDialogPhasesForItemsAtIndexPaths_forConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeDialogPhasesForItemsAtIndexPaths:forConversation:");
}

id objc_msgSend_strategyWithMode_supportedAttentionAwarenessEvents_deviceSupportsRaiseGestureDetection_isWiredMicOrBTHeadsetOrWx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strategyWithMode:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:isWiredMicOrBTHeadsetOrWx:");
}

id objc_msgSend_streamIds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamIds");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string");
}

id objc_msgSend_string_isSameAsUserUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string:isSameAsUserUtterance:");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithValidatedFormat:validFormatSpecifiers:error:");
}

id objc_msgSend_submitTaskRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "submitTaskRequest:error:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtitle");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_suffix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suffix");
}

id objc_msgSend_suggestionId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionId");
}

id objc_msgSend_suggestionTapAnimationWithIndex_isTouchUp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionTapAnimationWithIndex:isTouchUp:");
}

id objc_msgSend_suggestionText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionText");
}

id objc_msgSend_suggestionsMitose(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionsMitose");
}

id objc_msgSend_suggestionsViewController_didHideVibrantView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionsViewController:didHideVibrantView:");
}

id objc_msgSend_suggestionsViewDidShowSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionsViewDidShowSuggestions:");
}

id objc_msgSend_summaryTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "summaryTitle");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_supportedEvents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedEvents");
}

id objc_msgSend_supportsCarPlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsCarPlay");
}

id objc_msgSend_supportsTextInput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsTextInput");
}

id objc_msgSend_supportsTransformationForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsTransformationForAceCommand:");
}

id objc_msgSend_surveySampleRateKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "surveySampleRateKey");
}

id objc_msgSend_switchPresentationToTextInput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchPresentationToTextInput");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronize");
}

id objc_msgSend_synthesizeWithRequest_didFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synthesizeWithRequest:didFinish:");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFillColor");
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGrayColor");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLightGrayTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLightGrayTintColor");
}

id objc_msgSend_systemUptime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemUptime");
}

id objc_msgSend_tagPhrase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tagPhrase");
}

id objc_msgSend_tallParagraphStyleForCurrentScaleWithTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tallParagraphStyleForCurrentScaleWithTextAlignment:");
}

id objc_msgSend_tapToEditPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToEditPresented");
}

id objc_msgSend_tapToEditPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToEditPresented:");
}

id objc_msgSend_tearDown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tearDown");
}

id objc_msgSend_tearDownViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tearDownViews");
}

id objc_msgSend_testingContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testingContext");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textAlignment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textAlignment");
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textColor");
}

id objc_msgSend_textContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textContainer");
}

id objc_msgSend_textInputEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textInputEnabled");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabel");
}

id objc_msgSend_textOfUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textOfUtteranceAtIndex:");
}

id objc_msgSend_textRequestController_didChangeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestController:didChangeText:");
}

id objc_msgSend_textRequestController_didEnableSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestController:didEnableSuggestions:");
}

id objc_msgSend_textRequestController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestController:requestsKeyboardWithCompletion:");
}

id objc_msgSend_textRequestController_siriRequestCommittedWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestController:siriRequestCommittedWithText:");
}

id objc_msgSend_textRequestControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestControllerDidEndEditing:");
}

id objc_msgSend_textRequestControllerDidEndTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestControllerDidEndTextEditMenuInteraction:");
}

id objc_msgSend_textRequestControllerRequestsVoiceActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestControllerRequestsVoiceActivation:");
}

id objc_msgSend_textRequestControllerWillBeginEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestControllerWillBeginEditing:");
}

id objc_msgSend_textRequestControllerWillBeginTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestControllerWillBeginTextEditMenuInteraction:");
}

id objc_msgSend_textRequestSuggestionsButton_didEnableSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestSuggestionsButton:didEnableSuggestions:");
}

id objc_msgSend_textRequestView_didChangeTextFieldText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestView:didChangeTextFieldText:");
}

id objc_msgSend_textRequestView_didEnableSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestView:didEnableSuggestions:");
}

id objc_msgSend_textRequestView_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestView:requestsKeyboardWithCompletion:");
}

id objc_msgSend_textRequestView_siriRequestCommittedWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestView:siriRequestCommittedWithText:");
}

id objc_msgSend_textRequestViewDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestViewDidEndEditing:");
}

id objc_msgSend_textRequestViewDidEndTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestViewDidEndTextEditMenuInteraction:");
}

id objc_msgSend_textRequestViewRequestsVoiceActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestViewRequestsVoiceActivation:");
}

id objc_msgSend_textRequestViewWillBeginEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestViewWillBeginEditing:");
}

id objc_msgSend_textRequestViewWillBeginTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestViewWillBeginTextEditMenuInteraction:");
}

id objc_msgSend_textWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textWithString:");
}

id objc_msgSend_theaterShowtimeListSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "theaterShowtimeListSnippet");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_tipPrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tipPrefix");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_titleBoldedRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleBoldedRange");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleLabel");
}

id objc_msgSend_toPlatteredCardView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toPlatteredCardView");
}

id objc_msgSend_toggle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggle");
}

id objc_msgSend_tokenizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenizer");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topObject");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_touchAttentionAwarenessClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchAttentionAwarenessClient");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_traitCollectionWithPreferredContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithPreferredContentSizeCategory:");
}

id objc_msgSend_traitOverrides(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitOverrides");
}

id objc_msgSend_transcriptItemForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transcriptItemForObject:");
}

id objc_msgSend_transcriptItemForObject_sizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transcriptItemForObject:sizeClass:");
}

id objc_msgSend_transcriptItemWithAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transcriptItemWithAceObject:");
}

id objc_msgSend_transformAddDialogs_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformAddDialogs:forMode:");
}

id objc_msgSend_transformAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformAddViews:forMode:");
}

id objc_msgSend_transformAddViews_mode_idiom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformAddViews:mode:idiom:");
}

id objc_msgSend_transformModel_mode_currentIdiom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformModel:mode:currentIdiom:");
}

id objc_msgSend_transformVisualResponse_forMode_idiom_shouldHideSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformVisualResponse:forMode:idiom:shouldHideSnippet:");
}

id objc_msgSend_transitionController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionController");
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCoordinator");
}

id objc_msgSend_transitionDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionDuration");
}

id objc_msgSend_transitionDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionDuration:");
}

id objc_msgSend_transitionFromViewController_toViewController_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFromViewController:toViewController:duration:options:animations:completion:");
}

id objc_msgSend_transitionMergedResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionMergedResults");
}

id objc_msgSend_transitionToExpandablePlatterStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToExpandablePlatterStyle:");
}

id objc_msgSend_transitionToRemovedResponseElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToRemovedResponseElements:");
}

id objc_msgSend_transitionToResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToResult");
}

id objc_msgSend_transitionToSuggestionsCollapsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToSuggestionsCollapsed");
}

id objc_msgSend_transitionToSuggestionsCollapsedWithIndex_animated_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToSuggestionsCollapsedWithIndex:animated:completionBlock:");
}

id objc_msgSend_transitionToSuggestionsExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToSuggestionsExpanded");
}

id objc_msgSend_transitionToUpdatedContentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToUpdatedContentInset");
}

id objc_msgSend_transitionVoiceLoadingToLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionVoiceLoadingToLoading");
}

id objc_msgSend_transitionWasCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionWasCancelled");
}

id objc_msgSend_translationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "translationInView:");
}

id objc_msgSend_triggerSmartDialogAnimationWithDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerSmartDialogAnimationWithDelay:");
}

id objc_msgSend_trustsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustsURL:");
}

id objc_msgSend_turnIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnIdentifier");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_typedData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typedData");
}

id objc_msgSend_uiPresentationIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uiPresentationIdentifier");
}

id objc_msgSend_understandingOnDeviceAssetsAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "understandingOnDeviceAssetsAvailable");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_updateBackgroundIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBackgroundIfNeeded");
}

id objc_msgSend_updateBackgroundView_smartDialogView_isSnippetAsyncColored_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBackgroundView:smartDialogView:isSnippetAsyncColored:");
}

id objc_msgSend_updateCacheWithGuideUpdate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCacheWithGuideUpdate:completion:");
}

id objc_msgSend_updateClientSettingsWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateClientSettingsWithBlock:");
}

id objc_msgSend_updateConstraintConstants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateConstraintConstants");
}

id objc_msgSend_updateDictationResult_withAlternativeUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDictationResult:withAlternativeUtteranceAtIndex:");
}

id objc_msgSend_updateInteractiveTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInteractiveTransition:");
}

id objc_msgSend_updateKeyboardInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateKeyboardInfo:");
}

id objc_msgSend_updateLoadingPillSizeWithCandidateSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLoadingPillSizeWithCandidateSize:");
}

id objc_msgSend_updateMinimumIdleTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMinimumIdleTimeInterval:");
}

id objc_msgSend_updateResultSizeWithResultSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateResultSizeWithResultSize:");
}

id objc_msgSend_updateSessionIDFromUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSessionIDFromUUIDString:");
}

id objc_msgSend_updateSharedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSharedState:");
}

id objc_msgSend_updateSpeechRecognitionHypothesisForSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSpeechRecognitionHypothesisForSuggestion:");
}

id objc_msgSend_updateSuggestedUtterances_forLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSuggestedUtterances:forLanguage:");
}

id objc_msgSend_updateSystemUIForAddViews_viewMode_lockState_isInAmbient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemUIForAddViews:viewMode:lockState:isInAmbient:");
}

id objc_msgSend_updateTopInset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTopInset:animated:");
}

id objc_msgSend_updateUserUtteranceVisibilityIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUserUtteranceVisibilityIfNeeded");
}

id objc_msgSend_updateWithUpdateViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithUpdateViewsCommand:");
}

id objc_msgSend_updatedItemIndexPaths(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedItemIndexPaths");
}

id objc_msgSend_updatedUserUtteranceForRefId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedUserUtteranceForRefId:");
}

id objc_msgSend_updatedUserUtteranceForSiriViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedUserUtteranceForSiriViewController:");
}

id objc_msgSend_uppercaseStringWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseStringWithLocale:");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "url");
}

id objc_msgSend_useDeviceSpeakerForTTS(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useDeviceSpeakerForTTS");
}

id objc_msgSend_userAttentionController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAttentionController");
}

id objc_msgSend_userAttentionController_didGainAttentionWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAttentionController:didGainAttentionWithEvent:");
}

id objc_msgSend_userAttentionController_didLoseAttentionWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAttentionController:didLoseAttentionWithEvent:");
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDefaults");
}

id objc_msgSend_userDidReportConcernWithModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDidReportConcernWithModel:");
}

id objc_msgSend_userDrilledIntoSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userDrilledIntoSnippet");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInput(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInput");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceStyle");
}

id objc_msgSend_userSelectionResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userSelectionResults:");
}

id objc_msgSend_userStringForError_reflectionDialogWasPlayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userStringForError:reflectionDialogWasPlayed:");
}

id objc_msgSend_userTouchedSnippet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userTouchedSnippet");
}

id objc_msgSend_userTypedInSiri(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userTypedInSiri");
}

id objc_msgSend_userUtterance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userUtterance");
}

id objc_msgSend_utsId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utsId");
}

id objc_msgSend_utteranceIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utteranceIndex");
}

id objc_msgSend_utteranceTextDidBecomeFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utteranceTextDidBecomeFirstResponder:");
}

id objc_msgSend_utteranceTextDidReceiveReturnKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utteranceTextDidReceiveReturnKey:");
}

id objc_msgSend_utteranceTextDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utteranceTextDidResignFirstResponder:");
}

id objc_msgSend_utterances(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utterances");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueAnnotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueAnnotation");
}

id objc_msgSend_velocityInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "velocityInView:");
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalSizeClass");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController");
}

id objc_msgSend_viewController_didFinishEditingUtteranceWithText_originalUserUtterance_selectionResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:didFinishEditingUtteranceWithText:originalUserUtterance:selectionResults:");
}

id objc_msgSend_viewController_openURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:openURL:completion:");
}

id objc_msgSend_viewController_performAceCommands_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:performAceCommands:completion:");
}

id objc_msgSend_viewController_reduceOrbOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:reduceOrbOpacity:");
}

id objc_msgSend_viewController_requestsHostBackgroundBlurVisible_reason_fence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:requestsHostBackgroundBlurVisible:reason:fence:");
}

id objc_msgSend_viewController_siriRequestEnteredWithSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:siriRequestEnteredWithSuggestion:");
}

id objc_msgSend_viewController_siriRequestEnteredWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:siriRequestEnteredWithText:");
}

id objc_msgSend_viewController_willChangeKeyboardVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:willChangeKeyboardVisibility:");
}

id objc_msgSend_viewControllerDidPresentUserInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerDidPresentUserInterface:");
}

id objc_msgSend_viewControllerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForKey:");
}

id objc_msgSend_viewControllerViewWillDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerViewWillDisappear:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewForKey:");
}

id objc_msgSend_viewForModel_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewForModel:mode:");
}

id objc_msgSend_viewForSnippetModel_bundleName_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewForSnippetModel:bundleName:mode:");
}

id objc_msgSend_viewId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewId");
}

id objc_msgSend_viewRegionForPresentedAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewRegionForPresentedAceObject:");
}

id objc_msgSend_viewStackContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewStackContainer");
}

id objc_msgSend_views(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "views");
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleViewController");
}

id objc_msgSend_visualMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visualMode");
}

id objc_msgSend_visualResponse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visualResponse");
}

id objc_msgSend_visualResponseProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visualResponseProvider");
}

id objc_msgSend_visualStylingProviderForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visualStylingProviderForCategory:");
}

id objc_msgSend_voiceFeedbackSetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceFeedbackSetting");
}

id objc_msgSend_voiceName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voiceName");
}

id objc_msgSend_voicemailPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "voicemailPlayer");
}

id objc_msgSend_wakeGestureManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wakeGestureManager");
}

id objc_msgSend_wasAddedToTranscript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasAddedToTranscript");
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakObjectsHashTable");
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whiteColor");
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceAndNewlineCharacterSet");
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceCharacterSet");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_willBeginEditingFromUtterancePresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willBeginEditingFromUtterancePresenter:");
}

id objc_msgSend_willBeginEditingFromUtteranceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willBeginEditingFromUtteranceView:");
}

id objc_msgSend_willBeginEditingFromUtteranceViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willBeginEditingFromUtteranceViewController:");
}

id objc_msgSend_willDismissEditableUtterancePresenter_transitionCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willDismissEditableUtterancePresenter:transitionCoordinator:");
}

id objc_msgSend_willDismissModalContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willDismissModalContent");
}

id objc_msgSend_willEnterForegroundHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willEnterForegroundHandler");
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_willPresentModalContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willPresentModalContent");
}

id objc_msgSend_willResignActiveHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willResignActiveHandler");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene");
}

id objc_msgSend_words(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "words");
}

id objc_msgSend_wrapCommandInStartLocalRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wrapCommandInStartLocalRequest:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_zoomLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomLevel");
}
